["```\njobs:\n```", "```\n  deployment:\n```", "```\n    runs-on: ubuntu-latest\n```", "```\n    environment: prod\n```", "```\njobs:\n```", "```\n  deployment:\n```", "```\n    runs-on: ubuntu-latest\n```", "```\n    environment: \n```", "```\n      name: production\n```", "```\n      url: https://writeabout.net\n```", "```\n$ az webapp deployment list-publishing-profiles \\\n    --resource-group $rgname \\\n    --name $appName \\\n    --xml\n```", "```\n- name: Build and publish with dotnet\n```", "```\n  working-directory: ch9_release/src/Tailwind.Traders.Web\n```", "```\n  run: |\n```", "```\n    dotnet build --configuration Release\n```", "```\n    dotnet publish -c Release -o publish\n```", "```\n- name: Upload Artifact\n```", "```\n  uses: actions/upload-artifact@v2\n```", "```\n  with:\n```", "```\n    name: website\n```", "```\n    path: ch9_release/src/Tailwind.Traders.Web/publish\n```", "```\nDeploy:\n```", "```\n  runs-on: ubuntu-latest\n```", "```\n  environment: prod\n```", "```\n  needs: Build\n```", "```\n- uses: actions/download-artifact@v2\n```", "```\n  with:\n```", "```\n    name: website\n```", "```\n    path: website\n```", "```\n- name: Run Azure webapp deploy action using publish profile credentials\n```", "```\n  uses: azure/webapps-deploy@v2\n```", "```\n  with:\n```", "```\n    app-name: ${{ env.appName }}\n```", "```\n    slot-name: Production\n```", "```\n    publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}\n```", "```\n    package: website\n```", "```\nu=https://${{ env.appName }}.azurewebsites.net/\n```", "```\nstatus=`curl --silent --head $u | head -1 | cut -f 2 -d' '`\n```", "```\nif [ \"$status\" != \"200\" ]\n```", "```\nthen\n```", "```\n  echo \"Wrong HTTP Status. Actual: '$status'\"\n```", "```\n  exit 1\n```", "```\nfi\n```", "```\njobs:\n```", "```\n  Build:\n```", "```\n    runs-on: ubuntu-latest\n```", "```\n    outputs:\n```", "```\n      image: ${{ steps.build-image.outputs.image }}\n```", "```\n- name: Configure AWS credentials\n```", "```\n  uses: aws-actions/configure-aws-credentials@v1\n```", "```\n  with:\n```", "```\n    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n```", "```\n    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n```", "```\n    aws-region: ${{ env.AWS_REGION }}\n```", "```\n    mask-aws-account-id: no\n```", "```\n- name: Login to Amazon ECR\n```", "```\n  id: login-ecr\n```", "```\n  uses: aws-actions/amazon-ecr-login@v1\n```", "```\n- name: Build, tag, and push image to Amazon ECR\n```", "```\n  id: build-image\n```", "```\n  env:\n```", "```\n    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n```", "```\n    IMAGE_TAG: ${{ github.sha }}\n```", "```\n  working-directory: ch9_release/src/Tailwind.Traders.Web\n```", "```\n  run: |\n```", "```\n    imagename=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n```", "```\n    echo \"Build and push $imagename\"\n```", "```\n    docker build -t $imagename .\n```", "```\n    docker push $imagename\n```", "```\n    echo \"::set-output name=image::$imagename\"\n```", "```\nDeploy:\n```", "```\n  runs-on: ubuntu-latest\n```", "```\n  environment: prod\n```", "```\n  needs: Build\n```", "```\n- name: Fill in the new image ID in the ECS task definition\n```", "```\n  id: task-def\n```", "```\n  uses: aws-actions/amazon-ecs-render-task-definition@v1\n```", "```\n  with:\n```", "```\n    task-definition: ${{ env.ECS_TASK_DEFINITION }}\n```", "```\n    container-name: ${{ env.CONTAINER_NAME }}\n```", "```\n    image: ${{ needs.Build.outputs.image }}\n```", "```\n- name: Deploy Amazon ECS task definition\n```", "```\n  uses: aws-actions/amazon-ecs-deploy-task-definition@v1\n```", "```\n  with:\n```", "```\n    task-definition: ${{ steps.task-def.outputs.task-definition }}\n```", "```\n    service: ${{ env.ECS_SERVICE }}\n```", "```\n    cluster: ${{ env.ECS_CLUSTER }}\n```", "```\n    wait-for-service-stability: true\n```", "```\ngcloud container clusters create $GKE_CLUSTER --num-nodes=1\n```", "```\nspec:\n```", "```\n  containers:\n```", "```\n  - name: $GKE_APP_NAME\n```", "```\n    image: $GKE_REGION-docker.pkg.dev/$GKE_PROJECT/$GKE_PROJECT/$GKE_APP_NAME:$GITHUB_SHA\n```", "```\n    ports:\n```", "```\n    - containerPort: 80\n```", "```\n    env:\n```", "```\n      - name: PORT\n```", "```\n        value: \"80\"\n```", "```\nenvsubst < Deployment.yml | kubectl apply -f -\n```", "```\nspec:\n```", "```\n  type: LoadBalancer\n```", "```\n  selector:\n```", "```\n    app: $GKE_APP_NAME\n```", "```\n  ports:\n```", "```\n  - port: 80\n```", "```\n    targetPort: 80\n```", "```\n$ kubectl get service\n```", "```\n$ cat key.json | base64\n```", "```\n- uses: google-github-actions/setup-gcloud@v0.2.0\n```", "```\n  with:\n```", "```\n    service_account_key: ${{ secrets.GKE_SA_KEY }}\n```", "```\n    project_id: ${{ secrets.GKE_PROJECT }}\n```", "```\n    export_default_credentials: true\n```", "```\ngcloud auth configure-docker \\\n```", "```\n    $GKE_REGION-docker.pkg.dev \\\n```", "```\n    --quiet\n```", "```\n- uses: google-github-actions/get-gke-credentials@v0.2.1\n```", "```\n  with:\n```", "```\n    cluster_name: ${{ env.GKE_CLUSTER }}\n```", "```\n    location: ${{ env.GKE_ZONE }}\n```", "```\n    credentials: ${{ secrets.GKE_SA_KEY }}\n```", "```\nenvsubst < Service.yml | kubectl apply -f -\n```", "```\nenvsubst < Deployment.yml | kubectl apply -f –\n```", "```\n{\n```", "```\n    \"name\": \"My Workflow Template\",\n```", "```\n    \"description\": \"Description of template workflow\",\n```", "```\n    \"iconName\": \"my-template\",\n```", "```\n    \"categories\": [\n```", "```\n        \"javascript\"\n```", "```\n    ],\n```", "```\n    \"filePatterns\": [\n```", "```\n        \"package.json$\",\n```", "```\n        \"^Dockerfile\",\n```", "```\n        \".*\\\\.md$\"\n```", "```\n    ]\n```", "```\n}\n```", "```\non: \n```", "```\n  workflow_call:\n```", "```\non:\n```", "```\n  workflow_call:\n```", "```\n    inputs:\n```", "```\n      my_environment:\n```", "```\n        description: 'The environment to deploy to.'\n```", "```\n        default: 'Prod'\n```", "```\n        required: true\n```", "```\n        type: string\n```", "```\n    secrets:\n```", "```\n      my_token:\n```", "```\n        description: 'The token to access the environment'\n```", "```\n        required: true\n```", "```\n{owner}/{repo}/{path}/{filename}@{ref}\n```", "```\njobs:\n```", "```\n  call-workflow-1:\n```", "```\n    uses: org/repo/.github/workflows/reusable.yml@v1\n```", "```\n    with: \n```", "```\n      my_environment: development\n```", "```\n    secrets:\n```", "```\n      my_token: ${{ secrets.TOKEN }}\n```", "```\n$ git clone \\\n   https://github.com/GoogleCloudPlatform/fourkeys.git\n$ cd fourkeys\n$ gcloud config set project <project-id>\n$ script setup.log -c ./setup.sh\n```", "```\n$ echo $(terraform output -raw event_handler_endpoint)\n> https://event-handler-dup4ubihba-uc.a.run.app\n$ echo $(terraform output -raw event_handler_secret)\n> 241d0765b5a6cb80208e66a2d3e39d254051377f\n```"]