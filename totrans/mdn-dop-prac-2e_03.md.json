["```\n$ sudo apt-get update\n$ sudo apt-get install -y ca-certificates curl gnupg\n```", "```\n$ sudo install -m 0755 -d /etc/apt/keyrings\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \\\nsudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n$ sudo chmod a+r /etc/apt/keyrings/docker.gpg\n```", "```\n$ echo \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" \\\nsigned-by=/etc/apt/keyrings/docker.gpg] \\\nhttps://download.docker.com/linux/ubuntu \\\n\"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" \\\nstable\" | sudo tee /etc/apt/sources.list.d/docker.list \\\n> /dev/null\n```", "```\n$ sudo apt-get update\n$ sudo apt-get -y install docker-ce docker-ce-cli \\\ncontainerd.io docker-buildx-plugin docker-compose-plugin\n```", "```\n$ sudo docker --version\n```", "```\nDocker version 24.0.2, build cb74dfc\n```", "```\n$ sudo usermod -a -G docker <username>\n```", "```\n$ docker run hello-world\n```", "```\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n719385e32844: Pull complete\nDigest: sha256:fc6cf906cbfa013e80938cdf0bb199fbdbb86d6e3e013783e5a766f50f5dbce0\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker!\n```", "```\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1\\. The Docker client contacted the Docker daemon.\n 2\\. The Docker daemon pulled the hello-world image from Docker Hub.(amd64).\n 3\\. The Docker daemon created a new container from that image that runs the executable \nthat produces the output you are currently reading.\n4\\. The Docker daemon streamed that output to the Docker client, which sent it to your \nTerminal:\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n```", "```\n$ docker info | grep 'Storage Driver'\nStorage Driver: overlay2\n```", "```\n$ sudo vim /etc/docker/daemon.json\n```", "```\n{\n  \"storage-driver\": \"devicemapper\"\n}\n```", "```\n$ sudo systemctl restart docker\n```", "```\n$ sudo systemctl status docker\n```", "```\n$ docker info | grep 'Storage Driver'\nStorage Driver: devicemapper\nWARNING: The devicemapper storage-driver is deprecated, and will be removed in a future \nrelease.\n         Refer to the documentation for more information: https://docs.docker.com/go/\nstorage-driver/\nWARNING: devicemapper: usage of loopback devices is strongly discouraged for production \nuse.\n         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n```", "```\n$ sudo vim /etc/docker/daemon.json\n```", "```\n{\n  \"storage-driver\": \"overlay2\"\n}\n```", "```\n$ sudo systemctl restart docker\n$ sudo systemctl status docker\n```", "```\n$ docker info | grep 'Storage Driver'\nStorage Driver: overlay2\n```", "```\n$ docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]\n```", "```\n$ docker run hello-world\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n0e03bdcc26d7: Pull complete\nDigest: sha256:e7c70bb24b462baa86c102610182e3efcb12a04854e8c582\n838d92970a09f323\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker!\n...\n```", "```\n$ docker run nginx:1.18.0\nUnable to find image 'nginx:1.18.0' locally\n1.18.0: Pulling from library/nginx\n852e50cd189d: Pull complete\n48b8657f2521: Pull complete\nb4f4d57f1a55: Pull complete\nd8fbe49a7d55: Pull complete\n04e4a40fabc9: Pull complete\nDigest: sha256:2104430ec73de095df553d0c7c2593813e01716a48d66f\n85a3dc439e050919b3\nStatus: Downloaded newer image for nginx:1.18.0\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform\nconfiguration\n/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-\nlisten-on-ipv6-by-default.sh\n10-listen-on-ipv6-by-default.sh: Getting the checksum of /etc/nginx/conf.d/default.conf\n10-listen-on-ipv6-by-default.sh: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-\nenvsubst-on-templates.sh\n/docker-entrypoint.sh: Configuration complete; ready for\nstart up\n```", "```\n$ docker run -d nginx:1.18.0\nbeb5dfd529c9f001539c555a18e7b76ad5d73b95dc48e8a35aecd7471ea938fc\n```", "```\n$ docker ps\nCONTAINER ID  IMAGE         COMMAND        CREATED        STATUS        PORTS   NAMES\nbeb5dfd529c9  nginx:1.18.0  \"/docker-      2 minutes ago  Up 2 minutes  80/tcp  fervent_\n                            entrypoint.…\"                                       shockley\n```", "```\n$ docker logs beb5dfd529c9\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform \nconfiguration\n...\n/docker-entrypoint.sh: Configuration complete; ready for start up\n```", "```\n$ docker run busybox echo 'Hello World!'\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\n325d69979d33: Pull complete\nDigest: sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b\nStatus: Downloaded newer image for busybox:latest\nHello World!\n```", "```\n$ docker run -it --rm busybox /bin/sh\n/ # echo 'Hello world!'\nHello world!\n/ # wget http://example.com\nConnecting to example.com (93.184.216.34:80)\nsaving to 'index.html'\nindex.html           100% |***********************************\n****|  1256  0:00:00 ETA\n'index.html' saved\n/ # exit\n```", "```\n$ docker ps -a\nCONTAINER ID  IMAGE   COMMAND        CREATED     STATUS    PORTS   NAMES\nbeb5dfd529c9  nginx:  \"/docker-      17 minutes  Up 17     80/tcp  fervent_\n              1.18.0  entrypoint.…\"  ago         minutes           shockley\n```", "```\n$ docker run -d --name nginx --restart unless-stopped \\\n-p 80:80 --memory 1000M --memory-reservation 250M nginx:1.18.0\n```", "```\n$ docker ps -a\nCONTAINER ID  IMAGE   COMMAND         CREATED     STATUS   PORTS       NAMES\n06fc749371b7  nginx   \"/docker-       17 seconds  Up 16    0.0.0.0:    nginx   \n                      entrypoint.…\"   ago         seconds  80->80/tcp  \nbeb5dfd529c9  nginx:  \"/docker-       22 minutes  Up 22    80/tcp      fervent_shockley\n              1.18.0  entrypoint.…\"   ago         minutes\n```", "```\n$ curl localhost:80\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</html>\n```", "```\n$ docker stop nginx\n```", "```\n$ docker start nginx\n```", "```\n$ docker stop nginx && docker rm nginx\n```", "```\n$ docker rm -f nginx\n```", "```\n$ docker info | grep \"Logging Driver\"\nLogging Driver: json-file\n```", "```\n$ sudo vim /etc/docker/daemon.json\n```", "```\n{\n  \"log-driver\": \"journald\"\n}\n```", "```\n$ sudo systemctl restart docker\n```", "```\n$ sudo systemctl status docker\n```", "```\n$ docker info | grep \"Logging Driver\"\nLogging Driver: journald\n```", "```\n$ docker run --name nginx-journald -d nginx\n66d50cc11178b0dcdb66b114ccf4aa2186b510eb1fdb1e19d563566d2e96140c\n```", "```\n$ sudo journalctl CONTAINER_NAME=nginx-journald\n...\nJun 01 06:11:13 99374c32101c fb8294aece02[10826]: 10-listen-on-ipv6-by-default.sh: info: \nEnabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n...\nJun 01 06:11:13 99374c32101c fb8294aece02[10826]: 2023/06/01 06:11:13 [notice] 1#1: start \nworker process 30\n...\n```", "```\n$ vim /etc/docker/daemon.json\n```", "```\n{\n  \"log-driver\": \"splunk\",\n  \"log-opts\": {\n    \"splunk-token\": \"<Splunk HTTP Event Collector token>\",\n    \"splunk-url\": \"<Splunk HTTP(S) url>\"\n  }\n}\n```", "```\n$ sudo systemctl restart docker\n```", "```\n$ sudo systemctl status docker\n```", "```\n$ docker info | grep \"Logging Driver\"\nLogging Driver: splunk\n```", "```\n$ docker run --name nginx-splunk -d nginx\ndedde062feba33f64efd89ef9102c7c93afa854473cda3033745d35d9065c9e5\n```", "```\n$ docker run --name nginx-json-file --log-driver json-file -d nginx\n379eb8d0162d98614d53ae1c81ea1ad154745f9edbd2f64cffc2279772198bb2\n```", "```\n$ cat /var/lib/docker/containers\\\n/379eb8d0162d98614d53ae1c81ea1ad154745f9edbd2f64cffc2279772198bb2\\\n/379eb8d0162d98614d53ae1c81ea1ad154745f9edbd2f64cffc2279772198bb2-json.log\n{\"log\":\"/docker-entrypoint.sh: /docker-entrypoint.d/ is not\nempty, will attempt to perform configuration\\n\",\"stream\":\"\nstdout\",\"time\":\"2022-06-01T06:27:05.922950436Z\"}\n...\n{\"log\":\"/docker-entrypoint.sh: Configuration complete; ready\nfor start up\\n\",\"stream\":\"stdout\",\"time\":\"2023-06-01T06:27:\n05.937629749Z\"}\n```", "```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\nmodern-devops\n$ cd modern-devops/ch3/prometheus/\n$ sudo bash prometheus_setup.sh\n```", "```\n$ sudo systemctl status prometheus\nprometheus.service – Prometheus\n   Loaded: loaded (/etc/systemd/system/prometheus.service; enabled; vendor preset: \nenabled)\n   Active: active (running) since Tue 2023-06-01 09:26:57 UTC; 1min 22s ago\n```", "```\n$ docker run -d --restart always --name cadvisor -p 8080:8080 \\\n-v \"/:/rootfs:ro\" -v \"/var/run:/var/run:rw\" -v \"/sys:/sys:ro\" \\\n-v \"/var/lib/docker/:/var/lib/docker:ro\" google/cadvisor:latest\n```", "```\n$ cd ~/modern-devops/ch3/prometheus/\n$ sudo bash node_exporter_setup.sh\n```", "```\n$ sudo vim /etc/prometheus/prometheus.yml\n  ...\n  - job_name: 'node_exporter'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['localhost:9100', '<Docker_IP>:9100']\n  - job_name: 'Docker Containers'\n    static_configs:\n      - targets: ['<Docker_IP>:8080']\n```", "```\n$ sudo systemctl restart prometheus\n```", "```\n$ docker run -d --name web -p 8081:80 nginx\nf9b613d6bdf3d6aee0cb3a08cb55c99a7c4821341b058d8757579b52cabbb0f5\n```", "```\ncontainer_memory_usage_bytes{name=~\"web\"}\n```", "```\n$ ab -n 100000 http://localhost:8081/\n```", "```\nnode_cpu{instance=\"<Docker_IP>:9100\",job=\"node_exporter\"}\n```", "```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\nmodern-devops \n$ cd modern-devops/ch3/docker-compose\n$ ls -l\ntotal 16\n-rw-r--r-- 1 root root 681 Nov 25 06:11 app.py\n-rw-r--r-- 1 root root 389 Nov 25 06:45 docker-compose.yaml\n-rw-r--r-- 1 root root 238 Nov 25 05:27 Dockerfile\n-rw-r--r-- 1 root root  12 Nov 25 05:26 requirements.txt\n```", "```\nimport time\nimport redis\nfrom flask import Flask\nfrom datetime import datetime\napp = Flask(__name__)\ncache = redis.Redis(host='redis', port=6379)\ndef get_last_visited():\n    try:\n        last_visited = cache.getset('last_visited',str(datetime.now().strftime(\"%Y-%m-%d, \n%H:%M:%S\")))\n        if last_visited is None:\n            return cache.getset('last_visited',str(datetime.now().strftime(\"%Y-%m-%d, \n%H:%M:%S\")))\n        return last_visited\n    except redis.exceptions.ConnectionError as e:\n        raise e\n@app.route('/')\ndef index():\n    last_visited = str(get_last_visited().decode('utf-8'))\n    return 'Hi there! This page was last visited on {}.\\n'.format(last_visited)\n```", "```\nflask\nredis\n```", "```\nversion: \"2.4\"\nservices:\n  flask:\n    image: \"bharamicrosystems/python-flask-redis:latest\"\n    ports:\n      - \"80:5000\"\n    networks:\n      - flask-app-net\n  redis:\n    image: \"redis:alpine\"\n    networks:\n      - flask-app-net\n    command: [\"redis-server\", \"--appendonly\", \"yes\"]\n    volumes:\n      - redis-data:/data\nnetworks:\n  flask-app-net:\n    driver: bridge\nvolumes:\n  redis-data:\n```", "```\n$ docker compose up -d\n[+] Running 17/17\nflask 9 layers []      0B/0B      Pulled 10.3s\nredis 6 layers []      0B/0B      Pulled 9.1s\n[+] Building 0.0s (0/0)\n[+] Running 4/4\nNetwork docker-compose_flask-app-net  Created 0.1s\nVolume \"docker-compose_redis-data\"    Created 0.0s\nContainer docker-compose-flask-1      Started 3.8s\nContainer docker-compose-redis-1      Stated\n```", "```\n$ docker ps\nCONTAINER ID  IMAGE              COMMAND         CREATED    STATUS   PORTS             NAMES\n9151e72f5d66  redis:             \"docker-        3 minutes  Up 3     6379/tcp          docker-compose\n              alphone            entrypoint.s…\"  ago        minutes                    -redis-1\n9332c2aaf2c4  bharamicrosystems  \"flask run\"     3 minutes  Up 3     0.0.0.0:80->      docker-compose\n              /python-flask-                     ago        minutes  5000/tcp,         -flask-1\n              redis:latest                                           :::80->5000/tcp\n```", "```\n$ curl localhost\nHi there! This page was last visited on 2023-06-01, 06:54:27.\n```", "```\n$ curl localhost\nHi there! This page was last visited on 2023-06-01, 06:54:28.\n$ curl localhost\nHi there! This page was last visited on 2023-06-01, 06:54:51.\n$ curl localhost\nHi there! This page was last visited on 2023-06-01, 06:54:52.\n```", "```\n$ curl localhost && date\nHi there! This page was last visited on 2023-06-01, 06:54:53.\nThu Jun  1 06:55:50 UTC 2023\n```", "```\n$ docker compose restart redis\n[+] Restarting 1/1\nContainer docker-compose-redis-1  Started\n```", "```\n$ curl localhost\nHi there! This page was last visited on 2023-06-01, 06:55:50.\n```", "```\nversion: \"2.4\"\nservices:\n  flask:\n    image: \"bharamicrosystems/python-flask-redis:latest\"\n    ports:\n      - \"80:5000\"\n    networks:\n      - flask-app-net\n  redis:\n    image: \"redis:alpine\"\n    networks:\n      - flask-app-net\n    command: [\"redis-server\", \"--appendonly\", \"yes\"]\n    volumes:\n      - redis-data:/data\nnetworks:\n  flask-app-net:\n    driver: bridge\nvolumes:\n  redis-data:\n```", "```\nweb:\n  build: .\n  environment:\n    DEBUG: 'true'\nredis:\n  ports:\n    - 6379:6379\n```", "```\n$ docker-compose up --no-deps -d <container_service_name>\n```"]