["```\n<%- |\nString $options = '',\nEnum[full,partial,none] $application_mode = 'none',\nBoolean $cluster_enabled,\n|-%>\n```", "```\n<%#- An example comment. -%>\n```", "```\napplication = <%= $facts[application_name] -%>\n```", "```\n<% if getvar(facts.application_name) { -%>\n application = <%= $facts[application_name] -%>\n<% } -%>\n```", "```\n<%-# I don't finish commenting here  -%> but on the next line\n-%>\n```", "```\nfile { '/etc/exampleapp.conf':\n  ensure => file,\n  content => epp('exampleapp/exampleapp.conf.epp', {'version' => '1', 'clustered' => false}),\n}\n```", "```\n$vault_keypair = { 'password' => Deferred('vault_lookup::lookup', [\"secret/examleapp\", 'https://vault:8200']), }\nfile { '/etc/exampleapp_secret.conf':\n  ensure => file,\n  content => Deferred('inline_epp', ['PASSWORD=<%= $password.unwrap %>', $vault_keypair]),\n}\n```", "```\n<% if @exampleapp_extras!= \"NONE\" %>extras<%= @exampleapp_version%><% end %>\n<% unless @exampleapp_key.nil? -%>\nkey <%= @exampleapp_%>\n<% end -%>\n```", "```\n<% @array_of_settings.each do |setting| -%>\n<%= val %>\n<% end -%>\n```", "```\n<%= scope.call_function('downcase', [@example_variable]) %>\n```", "```\nfile { '/etc/exampleapp.conf':\n  ensure => file,\n  content => template('exampleapp/exampleapp.conf.erb'),\n}\n```", "```\ncontent => [ template('exampleapp/exampleapp.conf.erb'), template('exampleapp/exampleapp2.conf.erb')]\n```", "```\n<function acting on data> | <parameter(s)> | { lambda of Puppet code }\n```", "```\n['first', 'second', 'third'].each | String $x | { notice $x }\n```", "```\n['first', 'second', 'third'].each | $index $value | { notice \"index $index contains $value\" }\n```", "```\n[{ key1 => ['value1', 'value2'], key2 => 'val2' }].each | $key, $value_array | {\n  $value_array.each | $value | {\n    notice $value\n  }\n}\n```", "```\nInteger[100, 151].slice(3) | Array $numbers | { notice $numbers }\n```", "```\nInteger[100, 151].slice(3) | Integer $first, Integer $second, Integer $third  | { notice $numbers }\n```", "```\nInteger[100, 150].step(3) | Integer $numbers | { notice $numbers }\n```", "```\nInteger[100, 151].all | Integer $number | { $number > 99 }.notice()\n```", "```\nInteger[100, 151].index | Integer $number | { $number == 120 }.notice()\n```", "```\n[2048, 3096, 1024].map | $size | {  $size / 1024 } .notice()\n```", "```\n[[1,2,3], [], [a,b,c]].filter | $array | { $array.size > 0   } .notice()\n```", "```\n[2, 4, 8].reduce(1) | $total, $number | {  $total + $number } .notice()\n```", "```\nInteger[100, 151].map | Integer $number | { if $number == 101 { next(1984) } if $number > 103 { break() } $number }.notice()\n```", "```\nclass example {\n  Integer[100, 151].map | Integer $number | { if $number == 101 { next(1984) } if $number > 103 { return() } $number }.notice()\n} \n```", "```\n$example = {first => { second => [{a => 10, b => 20}, {d => 30, e => 40}]}}\n$example.dig(first, second, 1, c ).then |$x| { $x / 10 }.notice()\n```", "```\n$example.dig(first, second, 1, c ).then |$x| { $x / 10 }.lest() || { 0 } .notice()\n```", "```\nInteger[1,$instance_number].each |Integer $id | {\n  file {\"/opt/app/exampleapp/instance${id}\":\n    ensure => directory,\n  }\n}\n```", "```\nif $example_bool {\n  notice 'It was true'\n}\n```", "```\nif $example_bool {\n  notice 'It was true'\n}else{\n  notice 'It was false'\n}\n```", "```\nif $example_bool {\n  notice 'It was true'\n}elsif $value > 2{\n  notice 'It was false and value is greater than 2'\n}else {\n  notice 'It was false and the value was 2 or less'\n}\n```", "```\nunless $example_bool {\n  notice 'It was false'\n}else{\n  notice 'It was true'\n}\n```", "```\ncase $facts[' hardwareisa'] {\n  'sparc', 'powerpc': { include profile::unix}\n  'i686', 'i386': { include profile::linux::32bit}\n  /(*64)/: { include profile::linux::64bit}\n  default: { include profile::default }\n}\n```", "```\n$apache_package_name = $facts['os']['family'] ? {\n  'RedHat' => 'httpd',\n  /(Debian|Ubuntu)/ => ' apache2 ',\n  'Windows' => 'apache-httpd',\n  default => 'httpd',\n}\npackage { $apache_package_name }\n```", "```\n/(*64)/: { include profile::linux::${1} }\n```"]