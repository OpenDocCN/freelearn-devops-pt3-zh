- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Continuous Exploration and Finding New Features
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Continuous Exploration, product management works with people both inside
    and outside the **Agile Release Train** (**ART**) to find features that will provide
    value to the customer, explore the needs and wants of the customer, verify the
    feasibility of new features in the current architecture, and prepare new features
    to be developed by the ART.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see in the following illustration, Continuous Exploration, the first
    stage of the Continuous Delivery Pipeline, establishes the *trigger* for subsequent
    development:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18756_10_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
- en: Figure 10.1 – Continuous Delivery Pipeline (© Scaled Agile, All Rights Reserved)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'In a nutshell, the following activities will be discussed in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesizing the customer value
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collaboration and research
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discussions about architecture
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Synthesizing the work
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The work that product management does during Continuous Exploration is important
    for the ART in that it helps set the context for the ART to execute the shared
    mission or vision. Let’s view this work that product management performs to prepare
    for upcoming **Program** **Increments** (**PI**).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesize customer value
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: “*If I asked people what they wanted, they would have said faster horses.*”
    This quote, commonly (and possibly incorrectly) attributed to Henry Ford, highlights
    a problem that product managers have when looking for new features or new products.
    Customers may simply not know what they want or cannot imagine innovations that
    may come from different approaches or out-of-the-box thinking.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'A way of working through the unknowns in product development is to take the
    approach highlighted in Eric Ries’s book, *The Lean Startup: How Today’s Entrepreneurs
    Use Continuous Innovation to Create Radically Successful Businesses*. In this
    book, Ries shows a way of collaborating with the customer for iterative product
    development. Some of those ways are captured in the learning cycle he proposes,
    the **build-measure-learn cycle**.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: 'The build-measure-learn cycle is an iterative product development cycle where
    Lean Startups discover the product and feature qualities that resonate with their
    customers through experimentation. The following parts of the cycle are done with
    the participation of the customer:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '**Build**: Often, what emerges in the first iteration is a **Minimum Viable
    Product** (**MVP**) – something that kicks off the learning process with the customer'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Measure**: Conversations with the customer or application of metrics determine
    what is working and what is not'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learn**: Armed with the knowledge from previously collected metrics, the
    choice is made to pivot or persevere'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The build-measure-learn cycle is illustrated in the following diagram:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18756_10_02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: Figure 10.2 – Build-measure-learn cycle
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: The build-measure-learn cycle follows the same cycle as the Lean Improvement
    or PDCA cycle discussed in [*Chapter 9*](B18756_09.xhtml#_idTextAnchor207), *Moving
    to the Future with Continuous Learning*. Building takes place in the *plan* and
    *do* phases of the PDCA cycle. Measuring allows us to *check* in the PDCA cycle.
    Once we’ve performed the Measure step, we *learn* (or *adjust*) by pivoting or
    persevering.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: With the three parts of the build-measure-learn cycle identified, let’s examine
    the first cycle and its use of the MVP.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Building with an MVP
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Creating an MVP is the initial step of the learning journey that Lean Startups
    take. It provides a check for these startups to determine whether they are taking
    the correct path. While different people have different ideas of what constitutes
    an MVP, including SAFe® (which we will explore later), let’s examine the definition
    proposed by Eric Ries in *The Lean Startup: How Today’s Entrepreneurs Use Continuous
    Innovation to Create Radically* *Successful Businesses*.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: According to Ries, an MVP doesn’t necessarily have to be an actual product or
    the product in its final form. The only thing necessary is that it conveys to
    the customer an indication of the product or service.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: 'The following examples are cited by Ries as examples of MVPs:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Dropbox created a video to help customers understand the idea of cloud-based
    file storage and synchronization and explain the advantages it had over competitors
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupon began as a WordPress blog where customers would email asking for a PDF
    coupon of the offering presented as a new blog post
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Food on the Table, a startup based in Austin, started their service of aggregating
    ingredients from customer shopping lists and recipes and fulfilling purchases
    at local grocery stores by closely working in person with their first customer
    and defining what the service was and how it worked
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These examples show that an MVP is constructed to answer the following questions:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: What should our product or service look like?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can our product or service resonate with customers?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can we provide this product or service?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Startups find the answers to these questions after creating the MVP by talking
    with customers and applying innovation accounting to metrics that are important
    to them. Let’s take a look at the measures used in innovation accounting.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Measuring with innovation accounting
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An MVP is created to prove or disprove what Ries calls a “*leap of faith assumption*.”
    When looking at the build-measure-learn cycle, that MVP goes through three milestones.
    These milestones help evaluate the progress of the MVP and illustrate good inspection
    points for learning:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '**Establishing the baseline**: The creation of the MVP is a baseline used to
    see whether the “*leap of faith assumption*” is valid. This assumption can also
    be thought of as a hypothesis that an experiment (the MVP) can validate.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tune the engine**: Based on objective data, we should look at making adjustments
    that move us closer to the goal.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Pivot or persevere**: These adjustments, based on the data we collect, may
    prompt us to continue the path we are on and add further refinement, or pivot.
    Pivoting may lead us to take different paths for the product or service.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**转型或坚持**：根据我们收集的数据，可能促使我们继续当前的路径并进行进一步的优化，或者进行转型。转型可能会让我们为产品或服务选择不同的道路。'
- en: 'For the objective data, we look to avoid vanity metrics. We previously discussed
    the criteria Ries originally wanted for his metrics in [*Chapter 5*](B18756_05.xhtml#_idTextAnchor114),
    *Measuring the Process and Solution*. The following qualities are repeated here:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于客观数据，我们要避免虚荣指标。我们之前在[*第5章*](B18756_05.xhtml#_idTextAnchor114)中讨论过Ries最初对指标的标准，即*衡量过程和解决方案*。以下品质在此重复：
- en: '**Actionable**: Does the metric show clear cause and effect? In other words,
    could you replicate the results by performing the same actions?'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可操作性**：这个指标是否显示了清晰的因果关系？换句话说，通过执行相同的操作，你能否复制出相同的结果？'
- en: '**Accessible**: Does everyone on the value stream have access to the same data
    and is that data understood by all?'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性**：价值链中的每个人是否都能访问相同的数据，并且这些数据是否能被所有人理解？'
- en: '**Auditable**: Is there credibility to the report?'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可审计性**：报告是否有可信度？'
- en: Of course, the best data points will come from direct consumer feedback. Often,
    in many situations, if you cannot understand what the metrics are telling you,
    you may have to resort to interviewing your customers.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，最好的数据来源是直接的消费者反馈。在许多情况下，如果你无法理解指标所传达的信息，你可能需要通过采访客户来获得进一步的洞察。
- en: With the objective data collected from true metrics or customer feedback, then
    comes the necessary decision to ensure the continuity of the startup. Do we need
    to move in a different direction for our MVP (pivot) or should we continue in
    this direction and add more enhancements (persevere)? Let’s examine the factors
    involved in that decision.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从真实的指标或客户反馈中收集到的客观数据，接下来需要做出决策，以确保初创企业的持续性。我们是否需要为我们的MVP（转型）走不同的方向，还是继续当前的方向并增加更多的改进（坚持）？让我们来分析决定中涉及的因素。
- en: Learning to pivot or persevere
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学会转型或坚持
- en: 'Based upon customer feedback or objective data, the Lean Startup has a question
    to answer: does the current direction of our product or service allow us to meet
    our goals and provide value to the customer? If it does, then we continue on the
    same path for that product, adding additional features. If not, we need to move
    in another direction, or pivot, without remorse.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 根据客户反馈或客观数据，精益创业法有一个问题需要回答：我们当前产品或服务的方向是否能让我们实现目标，并为客户提供价值？如果可以，那我们就继续沿着这条道路走，增加更多的功能。如果不行，我们则需要毫不犹豫地转向另一个方向，或者进行转型。
- en: 'A pivot may be a change to one or more aspects of the product or service. Ries
    cites the following pivots used to allow a product or service to provide better
    value:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 转型可能是对产品或服务的一个或多个方面进行改变。Ries列举了以下几种转型，旨在帮助产品或服务提供更好的价值：
- en: '**Zoom-in pivot**: One feature of the product or service resonates with customers
    far more than any other feature of the product or service. You then focus on that
    feature, making it the product or service.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩小范围转型**：产品或服务的某一功能比其他任何功能都更能引起客户的共鸣。你将专注于这个功能，并使其成为产品或服务的核心。'
- en: '**Zoom-out pivot**: The product or service doesn’t provide enough customer
    value on its own but bundled as a feature of another product or service, it may
    prove its worth.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**放大范围转型**：产品或服务本身并未提供足够的客户价值，但如果作为另一个产品或服务的功能捆绑在一起，可能会证明其价值。'
- en: '**Customer segment pivot**: The product or service meets the needs of all the
    customer and just not of the customer the product or service was originally intended
    for.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户细分转型**：产品或服务不仅满足了最初目标客户的需求，还能满足其他客户的需求。'
- en: '**Customer need pivot**: While working with your customer, you may discover
    that you can provide better value through a different product or service. An example
    of this is Potbelly Sandwich Shops, which started as an antique store that provided
    food to its customers.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户需求转型**：在与客户合作时，你可能会发现通过不同的产品或服务可以提供更大的价值。例如，Potbelly三明治店最初是一家提供食物的古董店。'
- en: With most types of pivots, the product or service is changed, often to the point
    that it does not resemble the original product or service, but there may be some
    pivots where the MVP, product, or service is abandoned.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数类型的转型，产品或服务会发生变化，通常会发生到完全不同于原始产品或服务的程度，但也有一些转型，MVP、产品或服务会被放弃。
- en: When facing the prospect of any type of pivot, it’s important to stay objective
    on the decision to pivot or persevere. Many startups often fail because they don’t
    pivot or pivot too late.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve looked at how we create our MVP and validate our hypothesis with
    the build-measure-learn cycle, let’s look at how SAFe® has adapted Build-Measure-Learn
    and innovation accounting into the SAFe Lean Startup Cycle, which applies experimentation
    to the execution of epics.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: The SAFe® Lean Startup Cycle
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In SAFe, an **epic** is a significant product development effort that is not
    scoped into a specific timebox. Epics describe the long-term changes an organization
    may want to make to a product. ARTs use epics as experiments to guide possible
    product development.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Note that while an epic and a project may have similar definitions, an epic
    is flexible with its scope. A project starts with an established start and end
    date and a fixed scope where all requirements must be met through the completion
    of tasks that build the deliverable. An epic really forms the basis for an experiment
    that may or may not run to completion.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: An epic is described by a **Lean business case**, a brief document that outlines
    the need for the epic, possible solution alternatives, and a proposal for an experiment.
    The experiment is written in the form of an epic hypothesis statement that describes
    the proposed value, a hypothesis of the business outcomes, measurements of the
    experiment through leading indicator metrics, and any **Non-Functional Requirements**
    (**NFRs**) that may act as constraints. The MVP is included in the Lean business
    case as the implementation of the experiment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'The hypothesis statement of an epic sets the tone for the experiment by outlining
    the proposal, its potential benefits, proposed measures, and constraints. The
    following example of an epic hypothesis statement details a proposed pizza drone
    delivery service:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '| **Epic Description** |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
- en: FOR customers that live in urban areas…
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WHO desire quick and convenient pizza delivery,
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: THE PizzaBot 2022…
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IS a drone-based autonomous pizza delivery system…
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: THAT easily delivers pizza from the restaurant quickly and easily.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UNLIKE current automobile-based pizza delivery, which is the standard,
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OUR SOLUTION reduces overhead costs by using cheaper electricity instead of
    gasoline.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '| **Business Outcomes** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
- en: Better customer experience with quicker delivery times (and hotter pizza)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower overhead costs by reducing delivery drivers and saving on fuel
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '| **Leading Indicators** |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
- en: Reduction in average delivery time
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduction in overhead costs
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Higher NPS survey scores
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '| **NFRs** | Must comply with local ordinances regarding commercial aerial
    drone use |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
- en: Table 10.1 – Example epic hypothesis statement
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: An MVP in the epic differs from Ries’s definition. An MVP in this sense refers
    to the minimum set of features that are meant to form an initial product to be
    used by customers. These features would be developed by the ART.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Leading indicator metrics are used to validate the hypothesis of our experiment.
    They serve to tell us whether we are venturing down the correct path. We want
    our metrics to be actionable, accessible, and auditable so that they are not vanity
    metrics. We also want them to be true leading indicators, metrics that are reliable
    indicators of the possible value at the earliest possible moment, without waiting
    for trends to emerge.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'The SAFe Lean Startup Cycle does model itself on the build-measure-learn cycle
    proposed by Eric Ries. In the SAFe Lean Startup Cycle, the ART works with the
    epic in the following manner:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '**Build**: The MVP is developed and released to the customer'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Measure**: The leading indicator metrics defined in the Lean business case
    of the epic determine the response from the customer'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learn**: Based on the leading indicator metrics, the decision must be made
    to persevere and continue developing features beyond the MVP; pivot, finish the
    epic as is, and create a new epic with a new hypothesis; or stop the epic so that
    no development happens beyond the MVP'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The SAFe Lean Startup Cycle is shown in the following diagram, outlining the
    path of the epic and the possible paths that may occur based upon the validation
    of the hypothesis:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18756_10_03.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: Figure 10.3 – SAFe Lean Startup Cycle (©Scaled Agile, All Rights Reserved)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: The result of this activity is a backlog of epics. Each epic outlines an experiment
    containing a hypothesis statement of potential value and an MVP that allows us
    to carry out the experiment.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Using the SAFe Lean Startup cycle based on the build-measure-learn cycle, product
    management sets up a hypothesis of value and an MVP as an experiment to validate
    the hypothesis, but product management doesn’t do this alone. They collaborate
    with others to refine both the hypothesis and the experiment in the Build portion
    of the cycle. We will examine this collaboration in the next section.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Collaboration and research
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Product management requires input from different people, each with a unique
    perspective on what the solution should fulfill. Good product managers know that
    they must work together with these people and discover the qualities that can
    form the basis of a benefit hypothesis or the features that an MVP must have.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we will look at the two aspects good product management needs to form
    the MVP. The following aspects form the basis of the activities product management
    does to elaborate on the MVP:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Collaboration with customers and stakeholders
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Research to elicit product qualities and NFRs
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s begin with the primary collaborations that product management coordinates.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Collaboration with customers and stakeholders
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The best products emerge from teams. This is true from the early phases to the
    design, implementation, and testing stages – finally leading to release.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Product development collaborates with the following individuals to define the
    features of a product:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Customers
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System architects or engineers
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business owners
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Product owners or teams
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s examine the relationships created by the collaboration of product management
    and these groups.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Customers
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The customer is the final arbiter of value. They are, after all, the ones for
    whom you are building your product. Their input is the most direct source of feedback
    on whether the product is meeting their needs.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: In addition to customers that may not know what they want in a solution, product
    management must pay attention to customers that only focus on making incremental
    changes, as that may not contribute to the product’s long-term strategy.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: System architects
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: System architects know the most about the product from an architectural standpoint.
    They understand the capabilities as determined by the enablers as well as the
    constraints, identified by NFRs.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: As important as it is for product management to collaborate with system architects
    to understand the balance between new features, development for the long term
    using enablers, and maintenance and paring technical debt, it is just as important
    that system architects understand customer needs and concerns. For that reason,
    close collaboration between product management, system architects, and the customer
    is paramount.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Business owners
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Business owners are the key stakeholders from the organization’s point of view.
    They need to make sure the solution developed by the ART aligns with the mission
    and the overarching strategy of the organization.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Product management collaborates with business owners to understand the prioritization
    of features that the ART may work on.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Product owners and Agile teams
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Agile teams on the ART do the work of developing, deploying, releasing,
    and maintaining the solution. A key person on each Agile team is the product owner,
    who acts as the content authority, helping the team elaborate stories and acceptance
    criteria and accept stories as done.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Because teams are closest to the work and actual implementation, their insights
    into product and user concerns should not be ignored. Good product managers will
    accept this feedback from the Agile teams.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: We now know the different roles that product management collaborates with and
    receives feedback from. At this point, we should examine the forms that this feedback
    will take.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Research activities
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Product management collaborates with the customer, business owners, and product
    owners by using the following types of research activities to gain insight into
    customer needs and how the product will enable value:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'These types of activities can be classified as the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Primary market research with the customer
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gemba walks and customer visits to see the customer experience
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secondary market research to further delve into the customer’s mindset
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lean UX to establish experiments
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s examine each of these activities.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Primary market research
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Primary market research features direct collaboration between product management
    and the customer. This direct collaboration may involve the following methods:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 初级市场调研特点是产品管理和客户之间的直接合作。此类直接合作可能包括以下方法：
- en: Focus groups
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焦点小组
- en: User surveys or questionnaires
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户调查或问卷
- en: Innovation games
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创新游戏
- en: Focus groups, surveys, and questionnaires ask direct questions about the product
    or service. They may inquire about possible future needs, but sometimes the customer
    can’t imagine beyond the short-term use of the product.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 焦点小组、调查和问卷直接询问产品或服务的问题。它们可能会涉及潜在的未来需求，但有时客户无法超越短期产品使用的想象。
- en: 'This is where innovation games come in. innovation games are several activities
    described in *Innovation Games: Creating Breakthrough Products Through Collaborative
    Play* by Luke Hohmann. In the book, games allow for the discovery of unspoken
    needs, how your customers look at success, and where your products fit with the
    customer.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是创新游戏的作用所在。创新游戏是*《创新游戏：通过协作游戏创造突破性产品》*（作者：卢克·霍曼）中描述的几项活动。在书中，游戏有助于发现未被言明的需求、客户如何看待成功以及你的产品如何与客户需求契合。
- en: Primary market research may often be done at the organization’s premises, but
    other insights can be gathered elsewhere. This is where Gemba Walks and customer
    site visits come into play. Let’s look at them now.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 初级市场调研通常在组织内部进行，但也可以在其他地方收集到更多的见解。此时，Gemba走访和客户现场访问就显得尤为重要。我们现在来了解一下它们。
- en: Gemba walks
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Gemba走访
- en: '*Genchi genbutsu* means “*go see and understand*” in Japanese. A Gemba walk
    is an activity used to experience *genchi gembutsu*. It was first used in the
    Toyota Production System and is a staple in Lean thinking. On a Gemba walk, people
    go to where the product is used to see the actual environment.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*Genchi genbutsu*在日语中意为“*亲自去看并理解*”。Gemba走访是一项体验*genchi genbutsu*的活动。它最早应用于丰田生产系统，是精益思维的核心内容。在Gemba走访中，人们会亲自到产品使用的地方，了解实际环境。'
- en: 'An example of a Gemba walk comes from *The Lean Startup: How Today’s Entrepreneurs
    Use Continuous Innovation to Create Radically Successful Businesses* by Eric Ries.
    The design of the 2004 Toyota Sienna minivan was led by Yuji Yokoya. He had little
    experience in North America, the target market for the Sienna. So, he proposed
    an undertaking: a road trip of the provinces of Canada, the fifty states of the
    United States, and parts of Mexico in a current Sienna minivan while interviewing
    customers.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*《精益创业：今天的企业家如何利用持续创新创造极其成功的企业》*（作者：埃里克·里斯）中的一个Gemba走访的例子。2004年丰田赛那迷你货车的设计由横谷裕司主导。他在北美市场的经验较少，而赛那的目标市场正是北美。因此，他提出了一项计划：在一辆现有的赛那迷你货车中，进行一次覆盖加拿大各省、美国五十个州及部分墨西哥的公路旅行，同时采访客户。'
- en: 'Yokoya discovered that North American customers took more long-distance car
    trips than customers in Japan. Another finding was that minivans needed to cater
    to the passengers that typically occupied two-thirds of the vehicle: the kids.
    Based on this data, Yokoya added features that had more *kid appeal* and would
    accommodate long-distance trips.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 横谷发现，北美客户比日本客户进行更多的长途汽车旅行。另一个发现是，迷你货车需要更好地服务于通常占据车内三分之二空间的乘客：孩子们。根据这些数据，横谷添加了更多具有*儿童吸引力*的功能，以便更好地适应长途旅行。
- en: The selection of these features had a profound effect. Sales of the 2004 Sienna
    model were 60 percent higher than the previous year’s model.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功能的选择产生了深远的影响。2004年款赛那车型的销量比前一年增长了60%。
- en: Secondary market research
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 二级市场调研
- en: Secondary market research is activities that do not involve direct collaboration
    with the customer. These activities can help get an understanding of the customer
    and the market.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 二级市场调研是指不涉及与客户直接合作的活动。这些活动有助于了解客户和市场。
- en: 'Some of the activities that allow you to learn about a customer’s wants and
    needs include the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一些让你了解客户需求和愿望的活动包括以下内容：
- en: Creating a persona, a fictional representation of your customer
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建人物角色，虚构的客户代表
- en: Understanding your customer’s thoughts and emotions using empathy maps
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用同理心图了解客户的想法和情感
- en: Examination of your customer’s journey, including sentiments, using journey
    maps
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过旅程地图检查客户的旅程，包括情感
- en: These artifacts can be refined and amended when meeting with the customer when
    available.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文档在与客户会面时可以进行完善和修改。
- en: Lean UX
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精益用户体验（Lean UX）
- en: When developing features, we want to use a similar PDCA learning cycle as Build-Measure-Learn.
    An incremental learning cycle such as this one helps us refine our epics into
    features.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: 'One cycle of this kind comes from the book *Lean UX: Designing Great Products
    with Agile Teams* by Jeff Gothelf and Josh Seiden. In the book, they talk about
    **Lean User Experience** (**Lean UX**), a mindset and process to incrementally
    discover product features and validate customer value.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'Scaled Agile has adapted the process model for use beyond **User Interface**
    (**UI**) and **User Experience** (**UX**) teams. The following diagram from Scaled
    Agile illustrates the process:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18756_10_04.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: Figure 10.4 – Lean UX process diagram (© Scaled Agile, Inc. All rights reserved)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Let’s examine each of the steps of the process.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Constructing a benefit hypothesis
  id: totrans-155
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is impossible to know, at the start of development, what features will delight
    the customer in the face of unknowns in the environment and risks. The first part
    of this incremental design cycle looks to establish a hypothesis of the intended
    measurable business result of the feature if the feature is developed and released.
    This benefit hypothesis may be related to an epic’s hypothesis if this feature
    is part of an epic’s MVP or is part of further development of the epic.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Collaboratively working on the design
  id: totrans-157
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: With a benefit hypothesis in hand, it is up to members of the ART (product management,
    system architects, business owners, product owners, and the Agile teams) and the
    customer to work together and generate artifacts that work as design elements
    for the product.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Building the Minimum Marketable Feature
  id: totrans-159
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A **Minimum Marketable Feature** (**MMF**) is the minimum amount of functionality
    a feature contains to prove or disprove a benefit hypothesis. The ART may iteratively
    implement this so they can learn about their progress toward the benefit hypothesis.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, the MMF may be a lightweight artifact with no functionality created
    to generate customer feedback, such as a prototype or wireframe. Other times,
    the MMF may be developed and released so customers can evaluate and give their
    feedback.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Evaluation
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The MMF is released and we wait to see how the customer reacts. We can collect
    objective data through observation and A/B testing. We can also query the customer
    through surveys.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Based on the data, we can decide whether or not the benefit hypothesis was proven.
    This may allow us to continue development, refactor, or even pivot to abandon
    the feature.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'The results of the collaboration and research activities allow us to understand
    our customer’s needs and to design the features to those needs. The following
    artifacts may be generated by this activity:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: An understanding of the customer needs
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Style guides
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logos
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UI assets
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prototypes
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mockups or wireframes
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Personas
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer journey maps
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As product management works to understand the features of the product, the system
    architect needs to understand the product’s architecture and which enablers are
    required to keep the product features flowing. Let’s examine the system architect’s
    role in Continuous Exploration.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Architecting the solution
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the maintainer of a product’s architecture, the system architect keeps track
    of the capabilities of the product and enhances them through the creation of enablers
    and understands the constraints of the system as identified by NFRs.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'Working with others on the ART or others in the organizations, the system architect
    will explore the following aspects of the product to ensure that NFRs are satisfied:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: Releasability
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testability
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operational needs
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s examine these aspects in further detail.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Architecting releasability
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is often desirable to release new features to the customer at the organization’s
    discretion. We still want a deployment to a production environment as part of
    the development cadence, but the actual release becomes a business decision. For
    this reason, we look to separate the deployment from the release.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Architecture may play a key role in allowing the separation of the deployment
    from the release. Separating deployment and release relies on technology such
    as feature Flags, which the architecture must accommodate. These feature Flags
    easily allow the Continuous Deployment of new features without disrupting the
    current functionality when switched *off*. A new feature is considered released
    when the Feature Flag is switched *on*. Applications of Feature Flags include
    canary releases and dark launches. An architecture with loosely coupled components
    allows each component to have its own separate release schedule. This allows components
    that require different release strategies to have them.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, release strategies are usually related to an organization’s strategy
    or business objectives. Releases may need to be done to respond to the marketplace
    or outmaneuver a competitor. The ability to allow for a flexible release can be
    a competitive advantage. We will see the benefits of this foresight in [*Chapter
    13*](B18756_13.xhtml#_idTextAnchor292), *Releasing on Demand to* *Realize Value*.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Designing security
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although DevSecOps places an emphasis on *shifting left* to test for security
    vulnerabilities and concerns, the DevSecOps approach begins here as architects
    look to incorporate security as new features are drawn up. This allows security
    to be included from the very beginning, as opposed to being considered an afterthought.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure security concerns are included during the initial design, the following
    practices are performed:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '**Threat modeling**: Looking at the current product’s infrastructure, architecture,
    applications, and proposed features to identify possible security vulnerabilities,
    attackers, and attack vectors.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance management**: Ensuring that the product complies with known industry-based
    security regulatory standards, such as the HIPAA, FedRAMP, and PCI. The requirements
    in these standards primarily deal with security and privacy.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outputs from these practices are usually maintained and communicated to the
    ART as NFRs. NFRs are constraints on the work that the ART develops as features.
    These constraints should be part of the continuous testing suite as development
    proceeds.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Ensuring testability
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Testing is the primary way of ensuring the correct function, quality, security,
    and readiness for deployment of a feature. If a solution is not testable, the
    ART has no idea of its progress or whether value can be captured.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: We saw before that a loosely coupled architecture allows for flexibility through
    the ability to release components on different schedules. This flexibility extends
    to designing systems that allow more testing to occur. Systems whose components
    have well-defined interfaces allow for more frequent system-level testing by having
    components that are not ready for integration with other components, replaced
    with dummy code or logic that returns valid outputs.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Existing legacy architectures can evolve to a modern loosely coupled **Application
    Programming Interface** (**API**)-based architecture by adopting the **Strangler
    pattern**. The Strangler pattern, as coined by Martin Fowler, takes a legacy monolithic
    system and establishes a facade interface to those entities communicating with
    the legacy system. New code is incrementally written to replace pieces of the
    interface. Eventually, all the functions of the legacy system are replaced by
    the new code.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Another design aspect to consider for testability is the ability to execute
    automated tests at various levels from individual code functions to user stories
    – and ultimately to features. Automated testing allows for tests to be executed
    more frequently. Frequent testing allows for greater confidence in the quality
    and security of the system.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Testable architecture has benefits for the Agile teams that do the implementation
    work. **Test-driven development** (**TDD**) looks to create the tests first, forming
    an initial understanding of the behavior of the system. **Behavior-driven development**
    (**BDD**) continues the understanding of the system’s behavior at higher levels.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining operations
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An architecture’s design considerations should not change once the feature has
    passed all its tests. The system architect must ensure that the architecture operates
    easily in non-production or staging environments, as well as the final production
    environment.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: The first aspect of this is measurability. The architecture should allow the
    staging and production environments to monitor its resources to determine whether
    any adverse performance is present with the active system. Alerts should be designed
    when thresholds are violated. This ability to measure resource use from low levels
    to higher levels is commonly referred to as full-stack telemetry.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Another aspect is the ability to record all measures into logs for easy retrieval
    when incidents occur. Architects should understand what aspects of the architecture
    can yield insights captured as logs so that operations personnel can add these
    measurements into a logging tool that includes timestamping and search capabilities.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Releasability plays a role in ensuring that architecture allows for easy operation.
    Feature Flags, a common tool for separating deployment into production environments
    and the release to a customer, may work as a mechanism for rollback by deactivating
    the affected feature in the case of an incident. Another rollback mechanism to
    consider is the establishment of blue/green deployment in production environments.
    Reliable automation in the CI/CD pipeline, including robust automated tests, can
    enable *fix-forward* situations where incident fixes can be rolled into production
    as soon as possible.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: Outputs of the architect’s work include solution intent, an idea of the minimum
    architecture needed to prove the benefit hypothesis of an epic, and the NFRs,
    which serve as constraints on all features and stories that come from the epic.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: At this point, the initial thinking about the feature in terms of thoughts on
    the value and effects on the architecture has been performed by product management
    and the system architect. Others must bring their contributions into play, from
    further refinement and prioritization to getting the feature ready for PI planning.
    Let’s examine those steps now.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Synthesizing the work
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Product management has gained knowledge and collected additional research on
    the customer’s needs that may contribute to anticipated value. The system architect
    has looked into ensuring that architectural support already exists or may be forthcoming
    in an upcoming enabler. Product management collaborates with business owners,
    product owners, Agile teams, and others to complete the following activities:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: Complete the definition of the feature
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use BDD to outline the acceptance criteria
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prioritize the feature on the Program Backlog using **Weighted Shortest Job**
    **First** (**WSJF**)
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepare for PI planning
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The goal of synthesis is to ready the ART for the upcoming PI. For this, we
    will create the following artifacts:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: A clear vision of what the ART will develop
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A roadmap that details the product’s evolution by showing when possible solutions
    will be delivered
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A backlog of defined features
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s examine these activities done during synthesis in detail.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Completing the feature
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Remember that we started with epics that were significant product efforts conducted
    as experiments. We started our experiment by developing the MVP. The MVP will
    be a set of features that validates the benefit hypothesis of the epic. Using
    Lean UX, we further define the MVP into MMFs that initially began as a *what-if*
    conjecture after learning about the customer’s needs and wants. Research from
    product management and the system architect added more detail. It’s now time to
    complete the refinement so the rest of the ART can take over.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: 'A good feature will have the following three parts: beneficiaries, a benefit
    hypothesis, and acceptance criteria. Let’s discuss these in greater detail.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Beneficiaries
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While we have been thinking about the value to the organization or the customer,
    we now must consider the end user of our product or service. Sometimes, the end
    user is not the same person that purchases the product or service. In these cases,
    we may need to challenge customer assumptions of what the needs and wants of the
    end user are.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Benefit hypothesis
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We want to include the benefits to the customer or organization if we develop
    and release the feature. So, we can create our benefit hypothesis using the following
    format:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '*If {proposition}, {**then benefit}*'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: Our *proposition* is a description of the feature. The *benefit* is the expected
    value delivered.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: 'We may want to include the metrics we believe will prove or disprove our benefit
    hypothesis. In that case, we may use the following format to include our measures:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '*We believe that {proposition} will lead to {benefit} and this will be proven*
    *when {metric}.*'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example, let’s take the epic for the aerial pizza drone that we defined
    earlier in the chapter. A possible feature could be the addition of a built-in
    heating unit to keep the pizzas warm while delivering the pizzas. The following
    statement could act as the benefit hypothesis for the feature:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '*We believe that a heating unit built into the drone will lead to increased
    customer satisfaction by ensuring that pizzas are not delivered cold and this
    will be proven when we view NPS* *survey results.*'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: Remember here to avoid vanity metrics – measures that yield positive reactions
    but often don’t indicate whether the value is really realized.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: Acceptance criteria
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Acceptance criteria are measures that confirm the implementation is complete
    and the benefit is delivered. They are a statement of the system’s behavior with
    the feature included.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Typically, to gauge whether a benefit hypothesis is proven, you can map any
    number of acceptance criteria to a single benefit hypothesis statement.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Because the acceptance criteria describe the system behavior, we will examine
    a way of writing the acceptance criteria using BDD techniques in our next section.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: Writing acceptance criteria using BDD
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous section, we looked at the function of acceptance criteria. One
    key role acceptance criteria play is that they describe the system behavior with
    the feature’s inclusion. This rolls down to the desired behavior of components
    in the form of user stories or code functions.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'We specify the desired behavior in the Gherkin format. The Gherkin format uses
    the following structure:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`WHEN` and `THEN` may have one or more clauses that describe the conditions
    and behavior accordingly.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'Extending our example of the built-in heating unit feature for our pizza drone,
    we may want the following statement to act as acceptance criteria:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '*GIVEN the heating unit is installed and* *warmed up…*'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: '*…WHEN a pizza is placed in the heating unit while on a* *delivery run…*'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '*…THEN the pizza will be hot when it reaches* *its destination.*'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: Acceptance criteria in this format can be used as the basis for acceptance tests
    that can be automated. These automated acceptance tests are executed using Cucumber,
    a testing tool that runs BDD tests.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Prioritizing using WSJF
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once product management has specified the feature in terms of its beneficiaries,
    benefit hypothesis, and acceptance criteria, it is placed in the **Program Backlog**.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: The Program Backlog is the list of features that the ART can work with. Because
    the ART is limited in terms of how many features it can handle at once, it’s important
    that product management prioritizes the features to make the work more focused.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a variety of criteria that can be used to establish the prioritization
    of the features in the Program Backlog. SAFe advocates looking at Principle 1:
    Take an economic view, which we originally saw in [*Chapter 2*](B18756_02.xhtml#_idTextAnchor040),
    *Culture of Shared Responsibility*, when sequencing the features.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: 'We start our economic view by focusing on the **Cost of Delay** (**CoD**) of
    the feature. The CoD is how much the value will diminish if we delay the release
    of the feature. It may be easier to look at the CoD as being made up of the following
    factors that can be relatively estimated:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: '**User Business Value**: How much value is anticipated to be generated by a
    feature in comparison to the other features on the Program Backlog?'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Time Criticality**: If a feature is not implemented promptly, is there a
    drop in value? Do we miss an important market window?'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk Reduction or Opportunity Enablement** (**RR/OE**): Is there another
    important way that a feature may reduce risk or expose the organization to new
    markets?'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another factor SAFe focuses on is the size of the job. We want to focus on the
    shortest jobs first. It’s easier to release jobs that take less time and immediately
    receive value, rather than starting with larger jobs.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: 'SAFe then combines the focus on the CoD and the size of the job into a formula
    called WSJF. This formula can be specified as follows:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_10.1.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
- en: 'If we look at the preceding formula and substitute our CoD factors, we can
    rewrite our formula as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_10.2.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
- en: Product management can collaborate with business owners, the system architect,
    and other stakeholders in refinement sessions to determine the WSJF value for
    each feature. The participants determine the relative value of the four components
    (User Business Value, Time Criticality, RR/OE, and Job Size), often using values
    in a modified Fibonacci sequence (1, 2, 3, 5, 8, 13, 20, 40, 100).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at how product management collaborates with other parties to calculate
    the WSJF value for different features.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: The group will convene and look over the set of features. They will then decide
    which feature has the smallest User Business Value – that feature has its User
    Business Value marked with a *1*. They then look at the other features and decide
    how their User Business Values compare to the reference feature. If they are considered
    to be the same, they also receive a *1*. If the other feature is bigger, they
    place a number on the Fibonacci sequence that describes how much bigger than the
    reference they are.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table illustrates the collaborative process of determining the
    User Business Value in progress:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '| **Feature Name** | **User Business** **Value** | **Time Criticality** | **RR&#124;OE**
    | **Cost** **of Delay** | **Job Size** | **WSJF** |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
- en: '| Built-in heating unit | 8 |  |  |  |  |  |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
- en: '| Drone defense system | 1 |  |  |  |  |  |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
- en: '| Repulsor-based thrusters | 5 |  |  |  |  |  |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
- en: Table 10.2 – Example of WSJF collaboration – User Business Value defined
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: 'The process is repeated for Time Criticality, RR/OE, and Job Size. For the
    preceding table, on the columns that represent User Business Value, Time Criticality,
    RR/OE, and Job Size, there must be at least one *1\.* The following table continues
    our example with Time Criticality, RR/OE, and Job Size also defined:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '| **Feature Name** | **User** **Business Value** | **Time** **Criticality**
    | **RR&#124;OE** | **Cost** **of Delay** | **Job Size** | **WSJF** |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
- en: '| Built-in Heating Unit | 8 | 8 | 1 |  | 1 |  |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
- en: '| Drone Defense System | 1 | 13 | 3 |  | 2 |  |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
- en: '| Repulsor-based thrusters | 5 | 1 | 1 |  | 5 |  |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
- en: Table 10.3 – Example of WSJF continued – Time Criticality, RR|OE, and Job Size
    defined
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: 'The CoD is calculated by adding User Business Value, Time Criticality, and
    RR/OE together. WSJF is calculated by dividing the CoD by the Job Size. The following
    table completes the determination of WSJF for our features:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '| **Feature Name** | **User Business** **Value (UBV)** | **Time Criticality
    (****TC)** | **RR&#124;OE** | **Cost of Delay (CoD) =** **UBV+TC+RR&#124;OE**
    | **Job Size (****JS)** | **WSJF (****CoD/JS)** |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
- en: '| Build-in Heating Unit | 8 | 8 | 1 | 17 | 1 | 17 (1st) |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
- en: '| Drone Defense System | 1 | 13 | 3 | 17 | 2 | 8.5 (2nd) |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
- en: '| Repulsor-based thrusters | 5 | 1 | 1 | 7 | 5 | 1.4 (3rd) |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
- en: Table 10.4 – Example of WSJF determination – complete
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: Regular refinement sessions of new features in the Program Backlog allow product
    management to understand the features to be completed first. This will influence
    the program vision and the roadmap that product management will communicate to
    the ART in PI planning.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: Preparing for PI planning
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With a prioritized Program Backlog, product management and the rest of the ART
    can understand the initial scope of work for the upcoming PI. Ideally, these activities
    happen at least a month before the actual PI planning event so that any surprises
    are found early.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: Business owners will prepare a presentation that will help the ART understand
    the business context and speak to how the development of the selected features
    may line up with the overall business strategy.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: The system architect will also prepare a presentation outlining the important
    architectural notes and changes. This may also include any important enablers
    that the ART is developing for release.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: 'What remains are the outputs of synthesis. Product management works to assemble
    the following artifacts before PI planning:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: A vision of what solutions the ART can deliver
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A roadmap of features and where they fit into the product’s evolution
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The list of prioritized features that the ART commits to developing in the upcoming
    PI
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Product management outlines the program vision, intending to set the focus of
    the ART on a common mission. This vision will be communicated to the entire ART
    in a presentation made after the business owner’s presentation.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: The selected group of features intended to be worked on in the upcoming PI is
    communicated to the Agile teams on the ART. The teams can choose which features
    they may want to contribute to and begin looking at these features closely. They
    may want to start breaking those features down into stories, as we will see in
    [*Chapter 11*](B18756_11.xhtml#_idTextAnchor244), *Continuous Integration of Solution
    Development*, and may also look for any risks or dependencies.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at the activities that trigger the Continuous Delivery
    Pipeline. With Continuous Exploration, the ART examines the marketplace and the
    wants and needs of its customers to generate ideas for new products or new features.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: The process begins with the understanding that development is really a series
    of incremental build-measure-learn cycles that start by creating a hypothesis
    of the customer value that can be achieved.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: The collaborative process then begins for product management and the system
    architect. Product management collaborates with the customer to gain a greater
    understanding of the customer and marketplace. The system architect researches
    the hypothesis to understand the impact that the changes will have on the architecture.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: When research is complete, the ART will take what it has learned and create
    features. They will elaborate on these features, place them into the Program Backlog,
    and prioritize them. A set of the highest sequenced features will be selected
    for the upcoming PI. Those selected are communicated to the ART to prepare for
    the next phase of PI planning.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: After PI planning, the ART sets to work on development. This development work
    starts on the next phase of the Continuous Delivery Pipeline, Continuous Integration.
    We will explore what Continuous Integration involves in detail in our next chapter.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which is not an activity of Continuous Exploration?
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hypothesizing
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Collaboration and research
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Development
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Synthesis
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Who does product management collaborate with during Continuous Exploration (select
    three)?
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Release train engineers
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Customers
  id: totrans-304
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Product owners
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scrum masters
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: System architects
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Solution train engineers
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Innovation accounting is used in which of the phases of Build-Measure-Learn?
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Build
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Measure
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Learn
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All phases
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The Lean UX process creates a __________ to prove or disprove a benefit hypothesis.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Most Valuable Product
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Mean Measurable Feature
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Minimum Viable Product
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Minimum Marketable Feature
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which areas does the system architect focus on when evaluating architectural
    changes for a new Feature (select three)?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Security
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cost
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Testability
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reuse
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Releasability
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A series of articles on the `scaledagileframework.com` website that act as
    a reference for the Continuous Delivery Pipeline: [https://www.scaledagileframework.com/continuous-delivery-pipeline/](https://www.scaledagileframework.com/continuous-delivery-pipeline/)'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The reference article in the Continuous Delivery Pipeline series that talks
    about Continuous Exploration: [https://www.scaledagileframework.com/continuous-exploration/](https://www.scaledagileframework.com/continuous-exploration/)'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A reference article on [scaledagileframework.com](http://scaledagileframework.com)
    that details epics and the SAFe Lean Startup Cycle: [https://www.scaledagileframework.com/epic/](https://www.scaledagileframework.com/epic/)'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A reference article on [scaledagileframework.com](http://scaledagileframework.com)
    detailing how to use innovation accounting and leading indicator metrics: [https://www.scaledagileframework.com/guidance-applied-innovation-accounting-in-safe/](https://www.scaledagileframework.com/guidance-applied-innovation-accounting-in-safe/)'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This article describes the Lean UX process adapted by Scaled Agile for SAFe:
    [https://www.scaledagileframework.com/lean-ux/](https://www.scaledagileframework.com/lean-ux/)'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An explanation of the Strangler pattern with examples of how to implement it:
    [https://www.techtarget.com/searchapparchitecture/tip/A-detailed-intro-to-the-strangler-pattern](https://www.techtarget.com/searchapparchitecture/tip/A-detailed-intro-to-the-strangler-pattern)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A guide to writing Features in SAFe, with the incorporation of a Feature Writing
    Canvas: [https://medium.com/product-manager-tools/writing-effective-features-58a240e69222](https://medium.com/product-manager-tools/writing-effective-features-58a240e69222)'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The Lean Startup: How Today’s Entrepreneurs Use Continuous Innovation to Create
    Radically Successful Businesses* by Eric Ries – This book defines the Build-Measure-Lean
    cycle, innovation accounting, pivots, and what an MVP can be'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Lean UX: Designing Great Products with Agile Teams* by Jeff Gothelf and Josh
    Seiden – this book originally explained the Lean UX process, an iterative way
    to approach product design'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Innovation Games: Creating Breakthrough Products Through Collaborative Play*
    by Luke Hohmann – this book explains innovation games, a number of collaborative
    exercises done by product management and the customer to unearth customer needs
    and wants'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
