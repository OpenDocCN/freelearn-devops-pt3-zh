- en: <st c="0">1</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">1</st>
- en: <st c="2">Principles of Continuous Testing, Quality, Security, and Feedback</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">持续测试、质量、安全性和反馈的原则</st>
- en: <st c="67">This chapter explains how the continuous strategies are essential
    for digital transformations that utilize continuous development practices known
    as Agile, continuous delivery practices known as DevOps and DevSecOps, and continuous
    operations practices known</st> <st c="327">as</st> **<st c="330">Site Reliability</st>**
    **<st c="347">Engineering</st>** <st c="358">(</st>**<st c="360">SRE</st>**<st
    c="363">).</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67">本章解释了持续战略对于利用持续开发实践（即敏捷）、持续交付实践（即 DevOps 和 DevSecOps）以及持续运维实践（即</st>
    <st c="327">站点可靠性工程（</st>**<st c="330">SRE</st>**<st c="347">））的数字化转型至关重要。</st>
- en: <st c="366">In this chapter, we’ll cover the following</st> <st c="410">main
    topics:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="366">在本章中，我们将涵盖以下</st> <st c="410">主要内容：</st>
- en: <st c="422">Introducing continuous testing, continuous quality, continuous security,
    and</st> <st c="500">continuous feedback</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="422">引入持续测试、持续质量、持续安全性和</st> <st c="500">持续反馈</st>
- en: <st c="519">Defining continuous testing, quality, security,</st> <st c="568">and
    feedback</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="519">定义持续测试、质量、安全性、</st> <st c="568">和反馈</st>
- en: <st c="580">The guiding principles and pillars of</st> <st c="619">continuous
    testing</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="580">持续测试的指导原则和支柱</st> <st c="619">持续测试的指导原则和支柱</st>
- en: <st c="637">The guiding principles and pillars of</st> <st c="676">continuous
    quality</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="637">持续质量的指导原则和支柱</st> <st c="676">持续质量的指导原则和支柱</st>
- en: <st c="694">The guiding principles and pillars of</st> <st c="733">continuous
    security</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="694">持续安全的指导原则和支柱</st> <st c="733">持续安全的指导原则和支柱</st>
- en: <st c="752">The guiding principles and pillars of</st> <st c="791">continuous
    feedback</st>
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="752">持续反馈的指导原则和支柱</st> <st c="791">持续反馈的指导原则和支柱</st>
- en: <st c="810">Let’s</st> <st c="817">get started!</st>
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="810">让我们</st> <st c="817">开始吧！</st>
- en: <st c="829">Introducing continuous testing, quality, security, and feedback</st>
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="829">引入持续测试、质量、安全性和反馈</st>
- en: <st c="893">This</st> <st c="899">section introduces</st> <st c="917">the key
    foundational</st> <st c="939">concepts</st> <st c="947">and historical context
    for modern continuous testing, quality, security, and feedback strategies.</st>
    <st c="1046">It also explains why DevOps, DevSecOps, and SRE practices drive the
    need for continuous testing, quality, security,</st> <st c="1162">and feedback.</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="893">本节介绍</st> <st c="899">现代持续测试、质量、安全性和反馈策略的关键基础概念</st> <st c="917">及历史背景。</st>
    <st c="939">它还解释了为什么 DevOps、DevSecOps 和 SRE 实践推动了持续测试、质量、安全性</st> <st c="1046">和反馈的需求。</st>
- en: <st c="1175">Foundations for testing, quality, security, and feedback</st>
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="1175">测试、质量、安全性和反馈的基础</st>
- en: <st c="1232">Testing, quality, security, and</st> <st c="1265">feedback have
    been integral to software</st> <st c="1304">development, delivery, and</st> <st
    c="1332">operations since</st> <st c="1348">the inception of software.</st> *<st
    c="1376">Figure 1</st>**<st c="1384">.1</st>* <st c="1386">and the following paragraphs
    depict some historical examples that</st> <st c="1453">highlight this.</st>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1232">测试、质量、安全性和</st> <st c="1265">反馈一直是软件</st> <st c="1304">开发、交付和</st>
    <st c="1332">运维的核心组成部分，自</st> <st c="1348">软件诞生以来便如此。</st> *<st c="1376">图 1</st>**<st
    c="1384">.1</st>* <st c="1386">及接下来的段落展示了一些历史实例，</st> <st c="1453">突显了这一点。</st>
- en: '![Figure 1.1 – Early examples of testing, quality, security, and feedback](img/B21936_01_1.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 测试、质量、安全性和反馈的早期示例](img/B21936_01_1.jpg)'
- en: <st c="1588">Figure 1.1 – Early examples of testing, quality, security, and
    feedback</st>
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1588">图 1.1 – 测试、质量、安全性和反馈的早期示例</st>
- en: '**<st c="1659">Testing and quality – ENIAC (1940s)</st>**<st c="1695">: Even</st>
    <st c="1702">with the first general-purpose electronic computer, ENIAC, testing
    and debugging were crucial.</st> <st c="1798">The machine had to be meticulously
    programmed and tested for each new task, a process that often took days.</st>
    <st c="1906">This early example underscores the importance of testing for quality
    assurance</st> <st c="1985">in software.</st>'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1659">测试与质量 – ENIAC（1940年代）</st>**<st c="1695">：即便是第一台通用电子计算机 ENIAC，测试和调试也至关重要。</st>
    <st c="1702">这台机器必须为每个新任务进行精心编程和测试，这一过程常常需要数天时间。</st> <st c="1798">这一早期的示例强调了测试在软件质量保证中的重要性</st>
    <st c="1906">。</st>'
- en: '**<st c="1997">Security – The Morris Worm (1988)</st>**<st c="2031">: The Morris
    Worm, one of the first recognized worms to affect the</st> <st c="2098">world’s
    nascent internet infrastructure, highlighted the need for attention to security
    in software design.</st> <st c="2207">It exploited known vulnerabilities, which
    underscored the importance of security in networking and</st> <st c="2306">software
    development.</st>'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1997">安全性 – 莫里斯蠕虫（1988年）</st>**<st c="2031">：莫里斯蠕虫是影响世界初期互联网基础设施的首批已知蠕虫之一，突显了在软件设计中关注安全性的必要性。</st>
    <st c="2098">它利用了已知的漏洞，强调了在网络和</st> <st c="2306">软件开发中考虑安全性的重要性。</st>'
- en: '**<st c="2327">Feedback – IBM’s early software development (1950s–1960s)</st>**<st
    c="2385">: In the early days of commercial</st> <st c="2420">software, institutions
    and companies such as IBM realized the importance of customer feedback in software
    development.</st> <st c="2539">Feedback from users helped shape the evolution
    of software products, making them more user-friendly and aligned with</st> <st
    c="2656">business needs.</st>'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2327">反馈 – IBM早期的软件开发（1950年代–1960年代）</st>**<st c="2385">：在商业软件的早期，像IBM这样的机构和公司意识到用户反馈在软件开发中的重要性。</st>
    <st c="2420">用户的反馈帮助塑造了软件产品的演变，使其更加符合用户需求，并与</st> <st c="2656">业务需求对接。</st>'
- en: <st c="2671">However, the traditional methods had some drawbacks.</st> <st c="2725">Let’s
    look at</st> <st c="2739">them next.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2671">然而，传统方法也存在一些缺点。</st> <st c="2725">接下来，我们来看一下</st> <st c="2739">这些缺点。</st>
- en: <st c="2749">The weaknesses of traditional testing, quality, security, and feedback
    strategies</st>
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="2749">传统的测试、质量、安全性和反馈策略的弱点</st>
- en: <st c="2831">The historical</st> <st c="2846">examples of</st> <st c="2859">ENIAC,
    the Morris Worm, and IBM’s early software development</st> <st c="2920">highlight
    key weaknesses in traditional approaches to testing, quality, security, and</st>
    <st c="3006">feedback in</st> <st c="3018">software development:</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2831">ENIAC、莫里斯蠕虫以及IBM早期的软件开发</st> <st c="2846">的历史案例凸显了传统方法在测试、质量、安全性和</st>
    <st c="3006">反馈方面的关键弱点：</st>
- en: '**<st c="3039">Testing and quality – ENIAC (1940s)</st>**<st c="3075">: With</st>
    <st c="3082">ENIAC, testing and debugging were manual and time-consuming.</st>
    <st c="3144">Each new task required meticulous programming and testing, demonstrating
    the inefficiency of traditional testing methods in the face of complex tasks.</st>
    <st c="3295">The absence of automated testing tools and integrated testing practices
    meant that ensuring quality was a labor-intensive process, significantly slowing
    down development</st> <st c="3465">and deployment.</st>'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3039">测试与质量 – ENIAC（1940年代）</st>**<st c="3075">：在ENIAC时代，测试和调试是手工完成的，且耗时繁琐。</st>
    <st c="3082">每项新任务都需要精细的编程和测试，展示了面对复杂任务时传统测试方法的低效。</st> <st c="3144">缺乏自动化测试工具和集成测试实践意味着确保质量是一个劳动密集型的过程，显著拖慢了开发</st>
    <st c="3295">和部署的速度。</st>'
- en: '**<st c="3480">Security – The Morris Worm (1988)</st>**<st c="3514">: Traditional
    approaches often treated security as an afterthought.</st> <st c="3583">The Morris
    Worm exploited known vulnerabilities, highlighting the weakness of reactive security
    measures in contrast to the need for proactive security practices.</st> <st c="3746">Security
    was not integrated into the software development life cycle.</st> <st c="3816">The
    incident underscored the importance of considering security at every stage of</st>
    <st c="3897">development, from design</st> <st c="3923">to deployment.</st>'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3480">安全性 – 莫里斯蠕虫（1988年）</st>**<st c="3514">：传统方法通常将安全性视为事后考虑。</st>
    <st c="3583">莫里斯蠕虫利用已知的漏洞，突显了反应性安全措施的不足，相比之下，前瞻性安全实践显得尤为重要。</st> <st c="3746">安全性并未纳入软件开发生命周期。</st>
    <st c="3816">这一事件强调了在开发的每个阶段都要考虑安全性的重要性，</st> <st c="3897">从设计到部署。</st>'
- en: '**<st c="3937">Feedback – IBM’s early software development (1950s–1960s)</st>**<st
    c="3995">: Traditional software development often suffered from delayed feedback
    loops.</st> <st c="4075">Feedback was typically collected post-release, limiting
    the ability to make user-centric improvements during the development phase.</st>
    <st c="4207">There was a lack of continuous engagement with</st> <st c="4254">users
    during the development process.</st> <st c="4292">Feedback was not systematically
    integrated into the development cycle, leading to products that might not fully
    align with user needs</st> <st c="4426">or expectations.</st>'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3937">反馈 – IBM早期的软件开发（1950年代–1960年代）</st>**<st c="3995">：传统软件开发常常受到延迟反馈循环的困扰。</st>
    <st c="4075">反馈通常是在发布后收集的，这限制了在开发阶段进行以用户为中心的改进的能力。</st> <st c="4207">在开发过程中缺乏与</st>
    <st c="4254">用户的持续互动。</st> <st c="4292">反馈未能系统地融入到开发周期中，导致产品可能无法完全符合用户需求</st>
    <st c="4426">或期望。</st>'
- en: <st c="4442">These historical examples illustrate key weaknesses in</st> <st
    c="4498">traditional approaches:</st>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4442">这些历史实例展示了传统方法的关键弱点：</st>
- en: '**<st c="4521">Testing and quality</st>**<st c="4541">: Manual, time-consuming
    testing methods, lack of automation, and a failure to integrate testing into the
    development</st> <st c="4660">life cycle.</st>'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4521">测试和质量</st>**<st c="4541">：手动、耗时的测试方法，缺乏自动化，以及未能将测试集成到开发</st>
    <st c="4660">生命周期中。</st>'
- en: '**<st c="4671">Security</st>**<st c="4680">: A reactive approach to security,
    treating it as an afterthought rather than an integral part of the</st> <st c="4783">development
    process.</st>'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4671">安全</st>**<st c="4680">：一种对安全的反应式方法，将其视为事后的思考，而非开发过程中的一个重要组成部分。</st>
    <st c="4783">开发过程。</st>'
- en: '**<st c="4803">Feedback</st>**<st c="4812">: Delayed feedback mechanisms and
    a lack of continuous user engagement, leading to a</st> <st c="4898">disconnect
    between software development and</st> <st c="4942">user requirements.</st>'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4803">反馈</st>**<st c="4812">：反馈机制的延迟以及缺乏持续的用户参与，导致软件开发与</st> <st c="4898">用户需求之间的脱节。</st>'
- en: <st c="4960">Now, let’s consider how testing, quality, security, and feedback
    evolved as software frameworks became</st> <st c="5064">more continuous.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4960">现在，让我们来看一下，随着软件框架变得更加持续，测试、质量、安全和反馈是如何演变的。</st>
- en: <st c="5080">The evolution of testing, quality, security and feedback toward
    continuous strategies</st>
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="5080">测试、质量、安全和反馈的演变，朝着持续战略发展</st>
- en: <st c="5166">The evolution</st> <st c="5180">of software development, delivery,
    and operations toward continuous development, delivery, and operation methodologies
    such as Agile, DevOps, DevSecOps, and SRE was driven by several key factors and</st>
    <st c="5380">industry trends:</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5166">软件开发、交付和运营向持续开发、交付和运营方法（如敏捷、DevOps、DevSecOps和SRE）演变的过程，受到多个关键因素和</st>
    <st c="5380">行业趋势的推动：</st>
- en: '**<st c="5396">An increasing demand for speed and agility</st>**<st c="5439">:
    As markets and technology rapidly evolved, businesses faced growing pressure to
    deliver products and services faster.</st> <st c="5560">This need for speed led
    to the adoption of Agile methodologies, which focus on iterative development,
    flexibility, and fast delivery</st> <st c="5693">of software.</st>'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="5396">对速度和敏捷性需求的增加</st>**<st c="5439">：随着市场和技术的快速发展，企业面临着更大的压力，需要更快地交付产品和服务。</st>
    <st c="5560">这种对速度的需求导致了敏捷方法论的采纳，敏捷方法注重迭代开发、灵活性和软件的快速交付。</st> <st c="5693">软件。</st>'
- en: '**<st c="5705">A shift from a project to a product mindset</st>**<st c="5749">:
    Traditional software development was often project-based, with a clear start and
    end.</st> <st c="5838">However, the industry shifted toward a product mindset,
    where software is continuously developed, improved, and maintained.</st> <st c="5962">This
    ongoing nature of software products necessitated methodologies such as Agile</st>
    <st c="6044">and DevOps.</st>'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="5705">从项目思维向产品思维的转变</st>**<st c="5749">：传统的软件开发通常是基于项目的，有明确的开始和结束。</st>
    <st c="5838">然而，行业逐渐转向产品思维，即软件持续开发、改进和维护。</st> <st c="5962">软件产品的持续性要求采用敏捷</st>
    <st c="6044">和DevOps等方法论。</st>'
- en: '**<st c="6055">The complexity of modern software systems</st>**<st c="6097">:
    The increasing complexity of software systems, with distributed architectures
    such as microservices, demanded more collaborative and integrated approaches.</st>
    <st c="6256">DevOps emerged as a response, emphasizing collaboration between</st>
    **<st c="6320">development</st>** <st c="6331">(</st>**<st c="6333">Dev</st>**<st
    c="6336">),</st> **<st c="6340">quality</st>** <st c="6347">(</st>**<st c="6349">QA</st>**<st
    c="6351">),</st> **<st c="6355">security</st>** <st c="6363">(</st>**<st c="6365">Sec</st>**<st
    c="6368">), and</st> **<st c="6376">operations</st>** <st c="6386">(</st>**<st
    c="6388">Ops</st>**<st c="6391">) teams.</st>'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="6055">现代软件系统的复杂性</st>**<st c="6097">：随着软件系统复杂性的增加，分布式架构（如微服务）要求采用更多协作和集成的方法。</st>
    <st c="6256">DevOps 作为一种回应应运而生，强调开发</st> **<st c="6320">（Dev）</st>** <st c="6331">、</st>
    **<st c="6333">质量</st>** <st c="6347">（QA）</st> **<st c="6355">、安全</st>** <st
    c="6363">（Sec）</st> **<st c="6376">和运维</st>** <st c="6386">（Ops）团队之间的协作。</st>'
- en: '**<st c="6400">Need for faster release cycles</st>**<st c="6431">: With growing
    competition and technological advancements, the ability to release updates and
    features quickly became a competitive advantage.</st> <st c="6575">This led</st>
    <st c="6584">to the adoption of</st> **<st c="6603">Continuous Integration</st>**<st
    c="6625">/</st>**<st c="6627">Continuous Delivery</st>** <st c="6646">(</st>**<st
    c="6648">CI/CD</st>**<st c="6653">) practices within</st> <st c="6673">DevOps
    frameworks.</st>'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="6400">对更快发布周期的需求</st>**<st c="6431">：随着竞争加剧和技术进步，快速发布更新和功能的能力变成了一项竞争优势。</st>
    <st c="6575">这导致了</st> <st c="6584">对</st> **<st c="6603">持续集成</st>**<st c="6625">/</st>**<st
    c="6627">持续交付</st>** <st c="6646">（</st>**<st c="6648">CI/CD</st>**<st c="6653">）实践在</st>
    <st c="6673">DevOps 框架中的应用。</st>'
- en: '**<st c="6691">The rise of cloud computing and automation</st>**<st c="6734">:
    The advent of cloud computing and the increasing availability of automation tools
    allowed for more efficient and scalable software development, delivery, and operations
    processes.</st> <st c="6917">These technologies are fundamental to DevOps, DevSecOps,
    and</st> <st c="6978">SRE practices.</st>'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="6691">云计算和自动化的兴起</st>**<st c="6734">：云计算的出现以及自动化工具的日益普及，使得软件开发、交付和运维过程更加高效和可扩展。</st>
    <st c="6917">这些技术是 DevOps、DevSecOps 和</st> <st c="6978">SRE 实践的基础。</st>'
- en: '**<st c="6992">Growing importance of security</st>**<st c="7023">: With the
    rise in cyber threats and security breaches, integrating security into the software
    development life cycle became crucial.</st> <st c="7158">DevSecOps evolved from
    DevOps by incorporating Sec as a key component from the outset of</st> <st c="7247">development
    projects.</st>'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="6992">安全性日益重要</st>**<st c="7023">：随着网络威胁和安全漏洞的增加，将安全性集成到软件开发生命周期中变得至关重要。</st>
    <st c="7158">DevSecOps 通过在开发项目一开始就将安全（Sec）作为关键组成部分，演变自 DevOps。</st> <st c="7247">开发项目。</st>'
- en: '**<st c="7268">Focus on reliability and user experience</st>**<st c="7309">:
    As user expectations for reliability and performance grew, there was a shift in
    focus toward ensuring that software is not only delivered quickly but also reliably.</st>
    <st c="7477">This led to the emergence of SRE, which blends aspects of software
    engineering with IT operations to create scalable and highly reliable</st> <st
    c="7614">software systems.</st>'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="7268">关注可靠性与用户体验</st>**<st c="7309">：随着用户对可靠性和性能的期望不断增加，关注点转向确保软件不仅能够快速交付，而且还要可靠。</st>
    <st c="7477">这促使了 SRE 的出现，它将软件工程和 IT 运维的各个方面融合在一起，创建可扩展且高度可靠的</st> <st c="7614">软件系统。</st>'
- en: '**<st c="7631">Feedback and continuous improvement</st>**<st c="7667">: The
    need for continuous feedback from</st> <st c="7708">users and rapid adaptation
    to this feedback became paramount.</st> <st c="7770">Agile, DevOps, and SRE methodologies
    all emphasize continuous monitoring, feedback, and improvement to align software
    products more closely with user needs and</st> <st c="7930">business goals.</st>'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="7631">反馈与持续改进</st>**<st c="7667">：从用户获取持续反馈并迅速适应这些反馈的需求变得至关重要。</st>
    <st c="7708">敏捷、DevOps 和 SRE 方法论都强调持续监控、反馈和改进，以使软件产品更紧密地与用户需求和</st> <st c="7930">业务目标对齐。</st>'
- en: '**<st c="7945">Cultural and organizational shifts</st>**<st c="7980">: These
    methodologies also represent a cultural shift in how organizations view software
    development, delivery, and operations.</st> <st c="8109">They promote collaborative,
    cross-functional teams, a fail-fast mindset, and an emphasis on continuous learning</st>
    <st c="8221">and improvement.</st>'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="7945">文化和组织的转变</st>**<st c="7980">：这些方法论还代表了组织对软件开发、交付和运营的看法的文化转变。</st>
    <st c="8109">它们推动了协作型跨职能团队的形成，倡导快速失败的思维方式，并强调持续学习</st> <st c="8221">和改进。</st>'
- en: <st c="8237">The evolution to Agile, DevOps, DevSecOps, and SRE has been driven
    by the need for faster, more efficient, and more reliable software delivery in
    a rapidly changing technological landscape.</st> <st c="8428">These methodologies
    address the increasing complexity of software systems, the need for speed and
    reliability, the integration of security into the development process, and the
    importance of continuous feedback</st> <st c="8639">and improvement.</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8237">向敏捷、DevOps、DevSecOps和SRE的演变，源于在快速变化的技术环境中对更快、更高效、更可靠的软件交付的需求。</st>
    <st c="8428">这些方法论应对了软件系统日益复杂化、对速度和可靠性的需求、将安全性集成到开发过程中的要求，以及持续反馈</st> <st c="8639">和改进的重要性。</st>
- en: <st c="8655">The historical examples presented in this section demonstrate that,
    from the earliest days of computing, strategies for testing, quality, security,
    and feedback have been critical components of software development, delivery,
    and operations.</st> <st c="8898">These strategies have evolved with the evolution
    of technology but have always been integral to the development, delivery, and
    maintenance of reliable, secure, and</st> <st c="9062">user-centered software.</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8655">本节中展示的历史实例表明，从计算机的早期阶段开始，测试、质量、安全性和反馈策略一直是软件开发、交付和运营的关键组成部分。</st>
    <st c="8898">这些策略随着技术的发展而演变，但始终是可靠、安全、以用户为中心的软件开发、交付和维护的不可或缺的一部分。</st>
- en: <st c="9085">Weaknesses of traditional strategies for testing, quality, security,
    and feedback led to the evolution of more integrated, automated, and user-centric
    methodologies in software development, such as Agile, DevOps, and DevSecOps, which
    aim to address these shortcomings by embedding testing, quality assurance, security,
    and feedback deeply and</st> <st c="9428">continuously into the software</st>
    <st c="9460">life cycle.</st>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9085">传统的测试、质量、安全性和反馈策略的不足，促使了更为集成、自动化和以用户为中心的软件开发方法的演变，如敏捷、DevOps和DevSecOps，它们通过将测试、质量保证、安全性和反馈深度</st>
    <st c="9428">并持续地嵌入到软件</st> <st c="9460">生命周期中来解决这些不足。</st>
- en: <st c="9471">The next section will explain how original strategies for testing,
    quality, security, and feedback have evolved to keep pace with the modern era
    of continuous development, delivery,</st> <st c="9654">and operations.</st>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9471">接下来的章节将解释最初的测试、质量、安全性和反馈策略是如何演变的，以跟上现代持续开发、交付、</st> <st c="9654">以及运营的步伐。</st>
- en: <st c="9669">Evolution toward continuous testing, quality, security, and feedback</st>
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="9669">向持续测试、质量、安全性和反馈的演变</st>
- en: <st c="9738">The advent of Agile, DevOps, DevSecOps, and SRE practices has necessitated
    a significant evolution in the testing, quality, security, and feedback strategies.</st>
    <st c="9898">This evolution, illustrated in</st> *<st c="9929">Figure 1</st>**<st
    c="9937">.2</st>*<st c="9939">, is driven by changes in technology, business needs,
    and the continuous approach to software development, delivery,</st> <st c="10056">and
    operations.</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9738">敏捷、DevOps、DevSecOps和SRE实践的出现，迫使测试、质量、安全性和反馈策略经历了重大的演变。</st> <st
    c="9898">这种演变，如</st> *<st c="9929">图1</st>**<st c="9937">.2</st>*<st c="9939">所示，受到技术、业务需求和软件开发、交付、</st>
    <st c="10056">以及运营的持续性方法驱动。</st>
- en: '![Figure 1.2 – Continuous testing, quality, security, and feedback](img/B21936_01_2.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2 – 持续测试、质量、安全性和反馈](img/B21936_01_2.jpg)'
- en: <st c="10219">Figure 1.2 – Continuous testing, quality, security, and feedback</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10219">图1.2 – 持续测试、质量、安全性和反馈</st>
- en: <st c="10283">Let’s explore the specific attributes of testing, quality, security,
    and feedback strategies that needed to evolve to</st> <st c="10402">become “continuous”:</st>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10283">让我们来探讨那些需要演变成“持续性”的测试、质量、安全性和反馈策略的具体属性：</st>
- en: '**<st c="10422">Testing in the context of Agile, DevOps, DevSecOps,</st>**
    **<st c="10475">and SRE</st>**<st c="10482">:</st>'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10422">在 Agile、DevOps、DevSecOps 和 SRE 背景下的测试</st>**  '
- en: '**<st c="10484">Faster release cycles</st>**<st c="10505">: Traditional</st>
    <st c="10519">testing methods were too slow for the rapid deployment cycles in
    DevOps.</st> <st c="10593">CI/CD pipelines required automated, more frequent,
    and more sophisticated testing strategies to ensure that new features and updates
    could be deployed quickly without</st> <st c="10760">compromising quality.</st>'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10484">更快的发布周期</st>**<st c="10505">：传统的</st> <st c="10519">测试方法对于
    DevOps 中快速部署的周期来说过于缓慢。</st> <st c="10593">CI/CD 管道要求自动化、更频繁和更复杂的测试策略，以确保新功能和更新能够快速部署，而不</st>
    <st c="10760">影响质量。</st>'
- en: '**<st c="10781">Shift-left testing</st>**<st c="10800">: DevOps advocates for</st>
    *<st c="10824">shifting left</st>* <st c="10837">in the software development life
    cycle, meaning</st> <st c="10886">testing begins much earlier in the process.</st>
    <st c="10930">This shift ensures that defects are caught and addressed sooner,
    reducing costs</st> <st c="11010">and time-to-market.</st>'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10781">Shift-left 测试</st>**<st c="10800">：DevOps 倡导在</st> *<st c="10824">软件开发生命周期中向左转移</st>*
    <st c="10837">，意味着测试从一开始就早早开始。</st> <st c="10886">这种转变确保了缺陷能够尽早被发现并解决，从而减少成本</st>
    <st c="11010">和市场投入时间。</st>'
- en: '**<st c="11029">Reliability and availability</st>**<st c="11058">: In SRE,
    the focus is on the reliability, availability, and performance of</st> <st c="11134">services.</st>
    <st c="11145">Testing here includes not just functional testing but also load,
    performance, and resilience testing to ensure the system can handle</st> <st c="11278">real-world
    scenarios.</st>'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11029">可靠性和可用性</st>**<st c="11058">：在 SRE 中，重点是服务的可靠性、可用性和性能。</st>
    <st c="11134">这里的测试不仅包括功能测试，还包括负载、性能和弹性测试，以确保系统能够处理</st> <st c="11278">现实世界的场景。</st>'
- en: '**<st c="11299">Quality in the era of Agile, DevOps, DevSecOps,</st>** **<st
    c="11348">and SRE</st>**<st c="11355">:</st>'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11299">在 Agile、DevOps、DevSecOps 和 SRE 时代的质量</st>**  '
- en: '**<st c="11357">A user-centric focus</st>**<st c="11377">: The rapid and iterative
    nature of DevOps requires a user-centric approach to</st> <st c="11457">quality.</st>
    <st c="11466">Features and updates are rolled out continually, and the quality
    of these increments directly impacts</st> <st c="11568">user experience.</st>'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11357">以用户为中心的焦点</st>**<st c="11377">：DevOps 的快速和迭代性特点要求采用以用户为中心的质量管理方式。</st>
    <st c="11457">功能和更新不断推出，这些增量的质量直接影响到</st> <st c="11568">用户体验。</st>'
- en: '**<st c="11584">Monitoring and performance metrics</st>**<st c="11619">: SRE
    places significant emphasis on using real-time monitoring and performance metrics</st>
    <st c="11707">to maintain and improve the quality of services.</st> <st c="11757">These
    metrics are vital for making data-driven decisions about</st> <st c="11820">system
    improvements.</st>'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11584">监控和性能指标</st>**<st c="11619">：SRE 强调使用实时监控和性能指标</st> <st c="11707">以维护和提升服务质量。</st>
    <st c="11757">这些指标对于基于数据的决策至关重要，</st> <st c="11820">尤其是在系统改进方面。</st>'
- en: '**<st c="11840">Security in the context of Agile, DevOps, DevSecOps,</st>**
    **<st c="11894">and SRE</st>**<st c="11901">:</st>'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11840">在 Agile、DevOps、DevSecOps 和 SRE 背景下的安全性</st>**'
- en: '**<st c="11903">Continuous security</st>**<st c="11922">: The</st> <st c="11928">traditional
    model of addressing security at the end of the software development life cycle
    is not viable in a fast-paced DevOps environment.</st> <st c="12070">DevSecOps
    integrates security into every stage of the development process, while SecOps
    integrates security protections in products; together, they ensure</st> <st c="12225">continuous
    security.</st>'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11903">持续的安全性</st>**<st c="11922">：在快速变化的 DevOps 环境中，传统的在软件开发生命周期结束时处理安全性的模式已不再可行。</st>
    <st c="12070">DevSecOps 将安全集成到开发过程的每个阶段，而 SecOps 在产品中集成安全保护；二者共同确保</st> <st c="12225">持续的安全性。</st>'
- en: '**<st c="12245">Automated security testing</st>**<st c="12272">: Automation
    in</st> <st c="12289">security testing is crucial in DevSecOps and SecOps.</st>
    <st c="12342">Tools that automatically scan original and third-party code for
    vulnerabilities are integrated into the CI/CD pipeline, allowing you to immediately
    detect and remediate security issues.</st> <st c="12528">Also included is the
    automation of penetration testing and tools that monitor and protect operating
    software in production to identify and mitigate security intrusions, enabling
    an improved defense of deployed software systems</st> <st c="12755">in production.</st>'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12245">自动化安全测试</st>**<st c="12272">：安全测试中的自动化对于 DevSecOps 和 SecOps
    至关重要。</st> <st c="12289">自动扫描原始代码和第三方代码中的漏洞的工具被集成到 CI/CD 流水线中，允许你立即发现并修复安全问题。</st>
    <st c="12342">还包括渗透测试的自动化，以及监控和保护生产中操作软件的工具，以识别和缓解安全入侵，从而增强对已部署软件系统的防护。</st> <st
    c="12755">在生产中。</st>'
- en: '**<st c="12769">Compliance as code</st>**<st c="12788">: In</st> <st c="12794">DevSecOps,
    compliance requirements are codified so that they can be automatically and consistently
    enforced throughout the development and operations</st> <st c="12944">life cycle.</st>'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12769">合规性即代码</st>**<st c="12788">：在</st> <st c="12794">DevSecOps
    中，合规性要求被编码化，以便可以在整个开发和运营生命周期中自动且一致地执行。</st>'
- en: '**<st c="12955">Feedback in the context of Agile, DevOps, DevSecOps,</st>**
    **<st c="13009">and SRE</st>**<st c="13016">:</st>'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12955">敏捷、DevOps、DevSecOps 中的反馈</st>** **<st c="13009">以及 SRE</st>**<st
    c="13016">：</st>'
- en: '**<st c="13018">A continuous feedback loop</st>**<st c="13044">: DevOps, DevSecOps,
    and SRE practices thrive on a continuous feedback loop</st> <st c="13120">between
    development, operations, and the user.</st> <st c="13168">This feedback is crucial
    for the rapid iteration of software delivery and deployment to</st> <st c="13256">production
    operations.</st>'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="13018">持续反馈循环</st>**<st c="13044">：DevOps、DevSecOps 和 SRE 实践依赖于开发、运营和用户之间的持续反馈循环</st>
    <st c="13120">。</st> <st c="13168">这种反馈对于软件交付和部署到生产运营的快速迭代至关重要。</st>'
- en: '**<st c="13278">Blameless postmortems</st>**<st c="13300">: SRE practices</st>
    <st c="13316">such as conducting blameless postmortems after incidents facilitate
    a culture of learning and improvement.</st> <st c="13424">This approach allows
    teams to understand what went wrong and how to prevent it in the future, without
    focusing on</st> <st c="13538">individual faults.</st>'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="13278">无责事后分析</st>**<st c="13300">：SRE 实践</st> <st c="13316">如在事件后进行无责事后分析，促进了学习和改进的文化。</st>
    <st c="13424">这种方法使团队能够理解发生了什么问题，以及如何在未来避免，而不是聚焦于</st> <st c="13538">个人的错误。</st>'
- en: '**<st c="13556">Cross-functional collaboration</st>**<st c="13587">: Feedback
    in these methodologies is not just about user input but also involves</st> <st
    c="13668">cross-functional team collaboration.</st> <st c="13706">Sharing insights
    and knowledge between development, operations, security, and other stakeholders
    is key to improving processes</st> <st c="13833">and outcomes.</st>'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="13556">跨职能协作</st>**<st c="13587">：这些方法中的反馈不仅仅是用户输入，还包括</st> <st c="13668">跨职能团队的协作。</st>
    <st c="13706">在开发、运营、安全性及其他利益相关者之间共享见解和知识是改善流程</st> <st c="13833">和结果的关键。</st>'
- en: '*<st c="13846">Figure 1</st>**<st c="13855">.3</st>* <st c="13857">illustrates
    the relationships between continuous testing, quality, security, and feedback
    relative to continuous development (Agile), continuous delivery (DevOps and DevSecOps),
    and continuous operations (SRE).</st> <st c="14069">The figure shows that continuous
    testing, quality, and security are active during the development, delivery, and
    operations phases.</st> <st c="14201">It also shows that results from each phase,
    resulting from these strategies, provide continuous feedback data that affects
    the continuous iterations of</st> <st c="14353">each phase.</st>'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="13846">图 1</st>**<st c="13855">.3</st>* <st c="13857">展示了持续测试、质量、安全性和反馈相对于持续开发（敏捷）、持续交付（DevOps
    和 DevSecOps）以及持续运营（SRE）之间的关系。</st> <st c="14069">该图显示，持续测试、质量和安全性在开发、交付和运营阶段是活跃的。</st>
    <st c="14201">它还显示，来自每个阶段的结果，这些策略所带来的结果，提供了持续的反馈数据，这些数据影响着每个阶段的持续迭代。</st>'
- en: '![Figure 1.3 – The continuous testing, quality, security, and feedback relationships](img/B21936_01_3.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 持续测试、质量、安全性和反馈关系](img/B21936_01_3.jpg)'
- en: <st c="14464">Figure 1.3 – The continuous testing, quality, security, and feedback
    relationships</st>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14464">图 1.3 – 持续测试、质量、安全性和反馈关系</st>
- en: <st c="14546">The evolution of testing, quality, security, and feedback in the
    context of DevOps, DevSecOps, and SRE reflects a broader shift in software development
    and operations.</st> <st c="14715">This shift is toward more continuous, integrated,
    automated, and user-focused practices, aimed at delivering high-quality, secure
    software at a faster pace and with</st> <st c="14880">greater reliability.</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14546">在DevOps、DevSecOps和SRE背景下，测试、质量、安全性和反馈的演变反映了软件开发和运维的更广泛转变。</st>
    <st c="14715">这一转变是朝着更持续、集成、自动化和以用户为中心的实践方向发展，旨在以更快的速度和更高的可靠性交付高质量、安全的软件。</st>
- en: <st c="14900">Defining continuous testing, quality, security, and feedback</st>
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="14900">定义持续测试、质量、安全性和反馈</st>
- en: <st c="14961">This section explains the importance of defining continuous testing,
    quality, security, and feedback and the challenges associated with doing so, followed
    by practical definitions for continuous testing, quality, security,</st> <st c="15185">and
    feedback.</st>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14961">本节解释了定义持续测试、质量、安全性和反馈的重要性以及与此相关的挑战，随后提供了持续测试、质量、安全性、</st> <st
    c="15185">和反馈的实际定义。</st>
- en: <st c="15198">The need for definitions of testing, quality, security, and feedback</st>
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="15198">对测试、质量、安全性和反馈的定义需求</st>
- en: <st c="15267">There are no</st> <st c="15281">standard definitions for continuous
    testing, quality, security, and</st> <st c="15349">feedback, just as there are
    no standard definitions for DevOps, DevOps, or</st> <st c="15424">SRE.</st> <st
    c="15429">However, defining continuous testing, quality, security, and</st> <st
    c="15489">feedback within the context of an organization’s transformation to mature
    DevOps, DevSecOps, and SRE practices is crucial for several reasons.</st> <st
    c="15633">Definitions provide a foundation to establish metrics and measure the
    performance and progress for people, processes, and technologies dimensions of
    holistic digital transformations.</st> <st c="15816">The importance, potential
    benefits, and consequences of having (or not having) these clear definitions are
    explained in</st> <st c="15936">this section.</st>
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15267">对于持续测试、质量、安全性和</st> <st c="15281">反馈，并没有标准定义，就像对于DevOps、DevOps或</st>
    <st c="15349">SRE也没有标准定义一样。</st> <st c="15429">然而，在组织向成熟的DevOps、DevSecOps和SRE实践转型的背景下，定义持续测试、质量、安全性和</st>
    <st c="15489">反馈是至关重要的，原因有很多。</st> <st c="15633">定义为衡量和评估数字化转型中人员、流程和技术维度的表现和进展提供了基础。</st>
    <st c="15816">本节解释了拥有（或没有）这些清晰定义的重要性、潜在好处和后果。</st>
- en: <st c="15949">The importance of definitions</st>
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="15949">定义的重要性</st>
- en: <st c="15979">Let’s</st> <st c="15985">understand</st> <st c="15997">why</st>
    <st c="16000">definitions</st> <st c="16013">are</st> <st c="16016">important:</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15979">让我们</st> <st c="15985">理解</st> <st c="15997">为什么</st> <st c="16000">定义</st>
    <st c="16013">是</st> <st c="16016">重要的：</st>
- en: '**<st c="16027">A basis for measurement</st>**<st c="16051">: Clear definitions
    allow organizations to establish specific, measurable criteria to evaluate the
    effectiveness of their practices.</st> <st c="16185">This is essential for</st>
    <st c="16207">continuous improvement.</st>'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16027">衡量的基础</st>**<st c="16051">：清晰的定义使组织能够建立具体、可衡量的标准来评估其实践的有效性。</st>
    <st c="16185">这是</st> <st c="16207">持续改进的基础。</st>'
- en: '**<st c="16230">Common understanding</st>**<st c="16251">: Definitions ensure
    that everyone involved has a common understanding of what is expected, reducing
    ambiguities and misalignments</st> <st c="16383">across teams.</st>'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16230">共同理解</st>**<st c="16251">：定义确保所有参与者对期望的内容有共同的理解，减少跨团队之间的模糊性和不一致。</st>'
- en: '**<st c="16396">Goal alignment</st>**<st c="16411">: Well-defined concepts
    help align the goals of various teams (development, operations, and security)
    toward a unified objective, crucial in collaborative environments such as DevOps</st>
    <st c="16595">and DevSecOps.</st>'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16396">目标对齐</st>**<st c="16411">：明确的概念有助于对齐各个团队（开发、运维和安全）的目标，以统一的目标为方向，这对于像DevOps</st>
    <st c="16595">和DevSecOps这样的协作环境至关重要。</st>'
- en: <st c="16609">The benefits of clear definitions</st>
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="16609">清晰定义的好处</st>
- en: <st c="16643">Let’s</st> <st c="16649">look</st> <st c="16654">at</st> <st c="16658">the
    benefits</st> <st c="16671">of</st> <st c="16674">definitions:</st>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16643">让我们</st> <st c="16649">来看一看</st> <st c="16654">定义的</st> <st c="16658">好处：</st>
- en: '**<st c="16686">Performance tracking</st>**<st c="16707">: With clear definitions,
    organizations can track the performance of their DevOps, DevSecOps, or SRE initiatives
    over time, identifying areas of success and those</st> <st c="16871">needing improvement.</st>'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16686">性能跟踪</st>**<st c="16707">：通过明确的定义，组织可以跟踪其 DevOps、DevSecOps
    或 SRE 项目的绩效，识别成功的领域和需要改进的地方。</st> '
- en: '**<st c="16891">Improved collaboration</st>**<st c="16914">: Definitions facilitate
    better communication and collaboration between teams, as everyone operates with
    a shared understanding of</st> <st c="17046">key concepts.</st>'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16891">改进的协作</st>**<st c="16914">：定义有助于促进团队之间的更好沟通与协作，因为每个人都基于共同理解的关键概念进行工作。</st>'
- en: '**<st c="17059">Focused training and development</st>**<st c="17092">: Definitions
    enable targeted training and development efforts, focusing on specific areas identified
    through these definitions</st> <st c="17221">and metrics.</st>'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17059">聚焦的培训和发展</st>**<st c="17092">：定义有助于有针对性地进行培训和发展，专注于通过这些定义和指标识别出的特定领域。</st>'
- en: '**<st c="17233">Enhanced process optimization</st>**<st c="17263">: Organizations
    can more effectively identify</st> <st c="17310">and implement process</st> <st
    c="17332">optimizations, leading to</st> <st c="17357">increased efficiency, reduced</st>
    <st c="17387">costs, and</st> <st c="17399">higher-quality output.</st>'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17233">增强的流程优化</st>**<st c="17263">：组织能够更有效地识别并实施流程优化，从而提高效率，降低成本，</st>
    <st c="17357">并产生更高质量的产出。</st>'
- en: <st c="17421">The consequences of a lack of clear definitions</st>
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="17421">缺乏明确定义的后果</st>
- en: <st c="17469">Next, we'll understand what happens when objectives are not</st>
    <st c="17530">clearly defined:</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="17469">接下来，我们将了解当目标没有明确界定时会发生什么：</st> '
- en: '**<st c="17546">Measurement challenges</st>**<st c="17569">: Without clear
    definitions, it becomes challenging to measure and assess the effectiveness of
    DevOps, DevSecOps, and SRE practices, leading to potential inefficiencies and</st>
    <st c="17743">unaddressed problems.</st>'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17546">测量挑战</st>**<st c="17569">：没有明确的定义，就很难衡量和评估 DevOps、DevSecOps
    和 SRE 实践的有效性，这可能导致效率低下和</st> <st c="17743">未解决的问题。</st>'
- en: '**<st c="17764">Misaligned goals</st>**<st c="17781">: Ambiguities can lead
    to misaligned goals and expectations among teams, resulting in conflicts and</st>
    <st c="17882">reduced synergy.</st>'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17764">目标不一致</st>**<st c="17781">：模糊的定义可能导致团队之间目标和期望不一致，从而引发冲突和</st>
    <st c="17882">降低协同效应。</st> '
- en: '**<st c="17898">Ineffective resource allocation</st>**<st c="17930">: Unclear
    definitions make it difficult to identify where resources should be allocated
    for maximum impact, potentially leading to wasted effort</st> <st c="18076">and
    investment.</st>'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17898">资源分配无效</st>**<st c="17930">：模糊的定义使得难以识别应将资源分配到哪里以获得最大影响，可能导致浪费的努力</st>
    <st c="18076">和投资。</st>'
- en: '**<st c="18091">Reduced accountability</st>**<st c="18114">: It becomes harder
    to hold teams and individuals accountable for their roles and responsibilities
    in the absence of well-defined criteria</st> <st c="18254">for success.</st>'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="18091">责任减少</st>**<st c="18114">：在没有明确成功标准的情况下，很难追究团队和个人在其角色和职责中的责任。</st>
    <st c="18254">这会导致责任不清。</st>'
- en: <st c="18266">Clear and unambiguous definitions of continuous testing, quality,
    security, and feedback provide the necessary groundwork to set and measure performance
    metrics, ensuring everyone is aligned toward common goals and facilitating continuous
    improvement.</st> <st c="18519">The lack of such definitions can hinder the progress
    toward maturing practices in</st> <st c="18601">these areas.</st>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18266">清晰且明确的持续测试、质量、安全和反馈的定义为设定和衡量绩效指标提供了必要的基础，确保每个人都朝着共同的目标一致，促进持续改进。</st>
    <st c="18519">缺乏这些定义可能会阻碍在这些领域实践成熟的进展。</st>
- en: <st c="18613">The challenges of defining continuous testing, quality, security,
    and feedback</st>
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="18613">定义持续测试、质量、安全和反馈的挑战</st>
- en: <st c="18692">Standardizing the definitions of continuous testing, quality,
    security, and feedback is a challenging task for any organization, due to the
    dynamic and varied nature of software development and deployment environments.</st>
    <st c="18912">While these processes can be broadly defined, their implementation
    and implications are not bound by absolute characteristics.</st> <st c="19039">After
    all, there is no such thing as 100% testing, quality, security, or feedback.</st>
    <st c="19122">These aspects are always relative to specific objectives and contexts.</st>
    <st c="19193">Here are</st> <st c="19202">the challenges:</st>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18692">标准化连续测试、质量、安全性和反馈的定义对于任何组织来说都是一项具有挑战性的任务，因为软件开发和部署环境的动态性和多样性。</st>
    <st c="18912">虽然这些过程可以被广泛定义，但它们的实施和影响并没有绝对的特征。</st> <st c="19039">毕竟，根本没有所谓的100%的测试、质量、安全性或反馈。</st>
    <st c="19122">这些方面总是相对于特定的目标和背景。</st> <st c="19193">以下是</st> <st c="19202">这些挑战：</st>
- en: '**<st c="19217">The challenges of defining</st>** **<st c="19245">continuous
    testing</st>**<st c="19263">:</st>'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="19217">定义</st>** **<st c="19245">连续测试</st>**<st c="19263">的挑战：</st>'
- en: '**<st c="19265">Varied testing needs</st>**<st c="19285">: The</st> <st c="19291">scope
    and method of software testing vary greatly, depending on the type of software,
    its intended use, user base, and the development methodology employed.</st> <st
    c="19449">For instance, testing for a safety-critical system such as aviation
    software differs vastly from testing a consumer</st> <st c="19565">mobile application.</st>'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="19265">多样化的测试需求</st>**<st c="19285">：软件测试的范围和方法差异很大，取决于软件类型、预期用途、用户群体以及采用的开发方法论。</st>
    <st c="19449">例如，航空软件等安全关键系统的测试与消费者</st> <st c="19565">移动应用的测试有很大的不同。</st>'
- en: '**<st c="19584">Evolving technologies</st>**<st c="19606">: As technology evolves,
    so do the testing methodologies.</st> <st c="19665">New paradigms such as AI and
    IoT bring new testing challenges that were not considered in traditional</st>
    <st c="19767">testing frameworks.</st>'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="19584">不断发展的技术</st>**<st c="19606">：随着技术的进步，测试方法也在不断发展。</st> <st c="19665">新的范式，如人工智能和物联网，带来了新的测试挑战，而这些挑战在传统</st>
    <st c="19767">的测试框架中并未被考虑到。</st>'
- en: '**<st c="19786">The challenges of defining</st>** **<st c="19814">continuous
    quality</st>**<st c="19832">:</st>'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="19786">定义</st>** **<st c="19814">连续质量</st>**<st c="19832">的挑战：</st>'
- en: '**<st c="19834">Subjective nature</st>**<st c="19851">: Quality is</st> <st
    c="19865">inherently subjective and can be viewed differently by different stakeholders.</st>
    <st c="19944">For a developer, it might mean code readability and maintainability,
    while for end users, it’s about usability</st> <st c="20055">and performance.</st>'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="19834">主观性</st>**<st c="19851">：质量本质上是主观的，不同的利益相关者可能有不同的看法。</st> <st
    c="19865">对于开发人员来说，质量可能意味着代码的可读性和可维护性，而对于最终用户来说，质量关乎可用性</st> <st c="20055">和性能。</st>'
- en: '**<st c="20071">Context-dependent</st>**<st c="20089">: The quality standards
    for a rapidly developed prototype may not be the same as for a mature, customer-facing
    product.</st> <st c="20210">The context of development and deployment plays a
    crucial role in determining what</st> <st c="20293">constitutes quality.</st>'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20071">依赖于上下文</st>**<st c="20089">：快速开发的原型的质量标准可能与成熟的、面向客户的产品的质量标准不同。</st>
    <st c="20210">开发和部署的背景在决定什么构成质量方面起着至关重要的作用。</st>'
- en: '**<st c="20313">The challenges of defining</st>** **<st c="20341">continuous
    security</st>**<st c="20360">:</st>'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20313">定义</st>** **<st c="20341">连续安全性</st>**<st c="20360">的挑战：</st>'
- en: '**<st c="20362">Changing threat landscape</st>**<st c="20387">: The</st> <st
    c="20394">landscape of cybersecurity threats is continually evolving.</st> <st
    c="20454">What is considered secure today may not be secure tomorrow, making it
    impossible to achieve</st> <st c="20546">absolute security.</st>'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20362">不断变化的威胁环境</st>**<st c="20387">：网络安全威胁的环境在不断发展变化。</st> <st c="20394">今天被认为安全的东西，明天可能就不再安全，因此无法实现</st>
    <st c="20546">绝对的安全性。</st>'
- en: '**<st c="20564">Risk management</st>**<st c="20580">: Security is often about
    managing risk rather than eliminating it.</st> <st c="20649">Different applications
    require different levels of security, based on their exposure to threats and the
    sensitivity of the data</st> <st c="20777">they handle.</st>'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20564">风险管理</st>**<st c="20580">：安全性通常是关于管理风险，而非消除风险。</st> <st c="20649">不同的应用程序根据其面临的威胁和处理的数据敏感性，需要不同级别的安全性。</st>
    <st c="20777">它们所处理的数据的敏感性决定了所需的安全性。</st>'
- en: '**<st c="20789">Challenges of defining</st>** **<st c="20813">continuous feedback</st>**<st
    c="20832">:</st>'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20789">定义持续反馈的挑战</st>** **<st c="20813">：</st>**<st c="20832">持续反馈的挑战</st>：'
- en: '**<st c="20834">Diverse sources and interpretations</st>**<st c="20869">: Feedback</st>
    <st c="20881">can come from various sources (users, stakeholders, and automated
    systems) and can be interpreted in many ways.</st> <st c="20993">What is valuable
    feedback in one scenario might be irrelevant</st> <st c="21055">in another.</st>'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="20834">多样化的来源和解释</st>**<st c="20869">：反馈</st> <st c="20881">可以来自不同的来源（用户、利益相关者和自动化系统），并且可以有多种解释。</st>
    <st c="20993">在某种情境下有价值的反馈，在另一个情境中可能是无关的。</st> <st c="21055">。</st>'
- en: '**<st c="21066">Continuous adaptation</st>**<st c="21088">: Feedback mechanisms
    must adapt to the changing needs and expectations of users and the market.</st>
    <st c="21186">This means that the process of gathering and implementing feedback
    is never complete and always subject</st> <st c="21290">to change.</st>'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="21066">持续适应</st>**<st c="21088">：反馈机制必须适应用户和市场需求与期望的变化。</st> <st c="21186">这意味着收集和实施反馈的过程永远不会完成，并且始终处于变化之中。</st>
    <st c="21290">不断变化。</st>'
- en: <st c="21300">While processes of testing, quality, security, and feedback for
    continuous delivery and continuous operations can be defined, they do not possess
    absolute characteristics.</st> <st c="21473">They are highly context-dependent
    and must be aligned with specific objectives, technological environments, and
    user expectations.</st> <st c="21604">This inherent variability and the need for
    constant adaptation make it challenging to standardize these concepts across all
    software development and</st> <st c="21753">operation scenarios.</st>
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21300">虽然可以定义持续交付和持续运营的测试、质量、安全和反馈流程，但它们并不具有绝对的特性。</st> <st c="21473">它们高度依赖于具体的背景，并且必须与特定的目标、技术环境和用户期望对齐。</st>
    <st c="21604">这种固有的变动性和不断适应的需求，使得在所有软件开发和</st> <st c="21753">运营场景中标准化这些概念变得具有挑战性。</st>
- en: <st c="21773">A definition of continuous testing, quality, security, and feedback</st>
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="21773">持续测试、质量、安全和反馈的定义</st>
- en: <st c="21841">In the dynamic field of software engineering, particularly with
    continuous delivery (DevOps and DevSecOps) practices and continuous operation
    (SRE) practices, it’s crucial to focus on outcomes rather than just process actions.</st>
    <st c="22069">Many existing definitions tend to concentrate excessively on procedural
    aspects, overlooking the importance of aligning with business outcomes.</st> <st
    c="22213">A more practical and useful approach involves defining strategies for
    continuous testing, continuous quality, continuous security, and continuous feedback
    in a way that emphasizes measurable business outcomes.</st> <st c="22423">These
    outcomes, particularly aligned</st> <st c="22459">with the</st> **<st c="22469">DevOps
    Research Association’s</st>** <st c="22498">(</st>**<st c="22500">DORA’s</st>**<st
    c="22506">) metrics, are critical in assessing the efficiency and success of software
    development practices.</st> <st c="22606">With these considerations in mind, the
    following definitions can be used in</st> <st c="22682">this document:</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21841">在动态变化的软件工程领域，特别是在持续交付（DevOps和DevSecOps）实践和持续运营（SRE）实践中，关键是关注结果，而不仅仅是过程行为。</st>
    <st c="22069">许多现有的定义过于侧重于过程方面，忽视了与业务结果对齐的重要性。</st> <st c="22213">一种更实用且有用的方法是，定义持续测试、持续质量、持续安全和持续反馈的策略，强调可衡量的业务成果。</st>
    <st c="22423">这些结果，特别是与</st> <st c="22459">DevOps研究协会的</st> **<st c="22469">DORA</st>**
    <st c="22498">(</st>**<st c="22500">DORA</st>**<st c="22506">)指标对齐，对评估软件开发实践的效率和成功至关重要。</st>
    <st c="22606">考虑到这些因素，以下定义可以在</st> <st c="22682">本文件中使用：</st>
- en: '**<st c="22696">A continuous testing definition</st>**<st c="22728">: Continuous
    testing is a strategy designed to reduce lead times and</st> <st c="22798">failure
    rates in continuous delivery pipelines and continuous operations, through automated
    and iterative testing processes, aiming for decreased time from code commit to
    production deployment and reduced failures</st> <st c="23012">in production:</st>'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="22696">持续测试定义</st>**<st c="22728">：持续测试是一种旨在减少持续交付管道和持续运营中的前置时间和故障率的策略，通过自动化和迭代测试过程，目标是减少从代码提交到生产部署的时间，并减少生产中的故障</st>
    <st c="23012">：</st>'
- en: '*<st c="23026">Metrics</st>*<st c="23034">:</st>'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="23026">指标</st>*<st c="23034">：</st>'
- en: <st c="23036">Time spent on testing tasks, from code commit to</st> <st c="23085">production
    deployment.</st>
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23036">从代码提交到</st> <st c="23085">生产部署的测试任务时间。</st>
- en: <st c="23107">The percentage of defects that escape</st> <st c="23146">to production.</st>
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23107">逃逸到生产环境的缺陷百分比。</st>
- en: '*<st c="23160">Rationale</st>*<st c="23170">:</st>'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="23160">原理</st>*<st c="23170">：</st>'
- en: <st c="23172">This definition integrates testing into every stage of development,
    delivery, and operations, ensuring early and consistent detection and resolution
    of issues, which is crucial for rapid and reliable software delivery</st> <st
    c="23390">and operations.</st>
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23172">该定义将测试整合到开发、交付和运维的每个阶段，确保问题能够早期并持续地被发现和解决，这对于快速且可靠的软件交付</st> <st
    c="23390">和运营至关重要。</st>
- en: '**<st c="23405">A continuous quality definition</st>**<st c="23437">: Continuous
    quality is a strategy to enhance user satisfaction and reduce</st> <st c="23512">production
    failure rates by integrating quality metrics throughout the development, delivery,
    and production processes, focusing on stable releases with fewer</st> <st c="23672">user
    issues:</st>'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="23405">持续质量定义</st>**<st c="23437">：持续质量是一种战略，旨在通过在开发、交付和生产过程中整合质量指标，增强用户满意度并减少生产故障率，专注于稳定的发布和减少</st>
    <st c="23672">用户问题：</st>'
- en: '*<st c="23684">Metrics</st>*<st c="23692">:</st>'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="23684">指标</st>*<st c="23692">：</st>'
- en: <st c="23694">The rate of releases approved</st> <st c="23724">for deployment</st>
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23694">批准发布的</st> <st c="23724">部署率</st>
- en: <st c="23738">Customer-reported issues</st> <st c="23764">per release</st>
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23738">客户报告的每次发布问题</st> <st c="23764">数量</st>
- en: <st c="23775">Availability level</st> <st c="23795">objectives (SLOs)</st>
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23775">可用性级别</st> <st c="23795">目标（SLOs）</st>
- en: '*<st c="23812">Rationale</st>*<st c="23822">:</st>'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="23812">原理</st>*<st c="23822">：</st>'
- en: <st c="23824">By prioritizing quality at every phase of development and operations,
    this strategy ensures the delivery of stable and reliable software, meeting user</st>
    <st c="23975">expectations and</st> <st c="23992">business needs.</st>
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23824">通过在开发和运营的每个阶段优先考虑质量，这一战略确保交付稳定和可靠的软件，满足用户</st> <st c="23975">期望和</st>
    <st c="23992">业务需求。</st>
- en: '**<st c="24007">A continuous security definition</st>**<st c="24040">: Continuous
    security is a strategy that integrates security measures</st> <st c="24110">into
    continuous development, delivery, and operations to reduce the frequency and impact
    of security events, measured by security events and security event</st> <st c="24267">resolution
    times:</st>'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="24007">持续安全定义</st>**<st c="24040">：持续安全是一种战略，将安全措施整合到持续的开发、交付和运营中，以减少安全事件的频率和影响，通过安全事件及其</st>
    <st c="24267">解决时间来衡量：</st>'
- en: '*<st c="24284">Metrics</st>*<st c="24292">:</st>'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="24284">指标</st>*<st c="24292">：</st>'
- en: <st c="24294">The number of (pre- and post-release)</st> <st c="24332">security
    events</st>
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24294">（发布前和发布后）</st> <st c="24332">安全事件的数量</st>
- en: <st c="24347">The mean time to detect, respond, and resolve</st> <st c="24394">security
    events</st>
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24347">检测、响应和解决</st> <st c="24394">安全事件的平均时间</st>
- en: '*<st c="24409">Rationale</st>*<st c="24419">:</st>'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="24409">原理</st>*<st c="24419">：</st>'
- en: <st c="24421">This strategy underscores proactive security practices, embedding
    security considerations into the entire software life cycle, essential for maintaining
    software integrity</st> <st c="24593">and trust.</st>
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24421">这一战略强调主动的安全实践，将安全考虑因素嵌入整个软件生命周期，对于维护软件完整性</st> <st c="24593">和信任至关重要。</st>
- en: '**<st c="24603">A continuous feedback definition</st>**<st c="24636">: Continuous
    Feedback is a strategy that utilizes stakeholder and user</st> <st c="24707">feedback
    to accelerate release frequency and improve recovery times, measured by the implementation
    speed of feedback and its impact on</st> <st c="24844">system reliability:</st>'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="24603">持续反馈定义</st>**<st c="24636">：持续反馈是一种策略，利用利益相关者和用户的反馈来加速发布频率并改善恢复时间，通过反馈的实施速度及其对</st>
    <st c="24844">系统可靠性的影响来衡量：</st>'
- en: '*<st c="24863">Metrics</st>*<st c="24871">:</st>'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="24863">指标</st>*<st c="24871">：</st>'
- en: <st c="24873">Time to implement feedback (source</st> <st c="24908">to resolver)</st>
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24873">实施反馈的时间（来源</st> <st c="24908">到解决器）</st>
- en: <st c="24920">The rate of releases approved</st> <st c="24951">for deployment</st>
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24920">批准发布的</st> <st c="24951">部署率</st>
- en: <st c="24965">Customer-reported issues</st> <st c="24991">per release</st>
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24965">客户报告的每次发布问题</st> <st c="24991">数量</st>
- en: <st c="25002">Availability level</st> <st c="25022">objectives (SLOs)</st>
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="25002">可用性级别</st> <st c="25022">目标 (SLOs)</st>
- en: '*<st c="25039">Rationale</st>*<st c="25049">:</st>'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="25039">理由</st>*<st c="25049">：</st>'
- en: <st c="25051">A systematic</st> <st c="25064">collection and implementation
    of feedback ensure that the software continually evolves in response to user needs
    and market changes, driving</st> <st c="25205">continuous improvement.</st>
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="25051">系统化</st> <st c="25064">的反馈收集和实施确保软件不断响应用户需求和市场变化，推动</st> <st c="25205">持续改进。</st>
- en: '*<st c="25228">Figure 1</st>**<st c="25237">.4</st>* <st c="25239">provides
    practical definitions for continuous testing, quality, security, and feedback,
    as used in</st> <st c="25339">this document.</st>'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="25228">图 1</st>**<st c="25237">.4</st>* <st c="25239">提供了用于本文件中的持续测试、质量、安全和反馈的实际定义。</st>'
- en: '![Figure 1.4 – Continuous testing, quality, security and feedback definitions](img/B21936_01_4.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 持续测试、质量、安全和反馈定义](img/B21936_01_4.jpg)'
- en: <st c="26353">Figure 1.4 – Continuous testing, quality, security and feedback
    definitions</st>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="26353">图 1.4 – 持续测试、质量、安全和反馈定义</st>
- en: <st c="26428">Adopting these strategically focused definitions for continuous
    testing, quality, security, and feedback allows organizations to align their continuous
    development, delivery, and operations practices with measurable business outcomes.</st>
    <st c="26664">This approach not only provides a clear direction for continuous
    improvement but also ensures that the methodologies are evaluated and adjusted,
    based on their impact on key performance indicators.</st> <st c="26862">In the
    evolving landscape of software development, such outcome-driven strategies are
    indispensable to achieve efficiency, reliability, and success in</st> <st c="27013">digital
    transformations.</st>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="26428">采用这些战略性聚焦的定义来界定持续测试、质量、安全和反馈，使组织能够将其持续开发、交付和运营实践与可衡量的业务结果对齐。</st>
    <st c="26664">这种方法不仅为持续改进提供了明确的方向，还确保了这些方法论根据它们对关键绩效指标的影响进行评估和调整。</st> <st c="26862">在软件开发不断发展的环境中，这种以结果为导向的战略对于实现效率、可靠性和数字化转型中的成功至关重要。</st>
- en: <st c="27037">The guiding principles and pillars of continuous testing</st>
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="27037">持续测试的指导原则和支柱</st>
- en: <st c="27094">This</st> <st c="27100">section describes the guiding principles
    and pillars of practice that are important to support an effective continuous
    testing strategy.</st> <st c="27237">They are essential for ensuring that continuous
    testing effectively decreases the time from code commit to production deployment
    and reduces failures</st> <st c="27387">in production.</st>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27094">本</st> <st c="27100">节描述了支持有效持续测试策略的重要指导原则和实践支柱。</st> <st c="27237">它们对于确保持续测试有效缩短从代码提交到生产部署的时间，并减少生产环境中的故障</st>
    <st c="27387">至关重要。</st>
- en: '*<st c="27401">Figure 1</st>**<st c="27410">.5</st>* <st c="27412">illustrates
    the pillars of</st> <st c="27440">continuous testing.</st>'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="27401">图 1</st>**<st c="27410">.5</st>* <st c="27412">展示了持续测试的支柱。</st>'
- en: '![Figure 1.5 – The continuous testing pillars](img/B21936_01_5.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 持续测试支柱](img/B21936_01_5.jpg)'
- en: <st c="27672">Figure 1.5 – The continuous testing pillars</st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27672">图 1.5 – 持续测试支柱</st>
- en: <st c="27715">Let’s look at them</st> <st c="27735">in detail:</st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27715">让我们详细看看它们：</st>
- en: '**<st c="27745">Test automation</st>**<st c="27761">:</st>'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="27745">测试自动化</st>**<st c="27761">：</st>'
- en: '*<st c="27763">Principle</st>*<st c="27772">: Automation</st> <st c="27785">is
    key to achieving the</st> <st c="27809">speed and consistency required for continuous
    testing.</st> <st c="27865">Automated tests can be run frequently and consistently,
    ensuring rapid feedback on the health of</st> <st c="27962">the software.</st>'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="27763">原则</st>*<st c="27772">：自动化</st> <st c="27785">是实现</st> <st c="27809">持续测试所需的速度和一致性的关键。</st>
    <st c="27865">自动化测试可以频繁且一致地运行，确保对</st> <st c="27962">软件健康状况的快速反馈。</st>'
- en: '*<st c="27975">Pillar</st>*<st c="27982">: Develop and maintain a suite of
    automated tests that cover a wide range of aspects, including unit, integration,
    regression, performance, security, system, and user</st> <st c="28150">acceptance
    testing.</st>'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="27975">支柱</st>*<st c="27982">：开发并维护一套自动化测试，涵盖多个方面，包括单元测试、集成测试、回归测试、性能测试、安全测试、系统测试和用户</st>
    <st c="28150">验收测试。</st>'
- en: '**<st c="28169">Integration with a development</st>** **<st c="28201">life
    cycle</st>**<st c="28211">:</st>'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28169">与开发</st>** **<st c="28201">生命周期的集成</st>**<st c="28211">：</st>'
- en: '*<st c="28213">Principle</st>*<st c="28222">: Testing should be</st> <st c="28242">integrated
    into the development process from the very beginning, not tacked on at</st> <st
    c="28325">the end.</st>'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="28213">原则</st>*<st c="28222">: 测试应该从一开始就融入开发过程，而不是在</st> <st c="28325">最后才加上。</st>'
- en: '*<st c="28333">Pillar</st>*<st c="28340">: Implement a shift-left approach,
    where testing starts early in the development cycle.</st> <st c="28429">This</st>
    <st c="28433">includes practices such</st> <st c="28457">as</st> **<st c="28461">Test-Driven
    Development</st>** <st c="28484">(</st>**<st c="28486">TDD</st>**<st c="28489">)
    and</st> **<st c="28496">Behavior-Driven</st>** **<st c="28512">Development</st>**
    <st c="28523">(</st>**<st c="28525">BDD</st>**<st c="28528">).</st>'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="28333">支柱</st>*<st c="28340">: 实施左移策略，在开发周期早期开始进行测试。</st> <st c="28429">这</st>
    <st c="28433">包括诸如</st> **<st c="28461">测试驱动开发</st>** <st c="28484">(</st>**<st
    c="28486">TDD</st>**<st c="28489">) 和</st> **<st c="28496">行为驱动开发</st>** **<st
    c="28512">BDD</st>**<st c="28523">(</st>**<st c="28525">BDD</st>**<st c="28528">)。</st>'
- en: '**<st c="28531">Test feedback</st>**<st c="28545">:</st>'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28531">测试反馈</st>**<st c="28545">:</st>'
- en: '*<st c="28547">Principle</st>*<st c="28556">: Continuous</st> <st c="28570">feedback
    from</st> <st c="28584">testing is vital for the timely identification and resolution</st>
    <st c="28646">of issues.</st>'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="28547">原则</st>*<st c="28556">: 测试的持续反馈对于及时发现和解决</st> <st c="28646">问题至关重要。</st>'
- en: '*<st c="28656">Pillar</st>*<st c="28663">: Establish mechanisms for real-time
    reporting and analysis of test results, ensuring immediate action can be taken
    when issues are identified.</st> <st c="28808">Actions such as bug and vulnerability
    issue reports can</st> <st c="28864">be automated.</st>'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="28656">支柱</st>*<st c="28663">: 建立实时报告和分析测试结果的机制，确保在发现问题时能立即采取行动。</st>
    <st c="28808">例如，bug和漏洞问题报告可以</st> <st c="28864">自动化。</st>'
- en: '**<st c="28877">Testing metrics</st>**<st c="28893">:</st>'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28877">测试指标</st>**<st c="28893">:</st>'
- en: '*<st c="28895">Principle</st>*<st c="28904">: Metrics</st> <st c="28915">and
    measurement are essential to understand the effectiveness of testing efforts and
    to guide</st> <st c="29009">continuous improvement.</st>'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="28895">原则</st>*<st c="28904">: 指标</st> <st c="28915">和测量是了解测试效果以及指导</st>
    <st c="29009">持续改进的必要手段。</st>'
- en: '*<st c="29032">Pillar</st>*<st c="29039">: Use a comprehensive set of quality
    metrics, such as defect density, test coverage, and mean time to resolution, to
    track and improve the</st> <st c="29179">testing process.</st>'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29032">支柱</st>*<st c="29039">: 使用一套全面的质量指标，如缺陷密度、测试覆盖率和平均解决时间，来跟踪和改进</st>
    <st c="29179">测试过程。</st>'
- en: '**<st c="29195">Risk-based testing</st>**<st c="29214">:</st>'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="29195">基于风险的测试</st>**<st c="29214">:</st>'
- en: '*<st c="29216">Principle</st>*<st c="29225">: Focus</st> <st c="29234">testing
    efforts on the most critical aspects of the application, based on</st> <st c="29308">risk
    assessment.</st>'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29216">原则</st>*<st c="29225">: 根据</st> <st c="29234">风险评估，集中测试资源在应用程序的最关键部分。</st>'
- en: '*<st c="29324">Pillar</st>*<st c="29331">: Prioritize testing resources on
    areas with the highest risk or impact, such as critical functionality, performance
    bottlenecks, and</st> <st c="29466">security vulnerabilities.</st>'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29324">支柱</st>*<st c="29331">: 优先分配测试资源到风险或影响最大的领域，如关键功能、性能瓶颈和</st>
    <st c="29466">安全漏洞。</st>'
- en: '**<st c="29491">Test environment and test</st>** **<st c="29518">data management</st>**<st
    c="29533">:</st>'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="29491">测试环境和测试</st>** **<st c="29518">数据管理</st>**<st c="29533">:</st>'
- en: '*<st c="29535">Principle</st>*<st c="29544">: Reliable and consistent test
    environments</st> <st c="29588">and data are necessary for</st> <st c="29616">accurate
    testing.</st>'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29535">原则</st>*<st c="29544">: 可靠和一致的测试环境</st> <st c="29588">及数据对于</st>
    <st c="29616">准确测试是必要的。</st>'
- en: '*<st c="29633">Pillar</st>*<st c="29640">: Ensure the availability of stable,
    scalable, and production-like test environments, along with appropriate test data</st>
    <st c="29760">management strategies.</st>'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29633">支柱</st>*<st c="29640">: 确保测试环境的稳定性、可扩展性和类生产环境的可用性，以及适当的测试数据</st>
    <st c="29760">管理策略。</st>'
- en: '**<st c="29782">Collaboration</st>** **<st c="29797">and communication</st>**<st
    c="29814">:</st>'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="29782">协作</st>** **<st c="29797">与沟通</st>**<st c="29814">:</st>'
- en: '*<st c="29816">Principle</st>*<st c="29825">: Effective collaboration and communication</st>
    <st c="29869">among developers, testers, and operations teams are vital for the
    success of</st> <st c="29947">continuous testing.</st>'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29816">原则</st>*<st c="29825">：开发人员、测试人员和运营团队之间的有效协作与沟通对</st> <st c="29947">持续测试的成功至关重要。</st>'
- en: '*<st c="29966">Pillar</st>*<st c="29973">: Foster a</st> <st c="29984">culture
    of collaboration, where teams work together closely and share responsibility</st>
    <st c="30070">for quality.</st>'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="29966">支柱</st>*<st c="29973">：培养一种协作文化，在这种文化下，团队紧密合作并共同承担</st> <st
    c="30070">质量责任。</st>'
- en: '**<st c="30082">Continuous learning</st>** **<st c="30103">and adaptation</st>**<st
    c="30117">:</st>'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="30082">持续学习</st>** **<st c="30103">与适应</st>**<st c="30117">：</st>'
- en: '*<st c="30119">Principle</st>*<st c="30128">: Continuous testing is an</st>
    <st c="30155">evolving practice that should adapt to changing technologies and</st>
    <st c="30221">project requirements.</st>'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="30119">原则</st>*<st c="30128">：持续测试是一个</st> <st c="30155">不断发展的实践，应适应变化的技术和</st>
    <st c="30221">项目需求。</st>'
- en: '*<st c="30242">Pillar</st>*<st c="30249">: Regularly review and adapt testing
    strategies, tools, and processes to meet the</st> <st c="30332">evolving needs
    of the software and</st> <st c="30367">the business.</st>'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="30242">支柱</st>*<st c="30249">：定期回顾并调整测试策略、工具和流程，以满足软件和</st> <st c="30332">业务的不断发展需求。</st>'
- en: <st c="30380">These guiding principles and pillars of practice form the foundation
    of a robust continuous testing strategy.</st> <st c="30491">They help ensure that
    testing is efficient, effective, and aligned with the overall goals of reducing
    lead times, minimizing failures in production, and ultimately delivering high-quality</st>
    <st c="30679">software promptly.</st>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30380">这些指导原则和实践支柱构成了强大持续测试策略的基础。</st> <st c="30491">它们有助于确保测试的高效、有效，并与降低交付时间、最小化生产中的故障、最终及时交付高质量</st>
    <st c="30679">软件的总体目标保持一致。</st>
- en: <st c="30697">The guiding principles and pillars of continuous quality</st>
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="30697">持续质量的指导原则和支柱</st>
- en: <st c="30754">This</st> <st c="30760">section describes the guiding principles
    and pillars of practice that are important to support an effective continuous</st>
    <st c="30879">quality strategy.</st>
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30754">本</st> <st c="30760">节描述了支持有效持续质量策略的重要指导原则和实践支柱。</st>
- en: '*<st c="30896">Figure 1</st>**<st c="30905">.6</st>* <st c="30907">illustrates
    the pillars of</st> <st c="30935">continuous quality.</st>'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="30896">图 1</st>**<st c="30905">.6</st>* <st c="30907">展示了持续质量的支柱。</st>'
- en: '![Figure 1.6 – The continuous quality pillars](img/B21936_01_6.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 持续质量支柱](img/B21936_01_6.jpg)'
- en: <st c="31178">Figure 1.6 – The continuous quality pillars</st>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31178">图 1.6 – 持续质量支柱</st>
- en: <st c="31221">Let’s have</st> <st c="31233">a look</st> <st c="31240">at them:</st>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31221">让我们来看看它们：</st>
- en: '**<st c="31248">User-centric focus</st>**<st c="31267">:</st>'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="31248">以用户为中心的聚焦</st>**<st c="31267">：</st>'
- en: '*<st c="31269">Principle</st>*<st c="31278">: User</st> <st c="31285">satisfaction
    is a key indicator</st> <st c="31318">of quality.</st>'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="31269">原则</st>*<st c="31278">：用户</st> <st c="31285">满意度是衡量质量的关键指标。</st>'
- en: '*<st c="31329">Pillar</st>*<st c="31336">: Regularly gather and analyze user
    feedback, usability testing results, customer satisfaction metrics, and results
    from satisfaction surveys to guide</st> <st c="31488">quality improvements.</st>'
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="31329">支柱</st>*<st c="31336">：定期收集和分析用户反馈、可用性测试结果、客户满意度指标以及满意度调查的结果，以指导</st>
    <st c="31488">质量改进。</st>'
- en: '**<st c="31509">Integrated</st>** **<st c="31521">quality metrics</st>**<st
    c="31536">:</st>'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="31509">集成的</st>** **<st c="31521">质量指标</st>**<st c="31536">：</st>'
- en: '*<st c="31538">Principle</st>*<st c="31547">: Quality</st> <st c="31558">should
    be measurable and integrated into every stage of the software</st> <st c="31627">life
    cycle.</st>'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="31538">原则</st>*<st c="31547">：质量</st> <st c="31558">应可衡量，并应集成到软件</st>
    <st c="31627">生命周期的每个阶段。</st>'
- en: '*<st c="31638">Pillar</st>*<st c="31645">: Implement and continuously refine
    a set of quality metrics (such as defect rates, uptime, and performance benchmarks)
    across the development, delivery, and</st> <st c="31804">production phases.</st>'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="31638">支柱</st>*<st c="31645">：在开发、交付和生产阶段实施并持续优化一组质量指标（如缺陷率、正常运行时间和性能基准）。</st>'
- en: '**<st c="31822">Proactive</st>** **<st c="31833">quality assurance</st>**<st
    c="31850">:</st>'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="31822">主动</st>** **<st c="31833">质量保证</st>**<st c="31850">：</st>'
- en: '*<st c="31852">Principle</st>*<st c="31861">: Quality is not</st> <st c="31878">just
    about fixing defects; it’s about</st> <st c="31917">preventing them.</st>'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：质量不仅仅是修复缺陷；它还涉及预防缺陷。'
- en: '*<st c="31933">Pillar</st>*<st c="31940">: Employ proactive quality assurance
    practices, such as static code analysis, design reviews, and architectural evaluations,
    to identify and address potential issues early in the</st> <st c="32120">life
    cycle.</st>'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：采用积极的质量保证实践，如静态代码分析、设计审查和架构评估，以便在生命周期的早期识别和解决潜在问题。'
- en: '**<st c="32131">Continuous improvement</st>**<st c="32154">:</st>'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续改进**：'
- en: '*<st c="32156">Principle</st>*<st c="32165">: Quality is an</st> <st c="32181">evolving
    target that requires</st> <st c="32212">continuous improvement.</st>'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：质量是一个不断发展的目标，需要持续改进。'
- en: '*<st c="32235">Pillar</st>*<st c="32242">: Foster a culture of continuous improvement
    with regular retrospectives and reviews of processes, tools, and practices to
    identify areas</st> <st c="32381">for enhancement.</st>'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：通过定期的回顾和过程、工具及实践的评审，培养持续改进的文化，以识别可提升的领域。'
- en: '**<st c="32397">Collaboration</st>** **<st c="32412">and communication</st>**<st
    c="32429">:</st>'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作与沟通**：'
- en: '*<st c="32431">Principle</st>*<st c="32440">: Quality</st> <st c="32451">is
    a collective responsibility</st> <st c="32481">that demands collaboration</st>
    <st c="32509">across teams.</st>'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：质量是一个集体责任，要求团队之间的协作。'
- en: '*<st c="32522">Pillar</st>*<st c="32529">: Encourage cross-functional collaboration
    between developers, QA, operations, and business stakeholders to ensure a unified
    approach</st> <st c="32664">to quality.</st>'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：鼓励开发人员、QA、运营和业务利益相关者之间的跨职能合作，确保质量的统一方法。'
- en: '**<st c="32675">Stable and</st>** **<st c="32687">reliable releases</st>**<st
    c="32704">:</st>'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定且可靠的发布**：'
- en: '*<st c="32706">Principle</st>*<st c="32715">: The</st> <st c="32721">stability
    and reliability of releases</st> <st c="32760">are paramount.</st>'
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：发布的稳定性和可靠性至关重要。'
- en: '*<st c="32774">Pillar</st>*<st c="32781">: Implement robust release management
    and deployment practices to ensure stable and reliable software releases with
    comprehensive testing</st> <st c="32920">and validation.</st>'
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：实施强大的发布管理和部署实践，确保稳定可靠的软件发布，并进行全面的测试和验证。'
- en: '**<st c="32935">Risk management</st>**<st c="32951">:</st>'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险管理**：'
- en: '*<st c="32953">Principle</st>*<st c="32962">: Identifying</st> <st c="32977">and
    managing risk is crucial to</st> <st c="33009">maintaining quality.</st>'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：识别和管理风险对于维护质量至关重要。'
- en: '*<st c="33029">Pillar</st>*<st c="33036">: Conduct regular risk assessments
    and prioritize efforts based on the potential impact on user satisfaction and</st>
    <st c="33150">system stability.</st>'
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：进行定期的风险评估，并根据对用户满意度和系统稳定性的潜在影响来优先安排工作。'
- en: '**<st c="33167">Quality Assurance (</st>****<st c="33187">QA) automation</st>**<st
    c="33202">:</st>'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量保证（QA）自动化**：'
- en: '*<st c="33204">Principle</st>*<st c="33213">: Automation is</st> <st c="33230">essential
    for scaling quality</st> <st c="33260">assurance practices.</st>'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：自动化是扩展质量保证实践的关键。'
- en: '*<st c="33280">Pillar</st>*<st c="33287">: Utilize automated testing and quality
    assurance tools to increase coverage and efficiency, while freeing up resources
    to focus on complex</st> <st c="33428">quality</st> <st c="33436">challenges.</st>'
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：利用自动化测试和质量保证工具提高覆盖面和效率，同时释放资源专注于复杂的质量挑战。'
- en: <st c="33447">These guiding principles and pillars of practice define a comprehensive
    approach to continuous quality.</st> <st c="33552">By focusing on integrating
    quality metrics, emphasizing user satisfaction, promoting proactive quality assurance,
    and fostering continuous improvement, organizations can effectively enhance the
    overall quality of their software products, leading to fewer production failures
    and higher</st> <st c="33838">user satisfaction.</st>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33447">这些指导原则和实践支柱定义了一个全面的持续质量方法。</st> <st c="33552">通过专注于集成质量度量，强调用户满意度，推动积极的质量保证，并促进持续改进，组织可以有效提升其软件产品的整体质量，从而减少生产故障并提高</st>
    <st c="33838">用户满意度。</st>
- en: <st c="33856">The guiding principles and pillars of continuous security</st>
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="33856">持续安全的指导原则和支柱</st>
- en: <st c="33914">This section</st> <st c="33928">describes the guiding principles
    and pillars of practice that are important to support an effective continuous</st>
    <st c="34039">security strategy.</st>
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33914">本节</st> <st c="33928">描述了支持有效持续</st> <st c="34039">安全战略的指导原则和实践支柱。</st>
- en: '*<st c="34057">Figure 1</st>**<st c="34066">.7</st>* <st c="34068">illustrates
    the pillars of</st> <st c="34096">continuous security.</st>'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="34057">图 1</st>**<st c="34066">.7</st>* <st c="34068">展示了持续安全的支柱。</st>'
- en: '![Figure 1.7 – The continuous security pillars](img/B21936_01_7.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 持续安全支柱](img/B21936_01_7.jpg)'
- en: <st c="34398">Figure 1.7 – The continuous security pillars</st>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34398">图 1.7 – 持续安全支柱</st>
- en: <st c="34442">Let’s look at them</st> <st c="34462">in brief:</st>
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34442">我们简要地来看一下它们：</st>
- en: '**<st c="34471">DevSecOps culture</st>**<st c="34489">:</st>'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="34471">DevSecOps 文化</st>**<st c="34489">：</st>'
- en: '*<st c="34491">Principle</st>*<st c="34500">: Collaboration</st> <st c="34516">between</st>
    <st c="34525">development, security, and operations enhances</st> <st c="34572">security
    outcomes.</st>'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="34491">原则</st>*<st c="34500">：开发、 安全和运维之间的合作有助于提升</st> <st c="34572">安全结果。</st>'
- en: '*<st c="34590">Pillar</st>*<st c="34597">: Promote a DevSecOps culture where
    security is a shared responsibility, integrated into the DevOps practices, encouraging
    collaboration and communication</st> <st c="34753">across teams.</st>'
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="34590">支柱</st>*<st c="34597">：推广 DevSecOps 文化，将安全作为共享责任，融入 DevOps 实践中，鼓励跨团队的合作与沟通。</st>'
- en: '**<st c="34766">Security awareness</st>** **<st c="34786">and training</st>**<st
    c="34798">:</st>'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="34766">安全意识</st>** **<st c="34786">与培训</st>**<st c="34798">：</st>'
- en: '*<st c="34800">Principle</st>*<st c="34809">: Security is a</st> <st c="34826">shared
    responsibility and requires awareness at</st> <st c="34874">all levels.</st>'
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="34800">原则</st>*<st c="34809">：安全是共享的责任，所有层级都需要具备安全意识。</st>'
- en: '*<st c="34885">Pillar</st>*<st c="34892">: Provide regular security training
    and awareness programs for all team members to foster a security-conscious culture.</st>
    <st c="35013">For example, security training on topics such</st> <st c="35058">as</st>
    **<st c="35062">Open Worldwide Application Security Project (OWASP)</st>** <st
    c="35113">training, secure coding, and API security can</st> <st c="35160">be
    important.</st>'
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="34885">支柱</st>*<st c="34892">：为所有团队成员提供定期的安全培训和意识提升项目，以培养安全意识文化。</st>
    <st c="35013">例如，针对</st> <st c="35058">诸如</st> **<st c="35062">开放全球应用安全项目（OWASP）</st>**
    <st c="35113">培训、 安全编码和 API 安全的培训可能</st> <st c="35160">非常重要。</st>'
- en: '**<st c="35173">Security integration in the</st>** **<st c="35202">life cycle</st>**<st
    c="35212">:</st>'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="35173">安全集成在</st>** **<st c="35202">生命周期中的</st>**<st c="35212">：</st>'
- en: '*<st c="35214">Principle</st>*<st c="35223">: Security is an</st> <st c="35241">integral
    part of the entire software life cycle, not an</st> <st c="35297">isolated stage.</st>'
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35214">原则</st>*<st c="35223">：安全是整个软件生命周期的</st> <st c="35241">一个不可或缺的部分，而不是一个</st>
    <st c="35297">孤立的阶段。</st>'
- en: '*<st c="35312">Pillar</st>*<st c="35319">: Embed security practices and tools
    into the development, delivery, and operational processes, ensuring that security
    considerations are addressed from inception through to deployment</st> <st c="35505">and
    maintenance.</st>'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35312">支柱</st>*<st c="35319">：将安全实践和工具嵌入到开发、交付和运营流程中，确保从开始到部署</st>
    <st c="35505">和维护的整个过程都考虑到安全因素。</st>'
- en: '**<st c="35521">Automated</st>** **<st c="35532">security testing</st>**<st
    c="35548">:</st>'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="35521">自动化</st>** **<st c="35532">安全测试</st>**<st c="35548">：</st>'
- en: '*<st c="35550">Principle</st>*<st c="35559">: Automation is</st> <st c="35575">key
    to maintaining continuous</st> <st c="35606">security vigilance.</st>'
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35550">原则</st>*<st c="35559">：自动化是</st> <st c="35575">维持持续</st> <st
    c="35606">安全警觉性的关键。</st>'
- en: '*<st c="35625">Pillar</st>*<st c="35632">: Utilize automated security testing
    tools (such as static and dynamic analysis tools and vulnerability scanners) to
    regularly scan and identify security threats at every stage of the</st> <st c="35817">development
    process.</st>'
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35625">支柱</st>*<st c="35632">：利用自动化安全测试工具（如静态和动态分析工具以及漏洞扫描器）定期扫描并识别在</st>
    <st c="35817">开发过程的各个阶段中存在的安全威胁。</st>'
- en: '**<st c="35837">Proactive</st>** **<st c="35848">risk management</st>**<st
    c="35863">:</st>'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="35837">主动</st>** **<st c="35848">风险管理</st>**<st c="35863">：</st>'
- en: '*<st c="35865">Principle</st>*<st c="35874">: Proactive</st> <st c="35886">identification
    and</st> <st c="35906">mitigation of risks are more effective than</st> <st c="35950">reactive
    measures.</st>'
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35865">原则</st>*<st c="35874">：主动识别和</st> <st c="35886">缓解风险比</st> <st
    c="35906">被动应对措施更为有效。</st>'
- en: '*<st c="35968">Pillar</st>*<st c="35975">: Conduct regular security risk assessments
    and threat modeling to proactively identify and address potential</st> <st c="36086">security
    vulnerabilities.</st>'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="35968">支柱</st>*<st c="35975">：定期进行安全风险评估和威胁建模，主动识别并解决潜在的</st> <st c="36086">安全漏洞。</st>'
- en: '**<st c="36111">Rapid</st>** **<st c="36118">incident response</st>**<st c="36135">:</st>'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="36111">快速</st>** **<st c="36118">事件响应</st>**<st c="36135">：</st>'
- en: '*<st c="36137">Principle</st>*<st c="36146">: Quick and</st> <st c="36159">effective
    response to security incidents minimizes</st> <st c="36210">their impact.</st>'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36137">原则</st>*<st c="36146">：快速且</st> <st c="36159">有效地响应安全事件能够最小化</st>
    <st c="36210">其影响。</st>'
- en: '*<st c="36223">Pillar</st>*<st c="36230">: Establish a well-defined incident
    response plan that includes procedures for rapid detection, investigation, and
    remediation of</st> <st c="36361">security events.</st>'
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36223">支柱</st>*<st c="36230">：建立一个明确的事件响应计划，包括快速检测、调查和修复</st> <st c="36361">安全事件的程序。</st>'
- en: '**<st c="36377">Continuous monitoring</st>** **<st c="36400">and compliance</st>**<st
    c="36414">:</st>'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="36377">持续监控</st>** **<st c="36400">与合规性</st>**<st c="36414">：</st>'
- en: '*<st c="36416">Principle</st>*<st c="36425">: Ongoing</st> <st c="36435">monitoring
    and adherence to compliance standards are critical to</st> <st c="36501">maintain
    security.</st>'
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36416">原则</st>*<st c="36425">：持续监控和遵守合规标准对于</st> <st c="36501">保持安全至关重要。</st>'
- en: '*<st c="36519">Pillar</st>*<st c="36526">: Implement continuous monitoring
    solutions to detect and alert about suspicious activities, along with regular
    compliance checks to ensure adherence to relevant security standards</st> <st
    c="36708">and regulations.</st>'
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36519">支柱</st>*<st c="36526">：实施持续监控解决方案，检测和警告可疑活动，并进行定期的合规检查，确保遵守相关的安全标准</st>
    <st c="36708">和法规。</st>'
- en: '**<st c="36724">Feedback and</st>** **<st c="36738">continuous improvement</st>**<st
    c="36760">:</st>'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="36724">反馈与</st>** **<st c="36738">持续改进</st>**<st c="36760">：</st>'
- en: '*<st c="36762">Principle</st>*<st c="36771">: Feedback</st> <st c="36782">is
    essential for the evolution and improvement of</st> <st c="36833">security practices.</st>'
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36762">原则</st>*<st c="36771">：反馈</st> <st c="36782">对安全实践的发展和改进至关重要。</st>'
- en: '*<st c="36852">Pillar</st>*<st c="36859">: Implement feedback mechanisms to
    learn from security events, and continuously improve security measures based on
    lessons learned and</st> <st c="36995">evolving</st> <st c="37004">threats.</st>'
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="36852">支柱</st>*<st c="36859">：实施反馈机制，从安全事件中学习，并根据经验教训和不断变化的</st> <st
    c="36995">威胁</st> <st c="37004">持续改进安全措施。</st>'
- en: <st c="37012">These guiding principles and pillars establish a robust framework
    for continuous security.</st> <st c="37104">They ensure that security is a continuous,
    integrated process, emphasizing proactive risk management, rapid incident response,
    and ongoing monitoring, while fostering a culture of security awareness and collaboration.</st>
    <st c="37322">By adhering to these principles, organizations can effectively reduce
    the frequency and impact of security events, thereby enhancing their overall</st>
    <st c="37469">security posture.</st>
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37012">这些指导原则和支柱建立了一个强大的框架，确保持续的安全性。</st> <st c="37104">它们确保安全是一个持续、集成的过程，强调主动的风险管理、快速的事件响应和持续的监控，同时促进安全意识和合作文化的形成。</st>
    <st c="37322">通过遵循这些原则，组织可以有效地减少安全事件的发生频率和影响，从而增强整体的</st> <st c="37469">安全态势。</st>
- en: <st c="37486">The guiding principles and pillars of continuous feedback</st>
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续反馈的指导原则和支柱
- en: <st c="37544">This</st> <st c="37549">section describes the guiding principles,
    and pillars of practice that are important for an effective continuous</st> <st
    c="37663">feedback strategy.</st>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了有效的持续反馈策略所需的指导原则和实践支柱。
- en: '*<st c="37681">Figure 1</st>**<st c="37690">.8</st>* <st c="37692">illustrates
    the pillars of</st> <st c="37720">Continuous Feedback.</st>'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.8* 说明了持续反馈的支柱。'
- en: '![Figure 1.8 – The continuous feedback pillars](img/B21936_01_8.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – 持续反馈支柱](img/B21936_01_8.jpg)'
- en: <st c="38054">Figure 1.8 – The continuous feedback pillars</st>
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 持续反馈支柱
- en: <st c="38098">Let’s discuss</st> <st c="38112">these</st> <st c="38119">pillars
    next:</st>
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们接下来讨论这些支柱：
- en: '**<st c="38132">Stakeholder and</st>** **<st c="38149">user engagement</st>**<st
    c="38164">:</st>'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利益相关者** **和用户互动**：'
- en: '*<st c="38166">Principle</st>*<st c="38175">: Active</st> <st c="38184">engagement
    with stakeholders and users is essential for relevant and</st> <st c="38254">actionable
    feedback.</st>'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：与利益相关者和用户的积极互动对于获得相关和可操作的反馈至关重要。'
- en: '*<st c="38274">Pillar</st>*<st c="38281">: Establish regular channels to gather
    feedback from all stakeholders, including customers, end users, team members,
    and</st> <st c="38403">business partners.</st>'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：建立常规渠道收集来自所有利益相关者的反馈，包括客户、最终用户、团队成员和商业伙伴。'
- en: '**<st c="38421">Feedback integration</st>** **<st c="38443">with development</st>**<st
    c="38459">:</st>'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反馈与开发的整合**：'
- en: '*<st c="38461">Principle</st>*<st c="38470">: Feedback</st> <st c="38481">should
    be integrated seamlessly into the</st> <st c="38523">development process.</st>'
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：反馈应无缝地融入开发过程。'
- en: '*<st c="38543">Pillar</st>*<st c="38550">: Develop mechanisms to quickly integrate
    feedback into the development pipeline, ensuring that it directly informs development
    priorities</st> <st c="38690">and decisions.</st>'
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：开发机制，迅速将反馈整合进开发流程，确保其直接影响开发优先级和决策。'
- en: '**<st c="38704">Rapid iteration</st>** **<st c="38721">and implementation</st>**<st
    c="38739">:</st>'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速迭代** **和实施**：'
- en: '*<st c="38741">Principle</st>*<st c="38750">: The</st> <st c="38757">value
    of feedback is</st> <st c="38777">maximized when it is implemented rapidly</st>
    <st c="38819">and effectively.</st>'
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：反馈的价值在于迅速和有效地实施。'
- en: '*<st c="38835">Pillar</st>*<st c="38842">: Focus on shortening the cycle time
    from receiving feedback to implementing changes, enabling faster iterations</st>
    <st c="38956">and improvements.</st>'
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：专注于缩短从接收反馈到实施变更的周期时间，从而加速迭代和改进。'
- en: '**<st c="38973">Data-driven</st>** **<st c="38986">decision making</st>**<st
    c="39001">:</st>'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据驱动** **决策制定**：'
- en: '*<st c="39003">Principle</st>*<st c="39012">: Decisions</st> <st c="39025">should
    be based on data derived from feedback, not just intuition</st> <st c="39091">or
    assumptions.</st>'
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：决策应基于从反馈中得出的数据，而不仅仅是直觉或假设。'
- en: '*<st c="39106">Pillar</st>*<st c="39113">: Utilize tools and techniques to
    analyze feedback quantitatively and qualitatively, ensuring that decisions are
    informed by actual user and</st> <st c="39255">stakeholder insights.</st>'
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支柱*：利用工具和技术对反馈进行定量和定性分析，确保决策基于实际用户和利益相关者的洞察。'
- en: '**<st c="39276">Feedback transparency</st>** **<st c="39299">and communication</st>**<st
    c="39316">:</st>'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反馈透明度** **和沟通**：'
- en: '*<st c="39318">Principle</st>*<st c="39327">: Open</st> <st c="39334">communication
    about feedback fosters trust and</st> <st c="39382">continued engagement.</st>'
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原则*：关于反馈的开放沟通能够促进信任并保持持续的互动。'
- en: '*<st c="39403">Pillar</st>*<st c="39410">: Communicate transparently with stakeholders
    about the feedback received, actions taken, and the rationale</st> <st c="39519">behind
    decisions.</st>'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="39403">支柱</st>*<st c="39410">: 与利益相关者透明沟通收到的反馈、采取的措施及决策背后的</st> <st
    c="39519">理由。</st>'
- en: '**<st c="39536">Continuous learning</st>** **<st c="39557">and adaptation</st>**<st
    c="39571">:</st>'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="39536">持续学习</st>** **<st c="39557">和适应</st>**<st c="39571">:</st>'
- en: '*<st c="39573">Principle</st>*<st c="39582">: Feedback</st> <st c="39593">is
    a key driver for continuous learning</st> <st c="39634">and adaptation.</st>'
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="39573">原则</st>*<st c="39582">: 反馈</st> <st c="39593">是持续学习</st> <st
    c="39634">和适应的关键驱动力。</st>'
- en: '*<st c="39649">Pillar</st>*<st c="39656">: Encourage a culture that views feedback
    as an opportunity for learning and improvement, adapting processes and practices
    based on</st> <st c="39789">feedback insights.</st>'
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="39649">支柱</st>*<st c="39656">: 鼓励一种将反馈视为学习和改进机会的文化，基于</st> <st c="39789">反馈见解调整流程和实践。</st>'
- en: '**<st c="39807">Measuring impact</st>** **<st c="39825">and effectiveness</st>**<st
    c="39842">:</st>'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="39807">衡量影响</st>** **<st c="39825">与有效性</st>**<st c="39842">:</st>'
- en: '*<st c="39844">Principle</st>*<st c="39853">: The</st> <st c="39860">effectiveness
    of feedback implementation should be</st> <st c="39911">continually measured.</st>'
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="39844">原则</st>*<st c="39853">: 反馈实施的有效性应该</st> <st c="39860">持续进行衡量。</st>'
- en: '*<st c="39932">Pillar</st>*<st c="39939">: Track and evaluate the impact of
    feedback on release frequency, recovery times, and system reliability to measure
    the effectiveness of</st> <st c="40077">feedback implementation.</st>'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="39932">支柱</st>*<st c="39939">: 跟踪和评估反馈对发布频率、恢复时间和系统可靠性的影响，以衡量反馈实施的</st>
    <st c="40077">有效性。</st>'
- en: '**<st c="40101">Balancing speed</st>** **<st c="40118">and quality</st>**<st
    c="40129">:</st>'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="40101">平衡速度</st>** **<st c="40118">与质量</st>**<st c="40129">:</st>'
- en: '*<st c="40131">Principle</st>*<st c="40140">: While</st> <st c="40148">rapid
    implementation of feedback is important, maintaining quality is</st> <st c="40219">equally
    crucial.</st>'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="40131">原则</st>*<st c="40140">: 尽管</st> <st c="40148">快速实施反馈非常重要，但保持质量同样是</st>
    <st c="40219">至关重要的。</st>'
- en: '*<st c="40235">Pillar</st>*<st c="40242">: Ensure that feedback is implemented
    in a way that balances speed with the need to</st> <st c="40327">maintain or enhance
    the quality and reliability of</st> <st c="40378">a system.</st>'
  id: totrans-262
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="40235">支柱</st>*<st c="40242">: 确保以平衡速度和维护或提高系统质量与可靠性的需求的方式实施反馈。</st>'
- en: <st c="40387">These guiding principles and pillars form a comprehensive framework
    for continuous feedback, emphasizing the importance of stakeholder and user engagement,
    rapid integration of feedback into development, and data-driven decision making.</st>
    <st c="40625">By adhering to these principles, organizations can effectively use
    feedback to drive faster releases, improve recovery times, and enhance overall
    system reliability, thereby aligning closely with the goals of modern software</st>
    <st c="40850">development methodologies.</st>
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40387">这些指导原则和支柱形成了一个全面的持续反馈框架，强调了利益相关者和用户参与的重要性、将反馈快速集成到开发中的必要性，以及基于数据的决策。</st>
    <st c="40625">通过遵循这些原则，组织可以有效利用反馈推动更快的发布、改善恢复时间并增强系统的整体可靠性，从而与现代软件</st> <st c="40850">开发方法的目标紧密对接。</st>
- en: <st c="40876">Summary</st>
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="40876">总结</st>
- en: <st c="40884">In the rapidly evolving landscape of DevOps, DevSecOps, and SRE,
    strategies for continuous testing, quality, security, and feedback have emerged
    as pivotal elements in steering digital transformations toward successful continuous
    development, delivery, and operations.</st> <st c="41154">This chapter delved
    into the heart of these strategies, offering practical definitions and the guiding
    principles that</st> <st c="41273">underpin them.</st>
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40884">在快速发展的DevOps、DevSecOps和SRE领域，持续测试、质量、安全和反馈的策略已成为引导数字化转型成功实现持续开发、交付和运营的关键因素。</st>
    <st c="41154">本章深入探讨了这些策略的核心，提供了实际的定义和支撑它们的指导原则。</st>
- en: <st c="41287">The journey began with</st> *<st c="41311">Introducing Continuous
    Testing, Quality, Security, and Feedback</st>*<st c="41374">, setting the stage
    for a comprehensive exploration.</st> <st c="41427">This section laid the groundwork,
    illuminating why these concepts are indispensable in modern software development.</st>
    <st c="41543">It’s an invitation to view software development, delivery, and operations
    through a lens that prioritizes continuous improvement and adaptation.</st> <st
    c="41688">The following section,</st> *<st c="41711">Defining Continuous Testing,
    Quality, Security, and Feedback</st>*<st c="41771">, provided clear, outcome-focused
    definitions of each concept.</st> <st c="41834">This clarity is crucial, as it
    serves as a beacon for professionals navigating the complexities of implementing
    these strategies, which is essential for</st> <st c="41987">digital transformation.</st>
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: <st c="42010">The heart of the chapter lies in the detailed exposition of the
    guiding principles and pillars for each concept.</st> *<st c="42124">Guiding Principles
    and Pillars of Continuous Testing</st>* <st c="42176">explained that integrating
    testing into every stage of the software development life cycle ensures that quality
    and functionality are not afterthoughts but ingrained in the process.</st> <st
    c="42359">The section on continuous quality emphasized a proactive approach to
    maintaining high standards, ensuring that a product not only meets but exceeds
    user expectations.</st> <st c="42526">When it comes to continuous security, the
    chapter underscored the need for an integrated, vigilant approach to protect against</st>
    <st c="42653">evolving threats.</st>
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: <st c="42670">In the segment dedicated to continuous feedback, the chapter highlighted
    the significance of stakeholder and user input in shaping and refining software
    products.</st> <st c="42834">This feedback loop is depicted as a dynamic, integral
    component of the development process, driving improvements and fostering user
    satisfaction.</st> <st c="42980">Finally, the chapter equipped you with valuable
    skills – understanding the essence of continuous testing, quality, security, and
    feedback and learning to implement their guiding principles effectively.</st>
    <st c="43182">This knowledge is not just theoretical; it’s a toolkit to thrive
    in the modern software</st> <st c="43270">development arena.</st>
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: <st c="43288">In summary, this chapter is a practical guide and a catalyst for
    transformation.</st> <st c="43370">It encourages you to embrace these continuous
    strategies, ensuring digital transformations are resilient, user-centric, and
    secure.</st> <st c="43502">Whether you’re a seasoned professional or just starting,
    this chapter provided valuable insights and skills that will elevate your approach
    to continuous software development, delivery,</st> <st c="43688">and operations.</st>
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: <st c="43703">The next chapter explains why continuous testing, quality, security,
    and feedback are essential for DevOps, DevSecOps,</st> <st c="43823">and SRE.</st>
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43703">下一章解释了为什么持续测试、质量、安全性和反馈对于DevOps、DevSecOps</st> <st c="43823">和SRE至关重要。</st>
