- en: '*Chapter 13*: Shift-Left Security and DevSecOps'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：左移安全与DevSecOps'
- en: 'The total number of losses caused by cyber-crimes that have been reported to
    the **Internet Crime Complaint Center** (**IC3**) of the **Federal Bureau of Investigation**
    (**FBI**) has increased to an all-time high, from 3.5 billion **United States
    dollars** (**USD**) in 2019 to 4.1 billion USD in 2020 (*IC3*, 2019 and 2020).
    This continues the trend with a strong increase over the last years (*see Figure
    13.1*):'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 报告给**互联网犯罪投诉中心**（**IC3**）的由网络犯罪造成的总损失，已经达到了历史新高，从2019年的35亿美元（**USD**）增加到2020年的41亿美元（**USD**）（*IC3*，2019和2020年）。这一趋势在过去几年持续强劲增长（*见图13.1*）：
- en: '![Figure 13.1 – Total losses caused by cyber-crimes reported to IC3'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.1 – 报告给IC3的网络犯罪总损失'
- en: '](img/B17827_13_001.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_13_001.jpg)'
- en: Figure 13.1 – Total losses caused by cyber-crimes reported to IC3
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – 报告给IC3的网络犯罪总损失
- en: Among the affected companies are start-ups, as well as *Fortune 500* enterprises.
    Affected are tech giants such as Facebook, Twitter, T-Mobile, and Microsoft, as
    well as public institutions such as San Francisco International Airport or security
    companies such as FireEye. No company can claim that cyber-crimes are not a threat
    to them!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 受影响的公司包括初创企业，以及*财富500强*企业。受影响的有科技巨头如Facebook、Twitter、T-Mobile和Microsoft，也有公共机构如旧金山国际机场，甚至是安全公司如FireEye。没有公司能够声称网络犯罪对他们没有威胁！
- en: In this chapter, we take a broader look at the role of security in development
    and how you can bake it into your process and enable a zero-trust culture.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将更广泛地探讨安全在开发中的角色，以及如何将其融入到你的流程中，并实现零信任文化。
- en: 'These are the key points that we will cover in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们将在本章中讨论的关键点：
- en: Shift-left security
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左移安全
- en: Assume-breach, zero-trust, and security-first mindset
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设漏洞、零信任和安全优先的思维模式
- en: Attack simulations
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击模拟
- en: Red team-blue team exercises
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红队-蓝队演练
- en: Attack scenarios
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击场景
- en: GitHub Codespaces
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub Codespaces
- en: Shift-left security
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 左移安全
- en: 'In classical software development, security was handled downstream: when the
    software was ready to be released, a security department or external company would
    perform a security review. The problem with this approach is that it''s hard to
    fix architectural problems at that point. In general, the later you fix a security
    vulnerability, the more expensive it gets; and if you don''t fix vulnerabilities,
    the costs can be many millions, which can lead to bankruptcy for some companies.
    The earlier you fix a security vulnerability in the development life cycle, the
    cheaper it is (*see Figure 13.2*):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的软件开发中，安全通常是在下游处理的：当软件准备发布时，安全部门或外部公司会进行安全审查。这个方法的问题在于，到那个时候很难修复架构问题。一般来说，修复安全漏洞越晚，成本就越高；如果不修复漏洞，可能导致数百万的损失，甚至可能导致一些公司破产。在开发生命周期中，越早修复安全漏洞，成本越低（*见图13.2*）：
- en: '![Figure 13.2 – Costs for fixing security vulnerabilities in the development
    life cycle'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.2 – 开发生命周期中修复安全漏洞的成本'
- en: '](img/B17827_13_002.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_13_002.jpg)'
- en: Figure 13.2 – Costs for fixing security vulnerabilities in the development life
    cycle
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 – 开发生命周期中修复安全漏洞的成本
- en: 'That''s what we call **shift-left security**: baking security into the development
    life cycle and making it an essential part of all activities.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们所说的**左移安全**：将安全融入到开发生命周期中，使其成为所有活动的必要部分。
- en: The problem is that there are not enough security specialists out there to put
    them in every engineering team. Shifting security left is about educating engineers
    and creating a security-first mindset.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，市场上没有足够的安全专家可以将他们安排到每个工程团队中。左移安全就是要通过教育工程师，培养安全优先的思维模式。
- en: Assume-breach, zero-trust, and security-first mindset
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 假设漏洞、零信任和安全优先的思维模式
- en: 'The classical approach to security was to **prevent breaches**. The most important
    measures were these:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的安全方法是**防止漏洞**。最重要的措施有：
- en: '**Layers of trust**: The internal network was considered secure and protected
    with firewalls. Access to the network was only allowed by company-owned devices
    and **virtual private network** (**VPN**) tunnels. The public internet was not
    trusted—and in between were **demilitarized zones** (**DMZs**).'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信任层级**：内部网络被认为是安全的，并通过防火墙进行保护。只有公司拥有的设备才能访问网络，并通过**虚拟专用网络**（**VPN**）隧道连接。公众互联网不被信任——两者之间是**非军事区**（**DMZ**）。'
- en: '**Risk analysis**: Risk analysis with threat modeling.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险分析**：通过威胁建模进行风险分析。'
- en: '**Security reviews**: Architecture and code reviews from security experts.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全评审**：来自安全专家的架构和代码审查。'
- en: '**Security testing**: External security testing with a specific scope.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全测试**：具有特定范围的外部安全测试。'
- en: But with the prevent-breach approach, the question as to whether a company was
    already under attack could basically not be answered.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 但在防止攻击的方式下，是否公司已经遭受攻击这个问题几乎无法回答。
- en: 'In an interview in 2012, General Michael Hayden, former director of the **National
    Security Agency** (**NSA**) and the **Central Intelligence Agency** (**CIA**),
    said the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在2012年的一次采访中，前**国家安全局**（**NSA**）和**中央情报局**（**CIA**）局长迈克尔·海登将军表示：
- en: '"Fundamentally, if somebody wants to get in, they''re getting in… accept that."'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: “从根本上说，如果有人想进入，他们就能进入……接受这一点。”
- en: 'This is the basis of the assume-breach paradigm: you are most probably already
    under attack, whether you know it or not. Always assume that you already have
    been breached. This way of thinking identifies gaps in the prevent-breach approach.
    How do you do the following?'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是假设已被攻破范式的基础：您很可能已经遭到攻击，无论您是否知道。始终假设您已经被攻破。这种思维方式能识别防止攻击方法中的漏洞。您如何做到以下几点？
- en: '**Detect** attacks and penetrations?'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测**攻击和渗透？'
- en: '**Respond** to attacks?'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应**攻击？'
- en: '**Recover** from data leakage or tampering?'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复**数据泄漏或篡改？'
- en: 'This shifts the measures for security and adds a completely new focus. With
    the assume-breach paradigm, you need the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这改变了安全措施，并增加了全新的重点。在假设已被攻破的范式下，您需要以下内容：
- en: A central **security monitoring** or **security information and event management**
    (**SIEM**) system to detect anomalies.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个中央的**安全监控**或**安全信息与事件管理**（**SIEM**）系统，用于检测异常。
- en: Ongoing live site testing of your **incident response** (**IR**) (**fire drills**).
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续的现场测试您的**事件响应**（**IR**）（**演习**）。
- en: War games (**red team-blue team simulations**) to detect vulnerabilities, create
    awareness, learn to think like attackers, and train your responses.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 战争游戏（**红队-蓝队模拟**）用来发现漏洞、提高意识、学习像攻击者一样思考，并训练响应措施。
- en: '**Live site penetration tests**: Sophisticated attack simulations including
    phishing, social engineering, and physical security.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现场渗透测试**：包括网络钓鱼、社会工程学和物理安全等复杂的攻击模拟。'
- en: Don't trust identities and devices, even when in your network (**zero trust**).
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使在您的网络中，也不要信任身份和设备（**零信任**）。
- en: If your security is mainly based upon layers, once a hacker is inside your network—through
    phishing, social engineering, or a physical attack—it's child's play for them
    to advance. In a trusted network, you normally find unprotected file shares, unpatched
    servers without **Secure Sockets Layer** (**SSL**) protection, weak passwords,
    and **single-factor authentication** (**SFA**) in most systems. In a cloud-first
    world, this makes absolutely no sense.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的安全主要依赖于防御层次，一旦黑客通过钓鱼、社会工程学或物理攻击进入网络——他们可以轻松向前推进。在一个信任的网络中，通常会发现未保护的文件共享、没有**安全套接字层**（**SSL**）保护的未打补丁的服务器、弱密码以及大多数系统中的**单因素认证**（**SFA**）。在以云为先的世界中，这完全没有意义。
- en: 'With zero-trust access to your services, you always verify the identity—for
    example, with **multi-factor authentication** (**MFA**), you verify the device,
    access, and services involved in transactions. *Figure 13.3* shows an example
    of how zero-trust access can be implemented for your services:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通过零信任访问您的服务，您始终验证身份——例如，通过**多因素认证**（**MFA**），您验证设备、访问权限和参与交易的服务。*图13.3*展示了如何实现零信任访问您的服务的示例：
- en: '![Figure 13.3 – Zero-trust access to your company services'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.3 – 零信任访问您的公司服务'
- en: '](img/B17827_13_003.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_13_003.jpg)'
- en: Figure 13.3 – Zero-trust access to your company services
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – 零信任访问您的公司服务
- en: If you are using **software-as-a-service** (**SaaS**) cloud services in your
    company, you're probably familiar with zero trust. You must authenticate using
    MFA but can trust your browser and device for more comfort. If you travel, you
    get notified or must approve your login attempts from an unusual location. If
    you install third-party apps, you must grant the apps permissions to access information,
    and you're probably not allowed to access highly confidential information from
    a public, not-trusted device.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在公司使用**软件即服务**（**SaaS**）云服务，你可能已经熟悉零信任。你必须使用多因素认证（MFA），但可以信任你的浏览器和设备以提高便利性。如果你出差，你会收到通知或必须批准来自不常见位置的登录尝试。如果你安装第三方应用程序，你必须授予这些应用访问信息的权限，且你可能不能从公共的、不受信任的设备访问高度机密的信息。
- en: Zero trust means applying the same principles to all your services, independently
    of whether you access them from within your internal network or not.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 零信任意味着对所有服务应用相同的原则，无论你是否从内部网络访问它们。
- en: Attack simulations
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击模拟
- en: To know what to do in case of an incident, you should regularly perform drills
    to practice your **standard operating procedures** (**SOPs**) for IR and improve
    your response times. As with fire drills in your offices, if you do not practice
    these drills, you don't know if your security measures will really work in the
    event of a real fire.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了知道在发生事件时该怎么做，你应该定期进行演练，练习你的**标准操作程序**（**SOPs**）以应对IR并提高响应时间。就像办公室里的火灾演习一样，如果不进行这些演练，你无法知道你的安全措施在真实火灾发生时是否真的有效。
- en: 'You should try to improve on the following metrics:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该尝试在以下指标上有所改进：
- en: '**Mean Time To Detect** (**MTTD**)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均检测时间**（**MTTD**）'
- en: '**Mean Time To Recover** (**MTTR**)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均恢复时间**（**MTTR**）'
- en: In such a drill, you would simulate an attack scenario, practice your IR process,
    and conduct a **post-mortem** with the learnings of the drill.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种演练中，你将模拟攻击场景，练习你的IR流程，并进行一次**事后分析**，总结演练中的经验教训。
- en: 'Here are some example attack scenarios:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些攻击场景的例子：
- en: Service compromise
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务被妥协
- en: Inside attacker
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部攻击者
- en: Remote code execution
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程代码执行
- en: Malware outbreak
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意软件爆发
- en: Customer data compromised
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户数据被妥协
- en: '**Denial of service** (**DoS**) attack'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝服务**（**DoS**）攻击'
- en: Practicing these drills will give you confidence that your SOPs work and let
    you react in case of a real incident quickly and efficiently.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过练习这些演练，你可以确认你的SOP有效，并在发生真实事件时迅速高效地做出反应。
- en: Red team-blue team exercises
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 红队-蓝队演练
- en: A special form of these drills is **red team-blue team** exercises, also known
    as **war games**, whereby two teams with insider know-how play against each other.
    The red team is the attacker and tries to access a production system or capture
    user data, and the blue team defends against the attack. If the blue team detects
    the attack and can prevent it, the blue team wins. If the red team has proof that
    they could access production or capture data, the red team wins.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些演练的一种特殊形式是**红队-蓝队**演练，也叫**战争游戏**，其中两个团队互相对抗，且都有内部知识。红队是攻击方，试图访问生产系统或窃取用户数据，蓝队则负责防守。如果蓝队检测到攻击并能够阻止它，蓝队获胜。如果红队能够证明他们成功访问了生产系统或窃取了数据，红队获胜。
- en: Team constellation
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 团队构成
- en: 'The difference from a normal attack simulation is the insights the team has
    on your systems, so it''s easier to find vulnerabilities. Red team-blue team simulations
    are the most sophisticated attacks with the most insights compared to all other
    efforts you can do to reduce your security risks (*see Figure 13.4*):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 与普通攻击模拟的不同之处在于，团队对你的系统拥有的洞察力，因此更容易发现漏洞。红队-蓝队模拟是最复杂的攻击形式，具有最多的洞察力，相比其他所有减少安全风险的努力更具优势（*见图13.4*）：
- en: '![Figure 13.4 – Risk reduction by insights of the attacker and depth of the
    attack'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.4 – 通过攻击者的洞察力和攻击深度来减少风险'
- en: '](img/B17827_13_004.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_13_004.jpg)'
- en: Figure 13.4 – Risk reduction by insights of the attacker and depth of the attack
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 – 通过攻击者的洞察力和攻击深度来减少风险
- en: The teams should be mixed from different organizational units. Do not just pick
    one team for red and one team for blue. The composition of the team is the key
    to a successful game.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 团队应该由来自不同组织单位的成员组成。不要仅仅为红队和蓝队各选一个团队。团队的构成是成功游戏的关键。
- en: 'For the red team, do the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于红队，执行以下任务：
- en: Use creative engineers from different teams that already have an interest in
    security.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用来自不同团队的创意工程师，这些团队已经对安全感兴趣。
- en: Add security experts with experience from within your organization, or get external
    support.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加具有组织内部经验的安全专家，或者寻求外部支持。
- en: 'For the blue team, do the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于蓝队，执行以下任务：
- en: Take ops-minded engineers that are familiar with logging, monitoring, and site
    reliability.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择熟悉日志记录、监控和网站可靠性的运维工程师。
- en: Add engineers that have knowledge of your network security and identity.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了解网络安全和身份的工程师。
- en: Both teams should have the possibility to ask experts for help. If, for example,
    the red team needs to write a **Structured Query Language** (**SQL**) statement
    to perform a sophisticated SQL injection attack, they can get help from the **database
    administrator** (**DBA**) team; or, when the blue team needs insider information
    on how an application works or it needs the application to log additional data,
    it can directly approach the team that builds and maintains the application.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 两队都应有向专家求助的可能性。例如，如果红队需要编写**结构化查询语言**（**SQL**）语句来执行复杂的SQL注入攻击，他们可以寻求**数据库管理员**（**DBA**）团队的帮助；或者当蓝队需要了解应用程序的内部信息，或者需要应用程序记录额外数据时，可以直接向开发和维护应用程序的团队求助。
- en: Rules of the game
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏规则
- en: The main goal of the game is the learning of all participants—learning to think
    like an attacker, learning to detect and respond to an incident, and learning
    which vulnerabilities exist in the company that can be exploited. The second goal
    is fun. As with a hackathon, the exercise should be a team-building event that
    is fun for all that participate.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏的主要目标是所有参与者的学习——学习像攻击者一样思考，学习如何检测和响应事件，学习公司中哪些漏洞可能被利用。第二个目标是娱乐。与黑客马拉松类似，这个活动应该是一个团队建设的活动，所有参与者都能感到有趣。
- en: But to be successful without harming anyone, you need some ground rules for
    the game.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 但为了确保游戏的成功而不伤害任何人，你需要一些游戏规则。
- en: Duration
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 持续时间
- en: A red team-blue team exercise can last for days, weeks, or even months. Choose
    a period in which the attack can happen and the duration of the attack itself.
    A good starting point would be a 3-week period and a 3-day attack. Adjust the
    time to your needs.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 红队与蓝队的演练可能会持续数天、数周甚至数月。选择一个攻击发生的时间段以及攻击本身的持续时间。一个好的起点是3周的时间和3天的攻击时间。根据需要调整时间。
- en: Codex and rules
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 法典和规则
- en: 'To make the exercise successful, you must establish some rules and a code of
    conduct that players must adhere to, as outlined here:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让演练成功，你必须建立一些规则和行为准则，参与者必须遵守，具体如下面所述：
- en: Both teams may not cause real harm. This also means the red team should not
    do more than is necessary to achieve their goal, and physical attacks should follow
    common sense (do not harass or threaten anyone, don't steal keys or badges from
    your coworkers, and so on).
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两队不得造成实际伤害。这也意味着红队不应做超出实现目标所需的事情，且物理攻击应遵循常识（不要骚扰或威胁任何人，不要偷窃同事的钥匙或证件等）。
- en: Don't expose the names of persons compromised.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要透露被攻破人员的姓名。
- en: Don't cause downtime for paying customers or breach their data!
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要让付费客户的服务中断或泄露他们的数据！
- en: Compromised data must be stored encrypted and protected and not be exposed to
    real attackers.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被攻破的数据必须加密存储和保护，且不能暴露给真实的攻击者。
- en: The security of the production system must not be weakened to expose customers
    to risk. If, for example, the red team could modify the source code to disable
    authentication for all production systems, then leave a comment in the code and
    claim victory when the deployment is done. However, you cannot disable authentication
    for the production system that real customers are using.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产系统的安全性不得削弱，不能让客户面临风险。例如，如果红队能够修改源代码，禁用所有生产系统的身份验证，之后在代码中留下注释，并在部署完成后声称获胜。那么，尽管如此，你不能禁用真实客户使用的生产系统的身份验证。
- en: This might seem all obvious, but if you have competitive teams, they might get
    carried away with the game. It's better to state the obvious and lay out some
    ground rules.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来似乎很显而易见，但如果你有竞争的团队，他们可能会在游戏中过于投入。最好提前阐明这些显而易见的规则。
- en: Delivery items
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提交物品
- en: 'At the end of the game, the teams deliver the following items:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏结束时，团队提交以下项目：
- en: A backlog with vulnerabilities that must be fixed. Critical vulnerabilities
    must be fixed right away.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个待办事项清单，列出必须修复的漏洞。严重漏洞必须立即修复。
- en: A backlog with items to improve the forensic and analytic capabilities.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进取证和分析能力的待办事项。
- en: An open report for the entire organization about the learnings from the exercise.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向整个组织公开演练中的学习成果报告。
- en: Remember to make this all blameless, and don't expose the names of people that
    have been compromised.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 记住要让整个过程没有责备，不要暴露出被攻破的人员的名字。
- en: Where to start
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从哪里开始
- en: I know a lot of people think that red team-blue team exercises are only suited
    to companies with a very high maturity level, but I believe red team-blue team
    exercises are a great way for each company to create awareness and to learn and
    grow, especially when they're still preventing breaches and consider their intranet
    safe. If your maturity level is not so high, attacks are much easier. If the maturity
    is very high, attacks need to be much more sophisticated, and it is a lot harder
    to perform successful attacks without causing real harm.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道很多人认为红队-蓝队演练只适合成熟度非常高的公司，但我认为红队-蓝队演练是每个公司提高意识、学习和成长的绝佳方式，尤其是在公司还在防止漏洞的发生并认为其内网是安全的情况下。如果你的成熟度不高，攻击会更容易。如果成熟度非常高，攻击需要更加复杂，而且很难成功进行攻击而不造成真正的伤害。
- en: I would prefer red team-blue team exercises over normal attack simulations—they
    are more fun and a better way to learn. Get external help if you don't know where
    to start.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我更倾向于选择红队-蓝队演练而非常规的攻击模拟——它们更有趣，也是更好的学习方式。如果你不知道从哪里开始，可以寻求外部帮助。
- en: If you have many findings in your first game and it was really easy for the
    red team to win, you might want to consider doing the exercises more often. If
    not, once a year is a good rhythm I see companies doing successfully, but it depends
    a lot on your situation.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在第一次演练中发现了很多问题，而且红队轻松获胜，你可能会考虑更频繁地进行演练。如果没有，每年一次是我看到很多公司成功执行的节奏，但这也很依赖于你的具体情况。
- en: Just do your first exercise—the rest will follow automatically.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 只需完成第一次演练——接下来的进展会自然而然地跟上。
- en: Attack scenarios
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击场景
- en: The first attack scenarios most people think of in the context of DevOps and
    DevSecOps are code execution on production systems using vulnerabilities such
    as **SQL injection**, **cross-site scripting** (**XSS**), or **memory leaks**
    such as **buffer overflows**. In [*Chapter 14*](B17827_14_Epub.xhtml#_idTextAnchor296),
    *Securing Your Code*, we'll have a closer look at how you can hunt for these kinds
    of vulnerabilities and how you can integrate this into your delivery pipeline.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人想到的DevOps和DevSecOps中的第一个攻击场景是利用漏洞执行代码，如**SQL注入**、**跨站脚本**（**XSS**）或**内存泄漏**，例如**缓冲区溢出**。在[*第14章*](B17827_14_Epub.xhtml#_idTextAnchor296)《保护你的代码》中，我们将详细了解如何寻找这些漏洞以及如何将这一过程整合到你的交付流水线中。
- en: 'But there are far easier attack scenarios, such as the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，还有一些更简单的攻击场景，例如以下几种：
- en: '**Unprotected file shares** and repositories'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未保护的文件共享**和代码库'
- en: '**Secrets in text files**, config files, and source code (such as test accounts,
    **personal access tokens** (**PATs**), connection strings, and so on)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本文件**、配置文件和源代码中的机密（例如测试账户、**个人访问令牌**（**PATs**）、连接字符串等）'
- en: '**Phishing attacks**'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**钓鱼攻击**'
- en: Phishing attacks are an especially easy way to start an attack. According to
    a study from 2021, 19.8% of recipients of a phishing mail clicked on a link in
    an email, and 14.4% downloaded the attached document (see *Terranova and Microsoft*,
    2021), and in companies that regularly do phishing campaigns, the numbers are
    more or less the same. At one of my customers, nearly 10% of employees who received
    an email during a phishing campaign entered their credentials in the login dialog
    that was displayed after they clicked the link in the phishing mail! And this
    was a company that had already been practicing phishing campaigns for years.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 钓鱼攻击是一种特别简单的攻击方式。根据2021年的一项研究，19.8%的钓鱼邮件接收者点击了邮件中的链接，14.4%下载了附件（见*Terranova
    和 Microsoft*，2021），而在定期进行钓鱼攻击演练的公司中，数字大致相同。在我一位客户的公司中，几乎10%的员工在钓鱼攻击演练期间收到邮件后，点击邮件中的链接并在弹出的登录框中输入了自己的凭证！而这家公司已经进行了多年的钓鱼攻击演练。
- en: The problem with phishing is a psychological effect called **priming**. Even
    if you know in general what phishing attacks look like and the signs to look for
    to detect them, the moment you are expecting a mail or you think the mail belongs
    to some context you are in, the more likely you are not to look for those signs.
    A good example would be a phishing mail at the end of the month that claims to
    be from your **human resources** (**HR**) department and says there was a problem
    with the payment of your salary. Since it is the end of the month and you are
    expecting your salary, the mail does not seem strange. Maybe you had problems
    before. Maybe you just checked, and the money was not there yet. It also generates
    some urgency. If you are in a hurry, you may want to quickly solve this so that
    your salary comes on time. If you send a phishing mail such as this at the end
    of the month, chances are much higher that people will then click for the rest
    of the month. Another example is a shared document. If you were just on the phone
    with a colleague that said they'll share a file with you, you may just wonder
    why they're choosing this way, but you're not suspicious as you are expecting
    a file anyway. The more phishing mails you send, the higher the possibility someone
    has just the right context and that you will fall for it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 网络钓鱼的一个问题是心理效应，叫做**启动效应**。即使你一般知道网络钓鱼攻击的样子以及检测它们的标志，一旦你正在等待某封邮件，或者你认为邮件属于你正在参与的某个情境，你就更容易忽视这些标志。一个好的例子是月底收到的一封钓鱼邮件，声称是来自你**人力资源**（**HR**）部门，内容说你的薪水支付出现了问题。由于是月底，且你在期待薪水，这封邮件看起来并不奇怪。也许之前就曾遇到过问题。也许你刚查过，钱还没到账。它还会制造一定的紧迫感。如果你很急，可能会想尽快解决这个问题，确保薪水按时到账。如果在月末发送这样的钓鱼邮件，那么人们更有可能在整个月内点击类似邮件。另一个例子是共享文档。如果你刚和同事通话，他们说会与您共享一个文件，你可能只是好奇他们为什么选择这种方式，但并不怀疑，因为你本来就期待收到文件。你发送的钓鱼邮件越多，就越有可能有人恰好具备正确的情境，从而让你中招。
- en: Once an attacker has managed to compromise the first victim and has company
    credentials or access to the victim's machine, the game changes completely. Now,
    the attack is performed by an **inside attacker**, and they can target specific
    people in the company from an internal address. This is called **spear phishing**
    and is extremely hard to detect.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦攻击者设法攻破了第一个受害者并获得了公司凭证或访问了受害者的机器，局面将完全改变。现在，攻击由**内部攻击者**执行，他们可以从内部地址针对公司中的特定人员进行攻击。这被称为**鱼叉式网络钓鱼**，极其难以检测。
- en: 'A good target for spear phishing is administrators or engineers. If you don''t
    practice **least-privilege** user rights, the attacker might already have access
    to a production system or is a domain administrator, and the game is over. But
    if they compromise a developer, they have also a variety of options, as outlined
    here:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的鱼叉式网络钓鱼目标是管理员或工程师。如果你没有执行**最小特权**用户权限，攻击者可能已经可以访问生产系统，或者已经是域管理员，届时就彻底完蛋了。但如果他们攻破了开发人员的账户，他们同样有多种选择，如下所示：
- en: '`mimikatz` (see https://github.com/gentilkiwi/mimikatz/wiki) to read credentials
    from memory.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`mimikatz`（见 https://github.com/gentilkiwi/mimikatz/wiki）从内存中读取凭证。
- en: '**Test environments**: Many developers have access to test environments, often
    as administrators. Attackers can log in and use mimikatz to steal other credentials.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试环境**：许多开发人员可以访问测试环境，通常是作为管理员。攻击者可以登录并使用mimikatz窃取其他凭证。'
- en: '**Modify code**: One line of code is usually enough to disable authentication.
    The attacker can try to modify code or change the version of a dependency to one
    with a known vulnerability that can be exploited.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**修改代码**：通常只需要一行代码就可以禁用身份验证。攻击者可以尝试修改代码或更改依赖项的版本，将其更改为一个已知存在漏洞并可以被利用的版本。'
- en: '**Execute scripts**: If the developer can modify pipeline code or scripts that
    get executed during deployment, the attacker can insert code that gets executed
    during deployment.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行脚本**：如果开发人员可以修改管道代码或在部署过程中执行的脚本，攻击者可以插入在部署期间执行的代码。'
- en: That's why it is so important in engineering to be extra cautious when it comes
    to security. There is much more attack surface than in most other departments
    in an organization.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在工程领域中，安全性如此重要，必须格外小心的原因。与组织中大多数其他部门相比，攻击面要大得多。
- en: 'To get from one compromised account to the domain administrator or at least
    an administrator with production access, you can use a tool called **BloodHound**
    ([https://github.com/BloodHoundAD/BloodHound](https://github.com/BloodHoundAD/BloodHound)).
    It supports **Active Directory** (**AD**) and **Azure AD** (**AAD**) and reveals
    all the hidden relationships: Who has a session on which machines? Who is a member
    of which group? Who is an administrator of a certain machine?'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Both blue teams and red teams can use this tool to analyze relationships in
    an AD environment.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: GitHub Codespaces
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since development environments are a big problem when it comes to security,
    it's a good idea to virtualize them and have a specific machine for each product.
    This way, you can implement least-privilege user rights and your engineers do
    not have to work with local administrator rights on their machines. You also can
    limit the number of tools that are needed for a specific product and minimize
    the attack surface.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, you can use classical **virtual desktop infrastructure** (**VDI**)
    images for that, but you can also use a more lightweight option: **dev containers**
    (see [https://code.visualstudio.com/docs/remote/containers](https://code.visualstudio.com/docs/remote/containers),
    which is an extension for **Visual Studio Code** (**VS Code**) that is built on
    top of its client-server architecture). You can connect VS Code to a running container
    or instantiate a new instance. The complete configuration is stored in the repository
    (config as code), and you can share the same config for the dev container with
    your team.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: A special form of dev containers is **GitHub Codespaces**, which is a virtual
    development environment hosted in Azure. You can pick different **virtual machine**
    (**VM**) sizes between 2-core/4 **gigabytes** (**GB**) **random-access memory**
    (**RAM**)/32 GB storage and 32 core/64 GB RAM/128 GB storage. The start time of
    the VM is blasting fast. The default image is more than 35 GB and starts in less
    than 10 seconds!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: The base image contains everything necessary to develop with Python, Node.js,
    JavaScript, TypeScript, C, C++, Java, .NET, `git`, `kubectl`, Gradle, Maven, and
    `vim`. Run `devcontainer-info content-url` inside your codespace and open the
    **Uniform Resource Locator** (**URL**) that it returns for a complete list of
    all preinstalled tools.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'But you don''t have to use the base image—you can completely customize your
    codespace using dev containers. You can work with a codespace using either VS
    Code in the browser, your local VS Code instance, or using **Secure Shell** (**SSH**)
    from a terminal. If you run your application inside the codespace, you can forward
    ports to test it from your local machine. *Figure 13.5* shows the architecture
    of GitHub Codespaces:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.5 – Architecture of GitHub Codespaces'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_005.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.5 – Architecture of GitHub Codespaces
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'You can open, for example, the [https://github.com/wulfland/AccelerateDevOps](https://github.com/wulfland/AccelerateDevOps)
    repository in a new codespace under **Code** | **Codespaces** | **New codespace**
    (*see Figure 13.6*), if you have Codespaces enabled for your account. The repository
    does not have a dev container configuration, so it will load the default image:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.6 – Opening a repository in a codespace'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_006.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.6 – Opening a repository in a codespace
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see in the preceding screenshot that I already have a codespace running
    on the `main` branch. Instead of creating a new one, I could also open the existing
    one. Pick the VM size (*see Figure 13.7*):'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.7 – Picking the VM size for your codespace'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_007.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.7 – Picking the VM size for your codespace
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: 'In the terminal, change the directory to `ch9_release/src/Tailwind.Traders.Web`
    and build and run the application with the following commands:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will start a web server listening on ports `5000` and `5001`. Codespaces
    automatically detects this and forwards port `5000` to a local port. Just click
    **Open in Browser** to see the application that is running inside your codespace
    in your local browser (*see Figure 13.8*):'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.8 – Forwarding a port to your machine'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_008.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.8 – Forwarding a port to your machine
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also add ports that should be forwarded manually in the **PORTS** tab
    and change the visibility if you want to share a link with your coworkers—for
    example, to let them try a new feature (*see Figure 13.9*):'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.9 – Configuring port forwarding in your codespace'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_009.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.9 – Configuring port forwarding in your codespace
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want more control over your development environment, you can create
    a dev container in your codespace. Open the *Command Palette* in VS Code by clicking
    the green `Codespaces: Add Development Container Configuration Files….` and follow
    the wizard to select languages and features that get installed. The wizard will
    create a `.devcontainer` folder in the root of your repository and, in it, two
    files: a `devcontainer.json` file and a `Dockerfile` file.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: The `Dockerfile` file defines the container that is created when your codespace
    is initialized. The `Dockerfile` file can be really simple—it is enough if it
    contains a `FROM` clause that indicates from which base image it inherits.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `devcontainer.json` file, you can pass arguments to the image creation,
    you can define VS Code settings that are shared with all teammates, you can use
    VS Code extensions that are installed per default, and you can run commands that
    are run after the container was created (*see Figure 13.10*):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.10 – Example Dockerfile file and devcontainer.json file'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_13_010.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.10 – Example Dockerfile file and devcontainer.json file
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: See [https://code.visualstudio.com/docs/remote/devcontainerjson-reference](https://code.visualstudio.com/docs/remote/devcontainerjson-reference)
    for a complete reference on how you can customize your `devcontainer.json` file.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: If you change either the `Dockerfile` file or the `devcontainer.json` file,
    you can rebuild the container by opening the Command Palette and executing `Rebuild
    Container`.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: If you need secrets inside your codespace, you can create them—as with all other
    secrets—under `settings/secrets/codespaces`) in the organization or repository
    level. Secrets are available as environment variables inside the codespace container.
    If you add a new secret, you have to stop the current codespace—a rebuild container
    is not enough.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, GitHub Codespaces is not available for free—you have to pay for
    the uptime minutes of your instances. The minutes are reported to billing daily
    and billed monthly. The rate depends on the size of your VM (*see Table 13.1*):'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 13.1 – Pricing for GitHub Codespaces'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Table_013.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Table 13.1 – Pricing for GitHub Codespaces
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you pay $0.07 per GB and month for the storage used.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '*Codespaces do not get terminated if you close your browser*. If they are still
    running in the background, you can connect much faster, but you must still pay
    for them. The default idle timeout is 30 minutes, which is equivalent to $0.18
    for the 4-core machine. That''s really cheap, but it is still money. You should
    always stop your codespace if you don''t need it anymore. You can change the default
    idle timeout under **Settings** | **Codespaces**.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: GitHub Codespaces is not only great for security—it can also boost your onboarding
    time and productivity. GitHub itself uses it for its development, and it reduced
    onboarding time for new engineers from days to under 10 seconds! And that for
    a repository with almost 13 GB on disk that normally takes 20 minutes to clone
    (Cory Wilkerson, 2021).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Codespaces might not be suited for all products, but for web applications, it's
    the future, and it will revolutionize how we think of managing developer machines.
    It also helps you to close a security gap in your development pipeline—your local
    developer machines.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you've learned how important security is for your development
    process and how you can start to **shift security left** and implement an **assume-breach**
    and **zero-trust** culture. I introduced you to **attack simulations** and **red
    team-blue team** exercises to raise awareness for security, find vulnerabilities,
    and practice your IR.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: I've also shown you how **GitHub Codespaces** can help you to reduce the risk
    of local development environments and make you more productive.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you'll learn how to secure your code and your software
    supply chain.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can use the following references from this chapter to get more information
    on the topics covered:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '*IC3* (2020). *Internet Crime Report 2020*: [https://www.ic3.gov/Media/PDF/AnnualReport/2020_IC3Report.pdf](https://www.ic3.gov/Media/PDF/AnnualReport/2020_IC3Report.pdf)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*IC3* (2020). *2020年互联网犯罪报告*：[https://www.ic3.gov/Media/PDF/AnnualReport/2020_IC3Report.pdf](https://www.ic3.gov/Media/PDF/AnnualReport/2020_IC3Report.pdf)'
- en: '*IC3* (2019). *Internet Crime Report 2019*: [https://www.ic3.gov/Media/PDF/AnnualReport/2019_IC3Report.pdf](https://www.ic3.gov/Media/PDF/AnnualReport/2019_IC3Report.pdf)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*IC3* (2019). *2019年互联网犯罪报告*：[https://www.ic3.gov/Media/PDF/AnnualReport/2019_IC3Report.pdf](https://www.ic3.gov/Media/PDF/AnnualReport/2019_IC3Report.pdf)'
- en: 'Data breaches in 2020: [https://www.identityforce.com/blog/2020-data-breaches](https://www.identityforce.com/blog/2020-data-breaches)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2020年的数据泄露：[https://www.identityforce.com/blog/2020-data-breaches](https://www.identityforce.com/blog/2020-data-breaches)
- en: 'Data breaches in 2021: [https://www.identityforce.com/blog/2021-data-breaches](https://www.identityforce.com/blog/2021-data-breaches)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2021年的数据泄露：[https://www.identityforce.com/blog/2021-data-breaches](https://www.identityforce.com/blog/2021-data-breaches)
- en: '*Terranova* and *Microsoft* (2021). *Gone Phishing Tournament – Phishing Benchmark
    Global Report 2021*: [https://terranovasecurity.com/gone-phishing-tournament/](https://terranovasecurity.com/gone-phishing-tournament/)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Terranova* 和 *Microsoft* (2021). *“钓鱼”比赛 - 钓鱼基准全球报告 2021*：[https://terranovasecurity.com/gone-phishing-tournament/](https://terranovasecurity.com/gone-phishing-tournament/)'
- en: '*GitHub Codespaces*: [https://docs.github.com/en/codespaces/](https://docs.github.com/en/codespaces/)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*GitHub Codespaces*：[https://docs.github.com/en/codespaces/](https://docs.github.com/en/codespaces/)'
- en: '`devcontainer.json` *reference*: [https://code.visualstudio.com/docs/remote/devcontainerjson-reference](https://code.visualstudio.com/docs/remote/devcontainerjson-reference)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`devcontainer.json` *参考资料*：[https://code.visualstudio.com/docs/remote/devcontainerjson-reference](https://code.visualstudio.com/docs/remote/devcontainerjson-reference)'
- en: '*Introduction to dev containers*: [https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/configuring-codespaces-for-your-project](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/configuring-codespaces-for-your-project)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*开发容器简介*：[https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/configuring-codespaces-for-your-project](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/configuring-codespaces-for-your-project)'
- en: '*Cory Wilkerson* (2021). *GitHub''s Engineering Team has moved to Codespaces*:
    [https://github.blog/2021-08-11-githubs-engineering-team-moved-codespaces/](https://github.blog/2021-08-11-githubs-engineering-team-moved-codespaces/)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Cory Wilkerson* (2021). *GitHub的工程团队已迁移到Codespaces*： [https://github.blog/2021-08-11-githubs-engineering-team-moved-codespaces/](https://github.blog/2021-08-11-githubs-engineering-team-moved-codespaces/)'
