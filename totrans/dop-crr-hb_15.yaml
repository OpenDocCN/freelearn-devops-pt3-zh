- en: '*Chapter 11*: Interviews with DevOps Practitioners'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have followed along throughout this book, I am sorry. Honestly, I hope
    you have been able to gather a lot of valuable information from this book. This
    concluding chapter is based on conversations I have had with actual colleagues,
    as well as people I have interviewed.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Interview with a senior DevOps manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interview with a senior DevOps engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interview with DevOps architect consultant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interview with a tech executive passionate about neurodiversity and inclusion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading through the perspectives of individuals with varying degrees of experience
    will allow you to form a more holistic picture of what to expect as you look for
    your next DevOps position or try to land your first role as a DevOps engineer.
  prefs: []
  type: TYPE_NORMAL
- en: Interview with a senior DevOps manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first person who I interviewed also happens to be the co-author of this
    book, *John Knight*. John started with high hopes of becoming a game designer.
    20 years later, he is a distinguished engineering leader:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.1 – John Knight''s bio'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_11.1.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.1 – John Knight's bio
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Hi John, thanks for agreeing to meet with me this afternoon to
    discuss your career as a DevOps leader!'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: No problem.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: To begin with, please tell us a little about yourself.'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: I am John Knight, and I am an engineering manager with 16
    years of experience in DevOps, 9 years of experience in the cloud, and 5 years
    of experience in team leadership. I have worked for and consulted with eight Fortune
    500 companies and hold multiple certifications in the three big public cloud providers.
    In my free time, I collect master''s degrees.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Sounds like a successful career! Before moving on, can you touch
    on your statement about collecting master''s degrees?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: I currently have three master''s degrees and am working on
    a fourth. I complain that I do not have a lot of time, but I can never allow myself
    to not be in school; I am a knowledge nerd.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Interesting; we will come back to that, but right now, can you
    tell us about how you ended up getting into DevOps?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: I was a game developer, or was trying to be. I worked on two
    independent MMOs before being recruited out of game development. Turns out the
    skills needed to deploy and patch games were also the same skills that are used
    to deploy and patch software. That is how I got into this field. The lead architect
    was too busy to do the deployments himself! 16 years later and I still thank him.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: 16 years, wow. What are some of the biggest changes in the field
    you have encountered and how have you ensured you stayed relevant?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: Technologies I used 10 years ago are mostly irrelevant now.
    You must keep up with the tech as it evolves and seek out knowledge from the experts,
    from the innovators, so that you exercise continuous improvement. Being a continual
    learner helps.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: You talked about being a collector of master''s degrees, and
    how being a continual learner helps; I am starting to see a pattern. Can you expand
    on the importance of being a continual learner in the field of DevOps and how
    it has impacted your career?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: The technology I used 15 years ago, and some of what I used
    10 years ago, is mostly obsolete. Someone coming in fresh would not have to survey
    the last 15 years of the field. The last 5 would be enough to be competent and
    even less in some areas. Being a continuous learner allows you, if nothing else,
    to be continuously upgrading your skills. It also allows you to be more creative
    in general, especially if you learn about areas outside your field of interest.
    That is the path that leads to true leaps – when you can tie formerly unrelated
    areas together. It is hard now because there is so much information that you cannot
    know or learn everything. So, being a regular learner allows you to learn in increments
    and makes it much easier to do. In terms of impact, I have a broader background
    than other similar candidates, so that gives me a competitive advantage if nothing
    else. Anything you can do to differentiate yourself by gaining more knowledge,
    credentials, and so on helps you in the long term. Knowledge compounds.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Were there any times you encountered any setbacks or unplanned
    changes in your career?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: As far as setbacks or unplanned changes go, it always happens
    on a dynamic playing field. Once upon a time, I mostly worked in Windows systems
    and suddenly I moved to the Linux world. At some point, containers were introduced,
    as well as infrastructure as code. You must adapt or stagnate. Swim or sink.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Wow – there is a lot of valuable information packed into that
    statement. Next, I would like to transition to how, when, and why you decided
    to transition into leadership versus continuing down the individual contributor
    path.'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: It can be hard to transition into leadership because everyone
    wants experience, but there must be that first opportunity where you start with
    no experience, and it takes faith to give you that opportunity. In my case, I
    wanted to try my hand for several reasons. One is that I saw it as a logical career
    progression, to more opportunities in my career. Second, I was inspired by good
    and bad managers and wanted to employ what I learned and do things differently
    in areas where I thought I could do better.'
  prefs: []
  type: TYPE_NORMAL
- en: The focus on learning, training, and improving your professional standing is
    also something that I encourage in all my team members, and you can see a vast
    improvement between the moment we started working together and a year later.
  prefs: []
  type: TYPE_NORMAL
- en: There are still many areas where I need to improve, but I feel that improvement
    in these areas benefits me in all areas of life and business, so it is a win-win.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of how to make the transition, I started working in consulting in order
    to work with high-profile companies without needing to join their staff permanently.
    This gave me an outsider's perspective on their business and strengthened my people
    skills because they were the client and thus, I was now client-facing.
  prefs: []
  type: TYPE_NORMAL
- en: After doing that for a few years, I joined a small company and managed their
    DevOps team and initiatives. I found that the most important skill as a consultant
    after technical knowledge is to influence others. When you do not have authority,
    you must use diplomacy, charisma, and negotiation skills to get what you want.
    Learning this skill before you are a manager allows you to be a better leader.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Influencing others – I see that as important in my role as a
    more senior individual contributor as well. What other skills are transferable,
    and what skills are completely different?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: The ability to mentor others and make people around you better.
    An experienced engineer is a catalyst for junior engineers and can help them get
    to where they are much faster. In terms of management, being able to prioritize
    work and analyze competing priorities is a key strength, but virtually anyone
    would benefit from strength in that area. Leadership is different from management.
    Leadership is owning things and being accountable. Even junior associates should
    strive to be leaders.'
  prefs: []
  type: TYPE_NORMAL
- en: In management, you must negotiate a lot; you must exercise diplomacy to avoid
    scenarios where you win the battle but lose the war. There's a lot of managing
    people's expectations across multiple teams. As an individual contributor, you
    tend to focus on your immediate team.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: What is your advice to a junior engineer who is looking for a
    mentor?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: I think we should always try to model our behavior after the
    positive examples we see. That way, we can improve and be influenced by those
    around us that have something we do not or excel in an area. Having strong relationships
    with senior members of the team also opens potential mentorship opportunities.'
  prefs: []
  type: TYPE_NORMAL
- en: You can also ask your immediate supervisor to play an active role in your career.
    Mentors can be found everywhere.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: A question many of us have for you revolves around the process
    of hiring; could you start by telling us about a few times where a candidate just
    did not deliver during the interview process?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: Usually, when I interview in screening, I look for experience,
    culture, and team fit, as well as softer people skills. I want people that work
    well with others. I have had people focus too much on compensation, overstate
    their skills, or show a lack of enthusiasm.'
  prefs: []
  type: TYPE_NORMAL
- en: One time, I had two candidates and I sent both a curveball; a last-minute questionnaire
    for both to fill out. One returned it the next day, with a positive attitude.
    The other one was upset because this last hurdle was unexpected. The first person
    got the job.
  prefs: []
  type: TYPE_NORMAL
- en: I have been fortunate with my hires, and I am still updating my interview process.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: John, can you give us a deeper look into other technical evaluation
    exercises you have used in the past? Also, which ones did you feel gave the best
    insight into a candidate and what are you looking for as you review the technical
    challenges?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: So, there are many ways to evaluate technical expertise. Usually,
    I focus on experience. What problems did you solve with technology you claim you
    know? I usually assume that what they are telling me is accurate and then just
    look for experience. This allows me to evaluate multiple dimensions at the same
    time. Sometimes, you get character insights, such as if someone is great with
    collaboration versus a lone wolf, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: Traditional metrics for technical acumen are useful but I usually leave that
    to other interviewers. Programming proficiency, systems experience, cloud expertise
    – these are all areas where it is easy to test general knowledge. I do not want
    to know if you can define something. You can look up every definition. I want
    to know what you can create by yourself, and what the limits of your knowledge
    and skills are. I specifically look for complements to my existing team, so having
    more than one skill set is always great.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks John, just a few more questions. Looking back at your
    career, are there any specific things you wish you would have done differently
    or avoided?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: I moved areas based on compensation needs and not based on
    what I wanted to do, or whether I was particularly interested in what the company
    was doing. I would advise against doing this, although I understand finances have
    a key role in every decision. Sometimes, I wish I had been brave enough to take
    a lower-paying job with a company or product I was passionate about. Regardless,
    my choices have resulted in a good career and outcomes, so I am very fortunate.'
  prefs: []
  type: TYPE_NORMAL
- en: Other things I could have done differently include scanning for cultural fit
    more before taking the job. I have worked in a few places with hostile work environments
    and while no question or interview is full proof, as a candidate, you should also
    conduct your due diligence on the company and make sure their practices align
    with your beliefs.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Final question, John – I have read some of your works on AI and
    future technologies; do you feel AI will affect the field of DevOps in the future?
    What should individuals do to prepare for the future of DevOps?'
  prefs: []
  type: TYPE_NORMAL
- en: '**John Knight**: Not really AI, but **AI-assisted automation** and **machine
    learning**. There are two intersections. One involves using DevOps to deploy AI
    or ML into production. This is known as operationalizing AI/ML or AI/MLOps.'
  prefs: []
  type: TYPE_NORMAL
- en: The other involves using AI agents to respond to events automatically, or ML
    to make predictions on things to happen or to make recommendations. This field
    is ripe for innovation. I would think agents that automatically remediate services,
    such as a **Site Reliability Engineer** (**SRE**) agent, should be coming soon
    if they do not exist already somewhere; intelligent testing automation, intelligent
    resource allocation, AI/ML in threat prevention, detection, remediation, and so
    on.
  prefs: []
  type: TYPE_NORMAL
- en: To prepare, you must broaden your horizons and continuously learn. Cloud providers
    are great at teaching you how to use their services, but you must understand the
    underlying knowledge to maximize your utilization. Thankfully, we live in an age
    where learning resources are abundant, where we can take classes online at the
    best universities in the world, and where we can acquire every kind of information
    in the blink of an eye at the lowest possible costs. Truthfully, if you have access
    to the internet, there is nothing you cannot begin to learn. It is an amazing
    time to live in.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: It sure is, John. Thanks for taking the time to share your insights
    with me today and I look forward to doing it again.'
  prefs: []
  type: TYPE_NORMAL
- en: Interview with a senior DevOps engineer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The second individual I interviewed is *Veeral Patel*. Veeral is an individual
    who I had the opportunity to hire into his first role as a DevOps engineer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.2 – Veeral Patel''s bio'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_11.2.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.2 – Veeral Patel's bio
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Good afternoon, Veeral, thanks for agreeing to sit down and discuss
    your journey to becoming a DevOps engineer.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: Thanks Nate, no problem!'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Before we get started, can you share some background information
    about yourself?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: Sure! So, I have an educational background in software engineering
    and data science. In the real world, I have worked in tech for the past 4 years.
    In terms of technical experience, I have done full stack development with React
    and C#, scripting with Python, and done DevOps automation work in Jenkins, GitLab,
    and Azure DevOps.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: When did you discover your passion for technology and what was
    the defining moment where you knew you wanted to write code?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: I knew I wanted to write code when I took an introduction
    to a computer science course in college, and it was the only class I would attend
    regularly, even though it was an 8 A.M. class in my first year.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Haha, so you knew it was your calling when it was worth putting
    effort into it; I love it! While in college, did you end up landing any internships?
    If so, what were they, and would you mind going into detail on what your responsibilities
    were and what you learned? Also, did your internship in any way influence the
    classes you took or subjects you studied post-internship?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: I did – I interned at *Medicon Health*! When I was there,
    I worked on software testing, we were doing integration testing and I used this
    tool called **Applitools**. That is when I learned how to find elements from a
    web browser and write scripts for clicking on elements and doing data validation.
    The internship did not affect the classes I took since I took the required courses
    that are needed to complete my degree as quickly as possible.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Do you feel your internship affected your ability to get a job
    out of college? Also, what was your first job post graduating college? Did you
    pursue a secondary degree directly after getting your undergraduate degree?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: It was easy getting a job after college. I had several offers
    before graduation, so I went with the company offering a higher salary. I waited
    a year out of college to pursue a secondary degree, which allowed my employer
    to pay for a small portion of it.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Sounds like a financially smart decision! What are three pieces
    of advice you would give to software engineering students who will be looking
    for a job soon?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: First, I encourage students to continue to learn modern technologies
    – the world of tech changes so much that you need to take time out of your workday
    to spend time learning.'
  prefs: []
  type: TYPE_NORMAL
- en: Second, if you would not pursue a job if it paid half the amount, you are not
    that passionate about it. It's hard to make it far in tech without passion; there
    is just so much competition and everyone is smart.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, do not be afraid to quit your job if you are not happy – there are
    too many opportunities out there to be stuck.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: That is solid advice that everyone would benefit from if they
    were to follow. I would like to switch gears and discuss how you transitioned
    from software engineering into cloud DevOps engineering.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: I transferred from software engineering because I liked to
    be able to own certain pipelines or projects or initiatives. As a software engineer,
    I was part of a team that maintained or created an application; it was a giant
    cog. In DevOps, I get to work on certain projects and own them. Also, I get to
    work on so much innovative technology. For example, in DevOps, I get to touch
    things such as AWS, Terraform, Ansible, and so on. In software engineering, I
    could be stuck working on Java for years.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: We should put that on a poster – *Get into DevOps so you are
    not stuck doing Java for years*. That sounds like the reason I got into DevOps
    – I wanted to work on cool technology. When you first interviewed for a DevOps
    role on my team, your desire to learn and soak up knowledge was the reason you
    beat out other candidates with similar skills; can you tell me other areas in
    your career where this trait has paid dividends?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: This ability and desire to learn and soak up knowledge has
    paid off in school as well; I have always thought formal education is very important
    and I think the fact that I have a few degrees can be attributed to my desire
    to learn. I can kind of talk about all sorts of technologies because I have spent
    some time at least looking into them, so interviewing is a lot easier, and I am
    never worried about volunteering for a task I know little about.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Veeral, will you describe the perfect member you would want to
    hire to join your team? What qualities should they have?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: The perfect member is a member that loves sharing ideas and
    does not mind taking on new challenges. I always like to hear other perspectives,
    and that alone can get the ideas flowing. Being technically adept is good but
    having a willingness to learn is just as important.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: You also have an advanced degree in data science. How does this
    knowledge complement your traditional DevOps skills? Do you have specific examples?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Veeral Patel**: Having a degree in data science opens ideas and thoughts
    about what is possible with pipelines and moving data. I always think to myself
    about how some data or how some pipeline would be valuable in analytics or what
    could be done with data that currently is not readily available. When I worked
    in healthcare, I always thought about how much untapped data there is that is
    just going to the database and being displayed back to a user interface without
    any real analysis being done on it.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks for your time, Veeral – I look forward to speaking with
    you again.'
  prefs: []
  type: TYPE_NORMAL
- en: Interview with a DevOps architect consultant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Some people have an impact on you. *Chris Timberlake* is one of those people
    for me. From the first time I attended a meeting with him, I could tell he was
    going to be someone that I was going to be able to soak knowledge from. This proved
    true during the time our paths crossed while we worked on an implementation for
    GitLab together:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.3 – Chris Timberlake''s bio'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_11.3.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.3 – Chris Timberlake's bio
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks, Chris, for agreeing to discuss your DevOps journey with
    me. Before we get started, can you introduce yourself and the experiences that
    have led you to where you are now?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: Thanks for having me, Nate! I started working with computers
    at a young age – before I was 10 years old. I started out working on GeoCities
    websites and booting tools for Yahoo Messenger, and then moved into programming
    video games based on the Half-Life Source Engine. These events were my introduction
    to programming. I have been addicted ever since. I took a short break to pursue
    a career in law enforcement. Then, I came back to programming and found myself
    through a series of events working for Red Hat on massive digital transformations.
    Now, I work at GitLab as a professional services architect, and I help lead digital
    transformations.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Wait – so you are a technologist and an officer of the law? Impressive!
    Do you consider yourself a DevOps engineer? Can you explain how you differentiate
    between a DevOps engineer and a software engineer or are they the same?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: I do consider myself a DevOps engineer, but I also consider
    myself a half-decent software engineer and SysAdmin. I move between the separate
    roles very fluently. Previously, in 2015, I would say that a DevOps engineer was
    just a software engineer with SysAdmins abilities. However, the DevOps field has
    grown substantially and evolved with the cloud market. Today, I consider a DevOps
    engineer its own role. Today, a DevOps engineer is an engineer who handles most
    of the piping for automation and delivery.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Chris, you have seen many sides of engineering and DevOps. Can
    you explain the biggest difference between working in DevOps as a consultant versus
    directly for a company?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: The biggest takeaway is your role. As a consultant, you
    must have an entirely different mindset and you have different responsibilities.
    As a consultant, you are supposed to be a leader of the field, an educator, someone
    people look up to for answers and to get out of a hairy situation. You also have
    to coordinate travel, expenses, being on call, and working in different environments
    – sometimes without the tools necessary. As a consultant, any role you have is
    much more difficult. For example, as an employee, you do not have to worry so
    much about ensuring you are on a plane in Atlanta at 6 P.M. to meet a connection
    in Dallas at 10 P.M. so that you can be at a meeting in San Francisco at 8 A.M.'
  prefs: []
  type: TYPE_NORMAL
- en: As an employee, you have far fewer concerns. I think of being a consultant for
    DevOps as being two distinct roles in one. On the one hand, you are an individual
    contributing to DevOps engineering. On the other hand, you are a traveling leader
    or teacher who educates others on the topic.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks, Chris. As a follow-up, question do you think a consulting
    role is suitable for someone looking to start their career in DevOps or is it
    a role for experts only?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: It is suitable for either scenario. It is less about
    knowledge and more about the determination and ability to remain calm under pressure.
    As I started my consulting career, I certainly was not an expert on all things.
    Even today, I am asked about things I am not an expert on. But when faced with
    uncertainty, I make sure I go out and find those answers for folks. I make sure
    I educate myself on the subject at hand while keeping a clear mind about the topics.
    One of the things being a consultant has taught me is that I do not understand
    a solution or topic unless I can reliably, accurately, and properly argue both
    for and against that item. Being a consultant can be a stressful job. It is certainly
    not for everyone. It is less about what you know and more about how you work,
    being able to handle the stress of the role, and even actually enjoying the role.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks, Chris, I feel our readers will find this particularly
    useful as they navigate their DevOps career. I would like to switch gears and
    talk about open source. At least two of the companies you have worked for are
    considered pioneers in open source software – GitLab and Red Hat. Many would say
    they are also dominant players in the field of DevOps. Can you share your thoughts
    on the relationship between open source and DevOps?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: I mean, it is no secret that the future of software is
    open source. Historically, many of the DevOps tools and patterns came from open
    source projects. People would self-organize and work on a project together, then
    bam – you have a new product that is used by many and even corporations. Some
    may feel that open source is beneficial because it allows folks to be involved
    in software who may not otherwise be.'
  prefs: []
  type: TYPE_NORMAL
- en: The true power of open source is transparency, collaboration, and, most importantly,
    open conflict that happens. All these things are key to producing something great.
    Red Hat is not just a company built on open source; they bring those values into
    how they work and operate. They allow employees to be themselves and are transparent
    with those employees about things. Red Hat was able to become the biggest acquired
    tech company to date at 34 billion dollars. GitLab also takes these values to
    heart – not just with its software but in the way it works. This resulted in a
    massive **IPO (Initial Public Offering)** this year.
  prefs: []
  type: TYPE_NORMAL
- en: Those same values that open source advocates and encourages drove those two
    companies to their heights and I believe will cement DevOps as a requirement for
    all software and IT companies in the future. This is because DevOps also encourages
    and implements those same values.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: I could not agree more! Now, going on a tangent to what you said
    about DevOps values, what do you feel are the most in-demand and desired soft
    skills for DevOps professionals and those looking to break into the field?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: I think no matter the role you are in, you should aspire
    to be a leader. Now, that does not mean you have to be a manager or even lead
    anything. But having leadership-like attributes will help you in your career goals
    anywhere. Having effective communication skills is necessary. Clear communication
    that is informative and receptive cannot go overstated. Having confidence is another
    important attribute.'
  prefs: []
  type: TYPE_NORMAL
- en: Even if you must fake it till you make it. I see many amazing engineers trip
    themselves up with imposter syndrome. We are all here trying to build something
    great, we will all run into issues, and we will all fail. Lastly, I think accepting
    failure, being willing to risk failure, and then overcoming failure is important.
    Every engineer with strong soft skills has a story of when they failed hard.
  prefs: []
  type: TYPE_NORMAL
- en: Me? I lost 4 million dollars in revenue in an afternoon for a company I was
    employed by. Being able to iterate and learn from those failures, prevent them
    from happening, and build something better after a failure is very important.
    That's because everyone in any career will fail; it is what you do after you fail
    that is important.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: I would be interested to hear more on the story of how you lost
    $4,000,000 if you can discuss that. What happened and what did you have to do
    to remediate the situation? Also, were there any repercussions from your employer
    when this happened, and what was their response?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: Unfortunately, I cannot. There are privacy concerns.
    What I will say is what happened; I oversaw the release of some software to a
    shopping cart. It caused the shopping cart to not entirely break but have a reduction
    in function. So, we stopped many customers from checking out, but not enough to
    trip automatic alerts and monitoring.'
  prefs: []
  type: TYPE_NORMAL
- en: As for repercussions, absolutely. I had to write a detailed document explaining
    how everything transpired., digging deep using the 5 Whys method. Then, I had
    to write a statement to the shareholders of the company as to what happened and
    assure them it would not happen again. All I will say is that JavaScript is very
    cool until there is a small syntax error that causes big problems.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: I understand. I understand outside of work, your hobbies also
    include many software-related endeavors. Can you talk about these, and do your
    endeavors outside of work play into your success at work?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: Absolutely! I will not say my outside work successes
    have helped my career. But my failures have! I have done a significant amount
    of mobile, game, and desktop development, which is a fancy way of saying I have
    gone down the rabbit hole of finding issues with building toolchains and third-party
    libraries. It also means I have had experience with many technologies my normal
    job does not expose me to either.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A good example is when Apple flipped the switch on mobile apps and blocked
    any apps from being able to compile code on the fly. It broke numerous MongoDB
    libraries: being able to navigate and resolve this issue was a terrible endeavor
    that I learned a lot from. I use those lessons learned in my day-to-day work.'
  prefs: []
  type: TYPE_NORMAL
- en: Then, there are the more fun rabbit hole projects, such as converting Quake
    2 from C into C++ compilers on a weekend. This taught me the inner workings of
    some of the C and C++ compilers. Not all my projects involve software. I am also
    a huge car fanatic. Being able to diagnose and problem solve weird electrical
    issues with a car or engine helps me solve problems at work. These lessons are
    translated into software.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: I will not keep you too much longer, but I have a few more questions
    for you. What advice do you have to offer to individuals who want to get into
    the DevOps field?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: I would say that if you want to be in DevOps, you should
    spend a lot of time on side projects and build up a lot of knowledge. Your job
    will not expose you to everything you need to learn; you must be passionate about
    the field. Build a mobile app, make a video game, and then automate it.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Last question – technology is changing so fast. Can you paint
    a mental picture of what the DevOps landscape will look like 20 years from now?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chris Timberlake**: In the future, I think we will see two things. First,
    we are going to see a consolidation of companies in DevOps as a fight for sales
    and market share increases. We have seen a tremendous consolidation over COVID.'
  prefs: []
  type: TYPE_NORMAL
- en: With that, we are also going to see a lot of new companies start, where someone
    has a new process or idea, and they give it a shot and build a company from it.
    This is similar to how GitLab and many new tech IPOs started. Both of those are
    near term; 5-10 years out. I could not even guess 20 years out. Everything is
    moving so quickly that in 20 years we could have wearable VR and Star Trek holograms.
    Or, those things could be like flying cars, forever just an arm's length away.
  prefs: []
  type: TYPE_NORMAL
- en: No matter what, we are going to see increased transparency, collaboration, and
    conflict in software and DevOps. No matter what, we will be better off.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks for your time, Chris, I look forward to the next time
    we discuss all things DevOps.'
  prefs: []
  type: TYPE_NORMAL
- en: Interview with a tech executive passionate about neurodiversity and inclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next individual I interviewed was *Magnus Hedemark*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.4 – Magnus Hedemark''s bio'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_11.4.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.4 – Magnus Hedemark's bio
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Hi Magnus, I am excited you agreed to let me interview you about
    DevOps. Would you mind telling us about yourself, and your career progression
    in IT and DevOps?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Magnus Hedemark**: I took a very unconventional route into IT and that could
    be a very long story by itself. But I think throughout my journey, one thing that
    always served me well was to try to look ahead and see how I could be useful ahead
    of the known need. I like figuring out how things work, so rather than starting
    on the developer side, I came upon the Ops side. And I always had a knack for
    figuring out how to automate big, hairy, audacious things so that I could focus
    on smarter work. That was not common in my field in my early career, not like
    it is now. But there were a couple of big inflection points in the industry where
    the industry itself changed and my career changed:'
  prefs: []
  type: TYPE_NORMAL
- en: The industry started moving to Agile. I was on an Ops team at IBM where some
    great engineers from Brazil were huddling around their work every day, and sort
    of socially swarming around it in a way you do not tend to see in enterprise-driven
    Agile programs. This was fascinating to me and was a real reveal of what was missing
    in my career development.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I had a CTO pull me aside and challenge me to consider a career in leadership.
    I was not sold on the idea, but he committed to spending time with me to understand
    what great looks like, and this was missing. I try to be that person now for others
    who I see with leadership potential. But I think when I was younger and earlier
    in my career, information was power, and job security meant not having successors.
    These days, information wants to be free, and great leaders are constantly grooming
    potential successors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It turned out that I enjoyed leadership even more than engineering (though I
    am still constantly building things for fun). I went from just being a *brilliant
    jerk* who preferred to hack in isolation, to what I hope more folks would consider
    an empathetic and supporting leader who places a high value on collaboration.
    The progression was as much personal growth as professional.
  prefs: []
  type: TYPE_NORMAL
- en: Today, I lead a little over 300 people with a broad-ranging product portfolio
    in the TechOps space.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: Wow, thanks, Magnus – that was an amazing response! I guess I
    should not be surprised; I follow you quite closely on LinkedIn and am wondering
    about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: What advice do you have for young IT professionals looking to advance their
    career in a DevOps direction?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Second, what advice do you have for more seasoned IT professionals who are considering
    a career in management?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Magnus Hedemark**: For folks just starting, I do not think there is a boot
    camp that adequately prepares you. Consistently, the absolute best people I have
    worked with in this field, the ones who earn well and are in demand, have a couple
    of defining traits:'
  prefs: []
  type: TYPE_NORMAL
- en: 'They are very curious people, always learning new skills for personal enrichment,
    and then applying those skills in their work. Even in a senior leadership role,
    I dedicate about 10% of my annual bonus every year to leveling up my skills. That
    might be paying for books or coaching. This year, I am using it to underwrite
    some HomeLab upgrades for learning Kubernetes much more deeply. If you are just
    getting into DevOps, some foundational texts are more of the beginning of the
    journey... if you have not read these things yet, you are missing what a lot of
    people around you are understanding:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Phoenix Project**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous Delivery**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Agile Manifesto** (it will take you less time to read than this answer)
    but even more importantly than that, the *12 principles* behind it'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: They are very empathetic people. I mentioned the *brilliant jerk* paradigm before
    and there is not much room for it now. Learning to be a good listener, to be curious
    instead of furious, goes a long way. Some people are gifted in this area. Others,
    like me, have to work harder at it. But DevOps is as much about the cultural impact
    as it is the cool technical skills. I think learning about the **Westrum model**
    is one of the first things I would call out to make sure you are cultivating a
    high-collaboration engineering culture. I also think it's important to stay aware
    of the cultural sensitivities of underrepresented communities in tech. *Guide
    to Allyship* is a good place to start. Just being aware and mindful – those strengths
    are introduced when we make sure to include people with different backgrounds
    and different ways of thinking. But as a matter of respect, too, we need to invest
    in understanding how to include them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For people in an individual contributor role thinking about moving into management...
    where do I begin? I think if you are not doing well at the curious and empathetic
    points I made in the previous question, I would advise that we have already got
    too many in this field who are missing these key traits and it may not be the
    right path for you. It is important to understand that going from individual contributor
    to manager is not a *promotion*; it is more of a lateral move to a completely
    different career track. For example, just to level set, where I work now, the
    highest-ranking individual contributor that can report to a senior manager is
    a senior staff software engineer. Even though there is a supervisory relationship
    between the two, they are at the same pay grade. When someone moves from senior
    staff software engineer to senior manager (a not-uncommon move), there is initially
    some disappointment that they are not getting paid more. Even as you move up in
    management, you may have highly skilled individual contributors earning more money
    than you. I want to tell you now and keep it filed away for when this inevitably
    happens – *get over it*. The jump in compensation does not tend to happen while
    going from individual contributor to manager (within the same organization), but
    when you jump from manager to director (manager of managers of individual contributors).
    But here is the thing – you could stay in an individual contributor role and still
    get that sweet pay bump by getting a promotion to principal software engineer.
    And your reporting relationship will change, because now, you outrank your senior
    manager, and you will instead be reporting directly to their director.
  prefs: []
  type: TYPE_NORMAL
- en: So, it all comes back to this, I think.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are thinking about making the move, think long and hard about what your
    motivations are. And think about your level of commitment to this path. Do not
    try to dither with *I''m going to still write code half the time*. Reality check:
    you are not going to write much code anymore. And if you do, you are now putting
    other engineers into a very uncomfortable position where they must tell the boss
    their code sucks. Just get over it, get over yourself, and commit to being a great
    leader. If you just want to be *an engineer with a badge*, this is probably not
    the right career move for you.'
  prefs: []
  type: TYPE_NORMAL
- en: For me, my motivation is to liberate latent potential (in myself, in others,
    in teams of people, in lines of business, their products, their customers, and
    the communities that they work in).
  prefs: []
  type: TYPE_NORMAL
- en: '**Reporter**: You have over 300 people who report under your leadership, meaning
    you have seen your fair share of interviews, both good and bad. If you do not
    mind, I am sure the readers would be interested in what made the good and bad
    candidates stand out.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Magnus Hedemark**: I think a lot of other seasoned interviewers will nod
    knowingly when I say that most of the time, you know in the first 5-10 minutes
    if that person is a slam-dunk or a hard-no. But I still like to take more time
    anyway, because sometimes, a *slam-dunk* can turn into a hard no when you get
    to know them more (but I do not think I have ever seen an interview go in the
    other direction). Again, I think a lot of empathy and understanding must be shown
    regarding there being many ways to be *normal* in this world versus just those
    who we identify with (affinity bias). So, the following are some of the key things
    I think about when I am talking to someone:'
  prefs: []
  type: TYPE_NORMAL
- en: Do they objectively have hard skills that will raise the bar for this team?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Might they be a *culture add* to the team? (I do not interview for culture fit;
    that is how you get a monoculture.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I ask some questions to help a candidate expose if they are a high risk for
    breaking the *No Jerks Rule*, which I take very seriously as responsibility for
    cultivating great team cultures. You can't let even one toxic person into your
    team, and if you find them, you cannot let them remain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reporter**: Thanks, Magnus, for your time. I enjoyed our conversation, and
    I am sure the readers will as well.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was a culmination of interviews with four DevOps professionals
    with varying levels of experience. We had the opportunity to speak with John Knight,
    who gave an insight into hiring practices, as well as what he looks for in terms
    of skills when hiring DevOps engineers. The DevOps leader also gave insight into
    how someone may transition from an individual contributor role to a manager. Lastly,
    John gave us his prediction for the future of DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we had the opportunity of speaking with senior DevOps engineer Veeral
    Patel, who gave insight into how he landed a job in DevOps and gave helpful tips
    for students looking for a job.
  prefs: []
  type: TYPE_NORMAL
- en: Chris gave insight into the relationship between open source and DevOps. The
    major takeaway from Chris's interview is that DevOps is truly a mindset, and if
    you want to succeed, you cannot be afraid to fail.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we had the pleasure of speaking with Magnus, a technology executive
    who has a storied career in DevOps and was full of insight and knowledge for individuals
    looking to either get into the field of DevOps or transition into leadership.
  prefs: []
  type: TYPE_NORMAL
