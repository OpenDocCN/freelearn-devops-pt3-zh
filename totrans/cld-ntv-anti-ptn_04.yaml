- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: FinOps – How to Avoid a Bill Shock
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FinOps – 如何避免账单震惊
- en: '*“FinOps is the practice of bringing financial accountability to the variable
    spend model of cloud, enabling distributed teams to make business trade-offs between
    speed, cost,* *and quality.”*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*“FinOps是将财务责任引入云的可变支出模型的实践，使分布式团队能够在速度、成本和质量之间做出商业取舍。”*'
- en: '*– J.R. Storment, Executive Director of the* *FinOps Foundation*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*– J.R. Storment，FinOps基金会执行董事*'
- en: How do we know what the return value should be for the money we put into something?
    To explore this quote further, we can compare similarities with when we build
    a house and need to set a budget. We know how many rooms we need, how much garage
    space we need, and what insulation level, air conditioning, or heating capacity,
    depending on the climate zone. Those are immediate build expenses. However, there
    are also long-term considerations that we need to consider. Do we want better
    insulation and a solar system to reduce the ongoing electricity cost? This means
    there is more upfront cost, but there is a long-term benefit of ongoing cost reduction.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何知道我们投入的资金应该带来什么回报呢？为了进一步探讨这个问题，我们可以将其与建造房屋并需要设定预算的情况进行比较。我们知道需要多少个房间，需要多大的车库空间，依据气候区域的不同，我们还需要多少隔热层、空调或供暖能力。这些是立即的建造费用。然而，我们还需要考虑长期的因素。我们是否想要更好的隔热和太阳能系统以减少持续的电力费用？这意味着更高的前期成本，但也有长期的持续成本降低效益。
- en: In the same way, we need to consider the short- and long-term benefits of FinOps.
    It becomes more complex because our cloud landscape is more dynamic than a static
    building construction. FinOps needs to be an ongoing discipline. But how do we
    strike the right balance between paying the right price, implementing the right
    solution, meeting timelines, and getting the right value?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们需要考虑FinOps的短期和长期收益。这变得更加复杂，因为我们的云环境比静态建筑施工更具动态性。FinOps需要成为一种持续的纪律。那么，我们如何在支付合理价格、实施合适解决方案、满足时间要求并获得最佳价值之间找到正确的平衡呢？
- en: “*Price is what you pay; value is what you get*” – this is a famous quote by
    Warren Buffett. In other words, we need to focus on the value we receive from
    an investment rather than just looking at the price. In our case, the investment
    is all the effort we put into building an enterprise cloud platform and the applications
    we run on top of it. We need to assess the value gained, such as business agility
    and increased resilience, instead of solely focusing on cost reduction.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: “*价格是你支付的；价值是你得到的*”——这是沃伦·巴菲特的名言。换句话说，我们需要关注投资带来的价值，而不仅仅是看价格。在我们的案例中，投资指的是我们在构建企业云平台和在其上运行的应用程序时所付出的所有努力。我们需要评估获得的价值，如业务灵活性和增强的韧性，而不是单纯关注成本降低。
- en: 'This chapter’s goal is to understand how we can get good value out of our cloud
    native landscape. We will focus on the following areas:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是理解我们如何在云原生环境中获得良好的价值。我们将重点关注以下几个方面：
- en: Missing out on the power of good tagging practices
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错失良好的标签实践的潜力
- en: Not leveraging cloud native tooling
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未充分利用云原生工具
- en: Ignoring non-obvious **cloud service provider** (**CSP**) costs
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 忽略不明显的**云服务提供商**（**CSP**）费用
- en: Focusing on cost savings over driving value
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过于专注于节省成本，而忽略驱动价值
- en: There is a lot to unpack, and we will go through it step by step. Before we
    can measure the value, improve our cost governance, and deal with cost ownership,
    we will look into enabling cost allocation in the cloud. It all starts with metadata,
    also called tagging or labeling within the scope of cloud resource management.
    Let’s dive into it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这其中有很多内容，我们将逐步进行分析。在我们能够衡量价值、提升成本治理、并处理成本所有权之前，我们将先探讨如何在云中启用成本分配。一切都从元数据开始，也叫做标签或在云资源管理范围内的标记。让我们深入了解一下。
- en: Missing out on the power of good tagging practices
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 错失良好的标签实践的潜力
- en: '**Tags** are key-value pairs that act as metadata for cloud resources. **Tagging**
    is the practice of assigning tags to cloud resources to describe them. Tags help
    organize, manage, and track resources efficiently.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**标签**是作为云资源元数据的键值对。**标签**是一种将标签分配给云资源以描述它们的做法。标签有助于高效地组织、管理和追踪资源。'
- en: 'Tags are helpful not only in providing a cost breakdown but also in managing,
    identifying, organizing, searching for, and filtering resources. The benefits
    of tagging are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 标签不仅有助于提供成本细分，还能帮助管理、识别、组织、搜索和筛选资源。标签的好处如下：
- en: '**Resource management**: Tags help organize resources by categories, based
    on products or projects, environments, cost centers, business units, and others.
    This makes it easier to search for particular resources.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源管理**：标签有助于按产品或项目、环境、成本中心、业务单元等类别组织资源。这使得搜索特定资源变得更加容易。'
- en: '**Security and compliance**: Tags can be used to enforce identity and access
    policies and control access to resources. For example, if a resource tag describes
    a database holding credit card information, we can implement a policy ensuring
    that humans cannot read the data.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性和合规性**：标签可用于强制执行身份和访问策略，并控制对资源的访问。例如，如果某个资源标签描述了一个存储信用卡信息的数据库，我们可以实施一项策略，确保人类无法读取该数据。'
- en: '**Automation**: Tags can be used to drive deployment and auto-scaling behavior
    or automated shutdown of resources.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：标签可以用于驱动部署和自动扩展行为，或自动关闭资源。'
- en: '**Operational efficiencies**: Tags can be useful for troubleshooting during
    an incident since they provide additional context. They can also be useful for
    fine-grained monitoring and to drive alerting behavior.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作效率**：标签在发生事件时有助于故障排除，因为它们提供了额外的上下文。它们还可用于精细化监控，并驱动警报行为。'
- en: '**Cost management**: Tags help allocate and track costs. We can use them to
    break down costs and organize our resources. For the remainder of this section,
    we will focus on this aspect.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本管理**：标签有助于分配和跟踪成本。我们可以使用它们来细分成本并组织我们的资源。在本节的其余部分，我们将重点关注这一方面。'
- en: Even if tagging is as simple as describing key-value pairs, many things can
    still go wrong, and we will discuss two anti-patterns.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 即使标签简单到只是描述键值对，许多问题仍然可能出现，我们将讨论两种反模式。
- en: Common anti-patterns
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见的反模式
- en: Tagging-related anti-patterns often start with shortcomings in our tagging standards
    or tagging enforcement, and we will look into these areas next.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 与标签相关的反模式通常始于我们在标签标准或标签强制执行方面的不足，接下来我们将深入探讨这些领域。
- en: Lack of tagging standards
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺乏标签标准
- en: The first one is the lack of tagging standards, which I have seen many times.
    There are several reasons why this anti-pattern can occur. It could be that cloud
    native adoption did not get enough focus because an organization is trying to
    increase its cloud footprint organically and is never gaining momentum for cloud
    migrations. It could be because a company is trapped in a reactive mode and cannot
    operate strategically or because of competing priorities.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个反模式是缺乏标签标准，我已经见过很多次。这种反模式发生的原因有很多。可能是由于云原生采用没有得到足够关注，因为一个组织试图有机地扩大云足迹，并且云迁移始终没有取得进展。也可能是因为公司陷入了被动模式，无法进行战略性操作，或者是因为优先事项冲突。
- en: This is how things usually unfold. An organization is adopting the cloud. However,
    the cloud adoption model has gaps, especially in governance, automation, standardization,
    and service catalog offerings. As a result, decentralized product teams are provisioning
    cloud resources and managing them differently. Applying tags is optional. Even
    though teams will eventually decide to apply tags, the tags between teams will
    not be consistent.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 事情通常是这样发展的：一个组织正在采用云技术。然而，云采用模型存在一些漏洞，特别是在治理、自动化、标准化和服务目录提供方面。因此，分散的产品团队在配置云资源时管理方式各异。应用标签是可选的。尽管团队最终会决定应用标签，但不同团队之间的标签不会一致。
- en: That means we will have resources that are not tagged at all or only have some
    tags, and there is a high chance that the tags themselves are inconsistent, whether
    it is the key, the value, or both. Therefore, we will miss out on many FinOps
    guardrails, which we will analyze after the second variation of this anti-pattern.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们将会有一些资源根本没有标签，或者只有部分标签，而且这些标签本身很可能不一致，无论是键、值，还是两者都不一致。因此，我们将错过许多 FinOps
    的守护措施，我们将在分析第二种反模式后进一步探讨这一点。
- en: Lack of tagging enforcement
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺乏标签强制执行
- en: The second variation is that there are mandated tagging standards but they are
    not enforced. As a result, we will probably have better tagging coverage than
    the previous variation. However, we still rely on human perfection.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种变体是有强制的标签标准，但未进行强制执行。因此，我们的标签覆盖率可能会比第一种变体更好。然而，我们仍然依赖于人工的完美执行。
- en: Every engineer must ensure they have all tags assigned to each cloud resource.
    That means the key and the value need to be a perfect match.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 每个工程师都必须确保为每个云资源分配了所有标签。这意味着键和值必须完美匹配。
- en: 'During a consulting engagement, I analyzed the tags in place across different
    cloud environments. Over time, the tag for the cost center had changed multiple
    times. The customer used the following combinations for the key: “cost-centre”
    (UK spelling), “cost-center” (US spelling), “costcentre” (all lower case), “CostCentre”
    (Pascal case syntax), “costcentre,” and “costcenter.”'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在一次咨询项目中，我分析了不同云环境中的标签。随着时间的推移，成本中心的标签已经多次更改。客户使用了以下几种组合作为关键字：“cost-centre”（英国拼写）、“cost-center”（美国拼写）、“costcentre”（全小写）、“CostCentre”（Pascal
    命名法）、“costcentre”和“costcenter”。
- en: Because tags are case-sensitive in AWS, this resulted in six different tag categories.
    Therefore, the billing report also visualized them in six different variations,
    requiring manual rectification to achieve a cost breakdown. Another common mistake
    is to use names for the product owner tag value. The individual then leaves the
    organization and their account gets deactivated. We then have an invalid tag and
    do not even know in which department the previous application owner was. This
    makes it hard to track down the new application owner, assuming there is no ownership
    vacuum.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于标签在 AWS 中是区分大小写的，这导致了六种不同的标签类别。因此，计费报告也以六种不同的变体进行了可视化，要求手动修正才能实现成本分解。另一个常见的错误是使用产品所有者的姓名作为标签值。然后，个人离开组织并且他们的账户被停用。这样我们就会有一个无效标签，甚至不知道之前的应用程序所有者属于哪个部门。如果没有所有权空缺，这会让追踪新的应用程序所有者变得困难。
- en: As we can imagine, this is not an exciting activity that must be performed every
    month and adds the risk of human error.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所能想象的那样，这并不是一个令人兴奋的活动，每个月都必须执行，并且增加了人为错误的风险。
- en: Consequences of poor tagging practices
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不良标签实践的后果
- en: 'There are several impacts if consequences” we do not have sufficient tagging
    in place:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有足够的标签，我们将面临多个影响：
- en: '**Cost allocation becomes challenging**: We cannot allocate cost to cost centers,
    profit centers, or departments. This makes it difficult to track and manage budgets.
    A common result of unclear cost allocation is the lack of ownership and accountability.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本分配变得具有挑战性**：我们无法将成本分配到成本中心、利润中心或部门。这使得追踪和管理预算变得困难。成本分配不清晰的常见结果是缺乏所有权和问责制。'
- en: '**Cost optimization becomes challenging**: Without sufficient tagging, we will
    have difficulties identifying the owner of underutilized or unused resources.
    Therefore, no one will act to right-size resources or turn off unnecessary ones.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本优化变得具有挑战性**：没有足够的标签，我们将很难识别未充分利用或未使用资源的所有者。因此，没人会采取行动来调整资源规模或关闭不必要的资源。'
- en: '**Inaccurate financial reporting**: Financial reports rely on accurate tagging.
    This means we need to manually allocate costs or accept inaccuracy. In the latter
    case, that means we cannot fairly distribute the cost.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**财务报告不准确**：财务报告依赖于准确的标签。这意味着我们需要手动分配成本，或者接受不准确的报告。在后一种情况下，意味着我们无法公平地分配成本。'
- en: '**Incomplete tagging also results in imprecise budgeting**: This can lead to
    budget overruns and insufficient forecasting. Without a correct reflection of
    our current spending, we will struggle to predict future expenses.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签不完整也会导致预算不精确**：这可能导致预算超支和预测不足。如果没有正确反映当前的支出，我们将难以预测未来的费用。'
- en: '**Insufficient showback or chargeback processes**: “Chargeback consequences”
    models, where costs are billed back to the departments or product teams that incurred
    them, rely heavily on accurate tagging. Without accurate tagging, implementing
    a fair and transparent chargeback system is challenging and requires a lot of
    human data wrangling. With showback models, departments are shown their cloud
    spending without actual billing. Insufficient tagging can reduce transparency,
    leading to disputes, confusion, and potentially mistrust.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏显示回溯或分摊回收费流程**：“分摊回收费后果”模型，即将费用计回发生费用的部门或产品团队，极度依赖于准确的标签。没有准确的标签，实施一个公平和透明的回收费系统变得困难，并且需要大量人工处理数据。使用显示回溯模型时，部门会看到其云支出，但不会实际计费。标签不足可能减少透明度，导致争议、混乱，甚至可能产生不信任。'
- en: '**Lack of ownership**: Without a functioning chargeback process, there cannot
    be clear ownership, which is critical for good value realization. Therefore, we
    will miss out on good FinOps practices, including overspending, because we have
    underutilized cloud resources.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏所有权**：如果没有有效的回收费流程，就无法明确所有权，而明确所有权对于实现良好的价值至关重要。因此，我们将错失良好的 FinOps 实践，包括超支，因为我们未充分利用云资源。'
- en: '**Lack of policy enforcement**: Cloud governance policies often depend on tags
    to enforce rules and best practices. Insufficient tagging can weaken governance,
    leading to uncontrolled costs. Tags provide visibility into how resources are
    being used across the organization. Without them, it is difficult to ensure resources
    are consequences” used efficiently and according to policies.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏策略执行**：云治理政策通常依赖标签来强制执行规则和最佳实践。不足的标签化可能削弱治理，导致成本失控。标签提供了对组织内资源使用情况的可见性。没有标签，很难确保资源的使用符合政策要求，并且效率得以保障。'
- en: Spotting untagged resources
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发现未打标签资源
- en: Common root causes of inadequate tagging are inconsistent deployment methods,
    a lack of leveraging a policy-as-code framework, a lack of tagging standards,
    and a lack of automation that misses out on tagging enforcement. Validating the
    tag keys and values will bring us certainty. There are different ways how to do
    that depending on the CSP We will look into it now by starting with AWS.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 不足的标签化的常见根本原因包括部署方法不一致、未利用策略即代码框架、缺乏标签标准以及缺少自动化，导致标签强制执行的遗漏。验证标签键和值将为我们带来确定性。根据云服务提供商（CSP）的不同，有不同的方法来实现这一点。我们现在从AWS开始研究。
- en: Untagged resources in AWS
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AWS中的未打标签资源
- en: If we have access to the console or cloud shell, we can do the validation ourselves.
    If we want to find untagged resources in our AWS account, we can use the resource
    search feature in the AWS Resource Explorer with a filter query that uses the
    `tag:none` value. As we can see, this is fairly straightforward, and we will now
    explore how to solve this problem in Azure.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有访问控制台或云Shell的权限，可以自己进行验证。如果我们想在AWS账户中查找未打标签的资源，可以使用AWS资源浏览器中的资源搜索功能，并使用`tag:none`过滤查询。如我们所见，这个方法相当直接，接下来我们将探讨如何在Azure中解决这个问题。
- en: Untagged resources in Azure
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure中的未打标签资源
- en: 'In Azure, we can use PowerShell commands for this as in the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure中，我们可以使用PowerShell命令，如下所示：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the preceding snippet, the following occurs:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，发生了以下操作：
- en: The first command gets all resources
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个命令获取所有资源
- en: The second command filters all resources that are not tagged
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个命令过滤所有未打标签的资源
- en: The third command displays all untagged resources in a table format showing
    the resource name, resource type, resource group name, and location (Region)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个命令以表格格式显示所有未打标签的资源，表格展示了资源名称、资源类型、资源组名称以及位置（区域）。
- en: We will now look into the required steps in GCP.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将研究在GCP中所需的步骤。
- en: Untagged resources in GCP
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GCP中的未打标签资源
- en: 'In GCP, we can also use the cloud shell to search for unlabeled resources,
    as shown here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在GCP中，我们也可以使用云Shell搜索未标记的资源，如下所示：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If we have not enabled the cloud asset API yet, we can do this with the first
    command. The second command lists all Google Kubernetes Engine node pools that
    do not have a tag. In the scope, we need to replace `project_name` with our project
    name. The `labels:*` filter reduces the search result to unlabeled resources.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们还没有启用云资产API，可以通过第一个命令来启用。第二个命令列出了所有没有标签的Google Kubernetes Engine节点池。在此范围内，我们需要将`project_name`替换为我们的项目名称。`labels:*`过滤器会将搜索结果限制为无标签的资源。
- en: If we don’t have access to the console or cloud shell, we can ask someone with
    permission to run the preceding commands and validate the tagging coverage and
    accuracy. Otherwise, we can also contact the person managing the CSP’s bill and
    validate with them how accurate the current cost breakdown is. It is a good idea
    to validate both options since there might be different opinions within our organization.
    In that case, it will be helpful to set up a workshop and go through the evidence,
    including the last bill, and the cost dashboards from our CSP, and run some commands
    to validate the tags.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有控制台或云Shell的访问权限，可以请有权限的人运行前面的命令，验证标签的覆盖范围和准确性。否则，我们还可以联系管理CSP账单的人员，验证当前的成本拆分是否准确。验证这两个选项是个好主意，因为组织内部可能会有不同的看法。在这种情况下，组织一个研讨会，通读证据，包括最后的账单、CSP的成本仪表板，并运行一些命令验证标签，将非常有帮助。
- en: Once we understand our current status and shortcomings, we must identify our
    target state. For this chapter, we will solely focus on FinOps-related tags and
    not tags that might be helpful for security, compliance, observability, or other
    operational aspects. *What does good look like, and where do* *we start?*
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦了解了我们当前的状态和不足之处，我们必须确定我们的目标状态。对于本章内容，我们将只专注于与FinOps相关的标签，而不是可能对安全、合规性、可观察性或其他操作方面有帮助的标签。*良好的实践是什么，*
    *我们从哪里开始？*
- en: Adopting a tagging taxonomy
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 采用标签分类法
- en: We will start by defining a tagging taxonomy and establishing standards for
    tag keys, values, and syntax.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从定义标签分类法开始，并为标签键、值和语法建立标准。
- en: Tag keys
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签键
- en: 'We need to know what information we want to extract from our tags and specify
    the valid and required tag values and keys. Typically, information includes the
    following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要知道我们希望从标签中提取什么信息，并指定有效且必需的标签值和键。通常，这些信息包括以下内容：
- en: '**Cost center and/or business domain/unit or portfolio name**: If there is
    no 1:1 mapping between cost centers and business units and both are relevant for
    a showback or chargeback approach, we will need both.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本中心和/或业务领域/单位或产品组合名称**：如果成本中心与业务单位之间没有1:1映射，且两者对费用回溯或费用分摊方法都相关，我们将需要同时使用这两个标签。'
- en: '`dev`, `test`, `uat`, `preprod`, and `prod`. should also be addressed in our
    tagging strategy. This gives us good insight to validate how much cost we spend
    per environment.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dev`、`test`、`uat`、`preprod` 和 `prod` 也应该在我们的标签策略中得到考虑。这为我们提供了良好的视角来验证我们在每个环境中的花费。'
- en: '**Business owner**: This should be the job title or role, not the name of an
    individual. It helps us identify the business owner if we have a showback model
    and need to deliver a cost breakdown. If we have a chargeback model, we know who
    to send the billing information to and provide cost recommendations and forecast
    insights.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务负责人**：这应该是职位名称或角色，而不是个人的名字。它帮助我们识别业务负责人，尤其是在我们采用费用回溯模型并需要提供成本细目时。如果我们使用费用分摊模型，我们就知道该将账单信息发送给谁，并提供成本建议和预测见解。'
- en: '**Technical owner**: This needs to be a job title or owner as well, and the
    information is useful for the same reasons as the business owner. Sometimes this
    could be the same job function across the organization, in which case, we can
    consolidate those two tag values.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术负责人**：这也需要是一个职位名称或负责人，这些信息与业务负责人一样有用。有时这可能是组织内的相同职位职能，在这种情况下，我们可以将这两个标签值合并。'
- en: '**Application and/or service identifier**: This information is useful for linking
    information to our application inventory. In that case, we can answer cost-related
    questions about our application inventory. Adding an application function tag
    is helpful.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序和/或服务标识符**：这些信息对于将数据与我们的应用程序清单关联非常有用。通过这种方式，我们可以回答有关应用程序清单的成本相关问题。添加应用程序功能标签也是有帮助的。'
- en: The term *application function* is sometimes called *application role*, and
    it describes whether a component represents a database, presentation layer, business
    logic, or data tier. It is not necessary for an accurate showback or chargeback
    model, but it gives us good insight into where we spend our money. It will tell
    us whether the CSP cost occurred on the presentation layer, the business logic
    layer, the integration layer, or the data layer. This provides us with additional
    data points when we are considering refactoring our application.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*应用程序功能* 有时也称为 *应用程序角色*，它描述一个组件是否代表数据库、展示层、业务逻辑层或数据层。它对于准确的费用回溯或费用分摊模型并非必需，但它为我们提供了关于花费的良好洞察。它能告诉我们CSP成本是发生在展示层、业务逻辑层、集成层还是数据层。当我们考虑重构应用程序时，这为我们提供了额外的数据点。'
- en: Tag values
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签值
- en: We also need to standardize our tagging values. We must agree on whether we
    want single values or can have lists in the key. The values need to be clearly
    defined. Examples are the correct format for a cost center, which is a combination
    of two digits and four characters, or valid application functions, like `db` for
    the database, `api` for the API layer, `int` for the integration layer, and so
    on. Ideally, those tags are assigned as part of the CI/CD pipeline. In that case,
    we can validate both the key and the value with our policy-as-code framework.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要标准化我们的标签值。我们必须达成一致，决定是使用单一值还是可以在键中使用列表。值需要清晰定义。例如，成本中心的正确格式是由两位数字和四个字符组合而成，或者有效的应用程序功能，如`db`代表数据库，`api`代表API层，`int`代表集成层，等等。理想情况下，这些标签应该作为CI/CD管道的一部分进行分配。在这种情况下，我们可以通过我们的政策即代码框架验证键和值。
- en: Syntax
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: The tagging syntax is also important for keys and values. Syntax examples are
    everything in lowercase (`costcenter`), camel case (`costCenter`), pascal case
    (`CostCenter`), snake case (`cost_center`), and kebab case (`cost-center`). No
    matter what syntax we use, it needs to be consistent, and we need to check that
    the syntax is supported by our CSP. This applies to both the tag key and value.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 标记语法对键和值也很重要。语法示例包括全部小写 (`costcenter`)，驼峰式 (`costCenter`)，帕斯卡式 (`CostCenter`)，蛇形式
    (`cost_center`) 和连字符形式 (`cost-center`)。无论使用哪种语法，它都需要保持一致，并且我们需要检查该语法是否被我们的CSP支持。这适用于标记键和值。
- en: Continuous improvement
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续改进
- en: Once we have established our taxonomy, we need to continue establishing other
    tagging best practices to achieve a good cost-control governance model.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们建立了我们的分类法，我们需要继续建立其他标记最佳实践，以实现良好的成本控制治理模型。
- en: Tagging automation and enforcement
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标记自动化和强制执行
- en: We want to make sure every resource that supports tagging has a valid tag. We
    can use tools such as AWS Tag Policies and AWS Config, Azure Policy, or Google
    Cloud Resource Manager. This will ensure compliance and prevent untagged resources.
    If we have a service catalog, the tags should be a mandatory input parameter.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望确保每个支持标记的资源都有一个有效的标记。我们可以使用工具如AWS标签策略和AWS Config，Azure策略或Google Cloud资源管理器。这将确保合规性并防止未标记的资源。如果我们有服务目录，标记应该是强制的输入参数。
- en: 'For the application function, we can include default tags in the service catalog
    item, for example, the database or API gateway. There are different ways we can
    ensure a good tagging implementation:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于应用功能，我们可以在服务目录项中包含默认标记，例如数据库或API网关。我们有多种方式可以确保良好的标记实施：
- en: We can implement policies with **OPA** or the policy frameworks of our CSP to
    make sure untagged resources can never be deployed except to a sandpit environment.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用**OPA**或我们CSP的策略框架来实施政策，以确保未标记的资源除了沙盒环境外永远不能被部署。
- en: When we use the development frameworks of our CSP, we can also validate tags
    and labels in a similar approach to unit tests. The AWS **cloud development kit**
    (**CDK**) supports assertions, which we can use to validate tags. The **Azure
    Resource Manager** (**ARM**) template test toolkit can be used to validate the
    structure and properties of Bicep or ARM templates. In GCP, we can write unit
    tests with the Google Cloud SDK to validate labels.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们使用CSP的开发框架时，我们也可以通过类似单元测试的方法验证标签和标签。AWS **云开发工具包** (**CDK**) 支持断言，我们可以用它来验证标签。Azure资源管理器
    (**ARM**) 模板测试工具包可以用来验证Bicep或ARM模板的结构和属性。在GCP中，我们可以使用Google Cloud SDK编写单元测试来验证标签。
- en: Some **infrastructure as code** (**IaC**) tools, such as Terraform, support
    tag declaration on a deployment level. This way, we can define common tags like
    *cost center* on a deployment level and only need to define fine-grained tags
    not defined on a deployment or service catalog level.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些**基础设施即代码** (**IaC**) 工具，如Terraform，支持在部署级别上声明标记。这样，我们可以在部署级别上定义通用标记，如*成本中心*，并且只需要定义在部署或服务目录级别未定义的细粒度标记。
- en: If we have a policy-as-code framework, we can enforce tagging and deny the creation
    of untagged or insufficiently tagged cloud resources. That policy could be skipped
    for sandpit environments where we automatically tear down resources regularly.
    If we have a mature DevSecOps culture in place, we want to warrant that tags can
    only be modified by our CI/CD pipelines. In that case, we can use guardrails to
    make sure tags cannot be modified by human access.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们拥有一个政策即代码框架，我们可以强制执行标记，并拒绝创建未标记或标记不足的云资源。这样的政策可能会在我们自动定期清除资源的沙盒环境中跳过。如果我们已经建立了成熟的DevSecOps文化，我们希望只能通过我们的CI/CD管道修改标记。在这种情况下，我们可以使用防护栏来确保标记不能通过人员访问修改。
- en: Regular audits using cloud native tools
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用云原生工具进行定期审计
- en: We should conduct regular audits of tags to ensure they are correctly applied
    and up to date. CSPs offer tools such as AWS Tag Editor, Azure Cost Management,
    and Google Cloud’s Resource Manager. Once we generate compliance reports, we can
    identify missing or incorrect tags and take corrective actions.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应定期审计标记，以确保其正确应用和更新。CSP提供工具，如AWS标签编辑器，Azure成本管理和Google Cloud资源管理器。一旦生成合规性报告，我们可以识别缺失或不正确的标记并采取纠正措施。
- en: Continuous improvement
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 持续改进
- en: Any findings in our tooling or audits need to be addressed to ensure they are
    permanently remediated and do not become a permanent burden. Once we have our
    tagging established, we can get valuable insight. The following Azure diagram
    illustrates how the tag inheritance feature can be used. When enabled, tag inheritance
    applies billing, resource group, and subscription tags to child resource usage
    records. In that case, we do not have to tag every resource. This is a very powerful
    feature.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们工具或审计中的任何发现需要得到解决，确保它们能够永久修复，避免成为长期负担。一旦我们建立了标签系统，就能获得有价值的洞察。以下 Azure 图示说明了如何使用标签继承功能。启用后，标签继承会将计费、资源组和订阅标签应用于子资源使用记录。在这种情况下，我们就不需要为每个资源打标签了。这是一个非常强大的功能。
- en: '![](img/B22364_04_1.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_1.jpg)'
- en: 'Figure 4.1 – Azure example showing tag inheritance (source: [https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/enable-tag-inheritance](https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/enable-tag-inheritance))'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – Azure 示例，展示标签继承（来源：[https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/enable-tag-inheritance](https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/enable-tag-inheritance))
- en: Now, we know how to set our organization up for a solid tagging implementation.
    Once we have established a robust tagging framework and procedure, many other
    FinOps-related services can leverage it and provide good visibility. This includes
    cost anomaly detections, budgets and cost alerts, rightsizing recommendations,
    and planning for a committed spend discount plan.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们知道如何为我们的组织设置一个稳固的标签实施。一旦我们建立了一个完善的标签框架和流程，许多其他与 FinOps 相关的服务都可以利用它，并提供良好的可视化效果。这包括成本异常检测、预算和成本警报、资源优化建议，以及制定承诺支出折扣计划的规划。
- en: We have stepped through tagging anti-patterns and how to remediate them and
    turn them into best practices utilizing cloud native services. We have not discussed
    third-party tools, so we will now explore whether there is a space for them.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了标签反模式以及如何利用云原生服务将其修复并转化为最佳实践。我们尚未讨论第三方工具，现在我们将探讨它们是否有存在的空间。
- en: Not leveraging CSP FinOps services
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未充分利用 CSP FinOps 服务
- en: The major CSPs offer various FinOps services, including cost analysis tools,
    cost reports, budget management, rightsizing recommendations, savings plans, cost
    trend analysis, forecasting, and alerting. The offerings are mature but not always
    used. That is especially the case if cost savings do not become a high priority
    because other challenges like security, resilience, and compliance must be tackled
    first. Before we explore the anti-pattern, we want to make it clear that commercial
    third-party cost management tools can have their place.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的 CSP 提供商提供各种 FinOps 服务，包括成本分析工具、成本报告、预算管理、资源优化建议、节省计划、成本趋势分析、预测和警报。这些服务已经很成熟，但并不总是被使用。如果成本节约没有成为优先事项，尤其是在安全性、韧性和合规性等其他挑战需要优先解决的情况下，这种情况尤其明显。在我们探讨反模式之前，我们要明确一点，商业第三方成本管理工具是有其用武之地的。
- en: Two main drivers can trigger us to consider third-party tools for cost management
    and FinOps practices. The first one is if we have a multi-cloud or poly-cloud
    strategy. In that case, we might want a unified view across multiple clouds. This
    will depend on our operating model. If we are prepared to use different FinOps
    services per cloud (for example, GCP and Azure), then we don’t need to go down
    that track. This will add cost management complexity if a team is using several
    cloud platforms. This could be a centralized cloud platform team that is responsible
    for creating cost dashboards.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个主要驱动因素可能促使我们考虑使用第三方工具进行成本管理和 FinOps 实践。第一个是如果我们有多云或多云策略。在这种情况下，我们可能需要跨多个云平台获得统一的视图。这将取决于我们的操作模型。如果我们准备在每个云平台使用不同的
    FinOps 服务（例如，GCP 和 Azure），那么我们就不需要走这条路。如果团队使用多个云平台，这会增加成本管理的复杂性。也许这是一个集中式的云平台团队，负责创建成本仪表盘。
- en: The second driver is whether we want to include more than our CSP platform in
    our FinOps approach – for example, to include CI/CD tooling or SaaS monitoring
    solutions. In that case, we must define our requirements and assess the benefit
    of third-party tools. Some CI/CD tools have native cost control features, such
    as GitHub with a Plans and Usage feature. If we are OK with looking into several
    dashboards, we probably do not need to invest in another FinOps third-party tool.
    We need to consider the cost trade-off. How much additional time do we spend on
    our processes compared to license fees for a commercial offering? Now, it is time
    to explore how we can find ourselves in the anti-pattern of not leveraging cloud
    native FinOps services.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个驱动因素是我们是否希望在我们的FinOps方法中包含CSP平台以外的内容——例如，包含CI/CD工具或SaaS监控解决方案。在这种情况下，我们必须定义我们的需求并评估第三方工具的好处。一些CI/CD工具具有原生的成本控制功能，比如GitHub的计划和使用功能。如果我们能接受查看多个仪表盘，可能就不需要投资其他的FinOps第三方工具。我们需要考虑成本的权衡。我们在流程上花费的额外时间与商业产品的许可证费用相比是多少？现在，是时候探索我们如何陷入不利用云原生FinOps服务的反模式了。
- en: Common anti-patterns
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见反模式
- en: The power and scope of FinOps services that are provided by our CSP are often
    overlooked, and we will explore two related anti-patterns next.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的云服务提供商（CSP）所提供的FinOps服务的力量和范围常常被忽视，接下来我们将探讨两个相关的反模式。
- en: Billing will sort itself out
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 账单会自行解决
- en: Not using any cost control services is common at the beginning of cloud adoption
    or when an organization tries to grow its cloud presence organically without implementing
    a chargeback model.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在云采用初期或组织试图通过自然增长的方式扩大云端存在而未实施费用分摊模式时，不使用任何成本控制服务是很常见的。
- en: My very first cloud experience on a production scale was at a government organization.
    My manager knew that I had AWS experience. He gave me his credit card so I could
    create an AWS account for a project team. That happened again several times. A
    few months later, in December, we had the end-of-year celebration, which was paid
    for with the same credit card. Consequently, the credit limit was reached and
    the monthly AWS payment bounced in January.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我在生产规模上第一次的云端经验是在一个政府组织。我的经理知道我有AWS经验，他给了我他的信用卡，好让我为一个项目团队创建AWS账户。这种情况后来发生了好几次。几个月后，在十二月，我们举办了年终庆祝活动，费用是通过同一张信用卡支付的。因此，信用卡额度用完了，AWS的月度付款在一月被拒付。
- en: In February, AWS tried to charge for February and January, which resulted in
    another bounced payment, and the same happened in March. By that time, we had
    already received several automated warning emails that AWS accounts would be closed
    if we were not paying.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在二月，AWS试图收取一月和二月的费用，导致了另一笔未付款项的情况，三月也发生了同样的事情。到那时，我们已经收到了几封自动警告邮件，警告如果未付款，AWS账户将被关闭。
- en: If we had given cost management a higher priority, we could have had alerts
    and reacted proactively. Instead, we were reacting to emails we got from AWS and
    involved procurement. They were not prepared to react swiftly since the government
    organization had strict processes in place. Eventually, the payment method was
    moved from credit card payments to an ongoing purchase order. However, cost controls
    were only implemented a year later using the cloud native capabilities.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将成本管理置于更高优先级，我们本可以设置警报并主动反应。相反，我们只能对AWS发来的邮件作出反应，并且涉及了采购部门。由于政府组织有严格的流程，他们未能迅速作出反应。最终，支付方式从信用卡支付转为持续采购订单。然而，成本控制直到一年后才使用云原生功能实现。
- en: 'After a couple of months, a project manager asked me to change the billing
    currency from **US dollars** (**USD**) to Australian dollars, which I did. Unfortunately,
    the procurement department was not prepared to pay the next invoice since the
    currency did not match the currency in the purchase order. This is another hiccup
    we can avoid if we are familiar with our internal cost management practices. Collaboration
    between departments helps to cross those organizational boundaries. An approach
    we have seen working well is having a cross-functional team that has regular cadence
    meetings with extended team delegates. Those delegates include procurement, finance,
    and recruitment. This helps to catch any surprises early and address them swiftly.
    This story should make one thing very clear: *tooling is only a part of a successful
    FinOps adoption*. It is critical to have clear processes and responsibilities
    defined as part of our operating model. Now is the time to investigate another
    variation of this anti-pattern.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月后，一位项目经理要求我将账单货币从**美元**（**USD**）更改为澳大利亚元，我照做了。不幸的是，采购部门未能准备好支付下一张发票，因为货币与采购订单中的货币不匹配。如果我们熟悉内部成本管理流程，这种问题是可以避免的。部门之间的协作有助于跨越这些组织边界。我们看到一个行之有效的方法是组建一个跨职能团队，定期与扩展团队代表召开会议。这些代表包括采购、财务和招聘部门。这样可以帮助我们提前发现任何潜在问题并迅速解决。这个故事应该清楚地表明：*工具只是成功采用FinOps的一部分*。在我们的运营模式中，清晰的流程和责任的定义至关重要。现在是时候研究这个反模式的另一种变体了。
- en: Rushing into a third-party product
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 匆忙使用第三方产品
- en: 'We already explored the reasons why a commercial third-party offering might
    make sense. We will now examine a scenario where one is not required. Both scenarios
    have one thing in common: a low cloud adoption maturity level. In this variation,
    we want to achieve quick wins.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探讨了为什么商业第三方产品可能有意义的原因。现在我们将讨论一个不需要使用第三方产品的场景。这两种情况有一个共同点：低水平的云采用成熟度。在这种变体中，我们希望快速取得成功。
- en: That could be the case because value realization has never become a high priority
    due to other burning issues, like security, compliance, and reliability (especially
    after outages). Another driver could be that we are changing our financial approach
    from a cost center to a profit center approach. Because we need to rush, we are
    not considering the long-term cost impact enough.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 可能的原因是，由于其他紧迫问题，如安全性、合规性和可靠性（特别是在故障后），价值实现从未成为优先事项。另一个原因可能是我们正在将财务策略从成本中心转变为利润中心。因为需要加快进度，我们没有充分考虑长期的成本影响。
- en: In a previous company, I was in a situation where we had already implemented
    the foundational cost management capabilities in a development organization, including
    cost breakdown, forecast, budget alerts, anomaly detection, and committed savings
    plan. Unfortunately, the cloud platform team was totally swamped with helping
    other teams and did not have enough time to fine-tune to rigorously test those
    features to release them into the production organization for all business units.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的公司中，我曾遇到过这样的情况：我们已经在一个开发组织中实施了基础的成本管理能力，包括成本拆分、预测、预算提醒、异常检测和承诺节省计划。不幸的是，云平台团队完全被其他团队的帮助工作压得喘不过气来，没有足够的时间来细化和严格测试这些功能，最终无法将其发布到生产组织供所有业务单元使用。
- en: In the meantime, a new financial year commenced, and the company changed from
    a cost center to a profit center approach. That meant the costs needed to be distributed
    accurately. However, there were gaps in the tagging implementation for legacy
    applications. Therefore, a team manager had to spend more than a day per month
    getting the cloud bill splitting right. The **leadership team** (**LT**) became
    aware of that but they only knew half the story. They underestimated the business
    benefit of the existing cost management service catalog items that were already
    deployed in the production organization.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，新财年开始了，公司也从成本中心转变为利润中心。这意味着成本需要精确分配。然而，遗留应用的标签实施存在缺口。因此，一位团队经理不得不每月花费超过一天的时间来正确分配云账单。**领导团队**（**LT**）注意到了这一点，但他们只了解了一半的情况。他们低估了已经在生产组织中部署的现有成本管理服务目录项目所带来的业务利益。
- en: One of the LT members attended a conference and saw a presentation of a FinOps
    tool with a nice user interface. He was curious and asked some questions after
    the presentation. That was enough for the sales team to flag the company as a
    hot opportunity. The vendor followed up with a lunch invite. Judging by how much
    the product appreciation increased, it must have been a very good lunch. As a
    next step, there was a very strong desire to implement a proof of value. Because
    the company was operating in a very regulated environment, this resulted in a
    comprehensive vendor selection process.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一位 LT 成员参加了一个会议，并看到了一款具有漂亮用户界面的 FinOps 工具的演示。他感到好奇，在演示后提出了一些问题。仅此就足以让销售团队将公司标记为一个重要机会。供应商随后通过午餐邀请进行了跟进。根据产品的好评程度来看，那顿午餐一定非常棒。接下来的步骤是非常强烈地希望实施价值验证。由于公司运营在一个高度监管的环境中，这导致了一个全面的供应商选择过程。
- en: This pattern results in locking ourselves into an ongoing expense. Third-party
    FinOps license fees are typically based on our cloud spending. The higher the
    cloud spending, the more we pay for our commercial tool.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式导致我们将自己锁定在持续的支出中。第三方 FinOps 许可费用通常基于我们的云支出。云支出越高，我们为商业工具支付的费用就越多。
- en: Impacts
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 影响
- en: 'By going through the anti-pattern, we have already seen some of its consequences,
    and we want to briefly summarize them now:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反模式，我们已经看到了它的一些后果，现在我们想简要总结一下：
- en: '**Lack of value optimization**: If we are not using a FinOps tool, we cannot
    optimize the value of our cloud native stack. We will not be able to optimize
    our resources and make the right financial trade-off decisions, for instance,
    about whether to opt for a savings plan.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏价值优化**：如果我们没有使用 FinOps 工具，就无法优化我们的云原生堆栈的价值。我们将无法优化资源并做出正确的财务权衡决策，例如是否选择节省计划。'
- en: '**Lack of cost visibility**: We will not be able to provide an efficient and
    correct charge-back approach. Therefore, we cannot direct ownership toward the
    business stakeholder, which means there is no motivation to optimize the value
    realization.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏成本可见性**：我们将无法提供高效且正确的费用分摊方法。因此，我们无法将责任指向业务利益相关者，这意味着缺乏优化价值实现的动机。'
- en: '**Increased vendor management effort**: If we use a third-party product, we
    will have an additional vendor that needs to be managed. We have talked about
    partnerships before. Is this a strategic partnership?'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增加的供应商管理工作量**：如果我们使用第三方产品，我们将需要管理一个额外的供应商。我们之前讨论过合作伙伴关系。这是一个战略合作伙伴关系吗？'
- en: '**Increased ongoing cost**: If we use third-party tools, we will be charged
    a license fee, which is typically based on our cloud spending. The more we spend,
    the more we pay for the license. The provider has no incentive to reduce our cloud
    costs because that would also reduce their revenue.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增加的持续成本**：如果我们使用第三方工具，我们将支付许可费用，这通常基于我们的云支出。我们花得越多，许可费用就越高。供应商没有激励去减少我们的云成本，因为那样也会减少他们的收入。'
- en: '**Manual overhead and delays in financial reporting**: We will have an increased
    manual effort to manage our financial reporting, which will also take longer.
    Hence, it will be difficult to understand real-time expenses or adjust budgets
    and forecasts accordingly.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动负担和财务报告延迟**：我们将需要更多的人工工作来管理财务报告，这也会延长报告时间。因此，将很难实时了解费用或相应调整预算和预测。'
- en: Even if we have the right tooling in place, we still need to establish mature
    processes and responsibilities that align with our operating model. Otherwise,
    we will not unlock the potential of our tooling. We will explore the process and
    cloud native services next.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们具备了正确的工具，我们仍然需要建立与我们的运营模型对齐的成熟流程和责任。否则，我们将无法发挥工具的潜力。接下来我们将探讨流程和云原生服务。
- en: Cost management seen through the SDLC lens
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 SDLC 视角看成本管理
- en: We are now stepping through FinOps capabilities, and we will align them with
    a simplified overview of a **software development life cycle** (**SDLC**). The
    following table provides an overview of the SDLC phases and a logical name of
    the FinOps service for this phase. We will go through each of the phases and discuss
    what we need to consider for establishing a good business value for our application
    stack.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在正在逐步了解 FinOps 的能力，并将其与 **软件开发生命周期**（**SDLC**）的简化概述对齐。下表提供了 SDLC 阶段的概览以及该阶段的
    FinOps 服务的逻辑名称。我们将逐一讨论每个阶段，并探讨在为我们的应用堆栈建立良好的商业价值时需要考虑的事项。
- en: We have already looked into tagging, which needs to be established during the
    *implement and test* phase, which makes up the majority of this phase. Therefore,
    we will merge this phase with the *deploy* phase when we go through the SDLC.
    We can see that the *maintain and improve* phase has the longest list of considerations.
    We need to take those insights on board to plan and design for improvements in
    our iterative delivery.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了标签管理，它需要在*实施与测试*阶段建立，这一阶段是该阶段的主要内容。因此，在 SDLC 流程中，我们将在讨论时将这一阶段与*部署*阶段合并。我们可以看到，*维护与改进*阶段需要考虑的事项最多。我们需要吸收这些洞察，以便在我们的迭代交付中规划和设计改进。
- en: '| **Plan &** **design** | **Implement &** **test** | **Deploy** | **Maintain
    &** **improve** |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| **计划与设计** | **实施与测试** | **部署** | **维护与改进** |'
- en: '| Design principles | Tag policies | Preventive guardrails | Detective guardrails
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 设计原则 | 标签策略 | 预防性警戒 | 侦测性警戒 |'
- en: '| Cost calculator | Tagging | Organization setup | Cost explorer |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 成本计算器 | 标签管理 | 组织设置 | 成本探索器 |'
- en: '| Budget and alerts | Tagging enforcement | Automated cost estimate | Advisory
    tools |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 预算和警报 | 标签执行 | 自动化成本估算 | 顾问工具 |'
- en: '| Architecting for cost efficiencies | Data life cycles |  | Cost anomaly detection
    |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 成本效率架构设计 | 数据生命周期 |  | 成本异常检测 |'
- en: '|  |  |  | Rightsizing recommendations |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  | 资源优化建议 |'
- en: '|  |  |  | Committed spend |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  | 承诺支出 |'
- en: Table 4.1 – SDLC phases and supporting FinOps services
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.1 – SDLC 阶段及支持的 FinOps 服务
- en: 'We will now look into FinOps services that support the first phase: *plan*
    *and design*.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看支持第一阶段的 FinOps 服务：*计划和设计*。
- en: Plan and design
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计划与设计
- en: 'FinOps considerations and tooling for the *plan and design* phase are as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps 在*计划和设计*阶段的考虑事项和工具如下：
- en: '**Design principles**: Internal guiding principles and SLAs, such as RTO and
    RPO, will drive our cost model. The individual Well-Architected Frameworks from
    the CSPs will also provide guidance. If a solution needs to be resilient, it will
    have a fail-over database, which adds to the cost. Once familiar with our requirements,
    we can start designing a solution with a drawing tool. There are many options
    available. Diagrams.net is a free drawing solution, and Lucid Chart is a popular
    commercial offering with enterprise collaboration features. The diagram will help
    us fully visualize the services we want to use.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设计原则**：内部的指导原则和 SLA（如 RTO 和 RPO）将推动我们的成本模型。各个 CSP 提供的 Well-Architected 框架也将提供指导。如果一个解决方案需要具备弹性，它将有一个故障转移数据库，这会增加成本。熟悉我们的需求后，我们可以开始使用绘图工具设计解决方案。现有很多可供选择的工具，Diagrams.net
    是一个免费的绘图工具，而 Lucid Chart 是一个流行的商业化产品，具备企业级协作功能。该图表将帮助我们全面可视化我们希望使用的服务。'
- en: '**Cost calculator**: We can then use our CSP’s pricing calculator. AWS Pricing
    Calculator, Azure Pricing Calculator, and Google Cloud Pricing Calculator provide
    a user-friendly user interface and support most of their cloud services. They
    all support committed spending savings plans, provide a shareable URL for the
    calculation, and reports can be exported. With all cost calculators, we need to
    be careful to select the correct region, since prices differ. We will also need
    volume estimates. For API services, we typically need to estimate how many API
    calls we have; for data services, we need to know the data volume and growth and
    whether we need a fail-over database or an additional read-only database. For
    any egress data, for example, from one cloud to another, we also need to know
    the volume numbers. If we implement a new solution, then some of these numbers
    will be covered in the business case and design. For other metrics, we do have
    to make rough estimates, and we can fine-tune them either during the *design*
    phase or build feedback loops once the solution is deployed and used.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本计算器**：我们可以使用 CSP（云服务提供商）的定价计算器。AWS 定价计算器、Azure 定价计算器和 Google Cloud 定价计算器都提供了用户友好的界面，并支持大部分云服务。它们都支持承诺支出节省计划，提供可共享的计算
    URL，并支持报告导出。使用所有成本计算器时，我们需要特别注意选择正确的区域，因为价格会有所不同。我们还需要估算使用量。对于 API 服务，我们通常需要估算
    API 调用次数；对于数据服务，我们需要知道数据量、增长情况以及是否需要故障转移数据库或额外的只读数据库。对于任何出站数据，例如从一个云平台到另一个云平台，我们还需要知道数据量。如果我们实现了一个新解决方案，这些数据中的一部分将包含在业务案例和设计中。对于其他指标，我们需要做粗略估算，并可以在*设计*阶段进行调整，或者在解决方案部署并投入使用后建立反馈循环。'
- en: '**Budgets and alerts**: All major CSPs have budget and alert services. There
    are different ways in which budgets can be defined – either in a static manner,
    where we define a monthly budget, or a monthly percentage increase. There are
    also ways to create dynamic budgets. The ML-empowered service can learn from previous
    spending and estimate cost trends for the next months. This is a good method to
    reduce human effort and still be in a position to leverage cost guardrails. The
    following AWS screenshot shows a budget definition for 12 months. The **Auto-fill
    budget amounts** feature prepopulates the last 11 months based on the initial
    budget figure and the monthly percentage increase.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预算和警报**：所有主要的云服务提供商（CSP）都提供预算和警报服务。预算可以通过不同方式定义——可以是静态方式，即定义一个月度预算或月度百分比增长，也可以创建动态预算。通过机器学习（ML）增强的服务可以从之前的开支中学习，并预测未来几个月的成本趋势。这是一种减少人工操作的方法，同时仍能利用成本防护措施。以下
    AWS 截图显示了一个为期 12 个月的预算定义。**自动填充预算金额**功能会基于初始预算数额和月度百分比增长预填充过去 11 个月的数据。'
- en: '![](img/B22364_04_2.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_2.jpg)'
- en: 'Figure 4.2 – AWS example – budget definition (source: AWS console)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – AWS 示例 – 预算定义（来源：AWS 控制台）
- en: The budget can then be used to configure triggered alerts if we are either hitting
    a certain threshold or if the trend indicates that we will be above the expected
    amount at the end of a defined period. These alerts help uncover unexpected costs
    before we receive the next bill.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，预算可以用于配置触发警报，如果我们达到某个阈值，或趋势表明我们将在定义的周期结束时超出预期金额。这些警报有助于在我们收到下一个账单之前发现意外成本。
- en: '**Architecting for cost efficiency**: When we use cost management and forecast
    tools, we can establish cost transparency. This enables us to include financial
    aspects in our architecture decisions. For example, we might shift toward a serverless
    architecture and move to smaller instances for our containers because horizontal
    scaling has more cost savings potential. Being able to make informed decisions
    will also help us plan for the right guardrails that we can utilize during later
    stages in the SDLC.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向成本效益的架构设计**：当我们使用成本管理和预测工具时，可以实现成本透明度。这使得我们能够将财务因素纳入架构决策中。例如，我们可能会转向无服务器架构，并为容器选择更小的实例，因为水平扩展具有更高的成本节省潜力。能够做出明智的决策，也有助于我们规划在软件开发生命周期（SDLC）后期可以使用的适当防护措施。'
- en: Implement, test, and deploy
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施、测试和部署
- en: 'These are measurements we can take that help us during the *deploy* phase.
    The first one is part of the *implement and test* phase, and the others are part
    of the deployment:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们在*部署*阶段可以采取的措施。第一个是*实施和测试*阶段的一部分，其他则属于部署阶段：
- en: '**Data life cycles**: We can establish data life cycles in our application
    code. Examples are different storage tiers that the data will reside in during
    its lifetime. For operational data, we can define that the data needs to be in
    the hot storage tier for 3 months, then it gets moved to an infrequent access
    tier, and then it goes to an archive for another 6 months. For regulated workloads,
    such as PCI-relevant applications, we can make sure that the data is only deleted
    after 7 months. By establishing predefined life cycles, we can reduce the cost
    and also establish standardization across the organization.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据生命周期**：我们可以在应用代码中建立数据生命周期。例如，不同的存储层次将是数据在其生命周期中的存储位置。对于操作数据，我们可以定义数据在热存储层保存
    3 个月，然后转移到低频访问存储层，再保存 6 个月后转移到归档存储层。对于受监管的工作负载，如与 PCI 相关的应用程序，我们可以确保数据仅在 7 个月后删除。通过建立预定义的生命周期，我们可以降低成本并在组织中建立标准化。'
- en: '**Preventive guardrails**: The first deployment-related measurement in this
    group is preventive or proactive guardrails. We can limit the size of instances
    we allow in development environments. Guardrails will ensure that instances above
    a certain size cannot be deployed. It is important to communicate those restrictions
    so that they are understood and do not cause frustrations amongst the development
    teams.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预防性防护措施**：此组中的第一个与部署相关的度量标准是预防性或主动防护措施。我们可以限制在开发环境中允许的实例大小。防护措施将确保超过某一大小的实例无法部署。重要的是要传达这些限制，使其被理解并且不会在开发团队中引发挫败感。'
- en: Another use case for cost-related deployment guardrails is denying the creation
    of high-cost services in workload accounts because they are already established
    in shared accounts and can be consumed from there. Preventive guardrails can be
    established via AWS Service Control Policies, Azure Policy, GCP Organization Policy
    Service, or **Open Policy Agent** (**OPA**) policies. We also need to review access
    controls to ensure that only authorized individuals are able to deploy to production.
    This will help accidental or unauthorized spending. We also looked into the benefits
    of guardrails and non-cost-related guardrails in [*Chapter 3*](B22364_03.xhtml#_idTextAnchor085).
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个与成本相关的部署控制措施是拒绝在工作负载账户中创建高成本服务，因为这些服务已经在共享账户中建立，并且可以从那里消费。可以通过 AWS 服务控制策略、Azure
    策略、GCP 组织策略服务或 **Open Policy Agent**（**OPA**）策略建立预防性控制措施。我们还需要审查访问控制，以确保只有授权人员能够部署到生产环境中。这有助于防止意外或未经授权的支出。我们还在
    [*第3章*](B22364_03.xhtml#_idTextAnchor085) 中探讨了控制措施和非成本相关控制措施的好处。
- en: '**Organization setup**: Setting up an organizational structure for your cloud
    environments can also help with cost control and breakdown. This feature is offered
    in different ways depending on the CSP. In AWS, it is called AWS Organizations,
    Microsoft calls it Azure Management Groups, and within GCP, it is called Google
    Cloud Resource Manager.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织设置**：为你的云环境设置一个组织结构也有助于成本控制和拆分。不同的 CSP 提供此功能的方式不同。在 AWS 中，这被称为 AWS Organizations，微软称其为
    Azure Management Groups，而在 GCP 中，它被称为 Google Cloud Resource Manager。'
- en: We can apply preventive guardrails at an **organizational unit** (**OU**) level.
    In that case, none of the accounts under our “development” OU can deploy super
    large instances. We can also use the OU structure for a cost breakdown, for instance,
    if we have all shared services, such as application logging or a data lake, under
    a shared services OU.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以在 **组织单元**（**OU**）级别应用预防性控制措施。在这种情况下，我们“开发”组织单元下的任何账户都无法部署超大实例。我们还可以使用组织单元结构进行成本拆分，例如，如果我们将所有共享服务（如应用日志或数据湖）放在一个共享服务的
    OU 下。
- en: '**Automated cost estimate**: Some deployment tools provide cost estimates for
    the stack that will be deployed. HCP Terraform provides this feature, and there
    are also some open source tools that we can embed in our CI/CD pipelines. The
    developer can review the estimated cost before proceeding with the deployment.
    This helps to catch little errors such as picking the wrong instance type, but
    those errors can have a big cost impact.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化成本估算**：一些部署工具提供即将部署的栈的成本估算。HCP Terraform 提供了这一功能，此外，还有一些开源工具可以嵌入到我们的 CI/CD
    管道中。开发者可以在继续部署之前查看估算的成本。这有助于发现一些小错误，比如选择了错误的实例类型，而这些错误可能会带来巨大的成本影响。'
- en: Maintain and improve
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 维护和改进
- en: 'We will now explore the measures we need to take during the *maintain and improve*
    phase. Most importantly, we need to establish the right processes, ownership,
    and accountability to utilize the tooling. There is no point in having nice dashboards
    and automated recommendations if no one is looking at them, or not taking any
    action. With the insights and learnings we gain during this phase, we can establish
    a feedback loop that will help us improve our FinOps practices going forward:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将探讨在 *维护和改进* 阶段需要采取的措施。最重要的是，我们需要建立正确的流程、责任归属和问责机制，以便有效利用这些工具。如果没有人查看仪表板或没有采取任何行动，那么即便有很好的仪表板和自动化推荐也毫无意义。通过这一阶段获得的见解和经验，我们可以建立一个反馈循环，帮助我们未来改进
    FinOps 实践：
- en: '**Detective guardrails**: Detective guardrails allow the deployment, but a
    non-compliant rule will be flagged on a dashboard and can trigger a notification.
    We could do this for very large instances in our development OU. That way, we
    are not blocking the team from deployment but can still provide visibility of
    this finding. It is also a common practice to test guardrails first in detective
    mode before turning them into preventive guardrails.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**侦测性控制**：侦测性控制允许部署，但不符合规定的规则会在仪表板上标记出来，并触发通知。我们可以在我们的开发 OU 中对超大实例应用此策略。这样，我们就不会阻止团队的部署，但仍然可以提供对这一问题的可视化。通常的做法是先在侦测模式下测试控制措施，然后再将其转化为预防性控制。'
- en: '**Cost explorer and usage reports**: AWS Cost Explorer, Azure Cost Management,
    and GCP Cost Management have many features in common that will help us gain cost
    insight. All three offerings provide a cost breakdown by service, cloud resource,
    project, account, or resource group. Customizable cost reports and dashboards
    help visualize spending patterns and identify cost drivers. The following screenshot
    from the AWS console shows a cost and usage report. We can see a breakdown based
    on services, and we can modify the timeframe granularity.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本探查器和使用报告**：AWS成本探查器、Azure成本管理和GCP成本管理有许多相似的功能，帮助我们获得成本见解。这三种服务都提供按服务、云资源、项目、账户或资源组的成本细分。可定制的成本报告和仪表盘有助于可视化支出模式并识别成本驱动因素。以下来自AWS控制台的屏幕截图展示了成本和使用报告。我们可以看到按服务细分的成本，并可以修改时间范围的粒度。'
- en: '![](img/B22364_04_3.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_3.jpg)'
- en: 'Figure 4.3 – AWS example – cost and usage report (source: AWS console)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – AWS 示例 – 成本和使用报告（来源：AWS 控制台）
- en: '**Advisory tools**: These tools provide insight into where we can reduce our
    spending. AWS Trusted Advisor gives insights into various improvement areas, for
    example, underutilized instances. Azure Advisor takes a similar approach and also
    provides cost recommendations, for instance, purchasing Azure Reservations. GCP
    has a similar offering with the Google Cloud Recommender, and cost-related recommendations
    include deleting unused disks. Those insights will help to get an initial overview
    of where we have areas for improvement.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建议工具**：这些工具提供了减少支出的见解。AWS可信顾问提供关于各个改进领域的见解，例如，未充分利用的实例。Azure顾问采取类似的方法，并提供成本建议，例如购买Azure预留实例。GCP也有类似的服务——Google
    Cloud推荐器，其中包括删除未使用的磁盘等成本相关建议。这些见解有助于我们初步了解哪些地方可以改进。'
- en: '**Rightsizing recommendations**: Rightsizing recommendations help us to adjust
    the sizing of our workloads. This will help to reduce the costs and use the funds
    gained otherwise. AWS has rightsizing recommendations and the Compute Optimizer
    service to help with that. This feature is partly included in GCP Cloud Recommender
    and Azure Advisor, which we already discussed. GCP and Azure also have Rightsizing
    Recommendations as part of the Azure Cost Management and Billing Services and
    Google Cloud Active Assist. It is critical to test the rightsizing first in the
    lower environments before rushing into a production change to avoid sizing issues.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源调整建议**：资源调整建议帮助我们调整工作负载的大小。这有助于降低成本，并将节省下来的资金用于其他地方。AWS提供资源调整建议和计算优化器服务来协助此项工作。此功能部分包含在GCP云推荐器和Azure顾问中，正如我们之前讨论的那样。GCP和Azure还将资源调整建议作为Azure成本管理与计费服务和Google
    Cloud Active Assist的一部分。重要的是要先在低环境中测试资源调整，避免直接进入生产环境以防止出现大小问题。'
- en: '**Cost anomaly detection**: These services help us identify unusual traffic
    spikes and unusual spending patterns. We can trigger alerts to get notified immediately
    and investigate. The reason for an unusual pattern could be an error in a deployment.
    The AWS offering is called AWS Cost Anomaly Detection, Azure and GCP have this
    feature as part of the Azure Cost Management and Billing and Google Cloud Cost
    Management service, respectively.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本异常检测**：这些服务帮助我们识别异常的流量激增和异常的支出模式。我们可以触发警报，立即接收通知并进行调查。异常模式的原因可能是部署中的错误。AWS的服务叫做AWS成本异常检测，Azure和GCP也在各自的Azure成本管理与计费服务和Google
    Cloud成本管理服务中提供此功能。'
- en: '**Committed spend**: Committed spending plans are another way to reduce our
    cloud bill. Committed spending can be applied to various resource types, such
    as instances (virtual machines), containers, or FaaS. Plans can have a one-, two-,
    or three-year time span. It is recommended to go with a one-year plan since computing
    technology always evolves. In a year, we can then get a plan for a newer instance
    generation that is more powerful and can handle more load. There are several strategies
    we might want to apply to our savings plan:'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**承诺支出**：承诺支出计划是减少我们云账单的另一种方式。承诺支出可以应用于各种资源类型，如实例（虚拟机）、容器或FaaS。计划可以有一年、两年或三年的时长。推荐选择一年期计划，因为计算技术总是在发展。一年后，我们可以选择更新的、更强大的实例代际计划，以应对更高的负载。我们可能想要应用于节省计划的几种策略：'
- en: First of all, if we have a decentralized governance model, then the business
    units or product portfolios will be responsible for setting up their plans. They
    are the ones who know their applications the best, but also the business target
    and expected growth.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，如果我们有一个去中心化的治理模型，那么各业务单元或产品组合将负责制定他们的计划。他们最了解自己的应用程序，同时也清楚业务目标和预期增长。
- en: The second strategic aspect is that we might want to have more than one savings
    plan. That way, we can stagger them and adjust them more frequently. One savings
    plan could start in January and the other one in July. This gives us the flexibility
    to update twice every year.
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个战略方面是，我们可能想要有多个储蓄计划。这样，我们可以错开它们并更频繁地调整。一个储蓄计划可以从1月开始，另一个从7月开始。这给了我们每年更新两次的灵活性。
- en: The following GCP screenshot shows the **committed use discounts** (**CUDs**).
    It shows us the potential cost savings when we opt for a general-purpose memory
    instance and a Cloud SQL Database VM.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下GCP截图显示了**承诺使用折扣**（**CUDs**）。它向我们展示了当我们选择通用内存实例和Cloud SQL数据库虚拟机时，潜在的成本节省。
- en: '![](img/B22364_04_4.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_4.jpg)'
- en: 'Figure 4.4 – GCP example – Committed use discounts (source: https://cloud.google.com/static/billing/docs/images/cud-dashboard.png?dcb_=0.5258774275081315)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4 – GCP示例 – 承诺使用折扣（来源：[https://cloud.google.com/static/billing/docs/images/cud-dashboard.png?dcb_=0.5258774275081315](https://cloud.google.com/static/billing/docs/images/cud-dashboard.png?dcb_=0.5258774275081315)）
- en: 'As we can see, there is a lot to digest if we want to leverage all the tooling
    our CSPs give us. Before moving on to the next section, we want to reiterate a
    couple of callouts:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，如果我们想要充分利用CSP提供的所有工具，就有很多内容需要消化。在进入下一部分之前，我们想要再次强调几点：
- en: We always test sizing-related changes in lower environments before a production
    change
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们总是在低环境中测试与大小相关的更改，然后才进行生产环境的更改。
- en: Tools are great, but we need ownership and accountability to ensure actions
    are being taken
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具很棒，但我们需要责任感和可追溯性，以确保行动得到执行。
- en: We need to understand what our applications are doing to make informed trade-off
    decisions.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要了解我们的应用程序在做什么，以便做出明智的权衡决策。
- en: Now, we move on to cloud cost, which is not obvious and might be overlooked
    when we define our cloud strategy or design.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们进入云成本部分，这部分并不直观，可能在定义我们的云策略或设计时被忽视。
- en: Ignoring non-obvious CSP cost
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 忽略不明显的CSP成本
- en: “*The real cost of a four-dollar-a-day coffee habit over 20 years is $51,833.79\.
    That’s the power of the Compound Effect*,” says Darren Hardy, author of *The*
    *Compound Effect*.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: “*每天四美元的咖啡习惯，20年后的实际成本是51,833.79美元。那就是复利效应的力量*，”《复利效应》一书的作者达伦·哈迪（Darren Hardy）说道。
- en: Those four dollars might not include a service tax and then the compound effect
    is even higher. Where are we going with this? Cost models in the cloud are far
    more complex than a cup of coffee. There is a fair chance that we have had coffee
    cost surprises in the past, but there is a nearly 100% chance that we have had
    some sort of cost eye-openers in the cloud, either because we left an instance
    running after a demo or because there were some cost aspects we didn’t consider.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 那四美元可能不包括服务税，那么复合效应就更大了。我们到底想表达什么呢？云中的成本模型比一杯咖啡要复杂得多。我们过去可能遇到过咖啡费用的惊讶，但几乎可以肯定，我们在云中遇到过某些成本上的“惊醒”，要么是因为在演示后留下了一个实例，要么是因为我们没有考虑到某些成本方面。
- en: Different abstraction levels, such as IaaS, PaaS, or fully managed services,
    have different price components. So do database and storage solutions, API offerings,
    or logging and monitoring solutions. The more cloud resource types we use, the
    more complex the cost landscape becomes. That is even more so the case when we
    have a hybrid cloud landscape, especially if we use several CSPs for a poly-cloud
    or multi-cloud strategy. These complex scenarios increase the likeliness of unexpected
    costs, especially if we do not create cost estimates during the design and do
    not validate the real cost against the planned cost. The problem is that the longer
    we wait to uncover unexpected costs, the more we will evolve our architecture,
    but potentially toward a direction we might regret when we see the cost impacts.
    The longer we wait, the harder it will be to remediate. Therefore, we want to
    uncover some common mistakes that lead to this anti-pattern. Let’s start with
    the first one.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的抽象层级，如IaaS、PaaS或完全托管服务，具有不同的价格组件。数据库和存储解决方案、API服务、日志记录和监控解决方案也是如此。我们使用的云资源类型越多，成本的复杂性就越大。尤其是在我们拥有混合云架构时，这种复杂性更加突出，特别是当我们使用多个CSP时，这就形成了多云或混合云策略。这些复杂的场景增加了意外费用的可能性，尤其是在设计时没有创建成本估算，且没有将实际费用与计划费用进行对比验证时。问题在于，我们越是推迟发现意外费用，我们的架构就越会演变，但可能朝着我们看到成本影响时会后悔的方向发展。等待的时间越长，修复问题就越困难。因此，我们希望揭示一些常见的错误，这些错误会导致这种反模式。我们从第一个开始。
- en: Common anti-patterns
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见的反模式
- en: Some of the ongoing CSP costs are not obvious and so can unnecessarily increase
    our bill if we do not address that in our architecture. We will talk about two
    common anti-patterns next.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 一些持续的CSP费用并不显而易见，如果我们在架构中没有解决这些问题，可能会不必要地增加我们的账单。接下来我们将讨论两种常见的反模式。
- en: Ignoring data transfer cost
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 忽视数据传输费用
- en: 'Ingesting data into our cloud typically does not result in data transfer fees
    because CSPs want to attract customers to bring more applications into their cloud.
    However, this is different for other transfer cost types, and some have the potential
    to be underestimated or even overlooked. We will go through common categories
    that can cause surprises. The prices themselves keep changing, so we will look
    into areas that need to be considered rather than particular prices:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据导入我们的云平台通常不会产生数据传输费用，因为CSP希望吸引客户将更多应用程序带入其云平台。然而，其他类型的传输费用则不同，其中一些费用有可能被低估，甚至被忽视。我们将讲解一些常见类别，它们可能导致意外费用。由于价格本身不断变化，我们将关注需要考虑的领域，而非具体价格：
- en: '**Egress transfer fees**: These are fees that occur when we export data from
    our CSP to either the internet, another cloud platform, or our data center. In
    a previous engagement, a cloud consultancy was helping with a large-scale data
    lake solution. The solution required ongoing data exports to a data analytics
    platform that had not been migrated to the cloud yet and was still running on-premises.
    The consultancy provided a cost forecast. The CSP called out that they could not
    see the egress data transfer cost in the cost estimate. Somehow, that fact got
    missed. Design decisions were based on the fact that egress data fees were not
    factored into the ongoing cost. It turned out that the egress fees would have
    been several hundred thousand USD per year. This resulted in a big dispute. The
    consultancy had to rectify things at their own expense and risk, and they had
    to compensate parts of the already occurred egress data fees.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**出口传输费用**：当我们将数据从CSP导出到互联网、另一个云平台或我们的数据中心时，会产生这些费用。在之前的一次项目中，一家云咨询公司帮助搭建一个大规模数据湖解决方案。该方案需要将数据持续导出到一个尚未迁移到云端的、仍在本地运行的数据分析平台。该咨询公司提供了一个成本预测。CSP指出，他们在成本估算中没有看到出口数据传输费用。这个事实不知为何被忽视了。设计决策是基于出口数据费用没有被计入持续成本的假设。结果发现，出口费用每年可能会达到数十万美元。这导致了严重争议。咨询公司不得不自掏腰包解决问题，并且需要赔偿部分已经发生的出口数据费用。'
- en: This scenario also highlights that a multi-cloud DR (disaster recovery) strategy
    is a very expensive exercise. When we want to recover in a different cloud platform,
    we need to make sure that the data is continuously replicated. This gets often
    forgotten when risk and business continuity teams want to minimize the risk of
    a CSP going into receivership. A possible outcome is a multi-cloud cost disaster,
    which is hard to recover from. It is also worthwhile noting that different regions
    have different prices. For example, exporting data from the US region to the public
    internet might be cheaper compared to exporting data from an Asian or South American
    region to the internet.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个场景还突显出，采用多云灾难恢复（DR）策略是一项非常昂贵的操作。当我们希望在不同的云平台中恢复时，需要确保数据被持续复制。风险和业务连续性团队在想要最小化CSP破产风险时，往往会忽视这一点。一个可能的结果是出现多云成本灾难，且很难恢复过来。还值得注意的是，不同地区的价格不同。例如，将数据从美国地区导出到公共互联网，可能比将数据从亚洲或南美地区导出到互联网更便宜。
- en: '**Transfer fees between regions and cross-region architecture impacts**: Data
    transfer between regions involves transfer fees. Similar to the preceding example,
    the price depends on the origin and destination regions. Cross-region replications
    are common when we have ambitious DR goals. A complete region outage can happen,
    but it is very unlikely. A cross-region DR strategy can protect us from that risk.
    Data transfer fees within the same continent are usually lower compared to cross-continent
    data replications.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区域之间的转移费用和跨区域架构影响**：区域之间的数据传输涉及转移费用。与前面的例子类似，价格取决于源区域和目标区域。跨区域复制在我们有雄心勃勃的灾难恢复（DR）目标时很常见。虽然完全的区域故障是可能发生的，但它的可能性非常小。跨区域的DR策略可以帮助我们防范这种风险。相比跨洲数据复制，同一洲内的数据传输费用通常较低。'
- en: '**Data transfer fees within the same region (across AZs)**: Several cloud native
    services also charge data transfer fees within a region. These fees are lower
    compared to cross-region and egress transfer fees. AWS charges an intra-region
    data transfer fee if several EC2 instances (virtual machines) are deployed across
    several AZs and need to transfer data between each other. This was at least the
    case when this book was written, and it could change at any time. Azure has dropped
    the intra-region transfer fee for virtual machines and GCP does generally not
    charge this fee. We have already pointed out that these things can change quickly.
    Therefore, it is important to use our CSP’s cost calculator and try several combinations
    of data transfer volumes.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**同一区域内的数据传输费用（跨可用区）**：一些云原生服务也会收取同一区域内的数据传输费用。与跨区域和外部传输费用相比，这些费用较低。如果多个EC2实例（虚拟机）部署在多个可用区（AZ）之间，并且需要相互传输数据，AWS会收取区域内的数据传输费用。至少在本书写作时是这样的，随时可能会发生变化。Azure已取消了虚拟机的区域内传输费用，而GCP通常不收取此费用。我们已经指出，这些变化可能会很快发生。因此，使用我们的云服务提供商（CSP）的成本计算器并尝试不同的数据传输量组合是很重要的。'
- en: Not considering long-term storage costs
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有考虑长期存储费用
- en: 'When we rush deadlines or do not have predefined service catalog items we can
    use, it is just too easy to forget about the cost aspects of a solution. We focus
    on technical details to solve the immediate problem that is required for a launch
    or a proof of value outcome. We will now look into common pitfalls that will drive
    up the CSP bill:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们赶时间或没有预定义的服务目录项时，很容易忽视解决方案的成本方面。我们通常专注于技术细节，以解决启动或验证价值结果所需的迫切问题。接下来，我们将探讨一些常见的陷阱，这些陷阱会增加CSP账单的费用：
- en: '**Data life cycle**: A common error is forgetting to configure a data life
    cycle for blob storage or shared drives. In that scenario, the accumulated data
    increases continuously. Because blob storage is fairly cheap, it can take a while
    until we realize the continuously increasing cost. The price for data hosted in
    databases, fully managed logging services, or disk volumes is higher, and the
    bill shock might be more obvious. The following diagram illustrates the possible
    transitions for AWS S3, which is a blob storage service. We can see how the *Standard*
    tier can transition into cheaper tiers. The cheapest one is called *S3 Glacier
    Deep Archive* and requires data retrieval time.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据生命周期**：一个常见的错误是忘记为 Blob 存储或共享驱动器配置数据生命周期。在这种情况下，累积的数据会不断增加。由于 Blob 存储相对便宜，因此可能需要一段时间才能意识到成本的持续增加。存储在数据库、完全托管的日志服务或磁盘卷中的数据价格较高，账单的冲击可能更为明显。下图展示了
    AWS S3 可能的数据生命周期转换过程，AWS S3 是一种 Blob 存储服务。我们可以看到，*标准*存储层可以转换为更便宜的存储层。最便宜的存储层称为
    *S3 Glacier Deep Archive*，需要一定的数据检索时间。'
- en: '![](img/B22364_04_5.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_5.jpg)'
- en: 'Figure 4.5 – AWS example – data life cycle transitions for blob storage (source:
    [https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html))'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – AWS 示例 – Blob 存储的数据生命周期转换（来源：[https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html)）
- en: '**Disk back-ups and unattached volumes**: During a previous project, we were
    tasked with establishing a self-healing mechanism for a **data warehouse** (**DWH**)
    solution. Parts of the DWH landscape were hosted on virtual instances.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘备份和未附加卷**：在一个以前的项目中，我们的任务是为**数据仓库**（**DWH**）解决方案建立一个自愈机制。数据仓库的一部分部署在虚拟实例上。'
- en: That itself is already an anti-pattern, but it was an old third-party product
    that had never been architected for the cloud by the vendor. We were addressing
    the self-healing scenario of addressing instance failures and also disk volume
    failures. For that purpose, we automated a combination of hourly snapshots (i.e.,
    incremental backups) and full backups for all three volumes for an instance in
    a test environment. All of a sudden, priorities changed, and we had to help out
    for a couple of days in a different problem space. Because we were trying to achieve
    quick DR results, we did not implement a backup data life cycle during our testing.
    By the time we got back to focus on the auto-healing solution, there were already
    hundreds of backups that had been taken.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这本身就是一种反模式，但它是一个老旧的第三方产品，供应商从未为云环境架构过该产品。我们当时正在处理一个自愈场景，旨在解决实例故障和磁盘卷故障的问题。为此，我们自动化了一个组合方案，包括每小时的快照（即增量备份）和测试环境中所有三个卷的全量备份。突然间，优先级发生了变化，我们不得不在不同的问题空间中帮助解决问题。由于我们希望实现快速的灾难恢复结果，因此在测试过程中没有实现备份数据生命周期。在我们重新专注于自愈解决方案时，已经有数百个备份文件被创建。
- en: The next CSP bill was significantly higher. The first reaction of the product
    owner was that virtual high-volume disks were much too expensive. They are pricier
    than slower ones. But the real problem was that there was no data life cycle in
    place. This gap can bite very quickly, and in that case, it did.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下一张 CSP 账单显著增加。产品经理的第一反应是虚拟高容量磁盘太贵了，它们比较慢的磁盘更贵。但真正的问题在于没有配置数据生命周期。这个缺口很快就会影响到业务，而在那种情况下，确实发生了。
- en: '**Standby databases or read replica databases**: These are two different use
    cases. Standby **databases** (**DBs**), also called secondary DBs, help improve
    availability. If the primary database fails, the standby DB can take over the
    data load after an automated DNS fail-over from the primary DB to the secondary
    DB. If the data volume of the primary database increases, the secondary or read
    replica database size will increase, too. This means we pay more for storage for
    several databases, which we need to factor into our costs.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**待机数据库或只读副本数据库**：这两种是不同的使用案例。待机**数据库**（**DBs**），也叫做次级数据库，帮助提高可用性。如果主数据库发生故障，待机数据库可以在主数据库自动切换到次级数据库后接管数据负载。如果主数据库的数据量增加，次级数据库或只读副本数据库的大小也会增加。这意味着我们为多个数据库支付更多的存储费用，这一点需要纳入成本考虑。'
- en: '**Logging**: It is rare to see a clear logging strategy that has been rigorously
    implemented. Sometimes, we see production environments that even log the “info”
    log level. This produces a lot of log volume, and we need to pay the price for
    it. If this anti-pattern is paired with a missing data life cycle, then it becomes
    even worse. We need to have a clear understanding of what needs to be logged,
    where the log files need to be shipped to, and how long we need the log files
    in hot versus infrequent or cold storage.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志记录**：很少能看到一个清晰的日志记录策略被严格实施。有时我们会看到生产环境甚至记录“信息”日志级别。这会产生大量日志，并且我们需要为此付出代价。如果这个反模式与缺失的数据生命周期结合在一起，那么情况会更糟。我们需要清楚了解需要记录什么，日志文件需要发送到哪里，以及我们需要将日志文件存储在热存储与不常访问的冷存储中的时间。'
- en: Now that we have covered data-related cost issues, we will look into a couple
    of other cost factors.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了与数据相关的成本问题，接下来我们将探讨其他几个成本因素。
- en: Other non-obvious cost factors
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他不明显的成本因素
- en: Data transfer cost and long-term storage cost are very common gotchas, but there
    are also others, and we will analyze them now.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 数据传输成本和长期存储成本是非常常见的陷阱，但也有其他因素，我们现在将进行分析。
- en: Idle or overprovisioned resources
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 空闲或过度配置的资源
- en: Idle resources can occur when we create a proof of concept and forget to clean
    up afterward. They can also be the consequence of a manual scale-up event, for
    example, for a product launch, a stress test, or a sales event like that on Black
    Friday. Then, the team forgets to scale down once the event has passed, and the
    next monthly bill will be a harsh reminder to scale back again. The main CSPs
    offer rightsizing recommendations. These are visible in the console, as we can
    see in the next GCP screenshot. They also provide API support, and we can implement
    automated alerts if a rightsizing recommendation is detected. We could also automate
    the actual rightsizing, but this would require upfront testing prior to a workload
    adjustment in production.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲资源可能发生在我们创建概念验证后忘记清理的情况下。它们也可能是手动扩展操作的结果，例如用于产品发布、压力测试或类似黑色星期五的销售活动。然后，团队忘记在事件结束后进行缩减，接下来的月度账单将成为一个严峻的提醒，提醒我们需要再次缩减。主要的
    CSP 提供资源优化建议。这些建议可以在控制台中看到，就像我们在下一个 GCP 截图中看到的那样。它们还提供 API 支持，如果检测到资源优化建议，我们可以实现自动化警报。我们还可以自动化实际的资源优化，但这需要在生产环境调整工作负载之前进行前期测试。
- en: '![](img/B22364_04_6.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22364_04_6.jpg)'
- en: 'Figure 4.6 – GCP example – rightsizing recommendation (source: [https://cloud.google.com/compute/docs/instances/apply-machine-type-recommendations-for-instances](https://cloud.google.com/compute/docs/instances/apply-machine-type-recommendations-for-instances))'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – GCP 示例 – 资源优化建议（来源：[https://cloud.google.com/compute/docs/instances/apply-machine-type-recommendations-for-instances](https://cloud.google.com/compute/docs/instances/apply-machine-type-recommendations-for-instances)）
- en: Compliance tools
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 合规工具
- en: Compliance is required for regulated industries, and it is not trivial. Any
    services that support compliance automation come with a price. If not all our
    workloads are regulated, then it makes sense to differentiate where and when to
    use compliance tools.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 对于受监管行业，合规性是必需的，而且并不简单。任何支持合规性自动化的服务都会收取费用。如果并非所有工作负载都需要合规性，那么在选择何时和何地使用合规工具时区分开来是有意义的。
- en: If we use compliance tools from a vendor and also from our CSP, we need to make
    sure that we are not doubling up too much. Often, we cannot avoid some degree
    of overlap, because we must avoid gaps.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们同时使用来自供应商和 CSP 的合规性工具，我们需要确保不重复使用过多。通常，我们无法避免某些程度的重叠，因为我们必须避免漏洞。
- en: Machine learning services
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习服务
- en: '**Machine learning** (**ML**) services require a lot of CPU power to train
    models. Rightsizing and continuous utilization verification are important here.
    For example, we need to find the right balance between the amount of training
    data we require versus the benefit of a higher accuracy level in our learning
    model. Otherwise, a cost surprise is nearly guaranteed.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习**（**ML**）服务需要大量的 CPU 功率来训练模型。资源优化和持续利用验证在这里非常重要。例如，我们需要在所需的训练数据量与学习模型中更高准确度的收益之间找到平衡。否则，成本超支几乎是必然的。'
- en: Public IPv4 addresses
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共 IPv4 地址
- en: IPv4 addresses are limited, so the main CSPs started charging for public IPv4
    addresses assigned to virtual machines. The charge is minimal, but we need to
    consider it for large-scale deployments.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4 地址有限，因此主要的 CSP 开始对分配给虚拟机的公共 IPv4 地址收费。收费很少，但对于大规模部署，我们需要考虑这一点。
- en: After stepping through the most commonly overlooked cost aspects, we will now
    explore what the consequences are.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入分析最常被忽视的成本方面后，我们现在将探讨这些后果是什么。
- en: Impacts of missing non-obvious cost
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽略非显而易见的成本的影响
- en: 'Now that we have a good understanding of the cost factors we need to consider,
    we will explore the consequences of not addressing them. Here is a spoiler alert:
    The impacts go beyond an increased CSP bill.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对需要考虑的成本因素有了清晰的理解，我们将探讨不解决这些问题的后果。这里有一个剧透警告：这些影响远不止是增加的 CSP 账单。
- en: The cross-region inconsistency price tag
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跨区域不一致的费用标签
- en: An aspect that is often overlooked is that there is not necessarily a feature
    parity between regions. A service might not exist in the secondary region, or
    the service does exist but only has a subset of features.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经常被忽视的方面是，不同区域之间不一定具备相同的功能。某项服务在次要区域可能不存在，或者该服务存在，但只有部分功能。
- en: I encountered that during a previous consultant engagement when the serverless
    DB offering existed in both regions, but one region was lacking several features,
    including an out-of-the-box point-in-time recovery. Therefore, the second region
    required a different design, different IaC, and different DR testing scenarios.
    This additional design, build, and operational effort is not visible on the cloud
    bill. However, our teams will need to dedicate more time and pay great attention
    to detail, and the operations risk increases.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我在之前的一次顾问合作中遇到过这种情况，当时无服务器数据库服务在两个区域都存在，但其中一个区域缺少几个功能，包括开箱即用的时间点恢复功能。因此，第二个区域需要不同的设计、不同的基础设施即代码（IaC）和不同的灾难恢复测试场景。这些额外的设计、构建和运营工作不会在云账单上体现出来。然而，我们的团队将需要投入更多时间并特别注意细节，操作风险也会增加。
- en: Architectural multi-region DR strategy impacts
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 架构多区域灾难恢复（DR）策略的影响
- en: If we have not considered multi-region data transfer fees, we will realize that
    the cost of our multi-region DR strategy significantly exceeds the budget. This
    will depend on the risk/cost trade-off decision we need to make. If we decide
    to rectify the solution and move to a single-region DR solution, then we need
    to adjust our architecture and implementation and migrate the existing backups
    to the primary region.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有考虑到多区域数据传输费用，我们将意识到我们的多区域灾难恢复策略的成本显著超出预算。这将取决于我们需要做出的风险/成本权衡决策。如果我们决定修正方案并转向单区域灾难恢复解决方案，那么我们需要调整我们的架构和实施，并将现有备份迁移到主区域。
- en: Architectural multi-cloud strategy impacts
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 架构多云策略的影响
- en: If we have a multi-cloud strategy where we need to continuously transfer data
    between CSPs, the data transfer fees will be shocking. If we haven’t considered
    this in our CSP selection process, then we have made an architecture decision
    that is difficult to revert, especially if we have progressed in our cloud adoption
    for a significant amount of time.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们采用多云策略，并且需要在 CSP 之间持续传输数据，数据传输费用将令人震惊。如果我们在选择 CSP 过程中没有考虑到这一点，那么我们已经做出了一个很难回撤的架构决策，尤其是当我们在云端采用过程中已经投入了大量时间。
- en: In this case, we need to make a trade-off decision between long-term cost savings,
    reducing operational complexity, and increased migration and testing efforts.
    Another critical point to consider is the architectural benefits we could gain.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们需要在长期的成本节省、减少运营复杂性和增加的迁移与测试工作之间做出权衡决策。另一个关键点是需要考虑我们可以获得的架构优势。
- en: A common consequence of multi-cloud adoptions is that only the common denominator
    is used across clouds to make sure we have a consistent approach. For example,
    everything needs to be on a virtual machine or a container. Therefore, we cannot
    utilize the full cloud native potential, such as managed API gateways or DBs.
    This increases the operational complexity. By unwinding a multi-cloud strategy,
    we can leverage those benefits.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 多云采用的常见后果是，跨云平台只使用共同的基础功能，以确保我们有一致的做法。例如，所有的服务都必须运行在虚拟机或容器中。因此，我们无法充分利用云原生的全部潜力，如托管的
    API 网关或数据库。这增加了运营复杂度。通过解开多云策略，我们可以利用这些优势。
- en: Increased cloud runtime cost
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 增加的云端运行时成本
- en: This is the most obvious impact. The cost will be higher than we budgeted for.
    If we don’t adjust our architecture, this will have a long-term impact that will
    only get worse when we move more applications to the cloud or when the applications
    become more popular and create more traffic.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最显而易见的影响。成本将高于我们的预算。如果我们不调整架构，这将产生长期影响，特别是当我们将更多的应用迁移到云端，或者应用变得更受欢迎并创造更多流量时，这个问题只会变得更严重。
- en: Other impacts
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他影响
- en: If we have many idle resources, such as disk volumes that are not attached to
    a virtual machine, it will be difficult to identify the right resources during
    an incident. The idle resources will still be relevant for an external audit and
    will trigger additional administrative effort. If we have idle virtual machines
    running, this will also unnecessarily increase the carbon footprint impacting
    potential sustainability goals.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有很多闲置资源，比如未附加到虚拟机的磁盘卷，在发生故障时很难识别出合适的资源。闲置资源仍然会对外部审计产生影响，并增加额外的管理工作。如果我们有闲置的虚拟机在运行，这也会不必要地增加碳足迹，从而影响潜在的可持续发展目标。
- en: Those are the key impacts, and we definitely want to avoid them if the business
    benefits do not match or exceed the additional cost. Some signs should trigger
    us to investigate further, and we will look into them next.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是关键的影响因素，如果业务收益无法匹配或超过额外的费用，我们肯定要避免这些情况。某些迹象应该促使我们进一步调查，接下来我们将探讨这些迹象。
- en: Indicators
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指标
- en: 'There are several indicators for this anti-pattern. We will go through them
    now and start with the most obvious one:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个指标可以识别这种反模式。我们现在将逐一查看它们，并从最明显的一个开始：
- en: '**Bill shock**: We received our CSP bill, and we can see that the cost trend
    is steeper than expected or that there is a big spike that does not match the
    cost trend of the previous months.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**账单震惊**：我们收到了 CSP 的账单，并且可以看到费用趋势比预期更陡峭，或者有一个大幅波动，无法与之前几个月的费用趋势相匹配。'
- en: '**Lack of insight**: Earlier in this chapter, we discussed FinOps tooling.
    If we are missing out on mechanisms like budgets, alerts, and rightsizing recommendations,
    then there is probably some hidden cost that we are not aware of. Enabling those
    features will help us gain clarity.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏洞察力**：在本章前面，我们讨论了 FinOps 工具。如果我们缺乏预算、警报和资源优化建议等机制，那么可能存在一些我们没有意识到的隐性成本。启用这些功能将有助于我们获得更清晰的视图。'
- en: '**Lack of ownership and accountability**: If product teams are not motivated
    to optimize value generation, they will not be motivated to identify unexpected
    costs and consider them in architecture decisions.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏所有权和责任感**：如果产品团队没有动力去优化价值生成，他们就不会有动力去识别意外费用，并将其考虑到架构决策中。'
- en: '**No committed spending plan or spot instances**: If we do not have a committed
    spending plan such as the AWS Savings Plan, Azure Reservations, or GCP committed
    use contracts, we pay the full price for compute power, fpr example, instances,
    containers, and FaaS. If we have workloads that can have outages, such as batch
    job operations, or instances in a lower environment, then we need to consider
    leveraging AWS spot instances, Azure Spot Virtual Machines, or GCP Preemptible
    VMs. Both those measures should be combined and if neither of them exists, we
    are overspending, even though it is not visible in our cloud bill.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**没有承诺的支出计划或抢占实例**：如果我们没有承诺的支出计划，比如 AWS 节省计划、Azure 预留或 GCP 承诺使用合同，那么我们将为计算资源支付全价，例如实例、容器和
    FaaS。如果我们有可能出现中断的工作负载，比如批处理作业或低环境中的实例，那么我们需要考虑利用 AWS 抢占实例、Azure Spot 虚拟机或 GCP
    Preemptible 虚拟机。这些措施应当结合使用，如果其中任何一项没有实施，我们就会出现过度支出的情况，即使在云账单中看不出来。'
- en: '**Lack of strategy assessment**: If we have a multi-cloud or multi-region strategy
    and the business value never got reassessed, then there is a chance that we lack
    current insights.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏战略评估**：如果我们有多云或多区域策略，而且业务价值从未重新评估过，那么很可能缺乏当前的洞察力。'
- en: '**Untracked trial services**: CSPs and SaaS providers offer free trials. If
    we do not track the time or free-tier usage, we will have to pay extra after the
    limits are reached.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未跟踪的试用服务**：CSP 和 SaaS 提供商提供免费试用。如果我们没有跟踪使用时间或免费配额，当达到限制后，我们将不得不支付额外费用。'
- en: '**No deployment cost forecast**: Some deployment tools provide a cost forecast
    before the deployment is performed. Those estimates might not be 100% accurate
    because the data transfers and volumes will vary, but they give valuable insight
    if we get something fundamentally wrong. If we accidentally deploy a too-large
    instance, we can see the unexpected additional cost.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**没有部署成本预估**：一些部署工具在部署之前提供成本预估。虽然这些预估可能不是 100% 准确，因为数据传输和流量会有所变化，但它们能在我们做错什么的时候提供有价值的洞察。如果我们不小心部署了一个过大的实例，我们可以看到意外的额外费用。'
- en: Remediations
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 纠正措施
- en: 'Let’s have a look now at how we can get to a target state that gets us into
    good shape:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何才能达到一个良好的目标状态：
- en: '**Upfront cost calculations**: When we need to architect a new solution, we
    create a solution diagram that shows all the components that trigger cost. This
    overview will show what cloud services we need to consider. We will need non-functional
    requirements such as volume metrics, number of requests, data growth, RTOs, and
    RPOs to come up with solid estimates.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前期成本计算**：当我们需要设计一个新方案时，我们会创建一个展示所有触发成本的组件的方案图。此概览将展示我们需要考虑哪些云服务。我们还需要非功能性需求，如数据量指标、请求数量、数据增长、RTO（恢复时间目标）和
    RPO（恢复点目标）来制定准确的估算。'
- en: A data flow diagram can also help to identify the data transfer fees. The same
    applies when we want to enhance existing architecture. If the current state is
    already deployed and launched, then we can work out the actual cost from the CSP
    bill. We can then compare it with the target state to identify how our costs will
    change.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据流图还可以帮助识别数据传输费用。增强现有架构时也是如此。如果当前状态已经部署并上线，那么我们可以从 CSP 账单中计算出实际费用。然后，我们可以将其与目标状态进行比较，找出我们的费用如何变化。
- en: '**Establish FinOps tooling**: We discussed this in the previous section, *Not
    leveraging CSP FinOps services*, so we will keep it short here. FinOps tooling
    helps us establish good cost insight and uncover non-obvious costs. Now that we
    understand data transfer, storage, and other cost gotchas, we know what to look
    out for.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立 FinOps 工具**：我们在前一节中讨论了这个问题，*没有利用 CSP 的 FinOps 服务*，所以这里简短提及。FinOps 工具帮助我们建立良好的成本洞察力，并发现不明显的费用。现在，我们了解了数据传输、存储和其他成本陷阱，知道需要注意什么。'
- en: '**Well-architected reviews**: Once a solution’s design has matured, we can
    perform a well-architected review. The well-architected framework from our CSP
    will guide us to ask the right questions and validate our design. We could also
    involve a consultancy to get an independent opinion. We can do the same for workloads
    that are already deployed. In that case, we can also use previously discussed
    advisory tooling to help us validate the current state.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构审查**：一旦方案设计成熟，我们可以进行架构审查。CSP 提供的架构框架将指导我们提出正确的问题并验证设计。我们也可以请咨询公司提供独立意见。对于已经部署的工作负载，我们也可以进行类似的操作。在这种情况下，我们还可以使用前面提到的咨询工具来帮助我们验证当前状态。'
- en: '**Service catalog**: A service catalog will help us achieve a good self-service
    experience with a repeatable outcome. This can also help us with our cost approach.
    Storage service catalog items can have a built-in data life cycle. The user only
    needs to select which standardized life cycle they need. That way, we can ensure
    that a life cycle is always in place.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务目录**：服务目录有助于我们实现良好的自助服务体验，且结果可重复。这也有助于我们在成本方面的处理。存储服务目录项可以具有内置的数据生命周期。用户只需要选择所需的标准化生命周期。这样，我们可以确保始终有一个生命周期在使用中。'
- en: '**Lack of guardrails**: Preventive guardrails can prevent certain cost impacts,
    including the deployment of really large instances to a development environment.
    Another preventive guardrail could be that users can only deploy product catalog
    items or endorsed cloud services. Detective guardrails can notify us if a guardrail
    is not compliant.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏防护措施**：预防性防护措施可以防止某些成本影响，包括将非常大的实例部署到开发环境中。另一种预防性防护措施可以是用户只能部署产品目录项或批准的云服务。侦测性防护措施可以在防护措施不符合要求时通知我们。'
- en: '**Encryption keys**: Customer-managed keys come with an additional cost for
    the actual key storage or versioning and also for each operation, including key
    creation, encryption, and decryption. Some regulatory frameworks require customer-managed
    keys, and some mandate even a dedicated key store solution. This means the physical
    storage is dedicated to one cloud customer. Dedicated services come with an additional
    price tag and that includes AWS CloudHSM (**HSM** stands for **hardware security
    module**), Azure Dedicated HSM, and Google Cloud HSM.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密密钥**：客户管理的密钥会产生额外的成本，包括实际密钥存储或版本控制的费用，以及每次操作的费用，包括密钥创建、加密和解密。一些监管框架要求使用客户管理的密钥，甚至有些要求使用专门的密钥存储解决方案。这意味着物理存储是专门为一个云客户提供的。专用服务会有额外的费用，其中包括
    AWS CloudHSM（**HSM** 代表 **硬件安全模块**）、Azure Dedicated HSM 和 Google Cloud HSM。'
- en: '**Other architecture considerations**: If we use a **content distribution network**
    (**CDN**), we need to pay an additional fee. However, it will provide additional
    protection at the edge. Because data is cached at the edge, not every request
    needs to fetch data from our backend systems. Therefore, depending on our architecture,
    it can reduce the data transfer fees for our backend components, but the overall
    cost will still be higher compared to not using a CDN.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他架构考虑因素**：如果我们使用**内容分发网络**（**CDN**），我们需要支付额外费用。然而，它会在边缘提供额外的保护。由于数据被缓存于边缘，不是每个请求都需要从我们的后端系统获取数据。因此，根据我们的架构，它可以减少后端组件的数据传输费用，但与不使用CDN相比，整体成本仍然较高。'
- en: After gaining a solid understanding of unexpected costs and how to spot and
    remediate them, we will explore how to focus on driving business value.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入了解意外成本以及如何发现和修正它们之后，我们将探讨如何专注于推动业务价值。
- en: Focusing on cost savings over driving value
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 专注于节省成本而非创造价值
- en: “*It’s not whether you’re right or wrong that’s important, but how much money
    you make when you’re right and how much you lose when you’re wrong*,” is a quote
    by George Soros, one of the most successful global investors.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: “*重要的不是你是否对或错，而是当你对时能赚多少钱，错时能亏多少钱*” 这是全球最成功的投资者之一乔治·索罗斯的名言。
- en: 'Making strategic cloud decisions is different from trading. However, we must
    make the right decisions to optimize our cloud value. Instead of buying and selling,
    we need to put the right capabilities in place and move on from them when the
    time comes. This will help us increase our ROI. To prepare for that, we must evolve
    our architecture, ways of working, and cultural approach while ensuring our teams
    have access to training during this continuous transformation journey. These are
    the critical internal and external factors we need to consider when driving value
    for our cloud native stack:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 做出战略性云决策与做交易不同。然而，我们必须做出正确的决策，以优化我们的云价值。我们需要的不是买卖，而是建立合适的能力，并在时机成熟时逐步移除这些能力。这将帮助我们提高投资回报率。为了做好准备，我们必须发展我们的架构、工作方式和文化方法，同时确保我们的团队在这段持续的转型旅程中获得培训。这些是推动我们云原生技术栈价值时需要考虑的关键内部和外部因素：
- en: '**Changing business requirements and competitive advantage**: Requirements
    can change because our business evolves, the market we operate advances, or we
    try to branch out into new market segments. Either way, we want to release new
    features quickly. Therefore, we must innovate faster, experiment, and maximize
    the output.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变化的业务需求和竞争优势**：需求可能会发生变化，因为我们的业务在发展，我们所处的市场在进步，或者我们尝试进入新的市场细分领域。无论哪种情况，我们都希望能够迅速发布新功能。因此，我们必须加速创新、进行实验，并最大化产出。'
- en: '**Technology advances**: We previously discussed Wardley Mapping. Cloud services,
    such as FaaS, have become commodities. To support business agility, we must avoid
    undifferentiated heavy lifting and refresh our technology stack. If we can use
    fully managed services like FaaS instead of containers or instances, then we do
    not manage patching, auto-scaling, and the security of the operating system and
    applications.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术进步**：我们之前讨论过沃德利映射。云服务，如FaaS，已经成为商品化服务。为了支持业务的敏捷性，我们必须避免没有差异化的繁重工作，并更新我们的技术栈。如果我们可以使用像FaaS这样的完全托管服务，而不是容器或实例，那么我们就不需要管理操作系统和应用程序的补丁、自动扩展和安全性。'
- en: '**Compliance and security requirements are changing**: We must protect our
    customer data, implement more controls, and ensure customer data can be deleted
    when requested. Therefore, we can rely on low-budget manual solutions because
    they do not scale. We need to drive automation.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性和安全要求的变化**：我们必须保护客户数据，实施更多控制，并确保在客户请求时能够删除其数据。因此，我们不能依赖低成本的手动解决方案，因为它们无法扩展。我们需要推动自动化。'
- en: '**Vendor and partner ecosystem**: Reducing software vendor or consultancy fees
    can result in higher long-term costs. We need to understand how well the third-party
    roadmap aligns with our organization for SaaS solutions. For consultancies, we
    need to understand how their strategic approach aligns with our vision. We discussed
    that in detail in [*Chapter 2*](B22364_02.xhtml#_idTextAnchor055).'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**供应商和合作伙伴生态系统**：减少软件供应商或咨询费用可能会导致长期成本增加。我们需要了解第三方产品路线图与我们组织的SaaS解决方案的契合度。对于咨询公司，我们需要了解他们的战略方法是否与我们的愿景一致。我们在[*第2章*](B22364_02.xhtml#_idTextAnchor055)中详细讨论了这一点。'
- en: '**Talent and skill availability**: When we determine what technology or framework
    we use, we must consider whether we already have the skills in-house or sufficient
    skilled resources in our job market. Saving five percent on licensing or operational
    cloud costs can be outweighed by not finding resources or paying a higher consultant
    rate or salary. The availability of skilled professionals who understand cloud
    native technologies can influence how effectively we can build and maintain our
    architecture.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人才与技能可得性**：当我们决定使用何种技术或框架时，我们必须考虑是否已有足够的内部技能，或者在我们的人力资源市场上是否有足够的技术人才。节省5%的许可费用或云运营成本，可能会被找不到合适资源，或者需要支付更高的顾问费或薪水所抵消。具备云原生技术理解的专业人才的可得性，可能会影响我们构建和维护架构的效率。'
- en: '**Training and collaboration**: We must ensure our teams are well trained in
    architecting and implementing the cloud native stack in the best possible way
    for our business. Saving money on training and collaboration will result in technical
    debt and a considerable price tag.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**培训与协作**：我们必须确保团队在架构设计和实施云原生技术栈方面接受充分的培训，以便以最佳的方式为我们的业务服务。节省培训和协作上的费用将导致技术债务，并带来可观的额外成本。'
- en: Optimizing business value is a prominent driver. However, during the early stages
    of cloud adoption, businesses often focus too much on cost reduction. In this
    section, we will explore how a cost focus can hold us back in our cloud adoption.
    Let’s look into the common anti-patterns now.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 优化业务价值是一个重要的驱动力。然而，在云采纳的初期，企业往往过于关注成本削减。在本节中，我们将探讨过度关注成本可能如何在云采纳过程中制约我们。现在让我们来看一下常见的反模式。
- en: Common anti-patterns
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见的反模式
- en: We will now explore two common anti-patterns and the consequences that come
    with them. We will start with the impacts of focusing solely on cost reduction
    instead of looking at the holistic picture.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨两个常见的反模式及其带来的后果。我们将从单纯关注成本削减而忽视整体视角的影响开始。
- en: Penny pinching
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小气节约
- en: Going for a bargain can sometimes be tempting; everyone has done it before.
    The comparison is easy when we get the same product and quality for a reduced
    price. It becomes more complex when dealing with cloud native solutions and the
    long-term operational aspects we must consider.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，寻找便宜货很诱人；每个人都曾尝试过。对于我们来说，当以折扣价购买到相同产品和质量时，比较变得简单。但当涉及到云原生解决方案以及我们必须考虑的长期运营问题时，情况就变得复杂了。
- en: A couple of years ago, I worked with an engineer who ran a cloud hosting business
    on the side. His target group was small businesses that needed managed applications.
    The engineer was managing parts of the top half of the shared responsibility model,
    which is security in the cloud. The customer offering included a standard three-tier
    web architecture with public and private subnets. The private subnets needed outbound
    connectivity to the internet for some reason. This was also a security anti-pattern,
    but we now focus on leveraging business value.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，我与一位工程师合作，他在业余时间经营一家云托管业务。他的目标群体是需要托管应用的小型企业。这位工程师管理着共享责任模型的上半部分，即云中的安全性。客户提供的服务包括一个标准的三层Web架构，具有公有和私有子网。由于某些原因，私有子网需要与互联网进行出站连接。这也是一个安全反模式，但我们现在的关注点是如何利用业务价值。
- en: To establish the connectivity from the private subnet to the internet, a **NAT
    gateway** (**NAT-GW**) solution was required. The engineer compared the prices
    of the CSPs’ fully managed NAT-GW services and the cost of hand-crafting a NAT-GW
    solution from scratch. A fully managed service comes with additional costs that
    cover ongoing patching, high availability, security controls, out-of-the-box logging
    and monitoring integration, and much more. Nevertheless, he decided to go ahead
    with the hand-crafted solution. That meant he had to manage the ongoing image
    updates for the virtual machine, the ongoing patching process, the security controls,
    the logging and monitoring, and so on.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 为了建立从私有子网到互联网的连接，**NAT 网关**（**NAT-GW**）解决方案是必需的。这位工程师比较了云服务提供商（CSP）完全托管的NAT-GW服务和从头开始手工打造NAT-GW解决方案的成本。完全托管的服务包含额外费用，用于持续的修补、高可用性、安全控制、现成的日志和监控集成等。然而，他决定采用手工制作的解决方案。这意味着他必须管理虚拟机的持续镜像更新、不断的修补过程、安全控制、日志记录和监控等。
- en: That solution would also result in a lot of additional compliance effort for
    a regulated solution since they needed proof of things such as least privilege
    enforcement, log integrity, logging of elevated user access, and much more, even
    though this was only a small-scale hosting business with only 100 customers.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这种解决方案也会导致监管解决方案需要大量额外的合规工作，因为他们需要提供诸如最小权限实施、日志完整性、高级用户访问日志记录等证明，尽管这只是一个小规模的托管业务，只有100个客户。
- en: This approach does not scale if we want to grow our customer base and business
    value. The lesson learned might take a while until we realize the consequences
    of building up technical debt. This is also a common consequence of poorly planned
    cloud migrations where a *lift and shift* migration plan is prioritized over strategic
    value gain by refactoring an application to leverage all cloud native benefits.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望扩大客户基础和商业价值，这种方法是无法扩展的。我们可能需要一段时间才能意识到积累技术债务的后果。这也是云迁移中常见的结果，特别是在优先考虑“提升并迁移”（*lift
    and shift*）迁移计划，而非通过重构应用程序以利用所有云原生优势来获得战略价值的情况下。
- en: Not investing in continuous improvement
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不投资于持续改进
- en: In a previous engagement, I worked for a customer that had to meet several regulatory
    requirements because they were a financial services organization. Collecting the
    required evidence manually for an external audit took 3.5 months in one year.
    This was a full-time effort for one cloud team member assigned to the audit. This
    time span covered the cloud stack. Other teams were involved in the on-premises
    workloads.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在一次之前的合作中，我曾为一家金融服务组织的客户工作，该客户需要满足多个监管要求。为了应对外部审计，收集所需的证据手动操作花费了1年3.5个月的时间。这一工作量是由负责审计的云团队成员全职完成的。这段时间涵盖了云技术栈，其他团队则参与了本地工作负载的处理。
- en: Screenshots, log file examples, and process descriptions were to be provided
    for all environments handling credit card information. The cloud team relied mainly
    on external resources from consultancies. Therefore, the internal staff was reduced
    to a bare minimum.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 需要提供所有处理信用卡信息的环境的截图、日志文件示例和流程描述。云团队主要依赖外部咨询资源，因此内部人员减少到最低限度。
- en: We already knew we had to improve our approach for the next year and shift toward
    automation. We evaluated several SaaS tools that could help improve the security
    and compliance posture and reduce the audit effort to the bare minimum. If our
    organization is in good shape, we can provide the external auditor with read-only
    access to the compliance automation tool. They can then validate that the required
    controls are in place. This means the overall effort on both sides is reduced,
    but we can also get ongoing assurance insights that help us continuously improve.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道，明年我们必须改进方法，转向自动化。我们评估了几种SaaS工具，这些工具可以帮助改善安全性和合规性姿态，并将审计工作量减少到最低限度。如果我们的组织状态良好，我们可以向外部审计员提供只读访问权限，查看合规自动化工具。这样，他们可以验证所需的控制措施是否到位。这意味着双方的整体工作量减少了，同时我们还可以获得持续的保障性见解，帮助我们不断改进。
- en: Unfortunately, the company decided not to invest in continuous improvement and
    allocated the budget to other initiatives. The following external audit was even
    more challenging. Instead of the previous version of the compliance framework,
    we had to adhere to a new version, which was more thorough. It increased the overall
    effort, and we had to hire a contractor for 3.5 months to meet the audit timeline
    and ensure the under-staffed cloud team was still functioning and could continue
    maturing the cloud platform.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，公司决定不再投资于持续改进，并将预算分配给其他项目。随后的外部审计更加具有挑战性。我们不再使用先前版本的合规框架，而是必须遵守一个新的、更为严格的版本。这增加了整体工作量，我们不得不聘请一名承包商工作3.5个月，以满足审计时间表，并确保人手不足的云团队仍然能够运作并持续完善云平台。
- en: The key takeaway is that the overall spending for an additional temporary resource
    to add a couple of band-aids could have been invested into a strategic improvement
    that would have resulted in a sustainable solution and reduced the long-term effort.
    Getting things wrong is not unusual, but we need to use what we have learned to
    improve. Making the same error twice in a row is painful to watch. In hindsight,
    it felt like watching a car crash in slow motion. Thankfully, no physical harm
    occurred, but the pain was not forgotten. Let’s move on and summarize and quantify
    the impacts of focusing on cost savings rather than driving value.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点是，额外临时资源的整体支出，虽然可以解决一些短期问题，但如果将这些支出用于战略性改进，将会带来可持续的解决方案，并减少长期的努力。犯错并不罕见，但我们需要利用所学的教训进行改进。重复犯同样的错误令人痛心。事后看，感觉就像是在慢动作中看到车祸发生。幸运的是，没造成身体伤害，但痛苦却没有忘记。接下来，让我们总结并量化将焦点放在节省成本而非推动价值上的影响。
- en: Impacts
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 影响
- en: 'Focusing on cost saving over driving value has some significant negative long-term
    impacts, and we will explore them now:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 将节省成本置于推动价值之上，会产生一些显著的长期负面影响，我们现在将一一探讨：
- en: '**Missed business opportunities**: If we do not drive the improvement of our
    value chain, we will miss out on customer experience improvements that can differentiate
    us from the competition. If we do not continuously improve our cloud native stack,
    we will increase our tech debt, and the time to market for current features will
    decrease. This will be a disadvantage if we want to innovate, react to market
    changes, or comply with regulatory requirements.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错失商业机会**：如果我们不推动价值链的改进，我们将错失那些能够让我们与竞争对手区分开的客户体验改进。如果我们不持续改进我们的云原生技术栈，我们将增加技术债务，并且当前功能的市场推出时间将缩短。如果我们希望创新、应对市场变化或遵守监管要求，这将是一个劣势。'
- en: '**Increased operational complexity**: Without continuous improvement, we will
    miss out on fully leveraging the cloud potential. Managed services are being innovated
    and improved at a much quicker pace compared to what we could achieve ourselves.
    If we do not refresh our architecture, it will be out of date soon. These operational
    benefits of managed services include built-in observability and resilience. The
    avoidable increased operational complexity will burden our teams since the operational
    effort will be unnecessarily high.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运营复杂度增加**：如果没有持续改进，我们将错失充分利用云计算潜力的机会。托管服务的创新和改进速度远超我们自己能够实现的。如果我们不更新架构，架构很快就会过时。托管服务的运营优势包括内建的可观察性和弹性。那些可以避免的运营复杂度增加将给我们的团队带来负担，因为运营成本将不必要地增高。'
- en: '**Decreased productivity**: Penny-pinching can negatively impact a team’s morale.
    The result will be less engagement, motivation, and collaboration. Therefore,
    productivity will be lower than it could be when we aim for value creation.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生产力下降**：过度节俭可能会对团队的士气产生负面影响。结果将导致参与度、动机和合作减少。因此，生产力将低于我们在追求价值创造时可以达到的水平。'
- en: '**Compromised security and compliance**: Solely focusing on cost reduction
    can lead to underinvestment in security tools, monitoring, and compliance services.
    This increases the risk of security breaches, data loss, and non-compliance with
    regulations, which can have significant impacts. Not enabling services such as
    network firewalls, intrusion detection systems, or vulnerability scanning will
    expose our applications to vulnerabilities and result in non-compliance with regulatory
    frameworks like PCI-DSS.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性和合规性受损**：单纯关注成本削减可能导致在安全工具、监控和合规服务上的投资不足。这增加了安全漏洞、数据丢失和不符合监管要求的风险，可能会产生重大影响。如果不启用如网络防火墙、入侵检测系统或漏洞扫描等服务，将使我们的应用程序暴露于漏洞中，并导致不符合如PCI-DSS等监管框架的要求。'
- en: '**Reduced user experience**: Cost-cutting measures can negatively impact service
    reliability and availability, leading to dissatisfied customers and potential
    churn. Reducing redundancy or backup frequencies to save costs might result in
    service outages or data loss, impacting reliability and customer experience.'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**降低用户体验**：削减成本的措施可能会影响服务的可靠性和可用性，导致客户不满并可能引发流失。为了节省成本而减少冗余或备份频率，可能导致服务中断或数据丢失，从而影响可靠性和客户体验。'
- en: '**Loss of revenue and growth potential**: Minimizing cloud spending can impact
    our architecture and restrict our ability to scale quickly for demand peaks. This
    can limit our ability to leverage ad hoc market opportunities, such as trading
    spikes due to business news or temporary retail peaks like on Black Friday.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收入和增长潜力的丧失**：减少云支出可能会影响我们的架构，并限制我们在需求高峰时快速扩展的能力。这可能限制我们利用临时市场机会的能力，例如因商业新闻引发的交易高峰或像黑色星期五这样的临时零售高峰。'
- en: Focusing on cost optimization has significant impacts and can damage our business
    and reputation in the long term. But how can we realize we are on the wrong path
    and must react? We will look into this next.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 专注于成本优化会带来显著影响，并可能在长期内损害我们的业务和声誉。但我们如何才能意识到自己走错了路并做出反应呢？我们接下来将探讨这个问题。
- en: Problem indicators
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题指标
- en: 'It is not always easy to realize whether we are already en route for this anti-pattern,
    and therefore, we will explore some of the early signs:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们并不总是容易意识到自己是否已经陷入这种反模式，因此我们将探讨一些早期迹象：
- en: '**Service downgrades and performance issues**: Growing complaints about slow
    application performance, higher latency, or frequent service outages can indicate
    a focus on cost reduction. Performance degradation due to under-provisioned resources,
    such as a lack of auto-scaling or edge computing, indicates that cost is prioritized
    over business outcomes.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务降级和性能问题**：关于应用程序性能变慢、延迟增加或频繁服务中断的投诉增多，可能表明公司正在关注成本削减。由于资源不足而导致的性能下降，例如缺乏自动扩展或边缘计算，表明成本优先于业务成果。'
- en: '**Reducing security controls**: Reducing investment in cloud security tools,
    services, or personnel or a noticeable decline in security monitoring and compliance
    activities are signs of cost reaction. These measures can increase the risk of
    data breaches and compliance failures, demonstrating a dangerous trade-off between
    cost savings and essential security controls.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少安全控制**：减少对云安全工具、服务或人员的投资，或者明显下降的安全监控和合规活动，都是成本反应的迹象。这些措施可能增加数据泄露和合规失败的风险，表现出在成本节省与必要的安全控制之间的危险权衡。'
- en: '**Lack of standardization**: Immature standardizations include a lack of coding
    standards, standardized CI/CD pipelines, container-based images, service catalog
    offerings, and others. The consequence is increased operational complexity and
    a slower time to market, which will decrease value creation.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏标准化**：不成熟的标准化包括缺乏编码标准、标准化的CI/CD流水线、基于容器的镜像、服务目录等。这些问题的后果是增加了操作复杂性，延缓了市场推出时间，从而减少了价值创造。'
- en: '**Lack of chargeback and accountability**: Without a chargeback model, we do
    not have clear responsibilities. Therefore, the product teams will not drive the
    ROI. In that case, we will likely have a centralized cost-focused governance approach.
    An immature operating model also falls under this category.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏计费回退和问责**：如果没有计费回退模型，我们就没有明确的责任划分。因此，产品团队将不会推动投资回报率（ROI）。在这种情况下，我们很可能会采用以成本为中心的集权治理模式。一个不成熟的运营模式也属于这一类。'
- en: What does good look like, and how do we get there?
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么才是理想状态，我们如何才能达到这个目标？
- en: 'We need to tackle the following problem spaces to achieve a valuable outcome.
    If we tackle these challenges in time and sufficiently, they become enabling areas:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要解决以下问题领域，以实现有价值的成果。如果我们及时且充分地解决这些挑战，它们将成为推动发展的领域：
- en: '**Ownership and accountability**: Clear demarcation of responsibilities is
    required. The cloud platform team might be responsible for establishing all network
    infrastructure and managing the service catalog. The product team will be responsible
    for the application, data, and ongoing optimizations. This includes right-sizing
    compute instances and deciding which backup and data life cycle plans must be
    used to meet all requirements and avoid underutilization. Establishing a chargeback
    model will help drive economic behavior. This brings us to the next point.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**责任和问责**：需要明确责任划分。云平台团队可能负责建立所有网络基础设施并管理服务目录。产品团队则负责应用程序、数据和持续优化工作。这包括合理配置计算实例，决定哪些备份和数据生命周期计划必须满足所有需求，并避免资源的低效利用。建立计费回退模型将有助于推动经济行为。这将引导我们进入下一个要点。'
- en: '**Committed spend and spot virtual machines**: Ownership and accountability
    will also trigger cost-saving thinking within product teams because cloud costs
    saved can be spent on innovation. If the teams understand their responsibility,
    they will be interested in leveraging cost-commit plans to leverage discounts.
    It will also trigger spot instances for test environments or batch jobs that can
    afford interruptions. Spot virtual machines are cheaper to run compared to on-demand
    instances.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**承诺的开销与现货虚拟机**：拥有权和责任感也会激发产品团队节省成本的思维，因为节省的云成本可以用于创新。如果团队了解他们的责任，他们将会对利用成本承诺计划以获得折扣感兴趣。这也会促使使用现货实例来进行测试环境或可以接受中断的批处理任务。与按需实例相比，现货虚拟机的运行成本更低。'
- en: '**Taking a long-term delivery view**: Projects have a short-term view because
    they only plan for the project’s time span. Afterward, the project will be moved
    to BAU status, and an operations team will operate it. However, the solution might
    not necessarily improve over time. This results in insufficient legacy architectures
    that do not leverage the latest cloud native features. Moving to a product team
    approach brings operational responsibility closer to the product team. The product
    team will be very interested in reducing the operational complexity and continuously
    improving the application.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采取长期交付视角**：项目通常具有短期视角，因为它们只规划项目的时间跨度。之后，项目会转移到业务运作（BAU）状态，由运营团队来管理。然而，解决方案未必会随着时间的推移而改善。这导致遗留架构无法充分利用最新的云原生功能。转向产品团队模式将使运营责任更加靠近产品团队。产品团队将非常关注减少运营复杂性，并持续改进应用。'
- en: '**Technical debt register**: It will help us keep track of any tactical decisions
    we make. This could be an old Java runtime that we are using or a DB engine that
    is not our strategic choice. If we later create a new application container image
    with a newer runtime, we can remediate the technical debt because we will have
    clear visibility.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术债务记录**：它将帮助我们跟踪我们所做的任何战术决策。这可能是我们正在使用的旧版Java运行时，或者是一个不是我们战略选择的数据库引擎。如果我们以后使用较新的运行时创建新的应用容器镜像，我们就能够消除技术债务，因为我们将拥有清晰的可视性。'
- en: '**Data insights**: Rather than just focusing on the total cloud cost, we get
    a better picture when we have data points and can build correlations. That way,
    we can find out how much the online sales number increases because we can release
    more frequently, as we invested more into our CI/CD pipeline maturity.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据洞察**：与其仅仅关注总的云成本，我们通过数据点并建立关联性可以获得更清晰的全貌。这样，我们就可以发现因为我们在CI/CD管道成熟度上投入更多，我们能够更频繁地发布，从而在线销售数字增加了多少。'
- en: '**Partner ecosystem**: Having a partner strategy in place is a good starting
    point, but we also need to make sure we build a good relationship. Partners such
    as CSPs, SaaS vendors, or consultancies are experts in the field, and they can
    provide valuable advice on what we can improve or where we can co-innovate to
    create new business opportunities.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合作伙伴生态系统**：建立合作伙伴战略是一个好的起点，但我们还需要确保建立良好的关系。像CSP（云服务提供商）、SaaS供应商或咨询公司这样的合作伙伴是该领域的专家，他们能够提供有价值的建议，帮助我们改进或共同创新，创造新的商业机会。'
- en: '**Investing in long-term gains**: A short-sighted view of expenses will result
    in missed strategic opportunities. If we assess the value of mature CI/CD pipelines
    that provide repeatable, secure, and reliable outcomes, we can reduce our time
    to market. Examples include automated performance, reliability, or regression
    tests.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**投资长期收益**：短视的费用观念会导致错失战略机会。如果我们评估提供可重复、安全和可靠结果的成熟CI/CD管道的价值，我们可以缩短市场推出时间。举例来说，包括自动化的性能、可靠性或回归测试。'
- en: '**Temporary environments and auto-destroy**: Establishing sandpits where developers
    can experiment with new cloud services or the CI/CD toolchain will contribute
    to education. Sandpits bring the risk of a cost surprise because, typically, not
    all resources get destroyed after they are no longer needed. We can implement
    an auto-destroy mechanism to make sure resources can be removed at certain time
    intervals, for example, every weekend. We can do this with cloud native CI/CD
    tooling, SaaS solutions, or open source solutions such as AWS Nuke. The implementation
    is an upfront investment, but it will eventually pay off. The same applies to
    temporary environments that can be shut down outside business hours.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**临时环境和自动销毁**：建立沙盒环境，让开发者可以在其中尝试新的云服务或 CI/CD 工具链，将有助于教育培训。沙盒环境带来成本意外的风险，因为通常情况下，并非所有资源在不再需要时都会被销毁。我们可以实现自动销毁机制，确保在特定时间间隔（例如每个周末）删除不再需要的资源。我们可以通过云原生
    CI/CD 工具、SaaS 解决方案，或像 AWS Nuke 这样的开源解决方案来实现。虽然实现这一机制需要前期投资，但最终会带来回报。同样的原则也适用于可以在非工作时间关闭的临时环境。'
- en: We explored a lot in this chapter and will now summarize what we learned so
    that we can digest the information quickly.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了许多内容，现在将总结我们学到的知识，以便快速消化信息。
- en: Summary
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We started with tagging, our daily bread and butter, to achieve an accurate
    cost breakdown. We need clear tagging standards and enforcement to establish a
    functioning chargeback model. We explored cloud native FinOps services such as
    cost explorers, budgets, alerts, and cost anomaly detections. Those are valuable
    features for gaining early insight and cost alerts rather than passively waiting
    for the next cloud bill shock. We explored data transfer fees and how they can
    occur within our cloud platform and for hybrid or multi-cloud traffic. We then
    closed by exploring business value creation instead of taking a short-term cost
    minimization stance. Only a long-term perspective can help us maximize the business
    value we can achieve with our cloud native stack.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从标签管理开始，这是我们日常工作中的基础，目的是实现准确的成本拆分。为了建立一个有效的费用返还模型，我们需要明确的标签标准和强制执行措施。我们还探讨了云原生的
    FinOps 服务，如成本探测器、预算、警报和成本异常检测。这些都是获得早期洞察和成本警报的宝贵功能，而不是被动等待下一次的云账单震惊。我们讨论了数据传输费用，以及它们如何在我们的云平台内以及在混合云或多云流量中产生。接着，我们通过探索业务价值创造，强调了不仅仅是采取短期的成本最小化立场。只有从长远的角度出发，才能帮助我们最大化利用云原生技术栈所能创造的业务价值。
- en: Now, we are ready to tackle the next challenge, which is security and compliance
    goals.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备迎接下一个挑战，即安全性和合规性目标。
