- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Solving Complex Business Problems with Agility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: “Agility is the ability to adapt and respond to change … agile organizations
    view change as an opportunity, not a threat.”
  prefs: []
  type: TYPE_NORMAL
- en: – Jim Highsmith
  prefs: []
  type: TYPE_NORMAL
- en: In today’s fast-paced business world, understanding and mastering agility is
    not just a competitive edge – it’s a necessity. You and the teams you support
    face an array of complex business problems. Traditional business management methods
    often don’t measure up, driving the need for more Agile and collaborative approaches.
    This chapter delves into the essence of agility, highlighting its foundational
    principles and illustrating its pivotal role in resolving intricate business challenges.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces the core concepts behind organizational agility, the
    mechanics behind Agile methodologies, the importance of implementing smaller teams,
    and essential insights on managing collaboration across diverse teams. By this
    chapter’s conclusion, your understanding will go beyond theoretical concepts,
    and you’ll be armed with the knowledge to champion agility and collaboration in
    your professional endeavors.
  prefs: []
  type: TYPE_NORMAL
- en: In the broader context of your professional career and the ever evolving business
    landscape, agility is fundamental to modern success. Embracing these concepts
    will elevate your professional development and empower you and your teams to pioneer
    innovation, foster adaptability, and adeptly navigate the complexities of today’s
    digital and business environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Embodying organizational agility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Embracing Agile frameworks for collaboration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amplifying team efficacy with Scrum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facilitating effective collaboration through Scrum collaboration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Embracing the **Team-of-Teams** (**ToT**) approach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Scrum is the reference Agile framework for the practices taught in this chapter.
    Though not necessary, having a basic understanding of Agile practices and frameworks,
    such as Scrum, will help you understand the information provided. For additional
    learning, we recommend Cecil Rupp’s book *Scaling* *Scrum Across* *Modern* *Enterprises*:
    *Implement* *Scrum* *and* *Lean-Agile* *Techniques* *Across* *Complex* *Products,
    Portfolios, and Programs in* *Large Organizations*.12'
  prefs: []
  type: TYPE_NORMAL
- en: Embodying organizational agility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In an era where rapid change and unpredictability dominate the business landscape,
    organizations are compelled to adapt and evolve swiftly. Embodying organizational
    agility is no longer just a competitive advantage – it’s a fundamental requirement
    for survival and sustained success. As we delve into this section, we’ll explore
    what it truly means for an organization to be Agile, its benefits, and its transformative
    impact on every facet of a business.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the foundations of business agility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At its core, agility is built on a framework of principles, practices, and behaviors
    that equip organizations to maneuver effectively through complex environments.
    It’s not merely about reacting quickly but understanding and anticipating market
    dynamics to make informed decisions.
  prefs: []
  type: TYPE_NORMAL
- en: Central to this adaptive prowess is the embrace of fault-tolerant experimentation.
    This practice urges organizations to encourage innovation through trial and error,
    understanding that occasional missteps can offer critical insights, but minimizing
    risks through small and frequent change iterations. The freedom to test, learn,
    and iterate becomes a driving force behind true agility.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond the buzzword, agility is a structured approach that relies on clear communication,
    collaboration, continuous learning, and adaptability. This chapter will explore
    the foundational elements that make up organizational agility, enabling businesses
    to navigate with foresight and fluidity in an ever-changing landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Applying Agile principles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Principles are fundamental truths or beliefs. However, Agile principles go beyond
    mere suggestions. To act on them, we need to establish a new mindset emphasizing
    customer collaboration, a willingness to respond to change, and a focus on delivering
    real value quickly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Business agility is grounded in principles that enable organizations to respond
    rapidly and efficiently to changes in their external environment. Here are some
    fundamental principles that support business agility:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Customer-centricity**: Prioritize customer needs and feedback, ensuring products
    and services are continually aligned with their changing demands.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adaptability**: Cultivate a willingness and capability to change direction
    quickly in response to new information or changing circumstances.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous improvement**: Always look for ways to enhance processes, products,
    and services through iterative feedback loops.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Empowerment**: Trust and empower teams and individuals to make decisions
    while fostering a sense of ownership and accountability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration**: Promote cross-functional teamwork and open communication
    to ensure alignment and collective problem-solving.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simplicity**: Keep processes as simple as possible, but not too simple, removing
    unnecessary bureaucracy and complexity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Value-driven decision-making**: Focus on activities that deliver the most
    significant value to the organization and its customers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transparency**: Maintain open communication channels and provide visibility
    into processes, decisions, and performance metrics.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quick feedback loops**: Implement practices to quickly obtain feedback on
    products, services, and processes to make rapid adjustments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Innovation and experimentation**: Encourage a culture of innovation where
    intelligent risks are taken, and learnings from failures are embraced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learning mindset**: Invest in continuous learning and development, staying
    updated with technical capabilities, market trends and evolving customer needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resilience**: Develop the capability to overcome setbacks and adapt to new
    challenges or changes in the business environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By instilling these principles within your team and across your organization,
    you can pave the way for an adaptive and responsive business that remains attuned
    to market demands.
  prefs: []
  type: TYPE_NORMAL
- en: As you progress through this chapter, you will learn how to translate Agile
    principles into strategic advantages. By recognizing how agility strengthens a
    company’s position in the market, you will be equipped to shape decisions that
    enhance competitiveness.
  prefs: []
  type: TYPE_NORMAL
- en: Responding with agility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At its core, Agile methodologies emphasize responsiveness. They ensure organizations
    remain nimble, adjusting swiftly to market dynamics, business strategies, and
    new opportunities. The essence of Agile is its iterative and incremental approach,
    allowing for rapid evolution in response to continuous customer demands, competition,
    and market influences.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll explore what it means to be responsive over the following subsections.
  prefs: []
  type: TYPE_NORMAL
- en: Supporting Lean practices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Agility and Lean thinking go hand-in-hand. Lean focuses on removing inefficiencies
    and optimizing productivity. Later, you will learn that Value Stream Management
    (VSM) is a Lean approach to assess and prioritize the potential impact of proposed
    changes.
  prefs: []
  type: TYPE_NORMAL
- en: However, identifying and eliminating waste is just the start. Once Lean sets
    the direction by highlighting inefficiencies, it’s often Agile teams that step
    in with their adaptive, iterative methods to design and implement solutions that
    genuinely realize Lean’s objectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a closer look at how Agile teams can support Lean improvement objectives:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Delivering customer-centric value**: Agile teams refine and adapt solutions
    to ensure they continuously align with evolving customer desires, emphasizing
    constant stakeholder feedback'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Eliminating waste**: While Lean identifies waste, Agile teams design adaptive
    solutions to bridge gaps, enhancing productivity and eliminating inefficiencies
    in every iteration'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Streamlining** **workflows**: Agile teams further the Lean initiative by
    making workflows more efficient, leveraging collaboration and iterative feedback
    to refine processes continuously'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Aligning production and demand**: While Lean sets the balance, Agile teams
    ensure that solutions are flexibly tailored to meet changing market demands and
    shifts in priorities'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reducing work in process (WIP)**: Agile teams address excessive WIP, focusing
    on prioritized tasks and breaking projects into sprints for aligned value delivery'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In essence, while Lean Flow improvement opportunities help guide the work, by
    highlighting areas for waste and constraint elimination, it’s the Agile teams,
    with their flexible and collaborative approach, that bring these strategies to
    fruition. They are the problem solvers, the innovators, and the builders that
    turn Lean objectives into actionable results.
  prefs: []
  type: TYPE_NORMAL
- en: Leaving the comfort of tradition
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This section discusses the traditional approach to managing projects, often
    called the Waterfall approach. You may already know this information, so feel
    free to skip this section. But, if you are unfamiliar with traditional project
    management practices, this information is vital to grasp how Agile practices differ.
    Moreover, there are still many areas where the Waterfall approach is better suited
    to managing large or complex projects where evolutionary change is not feasible.
  prefs: []
  type: TYPE_NORMAL
- en: The so-called Waterfall model is at the heart of the traditional approach to
    development. Characterized by its sequential and plan-driven workflow, this model
    has been a mainstay in various industries, especially those where precision, predictability,
    and stability are paramount and possible.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, the Waterfall model still works well when the underlying activities
    of a product lifecycle are well understood, have little variability, and can be
    planned upfront. For example, the Waterfall model’s linear-sequential and plan-driven
    approach to project management works well in large and complex construction activities
    where the design, development, testing, and deployment processes are well understood
    and not likely to change significantly.
  prefs: []
  type: TYPE_NORMAL
- en: So, let’s take a quick look at the fundamental characteristics that define the
    traditional project management approach.
  prefs: []
  type: TYPE_NORMAL
- en: Key features of the Waterfall model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are some of the key features of the Waterfall model:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Contractual constraints**: Projects initiated under this model are tightly
    bound by predefined constraints, encompassing scope, budget, schedule, benefits,
    quality, and risks. Often, these specifics are carefully detailed in formal charters
    or contract agreements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linear-sequential workflows**: One phase follows the completion of another,
    ensuring a systematic, step-by-step progression.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Plan-centric**: A significant emphasis is placed on planning, often before
    any learning has occurred, with little room for mid-course adjustments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Formalized change management**: Since the goal is to plan in advance, changes
    are not typically welcomed, and significant changes may not be feasible - such
    as adding a new floor to a building under construction. Yes, it’s possible, but
    usually not practical.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overly-detailed documentation**: Detailed documentation is not just encouraged
    but is often deemed necessary, providing a comprehensive record of every stage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Heavyweight processes**: The development model is predicated on robust, often
    cumbersome processes with stringent guidelines and standards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strengths of the Waterfall model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These are some of the strengths of the Waterfall model:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Well-defined projects**: The model thrives in scenarios where there’s clarity
    in requirements and processes. Therefore, when a customer’s needs, architectural
    considerations, designs, and methods are well-defined and not anticipated to undergo
    significant transformations, the Waterfall model is an excellent fit. For example,
    its often appropriate for constructing ships, buildings, utilities, and large
    infrastructural projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limitations of the Waterfall model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some limitations of the Waterfall model that Agile practices aim to address
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Inflexibility to change**: Waterfall’s linear approach makes it difficult
    to incorporate changes once the project is underway, unlike Agile’s IID approach'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delayed feedback and testing**: Software testing in Waterfall occurs after
    all development is completed, leading to late discovery of issues, whereas Agile
    emphasizes continuous testing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Longer time to market**: Waterfall’s phase-based structure often results
    in slower product delivery, in contrast to Agile’s quicker iterative releases
    of incremental value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limited customer engagement**: Customer involvement in Waterfall is minimal
    after the requirements stage, unlike Agile’s regular customer collaboration'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource inefficiencies**: Waterfall can lead to delays while waiting for
    other phases, whereas Agile and Lean ensure continuous customer engagement and
    better resource use'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In rapidly changing industries, where business requirements, market prospects,
    and customer needs constantly evolve, the Waterfall model often struggles to keep
    pace. Its rigidity often clashes with the demands of dynamic environments. In
    such cases, a development model that embraces change is essential for evolving
    business systems and processes.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Our intent in highlighting the limitations of the Waterfall model is not to
    disparage its efficacy. Instead, it emphasizes that while it has its place, modern
    business challenges often necessitate a more adaptable approach.
  prefs: []
  type: TYPE_NORMAL
- en: The following sections will explore Agile practices, highlighting how they more
    effectively address these dynamic needs.
  prefs: []
  type: TYPE_NORMAL
- en: Evolving to agility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The shortcomings of the traditional Waterfall model, especially in dynamic business
    environments, led to the rise of “lightweight” development methodologies. These
    methods originated in the software industry, defined by software engineers dissatisfied
    with Waterfall’s rigidity. These engineers, constantly under pressure for failing
    to meet frequently shifting requirements and wrestling with unrealistic deadlines,
    envisioned an alternative approach to development that was more accommodating
    and responsive.
  prefs: []
  type: TYPE_NORMAL
- en: 'A list of the better-known lightweight software development approaches is shown
    in *Figure 2**.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 2.1 – Lightweight software developme\uFEFFnt methodologies](img/B21818_02_1.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 2.1 – Lightweight software development methodologies
  prefs: []
  type: TYPE_NORMAL
- en: 'Although each lightweight method is unique, they share the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Small teams**: These methods advocate for teams that are autonomous, self-directed,
    and complete with the diverse skill sets essential to carry out their assigned
    tasks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Iterative development cycles**: A foundational tenet, these development and
    delivery cycles are typically brief, spanning one to four weeks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Incremental enhancements**: Rather than attempting a ‘Big Bang’ delivery,
    the focus shifts to breaking work down and implementing new capabilities, features,
    and functions incrementally with each new iteration'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product focus**: Moving away from the short-lived nature of projects, the
    emphasis in Agile is on continuous enhancement and support for software products
    throughout their economically viable life cycle'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customer-centricity**: Responsiveness to customers’ needs and priorities,
    plus a commitment to aligning each increment with customer feedback, is a hallmark
    of Agile-based practices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Change embracement**: Change isn’t merely tolerated; it’s embraced, ensuring
    adaptability remains at the heart of the development process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: It’s crucial to underscore that while these methodologies were considered “lightweight,”
    it isn’t a commentary on their robustness or effectiveness. Instead, it’s an acknowledgment
    of their simplified processes that enables teams to pivot in the face of evolving
    requirements effortlessly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that you understand how Agile has advanced beyond the Waterfall model for
    most software development projects, let’s quickly discuss one area where there
    is still some debate regarding the best approach: **Commercial Off-The-Shelf**
    (**COTS**) software.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Managing COTS implementations: Agile versus Big-Bang'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many business and IT executives believe that enterprise-class Commercial Off-The-Shelf
    (COTS) software cannot be effectively deployed using Agile’s iterative and incremental
    development practices, as they require the entire solution to be fully operational
    from the start. Consequently, they may view Waterfall or Big-Bang approaches as
    more suitable for delivering a complete business solution all at once.
  prefs: []
  type: TYPE_NORMAL
- en: While we understand these concerns, we believe that Waterfall or Big-Bang (i.e.,
    all at once) approaches may not necessarily offer a significant advantage. For
    instance, if your organization already has well-defined competitive processes,
    compliance controls, and financial and reporting requirements, replicating these
    within a new system may prove more complex and challenging than anticipated.
  prefs: []
  type: TYPE_NORMAL
- en: COTS software provides economic benefits by reducing development time and costs
    through pre-built, tested solutions. However, achieving a true competitive advantage
    often requires more than what comes out of the box. Implementing COTS typically
    involves substantial customization, integration, and data migration to align with
    specific business needs. The greater the divergence between your business processes,
    information requirements, and reporting needs compared to the capabilities of
    the COTS software, the more customization will be required.
  prefs: []
  type: TYPE_NORMAL
- en: Addressing compliance issues
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Compliance** is a critical concern for many organizations, encompassing areas
    such as regulatory, financial, operational, legal, and corporate requirements.
    For instance, public companies must adhere to **Sarbanes-Oxley** (**SOX**) requirements,
    which mandate the implementation of primary and secondary controls to mitigate
    risks. Since there is no standard set of SOX controls—varying by company size,
    industry, and risk types—organizations must tailor their approaches accordingly.
    SOX also mandates annual reporting to demonstrate accurate and secure financial
    reporting, driving customization requirements for Commercial Off-The-Shelf (COTS)
    implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When addressing compliance, both Agile and Big-Bang approaches offer distinct
    pros and cons:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Agile**: Provides flexibility and continuous feedback, which is beneficial
    for adapting to evolving compliance requirements. However, Agile may struggle
    with the rigorous documentation and comprehensive controls required by strict
    regulations like SOX. Additionally, rolling out customized processes, controls,
    and reports can be time-consuming and complex.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Big-Bang**: Ensures a comprehensive implementation of business process customizations,
    data management, reporting, and compliance controls, which can streamline meeting
    both business and regulatory requirements. However, this approach involves higher
    risks and longer development cycles, potentially complicating audits and increasing
    the likelihood of significant issues. The extended timeline and accumulated costs
    can delay deployment and heighten the risk of discovering problems late in the
    process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the end, neither Waterfall nor Big-Bang approaches will deliver a complete
    working solution faster. However, Waterfall and Big-Bang approaches carry greater
    risks and potential delays due to the late discovery of issues, bugs, and defects.
    Therefore, we recommend using Agile practices, which support incremental roll-outs
    of new functionality throughout the development life cycle, offering ongoing improvements
    and adaptability. Even if your release deployment needs to be delayed incorporating
    necessary business processes and controls, you will know that you have a more
    robust solution to deploy when it is ready.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand the early foundations upon which Agile values and principles
    are built, let’s look at how the business development landscape has shifted.
  prefs: []
  type: TYPE_NORMAL
- en: Transitioning to product-oriented thinking
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Agile methods signify more than just a tweak in development practices; they
    represent a holistic change in how businesses approach product and service delivery.
    They move away from managing projects to focusing on value delivery across the
    economic lifecycles of our products and services.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look a little more closely at how these concepts play out.
  prefs: []
  type: TYPE_NORMAL
- en: In the rapidly evolving digital landscape, the outdated approach of organizing
    projects, with their finite timelines and clear endpoints, is no longer feasible
    for businesses aiming for sustainability and continuous innovation.
  prefs: []
  type: TYPE_NORMAL
- en: In his seminal work *Project to Product*, Mik Kersten underscores the necessity
    to pivot from project-centric mindsets to product-oriented thinking.3 Unlike projects,
    which often prioritize short- term goals and tend to operate in silos, a product-centric
    approach is holistic, emphasizing enduring value delivery and iterative refinement.
    Organizations can better align their IT endeavors with business outcomes by focusing
    on products and fostering a more integrated, responsive, and adaptive IT ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: This transition promotes a culture where teams are invested in the long-term
    success and evolution of what they build rather than just ushering a project to
    its conclusion and moving on. This shift is not just a change in terminology.
    It represents a profound transformation in organizational culture, strategy, and
    execution, making businesses more agile and resilient in the face of technological
    disruption.
  prefs: []
  type: TYPE_NORMAL
- en: We must note that Kersten’s book emphasizes process efficiency and flow, which
    are lean concepts. However, Agile prioritizes adaptability and customer-centric
    iteration, and both development approaches are essential for modern product development.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at how a product-oriented philosophy plays out in Agile.
  prefs: []
  type: TYPE_NORMAL
- en: '**Iterative and incremental development**: This approach embraces cyclical
    development processes, rolling out new product and service functionality across
    a series of iterative increments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rapid value delivery**: Due to its iterative nature, Agile ensures that new
    value reaches customers faster, enhancing responsiveness and adaptability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rethinking Waterfall**: Agile doesn’t completely discard the steps of the
    traditional Waterfall model but re-imagines it. By incorporating Waterfall’s life
    cycle steps into repeating plan-do-check-adjust (PDCA) cycles, Agile transforms
    the traditional single-pass flow into frequent, iterative and incremental development
    cycles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The essence of Agile is adaptability. It allows organizations to remain attuned
    to shifting needs and priorities, ensuring they’re not just reacting to change
    requests but proactively steering their development processes to address customer
    needs and priorities.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have defined the characteristics and principles of agility, let’s
    look at an event that brought Agile to the forefront of software development practices
    - The Manifesto for Agile Software Development, and the Agile methodology that
    became the de facto standard at the small team level, Scrum.
  prefs: []
  type: TYPE_NORMAL
- en: Embracing Agile frameworks for collaboration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will revisit the event that brought Agile into the mainstream
    - “*The Manifesto for Agile Software Development*” - and the leading lightweight
    software development methodology that followed: the Scrum framework. We’ll start
    by revisiting the Agile Manifesto to understand its role in shaping modern agile
    thinking.'
  prefs: []
  type: TYPE_NORMAL
- en: Rediscovering the Agile Manifesto
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Utah’s snowy peaks of the Wasatch Mountains, a landmark event transpired
    between February 11 to 13, 2001, at The Lodge at Snowbird ski resort. Seventeen
    renowned thought leaders from various corners of the software development industry
    convened. Their goal? To bridge their methodologies and discover a unified approach
    to software development. From this summit, the Manifesto for Agile Software Development
    was born. And it has become the defining description of what it means to be an
    Agile software development organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'The manifesto (source: [https://agilemanifesto.org/](https://agilemanifesto.org/))
    reads the following. We are uncovering better ways of developing software by doing
    it and helping others do it. Through this work we have come to value:'
  prefs: []
  type: TYPE_NORMAL
- en: Individuals and interactions over processes and tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working software over comprehensive documentation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer collaboration over contract negotiation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responding to change over following a plan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '"While we acknowledge the value of the components on the right, we believe
    those on the left hold greater significance."'
  prefs: []
  type: TYPE_NORMAL
- en: 'The manifesto also outlines the Principles behind the Agile Manifesto. But
    since we provided a modern list of Agile principles earlier in this chapter, we
    won’t list the 12 principles here. If you want to learn more, you can find them
    here: [https://agilemanifesto.org/principles.html](https://agilemanifesto.org/principles.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: This manifesto was more than a statement. It provided the collective wisdom
    of pioneers who sought to break free from the shackles of conventional, documentation-heavy
    software development processes. It marked the genesis of an approach rooted in
    collaboration, adaptability, and delivering tangible value.
  prefs: []
  type: TYPE_NORMAL
- en: So, time moves on, and as it does, people inevitably learn from their experiences
    and question what has become dogma. That statement is undoubtedly true for the
    Agile Manifesto. While still quoted often, some detractors feel we need to refine
    the original thinking. In the next section, you’ll discover some critiques and
    new thinking about what agility means today.
  prefs: []
  type: TYPE_NORMAL
- en: Moving beyond the Agile Manifesto
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Agile Manifesto has been the foundation of the Agile movement, driving change
    in software development and project management. Over two decades later, the world
    of technology has evolved drastically, and so have the contexts in which Agile
    practices are applied. This has led to debates and discussions about the current
    relevance of the values and principles laid out in the manifesto. So, let’s explore
    some of the current thinking and the evolution of the Agile movement.
  prefs: []
  type: TYPE_NORMAL
- en: Expanding Agile’s horizons
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Initially designed for software development, Agile methodologies have expanded
    into other business domains, and even hardware development. With this expansion,
    there’s been a realization that some principles of the Agile Manifesto, while
    universal in spirit, may require rethinking to fit contexts outside of software
    development. For instance, the focus on working software as the primary measure
    of success needs to be translated differently in non-software domains.
  prefs: []
  type: TYPE_NORMAL
- en: This issue is a primary driver for our developing the BASE conceptual model
    and pattern language, which we’ll introduce in [*Chapter 9*](B21818_09.xhtml#_idTextAnchor426)*,
    Defining a Business Agility System for the* *Enterprise (BASE)*.
  prefs: []
  type: TYPE_NORMAL
- en: Harmonizing continuous delivery with Agile
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Agile Manifesto has always emphasized customer collaboration and the ability
    to adapt to change. These are human-driven endeavors. However, with the exponential
    growth in technology and user expectations, there’s been an undeniable push for
    continuous delivery and streamlined operations through advanced tooling, integrations,
    and automation.
  prefs: []
  type: TYPE_NORMAL
- en: This modern demand for seamless software delivery has drastically reshaped our
    understanding of agility. Continuous integration and continuous delivery (CI/CD)
    pipelines, augmented by DevOps practices and tooling, introduce frequent integration
    of work, streamlined information flows, and a heavy reliance on automation.
  prefs: []
  type: TYPE_NORMAL
- en: This modern approach speeds up software development work and requires a shift
    in mindset. Being Agile is no longer just about iterative cycles and feedback
    loops; it now entails a deep integration of these cycles into continuous delivery
    processes, ensuring that agility permeates every stage of the software development
    lifecycle.
  prefs: []
  type: TYPE_NORMAL
- en: The manifestation of this shift is evident in the rise of DevOps and VSM. These
    modern paradigms champion holistic value delivery and challenge the traditional
    boundaries of siloed iterative development.
  prefs: []
  type: TYPE_NORMAL
- en: Merging the cadence of Agile iterations with the consistency of continuous delivery
    presents a dynamic blend, redefining how businesses approach product development.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll discuss methods to integrate Lean and Agile cadences later in this book,
    starting with [*Chapter 8*](B21818_08.xhtml#_idTextAnchor378), *Implementing*
    *Basic* *Lean-Agile* *Solutions* *Teams* *(BLAST)*. For now, it’s important to
    understand that we can have more than one team working in collaboration across
    a product life cycle. This emphasis on product development has profoundly influenced
    the essence of operating as a value-centric Agile business, distinct from managing
    constraint-based projects.
  prefs: []
  type: TYPE_NORMAL
- en: Expanding digital horizons
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In the section on transitioning to product-oriented thinking, we discussed the
    importance of emphasizing products over projects. However, the topic extends beyond
    just managing software delivery products.
  prefs: []
  type: TYPE_NORMAL
- en: As we transition from a project-centric to a product-centric mindset, we must
    recognize that products include all types of products and services, many of which
    are integrated as solutions. The *Internet of Things (IoT)* is a good example.
    Additionally, we need to be aware that software products can support value stream
    improvements for the organization, whether internally and externally facing. Today,
    everything from tangible products to processes and services can be enhanced through
    digital tools.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 4*](B21818_04.xhtml#_idTextAnchor203)*, Driving Improvements with
    Value Stream Management (VSM)*, we’ll underscore the importance of a comprehensive
    organizational improvement strategy, one that goes beyond just software. You’ll
    also learn how to make product-oriented, value-based improvement assessments.
  prefs: []
  type: TYPE_NORMAL
- en: Given the constraints on resources, it’s imperative to strategize where we can
    maximize returns on our investments. It may not always be linked to software.
    Yet, software and digital solutions can often be catalysts for transforming a
    process or enhancing a tangible product or service.
  prefs: []
  type: TYPE_NORMAL
- en: Given that all organizations have limited resources, we must evaluate where
    we get the biggest bang for our investments, which might not be software-related.
    Still, in many cases, software and digital services can facilitate a change in
    a process and a physical product or service. The generic VSM methods and tools
    we’ll introduce in [*Chapter 4*](B21818_04.xhtml#_idTextAnchor203) and the business
    intelligence strategy you’ll learn about in [*Chapter 10*](B21818_10.xhtml#_idTextAnchor450),
    *Enhancing Decision-Making in the Lean-Agile Enterprise*, will help you make those
    types of business assessments and investment decisions.
  prefs: []
  type: TYPE_NORMAL
- en: Embracing the rise of business agility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Agile transformation has moved beyond IT departments. Organizations now see
    agility as a business-wide competency. This has led to discussions on whether
    the Agile Manifesto’s values sufficiently address broader organizational concerns,
    such as strategy, governance, and culture. Business agility encompasses a more
    holistic view, considering market adaptability, organizational flexibility, and
    cultural agility. While the Agile Manifesto provides a strong foundation, some
    argue it may not be comprehensive for this broader scope.
  prefs: []
  type: TYPE_NORMAL
- en: Revisiting the role of individuals
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Agile Manifesto values “*individuals* *and* *interactions* *over* *processes*
    *and* *tools*.” However, with the rise of digital tools and platforms that facilitate
    Agile practices (such as Jira, Trello, or Slack), there’s an ongoing debate about
    the balance between human interactions and the role of tools in enhancing collaboration.
    While tools help us visualize and streamline processes, the essence of Agile remains
    in human cooperation. Finding the right balance is an ongoing challenge.
  prefs: []
  type: TYPE_NORMAL
- en: Adapting to globalization with a distributed team
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The manifesto emphasizes face-to-face communication. However, the global nature
    of today’s businesses often means distributed teams working across time zones.
    The COVID-19 pandemic further amplified remote working. This has led to questions
    about how the manifesto’s principles apply in such distributed, remote settings.
    Effective agility in this new context requires a mix of digital tools, revised
    communication strategies, and trust-building.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, while the Agile Manifesto remains a foundational document, the evolution
    of the Agile movement requires continuous reflection and adaptation. The principles
    laid out in the manifesto provide a compass, but the journey of agility is dynamic,
    shaped by the changing landscapes of technology, business, and global contexts.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you should have a relatively comprehensive understanding of what
    it means to achieve business agility, both past and present. Now, let’s discuss
    the leading Agile framework, Scrum, and how it supports business agility.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: This chapter uses Scrum as its reference Agile framework for individual team
    environments. We will also introduce team-of-teams (ToT) concepts for more extensive
    development and problem-solving requirements that require multiple teams to collaborate
    and integrate their work.
  prefs: []
  type: TYPE_NORMAL
- en: Charting Scrum’s ascendancy in Agile practices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Scrum framework stands out among the various lightweight software development
    methodologies, emerging as the predominant approach for small teams. For example,
    the *16th* *Annual* *State* *Of* *Agile Report* (2022) by Digital.ai underscores
    its popularity. The report notes that “*Scrum continues to lead,* *increasing*
    *from* *58%* *in* *the* *14*th *survey* *to* *87%* *in* *the* *current* *survey.*”
    The Scaled Agile Framework® (SAFe®) remains the most popular choice for enterprises,
    yet only 26% of respondents reported using it, which is a decline of over 50%
    compared to the previous year. However, the survey’s scaling agility question
    changed which might account for the majority of this decline.
  prefs: []
  type: TYPE_NORMAL
- en: The official Scrum Guide ([https://scrumguides.org/](https://scrumguides.org/))
    defines Scrum as “*a lightweight framework that assists individuals, teams, and
    organizations in deriving value through adaptive solutions for* *intricate challenges.*”
  prefs: []
  type: TYPE_NORMAL
- en: Scrum retains its leadership role for small teams because of its simplicity,
    flexibility, and proven success in promoting collaboration and adaptability in
    diverse project environments. Its iterative approach and emphasis on continuous
    feedback make it highly effective in delivering valuable products or solutions
    to complex problems quickly and responsively.
  prefs: []
  type: TYPE_NORMAL
- en: As we progress through this chapter, we’ll review how Scrum works. For now,
    it will be helpful to know that Scrum implements an iterative and incremental
    model of Agile via Sprints. Every Sprint, or development iteration, commences
    with a working hypothesis that can be tested. As the Sprint progresses, teams
    adjust incrementally, drawing from their observations and experiments.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll take a quick look at the Scrum events that guide the flow of work across
    a Sprint, as shown in *Figure 2**.2*, in the following subsection.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Scrum Sprint cycle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following diagram details the Scrum events that guide its workflow:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 2.\uFEFF2 – Scrum framework](img/B21818_02_2.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 2.2 – Scrum framework
  prefs: []
  type: TYPE_NORMAL
- en: Work starts with creating the **Product Backlog**, which is managed by the **Product
    Owner**, and incorporating input from various stakeholders, including the **Scrum
    Team** and customers. During **Product Backlog Refinement**, the Scrum Team clarifies
    the backlog items and their priorities. The Sprint begins with **Sprint Planning**,
    where the team selects the highest-priority work items from the Product Backlog,
    creating the **Sprint Backlog**. Sprints are **time-boxed** development cycles,
    which means the durations are fixed, regardless of whether the Scrum Team meets
    its Sprint Goal objectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Developers pull items from the Sprint Backlog based on their capacity. Ideally,
    any team member can handle any job, but specialization is sometimes required.
    The Daily Scrum is a daily, time-boxed 15-minute meeting to inspect progress toward
    the Sprint Goal and adapt the Sprint Backlog as necessary, adjusting the upcoming
    planned work as needed. The entire Scrum Team is responsible for creating a valuable,
    useful, and potentially releasable *Increment* every Sprint. Each iteration concludes
    with two events: the Sprint Review, where the increment is inspected, and the
    Sprint Retrospective, which allows the team to reflect on how to improve quality
    and effectiveness. The Scrum Master is accountable for the team’s effectiveness,
    helping it improve its practices and communication and removing barriers.'
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve introduced the basics of Scrum, let’s review why it works.
  prefs: []
  type: TYPE_NORMAL
- en: Applying Scrum’s foundational principles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'These are the two primary concepts that underpin Scrum:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Empiricism**: Scrum operates on the principle that knowledge is derived from
    practical experiences and iterative experimentation, making decisions based on
    observations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lean Thinking**: The Scrum Guide acknowledges the influence of Lean Thinking
    on Scrum, although it does not explicitly specify fundamental Lean principles,
    such as eliminating waste or improving value flow. However, Scrum shares several
    Lean concepts, such as focusing on adding value from the customers’ perspectives,
    delivering in short cycles, providing immediate feedback, respecting people, and
    improving continuously.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To optimize value delivery, combining Scrum with Lean’s comprehensive concepts
    is essential. To accomplish this objective, the BASE and BLAST frameworks integrates
    the work of multiple Lean-Agile teams to support product and value stream improvements,
    streamlining work, material, and information flows, recognizing and mitigating
    constraints, centering work around specific products and services, and eliminating
    wasteful processes.
  prefs: []
  type: TYPE_NORMAL
- en: Adapting to Scrum’s deliberate flexibility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scrum’s founders, Ken Schwaber and Jeff Sutherland, quickly point out that Scrum
    is an intentionally incomplete framework. Rather than prescribing a specific way
    of working or limiting the types of work it can be applied to, Scrum remains generically
    designed, offering broad applicability across various domains. In other words,
    Scrum provides a foundational framework to improve agility, whether the challenge
    lies in business, science, or technical problem-solving.
  prefs: []
  type: TYPE_NORMAL
- en: 'Scrum’s flexibility offers the following benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Widescale applicability**: Scrum’s versatile nature ensures that it is suitable
    for diverse problems or business domains, granting teams the flexibility to address
    various challenges.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Freedom of methodology**: Development teams are granted autonomy within the
    Scrum framework. They have the skills and knowledge necessary for their tasks
    and can choose the best methods and tools that align with their unique work requirements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Framework adherence**: While Scrum grants autonomy, it also emphasizes discipline.
    Every Scrum Team operates within the boundaries set by the framework. These guidelines
    serve as beacons, guiding Scrum team interactions and ensuring harmonious relationships.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In essence, Scrum provides a flexible yet structured environment, striking a
    balance between freedom of operation and the consistency of a framework. Note
    that a small team delivering the work is at the heart of every Sprint iteration.
    We’ll talk about that next.
  prefs: []
  type: TYPE_NORMAL
- en: Amplifying team efficacy with Scrum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whether you’re a newcomer or a seasoned professional, understanding the dynamics
    of small teams can redefine how you approach work. Their inherent strengths foster
    clear communication, trust, and swift decision-making, all of which are crucial
    tools in today’s business world. The Scrum framework capitalizes on these strengths,
    introducing roles and artifacts that seamlessly fit into your work patterns.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you’ll discover how embracing the advantages of small teams
    can boost your career, enhancing adaptability, collaboration, and tangible results.
  prefs: []
  type: TYPE_NORMAL
- en: Mastering the art of small teams
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When empowered and autonomous, small teams can act as potent problem-solving
    engines. Their limited size allows for nimbleness, a close-knit understanding
    among members, and a conducive environment for creativity and innovation.
  prefs: []
  type: TYPE_NORMAL
- en: Typically, an ideal small team in Scrum consists of fewer than 10 members. This
    size strikes a balance between diverse skills and manageable communication channels.
    Within such a group, every individual’s voice can be heard, leading to richer
    brainstorming and collaborative decision-making.
  prefs: []
  type: TYPE_NORMAL
- en: Small teams are better suited to address the intricate challenges with innovation
    and adaptability. In the following subsection, we’ll talk about how they foster
    an environment of collaboration and innovation.
  prefs: []
  type: TYPE_NORMAL
- en: Fostering a culture of collaboration and innovation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fostering an Agile culture is vital. By promoting an environment where everyone
    feels invested in the outcome, where innovation is rewarded, and where collaboration
    is second nature, teams become more than the sum of their parts. They evolve into
    cohesive units that drive solutions with unparalleled dedication.
  prefs: []
  type: TYPE_NORMAL
- en: Managing Agile-based teams requires a different approach to the traditionally
    hierarchical and department structure. Moreover, the need to achieve greater agility
    forces us to evolve our managerial and leadership strategies to foster a robust
    culture emphasizing collective responsibility, out-of-the-box thinking, and seamless
    collaboration. And everyone’s roles and responsibilities must change. Fortunately,
    Scrum provides some guidance in this area.
  prefs: []
  type: TYPE_NORMAL
- en: Defining team roles and responsibilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Scrum, the emphasis isn’t placed on rigidly defined roles and responsibilities
    but rather on clear accountabilities. The Scrum Team consists of the following
    three defined accountabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Developers**: Developers execute tasks to achieve Sprint Goals, creating
    usable Increments of value-based deliveries during each Sprint. They bring a diverse
    skill set tailored to their specific domain, ensuring the team remains a self-sufficient
    unit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product Owner**: Bridging the business and its consumers, the Product Owner
    collaborates with stakeholders to maximize the value of the product resulting
    from the work of the Scrum Team.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scrum Master**: The Scrum Master is the cohesive force for the team, accountable
    for the Scrum Team’s effectiveness. They address roadblocks provide guidance on
    Scrum, and ensure the team remains focused by guarding against external disruptions
    during a Sprint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The three roles in Scrum are minimally defined to ensure clarity of responsibilities
    and promote efficient communication within the team. The same simplicity carries
    over to other defined Scrum concepts, such as its artifacts, as described earlier.
  prefs: []
  type: TYPE_NORMAL
- en: This completes our section on leveraging small teams as problem-solving engines.
    Now, we will move on to the importance of collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Facilitating effective collaboration through Scrum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the dynamic ecosystem of the modern professional world, collaboration and
    adaptability are not just admirable skills; they are necessities. This isn’t just
    about getting along with colleagues; it’s about orchestrating multiple teams with
    expertise and objectives, into a cohesive unit that consistently delivers value.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, the principles and events of Scrum provide a roadmap to enhancing
    these collaborative efforts. By understanding and applying the empirical pillars
    of Scrum – *Transparency*, *Inspection,* and *Adaptation* – and acquainting yourself
    with its events, you’ll foster better teamwork, streamline processes, anticipate
    challenges, and swiftly adapt to change.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll discuss the broader collaboration challenges and then present Scrum
    as a potential solution.
  prefs: []
  type: TYPE_NORMAL
- en: Encouraging cross-team collaborations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Large organizations are often involved in numerous projects spanning diverse
    value streams and requiring support from multiple teams. While each team might
    have its area of responsibility or specialty, the overarching objective is best
    achieved through effective collaboration between these units. Such cross-team
    interactions don’t merely facilitate operations; they are pivotal in enhancing
    the organization’s agility.
  prefs: []
  type: TYPE_NORMAL
- en: Grasping the intricacies of cross-team interdependencies is essential for business
    agility. It requires a strategic approach to synchronize diverse workflows, integrate
    tasks, and manage dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: Later in this chapter, we will discuss Scrum-of-Scrum (SoS) and Team-of-Team
    (ToT) structures to support multiple streams of work. They offer a structured
    yet flexible framework to bolster this collaborative approach and harmonious synchronization
    across multiple teams. As we progress, we will elaborate on these concepts, providing
    insights into holistic team integrations.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, first things first: the next two subsections delve into the foundational
    principles of Scrum’s empiricism and its five events. As you familiarize yourself
    with these concepts, consider their relevance and applicability in cross-team
    collaborations. Employed sensibly, these tools and techniques can be significant
    assets in your pursuit of organizational agility and professional growth.'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the three pillars of Scrum’s empiricism
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Embracing the nuances of Scrum requires a deep dive into its foundational tenets.
    In this subsection, we’ll be dissecting the empirical backbone of Scrum: the three
    indispensable pillars that hold the house of Scrum up – *Transparency*, *Inspection*,
    and *Adaption*:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transparency**: Transparency demands complete clarity on the team’s strategies,
    goals, and results. By utilizing tools such as JIRA and visual charts, every process
    step is clear to both the team and stakeholders, ensuring decisions are based
    on Scrum’s actual state.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inspection**: Inspection involves consistent and detailed assessments of
    the team’s progress toward Sprint objectives. Through Scrum’s structured events,
    deviations are swiftly identified, aligning outcomes with aspirations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adaptation**: Should the results fall short of expectations, immediate corrective
    actions are vital. Scrum teams are committed to continuous adaptation, adjusting
    promptly as insights from inspections emerge.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By understanding how these three pillars work together, you’ll be better equipped
    to implement Scrum events effectively, enhancing not just project outcomes but
    also team dynamics. So, let’s move on to see how these principles interplay, guiding
    teams to make informed decisions, enabling continuous growth, and supporting proactive
    adaptations across the five Scrum events.
  prefs: []
  type: TYPE_NORMAL
- en: Embracing the team of teams (TOT) approach
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s business landscape, singular teams, regardless of their proficiency,
    often find themselves challenged by intricate problems that necessitate a broader,
    collective approach. This section highlights the importance of collaboration,
    from recognizing the limits of individual teams to strategically coordinating
    multiple units. In scrum parlance, these integrated team concepts are known as
    Scrum-of-Scrums (SoS).
  prefs: []
  type: TYPE_NORMAL
- en: SoS is a concept that naturally evolved from the Scrum framework as organizations
    tried to scale their Agile practices to larger groups or teams. The origin of
    SoS is not attributed to a single individual but emerged as a way for multiple
    Scrum teams to coordinate and communicate effectively. In this book, we’ll use
    a more general term, team-of-teams (ToT).
  prefs: []
  type: TYPE_NORMAL
- en: The ToT approach has been popularized in the Scaled Agile Framework® as an Agile
    Release Train (ART), the description of which is beyond the scope of this book.
    However, for those who want to dive deeper, check out SAFe® Distilled by Richard
    Knaster and Dean Leffingwell.5
  prefs: []
  type: TYPE_NORMAL
- en: By exploring the ToT concept and insights from leaders such as General Stanley
    McChrystal, our objective is to equip you with the understanding required to manage
    and lead in large and complex environments. This knowledge serves as a foundation
    for enhancing enterprise agility, fostering inter-team synergy, and ensuring cohesive,
    value-driven outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: No matter how efficient a team is, there are boundaries to what it can achieve
    alone, especially when dealing with large-scale complexities. Recognizing this
    limitation is the first step to creating a holistic, collaborative approach.
  prefs: []
  type: TYPE_NORMAL
- en: When facing large-scale complexities, you will learn to recognize the limitations
    of relying solely on individual teams and understand the necessity of extensive
    collaboration across multiple teams to address these multifaceted challenges.
  prefs: []
  type: TYPE_NORMAL
- en: Orchestrating the combined efforts of multiple teams requires skill. It’s not
    about micro-management but harmonizing. Regular cadence and synchronization, shared
    tools, and platforms, along with fostering a culture of open communication, ensure
    that the multiple cogs of this vast machine are aligned.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, you will enhance the ToT’s capability to steer collaborative endeavors,
    synchronize efforts, ensure harmony across teams, and direct the collective toward
    continuous value delivery.
  prefs: []
  type: TYPE_NORMAL
- en: In managing all the activities across a product’s life cycle, except for the
    very smallest of companies, one Agile team cannot do it all. This is where the
    concept of a ToT becomes invaluable. It’s not just a scaling-up of resources;
    it’s about scaling collaboration, synchronization, and the shared ownership of
    outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: '**Integrated Workflow**: A team-of-teams approach promotes interconnected value
    delivery, where each team’s output feeds into another, ensuring collaborative
    rather than just sequential integration for success.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Managing dependencies**: Multi-team environments come with dependencies.
    Recognizing and addressing them proactively is critical. This approach provides
    an overarching perspective to anticipate and handle dependencies, preventing misalignments
    and delays.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Synchronized delivery**: More than individual milestones, a cohesive final
    product requires teams to align efforts. Scaled Scrum frameworks such as the **SoS**,
    SAFe® **Large Scale Scrum** (**LeSS**), and **NEXUS** facilitate this alignment,
    ensuring a unified solution that fulfills overarching objectives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Promoting collaboration**: The ToT mindset goes beyond task integration;
    it instills a sense of shared purpose, mutual respect, and collective drive, solidifying
    teams as parts of a cohesive whole.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In conclusion, as organizations strive to tackle more significant challenges
    and cater to diverse customer needs, the ToT concept becomes more than just a
    logistical necessity; it’s a strategic imperative. By fostering integrated workflows,
    addressing dependencies, synchronizing efforts, and nurturing a collaborative
    spirit, organizations can harness the collective strength of their teams, turning
    intricate challenges into groundbreaking solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Adopting insights from the ToT philosophy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The ToT approach is fundamental when dealing with Agile scaling frameworks such
    as the Scaled Agile Framework (SAFe®), LeSS, SoS, and others. These frameworks
    specifically address the challenges of scaling Agile across large enterprises
    with multiple teams working on interconnected components of a larger product or
    service.
  prefs: []
  type: TYPE_NORMAL
- en: 'The developers of these competing frameworks actively seek to differentiate
    their approaches from a value-added perspective. Still, we can find some common
    ground among them. Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adapting to complexity**: This involves highlighting that in complex environments,
    hierarchical structures and traditional management methodologies fall short. ToT
    concepts provide a structure that’s both flexible and integrated, allowing for
    faster decision-making in rapidly changing scenarios.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shared mission**: This is a crucial principle where everyone understands
    the mission and has access to the information they need to execute it. In the
    context of Agile teams, this means every team understands the broader product
    vision and how their work supports the larger and holistic vision.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Empowered execution**: Individual teams have autonomy and are empowered to
    make decisions. They’re not just following a set of predefined tasks but are dynamically
    adapting to the situation on the ground.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ToT Liaisons:** Introduce ToT liaison roles to improve communication and
    manage challenges and dependencies across teams.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These four guides help synchronize, coordinate, and integrate the work of multiple
    small teams, while also extending Agile principles and practices to a multi-team
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: It is beyond the scope of this book to evaluate these disparate approaches and
    frameworks for scaled Agile practices. However, for those who want to take a deeper
    dive, check out Cecil Rupp’s book, *Scaling Scrum Across Modern* *Enterprises*
    .2
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, *Solving Complex Business Problems with Agility*, we explored
    the transformative power of agility in addressing intricate business challenges.
    We examined the essence of organizational agility, its dynamic response to evolving
    circumstances, and its relationship with Lean practices to enhance efficiency.
    The Agile Manifesto provided foundational values shaping Agile’s trajectory, while
    the Scrum framework highlighted its strengths in iterative project management,
    emphasizing the use of small teams as problem-solving engines and the importance
    of transparency and continuous feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Collaboration was a key theme, underscoring the value of large-scale efforts
    in distributed environments, with insights from the ToT philosophy. These lessons
    equip you to harness agility for solving business problems, while offering a comprehensive
    understanding of Agile and Scrum methodologies. Looking ahead to [*Chapter 3*](B21818_03.xhtml#_idTextAnchor154)*,
    Establishing Lean Flows to Improve Productivity*, we will delve into Lean-oriented
    practices, Agile methods tailored to organizational contexts, and metrics tracking
    business outcomes. Join us to continue learning how to be both lean and agile.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: How many of the core principles of Agile can you recall?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: List how Agile teams can support Lean-oriented organizations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the two primary concepts underpinning Scrum?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the three defining Scrum team accountabilities?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the three artifacts of Scrum?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True or false: Scrum’s founders, Ken Schwaber and Jeff Sutherland, are quick
    to point out that Scrum is an intentionally incomplete framework.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the three pillars of Scrum’s empiricism?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the five essential events of Scrum?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why is the concept of ToT so important in Agile-based practices?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some of the commonalities across competing scaled Agile frameworks?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The core principles of Agile include customer-centricity, adaptability, continuous
    improvement, empowerment, collaboration, simplicity, value-driven decision-making,
    transparency, quick feedback loops, innovation and experimentation, learning mindset,
    and resilience.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Agile teams can support Lean organizations by:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Delivering customer-centric value**: Agile teams refine and adapt solutions
    to ensure they continuously align with evolving customer desires, emphasizing
    constant stakeholder feedback'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Eliminating waste**: When Lean identifies waste, Agile teams design adaptive
    solutions to bridge gaps, enhancing productivity and eliminating inefficiencies
    in every iteration.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Streamlining workflows**: Agile teams further the Lean initiative by making
    workflows more efficient, leveraging collaboration and iterative feedback to refine
    processes continuously.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Aligning production and demand**: While Lean sets the balance, Agile teams
    ensure that solutions are flexibly tailored to meet changing market demands and
    shifts in priorities.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reducing WIP**: Agile teams counteract excessive WIP highlighted by Lean,
    focusing on prioritized tasks and breaking projects into sprints for aligned tangible
    value delivery.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The two primary concepts underpinning Scrum are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Empiricism**: Scrum operates on the principle that knowledge is derived from
    practical experiences and iterative experimentation, making decisions based on
    observations throughout each Sprint'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lean Thinking**: While Scrum enhances agility and expedites delivery, it
    does not inherently encompass the complete breadth of Lean’s value-stream principles'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The three defining Scrum team accountabilities are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Developers**: Developers execute tasks to achieve Sprint Goals, bringing
    a diverse skill set tailored to their specific domain, ensuring the team remains
    a self-sufficient unit'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product Owner**: Bridging the business and its consumers, the Product Owner
    collaborates with stakeholders to define requirements, ensuring consistent delivery
    of customer-focused value efficiently'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scrum Master**: The Scrum Master is the cohesive force for the team, addressing
    roadblocks and ensuring the team remains focused by guarding against external
    disruptions during a Sprint'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The three primary Scrum artifacts are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Product Backlog**: A dynamic and prioritized list detailing all work required
    for a product, service, or other deliverables and managed by the Product Owner'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint Backlog**: A subset of the Product Backlog that comprises tasks handpicked
    by the developers for the upcoming Sprint'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Increment**: Represents tangible progress toward completing the Sprint Goal,
    which, in turn, represents a usable segment that contributes toward achieving
    the overarching Product Goal'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: True. Scrum’s founders, Ken Schwaber and Jeff Sutherland are quick to point
    out that Scrum is an intentionally incomplete framework. Developers are free to
    use whatever skills, method and tools they require within their domain of expertise.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The three pillars of Scrum’s empiricism are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Transparency**: Transparency demands complete clarity on the team’s strategies,
    goals, and results'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inspection**: Inspection involves consistent and detailed assessments of
    the team’s progress toward Sprint objectives'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adaptation**: Should the results fall short of expectations, immediate corrective
    actions are vital'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The five essential events of Scrum are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Sprints**: Sprints are time-boxed iterative development cycles that last
    between 1 to 4 weeks. They establish a consistent rhythm or cadence for the team’s
    workflow.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint planning**: As the kickoff to every Sprint, the Scrum team collaboratively
    defines the Sprint’s goals, ensuring they have a comprehensive understanding of
    the objectives. They also map out the specific tasks and assignments to realize
    Sprint’s vision and definition of done.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Daily Scrum**: The Daily Scrum is a 15-minute huddle where team members update
    one another on their progress over the past day, share plans for the next 24 hours,
    and highlight any impediments.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Retrospectives**: This reflective event occurs at Sprint’s culmination, offering
    teams a forum to dissect their processes and methods.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reviews**: Showcasing the fruits of the team’s labor from the concluded Sprint.
    Stakeholders, including customers and end-users, provide feedback, enabling the
    team to gauge the success of their efforts and gather insights for further enhancements.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Further Reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cecil ‘Gary’ Rupp, 2021\. Driving DevOps with Value Stream Management: Improve
    IT value stream delivery with a proven VSM methodology to compete in the digital
    economy. PACKT Publishing, Birmingham, UK.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Cecil Rupp, 2020\. Scaling Scrum Across Modern Enterprises: Implement Scrum
    and Lean-Agile techniques across complex products, portfolios, and programs in
    large organizations. PACKT Publishing, Birmingham, UK'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Kersten, M. (2018). Project to product: How to survive and thrive in the age
    of digital disruption with the flow framework. IT Revolution Press.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Rupp, C., & Beal, H. (2021). Driving DevOps with Value Stream Management: Improve
    IT value stream delivery with a proven VSM methodology to compete in the digital
    economy. Packt Publishing.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Knaster, Richard, and Dean Leffingwell. SAFe® 5.0 Distilled: Achieving Business
    Agility with the Scaled Agile Framework®. Addison-Wesley Professional, 2020.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
