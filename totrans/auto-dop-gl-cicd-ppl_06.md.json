["```\npackage com.hatsforcats;\nclass Login {\n    public static void main(String [] args) {\n        System.out.println(\"Welcome to Hats for Cats!\");\n    }\n}\n```", "```\nstages:\n    - build\n```", "```\ncompile-java-with-javac:\n    stage: build\n```", "```\n    image: openjdk:latest\n```", "```\n    script:\n        - javac src/com/hatsforcats/*.java -d target/\n```", "```\n        - ls target/com/hatsforcats\n```", "```\n        - cd target\n        - java com.hatsforcats.Login\n```", "```\nstages:\n    - build\ncompile-java-with-javac:\n    stage: build\n    image:openjdk:latest\n    script:\n        - javac src/com/hatsforcats/*.java -d target/\n        - ls target/com/hatsforcats\n        - cd target\n        - java com.hatsforcats.Login\n```", "```\n$ javac src/com/hatsforcats/*.java -d target/\n$ ls target/com/hatsforcats\nLogin.class\n$ cd target\n$ java com.hatsforcats.Login\nWelcome to Hats for Cats!\nCleaning up project directory and file based variables\nJob succeeded\n```", "```\n<project>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>org.hatsforcats</groupId>\n  <artifactId>login</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <properties>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n  </properties>\n</project>\n```", "```\npackage com.hatsforcats;\nclass Login {\n    public static void main(String [] args) {\n        System.out.println(\"Welcome to Hats for Cats!\");\n    }\n}\n```", "```\nstages:\n  - build\ncompile-java-with-maven:\n  stage: build\n  image: maven:latest\n  script:\n    - mvn compile\n    - ls target/classes/com/hatsforcats\n    - cd target/classes\n    - java com.hatsforcats.Login\n```", "```\n[INFO] Compiling 1 source file to /builds/cwcowell/hats-for-cats/target/classes\n[INFO] ---------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ---------------------------------------------------\n[INFO] Total time:  4.069 s\n[INFO] Finished at: 2022-04-11T21:22:28Z\n[INFO] ---------------------------------------------------\n$ ls target/classes/com/hatsforcats\nLogin.class\n$ cd target/classes\n$ java com.hatsforcats.Login\nWelcome to Hats for Cats!\nCleaning up project directory and file based variables\nJob succeeded\n```", "```\n#include <stdio.h>\nint main(void) {\n    puts(\"Welcome to Hats for Cats!\");\n    return 0;\n}\n```", "```\nstages:\n  - build\ncompile-c:\n  stage: build\n  image: gcc:latest\n  script:\n    - gcc login.c -o login\n    - ./login\n```", "```\n$ gcc login.c -o login\n$ ./login\nWelcome to Hats for Cats!\nCleaning up project directory and file based variables\nJob succeeded\n```", "```\n  artifacts:\n    paths:\n      - login\n```", "```\n  artifacts:\n    paths:\n      - target/classes/\n    exclude:\n      - target/classes/**/Test*\n```", "```\nstages:\n  - test\n```", "```\ninclude:\n  template: Code-Quality.gitlab-ci.yml\n```", "```\ndef register(username, password, phone, city, state, zip):\n    # TODO finish this code\n```", "```\ndef test_login():\n    # add code that tries to log in with good credentials\n    assert True\ndef test_login_bad_password():\n    # add code that tries to log in with a bad password\n    assert True\ndef test_login_no_password():\n    # add code that tries to log in with no password\n    assert False\n```", "```\nunit-tests:\n  stage: test\n  image: python:3.10\n  script:\n    - pip install pytest\n    - pytest test/\n```", "```\n  artifacts:\n    reports:\n      junit: unit_test_results.xml\n    when: always\n```", "```\ndef is_bob(name: str) -> bool:\n  if len(name) == 0:\n    return False\nreturn name[0] == 'b' and name[1] == 'o' and name[2] == 'b'\n```", "```\n  - template: Coverage-Fuzzing.gitlab-ci.yml\n```", "```\nstages:\n  - build\n  - test\n  - fuzz\n```", "```\nfuzz-test-is-bob:\n  image: python:latest\n  extends: .fuzz_base\n  script:\n    - pip install --extra-index-url https://gitlab.com/api/v4/projects/19904939/packages/pypi/simple pythonfuzz\n    - ./gitlab-cov-fuzz run --engine pythonfuzz -- is_bob_fuzz_target.py\n```", "```\nfrom name_checker import is_bob\nfrom pythonfuzz.main import PythonFuzz\n@PythonFuzz\ndef fuzz(random_bytes):\n    try:\n        random_bytes_as_string = str(random_bytes, 'UTF-8')\n        is_bob(random_bytes_as_string)\n    except UnicodeDecodeError:\n        pass\nif __name__ == '__main__':\n    fuzz()\n```", "```\nstages:\n  - accessibility\n```", "```\ninclude:\n  - template: \"Verify/Accessibility.gitlab-ci.yml\"\n```", "```\nvariables:\n    a11y_urls: «https://www.hats-for-cats.com»\n```"]