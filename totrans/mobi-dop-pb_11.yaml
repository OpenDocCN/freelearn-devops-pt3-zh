- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Predicting the Future of Mobile DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, we have discussed how mobile DevOps is a rapidly expanding field
    that is transforming the way mobile apps are developed, tested, and released.
    It is a disruptive form of technology that has revolutionized the way we approach
    mobile development, enabling teams to develop and release mobile applications
    at a much quicker pace than ever before.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Future trends in mobile app development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future trends in mobile DevOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Mobile DevOps* *Playbook* recap'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile DevOps provides organizations with the flexibility to adjust quickly
    to changing market conditions and customer demands, allowing them to develop and
    release mobile applications faster and more efficiently. Mobile DevOps solutions
    must be able to keep up with rapid changes in mobile technologies.
  prefs: []
  type: TYPE_NORMAL
- en: The next few years will be filled with mobile app development trends. Let’s
    explore them together and look at how developers and businesses can stay ahead.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile app development trends
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here we are in 2023; we’re in the middle of another year, and the mobile app
    development industry is undergoing rapid changes. Let’s take a closer look.
  prefs: []
  type: TYPE_NORMAL
- en: Cross-platform mobile development is on the rise
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The mobile development industry has been on the rise in recent years, and this
    trend is expected to continue. In particular, more companies are realizing the
    potential of cross-platform mobile development.
  prefs: []
  type: TYPE_NORMAL
- en: Cross-platform mobile development also makes it easier to implement new features
    and updates by using a single code base; developers can quickly and easily add
    new features and updates to an app, as opposed to having to update multiple versions
    of the app for different operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: Several factors will lead to the rise of cross-platform mobile development in
    the future, including cost-effectiveness, faster **time-to-market** (**TTM**),
    and consistency.
  prefs: []
  type: TYPE_NORMAL
- en: We discussed the various cross-platform frameworks in [*Chapter 2*](B18113_02.xhtml#_idTextAnchor056),
    *Understanding the Mobile Ecosystem*. But in my opinion, Flutter will gain traction
    in the next few years because it is not only cross-platform but is also an ecosystem
    that allows users to build six apps from a single code base, targeting different
    operating systems and devices.
  prefs: []
  type: TYPE_NORMAL
- en: Developing mobile apps with low code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The development of apps using low code is becoming increasingly popular since
    developers can create mobile applications with minimal or no coding skills. Low-code
    mobile applications are a great way to quickly and easily create mobile apps without
    writing much code. By using drag-and-drop components and pre-built functions,
    developers can quickly create a mobile app with lots of functionality without
    having to know much coding.
  prefs: []
  type: TYPE_NORMAL
- en: In my opinion, cloud services will be a significant part of the low-code era;
    for instance, **AWS Amplify** ([https://aws.amazon.com/amplify/](https://aws.amazon.com/amplify/)),
    with which you can create a full stack mobile app in hours and create an **Amazon
    Web Services** (**AWS**) backend for your iOS, Android, Flutter, or React Native
    app with authentication, data, storage, and more integration with other AWS services
    in minutes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The advantages of low-code mobile app development include faster development,
    reduced development costs, and a simplified development process, but while there
    are advantages to low-code mobile app development, there are also some potential
    disadvantages that businesses should be aware of. Here are a few to consider:'
  prefs: []
  type: TYPE_NORMAL
- en: The customization potential of low-code platforms is limited due to pre-built
    templates and components. As a result, it may be difficult to create unique features
    or **user** **experiences** (**UXs**).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It may be difficult for businesses to switch to a different low-code platform
    if they become locked into one.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Due to their reliance on pre-built components that have not been thoroughly
    tested for security vulnerabilities, low-code platforms may be less secure than
    custom applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more complex applications, low-code platforms may still require some learning
    curve to use effectively, despite their ease of use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Low-code mobile app development can indeed be a great way for businesses to
    create simple mobile apps quickly, but they should take into account the potential
    drawbacks before they decide which platform to use.
  prefs: []
  type: TYPE_NORMAL
- en: Security is getting more important
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mobile app development is becoming increasingly security-conscious as mobile
    apps grow in popularity. Developing secure apps is a must for developers.
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, developers must be up to date on the latest security tools,
    frameworks, processes, and technologies. To further secure their apps, developers
    should incorporate additional security measures such as encryption, session management,
    input validation to mitigate SQL injection, **cross-site scripting** (**XSS**),
    and **two-factor** **authentication** (**2FA**).
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 8*](B18113_08.xhtml#_idTextAnchor306), *Keeping Mobile Apps and
    DevOps Secure*, we discussed in detail how DevSecOps is used to keep mobile DevOps
    secure, how developers consider security at every stage of development, and how
    they integrate security into the mobile DevOps process. Since mobile apps are
    becoming increasingly complex, I believe that automation with security will become
    increasingly important.
  prefs: []
  type: TYPE_NORMAL
- en: Increase in the impact of AI and ML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using **Artificial Intelligence** (**AI**) and **Machine Learning**(**ML**)
    is becoming increasingly popular, as we’ve noticed recently that most apps are
    now using AI in a range of different business domains in order to accomplish their
    goals.
  prefs: []
  type: TYPE_NORMAL
- en: With AI and ML, mobile developers can create apps that are more intuitive and
    user-friendly, as well as apps with enhanced functionality. AI and ML can also
    be used to create predictive analytics, which can provide personalized recommendations
    to users.
  prefs: []
  type: TYPE_NORMAL
- en: To stay competitive, developers should become familiar with AI and ML technologies,
    which have the potential to revolutionize mobile app development.
  prefs: []
  type: TYPE_NORMAL
- en: It is my prediction that AI will become more ingrained in businesses this year
    and in upcoming years and that tech companies will compete fiercely in the market.
    It is already evident in today’s world that a wave of different tools, platforms,
    and apps is already incorporating AI.
  prefs: []
  type: TYPE_NORMAL
- en: Increase in the usage of cloud computing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mobile app development increasingly relies on cloud computing to create apps
    that can run on multiple platforms and devices and improve mobile performance.
  prefs: []
  type: TYPE_NORMAL
- en: As a result of cloud computing’s scalability and flexibility, mobile developers
    can adjust their apps to accommodate increased usage or new features as needed.
    Developers can use AWS to build, test, and deploy complex business apps on mobile
    devices using its cloud services.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example, AWS offers a variety of cloud services that can be integrated
    into mobile apps as backend services, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Amplify** ([https://aws.amazon.com/amplify/](https://aws.amazon.com/amplify/))
    provides a serverless backend infrastructure that scales automatically, eliminating
    the need for developers to manage server infrastructure. It abstracts away the
    complexities of backend development, allowing developers to focus on building
    frontend experiences and delivering value to end users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Cognito** ([https://aws.amazon.com/cognito/](https://aws.amazon.com/cognito/))
    provides a secure and scalable user authentication and authorization service.
    It enables mobile app developers to easily add user sign-up, sign-in, and access
    control functionalities to their apps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Pinpoint** ([https://aws.amazon.com/pinpoint/](https://aws.amazon.com/pinpoint/))
    is a customer engagement and analytics service for mobile apps. It helps you send
    targeted, personalized messages to your app users via multiple channels, including
    push notifications, SMS, and email. These are only a few examples of cloud services
    for mobile apps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The growing importance of UX
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mobile app development increasingly emphasizes UX. It is essential that developers
    create user-friendly and intuitive apps that are easy to navigate and understand
    by users. The UI should be well designed, clear, and concise, and incorporate
    voice commands, gestures, and animations.
  prefs: []
  type: TYPE_NORMAL
- en: UX includes factors such as how the app is designed, how it is used, how accessible
    it is, and how responsive it is. These factors all contribute to creating an app
    that people will remember.
  prefs: []
  type: TYPE_NORMAL
- en: By focusing on UX, developers can develop apps that are successful and popular
    worldwide with millions of users.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is imperative that developers focus on UX when developing their
    apps. The UX of an app can make it easier to use and more enjoyable, or it can
    lead to users abandoning it. AI and ML can play a significant role in UX, as we
    discussed previously in understanding user needs and expectations, as well as
    developing an app that is easy to use and aesthetically pleasing. UX practices
    should also be incorporated into the development process, as they can help to
    create an app that is both efficient and enjoyable.
  prefs: []
  type: TYPE_NORMAL
- en: The growing impact of AR and VR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In recent years, **virtual reality** (**VR**) and **augmented reality** (**AR**)
    have become increasingly popular in the gaming industry, as well as in commercial
    and consumer settings. Through mobile apps, businesses and developers can explore
    and take advantage of the endless possibilities this advanced technology offers.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, AR and VR are becoming increasingly evident, and their potential
    for impact is becoming increasingly evident. AR and VR will continue to attract
    a great deal of attention and growth as these technologies have the potential
    to revolutionize how we interact with the world around us.
  prefs: []
  type: TYPE_NORMAL
- en: As we mentioned previously, AR and VR can enhance the UX of mobile apps. Mobile
    devices make it easy for developers and businesses to create immersive, interactive,
    and engaging applications. It is easier for users to interact with their environment,
    resulting in a more enjoyable and interactive experience.
  prefs: []
  type: TYPE_NORMAL
- en: Increasing use of voice apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Voice apps are becoming increasingly popular in mobile app development. By creating
    voice-enabled apps, developers can provide users with a more intuitive and user-friendly
    experience. Voice apps can be used to provide users with voice-controlled access
    to features such as search, navigation, and scheduling.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, voice apps can be used to create interactive tutorials and simulations,
    which can be used to teach users how to use an app in a more efficient and effective
    way. Voice apps are an invaluable tool for mobile app development, and developers
    should take advantage of their many benefits.
  prefs: []
  type: TYPE_NORMAL
- en: The growth of IoT integration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is no doubt that the **Internet of Things** (**IoT**) is becoming one
    of the most important parts of mobile application development. Through the integration
    of IoT devices into apps, developers can create apps that are more intelligent
    and provide a more personalized experience to consumers.
  prefs: []
  type: TYPE_NORMAL
- en: With IoT integration growing, smart home devices are becoming increasingly common,
    such as lighting systems, thermostats, and security cameras. With a smartphone
    app, for example, you can control your lights and security system remotely.
  prefs: []
  type: TYPE_NORMAL
- en: IoT integration looks very bright for the future, as IoT devices become more
    affordable and powerful. Consequently, more complex applications can be developed,
    such as predictive maintenance and autonomous vehicles. AI and ML will also be
    integrated into IoT.
  prefs: []
  type: TYPE_NORMAL
- en: As we discuss the future of mobile application development and how to prepare
    for mobile DevOps, organizations need to understand the needs and challenges of
    mobile application development, the potential solutions available, and the impact
    of emerging technologies. To implement the right mobile DevOps strategy, organizations
    must understand the needs of mobile developers, the challenges and complexity
    of mobile application development, and the impact of emerging technologies.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging the right tools and techniques, developers will be able to build
    powerful, reliable applications that satisfy their users’ needs.
  prefs: []
  type: TYPE_NORMAL
- en: To take advantage of the opportunities presented by Mobile DevOps, developers
    need to be aware of trends and technologies that will shape their future.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile DevOps trends
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To stay ahead of the curve, organizations must begin planning for the future
    of mobile DevOps in order to remain competitive.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we move forward, I believe the following will be the goal:'
  prefs: []
  type: TYPE_NORMAL
- en: '*To achieve cost optimization, performance efficiency, increasing reliability,
    and speeding up releases, business teams and IT leaders must understand* *Mobile
    DevOps.*'
  prefs: []
  type: TYPE_NORMAL
- en: The following predictions are for mobile DevOps in 2023 and beyond.
  prefs: []
  type: TYPE_NORMAL
- en: Automating orchestrating of mobile releases will grow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Continuous delivery** (**CD**) and release orchestration are important trends
    in mobile app development. In addition to maintaining quality and reliability,
    release management practices allow developers to build, test, and deploy mobile
    apps quickly and efficiently. In order to reduce costs, improve reliability, and
    speed up the release process, the automation of deployment and testing processes
    is expected to become increasingly important.'
  prefs: []
  type: TYPE_NORMAL
- en: The rise in cloud-based infrastructure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In my opinion, this is the most important trend for mobile DevOps; as we discussed
    previously, mobile apps always need the latest hardware infrastructure operating
    systems and mobile devices.
  prefs: []
  type: TYPE_NORMAL
- en: As we all know, building iOS apps always require the use of the latest Apple
    chips, so I expect more companies to use cloud-based infrastructure so that they
    do not have to worry about maintaining the infrastructure and can focus on developing
    their apps instead. As a result, app development will be faster and more efficient,
    as well as scalability, performance, and testing being improved.
  prefs: []
  type: TYPE_NORMAL
- en: A growing need for automation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Automation** is crucial in mobile DevOps, as it will help to speed up the
    development process, allowing developers to focus on the tasks that require more
    manual input. This will allow them to focus on more important tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: It is important for mobile developers to focus on tasks that matter and not
    waste their time on useless tasks.
  prefs: []
  type: TYPE_NORMAL
- en: The automation process can be used to release apps to app stores, conduct different
    types of testing, collect customer feedback, monitor performance, scan for security
    vulnerabilities, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to saving time and money, automation also reduces the risk of errors,
    which can be costly and time-consuming. This increased use of automation can also
    contribute to better security of mobile applications as well as reduce the time
    required to complete certain tasks.
  prefs: []
  type: TYPE_NORMAL
- en: The shift-left will become more prevalent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we discussed in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing
    a Robust Mobile App Testing Strategy*, **shifting left** refers to testing earlier
    in the development process. According to the shift-left or to that, testing should
    not be the final step of a development process, but rather an ongoing process
    that takes place throughout the entire development life cycle. Testing earlier
    allows any issues to be identified and corrected before the project has progressed
    further in development, reducing both cost and time.
  prefs: []
  type: TYPE_NORMAL
- en: It is obvious that shifting left will lead to cost savings. Team members can
    avoid having to rework projects if they discover bugs later on in the development
    cycle. Additionally, shifting left can also improve the customer experience, since
    software released with fewer bugs is more likely to be well received.
  prefs: []
  type: TYPE_NORMAL
- en: Shifting left can only be implemented if a robust testing process is built into
    the development process from the start. To ensure the accuracy of the software,
    automated tests should be conducted throughout the development process, as well
    as manual tests at various points. For any issues that may arise over time, teams
    should continue to monitor the software.
  prefs: []
  type: TYPE_NORMAL
- en: Increasing the importance of security and data protection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There can be no overstatement of the importance of security in mobile DevOps.
    Security and compliance with industry standards and regulations are increasingly
    important for increasingly complex and interconnected mobile applications.
  prefs: []
  type: TYPE_NORMAL
- en: In mobile DevOps, security and data protection are top priorities.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile DevOps’ future is also heavily dependent on security. In order to develop
    more robust and secure mobile applications, development processes will have to
    become more robust and secure. As part of this process, secure coding techniques
    will need to be used, as well as testing and validating applications.
  prefs: []
  type: TYPE_NORMAL
- en: Developers can ensure the security and reliability of their applications by
    following these processes.
  prefs: []
  type: TYPE_NORMAL
- en: Keeping an eye on the performance of mobile apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Analyzing analytics will be essential for mobile DevOps teams to understand
    how users interact with their applications and identify improvement areas, monitor
    the performance of mobile apps, and diagnose and resolve any issues that arise.
  prefs: []
  type: TYPE_NORMAL
- en: In order to make informed decisions, teams will need tools to capture, analyze,
    and use data. In order to ensure applications remain reliable and meet user needs,
    it will be essential to monitor them in production and respond quickly to user
    feedback.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, I believe AI and ML will also be part of the mobile DevOps strategy,
    and my dream is to be involved in app monitoring and performance because as we
    mentioned previously, organizations will consider these in their mobile apps.
    With AI and ML, tasks can be automated, predictions can be made more accurately,
    and mobile development costs and time can be reduced.
  prefs: []
  type: TYPE_NORMAL
- en: The rise of AI testing and codeless testing tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Recent years have seen an increase in the use of AI for software testing. AI-driven
    codeless testing tools are now widely used to automate software testing and increase
    test coverage, such as Sofy.ai, Waldo, and Testsigma.
  prefs: []
  type: TYPE_NORMAL
- en: Using AI testing tools, we can automate the writing of test cases, increase
    test coverage, and reduce the need for manual testing, as we discussed in [*Chapter
    5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile App* *Testing
    Strategy*.
  prefs: []
  type: TYPE_NORMAL
- en: Testers can create automated tests using codeless testing tools without having
    to write a single line of code. This makes testing much simpler and faster since
    testers do not need to spend time learning how to write code. As tests can be
    modified quickly when needed, codeless testing tools also allow for greater flexibility.
  prefs: []
  type: TYPE_NORMAL
- en: With AI-driven test automation tools, the software is analyzed, and automated
    test scripts are generated. Using these tools, testers can automate the testing
    process and find any problems quickly. In addition to simulating realistic user
    interactions, AI-driven test automation tools can also be used to test more accurately.
  prefs: []
  type: TYPE_NORMAL
- en: A rise in platform engineering and developer productivity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In 2023 and beyond, I believe that we’ll see a shift from DevOps, **site reliability
    engineering** (**SRE**), and **platform engineering** (**PE**), which we discussed
    in [*Chapter 10*](B18113_10.xhtml#_idTextAnchor377), *Improving Productivity with
    Developer Experience and* *Platform Engineering*.
  prefs: []
  type: TYPE_NORMAL
- en: The term *DevOps* or *DevSecOps* has in the past tried to encompass too much
    in its job function, so we are now seeing an increasing number of DevOps and DevSecOps
    teams adopting platforms that streamline tasks such as writing rules and policies,
    creating pipelines, and coding to automate these tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Rather than overburdening one group with certain tasks, the industry will adopt
    platforms that empower teams to perform at their best.
  prefs: []
  type: TYPE_NORMAL
- en: Through PE, developer teams can deliver more business value and achieve stronger
    outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: In order to deliver changes to applications rapidly, mobile DevOps teams need
    to have a strong DevOps culture.
  prefs: []
  type: TYPE_NORMAL
- en: '*A future Mobile DevOps toolchain will maximize flow in IT* *value streams.*'
  prefs: []
  type: TYPE_NORMAL
- en: In order to meet customers’ needs, mobile DevOps plays a critical role in ensuring
    that the app is developed, tested, and released in a timely manner.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have reached the last station in this book and I hope that you have enjoyed
    it as much as I did and that it has added value to you personally and was able
    to teach you something that you can take back to your team or organization.
  prefs: []
  type: TYPE_NORMAL
- en: Taking a look at the book as a whole, let’s recap what we learned.
  prefs: []
  type: TYPE_NORMAL
- en: From [*Chapter 1*](B18113_01.xhtml#_idTextAnchor014), we started addressing
    the challenges that we face with mobile app development and the concept of mobile
    DevOps, which entails integrating development and operations (mobile DevOps) practices
    to improve the efficiency and speed of mobile application development.
  prefs: []
  type: TYPE_NORMAL
- en: And we focus on that to *make sure you don’t copy someone else’s process* if
    you found it online. Develop a *strategy and plan that suits the needs of your
    stakeholders and team members*. Establish a standard process for your mobile DevOps
    best practices upfront.
  prefs: []
  type: TYPE_NORMAL
- en: Then, in [*Chapter 2*](B18113_02.xhtml#_idTextAnchor056), we understood the
    mobile ecosystem and explored together the various mobile platforms, frameworks,
    and unique functions of mobile devices to understand the challenges for mobile
    developers, QA engineers, release engineers, or anyone working in mobile development,
    since we need to think about how we will be able to tackle all of these challenges
    by utilizing automation to assist us in building, testing, releasing and monitoring
    great mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: Then, in [*Chapter 3*](B18113_03.xhtml#_idTextAnchor083), our journey toward
    mobile DevOps just began, and we discussed the mobile DevOps fundamentals including
    the concepts of **continuous integration** (**CI**), **continuous testing** (**CT**),
    **continuous delivery** (**CD**), continuous deployment, and **continuous monitoring**
    (**CM**). Also, we learned the difference between self-hosted and cloud-based
    CI/CD and the benefits of the cloud. After that, we learned about the checklist
    for mobile app releases and the concept behind the release train.
  prefs: []
  type: TYPE_NORMAL
- en: After that, in the next chapters, we started the actual implementation of mobile
    CI/CD and DevOps using different platforms, and we discussed the implementation
    of a robust testing strategy including different types of testing such as UI,
    snapshot, performance, and security.
  prefs: []
  type: TYPE_NORMAL
- en: Once the application has been successfully developed and tested, it is ready
    for release. This was when we discussed the releasing process of the mobile application
    to Beta testers, QA, or to the app stores and Google Play Store and make it available
    to users. This included the concept behind code signing, certificates, provisioning
    profiles, key stores, and more.
  prefs: []
  type: TYPE_NORMAL
- en: After releasing mobile apps, the next step was how to establish monitoring and
    observability for mobile apps and use that data to provide feedback to development
    teams. We discussed the different implementations of crash reporting and error
    monitoring with different options and platforms.
  prefs: []
  type: TYPE_NORMAL
- en: And because security is a crucial factor to take into account, we discussed
    how to inject security into mobile DevOps and CI/CD with the DevSecOps concept.
    This included how to train the team for security, which security tools are suitable
    for our team, and the difference between the security testing types. Also, we
    discussed the **Open Worldwide Application Security Project** (**OWASP**) guide
    for mobile app security.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 9*](B18113_09.xhtml#_idTextAnchor342), we discussed a few mobile
    DevOps best practices such as ChatOps, upskilling the team, scaled Agile, and
    A/B testing to improve the speed and quality of mobile app development and deliver
    high-quality apps to users.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 10*](B18113_10.xhtml#_idTextAnchor377), we discussed the concept
    of **internal developer platform** (**IDP**) teams, **developer experience** (**DX**)
    teams, the benefits of PE, and the difference between DevOps, SRE, and PE.
  prefs: []
  type: TYPE_NORMAL
- en: Our journey with mobile DevOps has finally reached its end; I hope you enjoyed
    it. As we discussed, mobile DevOps is expected to become increasingly popular
    in the coming years as businesses look to maximize the efficiency of their mobile
    development teams. It’s likely that many organizations will have adopted mobile
    DevOps practices to streamline their mobile development processes. We discussed
    the trends of mobile app development and mobile DevOps that we should see this
    year and in the coming years.
  prefs: []
  type: TYPE_NORMAL
- en: '*There is no silver bullet; you should choose, build, and guide your process
    according to your needs* *and expectations.*'
  prefs: []
  type: TYPE_NORMAL
- en: Happy building!
  prefs: []
  type: TYPE_NORMAL
