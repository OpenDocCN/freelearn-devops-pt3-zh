- en: '18'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AZ-400 Mock Exam
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Designing a DevOps Strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are tasked with introducing Azure DevOps into your organization. Right now,
    there are many other tools being used for deployments. You are asked which of
    the following tools can integrate with Azure DevOps. [There can be any number
    of answers.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Octopus Deploy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Jira
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Jenkins
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: App Center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are asked to create a dashboard for your team that displays information
    about how your team is working. You should focus on displaying metrics and charts
    that encourage Agile and DevOps ways of working. Which metrics do you choose?
    [Choose three.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows the average cycle time for work items
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows the outcome (success or failure) for the most recent deployments
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows the number of lines of code added per day
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows the number of pull requests currently open within the team
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are asked to implement static code analysis within your project. What is
    the best time to do this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: During the build stage, just before artifacts are published
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: During the deployment stage, just before the actual deployment to the target
    environment
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are running `import` service for each Project Collection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One of the core principles of DevOps is *to continuously deliver value to our
    end users*. Which of the following is not used to do so?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: People
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Practices
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Process
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Products*   You are working for a large enterprise and have to automate the
    assignment of licenses to new hires. To do this, you have created a small application
    that is connected to the HR application. Which type of authorization do you use
    between your application and Azure DevOps?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: User accounts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Personal access token
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: OAuth tokens
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: One-time secrets*   You need to migrate an existing Git repository to Azure
    DevOps. Which of the following do you need to do? [Choose two.]
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an initialized Git repository.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an uninitialized Git repository.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute `git remote rm origin; git remote add origin <new-repository-url>; git
    push`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute `git remote redirect origin <new-repository-url>; git push`.*   You
    are working in a heterogeneous environment with teams using different DevOps tools
    throughout the company. One of your builds is running within Azure DevOps, but
    another team wants to consume your pipeline artifacts from another tool. Which
    of the following can you use for staging build artifacts to connect from other
    tools?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Pipeline artifacts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Artifactory
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Octopus Deploy Binary Server
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Artifact feeds/universal packages*   You are tasked with configuring source
    control for your team in Azure DevOps. Which of the following requirements can
    only be fulfilled by using **Team Foundation Version Control** (**TFVC**)?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to enforce the four-eyes principle.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to configure access to specific folders for one user only.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to configure access to specific files for one user only.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to connect to classic build pipelines.*   You need to execute and record
    exploratory testing sessions. In addition to executing tests, you should also
    be able to automatically report bugs on your Azure Boards backlog. You plan to
    use the Test & Feedback extension for this and assign all testers a testing license.
    Does this complete the goal?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: No*   You need to execute and record exploratory testing sessions. In addition
    to executing tests, you should also be able to automatically report bugs on your
    Azure Boards backlog. You plan to use the Test & Feedback extension for this and
    assign all testers a Basic and Test license. Does this achieve the goal?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: No*   You need to execute and record exploratory testing sessions. In addition
    to executing tests, you should also be able to automatically report bugs on your
    Azure Boards backlog. You plan to use the Test & Feedback extension for this and
    assign all testers a Basic license. Does this achieve the goal?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: No*   You are tasked with identifying metrics that can be used to measure the
    impact of adopting DevOps. Which of the following do you advise to be used? [Choose
    two.]
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Amount of work in progress at the same time
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Velocity
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cycle time
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Sprint duration*   Which of the following is not a DevOps habit?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Team autonomy and enterprise alignment
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Maximizing the amount of work not done
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Hypothesis-driven development
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Live-site culture*   You are tasked with creating a test strategy for the new
    application that you are creating with your team. Which of the following recommendations
    should you make?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For verifying that the most critical user scenarios are still working correctly,
    one or more system tests should be written.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For verifying that the most critical user scenarios are still working correctly,
    a stress test should be performed before every deployment.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For every ten unit tests, there should be at least one integration test.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Before enabling a new feature in production, a final smoke test should be performed
    on the production environment.*   Source code is one of the most valuable assets
    for your company. You want to implement multi-factor authentication for access
    to Azure DevOps when users are not connecting through the corporate network. Which
    of the following can you use to do this?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Active Directory Conditional Access
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Active Directory Network Allowance
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure DevOps Network Controls
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Active Directory Account Groups*   You are working in a team that provides
    Azure subscriptions and resource groups to other teams. As part of your work,
    you want to monitor whether all teams implement recommended Azure best practices
    for security. Which of the following do you use?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Policy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Security Center (now Microsoft Defender for Cloud)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Security Monitor*   You are tasked with providing the means for starting
    SonarCloud scans from within Azure DevOps. Which of the following steps create
    a complete solution? [Choose two.]
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the SonarCloud configuration in your Azure DevOps project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new SonarCloud service connection.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Activate the SonarCloud integration pack.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the SonarCloud extension.*   You need to apply an update to a deployment
    within Kubernetes—which command should you use?
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl apply`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl deployments`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl get services`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl deploy`*   What are the basic tools you need to use when managing
    an Azure Kubernetes cluster? [Choose all that apply.]'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure CLI/PowerShell
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: kubectl
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure DevOps
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing DevOps Development Processes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are developing a Microsoft .NET Core application and want to analyze the
    application to check whether there are any open source libraries with known security
    vulnerabilities being used. Which of the following products can you use for such
    an analysis? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Jenkins
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: WhiteSource Bolt
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Snyk
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: App Center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are currently using (i) JIRA, (ii) GitLab, and (iii) Octopus Deploy for
    some of your DevOps processes. You want to consolidate your DevOps tools and have
    chosen to go with Azure DevOps. Which Azure DevOps services should you use to
    replace these? Choose the correct service to replace these three services. [Match
    three pairs.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Pipelines
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Repos
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Boards
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Artifacts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are evaluating different options for build agents. What are valid arguments
    for opting for private agents over Microsoft-hosted agents? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You need custom software to be available on the agent before any job is executed.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to ensure that the same environment is used for executing only one
    pipeline job before being destructed.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need direct network connectivity from the build agent to your on-premises
    network.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to ensure that you are always running on up-to-date images.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are responsible for managing the settings of the applications your team
    deploys to Azure App Service. Which of the following offerings cannot be used
    to achieve this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure App Configuration
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM templates
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Policy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are tasked with creating a large number of build pipelines for your team.
    Almost all pipelines need to have the same structure. Which Azure DevOps Pipelines
    construct can help you?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Branch Policies
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Task Groups or Templates
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Artifacts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Deployment Groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are using Entity Framework as the database access layer from your application.
    You are responsible for managing database upgrades and want to use Entity Framework
    for this as well, to manage the database schema from code. Which type of schema
    migration should you use?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Migrations-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: End-state based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to save your local changes to a Git repository. Which commands do you
    need to use? [Choose two]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git clone and git push`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git commit and git push`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git add, git commit, and git push`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git add and git commit`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to prevent anyone from merging changes to the master branch if the
    changes do not compile or any of the unit tests fail. Which of the following can
    you use to accomplish this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Branch protection center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Repos branch policies
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Repos branch security
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: This is not possible in Azure DevOps; you need to use another product, for example,
    GitHub
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your company uses GitHub Enterprise on-premises for hosting source control.
    For implementing continuous integration and deployment, you are looking to use
    Azure DevOps. Which of the following components form a complete solution to make
    this possible? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An external Git service connection
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Opening the firewall for HTTPS connections from Azure Pipelines to GitHub Enterprise
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A Git sources proxy for HTTP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: On-premises agents
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A new team joins the company, and they have to start work on a new application.
    They ask you to recommend a branching strategy that allows them to work on multiple
    features in parallel and deploy a new version at any time and minimizes the need
    for merging changes late. Which of the following do you recommend?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an eternal branch per team member and cherry-pick commits to merge.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a branch per feature and merge this branch upon completion.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a branch per task and merge this branch upon completion.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Create and merge a branch as often as possible when a shippable piece of work
    has been completed.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are tasked with configuring source control for your team in Azure DevOps.
    Which of the following source control systems do you choose, preferably?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: TFVC
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Git
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is true?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can have as many Git and TFVC repositories in an Azure DevOps project as
    you want.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can have at most one Git repository and at most one TFVC repository in an
    Azure DevOps project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can have at most one TFVC repository and as many Git repositories as you
    want in your Azure DevOps project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can have either Git repositories or TFVC repositories in an Azure DevOps
    project, but not both at the same time.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your team is creating a mobile application and wants to use App Center for distributing
    the application to both the app stores and the testers within the team. Which
    of the following should you use? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Invitation-only pre-release groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Push-to-store integration
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Store connection
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Distribution groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are creating a series of microservices for a new project. You are looking
    for a way to manage configuration from a centralized point. There are many configuration
    settings shared between microservices. Which of the following solutions best fits
    this use case?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure App Configuration
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Configuration Center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM templates
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You have to ensure that code cannot be checked into the master branch of a repository
    when it has not been viewed by at least two people. Which of the following is
    a complete solution for this? [Choose three.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enforce the use of a pull request for merging changes to the master.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reset approval votes on the pull request for a branch when a new commit is pushed
    to that branch.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Have a minimum of at least two reviewers but allow everyone to merge their own
    changes.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Have a minimum of at least one reviewer, not being the person who opened the
    pull request.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You have to sign the binaries (DLLs) that your team produces so that other teams
    that consume them can verify the binaries are not altered and really are the binaries
    originating from your team. You have to store the certificate used for signing
    securely. Where can you do this and still have the file available for use in your
    pipeline? If multiple answers fit, choose the simplest solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Pipelines Library
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Encrypted in source control
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure DevOps certificate store
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You have to ensure that every build pipeline contains a task group that is pre-shared
    by your team. Which of the following Azure DevOps constructs can you use to do
    this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pipeline decorators.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Pipeline verifiers.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Pipeline pre-execution tasks.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: This is not possible—you have to implement a manual auditing process.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your sources are stored in a Subversion source control system. You want to move
    to Azure DevOps Pipelines for continuous integration. You do not want to move
    your sources and connect from Pipelines to Subversion. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The development team is creating a containerized application. The solution needs
    to be deployed to a Kubernetes cluster in Azure. You need to create the cluster
    and ensure that the application is running as it should. Select which commands
    you should perform and place them in the correct order of execution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl apply`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`az group create`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`az aks create`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`az appservice plan create`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl get deployments`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`az aks get-credentials`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl get hpa`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl get services`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A great advantage of running containers instead of virtual machines is that
    containers share the operating system kernel. This also makes container images
    smaller than virtual machine images. Is this correct?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing Continuous Integration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Order the following types of tests based on the size of their scope. Start with
    the test types with the smallest scope.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Integration tests
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Unit tests
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: System tests
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following are true? [Choose more than one.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Stress tests are performed by applying an ever-growing load onto a system, to
    identify the breaking point of the system.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Integration tests always include the database.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Performance tests are performed to measure how quickly the system can perform
    a given task.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Usability tests are performed to identify use cases where the system is too
    slow to respond.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are creating an Azure DevOps dashboard to provide the team with insight
    into the quality of the code being written. Which of the following widgets does
    not belong on such a dashboard?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows recent deployments and whether they were successful or not
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows the number of check-ins per day
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows how the unit test code coverage changes over time
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A widget that shows whether the latest build has failed or not
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is not a valid merge strategy?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Squash commit
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Rebase
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Interleave
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Merge commit
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is not part of the OWASP Top 10?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Injections
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Sensitive data exposure
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Least privilege principle violations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Using dependencies with known vulnerabilities
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your team is creating container images that should be deployed into Azure later
    on. Which of the following can you use to store your images? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Container Instances
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Container Registry
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Kubernetes Service
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Docker Hub
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to be notified whenever any integration build fails. You configure
    an email subscription on your Azure DevOps project. Will this achieve this goal?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to trigger a YAML pipeline whenever a new version of an artifact hosted
    in an Azure Artifacts feed becomes available. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to use a mix of hosted agents, private agents in the cloud, and an
    on-premises agent in the same stage of a multi-stage YAML pipeline. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to create a release pipeline that is triggered at the same time every
    day of the week. You also want to exclude Sunday. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The developer team is creating a container-hosted application and wants to share
    the image on the internet. The team builds the image via Docker and tries to host
    it via Kubernetes. Is this the correct way?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following are places where you can store container images? [Choose
    all that apply.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Container Instance
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Docker Hub
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Container Registry
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Container Storage
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing Continuous Delivery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The company you are working for is using ServiceNow as the change management
    system. There is a rule that ServiceNow should be used to track every deployment
    to production environments. You are responsible for ensuring that your application
    is not deployed to the production environment if there is no valid change registered
    in the change management system. Which of the following will accomplish this?
    [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You implement a deployment callback that checks for a valid change in ServiceNow.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You add a deployment gate as a precondition to deployment to the production
    stage.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You add a deployment gate as a postcondition for completing deployment in the
    QA stage.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You create an environment and call it `Production-ServiceNow check`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to deploy an application to twelve on-premises virtual machines, grouped
    into three subnets. Which of the following actions should you perform to have
    a complete, working solution to do this? [Choose three.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new deployment group and add the correct agents to that group.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Download and install Private Agent on all of the virtual machines that you need
    to deploy to.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a selection job to your release pipeline to select which deployment group
    to use.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Download and install Private Agent on precisely one virtual machine in every
    subnet.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a deployment group job to your release pipeline to execute the tasks necessary
    for deploying the application.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure a username and password on your deployment pipeline to configure how
    to connect to the agents.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to configure a release pipeline to meet several conditions before deployment
    to the production environment can be started. These conditions are (i) that at
    least two out of four members of an approval board should approve of the deployment
    and (ii) that Azure Monitor should be checked for any alerts in the first hour
    after the release. Can this be done using Azure DevOps Pipelines?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are using **SQL Server Data Tools** (**SSDT**) for describing your database
    schema as code. You want to use SSDT for schema upgrades as well. Which type of
    schema migration should you use?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Migrations-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: End-state-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are working with a schema-less database. Does this remove the issue of schema
    management completely?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your team must follow regulations that state that every new version has to be
    approved by the test manager manually before it can be deployed to production.
    Which of the following changes fulfills this requirement in the most meaningful
    way?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You add a pre-deployment gate to the production stage that verifies the sign-off
    in a home-build system where all application versions that are signed off can
    be recorded.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You add a post-deployment gate to the QA stage that sets the test manager’s
    approval in the designated system if all automated tests have succeeded.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You add a post-deployment approval to the QA stage that must be given by the
    test manager.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You disable automated approval to the production stage and instruct everyone
    to only start deployment after consulting the system that contains all signoffs
    by the test manager.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are creating several release pipelines for your team. Many of the pipelines
    will use the same configuration values for some tasks. Which of the following
    can help you to repeat their values as a complete solution?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Variable groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Task groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Variable containers
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to automatically generate release notes out of the stories completed
    in a deployment. You want to do this without using any extensions or add-ons—only
    the built-in capabilities of Azure DevOps should be used. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to deploy an application to Azure Service Fabric from Azure DevOps.
    Do you need to install an extension for tasks to do this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to apply an update to a deployment within Kubernetes. Which command
    should you use?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl apply`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl deployments`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl get services`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`kubectl deploy`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What kind of task is used within Azure DevOps to deploy containers to Azure
    Kubernetes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubernetes manifest
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubernetes
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubernetes general task
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubectl
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What kind of file is most appropriate to deploy resources to a Kubernetes cluster?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM template
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Terraform document
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PowerShell script
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: YAML deployment file
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing Dependency Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are using Azure Artifacts for hosting NuGet packages that your team creates.
    You have a new requirement for making one (and only one) of the packages that
    you create available to all other teams in your organization. Which of the following
    are valid solutions? [Choose more than one.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You create a new feed and allow any user in your Azure Active Directory to use
    packages from this feed. You move the package to be shared to this feed.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You allow all users within your organization to use your existing feed.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You create a new feed and allow any user in your organization to use packages
    from this feed. You move the package to be shared to this view.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You create a new view in your existing feed and publish the package to be shared
    to this view. Next, you configure that all members of your organization can read
    packages from this view.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You add your existing feed as an upstream source to the feed that is used by
    any other team so they can pull your packages as well.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following are valid arguments for splitting your solution into
    multiple smaller solutions and using shared packages or libraries for assembling
    the complete application from these smaller solutions? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have over 25 C# projects in a single solution.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Your code base is becoming so large that compilation and/or running unit tests
    is starting to take too long.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your team is becoming too big and is split into two. Splitting the solution
    as well will establish clear ownership: one solution per team.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are approaching the Git limit of 10,000 files in a single repository.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For which of the following does Azure Artifacts support upstream sources? [Choose
    two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Composer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Python
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Gems
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Maven
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are working with Azure Artifacts feeds for dependency management. You are
    taking a new dependency on a library that is publicly available through NuGet.
    Which of the following can you use to consume this package through an existing
    feed?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upstream sources
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: External views
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Upstream views
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Dependency views
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You have a library that is used in two applications but only within your own
    team. Which of the following strategies is the best way to share this library?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Link the shared library as a shared project in the two consuming solutions.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Have the library in a separate repository and use a build pipeline to build
    the library and upload it as a NuGet package to Azure Artifacts. Consume it from
    there in your two applications.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to use universal packages for distributing application components from
    Azure DevOps to different deployment orchestrators. Is this possible?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing Application Infrastructure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are working on an application that will be deployed in two different Azure
    Regions to allow for failover scenarios. Which of the following together make
    a valid solution? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You create one ARM template with two parameter files. The first parameter file
    corresponds to the first Azure region, and the second parameter file to the second
    Azure region. You use the ARM templates to update the infrastructure.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You create an ARM template and parameter file to update the infrastructure in
    one region only. In the other region, you update the infrastructure manually to
    prevent configuration drift.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You first update the infrastructure in both regions. Only when the infrastructure
    is updated successfully do you deploy the application to both regions.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You first update the infrastructure in one region, followed by the deployment
    of the application. Only when this succeeds do you update the infrastructure in
    the other region and deploy the application to the other region.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to deploy an Azure Resource Manager template to an Azure resource group
    using an Azure DevOps pipeline. Some of the parameters that you need to use are
    stored in Azure Key Vault. Which of the following options combined is not a necessary
    part of a complete solution?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new variable group and link it to the correct key vault using a service
    connection.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Give the Azure Active Directory service principal a Reader RBAC role on the
    correct Azure key vault.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure a new Azure Resource Manager service connection in your Azure DevOps
    project and create a new Azure Active Directory service principal that way.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Give the Azure Active Directory service principal the following access policies
    on the correct key vault: `list` and `get`.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are tasked with creating and configuring several virtual machines in Azure.
    Which combination of tools should you use? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Automation DSC
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Runtime Runbooks
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM templates
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are configuring the Azure resource group where your application will be
    deployed later. You are provided with a pre-created service principal for doing
    the deployment from Azure DevOps Pipelines. Which RBAC role assignment should
    you give to this service principal to deploy resources?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reader
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Contributor
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Deployer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Owner
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You have to set up the RBAC role assignments for your teams. You want to follow
    the principle of least privilege. You also need to ensure that access to your
    team resources is available to whoever needs it. Which of the following solutions
    is best?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You add the principal used for deployments and all team members to an Azure
    Active Directory group. You assign this Azure Active Directory group the contributor
    role on your Azure resource group.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You give the principal that is used for deployment contributor rights on the
    resource group and all team members the reader role.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You create two new Azure Active Directory groups: reader and writer. You add
    the service principal used for deployments to the writer group. You add all team
    members to the reader group. You assign the reader role to the reader group and
    the contributor role to the writer group.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You create a new Azure Active Directory group. You add the service principal
    used for deployments to this group. You assign the group the contributor role.
    You create an escalation procedure for team members to be temporarily added to
    this Azure Active Directory group.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following tools cannot be used for managing Azure resources?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Terraform
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure DevOps CLI
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure PowerShell
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: CloudFormation
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are practicing infrastructure as code and want to deploy an ARM template
    from Azure DevOps as part of your deployment process. Which of the following solutions
    does this in the simplest way?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You execute an Azure CLI script from a Cmd task in your deployment pipeline.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You execute a PowerShell script from your deployment pipeline.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You use the built-in task for the deployment of the ARM template.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You upload the template to an Azure storage account and use an HTTP REST call
    to start the deployment of the ARM template.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are transforming the way your team delivers its application by practicing
    *everything as code*. Which of the following cannot be created using Azure Blueprints
    or ARM templates?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure subscriptions
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Active Directory security groups
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure RBAC custom roles
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure RBAC role assignments
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are working in a team that provides Azure subscriptions and resource groups
    to other teams. As part of your work, you want to limit the types of Azure resources
    a team can create. Which of the following do you use?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure RBAC roles and role assignments
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Policy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: OWASP Zed Attack Proxy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Security Center (now Microsoft Defender for Cloud)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is not a benefit of working with infrastructure and configuration as code?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Minimizing configuration drift
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Peer-review support
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Lower lead time on configuration changes
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Source control history of configuration changes
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing Continuous Feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have to gather crash reports from the applications that your team creates.
    Which tools can you use to do this? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Snyk
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Raygun
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: App Center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Automation
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are configuring many alerts. Some alerts need to result in a warning per
    email, others are critical errors and need to result in an SMS text message that’s
    sent out. Regardless of the alert being a warning or an alert, you also need to
    update a home-build system with the alert being fired.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You create the following solution: one action group for warnings both sends
    the email and calls a WebHook on the home-build system. One action group for errors
    both sends the SMS text message and calls a WebHook on the home-build system.
    For alerts that are a warning, you configure action group one. For alerts that
    are an error, you configure action group two.'
  prefs: []
  type: TYPE_NORMAL
- en: Is this a complete and correct solution?
  prefs: []
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You are configuring many alerts. Some alerts need to result in a warning per
    email while others are critical errors and need to result in an SMS text message
    being sent out. Regardless of the alert being a warning or an alert, you also
    need to update a home-build system with the alert being fired.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You create the following solution: One action group sends an email, sends an
    SMS text message, and calls a WebHook on the home-build system. You configure
    this alert group on all alerts and add an alert condition configuration to only
    send emails for warnings and to only send SMS text messages for errors.'
  prefs: []
  type: TYPE_NORMAL
- en: Is this a complete and correct solution?
  prefs: []
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You are configuring many alerts. Some alerts need to result in a warning per
    email while others are critical errors and need to result in an SMS text message
    that’s sent out. Regardless of the alert being a warning or an alert, you also
    need to update a home-build system with the alert being fired.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You create the following solution: One action group for warnings sends an email.
    A second action group for errors sends the SMS text message. A third action group
    calls a WebHook on the home-build system. For alerts that are a warning, you configure
    action groups one and two. For errors, you configure action groups two and three.'
  prefs: []
  type: TYPE_NORMAL
- en: Is this a complete and correct solution?
  prefs: []
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to invite your users to provide ideas and suggestions on your product.
    This should be in a public place so that other users can comment and vote on those
    suggestions. Which of the following tools can be used to do this in the simplest
    way? [Choose two.]
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Blob storage static site
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: GitHub issues
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: UserVoice
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Boards public views extension
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A, B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D – A – C – B – E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A – (iii), B – (ii), C – (i)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, F, A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18655_01.xhtml#_idTextAnchor014), Introduction to DevOps'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. In traditional organizations, development is often tasked with creating
    changes to software, while operations is responsible for maintaining the stability
    of the target systems for these changes. Since changes inherently carry risk and
    may disturb stability, operations is often resistant to change.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. While, in theory, it is possible to apply the different DevOps practices
    in isolation from one another, the real value comes from combining them. For example,
    continuous deployment without continuous integration and test automation not only
    makes very little sense, it is actually dangerous to continuously deploy changes
    without the quality assurances that continuous integration and test automation
    offer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The incorrect answer is D. DevOps is not a job title, but a cultural movement.
    Actually, creating a new DevOps team in between development and operations is
    often at loggerheads with the DevOps philosophy. Instead of two teams or departments
    with their separate goals, there are now three.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fastlaning is an approach to expediting unplanned, high-priority work over planned
    work, all while maintaining a single sprint board for the whole team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are many definitions of DevOps. Some of the main elements that are frequently
    included are business value, end users, continuous deployment, automation, and
    collaboration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18655_02.xhtml#_idTextAnchor034), Site Reliability Engineering
    Fundamentals'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. SRE team’s primary responsibility is to maintain reliability for applications.
    The reputation and success of a business or product are dependent on the reliability
    of cloud solutions in a production environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Generally, availability is expressed in nines. For instance Three nines
    (99.95% availability percentage) will have an average in a year 4 Hours 22 Minutes
    and 58 Seconds of allowed downtime .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. SRE adopts automation to resolve common and recurring problems. Response time for common problems is reduced as a result of automation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '95% availability implies allowed downtime:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Weekly: 8h 24m 0s'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Monthly: 1d 12h 31m 27s'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yearly: 18d 6h 17m 27s'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The correct answers are A, B, and C. DevOps Management and Bug Tracking do not
    impact or create challenges to maintaining reliability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. The level of service reliability needs to be defined by key stakeholders
    and the SRE team will help to maintain these service reliability levels using
    SLOs and SLIs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Toil is the kind of work tied to running a production service that tends to
    be manual, repetitive, automatable, tactical, devoid of enduring value, and that
    scales linearly as a service grows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18655_03.xhtml#_idTextAnchor049), Getting the Best Out of DevOps
    Tools'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. You can sign up for Azure DevOps for free with either a Microsoft or
    GitHub account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Azure Boards allows multiple teams to collaborate and work together on
    a single project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Application Insights is a feature of Azure Monitor that provides extensible
    **application performance management** (**APM**) and monitoring for live web apps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. You can use Azure Pipelines to automatically build, test, package, release,
    and deploy your GitHub repository code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. GitHub is an enterprise scale offering from Microsoft that supports both
    Public and Private repositories.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18655_04.xhtml#_idTextAnchor069), Everything Starts with Source
    Control'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main difference between centralized and decentralized source control is
    that in a decentralized source control system, every user of the system has the
    full history of the sources. In a centralized system, only the server has the
    full history. Decentralized systems work best when working disconnected from the
    server, whereas centralized systems often allow for more detailed access control.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Git is the best known decentralized source control system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is B. Rebasing is not a branching strategy, but a merging
    strategy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When working with Git, a pull request is used to merge changes from one branch
    with another. Pull requests can be reviewed, approved, or denied. To enforce the
    use of pull requests, Git policies can be used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is B. Trunk-based development is not a merging strategy,
    but a branching strategy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18655_05.xhtml#_idTextAnchor177), Moving to Continuous Integration'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. Continuous integration is about integrating the work of every developer
    with that of their colleagues at least daily and building and testing the integrated
    sources. Just running a daily build does not constitute continuous integration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. A classic build pipeline is always connected to a source code repository.
    It might be that the sources are not used in the build pipeline, but the connection
    is always there.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. It is possible to create a YAML pipeline that starts directly with a
    stage. A link to a source control repository is no longer mandatory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The correct answer is C: a service connection. Service connections are configured
    in the organization or project that contains the pipeline that needs to call into
    the external tool. Once a service connection is configured, it can be used from
    one or more pipelines.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The correct answers are A and D: access to closed networks and the ability
    to install extra software. Self-hosted agents are deployed on infrastructure owned
    by you. This means that you can deploy them on networks that you control, giving
    them access to that network. Since the agents are deployed on your infrastructure,
    you can also decide which software is installed (and which is not). Tasks and
    extension tasks are automatically downloaded to the agent before it executes a
    job. You can have as many parallel pipelines as you want without using self-hosted
    agents. However, you will need to buy extra parallel executions from Microsoft
    for this purpose.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18655_06.xhtml#_idTextAnchor330), Implementing Continuous Deployment
    and Release Management'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. It is also possible to trigger a new release on a schedule or manually.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the answers are correct.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A and C are correct. Both ring-based deployments and canary deployments expose
    only a limited group of users to the new version of your application. Feature
    toggles are also used for progressive exposure but are not used to limit the risks
    of a deployment but that of a new feature release.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Deployment groups are used to perform tasks from a release pipeline not
    on one agent in the group, but on all agents. Deployment groups are intended to
    be used to deploy software on the machine that is also running the agent.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One possible advantage is that end-to-end traceability of all steps is retained
    in Azure DevOps. If you also manage your work items and source code in Azure DevOps,
    you will keep end-to-end traceability from the work item to release within Azure
    DevOps, and all this while still using the App Center for actual deployments.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18655_07.xhtml#_idTextAnchor453), Dependency Management'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. A version of a package can be visible in more than one view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Pipeline artifacts can only be consumed from within other pipelines within
    Azure DevOps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Azure Artifact feeds can be used to share universal packages to other
    products. This allows you to compile an application in Azure DevOps, upload the
    binaries as a universal package, and download it again in another product. This
    is useful when using another deployment tool, for example, Octopus Deploy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. The three main aspects of dependency management are standardization, package
    formats and sources, and versioning.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are B and D. Answer A is incorrect since the package references
    (either in a `.csproj` file or in a `nuget.config` file) should only reference
    packages by name and version. Answer C is incorrect since `consumer` is not a
    valid access level in Azure Artifact feeds. The correct access level is reader
    (or higher), making answer B correct. Answer D is also correct. You need to add
    the package location to your NuGet configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One motivator can be the size of the solution. If compiling and testing the
    solution is taking so long that developers have to wait for feedback in relation
    to their work, it can be better to split the solution into smaller parts. This
    will shorten the feedback loop for developers, thereby increasing speed. Another
    motivator can be that multiple teams are working on an application, and they want
    to increase the amount of isolation between teams.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "[*Chapter 8*](B18655_08.xhtml#_idTextAnchor542), Implement Infrastructure and\
    \ Configuration \Las Code"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. ARM templates allow you to specify the end state for all resources in
    an Azure resource group. Applying an ARM template will always result in the creation
    of missing resources and updates for existing resources. If the deployment mode
    `complete` is specified, even resources not in the template will be removed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is B. Modules, Run As accounts, and variables are all constructs
    that were discussed in [*Chapter 8*](B18655_08.xhtml#_idTextAnchor542), *Implement
    Infrastructure and Configuration as Code*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. ARM template parameters allow the referencing of values in an Azure Key
    Vault, so as to prevent users from having to enter secrets or other sensitive
    information in source control. At the time of deployment, the secrets are retrieved
    and used within Azure, provided the identity that starts the operation has access
    to that key vault.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. You can define one or more schedules within an Azure Automation Account
    and then link these to a Runbook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Many benefits can be expected when practicing infrastructure as code. Two oft-cited
    examples are the prevention of configuration drift and the ability to create new
    environments on demand. Configuration drift is prevented by reapplying the same
    infrastructure specification to an environment on a schedule. Environments on
    demand can be used to quickly create a new test environment, performing tests
    and then removing the environment again. This allows for more repeatable test
    results and, possibly, savings in terms of testing infrastructure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18655_09.xhtml#_idTextAnchor699), Dealing with Databases in
    DevOps Scenarios'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. Entity Framework and Entity Framework Core both have built-in support
    to generate a migration after changes to the schema definition have been made.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Most migration-based approaches use an extra table to keep track of which
    migrations have already been applied to the database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. End state-based approaches work by comparing the current schema to the
    target schema. This results in the generation of a one-time SQL script that is
    run against the database to update the schema. There is no state stored between
    runs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are A and B. Running side by side, if done correctly, reduces
    change risks dramatically. If there are issues, you can always remove all new
    code, along with the database copy, and restart afresh from a working situation.
    Having both situations working correctly also allows for very precise performance
    measurements regarding the production workload. However, one of the disadvantages
    is that the cycle time is actually very likely to increase. You have to move multiple
    smaller changes to production one by one, which increases the total time taken.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Your schema (either implicit or captured in data objects) still changes.
    However, this only becomes visible when reading an object back from the database
    that was persisted with a previous version of the object. In essence, you are
    only delaying coping with the issue of schema changes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can choose to not use database-level coding techniques, such as stored procedures
    and triggers. The more of your logic you capture outside of the database, the
    smaller the total number of database changes you have to make.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18655_10.xhtml#_idTextAnchor760), Integrating Continuous Testing'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. In a unit test, an individual component is tested in isolation. In an
    object- oriented language, this is often a single class.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. In an integration test, the correct working of a group of components
    is verified, and not the entire assembled system. If the entire assembled and
    deployed system is tested, this is referred to as a system test.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer B is correct. The testing pyramid prescribes a large set of unit tests
    that verify as many requirements as possible. Integration tests are added only
    for those risks that cannot be covered using unit tests, resulting in a lower
    number of integration tests. Even fewer system tests are added, only to cover
    the risks not covered by either unit or integration tests.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer C is correct. All other types of testing are covered in this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two techniques that can be mentioned here are code reviews and pipeline gates.
    Code reviews allow developers to review the work of their colleagues to help each
    other maintain high quality. Pipeline gates can be used to prevent a build or
    version of an application from propagating further down a pipeline if certain
    conditions are not met. Example conditions can include certain quality metrics,
    or minimum standards for test coverage or test results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B18655_11.xhtml#_idTextAnchor889), Managing Security and Compliance'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. To securely create and deliver software, the whole process, and especially
    the pipeline, needs to be secured. Just adding security at the end will not work,
    as security has to be woven through all different steps of the delivery process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The OWASP **Zed Attack Proxy** (**ZAP**) can be used for this type of testing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. In modern applications, up to 80% of the code can be from open source
    libraries or frameworks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are A,B, D, and F. There is no such thing as Azure DevOps
    Secure Variables or Azure DevOps Key Vault.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Policy can be used to prohibit or list unwanted Azure configurations,
    often relating to infrastructure provisioning or configuration. Azure Security
    Center (now Microsoft Defender for Cloud) can be used to identify and remediate
    runtime security risks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18655_12.xhtml#_idTextAnchor978), Application Monitoring'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. The platform metrics that are emitted by Azure are defined by every individual
    service and cannot be changed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 93 days. This number guarantees that there are always at least three months
    of history.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Custom metrics can be calculated in your own application code and emitted
    to Application Insights through the SDK or REST API.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alert fatigue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Azure allows for the creation of action groups that can contain webhooks
    to be called in response to an alert being raised.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18655_13.xhtml#_idTextAnchor1071), Gathering User Feedback'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. One possible downside is losing a competitive edge in the market. If
    competitors know what you are going to develop next, they may preempt you in that
    regard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Possible concerns are that some users or groups of users are more vocal than
    others, which might result in a difference between the general opinion and the
    opinion that is heard. Also, feedback on a public roadmap is most likely coming
    from existing users only. While it is important to retain those, prospects might
    not comment on your roadmap with features they are missing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two examples that are discussed in this chapter are sentiment on social media
    channels and the number and severity of support requests.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer C is correct. A hypothesis states a belief that a certain feature is
    needed. In the hypothesis the second part is a measurable user response that is
    to be observed before the belief is confirmed. This is called the confirmation
    threshold. A hypothesis does not yet have a conclusion.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Possible benefits of user interviews or focus groups are that they are often
    conducted at a smaller scale, allowing not only for the measuring of feedback,
    but for also understanding the reasons behind it. Another benefit is that participants
    can be carefully selected to be representative of all users or a particular segment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B18655_16.xhtml#_idTextAnchor1144), Containers'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The benefits of containers for DevOps are consistency, the separation of concerns,
    and platform portability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Depending on the host operating system, it does not matter where the container
    is hosted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, this is possible. This can be done by adding Docker support and a project
    level.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `RUN` command is used for the installation of components or for performing
    operations during the process of building the container image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Nodes and pods can be scheduled within Azure Kubernetes Service. Both of these
    components can be scaled manually or automatically.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B18655_17.xhtml#_idTextAnchor1277), Planning Your Azure DevOps
    Organization'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. Some information can travel to other regions or is available globally.
    For example, sometimes agents are running in other regions when capacity in the
    chosen region is low.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Work item** | **Project** | **Organization** | **Region**. An Azure DevOps
    organization is the top-level construct that can be created by users. Every organization
    is in precisely one region, which is maintained by Microsoft. Within an organization,
    one or more projects can be created. In turn, a project can contain many work
    items, such as user stories, features, or epics.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'False. The general recommendation is to have just enough projects: the fewer
    the better. Isolation and very strict authorization boundaries may be reasons
    for choosing to use multiple projects.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Authorizations and licensing. Authorizations can be set up to the limit that
    can be accessed by every individual user or a group of users. The license assigned
    to a user can also prohibit the use of certain features. For example, users with
    a stakeholder license cannot work with source control.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: End-to-end traceability. When executing work management, source control, building,
    artifacts, and deployments from a single tool, it is possible to trace the deployment
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
