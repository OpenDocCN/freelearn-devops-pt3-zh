["```\nusers/<username>/<id>_<topic>\n```", "```\n$ git switch -c <branch> main\n```", "```\n$ git switch -c users/kaufm/42_new-feature main\n> Switched to a new branch 'users/kaufm/42_new-feature'\n```", "```\n$ git add .\n$ git commit\n$ git push --set-upstream origin <branch>\n```", "```\n$ git add .\n$ git commit -m \"New feature #42\"\n$ git push --set-upstream origin users/kaufm/42_new-feature\n```", "```\n$ gh pr create --fill --draft\n```", "```\n$ git commit --amend\n```", "```\n$ git reset --soft HEAD~3\n$ git commit\n```", "```\n$ git reset --soft main\n$ git commit\n```", "```\n$ git rebase -i main\n```", "```\n$ git push origin +<branch>\n```", "```\n$ git push origin +users/kaufm/42_new-feature\n```", "```\n$ git push -f\n```", "```\n$ gh pr ready\n$ gh pr merge --auto --delete-branch --rebase\n```", "```\n$ git switch main\n$ git pull --prune\n```", "```\n$ gh release create <tag> --notes \"<release notes>\"\n```", "```\n$ gh release create v1.1 --notes \"Added new feature\"\n```", "```\n$ git switch -c <hotfix-branch> <tag>\n$ git push --set-upstream origin <branch>\n```", "```\n$ git switch -c hotfix/v1.1.1 v1.1\n$ git push --set-upstream origin hotfix/1.1.1\n```", "```\n$ git switch <hotfix-branch>\n$ git cherry-pick <commit SHA>\n$ git push\n```", "```\n$ git switch hotfix/v1.1.1\n$ git cherry-pick users/kaufm/42_fix-bug\n$ git push\n```", "```\n$ git config --global --edit\n```", "```\n[alias]\n```", "```\n    mfstart = \"!f() { \\\n```", "```\n        git switch -c users/$1/$2_$3 && \\\n```", "```\n        git commit && \\\n```", "```\n        git push --set-upstream origin users/$1/$2_$3 && \\\n```", "```\n        gh pr create --fill --draft; \\\n```", "```\n    };f\"\n```", "```\n$ git mfstart kaufm 42 new-feature\n```", "```\nmfrelease = \"!f() { \\\n```", "```\n    if [[ -z \\\"$1\\\" ]]; then \\\n```", "```\n        echo Please specify a name for the tag; \\\n```", "```\n    else \\\n```", "```\n        gh release create $1 --notes $2; \\\n```", "```\n    fi; \\\n```", "```\n};f\"\n```", "```\nmfhotfix = \"!f() { \\\n```", "```\n    head=$(git symbolic-ref HEAD --short); \\\n```", "```\n    echo Cherry-pick $head onto hotfix/$1 && \\\n```", "```\n    git switch -c hotfix/$1 && \\\n```", "```\n    git push --set-upstream origin hotfix/$1 && \\\n```", "```\n    git cherry-pick $head && \\\n```", "```\n    git push; \\\n```", "```\n};f\"\n```"]