- en: <st c="0">3</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Experiences and Pitfalls with Continuous Testing, Quality, Security,
    and Feedback</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="83">Looking back over my career of more than 48 years, I think I was
    destined to focus on what is</st> <st c="178">now called</st> **<st c="189">continuous
    testing</st>**<st c="207">,</st> **<st c="209">DevOps</st>**<st c="215">,</st>
    **<st c="217">DevSecOps</st>**<st c="226">, and</st> **<st c="232">SRE</st>**<st
    c="235">, but these</st> <st c="247">labels did not exist until more recently.</st>
    <st c="289">Throughout</st> <st c="300">that time, I primarily focused on designing,
    developing, and</st> <st c="361">implementing testing, quality, security, and
    feedback strategies, and automated platforms and tools for software development,
    delivery, and operations.</st> <st c="513">My career developed, coincident with
    the evolution from software waterfall to continuous delivery and operations methodologies.</st>
    <st c="641">I was able to use and contribute to the development of these strategies,
    platforms, and tools, which ultimately resulted in being honored by the IEEE as
    the Outstanding Engineer for IEEE Region 6, 2016 for my lifetime of work</st>
    <st c="867">on automation.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="881">This chapter explains, by way of examples from my lifetime of experiences,
    use cases, lessons learned, and pitfalls to avoid, including strategies to avoid</st>
    <st c="1038">these pitfalls.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1053">The first sections of the chapter are organized in chronological
    order to explain the sequence of my learning path.</st> <st c="1170">The later
    sections summarize practices and pitfalls that I learned across my career and
    will be useful to others undergoing</st> <st c="1294">digital transformations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1318">In this chapter, we’ll cover the following</st> <st c="1362">main
    topics:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1374">A lifetime of study of testing, quality, security, and feedback
    for DevOps, DevSecOps,</st> <st c="1462">and SRE</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1469">Bell-Northern –</st> <st c="1486">World-class university</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1508">Testing as a</st> <st c="1522">commercial enterprise</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1543">Consulting</st> <st c="1555">and teaching</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1567">Lessons learned, pitfalls, and strategies to</st> <st c="1613">overcome
    pitfalls</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1630">Let’s</st> <st c="1637">get started!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1649">A lifetime of studying testing, quality, security, and feedback
    for DevOps, DevSecOps, and SRE</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1744">Going back, way back to the 1960s, I was a young boy growing up
    in a working-class family in Kingston, Ontario, Canada.</st> <st c="1865">We didn’t
    have much money, but we had each other.</st> <st c="1915">My father and mother
    both worked hard to put food on the table and a roof over our heads for my two
    sisters and me.</st> <st c="2031">I was the baby of the family, with seven years
    between myself and my two older sisters.</st> <st c="2119">Essentially, I had
    three mothers because my sisters from the start saw me as “baby Marc,” a moniker
    that stuck with me</st> <st c="2238">through adulthood.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2256">This situation afforded me lots of time to play, and break things.</st>
    <st c="2324">This fact afforded me opportunities for experimentation because I
    was pampered and spoiled, which is good because I was born with a lazy disposition
    – an attribute that persists to this day and is a reason for my lifelong interest</st>
    <st c="2555">in automation.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2569">I loved to take mechanical things and appliances apart and try
    to understand how they worked.</st> <st c="2664">These early experiences taught
    me a lot about the importance of testing, quality, security, and feedback because
    some of the things I took apart resulted in minor injuries and electric shocks
    for myself and my cat, Puff.</st> <st c="2885">(The cat was sometimes my lab assistant.)
    I also learned about the importance of following a quality process because I seldom
    could put things back together again without help</st> <st c="3061">from Dad.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3070">Perhaps because they were not happy with things that I broke around
    the house, my parents, bought for me a series of</st> <st c="3188">MECCANO sets,
    which were kind of do-it-yourself kits made from mechanical metal parts – nuts,
    bolts, pre-punched struts and metal sheets, gears, wheels, belts, and pullies
    that you can create things with.</st> *<st c="3393">Figure 3</st>**<st c="3401">.1</st>*
    <st c="3403">shows what this</st> <st c="3420">looks like.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – MECCANO](img/B21936_figure_03.01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="3456">Figure 3.1 – MECCANO</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3476">I was especially</st> <st c="3493">interested in automating the
    toys that I built using the MECCANO wind-up motor, and later the MECCANO electric
    motor.</st> <st c="3612">I remember building a loader that could drive itself.</st>
    <st c="3666">It would bump into the furniture because it had motion but no sensors
    or feedback.</st> <st c="3749">I was not satisfied with this because it had very
    limited utility compared to a real loader.</st> <st c="3842">Sensors were not
    available for MECCANO, so I was determined to look for another set of things to</st>
    <st c="3939">experiment with.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3955">A few blocks from my house was a “magical” store called</st> *<st
    c="4012">The Hobby Shop</st>*<st c="4026">, which had low-cost toy models and
    many things that interested me.</st> <st c="4094">On my small weekly allowance,
    I was able to buy miniature plastic scale model airplanes, which not only could
    fly but also had control elements to steer the planes after they were launched
    with an elastic band.</st> <st c="4305">The control capability was very crude
    because it could not be adjusted after launching – a fact that also resulted in
    unintended mishaps, but I could adjust the flight path between test flights based
    on the feedback from prior flights.</st> <st c="4541">Model car racing on a track
    was also available at the model shop.</st> <st c="4607">This was more satisfying
    because I could adjust the speed with hand control, but the feedback was very
    limited from a visual point of view, so, too often the car would be overpowered
    and skip the track and crash.</st> <st c="4820">These early experiences taught
    me that timely feedback is needed to properly adjust controls and the combination
    of feedback and controls affect the quality and security of outcomes for even</st>
    <st c="5011">simple systems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5026">While building and operating models was fun, it did not satisfy
    my interest to have better control over the systems, and, they did not have day-to-day
    utility.</st> <st c="5187">My first bicycle was much more satisfying because I
    could at once control and monitor my direction and speed and use it to get somewhere,
    although it required a lot of effort to pedal.</st> <st c="5372">During my teen
    years, I graduated to building and operating motorized bikes, motorcycles, and
    cars, some of which are shown in</st> *<st c="5499">Figure 3</st>**<st c="5507">.2</st>*<st
    c="5509">. Since money was tight, I would buy a bike or car that was not working
    for little money, and then work on it with my dad and mechanic friends to get
    it road-worthy.</st> <st c="5675">In the process, I learned a lot about mechanical
    and electrical systems and the importance of dashboard meters.</st> <st c="5787">Each
    transition exposed me to increasingly complex systems that required multiple control
    and feedback mechanisms to operate reliably</st> <st c="5921">and safely.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Motorbikes and cars](img/B21936_figure_03.02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="5934">Figure 3.2 – Motorbikes and cars</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5966">I noticed that electronic components were used in many control
    and feedback functions.</st> <st c="6054">These were black boxes to me.</st> <st
    c="6084">So, I decided to study electronics in high school to understand what
    electronics is and how</st> <st c="6176">it works.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6185">My first project in my grade 10 electronics class was to build
    a multimeter to measure current, voltage, and resistance.</st> <st c="6307">While
    it was a crude meter, it was accurate enough to use as the feedback meter for
    some early electrical and electronics projects, until I had enough money to buy
    a professional Fluke multimeter.</st> <st c="6504">With some money from summer
    jobs, and profit from selling my motorcycle and cars, I was able to purchase</st>
    *<st c="6609">Heathkits</st>*<st c="6618">, which were do-it-yourself kits for
    sophisticated electronic systems.</st> <st c="6689">Following the kit instructions,
    I built electronic tools, including a variable power supply, frequency counter,
    oscilloscope, and breadboard, as shown in</st> *<st c="6843">Figure 3</st>**<st
    c="6851">.3</st>*<st c="6853">. These were sufficiently reliable and accurate
    to use throughout my engineering school years and beyond.</st> <st c="6959">(I
    still have the multimeter and power supply – it is still working, 50</st> <st
    c="7031">years later).</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Electronics tools and Heathkits](img/B21936_figure_03.03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="7046">Figure 3.3 – Electronics tools and Heathkits</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7090">I realized that, while electronics can perform many functions for
    sensing and control of complex systems, either people or automation is required
    to operate them to accomplish useful tasks.</st> <st c="7281">This is when my
    interest in computers and</st> <st c="7323">programming developed.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7345">My first programming experience was in grade 10 in high school.</st>
    <st c="7410">We had access to a remote time-share</st> <st c="7447">mainframe
    computer to execute math formulas programmed in the</st> **<st c="7509">A Programming
    Language</st>** <st c="7531">(</st>**<st c="7533">APL</st>**<st c="7536">).</st>
    <st c="7540">The inputs (controls) and outputs (feedback) were in the form of
    an electronic terminal that looked like a typewriter, as shown in</st> *<st c="7671">Figure
    3</st>**<st c="7679">.4</st>*<st c="7681">. I liked the quick interactive response
    of the terminal, but I learned APL was limited to calculations and not as capable
    for general-purpose computing applications.</st> <st c="7848">We also had local
    access to a university mainframe computer with a card reader that could accept
    Fortran programs in the form of a stack of punched cards.</st> <st c="8003">The
    time-shared mainframe IBM360 would run each program as a batch job sequentially,
    and output (feedback) was generated on a line printer.</st> <st c="8143">Given
    the serial and variable nature of the read, run, and output, sequences’ feedback
    could take many hours depending on the size of the program and the number of batch
    jobs queued.</st> <st c="8326">The time between program creation and feedback
    was frustrating</st> <st c="8389">and slow.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4 – Early computers and programming](img/B21936_figure_03.04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="8493">Figure 3.4 – Early computers and programming</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8537">A few years later, I purchased a</st> <st c="8571">Radio Shack
    TRS-80 personal computer and a Commodore 64 that was programmed directly from
    the keyboard in the Basic language.</st> <st c="8697">The micro-processer was
    dedicated to one single application.</st> <st c="8758">A cassette tape provided
    “bulk data” storage and retrieval because memory circuits were very expensive
    and limited capacity.</st> <st c="8883">A character-mode display would output
    characters in real time, which was nice for getting real-time feedback, but output
    formats were limited especially for graphs</st> <st c="9047">and charts.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9058">These personal computers also had an acoustic coupler that would
    enable connection to a telephone handset for data transmission to other remote
    computers so I could experiment with data communications between the TRS80 and
    Commodore.</st> <st c="9293">This was my first experience with automated remote
    control and real-time remote feedback.</st> <st c="9383">This opened up possibilities
    for many new applications, for interactive remote control and feedback such as
    remote control of machines and interactive video games.</st> <st c="9547">But
    the communication speed was limited to 300 baud, by the modem.</st> <st c="9614">I
    soon realized that precise real-time control and feedback would only be accomplished
    with special hardware and firmware that could be built to more accurate machine-level
    timings that are needed in real-time control applications.</st> <st c="9846">I
    purchased some microprocessor evaluation kits and learned assembler and integrated
    circuits logic design to learn about real-time transmission control and</st> <st
    c="10003">feedback methods.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10020">During my</st> *<st c="10031">Queen’s University engineering</st>*
    <st c="10061">years, I learned a lot more about the importance of testing, quality,
    security, and feedback for</st> <st c="10159">system design.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10173">For one of my summer jobs, I worked</st> <st c="10210">in the
    input/output department of an</st> **<st c="10247">Esso Oil</st>** <st c="10255">corporation’s
    data center in Toronto that had a large IBM360 mainframe for computing logistics
    for Canada-wide oil deliveries.</st> <st c="10383">The input was a stack of punched
    cards, and the output was a “high speed” line printer that generated continuous
    reams of multi-copy paper separated by carbon papers.</st> <st c="10550">After
    the print was generated, the carbon paper and printed copies had to be separated
    by a “decollator” machine, and then the individual pages had to be separated and
    stacked using a “burster” machine.</st> <st c="10753">Then, the separate copies
    were bound in book fashion with metal pins to be suitable for reading by the analysts
    who received their copies in designated mail slots</st> <st c="10916">each morning.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10929">The feedback time from card input to output (printed book) was
    routinely more than 16 hours for all the outputs needed for each day’s logistics.</st>
    <st c="11075">If the analysts found a problem, it would have to go back in the
    queue for the next day’s run.</st> <st c="11170">Problems with logistics meant
    that some deliveries of oil would be late because they needed the schedule to
    operate each day.</st> <st c="11296">Multiple times, especially when there was
    an errant system upgrade, an entire day’s run tested bad, and the operations of
    logistics were interrupted for the entire data center.</st> <st c="11473">This
    again taught me that accelerating testing, quality assurance, security, and feedback
    was important to</st> <st c="11580">ensuring operations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11600">During my third-year</st> <st c="11622">summer, I was fortunate
    to get a job at the telecommunications manufacturer,</st> **<st c="11699">Northern
    Telecom</st>** <st c="11715">(</st>**<st c="11717">NT</st>**<st c="11719">), who
    put me on</st> <st c="11737">assignment to</st> **<st c="11751">Bell-Northern
    Research</st>** <st c="11773">(</st>**<st c="11775">BNR</st>**<st c="11778">)
    because they needed a way to test the new state-of-the-art packet switching system
    that BNR was researching and developing.</st> <st c="11905">At BNR, under the
    direction of expert scientists, I developed special circuits, nano-code, micro-code,
    and high-level software for testing the trunk cards of the new packet switch.</st>
    <st c="12086">This cut the testing time from days to minutes for the technicians
    in manufacturing, greatly improved the precision of quality inspection, and reduced
    debugging time.</st> <st c="12253">This was a lesson that showed me the game-changing
    power of automation to</st> <st c="12327">improve feedback.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12344">My Queen’s University</st> <st c="12367">engineering thesis project,
    called</st> **<st c="12402">Intellicom</st>**<st c="12412">, was a collaboration
    with two of my engineering classmates.</st> <st c="12473">We designed and built
    one of the first space-switched multi-functional private office phone systems,
    shown in</st> *<st c="12583">Figure 3</st>**<st c="12591">.5</st>*<st c="12593">.
    This ultimately</st> <st c="12611">resulted in recognition at a regional university</st>
    <st c="12660">engineering event.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – Intellicom engineering thesis project](img/B21936_figure_03.05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="12729">Figure 3.5 – Intellicom engineering thesis project</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12779">We built the central controller, which consisted of a switch controller
    using a microprocessor board, a memory card, and telephone line cards with hybrid
    AD converters, all interconnected via a wire-wrapped backplane.</st> <st c="12998">The
    central controller and line cards had LED displays to provide real-time operational
    feedback.</st> <st c="13096">We also designed and built four multi-functional
    handsets with push-buttons for numbers and controls, and LEDs for end-user feedback.</st>
    <st c="13230">The control and feedback information between the central office
    unit and handsets was transmitted using control wires separate from the voice
    wires.</st> <st c="13379">In retrospect, this was a particularly early implementation
    of common channel signaling that later came to be the direction for telephone
    systems!</st> <st c="13526">Given a very limited student budget, we scrounged
    parts, such as handsets borrowed from our dormitory, and my summer student boss
    from BNR generously donated some parts from BNR’s scrap piles.</st> <st c="13719">We
    had to make do with 256-byte eROM to hold the bootloader, and 1 Kbyte of 2,102
    RAM for the entire operating software written in 68 K assembler code.</st> <st
    c="13871">This required some</st> <st c="13890">creative programming.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13911">This was an ambitious project considering it had to be completed
    in time for graduation despite a very full course load!</st> <st c="14033">We
    realized from the start that the only hope of getting this working in time was
    to make sure our progress was always in the forward direction.</st> <st c="14178">Not
    much time to</st> <st c="14195">recover if there were big mistakes.</st> <st c="14231">So,
    we adopted an incremental design, build, test, lockdown approach – like what would
    later be called</st> **<st c="14334">Agile</st>** <st c="14339">and</st> **<st
    c="14344">DevOps</st>**<st c="14350">. As more</st> <st c="14360">and more parts
    were locked down, the test phase increased in complexity and time duration, a
    lot, so we automated the tests.</st> <st c="14485">This gave us back major time
    savings and improved confidence and quality immensely.</st> <st c="14569">Through
    destructive testing, we discovered and resolved potential security problems such
    as cross-talk and unauthorized listening.</st> <st c="14700">The most satisfying
    moment came when our professor saw all functions working and was unable to make
    our system crash during the final “</st><st c="14835">demo day.”.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="14847">BNR – World-class university</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="14876">After graduation in 1978, I was hired by NT, in Belleville, Ontario,
    Canada, and initially assigned by NT to work at</st> **<st c="14994">Bell-Northern
    Research (BNR)</st>**<st c="15022">, in Ottawa, Ontario, Canada.</st> <st c="15052">My
    mission</st> <st c="15063">was to continue the work from my prior summer job,
    namely, to transfer technology of the experimental SL-10 packet switching system
    technologies from BNR labs to</st> <st c="15225">NT manufacturing.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15242">In the late 1970s, BNR was the perfect learning environment.</st>
    <st c="15304">It was staffed with the top minds in the communications industry.</st>
    <st c="15370">The entire organization was extremely creative, energetic, innovative,
    and collaborative.</st> <st c="15460">Its culture was centered on telecommunications
    systems research and development.</st> <st c="15541">BNR had a truly amazing lab
    capability and funding was readily available for many projects.</st> <st c="15633">Working
    there presented many opportunities</st> <st c="15676">to collaborate with excellent
    scientists and engineers in the tri-corporate NT (later known as NorTel), BNR,
    and operating company</st> **<st c="15807">Bell Canada</st>**<st c="15818">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15819">I was assigned to the systems test team within the BNR packet
    switching group, while my NT role was to ensure the SL-10 was prepared for NT
    manufacturing to build and test SL-10 nodes and components in the factory.</st>
    <st c="16035">Included in this role was the development of a suite</st> <st c="16088">of
    switch-resident test programs to verify various system components called</st>
    **<st c="16163">In-Service Off-Line Testing (ISLOT)</st>**<st c="16199">. This
    unique set of responsibilities allowed me to learn about research, technology
    development, and business manufacturing operations.</st> <st c="16336">Since I
    was one of the few people in the organization with such a system-level role, I
    was also positioned to help with customer-facing demonstrations</st> <st c="16487">and
    interactions.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16504">The early success of the SL-10 in field experiments gained recognition
    and NT received an order</st> <st c="16601">for</st> [<st c="16604">an SL-10 from
    the</st> *<st c="16623">Deutsche Bundespost</st>* <st c="16642">in Germany, a
    project called</st> **<st c="16672">Berlin Packet</st>** **<st c="16686">Exp</st>**](https://de.wikipedia.org/wiki/Deutsche_Bundespost)**<st
    c="16689">eriment</st>** <st c="16697">(</st>**<st c="16699">BERPEX</st>**<st
    c="16705">).</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16708">I was assigned to go to Berlin to install the switch, as shown
    in</st> *<st c="16775">Figure 3</st>**<st c="16783">.6</st>*<st c="16785">. Since
    NT and BNR had no support offices in Germany, I had to be prepared to handle all
    problems locally, with the guidance of remote calls back to the scientists and
    engineers in BNR, Ottawa, Canada.</st> <st c="16987">The quality of my work and
    feedback to BNR was essential to the project’s success, and the business expectations
    were very high.</st> <st c="17116">The customer would purchase a lot of SL-10
    nodes for Germany’s packet network if the Berlin node performed well.</st> <st
    c="17229">This was strategically important to NT, who wanted to expand their business</st>
    <st c="17305">into Europe.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17317">I expected some issues, but it turned out to be a real “trial
    by fire.” There were many problems found</st> <st c="17421">with the SL-10 node
    on-site in Berlin.</st> <st c="17460">We found and resolved power problems, connector,
    and cabling mismatches, software performance issues, power recovery procedures,
    problems with system commands to control system configurations, status and fault
    indicators, and protocol</st> <st c="17695">communication problems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17718">In addition, we discovered problems with communicating failure
    information, uploading remote fixes for testing, and difficulties with testing
    to verify fixes in the field.</st> <st c="17891">It took nine weeks, but finally,
    the switch was running well enough to satisfy the field trial goals of the experiment.</st>
    <st c="18011">Ultimately, Germany did proceed with additional orders, which became
    the first</st> <st c="18090">large data packet network in Europe called</st> **<st
    c="18133">DatexP</st>**<st c="18139">. In the process, we learned a lot about
    what it takes to get SL-10 nodes commissioned, what feedback mechanisms were needed
    for remote support, and what needed to be improved to speed up the process of
    commissioning</st> <st c="18356">and operations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18371">From a testing point of view, data protocol simulation using a
    microprocessor protocol tester designed</st> <st c="18475">by BNR and a data-monitoring
    tool called</st> **<st c="18516">DataSope</st>** <st c="18524">designed by NT
    were most important.</st> <st c="18561">These tools substituted for hosts and
    terminals during the installation and helped to diagnose connection problems at
    the various protocol layers.</st> <st c="18708">The results of tests could be
    printed and then relayed to the developer to diagnose problems and verify the
    subsequent fixes.</st> <st c="18834">Other feedback mechanisms were LED indicator
    lights on the circuit boards and the SL-10 character-mode video display administration
    terminal.</st> <st c="18976">Each of these tools provided valuable clues.</st>
    <st c="19021">They were not inter-connected and required a lot of manual coordination
    to formulate a coherent record of events.</st> <st c="19135">I realized that the
    testing, diagnostics, repair, and retesting cycle could be greatly improved if
    the tools were designed to be more integrated with the system and</st> <st c="19300">each
    other.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – SL-10 BERPEX](img/B21936_figure_03.06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="19313">Figure 3.6 – SL-10 BERPEX</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19338">The successful experience of BERPEX signaled to BNR and NT that
    SL-10 was a major business opportunity.</st> <st c="19443">Already, we had new
    business prospects for packet networking coming from</st> <st c="19516">clients
    such as the Belgium bank,</st> **<st c="19550">Societe Generale de Banque</st>**
    <st c="19576">(</st>**<st c="19578">SGB</st>**<st c="19581">), who wanted a network
    to be installed in 1979\.</st> <st c="19631">But the quality</st> <st c="19647">needed
    improvement before we</st> <st c="19676">could deliver.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19690">Returning from Berlin in early 1979, I was assigned to lead a
    testing team to qualify “Generic 10” of SL-10, which consolidated hardware and
    software changes determined during the Berlin experiment.</st> <st c="19890">It
    was optimistically estimated to take eight weeks to validate the system changes
    and reach our quality goal, including protocols and network configurations that
    the client required.</st> <st c="20074">However, the testing was manual and there
    were many thousands of tests.</st> <st c="20146">Each protocol required hundreds
    of tests to validate each update.</st> <st c="20212">We kept finding serious problems
    that reset the system test process.</st> <st c="20281">We discovered many problems
    with protocols that were not tested in Berlin and problems with multi-node test
    topologies that were beyond the scope of the Berlin project.</st> <st c="20450">The
    actual time to reach our quality goal for SL-10 Generic 10 was eight months –
    6 months longer than the original plan!</st> <st c="20572">In the end, we had
    a switch that met the customer quality goals and we could ship</st> <st c="20654">to
    SGB.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20661">I was assigned to commission the initial three SL-10 nodes on-site
    – the main node in Brussels, and two others in Antwerp and Ghent.</st> <st c="20795">The
    investment in SL-10 Generic 10 testing and quality improvements paid off.</st>
    <st c="20873">The node installations went much faster than with Berlin.</st> <st
    c="20931">I was able to commission each node and protocol interface in only a
    few days each, much reduced from the nine weeks experienced in Germany.</st> <st
    c="21071">The connections between nodes did take much longer but that was not
    the fault of NT or SL-10\.</st> <st c="21165">The trunk links from the Belgium
    telephone company were delivered late.</st> <st c="21237">Once the trunk links
    were available, the SL-10 packet network came up and worked within a few days.</st>
    <st c="21337">SGB became a major client for NT and SL-10 became the packet system
    of choice for many other clients globally.</st> <st c="21448">I attribute part
    of the success on-site to the automated ISOLT test software and the trunk testing
    system that I</st> <st c="21561">developed before.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21578">However, in retrospect, one thing was not good.</st> <st c="21627">The
    6 month “over-estimate” was a problem.</st> <st c="21670">While there was general
    praise for the quality result, management was not happy with the</st> <st c="21759">time
    it took to qualify the release.</st> <st c="21796">I was given a mandate to figure
    out how to accelerate the time to quality for SL-10 from 8 months to</st> <st
    c="21897">2 months.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21906">The answer was obvious – automate the time-consuming tests and
    establish a configurable test lab that could accommodate the many different system
    topologies that different customers required.</st> <st c="22099">I was given the
    role of creating a new team for test tools development.</st> <st c="22171">Given
    prior lessons learned, I knew that the test system had to be powerful, scalable,
    and feature rich.</st> <st c="22276">It had to be something easy for developers,
    testers, and field staff to use so they could communicate tests and test results
    with each other efficiently.</st> <st c="22430">It had to be readily available
    with capacity and performance sufficient to test a high-performance, highly scalable
    packet network with many protocols, line, and</st> <st c="22592">trunk interfaces.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22609">Over a few years, my team</st> <st c="22636">developed a comprehensive
    set of tools called</st> **<st c="22682">Network Test Environment</st>** <st c="22706">(</st>**<st
    c="22708">NTE</st>**<st c="22711">).</st> <st c="22715">My paper,</st> *<st c="22725">An
    Integrated Test Center for SL-10 Packet Networks</st>*<st c="22776">, published
    in ACM journal, 1985, explained how it all worked.</st> *<st c="22839">Figure
    3</st>**<st c="22847">.7</st>* <st c="22849">shows some of the illustrations of
    the architecture of the primary tools in</st> <st c="22926">the set.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.7 – Network test environment](img/B21936_figure_03.07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="23228">Figure 3.7 – Network test environment</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23265">There were four types</st> <st c="23288">of tools:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="23297">Interactive Protocol Tester (IPT)</st>**<st c="23331">: This
    simulated communication protocols and</st> <st c="23377">could be operated interactively
    or remotely through</st> <st c="23429">a CLI.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23435">Network Load Test System (NLTS)</st>**<st c="23467">: This</st>
    <st c="23475">generated and measured</st> <st c="23498">network traffic.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23514">Network Process Monitor (NPM)</st>**<st c="23544">: This</st>
    <st c="23552">could generate internal traffic, and perform</st> <st c="23597">network
    monitoring.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23616">Network Test System (NTS)</st>**<st c="23642">: This was a
    general-purpose automated test controller</st> <st c="23698">that could automate
    actions and monitor results across a network of other tools and admin interfaces
    using a test language</st> <st c="23821">we developed called</st> **<st c="23841">Test
    Language</st>** <st c="23854">(</st> **<st c="23857">TLAN)</st>**<st c="23862">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23863">All these tools, except NTS, ran on the product hardware, which
    allowed them to scale to large configurations as well as the product itself and
    to offer use cases where the tools were integrated with the nodes on-site.</st>
    <st c="24083">This approach also ensured that the tools shared common administration
    and update processes.</st> <st c="24176">NTS operated on a commercial Unix-based</st>
    <st c="24216">microcomputer that was available from micro to mainframe size, so
    it could scale according to the test requirements and be serviced by the vendor.</st>
    <st c="24363">Since the NTS computer was the same make as the SL-10 data control
    center, it could be integrated and maintained with the same procedures as</st>
    <st c="24504">the product.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24516">With these tools in place, we had a fully integrated set of testing
    tools capable of automating all tests in the lab, field trials, and on-premises.</st>
    <st c="24666">This was a major advantage compared to</st> <st c="24705">competitors.</st>
    <st c="24718">This contributed to SL-10 and the next-generation</st> **<st c="24768">Data
    Packet Network</st>** <st c="24787">(</st>**<st c="24789">DPN</st>**<st c="24792">),
    achieving the highest level of efficiencies, quality, and sales worldwide in the
    industry of connection-oriented packet switching throughout the 1980s and</st>
    <st c="24951">early 90s.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24961">The NTE tools gained industry recognition, continued to be upgraded,
    and became an important part</st> <st c="25060">of the global telecommunications
    network</st> <st c="25101">transformation from circuit-switching to</st> **<st
    c="25142">Signaling System 7</st>** <st c="25160">(</st>**<st c="25162">SS7</st>**<st
    c="25165">) and</st> **<st c="25172">Integrated Services Digital</st>** **<st
    c="25200">Network</st>** <st c="25207">(</st>**<st c="25209">ISDN</st>**<st c="25213">).</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25216">Along the</st> <st c="25227">way, I made leading contributions
    towards a global</st> **<st c="25278">International Organization for Standardization</st>**
    <st c="25324">(</st>**<st c="25326">ISO</st>**<st c="25329">) standards initiative
    to standardize protocol conformance testing</st> <st c="25397">with a notation
    and associated platform called</st> **<st c="25444">Tree and Tabular Combined</st>**
    **<st c="25470">Notation</st>** <st c="25478">(</st>**<st c="25480">TTCN</st>**<st
    c="25484">).</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25487">As a result of this success, my career focus on network testing
    technologies was consolidated and enhanced with a series of projects in BNR, and
    then ECI Telecom and vPacket Communications, shown in</st> *<st c="25687">Figure
    3</st>**<st c="25695">.8</st>*<st c="25697">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Integrated network test technology](img/B21936_figure_03.08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="25737">Figure 3.8 – Integrated network test technology</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25784">At BNR, I was promoted to director of global test technology responsible
    for creating test systems for</st> <st c="25888">all BNR and NT network and terminal
    products.</st> <st c="25934">From the mid-80s until 1991, my team created a series
    of testing systems for all the switching division products and third parties who
    developed terminal equipment</st> <st c="26098">to go with our products.</st>
    <st c="26123">These included</st> **<st c="26138">Test and Traffic Simulation</st>**
    <st c="26165">(</st>**<st c="26167">TATS</st>**<st c="26171">) automation platforms
    for network product system and regression testing, remote conformance testing
    platforms with standardized test suites for 3rd party qualification, and tools
    to measure</st> <st c="26363">test coverage.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26377">One of the</st> <st c="26389">more important tool platforms that
    we developed called</st> **<st c="26444">Test Execution Administration Manager</st>**
    <st c="26481">(</st>**<st c="26483">TEAM</st>**<st c="26487">) reduced the time
    to set up and run network test cases by so much that it saved more than 90 million
    dollars per quarter – for years to come!</st> <st c="26631">It was a platform
    essential to our development, integration, and system testing processes across
    the company.</st> <st c="26741">TEAM was operated from a window in the developer’s
    Unix workstations and provided control and feedback.</st> <st c="26845">It ensured
    each user session was secure and coordinated test environment reservations between
    the thousands of developers and lab systems required for network development and</st>
    <st c="27020">system testing.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27035">Later at ECI Telecom and then vPacket, I directed the development
    of flexible remote access products that offered many configuration options that
    needed to be tested.</st> <st c="27203">To reduce the amount of time for testing,
    we built flexible test setups that could be reconfigured quickly while running
    automated test cases and designed-in test capabilities to monitor system performance
    built into the network products.</st> <st c="27442">This idea of integrating test
    capabilities seamlessly into the products and processes provided fast qualification
    of changes and improved collaboration during development, integration,</st> <st
    c="27627">and production.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27642">Testing as a commercial enterprise</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="27677">Since I had spent so</st> <st c="27699">much time in my career
    developing test technologies, it made sense for me to get involved in test systems
    as a commercial business.</st> <st c="27831">As shown in</st> *<st c="27843">Figure
    3</st>**<st c="27851">.9</st>*<st c="27853">, during the 1990s and early 2000s,
    I held various</st> <st c="27904">senior engineering</st> <st c="27923">and business
    roles over</st> <st c="27947">commercial test product platform development at</st>
    **<st c="27995">Tekelec</st>**<st c="28002">,</st> **<st c="28004">VIEW Engineering</st>**<st
    c="28020">, and</st> **<st c="28026">Spirent Communications</st>**<st c="28048">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Commercial test products](img/B21936_figure_03.09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="28095">Figure 3.9 – Commercial test products</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28132">During this time, I founded</st> <st c="28161">a firm called</st>
    *<st c="28175">EdenTree Technologies</st>* <st c="28196">to produce smart test
    automation platforms for network laboratories.</st> <st c="28266">This exposed
    me to the testing and quality assurance environments of hundreds of global clients
    in networks, enterprises, operating companies, and government institutions.</st>
    <st c="28438">I found that testing was a bottleneck to the release processes and
    presented gating factors to achieve quality for most industries globally.</st>
    <st c="28579">I could see clearly that many of the lessons I had learned about
    testing, quality, feedback, and security previously in my career would help many</st>
    <st c="28725">organizations globally.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28748">Consulting and teaching</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="28772">From 2008, my career increasingly focused on providing senior
    consulting expertise for customers’ testing, quality, feedback, and security processes,
    in support of their digital transformation projects for DevOps, DevSecOps,</st>
    <st c="28998">and SRE.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29006">As a senior solutions architect at Spirent Communications, I advised
    clients on integrating test tools and automation with DevOps test environments
    and processes.</st> <st c="29170">I also advised on</st> <st c="29188">the development
    of a powerful test environment automation platform</st> <st c="29255">called</st>
    **<st c="29262">Velocity</st>**<st c="29270">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29271">At</st> **<st c="29275">Trace3</st>**<st c="29281">, I helped</st>
    <st c="29292">build the</st> *<st c="29302">Total DevOps</st>* <st c="29314">consulting</st>
    <st c="29325">practice that emphasized automating</st> **<st c="29362">continuous
    integration and continuous delivery</st>** <st c="29408">(</st>**<st c="29410">CI/CD</st>**<st
    c="29415">) processes for</st> <st c="29432">enterprise clients.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29451">In 2019, I founded a boutique consulting firm called</st> *<st
    c="29505">Engineering DevOps Consulting</st>* <st c="29534">that offers prescriptive
    practices for DevOps, DevSecOps, and SRE transformations based on my book,</st>
    *<st c="29635">Engineering DevOps</st>*<st c="29653">, self-published with</st>
    *<st c="29675">Book Baby</st>* <st c="29684">in 2019.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Partners and Clients](img/B21936_figure_03.10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="30144">Figure 3.10 – Partners and Clients</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30178">As shown in</st> *<st c="30191">Figure 3</st>**<st c="30199">.10</st>*<st
    c="30202">, today I provide DevOps, DevSecOps, and SRE consulting services for
    many enterprises, manufacturers, service providers, and institutions through partnerships
    with other consulting, training, and media firms such as the DevOps Institute,
    DevOps.com, Xellentro, Learning Tree International, and</st> <st c="30496">Opus
    Technologies.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30514">Lessons learned, pitfalls, and strategies to overcome pitfalls</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="30577">Looking back over my career experiences, which were described
    earlier in this chapter, I identified common pitfalls and strategies to overcome
    those pitfalls.</st> <st c="30737">The following sections highlight some of my
    learnings from the point of view of quality, testing, test automation, standardization,
    security,</st> <st c="30879">and feedback.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30892">The importance of quality</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="30918">The primary lesson I learned about quality is that too many organizations
    have a too narrow understanding of how to define, measure, and achieve the level
    of quality appropriate for</st> <st c="31101">their mission.</st> <st c="31116">Dr.</st>
    <st c="31120">Edward Deming, a renowned quality management expert, defined quality
    as a continuous process rather than a static attribute.</st> <st c="31245">He
    emphasized that quality is not merely about meeting specifications or having a
    product free of defects but involves meeting customer needs and exceeding</st>
    <st c="31401">their expectations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31420">The pursuit of “zero defects” is not an appropriate goal and pursuing
    this is wasteful.</st> <st c="31509">Instead, it is necessary to define use cases
    that are important to all the customers and stakeholders of the organization’s
    mission.</st> <st c="31642">Good enough quality occurs when those use cases are</st>
    <st c="31694">fully satisfied.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31710">Having a process for continuous quality evaluation and improvement
    is more important than achieving any one quality milestone because stakeholder
    requirements will evolve as a product or</st> <st c="31898">service matures.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31914">Continuous testing is a key part of achieving a successful continuous
    quality program because testing provides evidence of compliance with stakeholder
    use cases.</st> <st c="32077">However, testing alone is not enough.</st> <st c="32115">Other
    factors, such as responsiveness to support requests, ease of use, integration,
    cost effectiveness, and innovative product roadmaps are equally important to meeting
    customer quality expectations and need to be monitored for an organization to
    continue to</st> <st c="32375">be successful.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32389">Building testing tools into systems</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="32425">I learned that testing is an essential and major part of every
    process, product, and service.</st> <st c="32520">Testing</st> <st c="32528">activities
    include test planning, test creation, test environment setup, coordination, test
    execution, results reporting, results analysis, fault reporting, and repair retest.</st>
    <st c="32704">Testing is often responsible for more than 50% of the total cost
    and time of the value stream.</st> <st c="32799">Successful products and services
    recognize this by building testing and monitoring capabilities in their products
    and processes.</st> <st c="32928">In this way, the testing capabilities are readily
    available when needed and can scale as the product scales.</st> <st c="33037">This
    also ensures test data and results are fed back to all the stakeholders in a form
    that they can immediately use to collaborate, which</st> <st c="33176">reduces
    waste.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33190">Test automation for efficiency and competitiveness</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="33241">In most cases, it is better to fully automate all types of tests.</st>
    <st c="33308">Tests need to be repeated often throughout</st> <st c="33351">each
    pass, and each stage, of a product’s value stream.</st> <st c="33407">Without
    automation, every stage will be delayed waiting for someone</st> <st c="33475">to
    run the tests.</st> <st c="33493">In addition, manual testing is subject to human
    error, resulting in wasteful, false positive and false</st> <st c="33596">negative
    results.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33613">The most competitive products prioritize test automation because
    the time efficiencies and quality benefits derived from automated testing give
    an organization a strategic advantage over competitors</st> <st c="33813">that
    don’t.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33824">However, you must be careful to have strong standards for test
    automation, or else test maintenance and results analysis become a bottleneck
    and</st> <st c="33970">excessive rework.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33987">Advances with AI/ML help improve the quality and speed of every
    aspect of test automation</st> <st c="34078">and maintenance.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34094">Standards accelerate collaboration</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="34129">Without</st> <st c="34138">strong standards for all test artifacts,
    test automation can get out of control and become wasteful.</st> <st c="34239">Standards
    facilitate collaboration between tools and team members.</st> <st c="34306">It
    is important to have standards for quality, test strategies, test plans, test
    cases, test scripts, test environments, test execution, test results, test analysis,
    and</st> <st c="34476">feedback reports.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34493">It is also</st> <st c="34505">important to define</st> **<st c="34525">service-level
    objectives</st>** <st c="34549">(</st>**<st c="34551">SLOs</st>**<st c="34555">)
    that govern how test failures are prioritized and handled by the organization,
    or else the process can cause</st> <st c="34667">organization friction.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34689">Implementation</st> <st c="34705">of a common test engineering
    platform made available as a service to development, test, and operations staff
    is ideal to enable communication of testing artifacts and to ensure everyone in
    the organization has a common “source of truth”</st> <st c="34942">for testing.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34954">Security requires a comprehensive approach</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="34997">Cybersecurity concerns are continuously evolving and escalating
    as systems become more distributed, delivered using multiple pipelines, and deployed
    over distributed ephemeral</st> <st c="35174">infrastructures.</st> <st c="35191">Security
    becomes a major concern and bottleneck in development, integration, delivery,
    and production unless security controls are built into the end-to-end</st> <st
    c="35348">value stream.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35361">A continuous security mindset and implementation of security practices
    requires a combination of DevSecOps practices and in-production SecOps practices
    to ensure security concerns are minimized pre- and post-deployment to production.</st>
    <st c="35596">The entire development team needs secure coding training and security
    practices need to be led by threat modeling appropriate for each application.</st>
    <st c="35744">Code, third-party libraries, and image scanners during integration
    and delivery need to be tuned according to the most</st> <st c="35863">likely
    threats.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35878">Pen testing and chaos security engineering need to be automated
    as part of delivery processes before release to production.</st> <st c="36003">All
    processes and assets need to be protected with identify-based zero-trust technologies
    and firewalls because security threats can come from internal or external sources
    to the organization.</st> <st c="36196">Deployments are best using immutable</st>
    <st c="36233">technologies such</st> **<st c="36251">infrastructure as code</st>**
    <st c="36273">(</st>**<st c="36275">IaC</st>**<st c="36278">), containers, and
    container orchestration tooling that enable infrastructure to respond rapidly
    to changing threat conditions.</st> <st c="36407">Monitoring of security events
    and indicators needs to be visible throughout each value stream from ideation</st>
    <st c="36515">to production.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36529">Without feedback, you are running blind</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="36569">Feedback in the form of a combination of quality metrics, testing
    metrics, and security metrics is critical</st> <st c="36678">to monitor and manage
    the efficient flow of changes for development, integration, delivery, and deployment.</st>
    <st c="36786">Thresholds and goals can be defined as SLOs, and measured</st> <st
    c="36844">continuously using</st> **<st c="36863">service-level indicators</st>**
    <st c="36887">(</st>**<st c="36889">SLIs</st>**<st c="36893">).</st> <st c="36897">Error
    budgets and error budget policies, concepts from SRE practice, are useful to manage
    these activities, to ensure the metrics are respected by</st> <st c="37044">the
    organization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37061">Summary</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="37069">This chapter reflected on my career experiences to distill insights
    into common pitfalls and effective strategies in quality, testing, security, and
    feedback.</st> <st c="37229">It began by emphasizing the multifaceted nature of
    quality, echoing Deming’s perspective that quality is not a static attribute,
    but an ongoing process aligned with customer needs and exceeding their expectations.</st>
    <st c="37443">The pursuit of “zero defects” was deemed wasteful, highlighting
    the importance of identifying crucial use cases and achieving satisfactory quality
    through their fulfillment.</st> <st c="37617">Continuous evaluation and improvement
    were emphasized, recognizing the evolving nature of</st> <st c="37707">stakeholder
    requirements.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37732">Testing emerged as a pivotal aspect, consuming a significant portion
    of resources in the value stream.</st> <st c="37836">Successful products integrate
    testing capabilities within the product itself, ensuring scalability and immediate
    availability of test data for collaboration among stakeholders, thereby</st> <st
    c="38021">reducing waste.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="38036">Test automation stood out as a driver of efficiency and competitiveness.</st>
    <st c="38110">The chapter advocated for comprehensive automation to avoid delays
    and errors inherent in manual testing but stressed the necessity of strong standards
    to maintain efficiency in test maintenance and</st> <st c="38309">results analysis.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="38326">The establishment of standards was highlighted as crucial for
    collaboration and control in testing practices.</st> <st c="38437">From quality
    to feedback reports, standards were deemed essential.</st> <st c="38504">A common
    test engineering platform was advocated for, which enhanced communication and
    a shared foundation of truth across</st> <st c="38627">the organization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="38644">Addressing security concerns, the chapter underscored the need
    for a comprehensive approach throughout the value stream.</st> <st c="38766">From
    DevSecOps practices to in-production SecOps practices, the integration of security
    measures was emphasized.</st> <st c="38879">Threat modeling, automated security
    testing, and a zero-trust approach were recommended to mitigate both internal
    and external</st> <st c="39006">security threats.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39023">Lastly, the importance of feedback mechanisms, incorporating quality,
    testing, and security metrics, was stressed.</st> <st c="39139">SLOs, SLIs, and
    error budget policies were highlighted as practical tools for continuous monitoring
    and management, ensuring organizational alignment with</st> <st c="39294">defined
    metrics.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39310">The next chapter will explain an engineering approach to guide
    transformation activities</st> <st c="39400">toward success.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="0">Part 2: Determining Solutions Priorities</st>'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*<st c="41">Part 2</st>* <st c="48">of this book focuses on the strategic planning
    and prioritization necessary for effectively implementing continuous practices
    in an organization.</st> <st c="195">It begins with an exploration of a systematic
    engineering approach to planning solutions for continuous testing, quality, security,
    and feedback.</st> <st c="341">This sets a disciplined framework for organizations
    to follow, ensuring that their transformation efforts are both structured</st>
    <st c="467">and effective.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="481">The section progresses by discussing how to determine transformation
    goals that are tailored to the specific needs of different organizations, products,
    and services.</st> <st c="649">It introduces tools and methodologies that help
    in setting these goals, providing a clear roadmap for businesses to follow.</st>
    <st c="773">Additionally, the section covers the importance of understanding the
    current state of an organization’s capabilities through discovery and benchmarking,
    which is crucial for identifying areas that need improvement.</st> <st c="988">The
    selection of appropriate tool platforms and the integration of AI and ML technologies
    are also discussed, highlighting how these can enhance continuous practices and
    foster a culture of continuous improvement and resilience.</st> <st c="1217">This
    part of the book is essential for anyone looking to strategically prioritize and
    streamline their approach to digital transformation through</st> <st c="1363">continuous
    practices.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1384">This part includes the</st> <st c="1408">following chapters:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="1427">Chapter 4</st>*](B21936_04.xhtml#_idTextAnchor053)*<st c="1437">,
    Engineering Approach to Continuous Testing, Quality, Security, and Feedback</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="1514">Chapter 5</st>*](B21936_05.xhtml#_idTextAnchor065)*<st c="1524">,
    Determining Transformation Goals</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="1558">Chapter 6</st>*](B21936_06.xhtml#_idTextAnchor084)*<st c="1568">,
    Discovery and Benchmarking</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="1596">Chapter 7</st>*](B21936_07.xhtml#_idTextAnchor111)*<st c="1606">,
    Selecting Tool Platforms and Tools</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="1642">Chapter 8</st>*](B21936_08.xhtml#_idTextAnchor136)*<st c="1652">,
    Applying AL/ML to Continuous Testing, Quality, Security, and Feedback</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
