["```\nbolt --verbose plan run pecdm::provision –-params @params.json\n```", "```\n# Configure the mount points for the web apps.\nweb-router-service: {\n    # These two should not be modified because the Puppet 4 agent expects them to\n    # be mounted at these specific paths.\n    \"puppetlabs.services.ca.certificate-authority-service/certificate-authority-service\": \"/puppet-ca\"\n    \"puppetlabs.services.master.master-service/master-service\": \"/puppet\"\n    # This controls the mount point for the Puppet administration API.\n    \"puppetlabs.services.puppet-admin.puppet-admin-service/puppet-admin-service\": \"/puppet-admin-api\"\n}\n```", "```\n        {\n            # Allow nodes to retrieve their own catalog\n            match-request: {\n                path: \"^/puppet/v3/catalog/([^/]+)$\"\n                type: regex\n                method: [get, post]\n            }\n            allow: \"$1\"\n            sort-order: 500\n            name: \"puppetlabs v3 catalog from agents\"\n        },\n```", "```\n/puppet/v3/catalog/pe.example.com?environment=production\n```", "```\nserver1.puppet.com\n*.example.com\n```", "```\n[master]\nnode_terminus = classifier\nstoreconfigs = true\nstoreconfigs_backend = puppetdb\nreports = puppetdb\ncertname = pe-server-davidsand-0-cffe02.tq2kpafq5bsehkpub4ur5a35ya.xx.internal.cloudapp.net\n```", "```\npuppet config delete --section master storeconfigs\npuppet config add --section master certname newname.example.com\n```", "```\n    puppet ssl clean\n    ```", "```\n    mv /etc/puppetlabs/puppet/ssl /etc/puppetlabs/puppet/ssl.old\n    ```", "```\nresources { (type = \"File\" and title = \"/etc/motd\") and ! ( parameters.mode = \"0644\" and parameters.owner =\"root\") }\n```", "```\n$changed_nodes = puppetdb_query(node[certname]{ resource {'latest_report_status = \"unchanged\"}}) .map |$value| { $value[\"certname\"] }\nnotify {\"Nodes changed\":\n    message => \"The following nodes changed on their last run ${join($changed_nodes, ', ')}\",\n}\n```", "```\npuppet query '<PQL query>' \\\n  --urls https://puppetdb.example.com:8081 \\\n  --cacert /etc/puppetlabs/puppet/ssl/certs/ca.pem \\\n  --cert /etc/puppetlabs/puppet/ssl/certs/<certname_of_local_host>..pem \\\n  --key /etc/puppetlabs/puppet/ssl/private_keys/<certname_of_local_host>..pem\n```", "```\ncurl -X GET <fqdn_of_puppetDB_host>https://<fqdn_of_puppetDB_host>:8081/pdb/query/v4\\\n  --tlsv1 \\\n  --cacert /etc/puppetlabs/puppet/ssl/certs/ca.pem \\\n  --cert /etc/puppetlabs/puppet/ssl/certs/<certname_of_local_host>.pem \\\n  --key /etc/puppetlabs/puppet/ssl/private_keys/<cert_name_of_local_host.pem \\\n  --data-urlencode 'query=<PQL query>'\n```"]