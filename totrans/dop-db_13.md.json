["```\n# Define a Prometheus deployment and service\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus\nspec:\n  selector:\n    matchLabels:\n      app: prometheus\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      containers:\n        - name: prometheus\n          image: prom/prometheus\n          args:\n            - \"--config.file=/etc/prometheus/prometheus.yml\"\n          ports:\n            - containerPort: 9090\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\nspec:\n  selector:\n    app: prometheus\n  ports:\n    - port: 9090\n      targetPort: 9090\n```", "```\nfrom fbprophet import Prophet\nimport pandas as pd\n# Load and preprocess time-series data\ndf = pd.read_csv('metrics.csv')\ndf['ds'] = pd.to_datetime(df['timestamp'])\ndf['y'] = df['value']\n# Create and fit the Prophet model\nmodel = Prophet()\nmodel.fit(df)\n# Predict future values\nfuture = model.make_future_dataframe(periods=30)\nforecast = model.predict(future)\n# Identify anomalies in the forecasted values\nanomalies = forecast[forecast['yhat_upper'] < df['y']]\n```", "```\n# Query logs related to a specific component or error\nGET /logs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"component\": \"database\" }},\n        { \"match\": { \"error\": \"connection error\" }}\n      ]\n    }\n  }\n}\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: redisclusters.mycompany.com\nspec:\n  group: mycompany.com\n  versions:\n    - name: v1\n      served: true\n      storage: true\n  scope: Namespaced\n  names:\n    plural: redisclusters\n    singular: rediscluster\n    kind: RedisCluster\n```", "```\n---\n- name: Scale Kubernetes Deployment\n  hosts: kubernetes\n  tasks:\n    - name: Scale Deployment\n      k8s:\n        api_version: apps/v1\n        kind: Deployment\n        name: myapp\n        namespace: mynamespace\n        replicas: 5\n```"]