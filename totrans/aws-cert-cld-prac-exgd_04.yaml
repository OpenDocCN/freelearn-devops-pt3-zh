- en: '[*Chapter 3*](B17124_03_Final_SK_ePub.xhtml#_idTextAnchor050): Exploring AWS
    Accounts, Multi-Account Strategy, and AWS Organizations'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To access services on the AWS platform, you need to have an AWS account. AWS
    offers hundreds of different services, which you, as a customer, can consume to
    build cloud IT solutions for your business and clients.
  prefs: []
  type: TYPE_NORMAL
- en: AWS offers public cloud services that are accessible to anyone on the internet.
    An AWS account provides a means of accessing these public AWS services in an isolated
    boundary separate from other customers. This means that users outside your account
    cannot access your resources unless, of course, you grant them access. An AWS
    account thus offers security, access isolation, and billing boundaries for the
    services that you consume and the resources you deploy. In addition, the cost
    of consuming any AWS service will be allocated to your AWS account.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we explore the benefits of having multiple AWS accounts and
    we also discuss how to manage those accounts using a service called **AWS Organizations**.
    We also demonstrate how to set up your first AWS account, which you will be using
    throughout the various exercises in this training guide.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Why have a multi-account AWS environment?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to AWS Landing Zone
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automating landing zone creation with AWS Control Tower
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring AWS Organizations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exercise 3.1: Setting up your first AWS Free Tier account'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exercise 3.2: Setting up a billing alarm'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why have a multi-account AWS environment?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While you can host all your business resources in a single AWS account, this
    can very quickly become too complex to manage. Imagine hosting multiple resources
    for your various non-production applications under development, **User Acceptance
    Testing** (**UAT**), and production workloads, all within the same AWS account.
    This can rapidly become a huge management overhead. The complexity is further
    compounded because you would have to ensure that many of these applications are
    isolated from each other for compliance or security reasons. This would require
    you to define highly complex policies and permissions to ensure proper segregation
    of different workload types and effective management of resources.
  prefs: []
  type: TYPE_NORMAL
- en: Above all, having a single AWS account prevents you from limiting the blast
    radius of any major disasters. Separating your workloads using an appropriate
    strategy will help limit the blast radius of catastrophic disasters. So, for example,
    you can have a separate account for all your experimentation work such as developing
    new applications (what we call a sandbox environment) and other accounts for your
    actual development, testing, and production environments. In the event of any
    disaster (such as accidental exposure of root account credentials or a misconfiguration
    of an autoscaling group, causing a repeat loop of EC2 instance deployments) occurring
    in the sandbox environment, it will not affect the other accounts if those workloads
    are separated and isolated from one another.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the diagram shown in *Figure 3.1*, we can see that a number of accounts
    have been created for a given company. In this example, we have development, UAT
    testing, and production accounts as well as a sandbox account for experimental
    work:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – Multiple accounts help to limit the blast radius of your workloads'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_01.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.1 – Multiple accounts help to limit the blast radius of your workloads
  prefs: []
  type: TYPE_NORMAL
- en: 'Some key benefits of a multi-account architecture include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Administrative isolation between workloads**: With a multi-account architecture,
    you can offer different business units varied levels of administrative controls,
    depending on several factors including development life cycles. For example, you
    may *not* want to grant your developers full access to the production account,
    where you deploy applications under public release.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limited visibility and discoverability of workloads**: AWS accounts offer
    a natural boundary and enable you to isolate your workloads from any identity
    external to the account. Applications and resources deployed in an AWS account
    are not accessible to identities (users and applications) from any other AWS accounts
    unless permission is explicitly granted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Isolation of security and identity management**: Instead of creating multiple
    user identity accounts for your team (for example, developers, server administrators,
    UAT testers) in each AWS account that they need to work in, you can host all your
    users in a *separate AWS identity management account*. This enables you to avoid
    duplicate accounts for your staff and reduces management overhead. Ultimately,
    your users can be granted access to any of your other AWS accounts using **cross-account
    access**, where policies and permissions limit the tasks they can perform following
    the **principle of least privilege**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Isolation of recovery or audit accounts**: Many organizations will need to
    have a disaster recovery and business continuity strategy so that in the event
    of failure, the business can easily continue their operations using duplicate
    workloads and quickly recover from any major loss. Such workloads should be placed
    in separate accounts as best practice.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we briefly introduced you to the concept of AWS accounts and
    how they grant you isolated access to AWS services, ensuring that no other customer
    can gain visibility of your workloads and applications unless you explicitly grant
    them that level of access.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we look at services offered by AWS to help you quickly
    design and architect your multi-account strategy. We discuss AWS Landing Zone,
    which was a service offered by AWS solutions architects to create a customized
    baseline architecture for your multi-account deployment. We also take a look at
    AWS Control Tower, a service that automates the build of landing zones in accordance
    with industry best practices.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Landing Zone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building a multi-account environment can become very complex and time-consuming.
    AWS offers its customers a set of best practice methodologies to follow when designing
    a multi-account ecosystem. Previously, AWS offered a solution called *AWS Landing
    Zone*, which has now been deprecated in favor of the new AWS Control Tower.
  prefs: []
  type: TYPE_NORMAL
- en: The previous AWS Landing Zone service offered customers a baseline blueprint
    to design and architect a multi-account environment, which offered identity and
    access management, governance, data security, and logging features.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Although AWS Landing Zone is currently in long-term support and will not receive
    any additional features, it is still likely to show up in the exam.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Control Tower
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Customers who are now looking to set up a landing zone in accordance with the
    updated architectural best practices should use the new AWS Control Tower. This
    service automates the setup of a new landing zone using the latest blueprints.
    Some AWS accounts created as part of this landing zone include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Creation of an AWS Organizations and multi-account setup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity and access management with AWS **Single Sign-On** (**SSO**) default
    directory services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Account federation using SSO
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Centralized logging using AWS CloudTrail and AWS Config
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The landing zone deployed by AWS Control Tower comes configured with recommended
    security policies called guardrails and customers can choose how their accounts
    are configured to comply with their overall organizational policies.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we looked at two services that can be used easily to architect
    your multi-account architecture. If this was to be carried out manually, it would
    be time-consuming and complex. We also examined AWS Landing Zone and the new AWS
    Control Tower.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look at how you centrally manage your various AWS
    accounts using a service called AWS Organizations. As a cloud practitioner, understanding
    the requirements for multiple accounts and knowing which tools can be used to
    manage them is vital to help your clients build a robust and secure cloud architecture
    for their businesses.
  prefs: []
  type: TYPE_NORMAL
- en: Managing multiple accounts – AWS Organizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is all very well creating *n* number of AWS accounts to help you separate
    out different workloads or different application life cycles. But you also need
    to think about how you effectively manage them – who has permissions to what and
    which set of services can be launched and configured in which AWS account.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing AWS Organizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The AWS Organizations service enables you to centrally manage all of your AWS
    accounts. This service is **offered free**; the resources launched within are,
    however, chargeable as they would be even if you were not using the AWS Organizations
    service. AWS Organizations allows you to create one **management account** (previously
    termed **master account**) and then invite or create additional AWS accounts that
    will become member accounts of the organization. AWS Organizations offers tight
    integration with a number of AWS services and allows you to scope out which services
    can be consumed in your individual member accounts.
  prefs: []
  type: TYPE_NORMAL
- en: You may also have multiple member accounts in each AWS Organizations instance,
    where some accounts share similar types of workloads or functions. You can, therefore,
    collate common accounts under what are known as **Organization Units** (**OUs**).
    An OU is a logical group of one or more AWS accounts in your AWS Organizations
    that allows you to organize your numerous AWS accounts into hierarchies. This
    makes it easier to manage your numerous AWS accounts.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can then apply **Service Control Policies** (**SCPs**) to your OUs (or
    directly to the AWS account, although this is not considered best practice) to
    apply guardrails to what services can be deployed and configured in each account.
    In the following diagram, we can see how service control policies are being applied
    to OUs, which determine permission boundaries for the AWS accounts contained within
    those OUs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – AWS Organizations with multiple accounts'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_02.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.2 – AWS Organizations with multiple accounts
  prefs: []
  type: TYPE_NORMAL
- en: Consolidated billing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another key feature of AWS Organizations is **consolidated billing**. AWS Organizations
    can be deployed using one of two options – **all features** or just the **consolidated
    billing feature**:'
  prefs: []
  type: TYPE_NORMAL
- en: '**All features**: This allows you to take advantage of AWS Organizations''
    security and management capabilities for member accounts with the **Service Control
    Policies** (**SCPs**) and tag policies. The **All features** option also comes
    with the consolidated billing feature, which allows you to have one centralized
    bill for all your member accounts. The **Management Account** is ultimately responsible
    for the bill and charges incurred by the other member accounts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consolidated billing feature**: If you enable just the consolidated billing
    feature, you get basic management tools and the ability to get a centralized bill
    for all your member accounts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One of the prime benefits of AWS Organizations in your multiple account strategy
    is the consolidated billing feature. The management account is responsible for
    all charges incurred by its member accounts and you are provided with a combined
    view of the total AWS charges incurred by the member accounts. You can also view
    itemized details of charges incurred by each individual member account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some key benefits are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Single bill**: You get a single bill, which shows charges incurred by each
    member account.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Easy tracking**: You can track individual account charges.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Volume discounts**: With multiple accounts combined in AWS Organizations,
    you benefit by combining the costs across your accounts and this enables you to
    receive discounts when the total charges cross certain volume discount thresholds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Free service**: You can make use of the consolidated billing feature at no
    additional cost.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Organizations offers centralized management of all your AWS accounts, enabling
    you to enforce security boundaries and ensure cost management. Determining how
    many AWS accounts you need for your organization will largely depend on your business
    requirements and whether you have the necessary infrastructure as per best practices.
  prefs: []
  type: TYPE_NORMAL
- en: How many AWS accounts do you need?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Deciding on the number of AWS accounts you need will involve careful consideration
    of your business functional requirements, the complexity of workloads, security,
    and compliance requirements (for example, HIPAA compliance, which requires businesses
    in the healthcare industry to follow various guidelines and enforce technical
    safeguards to protect the integrity of an individual's health information).
  prefs: []
  type: TYPE_NORMAL
- en: In general, you would expect to host a minimum number of accounts to facilitate
    the isolation of your different development and production life cycles and offer
    redundancy and resilience against failures. You should also encourage a design
    strategy that limits administrative overhead.
  prefs: []
  type: TYPE_NORMAL
- en: The following discussion illustrates one such example of a set of AWS accounts
    you might need, but remember that your architecture might be different based on
    your specific requirements. As much as possible, it is advisable to create accounts
    that meet your functional requirements and fulfill your security controls, rather
    than simply creating accounts based on some corporate hierarchical nature.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on your architecture, you should start by defining what OUs you need
    to create in AWS Organizations. Before configuring AWS Organizations, you need
    to create your first AWS account, or at least a new AWS account that will be the
    management account of the organization.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we discuss best practices for configuring AWS Organizations,
    specifically the importance of correctly designing your OUs.
  prefs: []
  type: TYPE_NORMAL
- en: Core AWS OUs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At a basic level, you should create an infrastructure OU and a security OU,
    which will contain a shared infrastructure services account and a security account:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Infrastructure services account**: These will contain services that can be
    shared across all accounts for common services (for example, directory services,
    shared networking environments, and other common shared IT services, such as central
    repositories for your **Amazon Machine Images** (**AMIs**)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security services**: These will contain a centralized Identity and Access
    Management account to host individual user accounts, groups, and roles. These
    identities will then be granted access to other accounts via cross-account policies,
    as well as other services for logging and auditing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both the foundational core OUs will contain non-production and production AWS
    accounts. Separating non-production from production ensures the isolation of workloads
    under development from those that are released for business consumption and limits
    the blast radius of any disasters.
  prefs: []
  type: TYPE_NORMAL
- en: Additional OUs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Depending on your business use case, you can have any number of additional
    OUs within which to contain appropriate accounts. As depicted in the following
    diagram, your AWS Organizations will comprise the core OUs as well as any number
    of additional OUs that will meet your individual business requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – AWS configured with core infrastructure as well as security
    and'
  prefs: []
  type: TYPE_NORMAL
- en: AWS Organizations additional OUs
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_03.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.3 – AWS configured with core infrastructure as well as security and
    AWS Organizations additional OUs
  prefs: []
  type: TYPE_NORMAL
- en: 'To illustrate an example, you may wish to configure the following additional
    OUs for your organization:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sandbox OUs**: As your business develops new applications or perhaps conducts
    experiments to improve existing workloads, you want to make sure that the blast
    radius is restricted to an environment you can afford to have failures in. A sandbox
    environment should be an account that can be detached from internal networks and
    you must establish limits to cap expenses and prevent overuse.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workloads OUs**: This OU will contain AWS accounts, where you host customer-facing
    applications. Ideally, you will have several non-production environments such
    as Dev, Test, and Pre-Prod. You should also consider multiple production accounts,
    such as Prod 1 and Prod 2, for even greater resilience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Suspended OUs**: Any account no longer being used may still need to be kept
    for auditing and compliance purposes. Apply necessary SCPs to ensure that only
    specific admins can access these accounts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The preceding list is by no means exhaustive, and your OU architecture is going
    to be influenced by your functional and technical needs. For additional guidance
    on the type of OU structure you could build, refer to the following web page on
    recommended OUs: [https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/recommended-ous.html](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/recommended-ous.html).'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we learned about the AWS Organizations service and how it can
    be used to design and architect a multi-account strategy for your business. We
    examine the core features of AWS Organizations, which include the ability to apply
    **Service Control Policies** (**SCPs**) and effectively manage your billing and
    costs with the consolidated billing feature.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look at AWS Free Tier accounts and showcase how
    to create one, for which you will need to complete the various hands-on labs in
    this training guide.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Free Tier accounts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An AWS Free Tier account is a normal standard account that can be used for
    any purpose or workload type. AWS offers a generous Free Tier for the first 12
    months of opening any new account. The Free Tier offers access to more than 85
    AWS technologies and services (at the time of writing this training guide), wherein
    if you consume these services up to specified thresholds, you will not be charged.
    For example, under the Free Tier, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Consume up to 5 GB of Amazon S3 storage for up to 12 months, free of charge.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launch a `t.2micro` `t2.micro` instances for a few hours a month, as long as
    the total duration does not exceed 750 compute hours a month. This may be useful
    if you want to perform some proof of concept work or testing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Run a lightweight Amazon Relational Database Service (RDS) instance for up to
    750 hours a month.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will look at some additional features available to you
    under the AWS Free Tier account offering.
  prefs: []
  type: TYPE_NORMAL
- en: Free tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In addition to the standard 12-month Free Tier offering, certain services are
    offered completely free, without any time limit. These may include tools that
    can be used to deploy certain resources. The tools themselves are free to use,
    but the resources deployed will be chargeable based on their price list. Some
    examples of these tools are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS CloudFormation**: This is an AWS service that enables you to define templates
    (using code) to launch various infrastructure components. Amazon CloudFormation
    enables developers and architects to create a collection of related AWS and third-party
    resources, and provision and manage them in an orderly and predictable fashion.
    These templates can be used for repeat deployments. While the service itself is
    free to use, resources and infrastructure components deployed will be chargeable
    as per Amazon''s price list, such as EC2 instances, RDS databases, and networking
    components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Elastic Beanstalk**: This is an orchestration service that provisions
    necessary infrastructure components to support and power your applications. Such
    infrastructure components include S3 buckets, EC2 instances, and load balancers.
    Amazon Elastic Beanstalk enables developers to simply upload their code ready
    for deployment and AWS provisions the infrastructure required to support that
    application. The orchestration service is again offered free of cost, but the
    resources are chargeable, as indicated previously.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to the preceding free tools, AWS offers certain limited resources
    for some services throughout the lifetime of your AWS account. In the next section,
    we will look at some examples.
  prefs: []
  type: TYPE_NORMAL
- en: Always free services (limited offering)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Some AWS services are offered completely free on a permanent basis. These include
    services where resources can be created up to specified threshold limits without
    incurring any charges. Examples include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon CloudWatch**: Used for monitoring your cloud resources and applications.
    You get 10 custom metrics and up to 10 alarms, with up to 1,000,000 API requests
    completely free.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Lambda**: A serverless compute service that allows you to run code
    in response to events and can help you build a serverless architecture. With AWS
    Lambda, you get up to 1,000,000 free requests per month and up to 3.2 million
    seconds of compute time per month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Organizations**: Centrally manage and control access to your AWS accounts
    and benefit from consolidated billing with volume discounts. This service is offered
    entirely free of charge on a permanent basis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS also offers various product trials from time to time. In the next section,
    we will look at this in some detail.
  prefs: []
  type: TYPE_NORMAL
- en: Free trials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Some services are offered with free trials, for example a 30-day trial to test
    out a service. Examples include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Workspaces**: These are virtual desktops that can run Linux or Windows
    OSes. As a trial, you can get up to two standard edition workspaces that come
    with an 80 GB root volume and a 50 GB user volume. You can use both workspaces
    for up to 40 hours combined usage per month, for 2 months, as part of the free
    trial.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Detective**: This service enables you to analyze and visualize security
    data and identify the root cause of potential security issues. You get a 30-day
    free trial of the service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Redshift**: This is an enterprise-grade data warehousing solution through
    which you can query and combine exabytes of structured and semi-structured data
    and conduct insights and analysis of your data. AWS offers a 2-month free trial
    with 750 hours of a DC2.Large node per month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we looked at details of the AWS Free Tier account. Amazon offers
    a wide range of services with specific limits free for the first 12 months of
    your account opening. This allows you to experiment with those services, create
    sandbox environments, and start architecting your solutions. The AWS Free Tier
    is of great help to students wanting to learn about the various AWS services in
    preparation for their exams. At times, however, you may have to go over the free
    tier thresholds to really learn about more complex configuration options.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will complete a lab exercise, where you will be provided
    with a step-by-step guide on creating your first AWS account.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 3.1 – Setting up your first AWS Free Tier account
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following step-by-step process will show you how to set up your first AWS
    account. You will need the following to complete the setup process:'
  prefs: []
  type: TYPE_NORMAL
- en: Your personal details, name, physical address, and an email address.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mobile phone.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A credit card. As far as possible, the labs in this training guide will fall
    under the free tier and your credit card will not be charged for those resources
    you deploy. A couple of labs, however, may go over the free tier threshold and
    if you choose to do those labs, there may be a small minimum charge. We will discuss
    this in more detail shortly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now that we know about the requirements, let''s get started with creating our
    account:'
  prefs: []
  type: TYPE_NORMAL
- en: In your favorite browser, search for the term `AWS Free Tier` and you should
    find a link to the Amazon Web Services Free Tier offering. Click on the second
    link, as shown in the following screenshot:![Figure 3.4 – AWS Free Tier link via
    Google Search
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_04.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.4 – AWS Free Tier link via Google Search
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will be taken to the AWS Free Tier home page. Next, click on **Create a
    Free Account**:![Figure 3.5 – Free account setup
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.5 – Free account setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: At the AWS **Sign in** page, click, **Create a new AWS account**:![Figure 3.6
    – Free account setup – creating a new AWS account
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_06.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.6 – Free account setup – creating a new AWS account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, provide an email address, choose a password, and choose an account name.
    The account name can be any name you like to use to identify the purpose of the
    account, for example, Dev or Prod:![Figure 3.7 – Free account setup – providing
    an email address and an account name
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_07.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.7 – Free account setup – providing an email address and an account
    name
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you may be asked to fill up a captcha form for security. Type the letters
    and numbers in the image into the textbox provided and click **Continue**:![Figure
    3.8 – Free account setup – security check screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_08.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.8 – Free account setup – security check screen
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you need to provide your full contact details and choose the type of account
    you want to create – Personal or Professional. Professional accounts allow you
    to get a full tax invoice and, in some countries, claim back certain types of
    tax, such as VAT or GST. Once you have completed the form, click **Create Account
    and Continue**:![Figure 3.9 – Free account setup – providing contact details
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_09.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.9 – Free account setup – providing contact details
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you need to provide your debit or credit card details, confirm your address,
    and click **Verify and Add**:![Figure 3.10 – Free account setup – providing credit
    card details
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_10.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.10 – Free account setup – providing credit card details
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You may need to provide a one-time PIN that will be sent to your phone to verify
    the card. In some countries, you may be charged a very small amount, perhaps a
    few cents, to verify the card, but this amount will be refunded through the banking
    system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After this, you will receive a **Confirm your identity** dialog box that requires
    you to provide a phone number using which you will be sent a verification code,
    either as an SMS text message or voice call, depending on your preference. You
    will also need to complete the security checkbox and then click on, for instance,
    the **Send SMS** option, as shown in the following screenshot:![Figure 3.11 –
    Free account setup – providing a phone number for verification
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_11.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.11 – Free account setup – providing a phone number for verification
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will then be taken to the following dialog box, which requires you to provide
    the verification code that has been sent to your phone:![Figure 3.12 – Free account
    setup – providing a verification code received on your mobile phone
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_12.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.12 – Free account setup – providing a verification code received on
    your mobile phone
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you enter the code, your account will be verified, and you should get the
    following dialog box. Click **Continue**:![Figure 3.13 – Free account setup –
    completing the verification process
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_13.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.13 – Free account setup – completing the verification process
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will be taken to the **Select a Support Plan** screen, where you will have
    the option to select your support plan for this account. For the purpose of this
    account, go ahead and select **Basic Plan**:![Figure 3.14 – Free account setup
    – selecting the basic support plan
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_14.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.14 – Free account setup – selecting the basic support plan
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will now be taken to the **Welcome to Amazon Web Services** screen. Click
    the **Sign In to the Console** button:![Figure 3.15 – Sign In to the Console
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_15.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.15 – Sign In to the Console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Ensure that you select **Root user** and provide the email address and password
    you used to create your new Free Tier account. This email address and password
    combination is also known as the **root user** of your AWS account and has complete
    control over your account:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.16 – Free account setup – signing in as the root user to test account
    setup'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B17124_03_16.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.16 – Free account setup – signing in as the root user to test account
    setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once logged in, you will be presented with the **AWS Management Console** page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.17 – Free account setup – accessing the AWS Management Console'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_17.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.17 – Free account setup – accessing the AWS Management Console
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you created your first AWS account, which will enable you to
    access all AWS services, across its global infrastructure. Using your AWS account,
    you can now set up and deploy a wide range of resources to support and host any
    application workload. In the next exercise, we look at how to set up your billing
    alarm.
  prefs: []
  type: TYPE_NORMAL
- en: To maximize your benefit from this training, you are encouraged to complete
    all of the exercises. This will help you to gain the necessary hands-on experience
    and the confidence to start building real-world solutions on AWS. While we ensure
    that most of the exercises fall within the Free Tier thresholds, there are a few
    that will incur some costs. You will be notified of this as part of the exercise
    and you may choose to complete them if you wish.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, you may deploy certain resources and forget to terminate them,
    resulting in crossing some of those Free Tier thresholds. By having a billing
    alarm, you can set yourself a small budget sufficient to complete all of the labs.
    With a billing alarm in place, you will be alerted if your total charges cross
    the budgeted thresholds.
  prefs: []
  type: TYPE_NORMAL
- en: We discuss how to set up your billing alarm in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 3.2 – Setting up a billing alarm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you configure a billing alarm, you define a dollar amount as a threshold
    value as your maximum budget. If the total charges on your AWS account cross this
    value, you are alerted with a notification and can take remedial action.
  prefs: []
  type: TYPE_NORMAL
- en: As previously discussed, this training guide offers several hands-on labs and
    exercises to enable you to gain real-world hands-on experience in configuring
    various services to host your workloads in the cloud. Most of the labs will fall
    within the free tier, except for a few that may incur very minimal charges. We
    indicate the labs that may incur such charges. It is also important to terminate
    any labs you complete to ensure you do not forget about them.
  prefs: []
  type: TYPE_NORMAL
- en: To complete all exercises in this training guide, we recommend you set a billing
    alarm of USD 10, although you can choose any value you are comfortable with. Should
    you exceed this dollar amount, you will be alerted with a notification via email
    to take immediate action. You can then terminate any labs you no longer need.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s now proceed with configuring your AWS billing alarm. We start by
    enabling the option to receive billing alerts. This is a prerequisite step and
    must be completed before configuring billing alarms:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to your AWS Management Console using your root account credentials. This
    is the email address and password you will have configured at the time of account
    sign-up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Access the **Billing and Cost Management** dashboard at [https://console.aws.amazon.com/billing/](https://console.aws.amazon.com/billing/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the left-hand navigation pane, click **Billing Preferences**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Receive Billing Alerts** and then click **Save Preferences**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot illustrates enabling the billing alerts option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.18 – Setting up billing alarms – enabling the option to receive
    billing alerts'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_18.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.18 – Setting up billing alarms – enabling the option to receive billing
    alerts
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have enabled the option to receive billing alerts, you can proceed
    with setting up your billing alarm. Note that once this setting has been enabled,
    it cannot be disabled.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following step-by-step process, you create an alarm that sends an email
    message when your estimated charges for your AWS account exceed a specified threshold:'
  prefs: []
  type: TYPE_NORMAL
- en: Access the CloudWatch console at [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/).
    Note that billing metric data is stored in the US-East-1 Region. From the top
    right-hand menu, ensure that you are in the N. Virginia (us-east-1) Region as
    per the following screenshot:![Figure 3.19 – Setting up billing alarms – navigating
    to the N. Virginia Region
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_19.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.19 – Setting up billing alarms – navigating to the N. Virginia Region
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the left-hand navigation pane, select **Alarms** and then click **Create
    Alarm** in the far-right hand corner of the screen. You will be presented with
    the four-step **Create alarm** wizard:![Figure 3.20 – Setting up billing alarms
    – setting up billing alarms in CloudWatch
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_20.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.20 – Setting up billing alarms – setting up billing alarms in CloudWatch
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under **Step 1**, click **Select metric**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **All metrics**, click on **Billing**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, click on **Total Estimated Charge**:![Figure 3.21 – Setting up billing
    alarms – defining metrics for Total Estimated Charge
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_21.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.21 – Setting up billing alarms – defining metrics for Total Estimated
    Charge
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the checkbox next to the **USD** currency for the metric name **EstimatedCharges**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Select metric**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the dialog box entitled **Specify metric and conditions**, scroll down and
    select **Static** as the threshold type, under **Conditions**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Greater > threshold**, under the heading **Whenever EstimatedCharges
    is...**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, set the dollar amount to **10** for USD under the **Define the threshold
    value** sub-heading, and then click **Next**, as per the following screenshot:![Figure
    3.22 – Setting up billing alarms – setting up a billing alarm threshold value
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_22.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.22 – Setting up billing alarms – setting up a billing alarm threshold
    value
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In *Step 2*, you can now configure actions when the alarm breaches. For this,
    click the **Add notification** button:![Figure 3.23 – Setting up billing alarms
    – setup notification
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_23.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.23 – Setting up billing alarms – setup notification
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under the alarm state trigger, make sure that the **In alarm** state is selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, under **Select an SNS topic**, select the option for **Create new topic**.
    **SNS** stands for **Simple Notification Service** and is a push-based messaging
    service. You can configure an SNS topic to send you email alerts when the alarm
    is in the **In alarm** state. We discuss Amazon SNS in detail in [*Chapter 10*](B17124_10_Final_SK_ePub.xhtml#_idTextAnchor249),
    *Application Integration Services*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under the heading `MyBillingAlerts`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, under the heading **Email endpoints that will receive the notification…**,
    provide an email address that you have access to where the alerts will be sent.
    You can use the same email address that you created your AWS account with.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, click **Create topic**:![Figure 3.24 – Setting up billing alarms – defining
    SNS topics for notifications
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_24.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.24 – Setting up billing alarms – defining SNS topics for notifications
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your SNS topic with the name you chose will be created and you will see the
    email address that notifications will be sent to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll toward the bottom of the screen and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In *Step 3*, provide an appropriate name and description for the alarm and click
    **Next**:![Figure 3.25 – Setting up billing alarms – alarm setup
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_25.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.25 – Setting up billing alarms – alarm setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In *Step 4*, you can review your settings and confirm by clicking on the **Create
    alarm** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You are then presented with the alarm configuration status in Amazon CloudWatch:![Figure
    3.26 – Setting up billing alarms – verifying the Actions status
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_26.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.26 – Setting up billing alarms – verifying the Actions status
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will notice from the preceding screenshot that you have a **Pending confirmation**
    link highlighted in red. When you configure an SNS notification to send alerts
    to an email, you are, in effect, subscribing to the SNS topic you created earlier.
    For security purposes and to avoid rogue messages, you are required to log in
    to your email account and confirm the subscription.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to your email account and you should find an email from Amazon asking
    you to confirm your subscription, as in the following screenshot:![Figure 3.27
    – Setting up billing alarms – confirming a notification subscription
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_03_27.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 3.27 – Setting up billing alarms – confirming a notification subscription
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on the **Confirm subscription** link so that your subscription can be
    activated. Should your monthly charges exceed the USD 10 threshold, an email notification
    will be sent to you and you can terminate any unwanted or forgotten labs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you now refresh your alarms by clicking on the circular arrow, you will
    see that the pending confirmation message disappears. Furthermore, as this is
    a brand-new account, you will not yet have incurred any charges and you will note
    that the alarm is in the **OK** state:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.28 – Setting up billing alarms – verifying alarm status'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_03_28.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.28 – Setting up billing alarms – verifying alarm status
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have set up and configured your AWS billing alarms, you can be
    rest assured that you will be alerted if you exceed the threshold you selected
    previously. Alarms can be set for a wide range of services, enabling you to effectively
    monitor and maintain your workloads on AWS. Alarms are configured in Amazon CloudWatch,
    which we will discuss in detail in [*Chapter 13*](B17124_13_Final_SK_ePub.xhtml#_idTextAnchor317),
    *Management and Governance on AWS*.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we discussed the fact that to access any AWS services to deploy
    and configure resources, workloads, and applications, you will first need to set
    up an AWS account. We also discussed the importance of having multiple AWS accounts,
    which will help manage your cloud ecosystem better, offer greater levels of security,
    implement necessary workload isolation, and limit your blast radius in the event
    of catastrophic disasters.
  prefs: []
  type: TYPE_NORMAL
- en: By understanding the thought process involved in building a multi-account strategy,
    you have already embarked on your learning of certain architectural best practices
    related to building your cloud solutions. Specifically, you have learned that
    a multi-account setup enables you to offer greater levels of security and scalability.
  prefs: []
  type: TYPE_NORMAL
- en: We have also examined the AWS Organizations service and how it enables us to
    centrally manage all our AWS accounts by placing common accounts into OUs and
    applying appropriate guardrails using SCPs. An additional benefit of AWS Organizations
    is the consolidated billing feature, which enables you to benefit from volume
    discounts by combining the charges across all your accounts.
  prefs: []
  type: TYPE_NORMAL
- en: We discussed the AWS Free Tier offering and how you can start experimenting
    with a 12-month free AWS account. A full step-by-step guide has also been provided
    to easily set up your own AWS account, which you will need throughout this training
    guide for the various labs on offer. Finally, you learned how to set up and configure
    your own billing alarms, which can be used to alert you if you exceed a given
    budgeted threshold for your total AWS expenses.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we look at AWS **Identity and Access Management** (**IAM**).
    AWS IAM is integral to designing a highly secure environment with authentication
    and authorization services of your AWS account. With IAM, you can create additional
    identities that can have access to your AWS account. For example, if you have
    a team of developers who will be building an application on AWS, you would not
    want to share the root account credentials with them. Each of your developers
    should have their own individual IAM user accounts. This enables better auditing
    and allows you to enforce the principle of least privilege when granting access
    to services in your AWS account.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are a few questions to test your knowledge:'
  prefs: []
  type: TYPE_NORMAL
- en: Before setting up your billing alarms, which preference setting needs to be
    enabled first?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable billing alerts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable alarms
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up AWS Organizations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure MFA
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which AWS service enables you to centrally manage multiple AWS accounts with
    SCPs to establish permission guardrails using which services can be enabled in
    those accounts?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Organizations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS IAM
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS VPC
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS GuardDuty
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following services are offered completely free by AWS? (Select
    two answers.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS **Identity and Access Management** (**IAM**)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Elastic Beanstalk
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Amazon Simple Storage Service** (**Amazon S3**)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Amazon Relational Database Service** (**Amazon RDS**)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS **Simple Notification Service** (**SNS**)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which feature of AWS Organizations enables you to combine the costs of each
    member account to take advantage of any volume discounts on offer?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Consolidated billing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS EC2 savings plan
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Control Tower
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS IAM
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is required when creating an AWS Free Tier account?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A credit card
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A bank statement
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A passport or driving license
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: An invitation letter from Amazon
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which AWS service enables you to automatically set up a new landing zone in
    accordance with best practices?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Landing Zone
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Control Tower
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Organizations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Free Tier Account
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which feature of the AWS Organizations service enables you to combine AWS accounts
    in a container that has common workloads and then apply a common set of policies
    to those accounts?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Control Tower
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Landing Zone
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Organization Units** (**OUs**)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Service Control Policies** (**SCPs**)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
