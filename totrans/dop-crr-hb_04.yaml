- en: '*Chapter 3*: Specialized Skills for Advanced DevOps Practitioners'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As DevOps engineers progress in their career-specific areas, they may stand
    out either as a result of their natural ability or skills or on account of their
    strong liking for the subject. This leads DevOps engineers down a specialized
    career path. The focus of this chapter will be on the skills required for entry
    into different DevOps specialties.
  prefs: []
  type: TYPE_NORMAL
- en: Mid–Senior Level Content
  prefs: []
  type: TYPE_NORMAL
- en: This chapter is full of useful information for anyone interested in the field
    of DevOps; however, it is geared for DevOps engineers who have been practicing
    for a minimum of 1-3 years. This chapter assumes that individuals already have
    the knowledge listed in the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, the following specialized DevOps competencies will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: CI/CD pipeline DevOps engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure as code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud and application modernization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Containers and container management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced DevOps certifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Competency matrix
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CI/CD pipeline DevOps engineer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A CI/CD pipeline DevOps engineer is responsible for the end-to-end automation
    of the developer''s code through to production. The strategy developed by the
    CI/CD engineer is a central focus for a company''s DevOps roadmap. Revisiting
    the infinite DevOps loop from the previous chapter, you are reminded that all
    stages of DevOps are included in the CI/CD cycle, as seen in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – Infinite DevOps cycle'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.1_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.1 – Infinite DevOps cycle
  prefs: []
  type: TYPE_NORMAL
- en: One of the most in-demand skills for a CI/CD DevOps engineer is the ability
    to create, maintain, and promote the adoption of a shared pipeline library.
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining a shared pipeline library
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The CI/CD pipeline engineer will maintain the shared pipeline library and all
    the standards and practices that are associated with the CI tools for every stage
    of the DevOps life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: CI Tool Management
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the size of the company, responsibility for CI tool management
    may fall on the pipeline engineer; for this book, we will cover tool management
    in the *Cloud and application modernization* section.
  prefs: []
  type: TYPE_NORMAL
- en: To maintain the shared pipeline, DevOps engineers must have an expert-level
    understanding of the pipeline tools and pipeline architecture. Maintaining the
    shared pipeline library also involves managing and maintaining an inner-sourced
    project. As innovative ideas are proposed to be added to the pipeline, it is the
    role of the DevOps engineer to ensure it is implemented correctly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition: Inner Source'
  prefs: []
  type: TYPE_NORMAL
- en: Inner source is the use of open source software development best practices and
    the establishment of an open source-like culture within organizations for the
    development of its non-open source and/or proprietary software.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is a graphical representation of how a shared pipeline
    library could work:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Shared pipeline library'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.2_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.2 – Shared pipeline library
  prefs: []
  type: TYPE_NORMAL
- en: A lot is going on in the preceding diagram; first, we have a shared pipeline
    library that has different component modules in it that can be used by various
    products. We have a developer who developed some new functionality that they thought
    would be useful for the rest of the company, so they opened a pull request, which
    needs to be reviewed by the CI/CD DevOps engineer before it officially becomes
    part of the library. Lastly, you can see two distinct products using components
    of the shared library in their own pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: Ownership of integrations with the pipeline
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A DevOps pipeline engineer needs to have a vast knowledge of tooling at all
    stages of the pipeline. The following diagram shows many of the tools available
    at various stages of the pipeline:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – CI/CD tools'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.3_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.3 – CI/CD tools
  prefs: []
  type: TYPE_NORMAL
- en: The preceding diagram is meant to demonstrate the vast number of tools available
    at each stage of the CI pipeline. A valuable resource that allows you to view
    and examine each tool is digital.ai's periodic table of DevOps tools ([https://digital.ai/periodic-table-of-devops-tools](https://digital.ai/periodic-table-of-devops-tools)).
  prefs: []
  type: TYPE_NORMAL
- en: The CI/CD DevOps engineer is responsible for ensuring that the various tools
    can be integrated into the company's pipeline. Modules for connecting to the tool's
    API must be developed and then the solution must be presented to a security review
    to ensure that it meets companies' standards. Once it is part of the pipeline,
    the CI/CD engineer is responsible for ongoing support of the various integrations
    as the tool's version and API changes.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you learned that a CI/CD DevOps engineer must be knowledgeable
    in all phases of the CI/CD life cycle and have an understanding of the various
    tools used in each of the stages.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will cover the skills required to be successful as a
    DevOps infrastructure engineer.
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure as code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A DevOps infrastructure engineer is responsible for provisioning, managing,
    and maintaining the infrastructure used within a company's various applications.
    Oftentimes, referred to as the **Infrastructure as Code (IaC)** engineer, the
    IaC engineer works closely with the architects and must have good relationships
    with many diverse groups. In this section, we will cover the skills required to
    be successful as a DevOps IaC engineer as well as the tools you will need to have
    a deep understanding of the role.
  prefs: []
  type: TYPE_NORMAL
- en: Network infrastructure design
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DevOps IaC engineers partner closely with architects and, in some cases, play
    the role of the architect for many projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Network Infrastructure Design: Definition'
  prefs: []
  type: TYPE_NORMAL
- en: Network infrastructure design is a process comprising network synthesis, topological
    design, and network realization, aimed at ensuring that a network or service meets
    the needs of the operator and subscriber.
  prefs: []
  type: TYPE_NORMAL
- en: Storage management
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DevOps IaC engineers need to be knowledgeable on the broad topic of storage
    management and optimization. Storage management covers volume migration, process
    automation, disaster and recovery, replication, auto-provisioning, snapshot and
    mirroring, storage virtualization, and compression.
  prefs: []
  type: TYPE_NORMAL
- en: Containerization (Docker and Kubernetes)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DevOps engineers need to be familiar with containers; however, DevOps engineers
    specializing in infrastructure management will need to be comfortable with the
    orchestration and management of large Docker and Kubernetes clusters. Tools such
    as Terraform and Ansible can be used to help with this.
  prefs: []
  type: TYPE_NORMAL
- en: The topic of containerization will be covered in much more detail in the *Containers
    and container management* section of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Site Reliability Engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Site Reliability Engineering** (**SRE**) focuses on system availability and
    reliability and was coined by Ben Treynor of Google in 2003\. The goal of SRE
    is the same as DevOps – to bridge the gap between development and operations.
    If you work for a large organization, SRE and DevOps will be separate entities
    on account of their goal and focus; however, the skills required for both SRE
    and a DevOps engineer focused on infrastructure will be remarkably similar. SRE
    has a focus on keeping systems running and available while DevOps aims to reduce
    the time to market and allow for rapid changes. In the following diagram, the
    items that should account for the most time are the foundation of the SRE hierarchy:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4 – SRE hierarchy'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.4_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.4 – SRE hierarchy
  prefs: []
  type: TYPE_NORMAL
- en: The preceding diagram illustrates how the foundation of SRE is a proactive,
    monitoring-based approach, followed by quick and thorough incident response and
    detailed *no-blame* postmortems. The idea behind SRE is to find and remediate
    problems quickly, followed by changes to avoid the same issue in the future.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we scratched the surface of a deep and interesting subject.
    If you are interested in learning more about SRE, you should take a look at the
    book on SRE published by Google: [https://sre.google/sre-book/table-of-contents/](https://sre.google/sre-book/table-of-contents/).
    In the last section of this chapter, we will list several certifications that
    will apply to a role in SRE.'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you learned what is required to be a DevOps engineer specializing
    in infrastructure. You need skills in network design, storage management, SRE,
    and containerization.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will cover the skills required by a DevOps engineer
    who specializes in cloud and application modernization.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud and application modernization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will learn about cloud and application modernization, and
    the special role that exists for DevOps engineers in this space. First, we will
    cover the advanced cloud knowledge required, followed by cloud modernization techniques.
  prefs: []
  type: TYPE_NORMAL
- en: DevOps leaders need to adjust to a new demand for updated services while maintaining,
    operating, and improving their existing application portfolios. This new demand
    comes from modern technology, which is being introduced with increasing frequency.
    There are many application modernization approaches (including rehost, replatform,
    and replace) with different purposes, effects, values, costs, risks, and impacts.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced cloud skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To be a DevOps cloud engineer, you must have strong scripting skills in addition
    to an in-depth understanding of cloud platforms. You need to understand how different
    cloud products function and work together. The following diagram contains something
    that comes in handy if you are working in an area that has a multi-cloud environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – Cloud provider comparison'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.5_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.5 – Cloud provider comparison
  prefs: []
  type: TYPE_NORMAL
- en: I am very comfortable with Amazon terminology; when I needed to work in GCP,
    it was handy to have a cheat sheet nearby. The methodology is the same; the terminology
    is vastly different across cloud providers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another thing that DevOps cloud engineers need to be capable of is provisioning
    and deploying to cloud resources; this is another thing that varies greatly between
    different cloud providers. Understanding the cloud provider CLI is also very important
    as a DevOps engineer. You will rarely interact with resources via the **graphical
    user interface** (**GUI**); instead, you will use the CLI tool or API to make
    calls to various cloud offerings. The following links relate to the documentation
    pertaining to the various cloud CLI tools:'
  prefs: []
  type: TYPE_NORMAL
- en: 'GCP: [https://cloud.google.com/sdk](https://cloud.google.com/sdk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure: [https://docs.microsoft.com/en-us/cli/azure/install-azure-cli](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will go through another aspect of cloud specialty –
    application modernization. The topic is dense and there is no effective way to
    get good at it without practicing it; however, Gardner provides some useful resources
    for individuals looking to learn more.
  prefs: []
  type: TYPE_NORMAL
- en: Application modernization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As a DevOps engineer who specializes in cloud and application modernization,
    evaluating the driving force behind the need for modernization is crucial. The
    driving force can be broken down into the demand and supply sides:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Supply side**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fit**: Lacking the ability to implement new requirements'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Value**: Lacking in terms of the value, quality of support, and information
    it provides'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agility**: Lacking the ability to make changes quickly with an acceptable
    level of risk'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demand side**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cost**: The cost of ownership is high in relation to the value it provides.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Complexity**: Complexity causes maintainability and increases risk when making
    changes.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk**: Security, compliance, supportability, or scalability risk.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: After a DevOps engineer has gone through and evaluated the system and determined
    the issue, the causes must be identified.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a modernization approach
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The cause for modernization can be broken down into three main categories:
    functionality, technology, and architecture. Once the cause is determined, the
    DevOps engineer must decide on the best approach for modernization. The following
    is a diagram showing the different modernization approaches with respect to their
    effort and complexity:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Gartner''s modernization approaches'' ability to remediate the
    cause'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.6_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.6 – Gartner's modernization approaches' ability to remediate the cause
  prefs: []
  type: TYPE_NORMAL
- en: As a DevOps engineer who specializes in cloud and application modernization,
    you will be required to have an in-depth understanding of different modernization
    approaches. Gartner published an article, [https://www.gartner.com/doc/reprints?id=1-25RJ3RG2&ct=210408&st=sb](https://www.gartner.com/doc/reprints?id=1-25RJ3RG2&ct=210408&st=sb),
    which covers in detail each of the aforementioned approaches.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we covered the skills required for a DevOps engineer specializing
    in application modernization as well as the cloud. A DevOps engineer specializing
    in the cloud must be extremely comfortable provisioning and deploying to cloud
    applications. DevOps engineers will need to have a strong understanding of the
    cloud API and CLI functionality as well as understanding how cloud offerings compare
    to other cloud providers. Additionally, DevOps engineers specializing in the cloud
    may be required to aid in application modernization projects.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, I will discuss the skills required to be successful as
    a DevOps engineer specializing in containers.
  prefs: []
  type: TYPE_NORMAL
- en: Containers and container management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Container management, orchestration, and maintenance are skills all DevOps engineers
    must be competent in; however, with cloud-native Kubernetes and other cloud orchestration
    tools, it has quickly become a specialty field. In this chapter, we will cover
    the skills required to succeed as a DevOps engineer specializing in container
    management.
  prefs: []
  type: TYPE_NORMAL
- en: What It Takes to Be a Container Specialist
  prefs: []
  type: TYPE_NORMAL
- en: The ability to pioneer, adopt, and own new container methodologies is the one
    skill that separates a generalist from a container management specialist.
  prefs: []
  type: TYPE_NORMAL
- en: Container management software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'DevOps engineers who specialize in containerization must be highly skilled
    in container management software. The most widely used software for container
    management include Docker and Kubernetes. The purpose of container management
    software is fivefold; automation, monitoring, security, scaling, and deployment
    for containers. We will cover the automation aspect first:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Container automation**: The automation of container orchestration encompasses
    and covers monitoring, security, scaling, and deployment at an elevated level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring**: Containers require monitoring, such as liveliness probes, which
    are tied to monitoring dashboards and alarms that can be used to spot and remediate
    problems sooner. There are several tools that can be used for monitoring, including
    Prometheus, Dynatrace, and Datadog.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security**: Container security is the most critical concern for a DevOps
    engineer as the entire application is exposed if the container is compromised.
    To ensure that your container ecosystem is secure, first ensure that the base
    images being used are secure. Make sure the container images are signed from trusted
    sources, that the runtime operating system layer is up to date, and ensure that
    you have a patching strategy in place to update the image. Next, you need to ensure
    that your images are stored in a secure location with policy-based authentication
    to reduce the chance of human errors being introduced into the containers. Integrating
    security testing and scans and automating the deployment process is another way
    to mitigate risk. Tools such as Twistlock can help with this. Scanning the container
    allows for containers to be rebuilt and redeployed instead of trying to patch
    running containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scaling**: Containers, by design, are immutable, which means that code cannot
    be changed following deployment. A benefit of containers is that with proper configuration
    and monitoring, scaling the number of instances of a certain component up or down
    is an easy task. The hard part is determining the limits for when such scaling
    should occur.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This section described what is required to be a DevOps engineer who specializes
    in containers. In the conclusion to this section, I leave you with a few hands-on
    tutorials I used while learning Kubernetes:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kubernetes the hard way: [https://github.com/kelseyhightower/kubernetes-the-hard-way](https://github.com/kelseyhightower/kubernetes-the-hard-way'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: 'Kubernetes training course: [https://www.udemy.com/course/certified-kubernetes-application-developer/](https://www.udemy.com/course/certified-kubernetes-application-developer/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will cover what is required to succeed in the field
    of DevSecOps, or, in other words, a DevOps engineer specializing in security.
  prefs: []
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A DevOps engineer who specializes in security is often referred to as a DevSecOps
    engineer. DevSecOps engineers have a deep understanding of the CI/CD process as
    well.
  prefs: []
  type: TYPE_NORMAL
- en: Security Is Everyone's Responsibility
  prefs: []
  type: TYPE_NORMAL
- en: Security is everyone's job. Anyone who has any stake in delivering the software
    has a role in ensuring the application's security.
  prefs: []
  type: TYPE_NORMAL
- en: The job of a DevOps security engineer is to ensure that security is built in
    and included from the onset of a project.
  prefs: []
  type: TYPE_NORMAL
- en: 'DevOps engineers specializing in security have responsibilities that are broken
    down into two areas: CI/CD processes and environment and data. We will first look
    at CI/CD process security and the skills required to implement it.'
  prefs: []
  type: TYPE_NORMAL
- en: CI/CD process security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s revisit the pipeline discussed earlier; numbers have been added to the
    following diagram to correlate to the following security items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Container scanning** (*1*): Container scanning should be added to the process
    of bringing new containers into your registry. Tools such as Twistlock are commonly
    used. The most popular container scanning tool is Twistlock; however, there are
    many others as well and these can be seen here: [https://techbeacon.com/security/17-open-source-container-security-tools](https://techbeacon.com/security/17-open-source-container-security-tools).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security testing** (*2*): This includes running **security static analysis
    testing** (**SAST**) tools as part of builds, as well as scanning any pre-built
    container images for known security vulnerabilities as they are pulled into the
    build pipeline. In the following example, the libraries are part of the compliance
    module. Many tools exist, both open source and paid, when it comes to SAST tools.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security acceptance testing** (*3*): This type of testing is known as **dynamic
    application security testing** (**DAST**). The purpose is to test for security
    vulnerabilities dynamically while the application is running. A comprehensive
    tools list in this category can be found here: [https://owasp.org/www-community/Vulnerability_Scanning_Tools](https://owasp.org/www-community/Vulnerability_Scanning_Tools).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Patching and security updates** (*4*): Patching and security updates should
    have a pipeline so that they can run automatically and at a scheduled cadence.
    The tools that can be used vary greatly. In my experience, the best patching tool
    is sometimes a simple script executed in a pipeline. Do your own research and
    form your own opinions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration management** (*5*): The purpose of this is to ensure that all
    infrastructure follows company security and compliance policies. Oftentimes, this
    is run when infrastructure is provisioned or after config changes have been applied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.7 – CI/CD security'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.7_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.7 – CI/CD security
  prefs: []
  type: TYPE_NORMAL
- en: 'Integrating security into CI/CD pipelines is tricky as it requires domain knowledge
    as well as tool-specific knowledge and an understanding of industry security best
    practices. One article that helped me better understand compliance pipelines can
    be found at the following link: [https://itrevolution.com/book/devops-automated-governance-reference-architecture/](https://itrevolution.com/book/devops-automated-governance-reference-architecture/).
    In the next section, we will cover the areas DevSecOps engineers need to focus
    on to ensure environment and data security.'
  prefs: []
  type: TYPE_NORMAL
- en: Environment and data security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The various environments and associated data are a company''s most precious
    and vulnerable assets if not protected correctly. It is the DevOps engineer''s
    job to ensure the best practices are implemented in an automated and scalable
    fashion. The following are a few concepts that will help drive further research
    on the topic:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Principle of least trust and zero trust**: Processes and applications are
    granted the minimum access they require to operate properly. It sounds simple
    but it is quite a large undertaking as each account needs to be audited to ensure
    it has correct access. The principle of least privilege is a core part of the
    zero-trust model; however, the zero-trust model is more comprehensive and is more
    stringent. Also, zero trust is more complicated to implement and maintain as many
    more access policies are needed. The following diagram shows the three principles
    of zero trust; verify explicitly, use least privilege access, and assume breach:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Zero-trust principles'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.8_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.8 – Zero-trust principles
  prefs: []
  type: TYPE_NORMAL
- en: '**Principle of isolation**: The principle of isolation applies to containers
    running in a microservices architecture. The principle of isolation has several
    components, including isolation of state, isolation of space, isolation of time,
    and isolation of failure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data encryption**: A container orchestration platform with integrated security
    features helps minimize the chance of unauthorized access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure API gateways**: Secure APIs increase authorization and routing visibility.
    By reducing exposed APIs, organizations can reduce attack surfaces.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced DevOps certifications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you progress as a DevOps engineer, the number of certifications available
    to you increases as well. Certifications are rarely required to get a job in a
    specialized DevOps role, but they do offer a quick picture of the skills and expertise
    you possess as well as showing your dedication to your industry.
  prefs: []
  type: TYPE_NORMAL
- en: AWS certifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'AWS offers several advanced certifications based on what career track you are
    on. Most advanced AWS certifications require a minimum requirement of possessing
    the AWS Cloud Practitioner certification. The following is a list of the certifications
    offered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Certified Solutions** **Architect – Professional** ([https://aws.amazon.com/certification/certified-solutions-architect-professional/](https://aws.amazon.com/certification/certified-solutions-architect-professional/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Certified** **DevOps Engineer – Professional** ([https://aws.amazon.com/certification/certified-devops-engineer-professional/](https://aws.amazon.com/certification/certified-devops-engineer-professional/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Certified** **Security – Specialty** ([https://aws.amazon.com/certification/certified-devops-engineer-professional/](https://aws.amazon.com/certification/certified-devops-engineer-professional/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Cloud certifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Google offers several advanced certifications related to DevOps depending on
    what specialty you are interested in. The following is a list of the certifications
    offered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Professional Cloud** **Architect** ([https://cloud.google.com/certification/cloud-architect](https://cloud.google.com/certification/cloud-architect))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Professional Cloud** **DevOps Engineer** ([https://cloud.google.com/certification/cloud-devops-engineer](https://cloud.google.com/certification/cloud-devops-engineer))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Professional Cloud Security** **Engineer** ([https://cloud.google.com/certification/cloud-security-engineer](https://cloud.google.com/certification/cloud-security-engineer))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Professional Cloud Network** **Engineer** ([https://cloud.google.com/certification/cloud-network-engineer](https://cloud.google.com/certification/cloud-network-engineer))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure certifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure offers numerous advanced certifications, including one in DevOps and
    one in security technologies. The path to DevOps certifications is AZ-900, AZ-104,
    and then AZ-400\. The path for an architect is AZ-90, AZ-300, and then AZ-304\.
    The path for security is AZ-900 followed by AZ-500\. The following is a list of
    the certifications offered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Microsoft Azure Administrator** ([https://docs.microsoft.com/en-us/learn/certifications/exams/az-104](https://docs.microsoft.com/en-us/learn/certifications/exams/az-104))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Azure Architect Technologies** ([https://docs.microsoft.com/en-us/learn/certifications/exams/az-303](https://docs.microsoft.com/en-us/learn/certifications/exams/az-303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Designing and Implementing Microsoft DevOps Solutions** ([https://docs.microsoft.com/en-us/learn/certifications/exams/az-400](https://docs.microsoft.com/en-us/learn/certifications/exams/az-400))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Azure Architect Design** ([https://docs.microsoft.com/en-us/learn/certifications/exams/az-304](https://docs.microsoft.com/en-us/learn/certifications/exams/az-304))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Azure Security Technologies** ([https://docs.microsoft.com/en-us/learn/certifications/exams/az-500](https://docs.microsoft.com/en-us/learn/certifications/exams/az-500))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kubernetes certifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Kubernetes is one of the largest open source projects and what employers are
    looking for as regards a top skill when hiring DevOps engineers. The following
    is the certification offered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Certified Kubernetes Administrator** (**CKA**) ([https://www.cncf.io/certification/cka/](https://www.cncf.io/certification/cka/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the following diagram, you can see the certification paths for the three
    major cloud providers – AWS, Azure, and GCP:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Cloud certification path'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.9_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.9 – Cloud certification path
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look at a skills matrix for DevOps engineers.
  prefs: []
  type: TYPE_NORMAL
- en: Competency matrix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A competency matrix is a visual diagram or chart that shows the skills and education
    required for separate roles within a company. Before we dive into competency matrix
    definitions, a few things need to be understood.
  prefs: []
  type: TYPE_NORMAL
- en: First, not all organizations use a competency matrix to hire and promote employees,
    and second, each organization that does use it will have different requirements.
  prefs: []
  type: TYPE_NORMAL
- en: The reason it was decided to have a section on competency is that every company
    has differing competencies tied to distinct levels. What this means is that a
    senior DevOps engineer at company X may map to a DevOps engineer at Google. This
    caused me anxiety and frustration early in my career. I hope this section can
    give you enough clarity on the correlation between level, competency, and pay.
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this chapter is to introduce you to the concept of a competency
    matrix as well as adding another tool to track your progress as your skills increase.
    We will start by breaking down the competency matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Matrix breakdown
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A competency matrix is broken down into three main sections: **skills**, **levels**,
    and **competency**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Competency matrix'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.10_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.10 – Competency matrix
  prefs: []
  type: TYPE_NORMAL
- en: First, we will cover the skills section.
  prefs: []
  type: TYPE_NORMAL
- en: Skills
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The skills section is usually on the vertical (*y*) axis of the chart. The skills
    can be as granular or as broad as a company sees fit. The skills represented on
    the diagram will be specific for the department you are part of, so it is best
    practice to stay updated and current on your department's competency matrix if
    it exists. Next, we will discuss the horizontal axis of the matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Levels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The level is located on the horizontal (*x*) axis of the chart. Levels differ
    from one company to the next. I currently work for an organization where all individual
    contributors are mapped to different associate levels. If you were to work at
    Google, your role is mapped to L1 through L11 where an engineer is an L3, and
    a senior Google fellow is an L11\. Levels without being mapped to competency are
    nothing more than a meaningless term. Unfortunately, levels are not universal,
    and you will need to investigate how your current skills map over if you decide
    to pursue a career outside your current organization. If you are interested in
    learning more about levels at different companies, a valuable resource is levels.fyi:
    [https://www.levels.fyi/](https://www.levels.fyi/). Next, we will discuss competency.'
  prefs: []
  type: TYPE_NORMAL
- en: Competency
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Competency is defined as the ability to do something successfully. Competency
    is found at the crossroads of levels and skills on the graph. Each level has different
    criteria for success for each skill, meaning success is relative to the level
    you are at. It is becoming increasingly common for companies to adopt competency
    bands within each level. The purpose of this is to provide entry competency, desired
    competency, and sometimes premium competency:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Entry** competency is the minimum competency for a given skill to be considered
    for a role at the given level. If you are in the minimum category across the board,
    your chances of landing a job are not great. However, if there are only a few
    areas where you are in the minimum range, they can be a talking point when you
    are being interviewed of things you are working to improve on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Desired** competency is the competency of about 50% of individuals in the
    level or, more simply, the competency the hiring team is hoping to find. The ideal
    situation for a hiring manager is that they find a candidate with desired qualifications
    across the board.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Premium** competency is the point where there begins to be a lot of creep
    between the current level and the next level up. If you are in the premium band
    for several skill areas, you are ready to be promoted to the next level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows that competency overlap exists between levels.
    This feature is built to allow fluid movement between levels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.11 – Competency matrix levels'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.11_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.11 – Competency matrix levels
  prefs: []
  type: TYPE_NORMAL
- en: Your pay range is bound by your level, but within a level, skill competency
    determines where you land within the range. This is discussed in detail in the
    following section.
  prefs: []
  type: TYPE_NORMAL
- en: Compensation in relation to level and competency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Compensation is bound by pay bands that are tied to the various levels within
    the company. The pay bands for distinct levels overlap; this means that a senior
    associate could potentially earn a higher base salary than a lead associate. The
    following diagram does an excellent job graphically of depicting this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.12 – Compensation – Level graph'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.12_B18117.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.12 – Compensation – Level graph
  prefs: []
  type: TYPE_NORMAL
- en: In an effort to normalize pay within each level, managers are often told to
    target a specific percentile within each pay band. This is useful information
    when looking at job postings that have pay ranges.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned the skills required for DevOps specialist roles,
    including as a CI/CD pipeline specialist, infrastructure specialist, cloud and
    application modernization specialist, container specialist, and security specialist.
    The main takeaway from this chapter is that DevOps specialties take practice and
    dedication to hone your skills. We also discussed the competency matrix and how
    it translates to different pay grades.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover how to rebrand yourself online.
  prefs: []
  type: TYPE_NORMAL
