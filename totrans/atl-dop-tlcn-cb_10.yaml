- en: '10'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Collaborating with Operations through Continuous Deployment and Observability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will close the circle of DevOps by looking at the integrations
    to tools used primarily by operations. Developers using Jira can find the results
    of deployments by integrating Jira with **Continuous Deployment** (**CD**) tools,
    such as Bitbucket, GitLab, GitHub, or Jenkins. Observability tools that monitor
    for performance, such as Dynatrace and Datadog, can link to Jira issues through
    integrations.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter contains the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect Jira with continuous deployment tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connect Jira with observability tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To complete this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A GitLab account ([https://about.gitlab.com/](https://about.gitlab.com/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Datadog account ([https://www.datadoghq.com/](https://www.datadoghq.com/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connect Jira with continuous deployment tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we are going to learn how to integrate Jira with CD tools to
    view deployment status. In [*Chapter 4*](B21937_04.xhtml#_idTextAnchor072), we
    learned that **Continuous Integration** (**CI**) is the practice of making incremental
    improvements or changes to a code base and automating the testing and validation
    of those code changes.
  prefs: []
  type: TYPE_NORMAL
- en: CD can be considered an extension of CI that handles the automated infrastructure
    provisioning and application release process.
  prefs: []
  type: TYPE_NORMAL
- en: 'The objectives for this recipe are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Associate a GitLab repository with a Jira project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the Jira integration to the GitLab SaaS application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform updates to the code base, execute a merge request, and deploying the
    code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See the GitLab deployment reflected in the Jira project and issue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To execute this recipe, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Jira administration permissions in order to add the GitLab application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A GitLab account and repository with actual or sample code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will use the following steps to achieve this recipe’s objectives:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to ensure that **Deployments** is enabled for the Jira project
    you are working on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.1 – Enable Deployments for a Jira project](img/B21937_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.1 – Enable Deployments for a Jira project
  prefs: []
  type: TYPE_NORMAL
- en: Next, we need to verify the GitLab and Jira integration. We covered the integration
    of GitLab and Jira in [*Chapter 4*](B21937_04.xhtml#_idTextAnchor072). Please
    refer back to that chapter if necessary.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the GitLab integration has been verified, we will need to connect a GitLab
    repository to a Jira project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In your desired Jira project, navigate to **Project settings** | **Toolchain**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then select **Add tool**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.2 – Add to the project toolchain](img/B21937_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.2 – Add to the project toolchain
  prefs: []
  type: TYPE_NORMAL
- en: You will see the **GitLab for Jira Cloud** option available from the list of
    recommended tools.
  prefs: []
  type: TYPE_NORMAL
- en: Select **Add** **to project**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.3 – Add GitLab to Jira project](img/B21937_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.3 – Add GitLab to Jira project
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The GitLab box is added to the list of existing tools for the project. Now we
    need to associate a repository from GitLab with the project, and with the issues
    within the project related to working on the code base.
  prefs: []
  type: TYPE_NORMAL
- en: Select the **+ Add code** **repository** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.4 – Add GitLab code repository](img/B21937_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.4 – Add GitLab code repository
  prefs: []
  type: TYPE_NORMAL
- en: Since GitLab is already integrated with Jira, a pop-up window is displayed with
    a drop-down option. Select the dropdown and view the available GitLab repositories.
    You may select one or more repositories to associate with a Jira project.
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we are selecting a repository associated with our mobile application
    code base.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After selecting a repository, click the **Add** **repository** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.5 – Select GitLab repository](img/B21937_10_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.5 – Select GitLab repository
  prefs: []
  type: TYPE_NORMAL
- en: The GitLab box in the toolchain now reflects the selected repositories.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.6 – GitLab repository added](img/B21937_10_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.6 – GitLab repository added
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have the Jira project associated with a GitLab repository, we need
    to look at the issues within the project. We need to identify or create a new
    project to associate with code changes and deployment.
  prefs: []
  type: TYPE_NORMAL
- en: When we make changes to the code base in GitLab, we will need the issue’s key
    to add in the branches and commit comments. This will tell GitLab which issues
    are associated with the deployment. This is called Smart Commits.
  prefs: []
  type: TYPE_NORMAL
- en: In the following Jira example, we have an issue with a key value equal to **ACR-6**.
    The issue is currently in the **IN PROGRESS** status column.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.7 – Jira Issue Key](img/B21937_10_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.7 – Jira Issue Key
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s go back over to GitLab and perform some updates to the code base in
    relation to the ACR-6 issue. First we’ll make a new branch for the specific changes.
    In GitLab, under the **Code** menu option, select **Branches**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.8 – GitLab code repository branch](img/B21937_10_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.8 – GitLab code repository branch
  prefs: []
  type: TYPE_NORMAL
- en: This will give you the option to create a new branch.
  prefs: []
  type: TYPE_NORMAL
- en: In the **Branch name** field, make sure to use the ACR-6 issue key so we can
    tie this change back to the issue in Jira. Then select **Create branch**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.9 – Create GitLab branch](img/B21937_10_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.9 – Create GitLab branch
  prefs: []
  type: TYPE_NORMAL
- en: From the new branch, we will select some code to modify. In this example, we
    are going to make some simple updates to a Python script. There are several ways
    to perform these code modifications. To keep it simple, we will open the code
    in the Web IDE.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.10 – Open in Web IDE to modify code](img/B21937_10_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.10 – Open in Web IDE to modify code
  prefs: []
  type: TYPE_NORMAL
- en: We have updated the code to display the date four months from now.
  prefs: []
  type: TYPE_NORMAL
- en: Once our changes are complete, we can click on the source control button and
    commit the changes back to our new branches. In the commit message, it is important
    to use the issue key again (ARC-6) to tie this commit back to the associated Jira
    issue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.11 – Modify then commit code](img/B21937_10_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.11 – Modify then commit code
  prefs: []
  type: TYPE_NORMAL
- en: After committing the changes, we can go back to GitLab and then execute a merge
    request to pull the code back into the main branch and deploy the code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Create** **merge request**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.12 – Create merge request](img/B21937_10_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.12 – Create merge request
  prefs: []
  type: TYPE_NORMAL
- en: Once the merge request has been created, you will see the pipeline process running.
    The pipeline defined for this example is to perform a build, run two test jobs,
    and finally deploy the code to a production environment.
  prefs: []
  type: TYPE_NORMAL
- en: The code can then be merged into the main branch and the merge request closed
    out.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.13 – Code merge](img/B21937_10_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.13 – Code merge
  prefs: []
  type: TYPE_NORMAL
- en: After the merge request and deployment are complete, we can switch back over
    to the Jira project and see that the issue was automatically transitioned to a
    done status.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can also select the **Deployments** menu option in the project’s left-side
    panel to see all deployments.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.14 – Jira deployment actions](img/B21937_10_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.14 – Jira deployment actions
  prefs: []
  type: TYPE_NORMAL
- en: We can see the deployment for ACR-6 that was just executed displayed in the
    **Deployments** view.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.15 – Jira Deployments view](img/B21937_10_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.15 – Jira Deployments view
  prefs: []
  type: TYPE_NORMAL
- en: If we select and view the actual ACR-6 issue, we can see all of the associated
    GitLab activities. The commits and merge requests are displayed under the **Web
    links** section. Clicking on any of those links will take you to the corresponding
    artifact in GitLab.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can also view the **Development** panel and see all of the associated commits,
    builds, and releases.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.16 – Jira issue Developer view](img/B21937_10_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.16 – Jira issue Developer view
  prefs: []
  type: TYPE_NORMAL
- en: You have now successfully integrated a CD app (GitLab) with Jira. This will
    add to the overall visibility of tracking your code all the way through a release.
  prefs: []
  type: TYPE_NORMAL
- en: Connect Jira with observability tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps observability is a practice within DevOps that focuses on gaining comprehensive
    insights into the behavior, performance, and health of applications and infrastructure.
    Observability is achieved by collecting, aggregating, and analyzing data from
    various sources within a system, including logs, metrics, and traces. In this
    section, we will learn how to connect Jira with logging and monitoring tools to
    correlate Jira issues with problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'This recipe has the following objectives:'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a Datadog account with a Jira instance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demonstrating a Jira issue created from Datadog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To execute this recipe, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Jira administration permissions in order to add the GitLab application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Datadog account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To implement the Datadog integration, we need to perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Install the Jira integration in Datadog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an application link to Datadog from Jira.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the Jira instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a webhook in Jira (if using Datadog Case Management).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a project to Datadog Case Management.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a case and see the reciprocal Jira issue created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What about a Datadog app for Jira?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Datadog does not have an app that can be installed into Jira, even though the
    Jira Marketplace will show a listing available when searched. Let’s use the following
    steps to find and install it:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the `datadog`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Datadog Jira** **Integration** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.17 – Datadog Jira integration](img/B21937_10_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.17 – Datadog Jira integration
  prefs: []
  type: TYPE_NORMAL
- en: The Datadog **Overview** page is displayed. Click on **Get app**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.18 – Datadog Overview page](img/B21937_10_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.18 – Datadog Overview page
  prefs: []
  type: TYPE_NORMAL
- en: This opens a pop-up window indicating that the integration configuration needs
    to be done on the Datadog side.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.19 – Integration configuration starts in Datadog](img/B21937_10_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.19 – Integration configuration starts in Datadog
  prefs: []
  type: TYPE_NORMAL
- en: Now, in order to configure the Datadog integration for Jira, you need to work
    from your Datadog account.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Jira integration in Datadog
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We will use the following steps to install the Jira integration in Datadog:'
  prefs: []
  type: TYPE_NORMAL
- en: Switching over to your Datadog account, select the **Integrations** option in
    the left-hand menu panel. This will bring you to the **Integrations** page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `jira` into the search box and press *Enter*. The Jira integration tile
    will be displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Jira integration tile.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 10.20\uFEFF – Datadog Jira integration tile](img/B21937_10_20.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 10.20 – Datadog Jira integration tile
  prefs: []
  type: TYPE_NORMAL
- en: A **Jira Integration** pop-up window will be displayed. Select the **Configuration**
    tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.21 – Jira integration configuration](img/B21937_10_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.21 – Jira integration configuration
  prefs: []
  type: TYPE_NORMAL
- en: The **Configuration** page will be displayed, with the ability to configure
    a new Jira account. As the instructions indicate, an application link for Datadog
    will need to be created in Jira. One of the items needed for the integration link
    is the provided public key. Go ahead and copy this key to your clipboard.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.22 – Jira Integration account information](img/B21937_10_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.22 – Jira Integration account information
  prefs: []
  type: TYPE_NORMAL
- en: Switching over to your Jira instance, we now need to navigate to the **Products**
    menu and add an application link. Select the gear icon in the top-right corner
    and click on **Products**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.23 – Jira Product selection](img/B21937_10_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.23 – Jira Product selection
  prefs: []
  type: TYPE_NORMAL
- en: From the **Product** page, scroll down the left-hand menu panel and select **Application
    links**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.24 – Jira Application links](img/B21937_10_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.24 – Jira Application links
  prefs: []
  type: TYPE_NORMAL
- en: Now we can add a new application link by selecting **Create link**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.25 – Create application link](img/B21937_10_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.25 – Create application link
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can begin to configure the Datadog application link:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `app.datadoghq.com`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Continue**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.26 – Application link configuration](img/B21937_10_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.26 – Application link configuration
  prefs: []
  type: TYPE_NORMAL
- en: Ignore the **Configure Application URL** warning and click the **Continue**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.27 – Application URL configuration](img/B21937_10_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.27 – Application URL configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'For the application link, continue by filling out the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`DataDog`.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For **Application Type**, choose **Generic Application**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the **Create incoming** **link** box.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Continue**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.28 – Details needed for Application link configuration](img/B21937_10_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.28 – Details needed for Application link configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'For the final part of the configuration process, fill out the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`datadog-jira`). You will need to use this value to finish the Datadog Jira
    integration.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Datadog`.'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For **Public Key**, paste in the public key copied to your clipboard from the
    Datadog Jira configuration step.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Continue**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.29 – Finalizing the Application link configuration](img/B21937_10_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.29 – Finalizing the Application link configuration
  prefs: []
  type: TYPE_NORMAL
- en: The new Datadog application link will be displayed and ready for use.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.30 – Application link created](img/B21937_10_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.30 – Application link created
  prefs: []
  type: TYPE_NORMAL
- en: Switch back to the Datadog application to continue the Jira integration configuration.
    We now need to add the Jira Cloud URL and the consumer key we created for the
    Datadog application link in Jira. Then select **Connect**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.31 – Datadog Jira connection](img/B21937_10_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.31 – Datadog Jira connection
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Now that the Jira instance has been connected, we will have the option to set
    up a webhook for **bi-directional integration** with Datadog Case Management and
    an issue template to create Jira issues from alerts. In this example, we are going
    to configure the **Datadog Case** **Management** option.
  prefs: []
  type: TYPE_NORMAL
- en: You will need to copy the provided webhook URL to your clipboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.32 – Datadog Case Management webhook configuration](img/B21937_10_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.32 – Datadog Case Management webhook configuration
  prefs: []
  type: TYPE_NORMAL
- en: Switch back to Jira and navigate to **System** | **WebHooks**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.33 – Jira WebHooks](img/B21937_10_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.33 – Jira WebHooks
  prefs: []
  type: TYPE_NORMAL
- en: Select `Datadog Webhook`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **Status** to **Enabled**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For **URL**, enter the webhook URL copied to your clipboard from the Datadog
    Jira configuration step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.34 – Jira WebHook configuration](img/B21937_10_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.34 – Jira WebHook configuration
  prefs: []
  type: TYPE_NORMAL
- en: Under **Issue related events**, specify the project you want to associate with
    the Datadog webhook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For **Issue**, check the **created**, **updated**, and **deleted** boxes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Project related events**, check the **deleted** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.35 – Jira WebHook configuration (further details)](img/B21937_10_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.35 – Jira WebHook configuration (further details)
  prefs: []
  type: TYPE_NORMAL
- en: With the webhook created in Jira, switch back to your Datadog application. Navigate
    to the **Case Management** module and add a new project with an integration for
    Jira.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For the project Jira integration, ensure the following parameters are set:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Jira is enabled for this project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Jira (Atlassian) Account**, enter your Jira Cloud URL.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **Jira project name** to the Jira project to associate with this Datadog
    Case Management project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the issue type to create in Jira from this Case Management project.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable **Automatically create and sync** **Jira issues**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure your desired sync options for the bug fields.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.36 – Datadog Case Management project Jira integration](img/B21937_10_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.36 – Datadog Case Management project Jira integration
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Now we can test the Datadog integration. We should be able to add a new case
    incident to our Datadog project, which will automatically create an associated
    Jira issue.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your Datadog Case Management project and select the **New** **Case**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.37 – Creating a new case](img/B21937_10_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.37 – Creating a new case
  prefs: []
  type: TYPE_NORMAL
- en: A new case pop-up window will be displayed. Fill out the **Title** field, add
    a description under **Description**, and finally click the **Create** **Case**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.38 – Create Case parameters](img/B21937_10_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.38 – Create Case parameters
  prefs: []
  type: TYPE_NORMAL
- en: A new case will be created in Datadog with an **OPEN** status. We can also see
    a **Jira Issue** button available. This indicates that a Jira issue has been created
    and linked back to this Datadog case. Click on the **Jira Issue** button to see
    the associated issue in Jira.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.39 – New case displayed with Jira Issue button](img/B21937_10_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.39 – New case displayed with Jira Issue button
  prefs: []
  type: TYPE_NORMAL
- en: We can see the Jira issue created with the associated Datadog case in the **Web**
    **links** section.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.40 – Jira issue created by Datadog](img/B21937_10_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.40 – Jira issue created by Datadog
  prefs: []
  type: TYPE_NORMAL
- en: We have now successfully integrated Datadog alert monitoring with our Jira application.
    Alerts can now automatically create Jira issues and add valuable insights to the
    overall DevOps process.
  prefs: []
  type: TYPE_NORMAL
