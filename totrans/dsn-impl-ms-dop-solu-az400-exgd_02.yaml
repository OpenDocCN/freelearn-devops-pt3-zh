- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Site Reliability Engineering Fundamentals
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网站可靠性工程基础
- en: In the previous chapter, you learned about the DevOps culture, goals, and benefits.
    DevOps practices and habits enable collaboration between teams and shorten the
    loop within the delivery cycle from idea inception and design to deployment for
    the end user.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您学习了DevOps文化、目标和好处。DevOps的实践和习惯促进了团队之间的协作，并缩短了从创意构思、设计到最终用户部署的交付周期。
- en: '**Site reliability engineering** (**SRE**) and DevOps methods are complementary
    rather than competitive. SRE is not the next logical step after DevOps. Technically,
    teams that use SRE practices achieve better customer outcomes when measured with
    DevOps metrics.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站可靠性工程**（**SRE**）和DevOps方法是互为补充而非竞争关系。SRE并不是DevOps之后的下一步。技术上，采用SRE实践的团队在使用DevOps指标进行衡量时能够实现更好的客户成果。'
- en: Conventionally, organizations have maintained teams as different siloed units,
    such as **development** (**Dev**), **quality assurance** (**QA**), and **operations**
    (**Ops**) teams. The development team is primarily responsible for completing
    feature development, while the QA team is primarily responsible for performing
    and completing quality checks of developed functionalities. The operations team,
    on the other hand, is primarily responsible for the deployment and maintenance
    of applications in the production environment. Additionally, they also monitor
    and take necessary action to ensure the reliability and scalability of the deployed
    applications
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，组织将团队划分为不同的孤岛单元，如**开发**（**Dev**）、**质量保证**（**QA**）和**运维**（**Ops**）团队。开发团队主要负责完成功能开发，而QA团队主要负责执行并完成已开发功能的质量检查。运维团队则主要负责应用程序在生产环境中的部署和维护。此外，他们还需要监控并采取必要的措施，以确保已部署应用程序的可靠性和可扩展性。
- en: Both SRE and DevOps have teams of engineers with development and operations
    expertise. As a result, the organization can prevent teams from working in silos.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: SRE和DevOps都有由具备开发和运维专业知识的工程师组成的团队。因此，组织可以防止各团队之间的孤岛效应。
- en: The reputation and success of a business or product are dependent on the stability
    of cloud solutions in a production environment. To boost application stability
    and scalability, SRE will use automation to reduce repetitive and manual operational
    tasks. Adopting SRE practices into your software development life cycle is crucial
    for survival in this current era of building IT solutions.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 企业或产品的声誉和成功依赖于云解决方案在生产环境中的稳定性。为了提高应用程序的稳定性和可扩展性，SRE将使用自动化来减少重复和手动的运维任务。将SRE实践融入软件开发生命周期，对于在当前IT解决方案构建的时代中生存至关重要。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: Introduction to SRE
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SRE简介
- en: Key principles and practices
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键原则与实践
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: There are no technical requirements for this chapter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章没有技术要求。
- en: Introduction to SRE
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SRE简介
- en: The term *SRE* was first coined by Ben Treynor Sloss at Google ([https://sre.google/sre-book/introduction/](https://sre.google/sre-book/introduction/)).
    SRE has enabled Google to manage large-sized complex systems and massive infrastructure
    in the most efficient, reliable, scalable, and sustainable way.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*SRE*这一术语最早由Ben Treynor Sloss在Google提出（[https://sre.google/sre-book/introduction/](https://sre.google/sre-book/introduction/)）。SRE使Google能够以最有效、可靠、可扩展和可持续的方式管理大型复杂系统和庞大基础设施。'
- en: Tip
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: SRE is primarily focused on the reliability of service.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: SRE主要关注服务的可靠性。
- en: Why is reliability so important?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么可靠性如此重要？
- en: Reliability is defined as the likelihood of services performing predictably
    under specified operational conditions. The most dependable systems will be more
    accessible, which will result in a better client experience. The reliability of
    your services is an important quality indicator.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性被定义为在特定操作条件下，服务按预期执行的可能性。最可靠的系统将更易于访问，从而带来更好的客户体验。服务的可靠性是一个重要的质量指标。
- en: Reliability and availability are interlinked; however, the difference is in
    the way they are measured. Although availability and reliability go hand in hand,
    the measures taken might produce different results. A system’s availability may
    be modeled mathematically as a measure of its reliability. In other words, reliability
    can be considered as a subset of availability.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性和可用性是相互关联的；然而，它们的区别在于衡量方式。尽管可用性和可靠性是相辅相成的，但所采取的衡量方法可能会产生不同的结果。系统的可用性可以通过数学模型作为其可靠性的一个衡量标准。换句话说，可靠性可以视为可用性的一个子集。
- en: What is availability?
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是可用性？
- en: The availability of the systems can be measured as the percentage of time in
    which the system is available or fully operational. A software system is composed
    of several components, all of which must be evaluated to ensure availability.
    Let’s assume we have a system that includes components such as database servers,
    storage servers, and application servers. Your system’s availability will be defined
    by the combined availability of these components.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的可用性可以通过系统可用或完全正常运行的时间百分比来衡量。一个软件系统由多个组件组成，所有这些组件都必须进行评估以确保其可用性。假设我们有一个包含数据库服务器、存储服务器和应用服务器的系统。系统的可用性将由这些组件的组合可用性来定义。
- en: 'Refer to [https://uptime.is/](https://uptime.is/) to learn more about the downtime
    allowed on your services based on availability guarantees, often known as **service-level
    agreements** (**SLAs**). The following table illustrates some availability percentages
    and downtime limits in seconds, minutes, and hours. The phrase *availability*
    or *uptime* is commonly given in nines (read as a count of nines) as shown in
    the table here (accordingly the allowed downtime is calculated):'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[https://uptime.is/](https://uptime.is/)以了解更多关于基于可用性保证的服务停机时间，通常称为**服务级别协议**
    (**SLA**)的信息。以下表格展示了某些可用性百分比和停机时限（以秒、分钟和小时为单位）。术语*可用性*或*正常运行时间*通常以“九”表示（表示九的数量），如表中所示（相应地计算允许的停机时间）：
- en: '| **Availability** | **Allowed Downtime** |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **可用性** | **允许停机时间** |'
- en: '| **Percentage** | **Daily** | **Weekly** | **Monthly** | **Quarterly** | **Yearly**
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **百分比** | **每日** | **每周** | **每月** | **每季度** | **每年** |'
- en: '| 99.999%(Five nines) | 0 Seconds | 6 Seconds | 26 Seconds | 1 Minute18 Seconds
    | 5 Minutes15 Seconds |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 99.999%(五个9) | 0秒 | 6秒 | 26秒 | 1分钟18秒 | 5分钟15秒 |'
- en: '| 99.99%(Four nines) | 8 Seconds | 1 Minute0 Seconds | 4 Minutes 32 seconds
    | 13 Minutes8 Seconds | 52 Minutes35 Seconds |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 99.99%(四个9) | 8秒 | 1分钟0秒 | 4分钟32秒 | 13分钟8秒 | 52分钟35秒 |'
- en: '| 99.95%(Three nines) | 43 Seconds | 5 Minutes2 Seconds | 21 Minutes54 Seconds
    | 1 Hour5 Minutes44 Seconds | 4 Hours22 Minutes58 Seconds |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 99.95%(三个9) | 43秒 | 5分钟2秒 | 21分钟54秒 | 1小时5分钟44秒 | 4小时22分钟58秒 |'
- en: Table 2.1 – Availability percentage and downtime allowance
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 表2.1 – 可用性百分比和停机时间容许值
- en: 'The formula to calculate the time-based availability percentage is as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 计算基于时间的可用性百分比的公式如下：
- en: '*Availability % = ((Service Uptime - Service Downtime) ÷ (Service Uptime))
    * 100*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*可用性百分比 = ((服务正常运行时间 - 服务停机时间) ÷ (服务正常运行时间)) * 100*'
- en: 'For example, to calculate the availability of production service in a single
    day, assuming the agreed service is expected to run *24*365, use the following*:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要计算单日生产服务的可用性，假设约定的服务预计会运行*24*365，可以使用以下公式*：
- en: The total number of seconds within a day that the agreed service is expected
    to be up and running = 86,400 seconds.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一天内约定服务预计正常运行的总秒数 = 86,400秒。
- en: The sum of downtime(s) on a specific day = 60 seconds for deployment + 60 seconds
    for rollback due to deployment error.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特定日期的停机时间总和 = 部署时间60秒 + 因部署错误回滚时间60秒。
- en: Using the preceding formula for availability = ((86,400 -120) ÷ (86,400)) *100.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用上述公式计算可用性 = ((86,400 -120) ÷ (86,400)) *100。
- en: The availability for your service on that day is 99.86%.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您当天服务的可用性为99.86%。
- en: SRE advocates for monitoring and assessing the availability of important services
    that are essential to the business’s success.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SRE提倡监控和评估对业务成功至关重要的重要服务的可用性。
- en: The goal of your IT department should not be to boost service availability across
    the board. Greater availability increases the cost of doing business because it
    necessitates more work and resources. However, because a lack of better availability
    can result in significant monetary losses (often, exceeding the cost of operations),
    the SRE team will take a pragmatic approach to define availability levels based
    on business demands.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您的IT部门的目标不应是全面提高服务的可用性。更高的可用性增加了业务成本，因为它需要更多的工作和资源。然而，由于更差的可用性可能导致显著的经济损失（通常，超过运营成本），因此SRE团队将采取务实的方法，根据业务需求定义可用性水平。
- en: '**Domain Name Services** (**DNS**), for example, is the internet’s directory.
    Domain names are matched with IP addresses using this service. DNS should be available
    24 hours a day, 7 days a week. As a result, DNS availability is maintained at
    100%.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**域名服务**（**DNS**），例如，是互联网的目录。域名通过该服务与IP地址匹配。DNS应该全天候、每周7天都可用。因此，DNS的可用性保持在100%。'
- en: In general, aiming for 100% dependability for any service or system is not a
    clever idea. It would be difficult for a user to identify the difference between
    a service that is 100% available and one that is 99.999% available.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，追求任何服务或系统的100%可靠性并不是一个明智的选择。用户很难识别出一个服务是否是100%可用，和一个99.999%可用的服务之间的区别。
- en: According to *Table 2.1*, 99.999% availability allows for 26 seconds of downtime
    per month and 6 seconds per week, which is little in most circumstances.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 根据*表 2.1*，99.999%的可用性意味着每月可以容忍26秒的停机时间，每周可以容忍6秒的停机时间，在大多数情况下，这个时间是相当少的。
- en: However, some mission-critical systems, such as medical devices and aircraft,
    must be completely dependable and cannot afford any downtime.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一些任务关键型系统，例如医疗设备和航空器，必须完全可靠，无法承受任何停机时间。
- en: Reliability challenges and SRE
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可靠性挑战与SRE
- en: Cloud architecture must be reliable, scalable, and performant. Cloud services
    will use auto-scaling to dynamically scale services to meet changing demand, and
    observability will be used for applications that provide support for monitoring
    system performance, availability, success, error and dependence error rate, request
    failure rate, latency, freshness, and throughput.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 云架构必须可靠、可扩展并具有良好的性能。云服务将使用自动扩展来动态调整服务规模，以满足变化的需求，并且可观察性将用于支持监控系统性能、可用性、成功率、错误率、依赖错误率、请求失败率、延迟、新鲜度和吞吐量的应用程序。
- en: 'Service availability and reliability metrics will be used by organizations
    to determine the service levels required to keep business activities running smoothly.
    Your SRE strategy’s key decision factors are reliability and availability, which
    have different meanings and are measured differently:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 组织将使用服务的可用性和可靠性指标来确定保持业务活动顺利进行所需的服务水平。您的SRE战略的关键决策因素是可靠性和可用性，它们有不同的含义，并且测量方式也不同：
- en: '![Figure 2.1 – Reliability and availability  ](img/B18655_02_01.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 可靠性与可用性](img/B18655_02_01.jpg)'
- en: Figure 2.1 – Reliability and availability
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 可靠性与可用性
- en: As evident from the preceding figure, reliability can be considered as a subset
    of availability. Organizations have realized that maintaining system reliability
    is challenging while also maintaining development velocity, desired scalability,
    and operational stability.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，可靠性可以视为可用性的一个子集。组织已经意识到，在保持系统可靠性的同时，还需要保持开发速度、期望的可扩展性和操作稳定性，这是一项具有挑战性的任务。
- en: 'The conventional team model includes a Dev, QA, and Ops team, with development,
    QA, and operations tasks separated. This type of separation has resulted in organizational
    silos or a *throw-it-over-the-wall* mentality, which influences the organizational
    team’s ability to achieve long-term goals and foster a learning and blameless
    culture:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的团队模型包括开发、质量保证（QA）和运维（Ops）团队，开发、QA和运维任务被分开。这种分离导致了组织孤岛或*推卸责任*的心态，这影响了组织团队实现长期目标并培养学习和无责文化的能力：
- en: '![Figure 2.2 – Reliability challenges  ](img/B18655_02_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 可靠性挑战](img/B18655_02_02.jpg)'
- en: Figure 2.2 – Reliability challenges
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 可靠性挑战
- en: The Dev team *throws* their code over the wall and expects the Ops team to run
    and manage it in production. The Dev team wants to release features at a fast
    pace to production and not be responsible for the stability of the applications.
    The Ops team, on the other hand, wants to minimize changes to the production service
    to avoid any disruptions to business to maintain the stability of services.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队*将*他们的代码丢到墙那边，期望运维团队在生产环境中运行和管理它。开发团队希望以快速的节奏将功能发布到生产环境中，而不负责应用程序的稳定性。另一方面，运维团队希望尽量减少对生产服务的更改，以避免任何对业务的干扰，从而保持服务的稳定性。
- en: SRE helps the team in striking a balance between delivering new features and
    ensuring that the system operates appropriately and effectively. This collaborative
    method bridges the gap between development responsibilities and day-to-day system
    operation and customer service and support tasks. This daily customer support and
    operational activity create a feedback loop, which is essential for increasing
    system quality.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: SRE帮助团队在交付新功能和确保系统适当有效运行之间找到平衡。这种协作方法弥合了开发责任与日常系统运营、客户服务和支持任务之间的鸿沟。日常的客户支持和运营活动形成了一个反馈循环，这对于提高系统质量至关重要。
- en: Although customers are increasingly anticipating shorter delivery times, just
    focusing on delivery speed or greater product velocity is insufficient. One of
    the most critical attributes for competing effectively in today’s modern development
    is dependability. As a result, increasing product velocity while being dependable
    is a fundamental premise for any IT organization. The SRE team is responsible
    for the availability, latency, performance optimization, change management, monitoring,
    alerting, emergency response, and capacity planning of their service(s).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管客户越来越期望更短的交付时间，但仅仅关注交付速度或更高的产品速度是不够的。今天现代开发中最关键的属性之一就是可靠性。因此，在提高产品速度的同时保持可靠性，是任何IT组织的基本前提。SRE团队负责其服务的可用性、延迟、性能优化、变更管理、监控、警报、应急响应和容量规划。
- en: The fundamental goal of SRE is to improve system reliability and stability.
    The team understands that reliability metrics are driven by business needs, and
    not every business function might require the highest level of reliability, as
    there are cost tradeoffs associated with it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: SRE的基本目标是提高系统的可靠性和稳定性。团队理解可靠性指标是由业务需求驱动的，并非每个业务功能都需要最高水平的可靠性，因为这会涉及成本权衡。
- en: Appropriate reliability
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 适当的可靠性
- en: The level of reliability for a service must be appropriate to match its business
    needs. Online e-commerce businesses will have different requirements compared
    to traditional retail shops. For example, they will require a greater level of
    availability than traditional retail shops, which operate only throughout the
    day for a set number of hours.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 服务的可靠性水平必须与其业务需求相匹配。在线电子商务企业与传统零售商店相比，会有不同的需求。例如，它们需要比传统零售商店更高的可用性，而后者通常只在设定的时间段内运营。
- en: Reliability is defined and measured using **service-level objectives** (**SLOs**).
    SRE practices can be tailored to achieve the appropriate level of reliability,
    and SLOs are usually defined as a percentage achievement over a period. SLOs are
    driven by key business objectives, whereas **service-level indicators** (**SLIs**)
    are driven by what’s possible to measure while implementing the service.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性通过**服务级目标**（**SLOs**）来定义和衡量。SRE实践可以根据需要调整，以实现适当的可靠性水平，SLO通常被定义为在一段时间内的百分比达成率。SLO是由关键业务目标驱动的，而**服务级指标**（**SLIs**）则是由在实现服务时可以衡量的内容驱动的。
- en: Consistent reliability
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一致的可靠性
- en: Products are built on the foundation of reliable systems, services, and people.
    SRE considers it essential to build a culture and practices that will lead to
    consistent and predictable reliability. The connections and trust we build with
    our colleagues, sustainable operating procedures, and the learning culture that
    we nurture to provide a psychologically safe workplace for our team to achieve
    environmental sustainability are all part of reliability.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 产品建立在可靠的系统、服务和人员的基础上。SRE认为，建立一种文化和实践是至关重要的，这将带来一致和可预测的可靠性。我们与同事建立的联系和信任、可持续的操作程序、以及我们培养的学习文化，为团队提供一个心理安全的工作环境，以实现环境可持续性，这些都是可靠性的一部分。
- en: In the next section, the SRE team’s key principles and practices are covered.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍SRE团队的关键原则和实践。
- en: Key principles and practices
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键原则和实践
- en: The SRE team’s day-to-day activities include developing and maintaining large,
    distributed services. Operating a service successfully in good health requires
    a wide range of activities, such as building monitoring systems, planning capacity,
    responding to incidents, resolving the root causes of outages, and so on.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: SRE团队的日常活动包括开发和维护大型分布式服务。成功地运营一个健康的服务需要一系列广泛的活动，例如构建监控系统、规划容量、响应事故、解决故障根本原因等。
- en: 'This section covers the key principles and practices that influence the SRE
    team’s day-to-day activities. The following diagram depicts the elements necessary
    to make a service reliable, from the most basic to the most advanced:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了影响 SRE 团队日常活动的关键原则和实践。以下图表展示了从最基本到最先进的服务可靠性所需的元素：
- en: '![Figure 2.3 – Service reliability hierarchy according to Google’s SRE book
    ](img/B18655_02_03.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 根据 Google SRE 书籍的服务可靠性层级](img/B18655_02_03.jpg)'
- en: Figure 2.3 – Service reliability hierarchy according to Google’s SRE book
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 根据 Google SRE 书籍的服务可靠性层级
- en: 'From the most basic requirement to the capstone step of launching a product
    or service, Google has described the reliability hierarchy as necessary to boost
    the reliability of the system and maintain service health. Each level of this
    pyramid will be discussed briefly:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从最基本的需求到推出产品或服务的巅峰步骤，Google 描述了为了提高系统可靠性和保持服务健康所需的可靠性层级。每个层级将在下文简要讨论：
- en: '**Monitoring**: Monitoring is the most essential strategy to maintain track
    of a system’s availability, and is positioned at the bottom foundation layer of
    the service reliability hierarchy. Effective monitoring is simple and resilient,
    and it should provide alerts for critical failures in your service. Such alerts
    should be simple and clear to understand.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控**：监控是维持系统可用性最重要的策略，它位于服务可靠性层级的最底层。有效的监控应简单且具有弹性，并且应该提供针对服务中关键故障的警报。这些警报应简单明了，易于理解。'
- en: There is no way to tell whether a service is operational, offline, or experiencing
    sporadic outages without monitoring. To establish a reliable system, you must
    be aware of problems and errors in your service before users notice them. After
    such problems are noticed, the SRE team should prioritize and manage incident
    response. To mitigate the impact or restore service to its previous state, the
    team should coordinate efforts in the most efficient way possible and maintain
    active communication.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 没有监控的情况下，无法判断一个服务是否正常运行、是否离线或是否遇到间歇性的故障。要建立一个可靠的系统，你必须在用户注意到问题之前，就能察觉到服务中的问题和错误。一旦这些问题被发现，SRE团队应优先处理并管理事故响应。为了减轻影响或恢复服务到先前状态，团队应以最有效的方式协调工作，并保持积极沟通。
- en: Microsoft Azure is a very robust cloud platform with a plethora of capabilities
    for dealing with every aspect of a solution. The services include tools for managing
    and deploying applications. When developing your solution on the Azure cloud,
    you must select the appropriate services to meet your SRE needs.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Azure 是一个非常强大的云平台，具备处理解决方案各个方面的丰富功能。该平台提供管理和部署应用程序的工具。在 Azure 云上开发解决方案时，必须选择适当的服务来满足你的
    SRE 需求。
- en: 'To monitor your application, you can use the following services:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了监控你的应用程序，你可以使用以下服务：
- en: '**Azure Monitor** provides a comprehensive solution for collecting, analyzing,
    and acting on telemetry from your cloud and on-premises environments, and supports
    operations at scale with *smart alerts* and *automated actions*.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Monitor** 提供了一个全面的解决方案，用于收集、分析和处理来自云环境和本地环境的遥测数据，并支持大规模操作，配备了*智能警报*和*自动化操作*。'
- en: '**Azure Application Insights** is a feature of Azure Monitor that provides
    a powerful **application performance management** (**APM**) tool that easily integrates
    with your applications to send telemetry and analyze application-specific metrics.
    It also provides ready-to-use dashboards and a metrics explorer that you can use
    to analyze the data to explore business needs.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Application Insights** 是 Azure Monitor 的一个功能，提供强大的**应用性能管理**（**APM**）工具，能够轻松地与应用程序集成，发送遥测数据并分析应用程序特定的指标。它还提供现成的仪表板和指标浏览器，可以用来分析数据并探索业务需求。'
- en: '**Incident response**: Once you have built effective monitoring around your
    service, you will need to configure notifications, such as SMS and **event management
    systems (EMS)** for unplanned, critical, and urgent incidents. Incidents and outages
    are unavoidable in a complex distributed system. Appropriate human intervention
    is required to identify the root cause and fix these outages.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件响应**：一旦你围绕服务建立了有效的监控，你需要配置通知系统，例如SMS和**事件管理系统（EMS）**，用于处理未计划的、关键的和紧急的事件。事件和故障在复杂的分布式系统中是不可避免的。需要适当的人为干预来识别根本原因并修复这些故障。'
- en: To minimize the business impact and run services smoothly, you would need to
    build up a process to mitigate and respond to these incidents in a structured
    way. Once the incident has been mitigated, the SRE team should follow the incident
    management response process to restore services as quickly as possible.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最小化业务影响并平稳运行服务，你需要建立一个结构化的过程来缓解和响应这些事件。事件得到缓解后，SRE团队应按照事件管理响应过程尽快恢复服务。
- en: 'Incident response frameworks have three common objectives, widely known as
    the **three Cs** (**3Cs**) of incident management:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 事件响应框架有三个共同目标，广泛称为事件管理的**三大C**（**3Cs**）：
- en: '**C**oordinate response effort.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协调**响应工作。'
- en: '**C**ommunicate between incident responders, within the organization, and to
    the outside world.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沟通**：在事件响应者、组织内部以及外部之间进行沟通。'
- en: Maintain **c**ontrol over the incident response.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持对事件响应的**控制**。
- en: 'Although each organization’s incident response process may change depending
    on organizational structure, skills, and previous experience, consider the following
    set of recommendations and best practices for responding to incidents:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管每个组织的事件响应过程可能会根据组织结构、技能和先前的经验有所不同，但可以参考以下一套建议和最佳实践来响应事件：
- en: '**Prioritize**: Fix frequently occurring problems, get the service back up
    and running, and keep the evidence for root-cause analysis.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优先级**：修复频繁发生的问题，尽快恢复服务，并保留根本原因分析的证据。'
- en: '**Prepare**: In advance, develop and document your incident management procedures
    in consultation with incident participants.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准备**：提前与事件参与者共同制定并记录你的事件管理程序。'
- en: '**Trust**: Provide all incident participants complete autonomy within their
    allocated roles and responsibilities.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信任**：为所有事件参与者在其分配的角色和责任范围内提供完全的自主权。'
- en: 'During an incident, you must strike these critical balances:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件发生期间，你必须平衡以下关键点：
- en: '**Speed**:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**：'
- en: Balance the need to move swiftly to satisfy stakeholders with the risk of making
    hasty decisions.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平衡快速行动以满足利益相关者需求与匆忙决策带来的风险。
- en: '**Sharing information**:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息共享**：'
- en: Inform investigators, stakeholders, and customers so that liability is minimized,
    and unrealistic expectations are avoided.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知调查人员、利益相关者和客户，以减少责任，避免不切实际的期望。
- en: '**Post-mortem and root-cause analysis/blameless post-mortem**: Once an incident
    has been mitigated and handled, the SRE team implements post-mortem procedures.
    This post-mortem procedure offers an opportunity to cultivate a blameless post-mortem
    culture. A blameless post-mortem (or retrospective) is a post-incident document
    that helps teams figure out why an incident happened, what went well, what went
    wrong, and brainstorm how to prevent such issues from recurring.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事后分析和根本原因分析/无责事后分析**：一旦事件得到缓解并处理完毕，SRE团队会执行事后分析程序。这个事后分析程序为培养无责事后分析文化提供了机会。无责事后分析（或回顾）是一个事后文件，帮助团队弄清楚事件发生的原因、哪些做得好、哪些做得不好，并集思广益，探讨如何防止类似问题的再发生。'
- en: Blameless post-mortems are a tenet of SRE culture. To build a sustainable culture,
    we would need to assume that everyone involved in an incident had good intentions
    and did the right thing with the information they had to minimize the business
    impact. Pointing the blame at people or at a team will discourage the team and
    will engender a fear of punishment, which will make it more difficult to bring
    concerns to light.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 无责事后分析是SRE文化的一个基本原则。为了建立可持续的文化，我们需要假设所有参与事件的人都抱有良好的意图，并且在他们掌握的信息基础上做出了正确的决定，以最小化业务影响。将责任归咎于个人或团队会打击团队士气，并引发对惩罚的恐惧，这会使得问题更难暴露出来。
- en: A blameless post-mortem is an opportunity for the team to learn from their failures
    or mistakes.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 无责事后分析是团队从失败或错误中学习的机会。
- en: '**Testing and release procedures/testing for reliability**: The SRE team is
    responsible for building confidence in the reliability of the production systems
    they build and maintain. The SRE team will adopt a fully automated testing strategy
    along with classical software testing techniques to deploy in production and release
    it to users without any issues or downtime. The automated test suite(s) designed
    to support software reliability instills confidence that software will be deployed
    to production without major issues. As part of their QA activities, the SRE team
    must prioritize and make continuous investments in automated testing practices.
    Customers will be happier and platform adoption will increase, leading to a higher
    **return on investment** (**ROI**).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试和发布流程/可靠性测试**：SRE团队负责建立对其构建和维护的生产系统可靠性的信任。SRE团队将采用完全自动化的测试策略，并结合传统的软件测试技术，将其部署到生产环境并发布给用户，确保没有问题或停机时间。旨在支持软件可靠性的自动化测试套件可以增强信心，确保软件能够顺利部署到生产环境中。作为其质量保证活动的一部分，SRE团队必须优先考虑并持续投资于自动化测试实践。客户会更满意，平台的采纳率也会提高，从而带来更高的**投资回报率**（**ROI**）。'
- en: '**Capacity planning**: As a member of the SRE team, you’re in charge of determining
    the resource needs for your service, including the necessary hardware, software,
    and network resources, as well as ensuring that your service performs relatively
    well, even in the face of unanticipated demand. Capacity management is the process
    of ensuring that your service has enough resources to be scalable, fault-tolerant,
    efficient, and reliable. For example, SRE would estimate how much storage, service
    instances, or memory you will need over a specific interval of time. This data
    will help you create a scalable architecture for your service. You may be more
    flexible on required capacity in cloud-based models because you can dynamically
    increase or decrease required resources.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容量规划**：作为SRE团队的一员，你负责确定你的服务所需的资源，包括必要的硬件、软件和网络资源，并确保即使面对预料之外的需求，服务仍能表现良好。容量管理是确保服务拥有足够资源以实现可扩展性、容错性、高效性和可靠性的过程。例如，SRE会估算在特定时间间隔内，你将需要多少存储、服务实例或内存。这些数据将帮助你为服务创建可扩展的架构。在基于云的模型中，你可能对所需的容量更为灵活，因为可以动态地增加或减少所需资源。'
- en: Azure App Service, Azure SQL Database, Azure Kubernetes, and Azure Cache for
    Redis are examples of Azure cloud services that have built-in auto-scale features.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Azure应用服务、Azure SQL数据库、Azure Kubernetes和Azure Cache for Redis是Azure云服务的示例，这些服务内置了自动缩放功能。
- en: For example, in **Azure App Service**, scale settings are applied in seconds
    and affect all apps in your App Service plan. You do not need to modify or redeploy
    your application. You can **scale up** and get more CPU, memory, disk space, and
    extra features, such as dedicated **virtual machines** (**VMs**), custom domains
    and certificates, staging slots, autoscaling, and more. You can also leverage
    autoscaling, which automatically scales the number of instances depending on established
    criteria and schedules. Scaling rules are a more controlled approach to scale
    in or scale out.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在**Azure应用服务**中，缩放设置在秒级别应用，并影响你应用服务计划中的所有应用。你不需要修改或重新部署应用。你可以**扩展**并获得更多的CPU、内存、磁盘空间以及额外的功能，例如专用的**虚拟机**（**VMs**）、自定义域名和证书、暂存槽、自动缩放等。你还可以利用自动缩放，依据设定的标准和时间表自动调整实例数量。缩放规则是一个更为可控的扩展或缩减的方法。
- en: For example, every day at 21:00, you can scale down to two instances of Azure
    App Service, with a rule to scale up by one instance when CPU demand averages
    higher than 50%. A scale-out or scale-in action normally takes a few minutes to
    complete. Consider this when designing your scaling plan to match performance
    requirements and satisfy SLAs.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，每天21:00，你可以将Azure应用服务的实例数缩减到两个，并设置规则，当CPU需求的平均值高于50%时，自动扩展一个实例。扩展或缩减通常需要几分钟才能完成。在设计你的扩展计划时，请考虑这一点，以匹配性能需求并满足SLA要求。
- en: '**Development**: Although everyone expects services to run smoothly, there
    may be disruptions caused by events beyond anyone’s control, such as natural disasters
    or hard drive failure, or even system process crashes that will impact your services
    adversely. Natural catastrophes can seriously damage many data centers in a region.
    To keep systems *functional*, the SRE team must design strategies to mitigate
    these failures. Such solutions would make use of deployment patterns/strategies
    such as **geo-replication and failover**, **geo-redundancy**, and **Active-Active**,
    **Active-Passive** **High Availability**:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发**：虽然每个人都期望服务能够顺利运行，但可能会由于某些无法控制的事件而发生中断，如自然灾害、硬盘故障，甚至是系统进程崩溃，这些都可能对您的服务产生不利影响。自然灾害可能会严重损坏某个区域的许多数据中心。为了保持系统
    *正常运行*，SRE 团队必须设计策略来缓解这些故障。这些解决方案可能会采用诸如 **地理复制与故障转移**、**地理冗余**、以及 **活动-活动**、**活动-被动**
    **高可用性** 等部署模式/策略。'
- en: '![Figure 2.4 – Multi-region architecture  ](img/B18655_02_04.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 多区域架构](img/B18655_02_04.jpg)'
- en: Figure 2.4 – Multi-region architecture
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 多区域架构
- en: 'For example, as depicted in the preceding diagram, a multi-region architecture
    provides higher availability of service than when deploying to a single region.
    The architecture under consideration here includes the following components, to
    mention just a few:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如前图所示，多区域架构比单一区域部署提供更高的服务可用性。这里讨论的架构包括以下组件，仅举几例：
- en: '**Active and standby region**: Two regions to achieve higher availability.
    One is the primary region. The other region is for failover.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动区域与备用区域**：两个区域用于实现更高的可用性。一个是主区域，另一个区域用于故障转移。'
- en: '**Azure Front Door**: A modern cloud **content delivery network** (**CDN**)
    service that delivers high performance, scalability, and secure user experiences
    for your content and applications. This service offers various layer 7 load-balancing
    capabilities and near-real-time failover for your applications.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Front Door**：一种现代云端 **内容分发网络**（**CDN**）服务，提供高性能、可扩展性和安全的用户体验，适用于您的内容和应用程序。该服务提供多种第七层负载均衡能力以及接近实时的故障转移。'
- en: '**Azure DNS**: A hosting service for DNS domains. It provides name resolution.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure DNS**：用于 DNS 域名托管服务，提供名称解析。'
- en: '**Azure App Service**: Azure’s premier service for web applications and web-based
    APIs, which provides integrated security with **Azure AD** and **Azure Key Vault**.
    Supports auto-scaling.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 应用服务**：Azure 的主要服务，用于 Web 应用程序和基于 Web 的 API，提供与 **Azure AD** 和 **Azure
    Key Vault** 的集成安全性。支持自动扩展。'
- en: '**Azure Functions**: A serverless compute option, it uses an event-driven model.
    In this architecture, the functions are invoked when a new message is pushed into
    the queue.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Functions**：一种无服务器计算选项，采用事件驱动模型。在此架构中，当新消息推送到队列时，函数会被调用。'
- en: '**Azure Cache for Redis**: Applies a caching layer as a service to the solution,
    providing an in-memory managed cache to reduce latency and increase performance
    for the clients.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Redis 缓存**：作为解决方案的一部分，应用缓存层服务，提供内存中的托管缓存，以减少延迟并提高客户端性能。'
- en: '**Azure Storage, Azure Cosmos DB, and Azure SQL**: Can store both structured
    and non-structured content.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 存储、Azure Cosmos DB 和 Azure SQL**：可以存储结构化和非结构化内容。'
- en: In the unlikely event of a disaster, a regional outage affects the active region,
    and Azure Front Door will fail over to the standby region. This architecture uses
    two regions, active and standby, to achieve higher availability. During normal
    operations, network traffic is routed to the primary region. If the active region
    becomes unavailable, traffic is routed to the standby region.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在灾难发生的情况下，如果区域中断影响了活动区域，Azure Front Door 将会切换到备用区域。此架构使用两个区域，活动区域和备用区域，以实现更高的可用性。在正常操作期间，网络流量会被路由到主区域。如果活动区域不可用，流量将路由到备用区域。
- en: Active/passive with hot standby means resources in the secondary/standby region
    will be always running. These secondary region resources can be used for **A/B
    testing** for better value for money.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活跃/被动与热备份意味着在备用/待命区域的资源将始终处于运行状态。这些备用区域的资源可以用于 **A/B 测试**，以提高性价比。
- en: '**Product**: Companies launch new products at a slow pace. In the cloud and
    distributed modern world, the launch and release cycles need to be at a faster
    pace.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品**：公司推出新产品的速度较慢。在云计算和分布式现代化世界中，推出和发布周期需要更快。'
- en: Teams can create a checklist to document action items and roll back plans. A
    checklist plays an instrumental role in launching new services with reproducible
    reliability. A checklist needs to be tailored to the company’s internal services,
    processes, and infrastructure.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 团队可以创建清单来记录行动项目和回滚计划。清单在以可复制的可靠性启动新服务中发挥着重要作用。清单需要根据公司的内部服务、流程和基础设施进行定制。
- en: 'The checklist needs to be created carefully or it will grow to an unmanageable
    size. This checklist can and should be documented and automated to minimize efforts.
    The checklist can cover the following themes:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 清单需要小心创建，否则它会膨胀到无法管理的规模。此清单可以并且应该被文档化和自动化，以最小化工作量。清单可以涵盖以下主题：
- en: Architecture and dependencies
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构和依赖关系
- en: Integration
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成
- en: Capacity planning
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容量规划
- en: Failure modes
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故障模式
- en: Processes and automation
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流程与自动化
- en: Development process
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发过程
- en: Rollout planning
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布规划
- en: Gradual and staged rollouts
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渐进式和阶段性发布
- en: In the next section, we will cover patterns and principles that influence SRE
    operations.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论影响SRE操作的模式和原则。
- en: Implementing SLOs and SLIs
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施SLOs和SLIs
- en: SLOs define a goal level for your service’s reliability. SLOs are at the heart
    of SRE practices because they are critical to making data-driven decisions regarding
    reliability. SLOs are a tool to help determine what engineering work to prioritize.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: SLOs定义了您服务可靠性的目标水平。SLOs是SRE实践的核心，因为它们对做出关于可靠性的基于数据的决策至关重要。SLOs是帮助确定优先处理哪些工程工作的工具。
- en: SLIs are a quantitative indicator of the level of service that you are providing.
    SLOs and SLIs always go hand in hand and are usually defined iteratively. SLOs
    are driven by key business objectives, whereas SLIs are driven by what is possible
    to be measured while implementing the service.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: SLIs是衡量您提供的服务水平的定量指标。SLOs和SLIs总是并行存在，并通常是迭代定义的。SLOs由关键业务目标驱动，而SLIs则由实施服务时可衡量的内容驱动。
- en: Your first attempt at an SLI and SLO doesn’t have to be correct. The most important
    goal is to get something in place and measured, and to set up a feedback loop
    so you can improve. You can identify which metrics best match what your users
    care about in your service.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 您第一次尝试SLI和SLO时不必是正确的。最重要的目标是建立并进行测量，并设置反馈回路，以便您可以改进。您可以识别哪些度量指标最符合用户在您的服务中关心的内容。
- en: The SRE team recommends using a limited number of metrics based on critical
    services for greater user experience rather than developing an endless number
    of monitoring metrics. You could start with a broad target and then tweak it over
    time. This allows you to concentrate alerts on instances where you can reliably
    state that the services will be nonfunctional and will start to impact user experience.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: SRE团队建议根据关键服务使用有限的度量指标，以提高用户体验，而不是开发无穷无尽的监控指标。您可以从广泛的目标开始，然后随着时间的推移进行调整。这使您能够将警报集中在可以可靠地判断服务将失效并开始影响用户体验的实例上。
- en: 'Let’s say that you are building a food delivery app from which users can do
    the following:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您正在构建一个外卖应用，用户可以执行以下操作：
- en: Browse restaurants and menus.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览餐厅和菜单。
- en: Select menu items and place an order.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择菜单项并下单。
- en: Pay for the order.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支付订单。
- en: For this app, it is extremely important for a better user experience and overall
    business success that users can place an order for delivery and successfully make
    payments. Here, in the first attempt, the *Place order and pay* scenario will
    be the basis for defining SLOs, as this service would take precedence for business
    success over any other services.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个应用，用户能够下单并成功支付对于更好的用户体验和整体业务成功至关重要。在这里，首次尝试的*下单并支付*场景将成为定义SLOs的基础，因为这个服务对业务成功的优先级高于其他任何服务。
- en: The next step is to figure out which metrics to use as SLIs that will most accurately
    track the user experience. You can choose from a wide range of indicators, such
    as availability latency, throughput, correctness, and data freshness, as detailed
    next.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是弄清楚哪些度量指标可以作为SLIs，最准确地跟踪用户体验。您可以从各种指标中选择，例如可用性延迟、吞吐量、正确性和数据新鲜度，接下来会详细介绍。
- en: 'Most services focus on the following four key SLI metrics to monitor. These
    are the four golden signals of monitoring:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数服务专注于以下四个关键SLI指标来进行监控。这些是监控的四个黄金信号：
- en: '**Request latency**: The time taken for your service to return a response to
    the request'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**请求延迟**：您的服务返回请求响应所需的时间'
- en: '**Availability of service**: The fraction of time during which service is available
    to use'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务可用性**：服务可用的时间占比'
- en: '**Success rate**: The number of requests successfully completed'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成功率**：成功完成的请求数量'
- en: '**Throughput**: The number of requests processed per second'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吞吐量**：每秒处理的请求数量'
- en: The *measurement period* for defining an SLO is very important and can be defined
    over various time intervals. The SLO and SLIs need to be something that can be
    accurately measured and represented in your monitoring system. Over time, you
    will compare the SLO targets and SLIs with measured metrics. Now, for the *Place
    order and pay* service, which is a basis for the SLO, you will want to have an
    order confirmation received within an acceptable window.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 定义SLO的*测量周期*非常重要，可以在不同的时间间隔内进行定义。SLO和SLI需要是能够在监控系统中准确测量和表示的内容。随着时间的推移，你将比较SLO目标和SLI与实际度量指标。现在，对于*下单并支付*服务，它是SLO的基础，你希望在可接受的时间窗口内收到订单确认。
- en: In our example of the food delivery app, you can set a value of 700 ms for a
    response to be returned for a successful request for the *Place order and pay*
    service for a given specified time window of 1 month. These SLI goals and timeframes
    should be acceptable to businesses. So, if there are 10,000 HTTP requests in a
    calendar month and only 9,990 of them are successful, it corresponds to 9,990/10,000
    or 99.9% availability for that month.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们以外卖应用为例的情况下，你可以为*下单并支付*服务设置一个响应时间值，比如700毫秒，用于在指定的1个月时间窗口内成功请求的响应。这些SLI目标和时间框架应当是业务可以接受的。所以，如果在一个日历月内有10,000个HTTP请求，其中9,990个请求成功，这意味着该月的可用性为9,990/10,000，或99.9%。
- en: If your service is not meeting SLOs, then the SRE team will try to strike a
    balance between new feature development/deployment and increasing reliability
    of service to avoid SLO violations for a given measurement period.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的服务未能满足SLO，SRE团队将努力在新功能开发/部署和提高服务可靠性之间找到平衡，以避免在给定的测量周期内发生SLO违规。
- en: An SLA is a legal agreement between the business and the customer that includes
    a reliability target and repercussions of not meeting it, whereas an SLO is an
    internal target that measures how customers use the service. SLOs are not shared
    with external stakeholders and have no legal bindings or consequences. If a service
    availability breaches the SLO, the SRE team must respond immediately to avoid
    the organization being penalized for failing to meet SLAs. SLOs should always
    be more stringent than corresponding SLAs. The SRE team does not typically get
    involved in constructing SLAs, because SLAs are closely tied to business and product
    decisions. However, the SRE team can help to define SLIs.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: SLA是商业和客户之间的法律协议，包括可靠性目标以及未能达到目标的后果，而SLO是一个衡量客户如何使用服务的内部目标。SLO不会与外部利益相关者共享，也没有法律约束力或后果。如果服务的可用性违反了SLO，SRE团队必须立即响应，以避免组织因未能满足SLA而受到处罚。SLO应始终比相应的SLA更严格。SRE团队通常不参与构建SLA，因为SLA与业务和产品决策密切相关。然而，SRE团队可以帮助定义SLI。
- en: To find the right balance between reliability and innovation, it is better to
    create a rate against which SLO violations can be measured, and an *error budget*
    at which SLOs can be missed. In the next section, we will learn more about error
    budgets.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在可靠性和创新之间找到合适的平衡，最好创建一个衡量SLO违规的比率，以及一个可以容忍SLO失效的*错误预算*。在接下来的部分中，我们将深入了解错误预算。
- en: Establishing an error budget policy
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 建立错误预算政策
- en: An **error budget** is the maximum number of errors or the maximum amount of
    time your service is nonfunctional over a given period before it has a negative
    impact on the business and users become dissatisfied. The error budget is applied
    to several aspects of your service, such as availability, latency, and so on.
    The SRE team utilizes error budgets to strike a balance between service reliability
    and innovation speed.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**错误预算**是指在给定周期内，服务无法正常运行的最大错误数或最大时间，超过此限度会对业务产生负面影响，用户将不满。错误预算适用于服务的多个方面，例如可用性、延迟等。SRE团队利用错误预算在服务可靠性和创新速度之间找到平衡。'
- en: An error budget will help you to know whether you are meeting expectations or
    not, and will help you to take appropriate actions to reduce the reliability failure
    of your service. If the service receives 1,000,000 requests in 4 weeks, a 99.9%
    SLO for successful requests allows us to budget for 1,000 errors throughout that
    period.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 错误预算将帮助你判断自己是否达到了预期目标，并帮助你采取适当的措施来减少服务的可靠性故障。如果服务在四周内收到1,000,000个请求，99.9%的成功请求SLO（服务水平目标）允许我们在这段时间内预算1,000个错误。
- en: A service with 99.95% SLO has an error budget of 0.5% that translates to a overall
    downtime of 4 hours, 22 minutes, and 48 seconds within a year. The SRE team should
    take an appropriate course of action to restore stability to your service that
    is not meeting SLOs or has exhausted the error budget or comes close to exhausting
    it.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有99.95% SLO的服务，其错误预算为0.5%，意味着在一年内整体的停机时间为4小时22分钟48秒。SRE团队应采取适当的行动来恢复服务的稳定性，特别是当服务未达到SLO，或错误预算已用尽或接近用尽时。
- en: When your service is within budget, SRE practice encourages you to burn the
    error budget strategically, whether for a new feature or architectural modifications.
    Even though any new release inadvertently makes the service less reliable, for
    example, if the service goes down due to something such as a deployment configuration
    issue, the service is still within budget. Error budgets are often created for
    certain time periods, such as a month, quarter, or year.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的服务在预算范围内时，SRE实践鼓励你战略性地消耗错误预算，无论是用于新功能还是架构修改。尽管任何新的发布都会在某种程度上使服务变得不那么可靠，例如，如果服务因为部署配置问题而宕机，服务仍然在预算内。错误预算通常是根据一定时间段设定的，例如一个月、一个季度或一年。
- en: Error budgets are frequently used strategically to apply automation for **toil**
    tasks such as manual deployment or environment setup, configuration changes, incident
    response, and many more. In the next section, we will learn more about reducing toil.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 错误预算通常用于战略性地为**Toil**任务（如手动部署、环境设置、配置更改、事件响应等）应用自动化。在下一节中，我们将进一步了解如何减少Toil。
- en: Reducing toil
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 减少Toil
- en: Toil in an SRE context refers to operations that lack long-term monetary value
    and do not significantly advance the service. They are frequently repetitive and
    mostly manual (even though they could be automated). As the service or system
    grows, the number of manual requests for that system will likely grow proportionally,
    requiring even more human labor.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在SRE（站点可靠性工程）上下文中，"Toil" 指的是那些没有长期经济价值并且不会显著推动服务进展的操作。这些操作通常是重复性的，并且大多是手动的（尽管它们可以自动化）。随着服务或系统的增长，系统的手动请求数量可能会按比例增长，进而需要更多的人工劳动。
- en: SRE engineers can only spend up to 50% of their time on *Ops* work such as tickets,
    on-call, and manual tasks, among other things.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: SRE工程师最多只能将50%的时间花费在*Ops*工作上，如处理工单、值班和手动任务等。
- en: 'SRE engineers should spend the other half of their time on activities such
    as the following (this is not a comprehensive list):'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: SRE工程师应该将他们的另一半时间花在以下活动上（这不是一个全面的列表）：
- en: Using automation to enable scalability
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动化来实现可扩展性
- en: Release deployment
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布部署
- en: Test suite automation
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试套件自动化
- en: Applying database changes
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用数据库更改
- en: Automating response to incidents such as password reset and user creation
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化响应事件，如密码重置和用户创建
- en: Reviewing noncritical monitoring alerts
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查非关键监控警报
- en: Engineering work to develop new features to reduce toil and increase system
    reliability
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了减少Toil并提高系统可靠性，进行工程工作以开发新功能。
- en: To efficiently reduce the toil workload, the SRE team can start small and work
    their way up. Toil elimination requires automation, and the SRE team must work
    tirelessly to reduce or minimize toil. Automation engineering efforts, whether
    partial or complete, is necessary, but it should not endanger system reliability.
    **Azure Automation** can be used to automate human responses, as well as diagnosing
    and resolving issues. Team motivation will rise because of automation, and the
    team will be able to focus on engineering work.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效地减少Toil工作负担，SRE团队可以从小处开始，逐步推进。消除Toil需要自动化，SRE团队必须不懈努力，减少或最小化Toil。自动化工程工作，无论是部分还是完全，都是必要的，但它不应危及系统可靠性。**Azure
    Automation** 可以用来自动化人类响应，并诊断和解决问题。自动化将提升团队的动力，使团队能够专注于工程工作。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned about SRE principles and practices. We are
    now aware of how to calculate time-based availability and how to define availability
    based on business expectations and needs.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们了解了SRE的原则和实践。现在我们知道如何计算基于时间的可用性，以及如何根据业务期望和需求定义可用性。
- en: We also explored the typical reliability challenges associated with the traditional
    team model and how constituting an SRE team will help you find the right balance
    between system reliability and development. We underlined the role of proper and
    consistent reliability.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还探讨了传统团队模型中常见的可靠性挑战，以及如何通过建立SRE团队来帮助你在系统可靠性和开发之间找到合适的平衡。我们强调了适当且一致的可靠性的重要性。
- en: Then, we learned about all the necessary aspects, from conception to successfully
    launching the service on production. We also highlighted key techniques such as
    applying SLOs and SLIs, reducing toil, the post-mortem culture, and efficiently
    utilizing an error budget to improve system and cloud service dependability.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们学习了从构思到成功将服务部署到生产环境的所有必要方面。我们还重点介绍了关键技术，如应用SLO和SLI、减少繁重工作、事后分析文化，以及高效利用错误预算来提高系统和云服务的可靠性。
- en: In the upcoming chapter, we’ll look at DevOps tools and capabilities to see
    how they can help you manage your software development life cycle.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探讨DevOps工具和能力，看看它们如何帮助你管理软件开发生命周期。
- en: Self-practice exercises
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自我实践练习
- en: Identify SLOs jointly with business stakeholders and development teams.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与业务利益相关者和开发团队共同确定SLO。
- en: 'Perform blameless post-mortems for recent or hypothetical production incidents
    for your services in the production environment:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对你服务在生产环境中最近或假设的生产事件进行无责事后分析：
- en: Refer to [https://sre.google/sre-book/example-postmortem/](https://sre.google/sre-book/example-postmortem/)
    for more guidance and an example post-mortem.
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参阅[https://sre.google/sre-book/example-postmortem/](https://sre.google/sre-book/example-postmortem/)获取更多指导和一个示例事后分析。
- en: '[https://docs.microsoft.com/en-us/azure/architecture/resiliency/failure-mode-analysis](https://docs.microsoft.com/en-us/azure/architecture/resiliency/failure-mode-analysis).'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/architecture/resiliency/failure-mode-analysis](https://docs.microsoft.com/en-us/azure/architecture/resiliency/failure-mode-analysis)'
- en: '[https://docs.microsoft.com/en-us/azure/architecture/framework/resiliency/overview](https://docs.microsoft.com/en-us/azure/architecture/framework/resiliency/overview).'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/architecture/framework/resiliency/overview](https://docs.microsoft.com/en-us/azure/architecture/framework/resiliency/overview)'
- en: Identify tedious, repetitive tasks/toil associated with running your services
    in the production environment.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别与在生产环境中运行服务相关的繁琐、重复性任务/负担。
- en: In the Azure portal, first, configure App Service logging with Application Insights
    to monitor your application, then configure email alerts.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Azure门户中，首先配置应用服务日志记录与应用洞察，以监控应用程序，然后配置电子邮件警报。
- en: Questions
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude the SRE strategy, here is a list of questions for you to test
    your knowledge regarding this chapter’s material. You will find answers in the
    *Assessments* section at the end of the book:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们总结SRE战略时，这里有一份问题清单供你测试你对本章内容的理解。你可以在书本末尾的*评估*部分找到答案：
- en: True or false? SRE is primarily focused on the reliability of service.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？SRE主要关注服务的可靠性。
- en: True or false? Availability is expressed in fives.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？可用性是以五个9来表示的。
- en: True or false? SRE adopts automation to enable application management.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？SRE采用自动化来实现应用程序管理。
- en: What is the weekly, monthly, and yearly downtime allowance for a service with
    95% availability?
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一个可用性为95%的服务，每周、每月和每年的停机容忍时间是多少？
- en: What are the top three reliability challenges?
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最主要的三大可靠性挑战是什么？
- en: Development velocity
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发速度
- en: Quality
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 质量
- en: Stability
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稳定性
- en: DevOps management
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps管理
- en: Bug tracking
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缺陷跟踪
- en: True or false? The appropriate level of reliability for services is identified
    by the key stakeholders.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？服务的适当可靠性水平由关键利益相关者确定。
- en: What is toil in the SRE context?
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在SRE的背景下，什么是负担（toil）？
- en: Further reading
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Google’s SRE book: [https://sre.google/sre-book/part-I-introduction/](https://sre.google/sre-book/part-I-introduction/%20)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌的SRE书籍：[https://sre.google/sre-book/part-I-introduction/](https://sre.google/sre-book/part-I-introduction/%20)
- en: 'Microsoft’s SRE documentation: https://docs.microsoft.com/en-us/learn/modules/intro-to-site-reliability-engineering/'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软的SRE文档：https://docs.microsoft.com/en-us/learn/modules/intro-to-site-reliability-engineering/
- en: '*Azure Monitor*: [https://docs.microsoft.com/en-us/azure/azure-monitor/overview](https://docs.microsoft.com/en-us/azure/azure-monitor/overview%20)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 监视器*： [https://docs.microsoft.com/zh-cn/azure/azure-monitor/overview](https://docs.microsoft.com/zh-cn/azure/azure-monitor/overview%20)'
- en: '*Azure Application Insights*: [https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview%20)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 应用程序洞察*： [https://docs.microsoft.com/zh-cn/azure/azure-monitor/app/app-insights-overview](https://docs.microsoft.com/zh-cn/azure/azure-monitor/app/app-insights-overview%20)'
- en: '*Azure Automation*: [https://docs.microsoft.com/en-us/azure/automation/overview](https://docs.microsoft.com/en-us/azure/automation/overview)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 自动化*： [https://docs.microsoft.com/zh-cn/azure/automation/overview](https://docs.microsoft.com/zh-cn/azure/automation/overview)'
