["```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\n  modern-devops\n$ cd modern-devops/ch7\n```", "```\n$ find ./ -type f -exec sed -i -e \\\n's/<your_dockerhub_user>/<your actual docker hub user>/g' {} \\; \n```", "```\n$ sudo apt update && sudo apt install awscli -y\n$ aws --version\naws-cli/1.22.34 Python/3.10.6 Linux/5.19.0-1028-aws botocore/1.23.34\n```", "```\n$ sudo curl -Lo /usr/local/bin/ecs-cli \\\nhttps://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest\n$ sudo chmod +x /usr/local/bin/ecs-cli\n```", "```\n$ ecs-cli --version\necs-cli version 1.21.0 (bb0b8f0)\n```", "```\n$ export AWS_SECRET_ACCESS_KEY=...\n$ export AWS_ACCESS_KEY_ID=...\n$ export AWS_DEFAULT_REGION=...\n```", "```\n$ aws ec2 create-key-pair --key-name ecs-keypair\n```", "```\n$ ecs-cli up --keypair ecs-keypair --instance-type t2.micro \\\n--size 2 --cluster cluster-1 --capability-iam\nINFO[0002] Using recommended Amazon Linux 2 AMI with ECS Agent 1.72.0 and Docker version \n20.10.23\nINFO[0003] Created cluster cluster=cluster-1 region=us-east-1\nINFO[0004] Waiting for your cluster resources to be created...\nINFO[0130] Cloudformation stack status stackStatus=CREATE_IN_PROGRESS\nVPC created: vpc-0448321d209bf75e2\nSecurity Group created: sg-0e30839477f1c9881\nSubnet created: subnet-02200afa6716866fa\nSubnet created: subnet-099582f6b0d04e419\nCluster creation succeeded.\n```", "```\n$ cd ~/modern-devops/ch7/ECS/tasks/EC2/\n```", "```\nversion: '3'\nservices:\n  web:\n    image: nginx\n    ports:\n      - \"80:80\"\n    logging:\n      driver: awslogs\n      options:\n        awslogs-group: /aws/webserver\n        awslogs-region: us-east-1\n        awslogs-stream-prefix: ecs\n```", "```\nversion: 1\ntask_definition:\n  services:\n    web:\n      cpu_shares: 100\n      mem_limit: 524288000\n```", "```\n$ ecs-cli compose up --create-log-groups --cluster cluster-1 --launch-type EC2\n```", "```\n$ ecs-cli ps --cluster cluster-1\nName                    State    Ports                TaskDefinition\ncluster-1/fee1cf28/web  RUNNING  34.237.218.7:80->80  EC2:1\n```", "```\n$ curl 34.237.218.7:80\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</html>\n```", "```\n$ ecs-cli compose scale 2 --cluster cluster-1 --launch-type EC2\n```", "```\n$ ecs-cli ps --cluster cluster-1\nName                    State    Ports                 TaskDefinition\ncluster-1/b43bdec7/web  RUNNING  54.90.208.183:80->80  EC2:1\ncluster-1/fee1cf28/web  RUNNING  34.237.218.7:80->80   EC2:1\n```", "```\n$ aws logs describe-log-streams --log-group-name /aws/webserver \\\n--log-stream-name-prefix ecs | grep logStreamName\n  \"logStreamName\": \"ecs/web/b43bdec7\",\n  \"logStreamName\": \"ecs/web/fee1cf28\",\n```", "```\n$ aws logs get-log-events --log-group-name/aws/webserver \\\n--log-stream ecs/web/b43bdec7\n```", "```\n$ ecs-cli compose down --cluster cluster-1\n```", "```\n$ ecs-cli ps --cluster cluster-1\nINFO[0001] Stopping container... container=cluster-1/b43bdec7/web\nINFO[0001] Stopping container... container=cluster-1/fee1cf28/web \nINFO[0008] Stopped container... container=cluster-1/b43bdec7/web \ndesiredStatus=STOPPED lastStatus=STOPPED taskDefinition=\"EC2:1\" \nINFO[0008] Stopped container... container=cluster-1/fee1cf28/web \ndesiredStatus=STOPPED lastStatus=STOPPED taskDefinition=\"EC2:1\"\n```", "```\n$ ecs-cli compose up --create-log-groups --cluster cluster-1 --launch-type FARGATE\nFATA[0001] ClientException: Fargate only supports network mode 'awsvpc'.\n```", "```\n$ cd ~/modern-devops/ch7/ECS/tasks/FARGATE/\n```", "```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```", "```\n$ aws iam --region us-east-1 create-role --role-name ecsTaskExecutionRole \\\n --assume-role-policy-document file://task-execution-assume-role.json \n```", "```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```", "```\n$ aws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy \\\n--role-name ecsTaskExecutionRole\n```", "```\nversion: 1\ntask_definition:\n  task_execution_role: ecsTaskExecutionRole\n  ecs_network_mode: awsvpc\n  task_size:\n    mem_limit: 0.5GB\n    cpu_limit: 256\nrun_params:\n  network_configuration:\n    awsvpc_configuration:\n      subnets:\n        - \"subnet-088b52c91a6f40fd7\"\n        - \"subnet-032cd63290da67271\"\n      security_groups:\n        - \"sg-097206175813aa7e7\"\n      assign_public_ip: ENABLED\n```", "```\n$ ecs-cli compose up --create-log-groups --cluster cluster-1 --launch-type FARGATE\n```", "```\n$ ecs-cli ps --cluster cluster-1\nName                    State    Ports           TaskDefinition\ncluster-1/8717a149/web  RUNNING  3.80.173.230:80 FARGATE:1\n```", "```\n$ curl 3.80.173.230:80\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</body>\n</html>\n```", "```\n$ ecs-cli compose down --cluster cluster-1\n```", "```\n$ ecs-cli compose service up --create-log-groups \\\n --cluster cluster-1 --launch-type FARGATE\nINFO[0001] Using ECS task definition TaskDefinition=\"FARGATE:1\"\nINFO[0002] Auto-enabling ECS Managed Tags\nINFO[0013] (service FARGATE) has started 1 tasks: (task 9b48084d).  timestamp=\"2023-07-03 \n11:24:42 +0000 UTC\"\nINFO[0029] Service status desiredCount=1 runningCount=1 serviceName=FARGATE\nINFO[0029] (service FARGATE) has reached a steady state.  timestamp=\"2023-07-03 11:25:00 \n+0000 UTC\"\nINFO[0029] (service FARGATE) (deployment ecs-svc/94284856) deployment \ncompleted.  timestamp=\"2023-07-03 11:25:00 UTC\"\nINFO[0029] ECS Service has reached a stable state desiredCount=1 runningCount=1 \nserviceName=FARGATE\nINFO[0029] Created an ECS service service=FARGATE taskDefinition=\"FARGATE:1\"\n```", "```\n$ ecs-cli ps --cluster cluster-1\nName                    State   Ports             TaskDefinition\ncluster-1/9b48084d/web  RUNNING 18.234.123.71:80  FARGATE:1\n```", "```\n$ curl 18.234.123.71\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</html>\n```", "```\n$ ecs-cli logs --task-id 9b48084d --cluster cluster-1\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform \nconfiguration\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/\ndefault.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n/docker-entrypoint.sh: Configuration complete; ready for start up\n2023/07/03 11:24:57 [notice] 1#1: nginx/1.25.1\n2023/07/03 11:24:57 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14)\n2023/07/03 11:24:57 [notice] 1#1: OS: Linux 5.10.184-175.731.amzn2.x86_64\n2023/07/03 11:24:57 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 65535:65535\n2023/07/03 11:24:57 [notice] 1#1: start worker processes\n2023/07/03 11:24:57 [notice] 1#1: start worker process 29\n2023/07/03 11:24:57 [notice] 1#1: start worker process 30\n13.232.8.130 - - [03/Jul/2023:11:30:38 +0000] \"GET / HTTP/1.1\" 200 615 \"-\" \"curl/7.81.0\" \n\"-\"\n```", "```\n$ ecs-cli compose service down --cluster cluster-1\nINFO[0001] Deleted ECS service service=FARGATE\nINFO[0001] Service status desiredCount=0 runningCount=1 serviceName=FARGATE\nINFO[0006] Service status desiredCount=0 runningCount=0 serviceName=FARGATE\nINFO[0006] (service FARGATE) has stopped 1 running tasks: (task \n9b48084d11cf49be85141fd9bfe9e1c3).  timestamp=\"2023-07-03 11:34:10 +0000 UTC\"\nINFO[0006] ECS Service has reached a stable state desiredCount=0 runningCount=0 \nserviceName=FARGATE\n```", "```\n$ aws elbv2 create-load-balancer --name ecs-alb --subnets <SUBNET-1> <SUBNET-2> \\\n--security-groups <SECURITY_GROUP_ID> --region us-east-1\n```", "```\n$ aws elbv2 create-target-group --name target-group --protocol HTTP \\\n --port 80 --target-type ip --vpc-id <VPC_ID> --region us-east-1\n```", "```\n$ aws elbv2 create-listener  --load-balancer-arn <LOAD_BALANCER_ARN> \\\n --protocol HTTP --port 80 \\\n --default-actions Type=forward,TargetGroupArn=<TARGET_GROUP_ARN> \\\n --region us-east-1 \n```", "```\n$ cd ~/modern-devops/ch7/ECS/loadbalancing/\n```", "```\n$ ecs-cli compose service up --create-log-groups --cluster cluster-1 \\\n--launch-type FARGATE --target-group-arn <TARGET_GROUP_ARN> \\\n--container-name web --container-port 80\n```", "```\n$ ecs-cli compose service scale 3 --cluster cluster-1\n```", "```\n$ curl ecs-alb-1660189891.us-east-1.elb.amazonaws.com\n<html>\n<head>\n<title>Welcome to nginx!</title>\n…\n</html>\n```", "```\n$ gcloud services enable container.googleapis.com\n```", "```\n$ gcloud container clusters create cluster-1 --num-nodes 2 \\ \n--enable-autoscaling --min-nodes 1 --max-nodes 5 --zone us-central1-a\n```", "```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\n  modern-devops\n```", "```\n$ cd ~/modern-devops/ch7/knative/\n```", "```\n$ kubectl apply -f \\\n https://github.com/knative/serving/releases/download/knative-v1.10.2/serving-crds.yaml\n```", "```\n$ kubectl apply -f \\\n https://github.com/knative/serving/releases/download/knative-v1.10.2/serving-core.yaml\n```", "```\n$ curl -L https://istio.io/downloadIstio | sh -\n$ sudo mv istio-*/bin/istioctl /usr/local/bin\n$ istioctl install --set profile=demo -y\n```", "```\n$ kubectl -n istio-system get service istio-ingressgateway\nNAME                TYPE         EXTERNAL-IP   PORT(S)\nistio-ingressgteway LoadBalancer 35.226.198.46 15021,80,443\n```", "```\n$ kubectl apply -f \\\n  https://github.com/knative/net-istio/releases/download/knative-v1.10.1/net-istio.yaml\n```", "```\n$ kubectl apply -f \\\nhttps://github.com/knative/serving/releases/download/knative-v1.10.2\\\n/serving-default-domain.yaml\n```", "```\n$ kubectl apply -f \\\nhttps://github.com/knative/serving/releases/download/knative-v1.10.2/serving-hpa.yaml\n```", "```\n$ sudo curl -Lo /usr/local/bin/kn \\ \nhttps://github.com/knative/client/releases/download/knative-v1.10.0/kn-linux-amd64\n$ sudo chmod +x /usr/local/bin/kn\n```", "```\nimport os\nimport datetime\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef current_time():\n  ct = datetime.datetime.now()\n  return 'The current time is : {}!\\n'.format(ct)\nif __name__ == \"__main__\":\n  app.run(debug=True,host='0.0.0.0')\n```", "```\nFROM python:3.7-slim\nENV PYTHONUNBUFFERED True\nENV APP_HOME /app\nWORKDIR $APP_HOME\nCOPY . ./\nRUN pip install Flask gunicorn\nCMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 app:app\n```", "```\n$ docker build -t <your_dockerhub_user>/py-time .\n```", "```\n$ docker push <your_dockerhub_user>/py-time\n```", "```\n$ kn service create py-time --image <your_dockerhub_user>/py-time\nCreating service 'py-time' in namespace 'default':\n  9.412s Configuration \"py-time\" is waiting for a Revision to become ready.\n  9.652s Ingress has not yet been reconciled.\n  9.847s Ready to serve.\nService 'py-time' created to latest revision 'py-time-00001' is available at URL:\nhttp://py-time.default.35.226.198.46.sslip.io\n```", "```\n$ curl http://py-time.default.35.226.198.46.sslip.io\nThe current time is : 2023-07-03 13:30:20.804790!\n```", "```\n$ kubectl get pod -w\nNAME                            READY  STATUS        RESTARTS  AGE\npy-time-00001-deployment-jqrbk  2/2    Running       0         5s\npy-time-00001-deployment-jqrbk  2/2    Terminating   0         64s\n```", "```\n$ kn service delete py-time\n```", "```\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: py-time\nspec:\n  template:\n    spec:\n      containers:\n        - image: <your_dockerhub_user>/py-time\n```", "```\n$ kubectl apply -f py-time-deploy.yaml\nservice.serving.knative.dev/py-time created\n```", "```\n$ kubectl get ksvc py-time\nNAME      URL\npy-time   http://py-time.default.35.226.198.46.sslip.io\n```", "```\n$ curl http://py-time.default.35.226.198.46.sslip.io\nThe current time is : 2023-07-03 13:30:23.345223!\n```", "```\n$ hey -z 30s -c 500 http://py-time.default.35.226.198.46.sslip.io\n```", "```\n$ kubectl get pod\nNAME                           READY STATUS RESTARTS   AGE\npy-time-00001-deployment-52vjv 2/2   Running   0       44s\npy-time-00001-deployment-bhhvm 2/2   Running   0       44s\npy-time-00001-deployment-h6qr5 2/2   Running   0       42s\npy-time-00001-deployment-h92jp 2/2   Running   0       40s\npy-time-00001-deployment-p27gl 2/2   Running   0       88s\npy-time-00001-deployment-tdwrh 2/2   Running   0       38s\npy-time-00001-deployment-zsgcg 2/2   Running   0       42s\n```", "```\n$ kubectl get nodes\nNAME                                       STATUS   AGE\ngke-cluster-1-default-pool-353b3ed4-js71   Ready   3m17s\ngke-cluster-1-default-pool-353b3ed4-mx83   Ready   106m\ngke-cluster-1-default-pool-353b3ed4-vf7q   Ready   106m\n```"]