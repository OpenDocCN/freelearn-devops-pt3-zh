["```\n apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n # \"namespace\" omitted since ClusterRoles are not namespaced\n name: secret-reader\nrules:\n- apiGroups: [\"\"]\n #\n # at the HTTP level, the name of the resource for accessing Secret\n # objects is \"secrets\"\n resources: [\"secrets\"]\n verbs: [\"get\", \"watch\", \"list\"]\n```", "```\n spec:\n containers:\n - name: myCPUPrivilegedPod\n   image: docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1\n   resources:\n     limits:\n       memory: \"200Mi\"\n       cpu: \"2\"\n     requests:\n       memory: \"100Mi\"\n       cpu: \"2\"\n```", "```\n<st c=\"36942\">git clone https://github.com/PacktPublishing/Platform-Engineering-for-Architects.git</st>\n<st c=\"37026\">//asuming Linux</st>\n<st c=\"37042\">cd Platform-Engineering-for-Architects/Chapter06</st>\n<st c=\"37091\">kind</st> <st c=\"37096\">create cluster --config kind-config.yaml --name platform</st>\n```", "```\n kubectl config set current-context kind-platform\n```", "```\n $ kubectl label nodes platform-worker2 reserved=reserved\nnode/platform-worker2 labeled\n```", "```\n $ kubectl get nodes platform-worker2 --show-labels\nNAME               STATUS   ROLES    AGE     VERSION   LABELS\nplatform-worker2   Ready    <none>   3d23h   v1.29.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=platform<st c=\"37904\">-</st>worker2,kubernetes.io/os=linux,reserved=true\n```", "```\n apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-app-nginx\n  labels:\n    env: prod\nspec:\n  containers:\n    - resources:\n       limits:\n          memory: \"200Mi\"\n          cpu: \"2\"\n       requests:\n          memory: \"100Mi\"\n          cpu: \"2\"\n      name: my-app-nginx\n      image:  docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1\n      imagePullPolicy: IfNotPresent\n  nodeSelector:\n    reserved: reserved\n```", "```\n     apiVersion: scheduling.k8s.io/v1\n    kind: PriorityClass\n    metadata:\n      name: critical-priority\n    value: 1000000\n    preemptionPolicy: Never\n    globalDefault: false\n    description: \"This priority class should be used for platform Pods only.\"\n    ```", "```\n    <st c=\"40228\">$ kubectl apply -f priorityclass.yaml</st>\n    <st c=\"40266\">priorityclass.scheduling.k8s.io/critical-priority created</st>\n    ```", "```\n     apiVersion: v1\n    kind: Pod\n    metadata:\n      name: my-app-nginx\n      labels:\n        env: prod\n    spec:\n      containers:\n        - resources:\n           limits:\n              memory: \"200Mi\"\n              cpu: \"2\"\n           requests:\n              memory: \"100Mi\"\n              cpu: \"2\"\n          name: my-app-nginx\n          image:  docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1\n          imagePullPolicy: IfNotPresent\n      nodeSelector:\n        reserved: reserved\n      priorityClassName: critical-priority\n    ```", "```\n    <st c=\"40824\">$ kubectl create -f pod.yaml</st>\n    <st c=\"40852\">pod/my-app created</st>\n    ```", "```\n apiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: your-dev-quota\nspec:\n  hard:\n    requests.cpu: \"2\"\n    requests.memory: 1Gi\n    limits.cpu: \"4\"\n    limits.memory: 6Gi\n   persistentvolumeclaims: \"5\"\n   services.loadbalancers: \"1\"\n   services.nodeports: \"0\"\n```", "```\n kubectl apply -f your-dev-quota.yaml --namespace=your-dev-namespace\n```", "```\n name: StaticValidation\n# Controls when the workflow will run\non:\n  # Triggers the workflow on push or pull request events but only for the main branch\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n  workflow_dispatch:\njobs:\n  lint:\n    runs-on: ubuntu-latest\n      # Checks-out your repository\n      - uses: actions/checkout@v4\n      - name: Scan yamls\n        id: kube-lint-scan\n        uses: stackrox/kube-linter-action@v1\n        with:\n          directory: app-of-apps\n          #config: .kube-linter/config.yaml\n```", "```\n global:\n  scrape_interval:     15s\n  evaluation_interval: 15s\n  external_labels:\n      primary: 'platform-prometheus'\nscrape_configs:\n  - job_name: 'prometheus'\n    scrape_interval: 5s\n    static_configs:\n         - targets: ['api.example.com:3000']\n  - job_name: 'federation'\n    scrape_interval: 60s\n    honor_labels: true\n    metrics_path: '/federate'\n    params:\n      'match[]':\n        - '{job=\"github-exporter\"}'\n        - '{job=\"namespace-cpu-usage\"}'\n    static_configs:\n      - targets:\n          - \"prometheus.tenant-1-app:9090\"\n          - \"prometheus.tenant-2-app:9090\"\n```"]