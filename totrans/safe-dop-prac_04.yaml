- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Leveraging Lean Flow to Keep the Work Moving
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用精益流程保持工作的推进
- en: In [*Chapter 1*](B18756_01.xhtml#_idTextAnchor014), *Introducing SAFe® and DevOps*,
    we saw the inclusion of Lean thinking approaches such as Lean software development
    and Kanban into the Agile movement. Jez Humble saw it as important enough to include
    it in the CAMS model, creating the CALMS model from which we base the SAFe® CALMR
    model. Scaled Agile talks about that Lean-Agile mindset with an emphasis on both
    Lean thinking and an Agile mindset derived from the Agile Manifesto. How does
    this focus on Lean thinking manifest itself in DevOps and SAFe?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第1章*](B18756_01.xhtml#_idTextAnchor014)，*介绍 SAFe® 和 DevOps* 中，我们看到将精益思维方法（如精益软件开发和看板）纳入敏捷运动。Jez
    Humble 认为这非常重要，足以将其纳入 CAMS 模型，并从中创建了 CALMS 模型，基于此我们得到了 SAFe® CALMR 模型。Scaled Agile
    讨论了这种精益敏捷心态，强调精益思维和源自《敏捷宣言》的敏捷心态。精益思维如何在 DevOps 和 SAFe 中体现出来呢？
- en: 'In this chapter, we will see that keeping product development moving at a predictable
    pace requires the establishment of a Lean flow. Proper flow allows automation
    to succeed. To that end, we will look at the following practices to establish
    Lean flow:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到，保持产品开发以可预测的速度进行需要建立精益流程。适当的流程使自动化能够成功。为此，我们将探讨以下实践来建立精益流程：
- en: Making sure all work and work progress is visible
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保所有工作和工作进展都是可视化的
- en: Limiting our **Work in** **Progress/Process** (**WIP**)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制我们的 **进行中的工作/过程** (**WIP**)
- en: Keeping the size of each batch of work appropriately small
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持每个工作批次的适当小规模
- en: Monitoring our work queues
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控我们的工作队列
- en: Employing systems thinking to change the traditional definitions of project
    and teams
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运用系统思维改变传统的项目和团队定义
- en: Making the work visible
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使工作可视化
- en: Work could be defined as the effort the team or **Agile Release Train** (**ART**)
    (as a team of teams) may put forth to develop a product or solution. But not all
    that work may be focused on customer value.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 工作可以被定义为团队或 **敏捷发布列车** (**ART**)（作为团队的团队）可能为开发产品或解决方案所付出的努力。但并非所有这些工作都专注于客户价值。
- en: '*The Phoenix Project: A Novel about IT, DevOps, and Helping your Business Win*
    by Gene Kim, Kevin Behr, and George Spafford identifies four kinds of work. These
    are summarized as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Gene Kim、Kevin Behr 和 George Spafford 合著的《凤凰项目：关于 IT、DevOps 以及如何帮助你的业务成功》识别了四种工作类型，概括如下：
- en: '**Business projects**: Requests for new features that will bring value to the
    customer'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务项目**：旨在为客户带来价值的新特性请求'
- en: '**Internal projects**: Work that helps organizations continue to develop products
    efficiently'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部项目**：有助于组织持续高效开发产品的工作'
- en: '**Maintenance**: Work needed to maintain existing products'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**维护**：维护现有产品所需的工作'
- en: '**Unplanned work**: Bugs, defects, and emergencies that occur from time to
    time'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未计划工作**：偶尔发生的错误、缺陷和紧急情况'
- en: 'SAFe takes a few of these work categories and places them in **enablers**.
    The idea here is that enablers help create future business value. The four kinds
    of enablers defined by SAFe are listed here:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SAFe 将这些工作类别中的一些放入 **使能器**。这里的想法是使能器帮助创造未来的业务价值。SAFe 定义的四种使能器如下：
- en: '**Infrastructure**: This enabler exists to enhance how products can be developed
    and delivered. Examples include new automated tests to include in the **continuous
    delivery** (**CD**) pipeline.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施**：这个使能器旨在增强产品开发和交付的方式。示例包括需要纳入 **持续交付** (**CD**) 流水线的新自动化测试。'
- en: '**Architectural**: This enabler exists to enhance the architecture that business
    features and user stories rely on. SAFe defines the sequence of architectural
    enablers as an architectural runway that drives future business value. Examples
    include creating a new database server **virtual machine** (**VM**) for the staging
    and production environments.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构**：这个使能器旨在增强业务功能和用户故事所依赖的架构。SAFe 定义了架构使能器的顺序，作为推动未来业务价值的架构跑道。示例包括为预发布和生产环境创建新的数据库服务器
    **虚拟机** (**VM**)。'
- en: '**Compliance**: This enabler describes additional work that may be needed in
    certain regulated industries. Examples include **Verification and Validation**
    (**V&V**), approvals, and documentation.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：这个使能器描述了在某些受监管行业中可能需要的额外工作。示例包括 **验证和确认** (**V&V**)、审批和文档。'
- en: '**Exploration**: Sometimes, additional research is required to understand the
    optimal approach, learn about new technologies, or refine customer desires. Exploration
    enablers are created to identify the work that research requires. An example of
    this is a Spike, used by Agile teams to research new technologies or evaluate
    a development option, such as determining the correct technology for web streaming.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索**：有时，为了理解最佳方法、学习新技术或完善客户需求，需要额外的研究。探索启用器被创建来识别研究所需的工作。一个例子是敏捷团队用来研究新技术或评估开发选项的Spike，例如确定适合网络流媒体的技术。'
- en: Given the different categories of work that is done, it’s important to have
    a uniform way of displaying all the work of a team or ART. Traditionally, enterprising
    people, often with a technical background, have resorted to spreadsheets whose
    arrangement is flexible to allow for additional information such as work category
    or status. In addition, sharing spreadsheets among team members becomes difficult
    as there may be changes that need to be synchronized.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到不同的工作类别，展示团队或ART的所有工作有一个统一的方式是非常重要的。传统上，具有技术背景的企业家常常依赖电子表格，因为它们的排列灵活，可以允许添加诸如工作类别或状态等信息。此外，在团队成员之间共享电子表格变得困难，因为可能需要同步的更改。
- en: Dominica DeGrandis, in her book *Making Work Visible, Exposing Time Theft to
    Optimize Work & Flow*, notes that the majority of people are visual-spatial learners,
    in that they are able to understand and respond to information presented visually.
    This is one of the reasons for setting up a Kanban board.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 多米尼卡·德·格兰迪斯（Dominica DeGrandis）在她的书《让工作可视化：揭示时间盗窃以优化工作和流程》中指出，大多数人是视觉-空间学习者，也就是说他们能够理解并响应以视觉方式呈现的信息。这是设立看板的原因之一。
- en: A Kanban board is a space divided into columns. Each column represents a state
    in the workflow of an item of work. Items of work are represented by note cards
    and color-coded to represent the appropriate work category.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 看板是一个分为多个列的空间。每一列代表工作项在工作流中的一个状态。工作项通过便签卡表示，并用颜色编码来代表适当的工作类别。
- en: 'A simple Kanban board is illustrated in *Figure 4**.1*. Note the three columns,
    representing work to be done (**Backlog**), WIP (**Doing**), and work completed
    (**Done**):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4.1* 展示了一个简单的看板。请注意三个列，分别代表待办工作（**Backlog**）、进行中工作（**Doing**）和已完成工作（**Done**）：'
- en: '![Figure 4.1 – Simple Kanban board](img/B18756_04_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – 简单看板](img/B18756_04_01.jpg)'
- en: Figure 4.1 – Simple Kanban board
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 简单看板
- en: Additional features on a Kanban board can help teams manage the work they do.
    Let’s take a look at those other features on a Kanban board.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 看板上的额外功能可以帮助团队管理他们的工作。让我们来看看看板上的其他功能。
- en: Specifying workflow with additional columns
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过额外列指定工作流
- en: Often, having a single *in-progress* column doesn’t provide visibility into
    everything that a team or ART is doing, especially if there are bottlenecks in
    the overall process. It makes sense to break up the *in-progress* column to highlight
    major steps in the development so that bottlenecks are easy to identify.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，单一的*进行中*列无法提供团队或ART正在做的所有工作的可视化，尤其是当整体流程中存在瓶颈时。将*进行中*列拆分成多个步骤来突出开发过程中的主要环节，这样瓶颈就容易被识别。
- en: While having discrete process steps separated into separate WIP columns is generally
    done, it’s important to remember that teams shouldn’t be taking all issues and
    moving all of them from column to column as that devolves the process into Waterfall.
    The movement of the issues happens in a continuous fashion.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通常会将离散的过程步骤分隔到不同的进行中列中，但需要记住，团队不应将所有问题都从一列移动到另一列，否则就会让流程退化为瀑布模型。问题的移动应该是持续进行的。
- en: '*Figure 4**.2* shows an illustration of separating our **Doing** column with
    stages for analysis, implementation, and review:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4.2* 展示了将我们的**进行中**列划分为分析、实施和审查阶段的示意图：'
- en: '![Figure 4.2 – Expansion of the Doing column into several stages](img/B18756_04_02.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – 将进行中列扩展为多个阶段](img/B18756_04_02.jpg)'
- en: Figure 4.2 – Expansion of the Doing column into several stages
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – 将进行中列扩展为多个阶段
- en: Flagging impediments and urgent issues
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标记阻碍因素和紧急问题
- en: Sometimes a work issue may be blocked due to some external event or dependency.
    As these impediments or blockers come up, an icon can be attached to the work
    issue as an indicator to the teams to continue to pay attention to the issue until
    the blocker is removed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，工作问题可能因为某些外部事件或依赖关系被阻塞。当这些阻碍或阻塞发生时，可以在工作问题上附加一个图标，作为提醒，告诉团队在解决阻塞之前需要继续关注该问题。
- en: 'In the same way, any urgent issue may need the attention of the entire team.
    The team may need to swarm on the urgent issue until it is resolved. Urgent issues
    may be identified by a special indicator put on the issue or by its position in
    an *expedite* swimlane that cuts horizontally across all columns of the Kanban
    board. In the following screenshot, an example of an urgent issue highlighted
    by a special indicator in the expedite lane is illustrated:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，任何紧急问题可能需要整个团队的注意。团队可能需要集中力量解决紧急问题，直到其得到解决。紧急问题可以通过特殊指示器标记，或通过它在*加速*泳道中的位置来识别，该泳道横跨看板的所有列。在下面的截图中，展示了一个在加速通道中通过特殊指示器标记的紧急问题：
- en: '![Figure 4.3 – Work issue with an urgent indicator in the expedite lane](img/B18756_04_03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – 在加速通道中具有紧急指示器的工作问题](img/B18756_04_03.jpg)'
- en: Figure 4.3 – Work issue with an urgent indicator in the expedite lane
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – 在加速通道中具有紧急指示器的工作问题
- en: Policies for specifying exit criteria
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定退出标准的政策
- en: For every stage in the process, the team needs to have a clear agreement on
    the exit criteria. Having clear exit criteria avoids confusion as to whether an
    issue is truly finished at that stage. This agreement for each column is known
    as a policy.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在流程的每个阶段，团队需要对退出标准达成明确一致的协议。明确的退出标准可以避免混淆，确保在该阶段问题是否真正完成。这种每个列的协议被称为政策。
- en: Column policies have their place in a team charter or working agreement so that
    these are explicit and agreed upon. Examples of this include a **Definition of
    Ready** (**DoR**), where any questions are answered, and requirements are detailed
    enough that development can begin. Another example is a **Definition of Done**
    (**DoD**), which is an agreement by the team of the criteria that determine when
    a story is complete and development work on that story can stop. These policies
    avoid any confusion about whether a piece of work is truly complete as opposed
    to *done done*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 列政策应当在团队章程或工作协议中明确列出，以确保这些政策是明确的并且已经达成一致。例如，**就绪定义**（**DoR**）是指所有问题都已解答，且需求足够详细，开发可以开始。另一个例子是**完成定义**（**DoD**），即团队达成的协议，明确何时一个故事算完成，开发工作可以停止。这些政策避免了工作是否真正完成与*完成完成*之间的混淆。
- en: Other additions to the Kanban board will be identified as we look at other practices
    to ensure that Lean flow occurs. In the following section, we will examine the
    problem of having too much WIP and how a Kanban board can help by providing visibility
    and enforcing constraints on team behavior.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的部分中讨论更多看板的补充内容，确保精益流动的发生。在接下来的部分中，我们将探讨 WIP 过多的问题以及看板如何通过提供可视化和执行团队行为的约束来帮助解决这一问题。
- en: Limiting WIP
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制在制品（WIP）
- en: 'WIP is the work a team or ART has in process. It has been started but is not
    complete. If we were to view WIP on our Kanban board, it would resemble the following
    screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: WIP 是指团队或 ART 正在进行中的工作。它已经开始，但尚未完成。如果我们在看板上查看 WIP，它看起来像下面的截图：
- en: '![Figure 4.4 – Kanban board highlighting WIP](img/B18756_04_04.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 强调 WIP 的看板](img/B18756_04_04.jpg)'
- en: Figure 4.4 – Kanban board highlighting WIP
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 强调 WIP 的看板
- en: 'It is important to make sure that the work within these columns is monitored
    so that it doesn’t overwhelm the teams or ART. According to Dominica DeGrandis,
    the effects of too much WIP may include the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是确保这些列中的工作得到监控，以防止其压垮团队或 ART。根据 Dominica DeGrandis 的说法，过多的 WIP 可能带来以下影响：
- en: Too much multitasking, which will cause teams to spend too much time doing context
    switching and prevent them from finishing work
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 太多的多任务处理，会导致团队花费过多时间进行上下文切换，无法完成工作
- en: New work items are started before existing work is finished
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在现有工作完成之前，新的工作项就开始了
- en: Work takes a long time to finish (long lead times/cycle times)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作完成时间过长（长交付周期/周期时间）
- en: 'A key way of ensuring that a team is not letting WIP go unchecked is by setting
    up WIP limits or constraints on each column between the **Backlog** column (where
    work has not been accepted yet) and the **Done** column (where completed work
    goes). An example of WIP limits on a Kanban board is shown in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 确保团队不让 WIP 失控的一个关键方法是，在每个列之间设置 WIP 限制或约束，从**待办事项**列（工作尚未接受）到**完成**列（已完成的工作）。以下截图展示了一个
    Kanban 看板上 WIP 限制的示例：
- en: '![Figure 4.5 – WIP limits on columns](img/B18756_04_05.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 列上的 WIP 限制](img/B18756_04_05.jpg)'
- en: Figure 4.5 – WIP limits on columns
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 列上的 WIP 限制
- en: To understand how WIP limits can help a team achieve Lean flow, consider the
    following comparison of team behavior.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解 WIP 限制如何帮助团队实现精益流动，考虑以下团队行为的比较。
- en: 'First, imagine a Kanban board with no WIP limits. A developer on the team has
    just finished the development of a user story. It meets the policy criteria for
    the column and could be pulled to the next column. If the developer moves that
    story to the next column and pulls a story to work, has that developer done anything
    to lower the amount of work that’s in progress? This may be acceptable if there
    is flow already established, but if there is a bottleneck in the team’s process,
    this action may exacerbate the bottleneck and prevent the entire team from actually
    delivering. This situation is captured on our Kanban board in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，想象一下没有 WIP 限制的 Kanban 看板。团队中的一名开发人员刚刚完成了一个用户故事的开发。它符合该列的政策标准，可以被拉到下一个列。如果开发人员将该故事移到下一个列，并拉取一个新的故事来工作，那么这个开发人员做了什么来减少正在进行的工作量吗？如果已经有流动存在，这可能是可以接受的，但如果团队的过程中存在瓶颈，这个行为可能会加剧瓶颈，阻碍整个团队的交付。这种情况在我们的
    Kanban 看板上可以看到，截图如下：
- en: '![Figure 4.6 – Scenario with no WIP limits, resulting in no reduction in WIP](img/B18756_04_06.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 没有 WIP 限制的场景，导致 WIP 没有减少](img/B18756_04_06.jpg)'
- en: Figure 4.6 – Scenario with no WIP limits, resulting in no reduction in WIP
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 没有 WIP 限制的场景，导致 WIP 没有减少
- en: 'Now, let’s imagine the same Kanban board with WIP limits in place. That developer
    who has finished the user story cannot move anything into the **Implement/Test**
    column. Also, no one can move anything from **Implement/Test** into **Review**.
    To help get the bottlenecks fixed, the developer acts to assist other team members
    to move a story from **Review** to **Done**. This has the effect of introducing
    throughput and establishing flow. We can view this scenario in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们想象在 Kanban 看板上设置了 WIP 限制。那个已经完成用户故事的开发人员无法将任何内容移入**实施/测试**列。此外，任何人都不能将任何内容从**实施/测试**列移入**审查**列。为了帮助解决瓶颈问题，开发人员采取行动，协助其他团队成员将一个故事从**审查**列移至**完成**列。这一做法引入了吞吐量并建立了流动。我们可以在以下截图中看到这一场景：
- en: '![Figure 4.7 – Scenario with WIP limits, resulting in flow](img/B18756_04_07.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 具有 WIP 限制的场景，导致流动](img/B18756_04_07.jpg)'
- en: Figure 4.7 – Scenario with WIP limits, resulting in flow
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 具有 WIP 限制的场景，导致流动
- en: Teams can select initial WIP limits as they start work. After a period of time,
    if bottlenecks are still seen, they can lower the WIP limits until the bottlenecks
    disappear, and flow at that point is achieved. Even with that bottleneck gone,
    other bottlenecks will appear. The Theory of Constraints, as written by Eliyahu
    M. Goldratt in his book *The Goal*, specifies that you move to the subsequent
    bottlenecks, removing them one by one, to optimize the flow for the entire process.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 团队可以在开始工作时选择初始的 WIP 限制。经过一段时间后，如果仍然看到瓶颈，他们可以降低 WIP 限制，直到瓶颈消失，这时流动得以实现。即使瓶颈消失，其他瓶颈仍会出现。由
    Eliyahu M. Goldratt 在他的书《目标》中提出的约束理论指出，应该逐步解决随后的瓶颈，一次移除一个瓶颈，以优化整个过程的流动。
- en: 'WIP limits are a necessary mechanism according to David J. Anderson in his
    book *Kanban: Successful Evolutionary Change for Your Technology Business*. WIP
    limits create tension for a team, encouraging the team to act in order to work
    and enable flow, as seen in our previous scenario. The tension also may highlight
    constraints and systemic impediments in the organization. Open discussion of these
    constraints and impediments to finding solutions leads to continuous improvement.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '根据 David J. Anderson 在他的书《Kanban: Successful Evolutionary Change for Your Technology
    Business》中的描述，WIP 限制是必要的机制。WIP 限制为团队创造了紧张感，鼓励团队采取行动以推进工作并促使流动，就像我们之前的场景中所看到的那样。这种紧张感还可能凸显出组织中的约束和系统性障碍。公开讨论这些约束和障碍，寻找解决方案，从而推动持续改进。'
- en: We’ve seen how limiting WIP by imposing column constraints or WIP limits may
    help us address bottlenecks in our development process. One other source of bottlenecks
    in our process is the size of our items of work. Let’s take a look at keeping
    those at an appropriate size to attain and maintain flow.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，通过施加列约束或工作项限制来限制WIP（在制品）可能帮助我们解决开发过程中的瓶颈。我们过程中的另一个瓶颈来源是工作项的大小。让我们看看如何保持工作项的适当大小，以实现和维持流动。
- en: Keeping batch sizes small
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持小批量
- en: 'Batch size commonly refers to the size of a standard unit of work. One of the
    accomplishments of the Agile movement was the success of focusing delivery on
    smaller increments. That forced a look at reducing the batch size that could be
    accomplished for delivery. Reducing batch sizes in addition to limiting WIP are
    important parts of accomplishing Lean flow. Donald Reinertsen noted the effects
    of batch size in his book *The Principles of Product Development Flow: Second
    Generation Lean Product Development*. Let’s examine what role small batch sizes
    play.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 批量大小通常指的是标准工作单元的大小。敏捷运动的一个成就就是成功地将交付集中在较小的增量上。这迫使我们重新审视可以交付的批量大小。减少批量大小以及限制WIP是实现精益流动的重要组成部分。唐纳德·莱因特森在他的书《产品开发流原则：第二代精益产品开发》中指出了批量大小的影响。让我们来探讨一下小批量在其中的作用。
- en: Small batch sizes decrease cycle time
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小批量减少周期时间
- en: A key takeaway from Agile development was the delivery of value in short cycles.
    This had the effect of shortening the cycle time a team had to deliver an increment
    of value, allowing the team to look at delivering only what it could deliver by
    the end of the cycle. This allows us to say that batch size is directly related
    to the cycle time.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷开发的一个关键收获是以短周期交付价值。这一做法缩短了团队交付增量价值的周期时间，使得团队可以在周期结束前仅交付他们能够完成的工作。这使得我们可以说批量大小与周期时间直接相关。
- en: Keeping to large batches of work has several adverse effects. The work may not
    be delivered by the end of the cycle. What may be delivered may have defects that
    need to be fixed or reworked, increasing cycle time. The appearance of these defects
    also increases batch sizes, creating a *snowball effect*. The growth of the batch
    size and cycle time leads to cost overruns and schedule slippages.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 保持大批量工作会产生几个不利影响。工作可能无法在周期结束时交付。交付的工作可能存在缺陷，需要修复或返工，从而增加周期时间。这些缺陷的出现也增加了批量大小，形成了*滚雪球效应*。批量大小和周期时间的增长会导致成本超支和进度延误。
- en: Small batch sizes decrease risk
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小批量减少风险
- en: As we saw in the previous subsection, a large batch of work may carry with it
    defects that need to be fixed, impacting both the overall batch size and cycle
    time. Working in small batches will not eliminate the possibility of defects but
    will keep the number of possible defects small so that they can be managed easily.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一个小节中看到的，大批量工作可能带有需要修复的缺陷，这会影响整体批量大小和周期时间。尽管在小批量中工作无法消除缺陷的可能性，但它将保持可能缺陷的数量较小，从而便于管理。
- en: A side effect of small batch sizes is that they result in short cycle times.
    This short cycle time provides opportunities for customer feedback. The opportunity
    for feedback negates any risk that the team is moving in the wrong direction in
    terms of delivering value.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 小批量的一个副作用是它们导致较短的周期时间。较短的周期时间为客户反馈提供了机会。反馈的机会消除了团队在交付价值时可能走错方向的任何风险。
- en: Small batch sizes limit WIP
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小批量限制WIP
- en: Batch sizes and WIP are directly related to each other. Directly changing one
    changes the other in a correlated fashion. Let’s look at a few examples of this
    correlation at work.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 批量大小和WIP是直接相关的。直接改变其中之一会以相关的方式改变另一个。让我们看几个这个相关性在实际中的例子。
- en: A large batch size will mean there is a large number of items of WIP. As mentioned
    before, large numbers of WIP increase multitasking, preventing work from finishing
    because of increased context switching. This effect is another factor that increases
    cycle time.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 大批量意味着有大量的WIP项。如前所述，大量的WIP会增加多任务处理，因上下文切换增加而阻碍工作的完成。这种效应是另一个增加周期时间的因素。
- en: The large batch size also creates a bottleneck in the system. This variability
    in flow impedes work from effectively moving, increasing cycle time.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 大批量也会在系统中创建瓶颈。这种流动的不稳定性妨碍了工作有效推进，从而增加了周期时间。
- en: 'Reinertsen also advocates in his book *The Principles of Product Development
    Flow: Second Generation Lean Product Development* that when optimizing between
    batch sizes and limiting WIP by attacking bottlenecks, start with reducing batch
    sizes first. This is often an easier step to implement. Reducing bottlenecks to
    allow for adequate flow may involve deeper changes in both process and technology.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Reinertsen 在他的书《产品开发流程的原则：第二代精益产品开发》中也提到，当在批量大小与通过解决瓶颈来限制在制品（WIP）之间进行优化时，应首先从减少批量大小开始。这通常是一个更容易实施的步骤。减少瓶颈以允许适当的流动可能涉及到更深层次的流程和技术变革。
- en: Small batch sizes improve performance
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小批量大小提高了性能
- en: As counter-intuitive as it may seem, large batch sizes do not create efficiencies
    with overhead. Time processing overhead activities are actually greater with large
    batches as opposed to smaller batches. The overhead compounds on large batches.
    Overhead costs on small batches can be reduced easily because of the shorter cycle
    times.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管看起来违背直觉，但大批量并不会在管理费用上创造效率。与小批量相比，大批量的时间处理管理活动实际上更大。大批量的管理费用会积累。而小批量的管理费用可以由于较短的周期时间而轻松减少。
- en: Small batch sizes improve efficiency. This may seem to also be counter-intuitive,
    but because small batch sizes receive fast feedback, subsequent batches of work
    are able to take advantage of that feedback, reducing rework. A large batch of
    work exposes all those problems at once, creating more work and removing any implied
    efficiency.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 小批量大小提高了效率。这看起来可能有些违反直觉，但由于小批量可以迅速获得反馈，随后的工作批次能够利用这些反馈，从而减少返工。而大批量的工作一次性暴露所有问题，导致更多的工作量，并且失去了隐含的效率。
- en: We’ve seen the advantages of working with small batch sizes and what happens
    when you work with a large batch size. The question then becomes, “How do I make
    sure I’m not working with a large batch size?” Let’s take a look at finding out
    what your optimal batch size is.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到使用小批量的优势以及使用大批量时发生的情况。那么接下来的问题是，“我如何确保自己不在使用大批量？”让我们来看看如何找到最优的批量大小。
- en: Finding the ideal batch size
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 寻找理想的批量大小
- en: We have identified the benefits of working with small batch sizes. The question
    then becomes, “What would be an adequate enough batch size?”
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经识别出使用小批量大小的好处。那么接下来的问题是，“什么样的批量大小足够合适？”
- en: 'Reinertsen proposes looking at batch size in terms of economics. When approaching
    the cost of development and determining what size of work is ideal, you need to
    consider two costs:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Reinertsen 提出了从经济学的角度来看待批量大小。当评估开发成本并确定理想的工作大小时，你需要考虑两个成本：
- en: '**Holding cost**: The cost of keeping (and not releasing) what you develop'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持有成本**：保持（而非发布）已开发内容的成本'
- en: '**Transaction cost**: The cost to develop your work'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事务成本**：开发工作的成本'
- en: 'An example of this comes from releasing work to a production environment. The
    following diagram shows the relationship between the transaction and holding cost
    curves if we were to look at the cost of releasing a change versus the cost of
    waiting to collect changes at an optimal time:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这方面的一个例子来自于将工作发布到生产环境中的过程。下图展示了如果我们考虑发布更改的成本与在最佳时机收集更改的成本时，事务成本和持有成本曲线之间的关系：
- en: '![Figure 4.8 – Transaction and holding cost curves](img/B18756_04_08.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – 事务成本与持有成本曲线](img/B18756_04_08.jpg)'
- en: Figure 4.8 – Transaction and holding cost curves
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 事务成本与持有成本曲线
- en: In our preceding diagram, an example of a small change—such as a single line
    of software code to release—is represented by point **A**. At point **A**, we
    incur a very low holding cost to immediately release, but the high cost at point
    **A** comes from the transaction cost. We are spending a lot of time performing
    testing and deployment for a simple line of code.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的图示中，一个小变更的例子——例如发布一行软件代码——被表示为**A**点。在**A**点，我们可以承担非常低的持有成本来立即发布，但在**A**点的高成本来自于事务成本。我们花费了大量时间在一行简单的代码上进行测试和部署。
- en: Does this mean we should always look to consolidate changes to incur less cost?
    Let’s look at point **B** in our preceding diagram, which collects our changes
    over a larger time period—say, a month. Now, the costs are reversed. The transaction
    cost is low as we are performing testing and releasing a large number of changes,
    but now our holding cost is high. Perhaps in delaying the release of our change,
    we missed an important market window and lost sales because our competitors released
    an equivalent change first.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是否意味着我们应该始终考虑合并更改以减少成本？让我们看一下前面图示中的**B**点，这个点收集了我们在更长时间周期内的更改——例如，一个月。现在，成本发生了变化。由于我们在执行测试并发布大量更改时，交易成本较低，但现在我们的持有成本很高。也许在延迟发布更改时，我们错过了一个重要的市场窗口，因而失去了销售机会，因为我们的竞争对手先发布了类似的更改。
- en: If we wanted to figure out the *break-even* point of when to actually release
    a collection of changes, we would perform a *u-curve optimization*. We would take
    the sum of the holding cost and the transaction cost and plot it on the same graph
    as shown in the preceding diagram. On the graph of the total cost curve (sum of
    holding cost and transaction cost), find the lowest point on the curve. That’s
    the ideal number of items to have in your batch.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想找出实际发布一组更改的*盈亏平衡*点，我们将进行*U型曲线优化*。我们会将持有成本和交易成本的总和绘制在同一图表上，如前面的图示所示。在总成本曲线（持有成本和交易成本之和）的图表上，找到曲线的最低点。这就是批量中理想的项目数量。
- en: 'How can we improve on this ideal number of items per batch? If we introduce
    new ways of doing things or new technology, that can affect the transaction cost,
    giving us a new total cost curve with which to perform a u-curve optimization.
    Extending our example of releasing changes into production, the use of automated
    testing and deployment tools that enable faster, more reliable deployments with
    more frequent testing in a CD pipeline reduces transaction costs, giving us the
    confidence to release stories more frequently within a sprint. The new cost curves
    would probably resemble the following diagram:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何改进这个理想的批量数量？如果我们引入新的工作方式或新技术，这可能会影响交易成本，给我们带来新的总成本曲线，并进行U型曲线优化。以发布更改到生产环境为例，使用自动化测试和部署工具可以实现更快、更可靠的部署，并在CD流水线中进行更频繁的测试，从而降低交易成本，并增强我们在一个迭代内更频繁发布故事的信心。新的成本曲线可能会类似于以下图示：
- en: '![Figure 4.9 – New cost curves after optimization](img/B18756_04_09.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 优化后的新成本曲线](img/B18756_04_09.jpg)'
- en: Figure 4.9 – New cost curves after optimization
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 优化后的新成本曲线
- en: We can see from the preceding diagram at point **A**, the holding cost remains
    the same but the transaction cost has decreased. Also, we can see that the low
    point of the total cost curve has shifted to the left, moving our ideal point
    “left," to smaller batch sizes.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从前面的图示中看到，在**A**点，持有成本保持不变，但交易成本已降低。同时，我们可以看到，总成本曲线的最低点已向左移动，理想点也向“小”批量规模移动。
- en: So, what can our teams and ARTs do that will yield lower transaction cost curves?
    Adopting practices and technology such as automated testing and automated deployment
    is one example that certainly fits the bill. They allow for smaller batch sizes
    to go through and encourage flow.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们的团队和ARTs能做些什么，以便实现更低的交易成本曲线呢？采用自动化测试和自动化部署等实践和技术就是一个符合条件的例子。这些技术允许更小的批量通过，并鼓励流动。
- en: In this section and the previous section, we looked at WIP and batch size as
    factors for achieving Lean flow. In the next section, we will see how those factors
    work with other factors to determine whether your system has Lean flow.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节和上一节中，我们探讨了WIP和批量大小作为实现精益流动的因素。在下一节中，我们将看到这些因素如何与其他因素共同作用，决定你的系统是否具备精益流动。
- en: Monitoring queues
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控队列
- en: 'To enable Lean flow, you need to closely examine queueing theory, the mathematical
    field behind the behavior of queues and waiting in line (think Starbucks or the
    checkout area of your local supermarket!). A number of mathematical formulas will
    be useful in helping us make sure we understand what we have to do to ensure Lean
    flow. These are:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现精益流动，你需要仔细研究排队理论，这是一门数学领域，研究排队和排队等待的行为（想象一下星巴克或你当地超市的结账区域！）。一些数学公式将有助于我们确保理解如何确保精益流动。它们包括：
- en: Little’s Law
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利特尔定律
- en: Kingman’s Formula
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 金曼公式
- en: Let’s see how we can use these elements of queueing theory to enable Lean flow.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何利用这些排队理论的元素来实现精益流动。
- en: Where are our queues?
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的队列在哪里？
- en: A key difference between product development queues and product manufacturing
    queues is that the artifacts of product development (particularly software development)
    are not physical and it is difficult to grasp the progress until completion, whereas
    in manufacturing, you can visually ascertain the completeness of a product while
    on the factory floor. This *invisibility factor* makes it easy to ignore these
    queues, often at your own peril.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 产品开发队列与产品制造队列之间的一个主要区别在于，产品开发（尤其是软件开发）的工件是非物理的，直到完成时很难察觉进度，而在制造过程中，你可以在车间里直观地判断产品的完成度。这种*不可见性因素*使得人们容易忽视这些队列，往往会自食其果。
- en: 'Long queues unrestrained by WIP limits or small batch sizes create an array
    of problems, as summarized by Reinertsen. These problems include the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 长队列如果不受 WIP 限制或小批次大小的约束，会产生一系列问题，如 Reinertsen 所总结的。这些问题包括：
- en: Longer cycle times
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更长的周期时间
- en: More risk
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更大的风险
- en: More overhead
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多的开销
- en: More variability
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多的变动
- en: Lower quality
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更低的质量
- en: Lower motivation
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更低的积极性
- en: We’ve talked about problems with overhead, risk, and quality when talking about
    large batch sizes. If we consider the size of our work as the queue for our system,
    then the mathematical formulas that we will examine later are applicable and can
    model the state of our Lean flow.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在讨论大批量问题时，曾提到过与开销、风险和质量相关的问题。如果我们把工作的大小视为系统的队列，那么我们接下来将讨论的数学公式是适用的，并能够模拟我们精益流程的状态。
- en: How can long queues lower workplace motivation? Imagine a scenario where you
    were preparing work and the next part of the process was ready whenever you finished
    it. There would be a sense of urgency to finish your part of the work. That sense
    of urgency would not be there if, after you delivered your work, it sat behind
    a queue of other items and wouldn’t be seen for weeks.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 长队列如何降低工作场所的积极性？假设你正在准备工作，且下一步的流程每当你完成当前任务后就会立即准备好。这样你会有一种紧迫感，想要尽快完成自己的任务。但如果你交付完工作后，它排在其他任务后面，需要等待几周才能被处理，这种紧迫感就不存在了。
- en: Now that we’ve established our batch sizes and WIP as queues, it’s time to see
    how mathematical formulas illustrate the relationship between our queues and cycle
    time and variability.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了批次大小和 WIP 作为队列，是时候看看数学公式如何展示队列、周期时间和变动之间的关系。
- en: Little’s Law and cycle time
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小法则与周期时间
- en: We have seen how both WIP and batch size correlate to cycle time, or the time
    it takes to deliver work once we’ve accepted it. Mathematically, cycle time, WIP,
    and batch size are tied using Little’s Law.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到 WIP 和批次大小如何与周期时间相关，周期时间是指我们接受工作后交付完成的时间。数学上，周期时间、WIP 和批次大小通过小法则相互关联。
- en: 'Little’s Law is an expression tying cycle time, WIP or batch size, and throughput.
    This expression for Little’s Law is presented here:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 小法则是一个将周期时间、WIP 或批次大小与吞吐量联系起来的表达式。小法则的公式如下：
- en: '![](img/Formula_04_001.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_04_001.png)'
- en: '*L* stands for the length of the queue. This can be thought of as either WIP
    or batch size. *L* is the throughput of work processed by the teams or ART. *W*
    gives you the cycle time or the wait time for a customer.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '*L* 代表队列的长度。这可以理解为在制品（WIP）或批次大小。*L* 是团队或 ART 处理的工作吞吐量。*W* 给出了周期时间或客户的等待时间。'
- en: 'At this point, it’s simple mathematics if we’re concerned about finding out
    our cycle time. Written in the following manner, you can see that cycle time (*W*)
    is directly related to the size of our queue (*L*):'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，如果我们关心的是如何计算周期时间，那就是简单的数学问题。以以下方式书写，你可以看到周期时间（*W*）与队列大小（*L*）是直接相关的：
- en: '![](img/Formula_04_002.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_04_002.png)'
- en: 'A simple illustration of this is a backlog for a Scrum team. If their backlog
    has 9 user stories, each estimated at 5 story points, and their velocity (the
    measure of how many story points’ worth of work they have been able to deliver
    per sprint) is 15 story points per sprint, we can take Little’s Law to predict
    how many sprints it will take to complete that set of stories in the backlog,
    as illustrated in the following diagram:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的例子，假设 Scrum 团队的积压工作。如果他们的积压工作中有 9 个用户故事，每个故事估计为 5 个故事点，而他们的速度（衡量每个迭代周期交付的故事点数量）是每个迭代
    15 个故事点，我们可以用小法则来预测完成这些积压故事所需的迭代次数，具体如下图所示：
- en: '![Figure 4.10 – Illustration of Little’s Law](img/B18756_04_10.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 小法则的示意图](img/B18756_04_10.jpg)'
- en: Figure 4.10 – Illustration of Little’s Law
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 小法则的示意图
- en: Kingman’s Formula
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 金曼公式
- en: 'Kingman’s Formula is a mathematical model to describe how wait time equates
    to cycle time, variability, and utilization. The formula is illustrated here:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 金曼公式是一个数学模型，用于描述等待时间如何与周期时间、可变性和利用率相关联。公式如下所示：
- en: '![](img/Formula_04_003_-Part_1.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_04_003_-Part_1.png)'
- en: Each term in the formula represents an individual quantity. The first term ![](img/Formula_04_003_-Part_11.png)
    represents the utilization of the people doing the work. The second term (![](img/Formula_04_003_-Part_2.png))
    represents the variability of the system. The third term (*t*) represents the
    service time or the cycle time.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 公式中的每一项代表一个独立的量。第一项 ![](img/Formula_04_003_-Part_11.png) 代表执行工作的人员的利用率。第二项 (![](img/Formula_04_003_-Part_2.png))
    代表系统的可变性。第三项 (*t*) 代表服务时间或周期时间。
- en: 'We want to examine the relationship between wait time, utilization, variability,
    and cycle time. If we substitute a letter for each term, we get the following
    (simpler) equation, commonly referred to as the *VUT equation*:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望研究等待时间、利用率、可变性和周期时间之间的关系。如果我们为每个术语代入一个字母，我们将得到以下（更简单的）公式，通常称为*VUT公式*：
- en: '![](img/Formula_04_004.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_04_004.png)'
- en: So, this equation shows us that the total wait time for a customer is directly
    proportional to the utilization, variability, and cycle time.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这个公式向我们展示了客户的总等待时间与利用率、可变性和周期时间是直接成正比的。
- en: We have previously looked at how queue size, batch sizes, and limiting WIP have
    an effect on cycle time. Let’s take a look at the other variables of Kingman’s
    Formula to see how utilization and variability can affect the wait time.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前讨论过队列大小、批量大小和限制在制品（WIP）如何影响周期时间。现在让我们看看金曼公式的其他变量，了解利用率和可变性如何影响等待时间。
- en: Utilization and its effects
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 利用率及其影响
- en: 'Let’s start with utilization. When we refer to utilization, we look at the
    percentage of the overall capacity of the system. A high utilization may be desired
    by management—after all, we don’t want our workers to goof off. But after looking
    at Kingman’s Formula, we see that wait time increases as utilization increases.
    We can see this effect by plotting out utilization in comparison to the queue
    size. The resulting curve is a nonlinear graph that starts to ascend around 60%
    utilization and approaches infinity at 100% utilization. This is seen in the following
    diagram:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从利用率开始。当我们提到利用率时，我们是指系统整体容量的百分比。管理层可能希望达到较高的利用率——毕竟，我们不希望工人浪费时间。但是通过金曼公式，我们看到随着利用率的增加，等待时间也会增加。我们可以通过绘制利用率与队列大小的关系图来看到这一效果。结果曲线是一条非线性图形，利用率在60%左右时开始上升，在100%时趋近于无穷大。以下是该图示：
- en: '![Figure 4.11 – Utilization compared to queue size](img/B18756_04_11.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – 利用率与队列大小的比较](img/B18756_04_11.jpg)'
- en: Figure 4.11 – Utilization compared to queue size
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – 利用率与队列大小的比较
- en: Another way of looking at this percentage utilization is seeing it as a load/capacity.
    If load looks at the rate at which new work comes in, capacity looks at the rate
    at which work leaves and is delivered to the customer. This ensures adequate utilization
    so that we do not take in more work than we can process.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种观察这一百分比利用率的方式是将其视为负载/容量。如果负载关注的是新工作进入的速率，那么容量则关注的是工作流出并交付给客户的速率。这确保了适当的利用率，以避免我们接收超过处理能力的工作。
- en: 'The idea that for Lean flow to occur, scheduling slack or idle time must be
    introduced to keep utilization at a reasonable level (for example, not at 100%)
    has its roots in the Toyota Production System. *Muri* or overburdening was seen
    as one of the three *wastes* to eliminate in Lean. We will look at another waste:
    *Mura*, or unevenness. We also call this variability.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现精益流动，必须引入调度松弛或空闲时间，以保持利用率在合理水平（例如，不能达到100%）。这一思想源于丰田生产系统。*Muri* 或过度负担被视为精益中需要消除的三大*浪费*之一。接下来我们将讨论另一种浪费：*Mura*，即不均衡。我们也将其称为可变性。
- en: Variability, its effects, and actions
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可变性、其影响与行动
- en: Let’s explain what variability is. So far, we’ve been making the assumption
    that, as with manufacturing products on a factory floor, all work involves the
    same effort. But this is often not the case. Each piece of work may involve different
    levels of effort or even different efforts. Some work may have unknowns that require
    a more detailed investigation. Some work may have defects. Variability is the
    quality that describes the *individuality* of each piece of work.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解释一下什么是变异性。到目前为止，我们一直假设，像在工厂车间制造产品一样，所有工作都涉及相同的努力。但事实上，情况往往并非如此。每一项工作可能涉及不同程度的努力，甚至是不同的努力。有些工作可能包含未知因素，需要更详细的调查。有些工作可能存在缺陷。变异性是描述每一项工作的*个性*的特性。
- en: 'From Kingman’s Formula, we see that the effects of variability have a compounding
    effect on wait time. The curve in the following diagram shows the effects of high
    variability versus low variability when looking at utilization:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 根据金曼公式（Kingman’s Formula），我们可以看到变异性的影响会对等待时间产生复合效应。下图中曲线显示了高变异性与低变异性对利用率的影响：
- en: '![Figure 4.12 – Effects of variability on utilization and queue size](img/B18756_04_12.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图4.12 – 变异性对利用率和队列大小的影响](img/B18756_04_12.jpg)'
- en: Figure 4.12 – Effects of variability on utilization and queue size
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.12 – 变异性对利用率和队列大小的影响
- en: We can see from the preceding diagram that this effect is linear, but the combination
    produces an undesired result. With high variability, working at somewhat lower
    utilization will not stem the growth of your queue. You’d have to work at much
    lower utilization to keep your queue in control. What can you do?
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图中我们可以看到，这种影响是线性的，但组合起来会产生不希望的结果。对于高变异性，稍微降低利用率并不会遏制队列的增长。为了保持队列的控制，你必须以更低的利用率进行工作。那么该怎么办呢？
- en: 'It’s important to understand that not all variability is bad. Some may be necessary
    to learn new things. So, the key is really to manage variability so that it doesn’t
    affect the queue size and, consequently, the wait time. Ways to do that include
    the following:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，并非所有的变异性都是不好的。有些变异性可能是学习新事物所必需的。因此，关键是管理变异性，使其不会影响队列大小，从而影响等待时间。管理变异性的方法包括以下几点：
- en: Limiting WIP
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制WIP
- en: Working with smaller batch sizes
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用较小批量进行工作
- en: Setting up buffers in your system
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在系统中设置缓冲区
- en: Establishing standard processes
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立标准化流程
- en: We’ve spoken before about the benefits of limiting WIP and working with smaller
    batch sizes, so let’s examine some of the other ways we can manage variability.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前已经讨论过限制WIP和使用较小批量工作的方法，因此接下来让我们探讨一些管理变异性的其他方式。
- en: Setting up process buffers
  id: totrans-151
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置过程缓冲区
- en: 'Lean manufacturing looks to limit variability by setting up buffers. These
    buffers are used to limit the following factors:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 精益生产通过建立缓冲区来限制变异性。这些缓冲区用于限制以下因素：
- en: Inventory
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库存
- en: Capacity
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产能
- en: Time
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间
- en: 'In product development, WIP limits and small batch sizes act as inventory and
    capacity buffers accordingly. To set up a time buffer, you can establish buffer
    states on those WIP columns on your Kanban board where variability exists in your
    process. An example on our Kanban board is shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在产品开发中，WIP限制和小批量工作分别充当了库存和产能缓冲区。为了设置时间缓冲区，可以在看板中那些存在变异性的WIP列上建立缓冲区状态。我们看板上的一个示例如以下截图所示：
- en: '![Figure 4.13 – Kanban board with buffer states in the Implement/Test column](img/B18756_04_13.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图4.13 – 看板中实施/测试列的缓冲区状态](img/B18756_04_13.jpg)'
- en: Figure 4.13 – Kanban board with buffer states in the Implement/Test column
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13 – 看板中实施/测试列的缓冲区状态
- en: Note that WIP limits are established in each buffer state to ensure throughput
    is maintained.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在每个缓冲区状态下都会设立WIP（在制品）限制，以确保保持产出。
- en: Establishing standard processes
  id: totrans-160
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 建立标准化流程
- en: In the previous section, we discussed using several types of buffers to ensure
    that variability is managed at several stages of the process. The variability
    managed by buffers is often the type that is tolerated, even encouraged by the
    nature of the work.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们讨论了使用几种类型的缓冲区，以确保在多个阶段管理变异性。缓冲区管理的变异性通常是那种可以容忍，甚至由工作性质所鼓励的类型。
- en: Some variability, however, may exist due to inefficiencies in the development
    process. An example of this is encouraging one type of test to be automated—for
    example, unit tests for code—without striving to automate **behavior-driven development**
    (**BDD**) tests to ensure correctness. This has the effect of keeping cycle times
    long.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于开发过程中存在低效，可能会出现一定的变动。例如，鼓励某种类型的测试自动化——例如，代码的单元测试——而不是努力自动化**行为驱动开发**（**BDD**）测试以确保正确性。这样做的效果是保持较长的周期时间。
- en: Establishing standard processes ensures the reduction of needless variability
    of cycle time. Standardizing processes includes establishing a standard, detecting
    any possible problems, and discovering the root cause of these problems continuously.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 建立标准化流程可以确保减少周期时间中不必要的变动。标准化流程包括建立标准、检测任何可能的问题，并持续发现这些问题的根本原因。
- en: We’ve seen the practices you can use to model your development process to ensure
    that the work is progressing to completion. These practices need to be anchored
    by people that look at the entire process from start to finish. In the next section,
    we’ll take a closer look at establishing that viewpoint and the systemic changes
    needed.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了一些可以用来建模开发过程的实践，以确保工作按进度完成。这些实践需要有能够从头到尾审视整个过程的人来支撑。在下一节中，我们将更深入地探讨建立这种视角以及所需的系统性变革。
- en: Moving from project-based to product-based work
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从基于项目的工作转向基于产品的工作
- en: When adopting value stream thinking, it’s important to change the view and mindset
    of development from project-based management to product-based management.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在采用价值流思维时，重要的是要改变开发的视角和思维方式，从基于项目的管理转变为基于产品的管理。
- en: 'In *Project to Product: How to Survive and Thrive in the Age of Digital Disruption
    with the Flow Framework*, Mik Kersten contrasts the success of integrating IT
    and software in assembling BMW models in Leipzig, Germany, with the failure of
    Nokia to continue its dominance in the smartphone industry as the iPhone and Android
    phones were introduced. He notes that although Nokia had successfully adopted
    Agile practices, it did not appear to foster change to the entire product development
    process or affect the entire organization. He identifies that for this *Age of
    Software*, product-oriented development using value streams allows for the creation
    and maintenance of successful products.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在《从项目到产品：如何在数字化颠覆时代通过流框架生存与发展》一书中，Mik Kersten对比了德国莱比锡BMW工厂在组装BMW车型时，IT与软件整合的成功，和诺基亚未能在智能手机行业继续主导地位的失败，后者是在iPhone和安卓手机推出之后发生的。他指出，尽管诺基亚成功采纳了敏捷实践，但它似乎没有促进整个产品开发过程的变化，也未能影响整个组织。他认为，在这个*软件时代*，基于价值流的产品导向开发能够创造和维护成功的产品。
- en: 'Mik Kersten highlights seven key categories where the differences between project-based
    management and product-based management are apparent. These differences are illustrated
    as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Mik Kersten强调了七个关键领域，其中项目管理和产品管理之间的差异十分明显。这些差异如下所示：
- en: Budgeting
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预算
- en: Timeframe
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间框架
- en: Success
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成功
- en: Risk
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风险
- en: Team assignments
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队分配
- en: Prioritization
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先级
- en: Visibility
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可见性
- en: Let’s individually look at these differences now.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们分别看看这些差异。
- en: Project budgets versus value stream funding
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目预算与价值流资金
- en: 'In project management, the *iron triangle* is a well-known construct. In management,
    you look at three factors or *sides* to see whether you can fix one or more of
    them to bring a project or product to completion. These three factors are as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目管理中，*铁三角*是一个广为人知的结构。在管理中，你需要查看三个因素或*方面*，看是否可以修正其中一个或多个因素，以完成一个项目或产品。这三个因素如下：
- en: Resources (people, equipment, facilities, and so on)
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源（人员、设备、设施等）
- en: Scope
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围
- en: Time
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间
- en: A project budget is often a bet. Can the project do everything required (scope)
    in the projected timeframe (time) and with the projected resources? Because this
    budget is necessary for approvals, it is often a guess of the largest number of
    resources for the other parts of the triangle. Sometimes these guesses fall short,
    resulting in cost overruns and possibly another project (with another budget).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 项目预算通常是一种赌注。项目能否在预计的时间框架（时间）内并且用预期的资源完成所有必要的任务（范围）？由于这个预算是批准所必需的，它通常是对三角形其他部分资源最大数量的猜测。有时这些猜测不足，导致成本超支，并可能导致另一个项目（及另一个预算）。
- en: Funding for value streams is easier. Resources and time are kept constant over
    the period of the budget. At the end of the timeframe for the budget (often less
    than an annual basis; typically, quarterly) the results of the development and
    the customer feedback determine whether continued effort and capacity are needed
    to match the demand for delivered features. If so, a new budget with an increased
    allocation is created for the new time period.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 对价值流的资金支持更为简便。在预算期间，资源和时间保持恒定。在预算期结束时（通常是季度而非年度），开发结果和客户反馈将决定是否需要继续投入努力和能力，以满足交付功能的需求。如果需要，将为新的时间段创建一个增加分配的新预算。
- en: Defined endpoint versus product life cycle
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确定的结束点与产品生命周期
- en: 'A defining characteristic of the project is its life cycle There is a beginning,
    with a flurry of activity to organize teams and get started. This then proceeds
    along with development, continuing until the project reaches its conclusion: the
    delivery of a product. At this point, the project is over. With the project and
    its funding at an end, the teams that developed the product are dispersed. The
    product goes to a dedicated maintenance team that may not have had a role in its
    development, consequently preventing learning from reaching the entire organization.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的一个决定性特征是其生命周期。项目有一个开始，伴随大量活动组织团队并启动工作。接着进入开发阶段，直到项目结束：产品交付为止。此时，项目完成，项目和资金结束，开发产品的团队被解散。产品交给一个专门的维护团队，该团队可能未参与产品的开发，结果导致组织无法从中吸取全面的经验教训。
- en: Value streams approach the timeline of the entire product *from cradle to grave*.
    The same teams and ARTs that develop and release the initial features of a product
    become responsible for its maintenance and ongoing health. Part of maintenance
    includes identifying and removing technical debt, resulting in keeping the product
    viable. This occurs until the product reaches the end of its life.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流从整个产品的*生命周期*进行时间线管理。从产品初始功能的开发和发布开始的相同团队和ARTs，负责产品的维护和持续健康。维护的一部分包括识别并清除技术债务，确保产品的可行性。这一直持续到产品的生命周期结束。
- en: Cost centers versus business outcomes
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成本中心与业务成果
- en: Measurement of progress in project-based development is often aligned with how
    the cost centers that comprise teams are performing. This disjointed view of progress
    focuses on the performance of individual silos rather than the entire system.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 基于项目的开发进度衡量往往与组成团队的成本中心的表现一致。这种脱节的进度视角集中于各个部门的表现，而非整体系统。
- en: Another consequence of this cost-center approach is that because the budgets
    tend to be large, the project stakeholders are drawn to create large projects
    as opposed to viewing the value of efforts once delivered.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 采用成本中心方式的另一个后果是，由于预算通常较大，项目利益相关者往往倾向于创建大型项目，而不是在交付后评估努力的价值。
- en: Value streams use a different metric for success. They look at the outcomes
    produced by efforts delivered. By allowing for incremental delivery and learning
    from customer feedback, the value stream can adjust to deliver better business
    outcomes.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流使用不同的成功指标。它们关注通过努力交付所产生的成果。通过允许增量交付并从客户反馈中学习，价值流可以调整以交付更好的业务成果。
- en: Upfront risk identification versus spreading risks
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前期风险识别与分散风险
- en: In project-based development, risks to delivery are identified as early as possible
    to create contingencies. But frequently, there are risks not identified due to
    the unknowns yet to be discovered when development is underway.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于项目的开发中，交付风险尽早被识别，以便创建应急预案。但通常，仍有风险未被识别，因为在开发进行时，还有未知的风险需要发现。
- en: With product-based development, risks are identified as more learning occurs.
    Incremental delivery allows for pivots to occur at regular checkpoints. Although
    there may be overhead involved in these pivots, this overhead is spread out over
    the product life cycle and becomes a small fraction as it is distributed over
    that long period of time.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于产品的开发中，随着学习的深入，风险会被逐步识别。增量交付允许在定期检查点进行调整。虽然这些调整可能会涉及一些开销，但这部分开销会分摊到产品生命周期中，随着时间的推移，它所占的比例变得非常小。
- en: Moving people to the work versus moving work to the people
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将人力调配到工作中与将工作调配到人力中
- en: Project-based development creates teams from cost-center-based resource pools.
    This method of creating teams to work on projects assumes that individuals from
    the resource pools have identical talents and skills. This assumption is never
    true.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 基于项目的开发从成本中心资源池中创建团队。这种通过创建团队来处理项目的方法假设资源池中的个体拥有相同的才能和技能。然而，这种假设从未成立。
- en: Another consequence of this reallocation of these individuals interferes with
    the team’s well-being and productivity. In 1965, psychologist Bruce Tuckman created
    the **Forming, Storming, Norming, Performing, and Adjourning** (**FSNPA**) model
    of team creation, illustrating the stages teams go through as they become high-performing.
    Constant reassignments and team shakeups impede the ability of the team to achieve
    a high-performing status where the team works as one unit.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这种人员重新分配的另一个后果是干扰了团队的福祉和生产力。1965年，心理学家布鲁斯·塔克曼创建了**形成、风暴、规范、表现和告别**（**FSNPA**）团队创建模型，阐明了团队在成为高效团队过程中所经历的各个阶段。持续的重新分配和团队调整妨碍了团队达成高效表现的能力，团队未能作为一个整体协同工作。
- en: Product-based development emphasizes long lifespans for teams. This allows teams
    to focus on acquiring product knowledge and grow together as one team. This improves
    the ability of the team to deliver and the team’s morale.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 基于产品的开发强调团队的长周期。这使得团队能够专注于获取产品知识，并作为一个整体一起成长。这提升了团队的交付能力和士气。
- en: Performing to plan versus learning
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行计划与学习
- en: In project-based development, adherence to the project plan is paramount. Adjustments
    to the plan result in cost overruns and reallocation of resources due to the overhead
    cost of performing any changes.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于项目的开发中，遵守项目计划是至关重要的。对计划的调整会导致成本超支，并因执行任何变更所需的额外开销而重新分配资源。
- en: Product-based development welcomes changes by setting up piecemeal delivery
    of features and creates a space for learning and the validation of hypotheses.
    After the delivery of each increment of value, feedback and outcomes are collected
    and necessary adjustments are made.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 基于产品的开发通过设置逐步交付特性来欢迎变化，并为学习和假设验证创造了空间。在每次交付价值增量后，收集反馈和结果，并进行必要的调整。
- en: Misalignment versus transparent business objectives
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不一致性与透明的商业目标
- en: In project-based development, there is often a disconnect between the business
    stakeholders and the IT departments that develop products. This disconnect stems
    from IT’s focus on the product and the business side’s focus on completing the
    project through a progression of steps with no runway for readjustment.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于项目的开发中，业务利益相关者与开发产品的 IT 部门之间往往存在脱节。这种脱节源于 IT 专注于产品，而业务方则专注于通过一系列步骤完成项目，且没有调整的余地。
- en: 'With product-based development, the goals for both the business and IT development
    sides are the same: the fulfillment of business objectives. This transparency
    of the goal allows for alignment to occur and for easier sharing of progress and
    feedback.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于产品的开发中，业务和 IT 开发方面的目标是相同的：实现业务目标。这种目标的透明性促使了目标的一致性，并便于进度和反馈的共享。
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at Lean flow as part of the CALMR model. We know
    that achieving a Lean flow of work where the progression of work is steady and
    teams are neither overburdened nor underburdened allows for the success of the
    other parts of the model. To that end, we took a close look at Lean practices
    that allow teams to achieve Lean flow.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了作为 CALMR 模型一部分的精益流。我们知道，达成一个精益流工作流程，其中工作进展稳定，团队既不被过度负担也不处于轻松状态，这有助于模型中其他部分的成功。为此，我们仔细分析了可以帮助团队实现精益流的精益实践。
- en: The first practice we investigated was to make sure that all the work a team
    commits to and its progress are visible. To ensure this visibility, we looked
    at the types of work a team could do. We then mapped that work to a Kanban board,
    highlighting the features of the board that allow us to see the progress for any
    one piece of work and where urgent work could go. We saw how we can visualize
    WIP on the Kanban board and how to keep WIP in check using WIP limits.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们研究的第一个实践是确保团队承诺的所有工作及其进展都是可见的。为了确保这种可见性，我们查看了团队可以做的工作类型。然后，我们将这些工作映射到看板上，突出了看板的功能，使我们能够看到任何一项工作进展的情况以及紧急工作的去向。我们了解了如何在看板上可视化工作进行中的状态，并通过设置工作进行中（WIP）限制来保持
    WIP 在可控范围内。
- en: From there, we took a look at the size of the work or batch size. We strove
    to understand the importance of making sure the batch size was as small as possible.
    We looked at the relationship batch size had with cycle time, WIP, and performance.
    With this in mind, we looked at the economics of batch size and how you could
    determine the ideal batch size through u-curve optimization.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里，我们开始查看工作或批量大小。我们努力理解确保批量大小尽可能小的重要性。我们查看了批量大小与周期时间、WIP和性能之间的关系。牢记这一点，我们还研究了批量大小的经济学，以及如何通过U型曲线优化确定理想的批量大小。
- en: We then looked at other factors at play by looking closely at queueing theory.
    We saw how Little’s Law describes the relationship between cycle time and WIP
    or batch size. We saw the other factors and how they related to cycle time by
    examining Kingman’s Formula. Approaching one of these factors, utilization, we
    saw how cycle times increased with high utilization. We also learned more about
    the other factor, variability, and how to manage it.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们通过仔细研究排队理论来看其他因素的作用。我们看到Little’s Law描述了周期时间与WIP或批量大小之间的关系。通过考察Kingman的公式，我们看到了其他因素及其与周期时间的关系。在接触其中一个因素——利用率时，我们看到高利用率会导致周期时间增加。我们还进一步了解了另一个因素——变异性，以及如何管理它。
- en: Finally, to allow value streams to deliver work through Lean flow, we looked
    at the differences between project-based development and product-based development.
    These differences create stronger teams and stronger products in shorter cycle
    times.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了让价值流能够通过精益流传递工作，我们比较了基于项目的开发与基于产品的开发之间的差异。这些差异在更短的周期时间内创造了更强的团队和更强的产品。
- en: To ensure that work is progressing in Lean flow, we need to take regular measurements.
    We also want to make sure that whatever is delivered does not adversely affect
    the staging and production environments. To do this, we will examine measurement,
    the next element of our CALMR model, in the next chapter.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保工作在精益流中进展顺利，我们需要定期进行测量。我们还希望确保交付的工作不会对临时环境和生产环境产生不良影响。为此，我们将在下一章中检查测量，这是我们CALMR模型的下一个元素。
- en: Questions
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Test your knowledge of the concepts in this chapter by answering these questions.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答这些问题来测试你对本章概念的理解。
- en: Which of these are types of enablers in SAFe (pick two)?
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪些是SAFe中的启用因素？（选择两个）
- en: Exploration
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 探索
- en: Measurement
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量
- en: Visualization
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化
- en: Compliance
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 合规性
- en: Actual
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实际
- en: Which feature of a Kanban board can be used to visualize work that is urgent?
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kanban板的哪个功能可以用来可视化紧急工作的情况？
- en: WIP limits
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: WIP限制
- en: An expedite lane
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 快速通道
- en: Column policy
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列策略
- en: Expanded workflow columns
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展的工作流列
- en: What is a consequence of too much WIP?
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过多的WIP会导致什么后果？
- en: Too much multitasking
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过多的多任务处理
- en: Reduced cycle times
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 减少的周期时间
- en: Newer work gets started after older work is completed
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的工作在旧的工作完成后开始
- en: Short queues
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 短队列
- en: What results from large batch sizes?
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 大批量大小会导致什么结果？
- en: Low WIP
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 低WIP
- en: Decreased risk
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 降低风险
- en: High cycle times
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高周期时间
- en: High performance
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高性能
- en: According to Reinertsen, long queues lead to which problems (pick two)?
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据Reinertsen的说法，长队列会导致哪些问题？（选择两个）
- en: Shorter cycle times
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更短的周期时间
- en: Higher overhead
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更高的开销
- en: Less risk
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 较小的风险
- en: Higher quality
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更高的质量
- en: More variability
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更多的变异性
- en: Which of these is a method for managing variability?
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种方法是管理变异性的方法？
- en: Larger batch sizes
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更大的批量大小
- en: Establishing buffers
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建立缓冲区
- en: “One-off” processes
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: “一次性”流程
- en: Increasing WIP
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 增加在制品（WIP）
- en: According to Mik Kersten, which of these is present in product-based development?
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据Mik Kersten的说法，哪些因素在基于产品的开发中存在？
- en: Moving the people to the work
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将人力移至工作地点
- en: Identifying all risks upfront
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一开始识别所有风险
- en: Focus on business outcomes
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专注于业务成果
- en: Project planning
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目规划
- en: Further reading
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Here are some resources for you to explore this topic further:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些资源供你进一步探索这一主题：
- en: '*Making Work Visible: Exposing Time Theft to Optimize Work and Flow* by *Dominica
    DeGrandis*: A look at five time thieves and how Lean practices can remove them.
    Too much WIP is identified as one of these time thieves.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《让工作可视化：揭示时间盗窃以优化工作和流动》*（*Dominica DeGrandis*著）：探讨五种时间盗贼以及精益实践如何消除它们。过多的WIP被认为是其中一种时间盗贼。'
- en: '*The Goal* by *Eliyahu M. Goldratt*: A look at the Theory of Constraints and
    how to eliminate bottlenecks in your process.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《目标》*（*Eliyahu M. Goldratt*著）：探讨约束理论以及如何消除流程中的瓶颈。'
- en: '*Kanban: Successful Evolutionary Change for Your Technology Business* by *David
    J. Anderson*: The authoritative source on Kanban. Further exploration of the Kanban
    board and limiting WIP can be found here.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*看板：为你的技术业务成功演变的变革* 由 *David J. Anderson* 著作：关于看板的权威资料。有关看板板和限制WIP的进一步探索请见此处。'
- en: '*The Principles of Product Development Flow: Second Generation Lean Product
    Development* by *Donald Reinertsen*: An exhaustive look at the economics behind
    Lean practices in this chapter, whether limiting WIP, identifying the ideal batch
    size, or the effects of utilization and variability the effects of utilization
    and variability.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*产品开发流的原则：第二代精益产品开发* 由 *Donald Reinertsen* 著作：深入探讨精益实践背后的经济学，无论是限制在制品（WIP）、识别理想批量大小，还是利用率和变异性的影响。'
- en: '*Project to Product: How to Survive and Thrive in the Age of Digital Disruption
    with the Flow Framework* by *Mik Kersten*: A look at value streams and measuring
    their performance.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*项目到产品：如何在数字化破坏的时代，通过流动框架生存和发展* 由 *Mik Kersten* 著作：探讨价值流及其绩效的衡量。'
- en: 'A look at teamwork models including the FSNPA model from Bruce Tuckman: [https://www.atlassian.com/blog/teamwork/what-strong-teamwork-looks-like](https://www.atlassian.com/blog/teamwork/what-strong-teamwork-looks-like)'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探讨团队合作模型，包括布鲁斯·塔克曼（Bruce Tuckman）的FSNPA模型：[https://www.atlassian.com/blog/teamwork/what-strong-teamwork-looks-like](https://www.atlassian.com/blog/teamwork/what-strong-teamwork-looks-like)
