- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: DBAs in the World of DevOps
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 世界中的 DBA
- en: In this chapter, we will take a closer look at the evolving role of **Database
    Administrators** (**DBAs**) in the changing landscape of technology and data management.
    We will begin by exploring what the “early days” of database management were like
    when the DBA was primarily a gatekeeper of structured data, responsible for backups,
    data integrity, and query optimization. While those days may feel nostalgic, make
    no mistake, the profession has undergone significant transformations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将更深入地探讨 **数据库管理员** (**DBA**) 在技术和数据管理不断变化的格局中扮演的角色。我们将首先回顾数据库管理的“早期日子”，那时
    DBA 主要是结构化数据的守门人，负责备份、数据完整性和查询优化。尽管那些日子可能带有怀旧色彩，但不可否认的是，这个职业已经经历了重大的变革。
- en: We’ll then delve into how cloud computing and big data are set to revolutionize
    the expectations of a DBA. Cloud computing is used to unshackle databases from
    on-premises limitations, offering scalability and flexibility like never before.
    Big data will be used to expand the types and volumes of data that DBAs interact
    with. It will no longer just be about SQL queries; it will be about managing and
    making sense of a torrent of structured and unstructured data flowing in real
    time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将深入探讨云计算和大数据如何彻底改变 DBA 的期望。云计算将使数据库摆脱传统本地部署的限制，提供前所未有的可扩展性和灵活性。大数据将用于扩展
    DBA 与之互动的数据类型和数据量。它不再仅仅是 SQL 查询，而是关于管理和理解大量结构化与非结构化数据的实时流动。
- en: This will lead us to the next part of the chapter, where we will discuss the
    future role of DBAs within DevOps-conscious teams. With the rise of DevOps practices,
    DBAs will find themselves at the intersection of development, operations, and
    quality assurance. They will contribute to automating pipelines and implementing
    schema changes, and may even get involved in application development to some extent.
    The DevOps culture will encourage DBAs to be more proactive than reactive, and
    the benefits will be significant—faster deployment cycles, improved communication,
    and higher quality of software deployments.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将进入本章的下一部分，讨论 DBA 在 DevOps 文化团队中的未来角色。随着 DevOps 实践的兴起，DBA 将发现自己处于开发、运维和质量保证的交汇点。他们将为自动化流水线和实施架构变更做出贡献，甚至可能在某种程度上参与到应用程序开发中。DevOps
    文化将鼓励 DBA 更加主动而非被动，带来的好处将是显著的——更快的部署周期、更好的沟通以及更高质量的软件部署。
- en: So, to sum it all up, the future role of the DBA will not be how it used to
    be; it will become richer, more multidimensional, and continually evolve. DBAs
    will emerge as critical players in making data not only accessible but also insightful.
    As data continues to grow in importance and complexity, the DBA will transition
    from being a background figure to a key enabler in transforming data into actionable
    intelligence. There you have it; that is the essence of this chapter. We hope
    it will offer you not only knowledge but also a perspective on how the tech world
    will shape, and be shaped by, these unsung heroes of the data world.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，未来 DBA 的角色将不再像过去那样；它将变得更加丰富、多维，并不断演化。DBA 将成为确保数据不仅可访问而且具有洞察力的关键人物。随着数据在重要性和复杂性方面的不断增长，DBA
    将从一个幕后角色转变为将数据转化为可操作信息的关键推动者。以上就是本章的精髓。我们希望这不仅能为您提供知识，还能为您提供一个视角，了解技术世界将如何塑造，并由这些数据世界中的无名英雄所塑造。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: The continuously evolving role of the DBA
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DBA 不断发展的角色
- en: The emergence of cloud computing and big data
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云计算和大数据的兴起
- en: DevOps and DBAs
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps 和 DBA
- en: The role of database experts in a DevOps-conscious team
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库专家在 DevOps 文化团队中的角色
- en: A proven methodology with quantifiable benefits
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种经过验证的具有可量化效益的方法论
- en: The continuously evolving role of the DBA
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DBA 不断发展的角色
- en: The role of the DBA has evolved significantly since the early days of computing,
    reflecting changes in technology, business needs, and the increasing importance
    of data management. In this section, we will explore the evolution of the DBA
    role, from its early beginnings to its current state, and discuss some of the
    key trends and challenges that are shaping the role today.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 自计算机早期以来，DBA 的角色经历了显著的变化，反映了技术、业务需求以及数据管理日益重要性的变化。在本节中，我们将探讨 DBA 角色的演变，从最初的起步到当前状态，并讨论塑造这一角色的关键趋势和挑战。
- en: In the early days of computing, databases were simple and relatively small,
    and it was often possible for a single person to handle all aspects of database
    management. Databases were typically managed using flat files or hierarchical
    structures, and the role of the DBA was focused on basic data storage and retrieval.
    DBAs were responsible for designing and implementing database systems, and for
    ensuring that data was stored securely and could be retrieved quickly and efficiently.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算的早期，数据库简单且相对较小，通常一个人就能处理数据库管理的所有方面。数据库通常通过平面文件或层次结构进行管理，数据库管理员的职责主要集中在基础的数据存储和检索。数据库管理员负责设计和实施数据库系统，并确保数据安全存储，且能够快速高效地进行检索。
- en: As databases grew in size and complexity, however, the role of the DBA became
    more specialized. In the 1970s and 1980s, the introduction of **relational database
    management systems** (**RDBMSs**) such as Oracle, IBM Db2, and Microsoft SQL Server
    changed the way databases were managed and expanded the role of the DBA to include
    more complex tasks, such as performance tuning, backup and recovery, and database
    security.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，随着数据库规模和复杂性的增长，数据库管理员的角色变得更加专业化。在20世纪70年代和80年代，**关系型数据库管理系统**（**RDBMSs**）如Oracle、IBM
    Db2和Microsoft SQL Server的出现，改变了数据库管理的方式，并扩展了数据库管理员的职责，包括更复杂的任务，如性能调优、备份与恢复以及数据库安全。
- en: Performance tuning is the practice of optimizing database performance by tweaking
    various database parameters and settings. In the early days of RDBMSs, performance
    tuning was a critical aspect of DBA work, as databases were often slow and inefficient.
    DBAs would spend hours or even days tweaking database settings to get the best
    possible performance, often using trial and error to find the optimal configuration.
    As databases became more complex, however, performance tuning became a more specialized
    skill, and many organizations began hiring dedicated performance-tuning experts
    to handle this task.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 性能调优是通过调整各种数据库参数和设置来优化数据库性能的实践。在关系型数据库管理系统（RDBMS）的早期，性能调优是数据库管理员（DBA）工作中的一个关键方面，因为数据库通常较慢且效率低下。数据库管理员会花费数小时甚至几天时间调整数据库设置，以获得最佳性能，通常使用试错法来找到最佳配置。然而，随着数据库变得越来越复杂，性能调优成为了一项更为专业的技能，许多组织开始雇佣专门的性能调优专家来处理这项工作。
- en: Backup and recovery is the practice of creating backups of database data and
    restoring data in the event of a system failure or data loss. In the early days
    of computing, backup and recovery was a relatively simple process, as databases
    were small and could be backed up using tape drives or other simple storage devices.
    As databases grew in size, however, backup and recovery became a more complex
    and time-consuming process, requiring specialized tools and expertise. DBAs became
    responsible for creating backup and recovery plans, testing backup and recovery
    procedures, and ensuring that data was recoverable in the event of a disaster.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 备份与恢复是创建数据库数据备份并在系统故障或数据丢失时恢复数据的实践。在计算的早期，备份与恢复是一个相对简单的过程，因为数据库较小，可以使用磁带驱动器或其他简单的存储设备进行备份。然而，随着数据库规模的增长，备份与恢复变得更加复杂和耗时，需要专门的工具和技术。数据库管理员负责创建备份和恢复计划、测试备份和恢复程序，并确保在灾难发生时数据能够恢复。
- en: Database security is the practice of protecting sensitive or confidential data
    from unauthorized access or theft. In the early days of computing, database security
    was a relatively simple matter, as databases were typically stored on-premises
    and access was limited to a small number of authorized users. As databases became
    more complex and distributed, however, database security became a critical concern
    for organizations. DBAs became responsible for implementing security policies,
    managing user access, and securing data against external threats such as hacking
    and malware.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库安全是保护敏感或机密数据免受未经授权访问或盗窃的实践。在计算的早期，数据库安全相对简单，因为数据库通常存储在本地，访问仅限于少数授权用户。然而，随着数据库变得更加复杂和分布式，数据库安全成为了组织的一个关键问题。数据库管理员负责实施安全政策、管理用户访问权限，并保护数据免受外部威胁，如黑客攻击和恶意软件。
- en: The rise of data architecture and integration
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据架构和集成的兴起
- en: In the 1990s and 2000s, the role of the DBA began to expand beyond basic database
    management tasks, as organizations began to recognize the strategic importance
    of data management. With the rise of **enterprise resource planning** (**ERP**)
    systems and other large-scale applications, the need for data integration and
    data architecture became increasingly important.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在1990年代和2000年代，随着组织开始意识到数据管理的战略重要性，DBA的角色开始超越基础的数据库管理任务。随着**企业资源规划**（**ERP**）系统和其他大规模应用程序的兴起，数据集成和数据架构的需求变得越来越重要。
- en: Data architecture is the practice of designing and implementing data structures
    and systems that support an organization’s business objectives. As databases became
    more complex and distributed, DBAs became responsible for designing data architectures
    that could support multiple applications and data sources. This involved developing
    data models, defining data standards, and creating data integration strategies
    that could help organizations to streamline their data management processes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 数据架构是设计和实施支持组织业务目标的数据结构和系统的实践。随着数据库变得更加复杂和分布式，数据库管理员（DBA）负责设计能够支持多个应用程序和数据源的数据架构。这涉及开发数据模型、定义数据标准，并创建数据集成策略，以帮助组织优化数据管理流程。
- en: Data integration is the process of combining data from multiple sources and
    applications to create a unified view of an organization’s data. As businesses
    began to rely more heavily on data for decision-making, the need for data integration
    became increasingly important. DBAs became responsible for managing data integration
    tools and technologies, developing data mapping and transformation strategies,
    and ensuring that data was integrated across multiple systems and applications.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集成是将来自多个源和应用程序的数据结合起来，以创建组织数据的统一视图的过程。随着企业越来越依赖数据来做出决策，数据集成的需求变得越来越重要。DBA开始负责管理数据集成工具和技术，开发数据映射和转换策略，并确保数据在多个系统和应用程序之间的集成。
- en: The emergence of cloud computing and big data
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算和大数据的出现
- en: In the last decade, the role of the DBA has continued to evolve, as new technologies
    and trends have emerged. Two of the most significant trends that are shaping the
    role of the DBA today are cloud computing and big data.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去十年中，随着新技术和趋势的出现，DBA的角色继续演变。今天塑造DBA角色的两个最重要的趋势是云计算和大数据。
- en: Cloud computing has changed the way that databases are managed and deployed,
    and has presented new challenges and opportunities for DBAs. With the rise of
    cloud-based databases such as **Amazon Web Services** (**AWS**), Microsoft Azure,
    and Google Cloud Platform, DBAs are increasingly responsible for managing databases
    in the cloud, and for working with cloud-based tools and technologies.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算改变了数据库的管理和部署方式，并为DBA带来了新的挑战和机遇。随着基于云的数据库如**亚马逊Web服务**（**AWS**）、微软Azure和谷歌云平台的兴起，DBA越来越多地负责管理云中的数据库，并与基于云的工具和技术合作。
- en: Cloud-based databases offer many benefits, including scalability, flexibility,
    and cost-effectiveness. However, they also present new challenges, such as security
    and compliance concerns, and the need to manage databases across multiple cloud
    providers and platforms.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 基于云的数据库提供了许多好处，包括可扩展性、灵活性和成本效益。然而，它们也带来了新的挑战，例如安全性和合规性问题，以及需要跨多个云服务商和平台管理数据库。
- en: Big data refers to the large and complex datasets that are generated by organizations
    today. With the rise of social media, mobile devices, and the **Internet of Things**
    (**IoT**), the amount of data that organizations are generating is increasing
    exponentially. This presents new challenges for DBAs, who must develop new skills
    and strategies to manage and analyze this data.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据指的是当今组织生成的大型复杂数据集。随着社交媒体、移动设备和**物联网**（**IoT**）的兴起，组织生成的数据量呈指数增长。这为DBA带来了新的挑战，他们必须发展新的技能和策略来管理和分析这些数据。
- en: Big data technologies such as Hadoop, Spark, and NoSQL databases have emerged
    to help organizations manage and analyze large datasets. DBAs are increasingly
    responsible for working with these technologies and developing strategies to integrate
    big data with existing databases and applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据技术，如Hadoop、Spark和NoSQL数据库，已经出现，以帮助组织管理和分析大型数据集。DBA越来越多地负责与这些技术合作，并制定将大数据与现有数据库和应用程序集成的策略。
- en: In addition to managing big data technologies, DBAs are also responsible for
    implementing data governance policies and procedures to ensure that data is accurate,
    reliable, and secure. This involves developing data quality standards, creating
    data lineage and metadata management strategies, and monitoring data access and
    usage to ensure compliance with regulatory requirements.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 除了管理大数据技术外，DBA 还负责实施数据治理政策和程序，确保数据的准确性、可靠性和安全性。这涉及制定数据质量标准，创建数据血缘和元数据管理策略，并监控数据访问和使用，以确保遵守监管要求。
- en: The shift to DevOps
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 DevOps 转型
- en: Another trend that is shaping the role of the DBA today is the shift to DevOps,
    a methodology that emphasizes collaboration and automation between development
    and operations teams. DevOps has changed the way that software is developed and
    deployed, and has led to a new approach to database management.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个塑造当今 DBA 角色的趋势是向 DevOps 转型，这是一种强调开发团队与运维团队之间协作和自动化的方法论。DevOps 改变了软件开发和部署的方式，也推动了数据库管理的新方法。
- en: In a DevOps environment, DBAs are no longer responsible for manually deploying
    database changes or managing database scripts. Instead, they work closely with
    developers to ensure that database changes are made in a controlled and automated
    way, using tools such as database version control, continuous integration, and
    continuous delivery.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 环境中，DBA 不再负责手动部署数据库变更或管理数据库脚本。相反，他们与开发人员紧密合作，确保数据库变更以受控和自动化的方式进行，使用工具如数据库版本控制、持续集成和持续交付。
- en: This shift to DevOps has led to a new set of skills and responsibilities for
    DBAs, including the ability to work with agile development methodologies, write
    code, and use automation tools and scripts. DBAs must also be able to collaborate
    effectively with developers and operations teams and communicate technical concepts
    to non-technical stakeholders.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 向 DevOps 的转变使得 DBA 需要掌握一系列新的技能和责任，包括与敏捷开发方法论合作、编写代码以及使用自动化工具和脚本。DBA 还必须能够与开发人员和运维团队有效协作，并将技术概念传达给非技术相关的利益相关者。
- en: Conclusion
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In conclusion, the role of the DBA has evolved significantly over time, reflecting
    changes in technology, business needs, and the increasing importance of data management.
    From its early beginnings as a basic data storage and retrieval role, the DBA
    has expanded to include more complex tasks, such as performance tuning, backup
    and recovery, database security, data architecture, and data integration.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，DBA 的角色随着时间的推移发生了显著变化，反映了技术、业务需求和数据管理日益重要性的变化。从最初作为基础数据存储和检索角色的起点，DBA 的职责扩展到了更为复杂的任务，如性能调优、备份与恢复、数据库安全、数据架构和数据集成。
- en: Today, DBAs are responsible for managing databases in the cloud, working with
    big data technologies, implementing data governance policies and procedures, and
    collaborating with developers and operations teams in a DevOps environment. As
    technology and business needs continue to evolve, the role of the DBA is likely
    to continue to change, presenting new challenges and opportunities for those who
    work in this field.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，DBA 负责管理云中的数据库，使用大数据技术，实施数据治理政策和程序，并在 DevOps 环境中与开发团队和运维团队合作。随着技术和业务需求的不断发展，DBA
    的角色可能会继续变化，为从事这一领域的人员带来新的挑战和机遇。
- en: DevOps and DBAs
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 与 DBA
- en: As previously established, DevOps is a software development methodology that
    emphasizes collaboration between development and operations teams to streamline
    the software development life cycle. It involves automating the entire software
    delivery process, from code development to deployment and maintenance. One area
    where DevOps has had a particularly significant impact is database management
    practices.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，DevOps 是一种软件开发方法论，强调开发团队与运维团队之间的协作，以简化软件开发生命周期。它包括自动化整个软件交付过程，从代码开发到部署和维护。DevOps
    在数据库管理实践方面尤其产生了深远的影响。
- en: In traditional software development, database management was often seen as a
    separate task from the rest of the development process. DBAs would typically work
    in isolation from the development team, making it difficult to ensure that the
    database met the needs of the application. This siloed approach often resulted
    in delays and errors, as changes to the database schema were not always properly
    communicated to the development team.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的软件开发中，数据库管理通常被视为与其他开发过程分开的任务。数据库管理员（DBA）通常与开发团队孤立工作，这使得确保数据库符合应用程序需求变得困难。这种孤立的方式常常导致延误和错误，因为数据库架构的更改并未始终有效地传达给开发团队。
- en: DevOps has changed this approach by promoting collaboration and communication
    between development and operations teams. By bringing DBAs into the development
    process earlier, DevOps teams can ensure that the database is designed to meet
    the needs of the application from the outset. This helps to reduce the risk of
    errors and delays later in the development process.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 改变了这种方法，促进了开发与运维团队之间的协作和沟通。通过让数据库管理员更早地参与开发过程，DevOps 团队可以确保数据库从一开始就满足应用程序的需求。这有助于减少开发过程后期出现错误和延迟的风险。
- en: One of the key ways that DevOps has improved database management practices is
    through the use of automation. In traditional software development, many tasks
    related to database management were performed manually. This was a time-consuming
    process that was prone to errors. DevOps teams have automated many of these tasks,
    making the process faster and more reliable.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 改进数据库管理实践的一个关键方式是通过自动化。在传统的软件开发中，许多与数据库管理相关的任务都是手动执行的。这是一个费时且容易出错的过程。DevOps
    团队已经自动化了许多这些任务，使得过程更加快速和可靠。
- en: For example, DevOps teams can use automated scripts to generate database schema
    changes. These scripts can be version-controlled, which helps to ensure that changes
    are made in a consistent and repeatable way. This makes it easier to track changes
    to the database over time and roll back changes if necessary.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，DevOps 团队可以使用自动化脚本生成数据库架构更改。这些脚本可以进行版本控制，有助于确保更改以一致且可重复的方式进行。这样可以更容易地跟踪数据库的变化，并在必要时回滚更改。
- en: Another way that DevOps has improved database management practices is through
    the use of **continuous integration and continuous deployment** (**CI/CD**) pipelines.
    These pipelines automate the process of building, testing, and deploying software,
    including changes to the database schema.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 改进数据库管理实践的另一种方式是通过使用**持续集成和持续部署**（**CI/CD**）流水线。这些流水线自动化了构建、测试和部署软件的过程，包括数据库架构的更改。
- en: CI/CD pipelines can be used to automatically test changes to the database schema,
    ensuring that they work as expected before they are deployed to production. This
    helps to reduce the risk of errors and downtime caused by database changes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 流水线可以用于自动测试数据库架构的更改，确保它们在部署到生产环境之前按预期工作。这有助于减少由数据库更改引起的错误和停机风险。
- en: In addition to automation and CI/CD pipelines, DevOps has also improved database
    management practices by promoting a culture of collaboration and communication.
    DevOps teams typically work in cross-functional teams that include developers,
    operations staff, and DBAs. This helps to ensure that everyone is working together
    toward a common goal and that everyone has a shared understanding of the requirements
    and constraints of the database.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 除了自动化和 CI/CD 流水线，DevOps 还通过促进协作和沟通的文化改进了数据库管理实践。DevOps 团队通常在跨职能团队中工作，团队成员包括开发人员、运维人员和数据库管理员。这有助于确保每个人朝着共同的目标努力，并且每个人对数据库的要求和约束有共同的理解。
- en: By working together, DevOps teams can identify and address issues with the database
    early in the development process. This reduces the risk of delays and errors later
    in the development cycle, as issues can be addressed before they become critical.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过协同工作，DevOps 团队可以在开发过程的早期识别和解决数据库问题。这减少了开发周期后期出现延迟和错误的风险，因为问题可以在变得严重之前得到解决。
- en: DevOps also promotes a culture of continuous improvement. By monitoring and
    analyzing performance metrics, DevOps teams can identify areas for improvement
    in their database management practices. This helps to ensure that the database
    remains optimized and performant over time, even as the application grows and
    evolves.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 还促进了持续改进的文化。通过监控和分析性能指标，DevOps 团队可以识别数据库管理实践中的改进领域。这有助于确保数据库随着时间推移保持优化和高效，即使应用程序在不断增长和演变。
- en: Another way that DevOps has improved database management practices is through
    the use of **infrastructure as code** (**IaC**). IaC involves writing code to
    automate the deployment and configuration of infrastructure resources, including
    databases. By treating infrastructure as code, DevOps teams can apply the same
    principles of version control, testing, and automation to their infrastructure
    as they do to their application code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 改进数据库管理实践的另一方式是通过使用**基础设施即代码**（**IaC**）。IaC 涉及编写代码来自动化基础设施资源的部署和配置，包括数据库。通过将基础设施视为代码，DevOps
    团队可以将与应用程序代码相同的版本控制、测试和自动化原则应用到基础设施中。
- en: Using IaC, DevOps teams can ensure that their database infrastructure is consistent
    and repeatable across different environments, from development to production.
    This reduces the risk of errors caused by differences between environments and
    makes it easier to troubleshoot issues when they arise.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用基础设施即代码（IaC），DevOps 团队可以确保其数据库基础设施在不同环境中保持一致和可重复，从开发到生产。这样可以减少由于环境之间的差异导致的错误，并且当问题发生时，更容易进行故障排除。
- en: DevOps has also made it easier to manage databases in the cloud. Cloud providers
    offer a range of database services, including managed database services that handle
    many of the tasks related to database management automatically. DevOps teams can
    use these services to offload many of the tasks related to database management,
    freeing up time and resources to focus on other areas of the application.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 还使得在云中管理数据库变得更加容易。云服务提供商提供了一系列数据库服务，包括托管数据库服务，这些服务自动处理许多与数据库管理相关的任务。DevOps
    团队可以利用这些服务将许多数据库管理任务外包，从而节省时间和资源，专注于应用程序的其他领域。
- en: Cloud providers also offer tools and services that integrate with DevOps workflows,
    making it easier to automate tasks related to database management. For example,
    cloud providers may offer APIs that allow DevOps teams to automate tasks like
    database backups and scaling.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 云服务提供商还提供与 DevOps 工作流集成的工具和服务，使得自动化数据库管理相关任务变得更加容易。例如，云服务提供商可能会提供 API，允许 DevOps
    团队自动化像数据库备份和扩展等任务。
- en: To summarize, DevOps has had a significant impact on database management practices.
    By promoting collaboration, automation, and a culture of continuous improvement,
    DevOps teams can ensure that their databases are designed to meet the needs of
    the application and that changes to the database are made in a consistent and
    repeatable way. This reduces the risk of errors and downtime caused by database
    changes and helps to ensure that the database remains optimized and performant
    over time.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，DevOps 对数据库管理实践产生了重大影响。通过促进协作、自动化和持续改进的文化，DevOps 团队可以确保其数据库的设计满足应用程序的需求，并且数据库的更改以一致和可重复的方式进行。这减少了由于数据库更改引起的错误和停机的风险，并有助于确保数据库随着时间推移保持优化和高效。
- en: DevOps has also made it easier to manage databases at scale. As applications
    grow and evolve, the demands placed on the database can increase significantly.
    DevOps teams can use automation and infrastructure as code to manage databases
    at scale, ensuring that the database remains performant even as the application
    grows.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 还使得在大规模管理数据库变得更加容易。随着应用程序的增长和演变，对数据库的需求可能会显著增加。DevOps 团队可以使用自动化和基础设施即代码来大规模管理数据库，确保即使应用程序增长，数据库仍能保持高效。
- en: For example, DevOps teams can use automation to scale the database infrastructure
    up or down based on demand. This helps to ensure that the application remains
    responsive even during periods of high traffic.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，DevOps 团队可以使用自动化根据需求扩展或缩小数据库基础设施。这有助于确保即使在高流量期间，应用程序也能保持响应。
- en: DevOps teams can also use monitoring and analytics tools to identify performance
    bottlenecks and other issues with the database. By analyzing performance metrics,
    DevOps teams can identify areas for improvement and make changes to the database
    infrastructure to optimize performance.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps团队还可以使用监控和分析工具来识别数据库中的性能瓶颈和其他问题。通过分析性能指标，DevOps团队可以发现改进的领域，并对数据库基础设施进行调整，以优化性能。
- en: Another way that DevOps has improved database management practices is through
    the use of security automation. Security is a critical concern for any database,
    as even a single security breach can have significant consequences. DevOps teams
    can use automation to ensure that their databases are configured securely from
    the outset and to monitor security issues on an ongoing basis.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps改善数据库管理实践的另一种方式是通过使用安全自动化。安全是任何数据库的重要关注点，因为即使是一次安全漏洞也可能产生重大后果。DevOps团队可以利用自动化确保数据库从一开始就安全配置，并持续监控安全问题。
- en: For example, DevOps teams can use automated scripts to configure database security
    settings, such as access controls and encryption. They can also use automated
    tools to scan the database for vulnerabilities and identify potential security
    risks.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，DevOps团队可以使用自动化脚本来配置数据库的安全设置，如访问控制和加密。他们还可以使用自动化工具扫描数据库中的漏洞，并识别潜在的安全风险。
- en: By using automation to manage database security, DevOps teams can ensure that
    their databases remain secure over time, even as the application evolves and new
    security threats emerge.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用自动化管理数据库安全，DevOps团队可以确保他们的数据库在时间的推移中保持安全，即使应用程序不断演进且新的安全威胁不断出现。
- en: Finally, DevOps has improved database management practices by promoting a culture
    of experimentation and innovation. DevOps teams are encouraged to try new approaches
    and technologies and to continually look for ways to improve their processes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，DevOps通过促进实验和创新的文化，改善了数据库管理实践。DevOps团队被鼓励尝试新的方法和技术，并不断寻求改进其流程的方式。
- en: By experimenting with new database technologies and approaches, DevOps teams
    can identify new ways to optimize performance, improve scalability, and enhance
    security. This helps to ensure that the database remains up to date and capable
    of meeting the evolving needs of the application.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过尝试新的数据库技术和方法，DevOps团队可以发现优化性能、提升可扩展性和增强安全性的新的途径。这有助于确保数据库保持最新，并能够满足应用程序不断变化的需求。
- en: In conclusion, DevOps has had a significant impact on database management practices,
    transforming the way that databases are designed, deployed, and maintained. By
    promoting collaboration, automation, and a culture of continuous improvement,
    DevOps teams can ensure that their databases are optimized for performance, scalability,
    and security and that they remain so over time. As applications continue to evolve
    and grow, DevOps will continue to play a critical role in ensuring that databases
    remain a reliable and integral part of the technology stack.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，DevOps对数据库管理实践产生了重大影响，改变了数据库的设计、部署和维护方式。通过促进协作、自动化和持续改进的文化，DevOps团队可以确保他们的数据库在性能、可扩展性和安全性方面得到优化，并保持这种状态。随着应用程序的不断发展和增长，DevOps将继续在确保数据库作为技术栈中的可靠和不可或缺部分方面发挥重要作用。
- en: The role of the database expert in a DevOps-conscious team
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在一个注重DevOps的团队中，数据库专家的角色
- en: A DevOps-practicing team is responsible for building and deploying software
    applications in a fast and efficient manner. The team’s goal is to deliver high-quality
    software that meets business requirements while reducing the time to market. To
    achieve this goal, the team employs various DevOps practices, including continuous
    integration, continuous delivery, and continuous deployment.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一个实践DevOps的团队负责以快速高效的方式构建和部署软件应用程序。团队的目标是交付符合业务需求的高质量软件，同时减少市场发布的时间。为了实现这一目标，团队采用了各种DevOps实践，包括持续集成、持续交付和持续部署。
- en: The role of a database expert in a DevOps-practicing team is to ensure that
    the database infrastructure is reliable, scalable, secure, and performing optimally.
    The database is a critical component of any application, and its performance and
    availability directly impact the application’s performance and availability. Therefore,
    a database expert’s role is crucial in ensuring that the database infrastructure
    meets the team’s requirements and the business’s goals.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践 DevOps 的团队中，数据库专家的角色是确保数据库基础设施的可靠性、可扩展性、安全性和最佳性能。数据库是任何应用程序的关键组成部分，其性能和可用性直接影响应用程序的性能和可用性。因此，数据库专家的角色至关重要，确保数据库基础设施满足团队的需求和业务目标。
- en: Designing and implementing databases
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计和实施数据库
- en: One of the primary responsibilities of a database expert in a DevOps-practicing
    team is to design and implement databases that are efficient, scalable, and easy
    to maintain. The database expert works closely with the application developers
    and infrastructure engineers to understand the application’s requirements and
    the infrastructure’s capabilities. Based on this understanding, the database expert
    designs and implements a database that meets the application’s needs and the infrastructure’s
    requirements.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践 DevOps 的团队中，数据库专家的主要责任之一是设计和实施高效、可扩展且易于维护的数据库。数据库专家与应用程序开发人员和基础设施工程师密切合作，了解应用程序的需求和基础设施的能力。基于此理解，数据库专家设计并实施一个符合应用程序需求和基础设施要求的数据库。
- en: The database expert must consider various factors while designing and implementing
    the database, such as data modeling, indexing, partitioning, and replication.
    The database design should be optimized for performance, scalability, and availability.
    The database expert should also ensure that the database schema is flexible enough
    to accommodate future changes without causing significant disruptions to the application.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计和实施数据库时，数据库专家必须考虑各种因素，如数据建模、索引、分区和复制。数据库设计应优化性能、可扩展性和可用性。数据库专家还应确保数据库模式足够灵活，以适应未来的变化，而不会对应用程序造成重大干扰。
- en: Ensuring high availability and disaster recovery
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确保高可用性和灾难恢复
- en: Another critical responsibility of a database expert in a DevOps-practicing
    team is to ensure high availability and disaster recovery. The database is a critical
    component of the application, and any downtime can cause significant disruptions
    to the business. Therefore, the database expert must ensure that the database
    is highly available and can recover quickly in case of failures or disasters.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践 DevOps 的团队中，数据库专家的另一个关键责任是确保高可用性和灾难恢复。数据库是应用程序的关键组成部分，任何停机都会对业务造成重大影响。因此，数据库专家必须确保数据库具有高可用性，并能够在发生故障或灾难时迅速恢复。
- en: The database expert can achieve high availability by setting up database replicas
    and implementing load balancing. The replicas can be used to handle read requests,
    while the primary database handles write requests. The replicas can also be used
    to provide failover capability in case of a primary database failure. The database
    expert must ensure that the replicas are synchronized and that data consistency
    is maintained across all replicas.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家可以通过设置数据库副本和实施负载均衡来实现高可用性。副本可用于处理读取请求，而主数据库处理写入请求。副本还可用于在主数据库发生故障时提供故障转移能力。数据库专家必须确保副本之间的数据同步，并保持所有副本的数据一致性。
- en: The database expert should also implement a disaster recovery plan to ensure
    that the database can recover quickly in case of disasters such as hardware failures,
    data corruption, or natural disasters. The disaster recovery plan should include
    regular backups, data replication, and failover procedures. The database expert
    should test the disaster recovery plan regularly to ensure that it is effective
    and can be executed quickly in case of a disaster.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家还应实施灾难恢复计划，以确保数据库在发生硬件故障、数据损坏或自然灾害等灾难时能够快速恢复。灾难恢复计划应包括定期备份、数据复制和故障转移程序。数据库专家应定期测试灾难恢复计划，确保其有效并能在灾难发生时迅速执行。
- en: Performance tuning
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能调优
- en: Performance is a critical factor in the success of any application. The performance
    of the database directly impacts the performance of the application. Therefore,
    a database expert in a DevOps-practicing team must ensure that the database is
    performing optimally.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 性能是任何应用程序成功的关键因素。数据库的性能直接影响应用程序的性能。因此，在实践 DevOps 的团队中，数据库专家必须确保数据库性能达到最佳。
- en: The database expert can achieve optimal performance by monitoring the database
    and identifying bottlenecks. They should monitor various performance metrics,
    such as CPU usage, memory usage, disk I/O, and network I/O. The database expert
    should analyze the performance metrics and identify the areas of the database
    that are causing performance issues.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家可以通过监控数据库并识别瓶颈来实现最佳性能。他们应该监控各种性能指标，如 CPU 使用率、内存使用率、磁盘 I/O 和网络 I/O。数据库专家应该分析性能指标并识别导致性能问题的数据库区域。
- en: The database expert can optimize the database performance by tuning the queries,
    optimizing the database parameters, and indexing the database. They should also
    ensure that the database statistics are up to date and the database is not fragmented.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家可以通过调整查询、优化数据库参数和为数据库建立索引来优化数据库性能。他们还应该确保数据库统计信息是最新的，且数据库没有碎片化。
- en: Security and compliance
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性与合规性
- en: Security and compliance are critical factors in any application. The database
    contains sensitive data, and the database expert must ensure that the database
    is secure and compliant with regulations.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性和合规性是任何应用程序中的关键因素。数据库包含敏感数据，数据库专家必须确保数据库的安全性并符合相关法规。
- en: The database expert can ensure database security by implementing access controls,
    encryption, and auditing. They should ensure that only authorized users can access
    the database and that the data is encrypted in transit and at rest. The database
    expert should also implement auditing to track the changes made to the database.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家可以通过实施访问控制、加密和审计来确保数据库的安全性。他们应该确保只有授权用户才能访问数据库，并且数据在传输和静态时都被加密。数据库专家还应实施审计，以跟踪对数据库所做的更改。
- en: The database expert should ensure that the database is compliant with regulations
    such as HIPAA, PCI-DSS, and GDPR. They should ensure that the database is audited
    regularly to ensure compliance with regulations.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家应确保数据库符合 HIPAA、PCI-DSS 和 GDPR 等法规。他们应该确保定期审计数据库，以确保其符合相关法规。
- en: Automation
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化
- en: Automation is a critical factor in the success of any DevOps-practicing team.
    The database expert can help automate database deployment, patching, and scaling
    using tools such as Ansible, Chef, or Puppet. Automation can reduce the time to
    market and ensure that the database is deployed consistently across all environments.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化是任何实践 DevOps 团队成功的关键因素。数据库专家可以通过使用 Ansible、Chef 或 Puppet 等工具帮助自动化数据库部署、修补和扩展。自动化可以缩短上市时间，并确保数据库在所有环境中一致地部署。
- en: The database expert can also automate database backup and recovery procedures.
    Automation can ensure that backups are taken regularly and that the backups are
    stored in a secure location. Automation can also ensure that the backup and recovery
    procedures are tested regularly.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家还可以自动化数据库备份和恢复程序。自动化可以确保定期进行备份，并将备份存储在安全的位置。自动化还可以确保定期测试备份和恢复程序。
- en: Note
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: One example of database automation is the use of scripts or tools to automate
    routine tasks such as database backups, schema changes, or data migrations.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库自动化的一个例子是使用脚本或工具来自动化常规任务，如数据库备份、模式更改或数据迁移。
- en: For instance, you could use a tool such as Jenkins to automate the execution
    of scripts that perform regular database backups at predefined intervals. You
    could also use a tool such as Flyway to automate the application of database schema
    changes across different environments, such as moving from development to production.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用 Jenkins 等工具自动执行脚本，以在预定间隔进行常规数据库备份。您还可以使用 Flyway 等工具自动化跨不同环境（例如从开发到生产）应用数据库模式更改。
- en: Another example is the use of chatbots or other conversational interfaces to
    automate database queries and updates. These tools can allow users to interact
    with databases using natural language, reducing the need for manual data entry
    and improving the efficiency of data retrieval and analysis.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是使用聊天机器人或其他对话界面来自动化数据库查询和更新。这些工具可以让用户使用自然语言与数据库交互，减少手动数据输入的需求，提高数据检索和分析的效率。
- en: Overall, database automation can help reduce manual labor, increase efficiency,
    and improve the accuracy and consistency of database operations.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，数据库自动化可以帮助减少人工劳动，提高效率，并改善数据库操作的准确性和一致性。
- en: A proven methodology with quantifiable benefits
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一种经过验证且具有可量化好处的方法
- en: DevOps has brought significant benefits to database management, enabling organizations
    to deliver high-quality software faster and more reliably. The following are some
    of the quantifiable benefits that DevOps has brought to database management.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps为数据库管理带来了显著的好处，使组织能够更快、更可靠地交付高质量软件。以下是DevOps为数据库管理带来的一些可量化的好处。
- en: Faster time to market
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更快的上市时间
- en: One of the primary benefits of DevOps is faster time to market. By automating
    processes and improving collaboration between teams, DevOps has enabled organizations
    to deliver database changes faster, reducing the time to market and increasing
    business agility.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的主要好处之一是更快的上市时间。通过自动化流程和改善团队之间的协作，DevOps使组织能够更快地交付数据库变更，缩短上市时间，增强业务灵活性。
- en: In traditional database management, database changes were often made manually,
    which was a slow and error-prone process. DevOps practices such as CI/CD have
    enabled teams to automate the build, test, and deployment of database changes,
    reducing the time required to deliver changes to production.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的数据库管理中，数据库变更通常是手动进行的，这是一个缓慢且容易出错的过程。CI/CD等DevOps实践使团队能够自动化构建、测试和部署数据库变更，从而减少了将变更推送到生产环境所需的时间。
- en: For example, instead of manually creating database instances and running scripts
    to apply changes, teams can use automated tools such as Jenkins or TeamCity to
    run tests and deploy changes to multiple environments. This has enabled organizations
    to release changes more frequently, with shorter feedback loops and faster time
    to market.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，团队可以使用Jenkins或TeamCity等自动化工具来运行测试并将变更部署到多个环境，而不是手动创建数据库实例和运行脚本应用变更。这使组织能够更频繁地发布变更，缩短反馈周期，更快地上市。
- en: Good to know – why a faster time to market is important
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 了解为何更快的上市时间如此重要
- en: 'A faster time to market can be critical in today’s fast-paced business environment
    for several reasons:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 更快的上市时间在今天快节奏的商业环境中可能至关重要，原因有几点：
- en: '**• Competitive advantage**: Getting a product to market quickly can give a
    company a competitive advantage over its rivals. This is especially true in industries
    where product life cycles are short, and new products are constantly being introduced.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 竞争优势**：快速将产品推向市场可以使公司在竞争对手中获得竞争优势。这在产品生命周期短、不断推出新产品的行业尤为重要。'
- en: '**• Revenue generation**: The faster a product is launched, the sooner a company
    can start generating revenue from it. This is important because revenue is the
    lifeblood of any business, and the sooner a new product can start generating revenue,
    the better it is for the company’s bottom line.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 收入生成**：产品上市越快，公司就能越早从中开始收入。这一点很重要，因为收入是任何企业的生命线，新产品能越快开始产生收入，对公司的底线越有好处。'
- en: '**• Customer satisfaction**: In many cases, customers are eagerly waiting for
    new products or features. By delivering a product to market faster, a company
    can meet this demand and keep its customers satisfied.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 客户满意度**：在许多情况下，客户急切期待新产品或功能。通过更快地将产品推向市场，公司可以满足这种需求并保持客户满意。'
- en: '**• Reduced development costs**: The longer a product takes to develop, the
    more it costs. By shortening the development cycle, a company can reduce the costs
    of the development cycle, which can help improve profitability.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 降低开发成本**：产品开发时间越长，成本就越高。通过缩短开发周期，公司可以减少开发成本，这有助于提高盈利能力。'
- en: A faster time to market allows companies to respond more quickly to changes
    in the market and customer demands, stay ahead of the competition, and generate
    revenue more quickly.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 更快的上市时间允许企业更快地响应市场变化和客户需求，领先竞争对手，并更快地实现收入。
- en: Improved quality
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提高质量
- en: Another benefit of DevOps is improved quality. By using automated testing and
    CI/CD pipelines, DevOps has enabled teams to catch errors and defects earlier
    in the development cycle, reducing the risk of bugs and defects in production.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的另一个好处是提高质量。通过使用自动化测试和 CI/CD 流水线，DevOps使得团队能够在开发周期的早期捕捉到错误和缺陷，减少了生产环境中出现漏洞和缺陷的风险。
- en: In traditional database management, database changes were often tested manually,
    which was a time-consuming and error-prone process. With DevOps, teams can use
    automated testing tools, such as Selenium or JMeter, to run tests and validate
    changes, catching errors early in the development cycle.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的数据库管理中，数据库更改通常需要手动测试，这个过程既耗时又容易出错。通过 DevOps，团队可以使用自动化测试工具，如 Selenium 或 JMeter，来运行测试并验证更改，从而在开发周期的早期捕捉错误。
- en: By catching errors earlier in the development cycle, teams can reduce the risk
    of bugs and defects in production, improving the quality of database changes.
    This has enabled organizations to deliver software with fewer defects, resulting
    in higher customer satisfaction and lower support costs.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在开发周期的早期捕捉错误，团队可以减少生产环境中出现漏洞和缺陷的风险，从而提高数据库更改的质量。这使得组织能够交付更少缺陷的软件，提升了客户满意度并降低了支持成本。
- en: Good to know – why improved code quality is important
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 了解一下——为什么提高代码质量很重要
- en: 'The reasons improved code quality is important are as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 提高代码质量重要的原因如下：
- en: '**• Reduced errors and bugs**: High-quality code is less likely to contain
    errors and bugs, which can cause crashes, security vulnerabilities, and other
    issues. By improving code quality, businesses can reduce the risk of these issues
    occurring, which can improve the overall reliability and stability of their software.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 减少错误和漏洞**：高质量的代码不太可能包含错误和漏洞，这些问题可能导致崩溃、安全漏洞和其他问题。通过提高代码质量，企业可以减少这些问题发生的风险，从而提升软件的整体可靠性和稳定性。'
- en: '**• Improved maintainability**: High-quality code is typically easier to maintain
    and update, as it is well organized and well documented and adheres to established
    coding standards. This can reduce the time and effort required to make changes
    to the code base, which can lead to cost savings and improved productivity.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 改善可维护性**：高质量的代码通常更容易维护和更新，因为它结构清晰、文档齐全并遵循既定的编码标准。这可以减少修改代码库所需的时间和精力，从而节省成本并提高生产力。'
- en: '**• Faster development cycles**: Improved code quality can also lead to faster
    development cycles, as it reduces the time required to identify and fix errors
    and bugs. This can help businesses get new features and products to market more
    quickly, improving their competitive advantage.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 更快的开发周期**：提高代码质量还可以加快开发周期，因为它减少了识别和修复错误和漏洞所需的时间。这可以帮助企业更快地将新功能和产品推向市场，提升其竞争优势。'
- en: '**• Better user experience**: High-quality code can also improve the user experience,
    as it can reduce the likelihood of crashes, errors, and other issues that can
    frustrate users. By improving the user experience, businesses can improve customer
    satisfaction and retention.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 更好的用户体验**：高质量的代码还可以改善用户体验，因为它能够减少崩溃、错误和其他可能让用户沮丧的问题。通过改善用户体验，企业可以提高客户满意度和客户保持率。'
- en: Improved code quality can lead to reduced errors and bugs, improved maintainability,
    faster development cycles, and a better user experience. These benefits can improve
    the overall reliability, stability, and competitiveness of businesses that rely
    on software.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 提高代码质量可以减少错误和漏洞，改善可维护性，加快开发周期，并提供更好的用户体验。这些好处能够提升依赖软件的企业的整体可靠性、稳定性和竞争力。
- en: Reduced downtime
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 减少停机时间
- en: DevOps practices such as continuous monitoring and automated backups have helped
    to reduce downtime caused by database failures or maintenance activities. By monitoring
    databases in real time and detecting issues proactively, teams can prevent downtime
    caused by database failures.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 实践，如持续监控和自动备份，帮助减少了因数据库故障或维护活动导致的停机时间。通过实时监控数据库并主动检测问题，团队能够防止因数据库故障引起的停机。
- en: Additionally, by automating backups and disaster recovery processes, organizations
    can reduce the time required to recover from database failures, minimizing the
    impact on business operations. This has enabled organizations to maintain high
    levels of uptime, improving business continuity and reducing the risk of revenue
    loss.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过自动化备份和灾难恢复过程，组织可以减少从数据库故障中恢复所需的时间，从而最小化对业务运营的影响。这使得组织能够保持高水平的正常运行时间，提升业务连续性并减少收入损失的风险。
- en: 'Good to know: Why improved availability is important'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 值得了解：为什么提高可用性很重要
- en: 'The reasons improved availability is important are as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 提高可用性的重要原因如下：
- en: '**• Meeting customer demand**: Availability refers to the ability of a product
    or service to be accessible and ready for use when needed. If a product or service
    is not available when customers need it, it can lead to dissatisfaction and lost
    sales. By improving availability, businesses can meet customer demand and improve
    customer satisfaction.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 满足客户需求**：可用性指的是产品或服务在需要时可访问并准备好使用的能力。如果产品或服务在客户需要时无法提供，可能会导致不满和销售损失。通过提高可用性，企业可以满足客户需求并提高客户满意度。'
- en: '**• Maximizing revenue**: Improved availability can also lead to increased
    revenue. If a product or service is consistently available, it can help generate
    revenue continuously. Conversely, if a product or service is frequently unavailable,
    it can lead to lost revenue and missed opportunities.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 最大化收入**：提高可用性还可以带来收入增加。如果产品或服务始终可用，它可以持续生成收入。相反，如果产品或服务经常无法使用，可能会导致收入损失和机会错失。'
- en: '**• Optimal resource utilization**: Improved availability can also help businesses
    better utilize their resources. If a product or service is consistently available,
    it can reduce the need for additional resources to compensate for downtime or
    delays. This can help businesses operate more efficiently and reduce costs.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 优化资源利用**：提高可用性还可以帮助企业更好地利用其资源。如果产品或服务始终可用，可以减少因停机或延迟而需要额外资源的情况。这有助于企业更高效地运营并降低成本。'
- en: '**• Competitive advantage**: Availability can also be a competitive advantage.
    If a business can consistently provide a product or service that is available
    when competitors cannot, it can help differentiate the business and attract customers.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 竞争优势**：可用性也可以成为竞争优势。如果一个企业能够在竞争对手无法提供产品或服务时，始终如一地提供可用的产品或服务，那么它可以帮助企业与众不同并吸引顾客。'
- en: Improved availability can help businesses meet customer demand, maximize revenue,
    optimize resource utilization, and gain a competitive advantage.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 提高可用性有助于企业满足客户需求，最大化收入，优化资源利用，并获得竞争优势。
- en: Increased scalability
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可扩展性增强
- en: DevOps has enabled organizations to scale their database infrastructure more
    effectively by automating the provisioning and deployment of database instances
    and using cloud-based infrastructure that can be rapidly provisioned and scaled
    up or down as needed. With DevOps, teams can automate the creation and configuration
    of database instances, enabling them to rapidly provision new instances as needed.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps使得组织通过自动化数据库实例的配置和部署，以及使用可以迅速配置和按需扩展的云基础设施，更有效地扩展其数据库基础设施。借助DevOps，团队可以自动化数据库实例的创建和配置，使得他们能够根据需要快速配置新实例。
- en: For example, if an organization experiences a sudden increase in traffic or
    user demand, DevOps practices such as IaC and automated scaling can be used to
    quickly provision additional database resources to handle the increased load.
    This has enabled organizations to scale their database infrastructure more effectively,
    reducing the risk of performance issues and downtime caused by resource constraints.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一个组织经历了突如其来的流量或用户需求增加，DevOps实践如基础设施即代码（IaC）和自动化扩展可以用来快速配置额外的数据库资源，以应对增加的负载。这使得组织能够更有效地扩展数据库基础设施，减少因资源限制而导致的性能问题和停机风险。
- en: Good to know – why improved scalability is important
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 值得了解 – 为什么提高可扩展性很重要
- en: 'The reasons improved scalability is important are as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 提高可扩展性的重要原因如下：
- en: '**• Handling variable workloads**: The cloud allows businesses to handle variable
    workloads by scaling resources up or down as needed. This means businesses can
    quickly respond to changes in demand, ensuring that they have the resources they
    need to operate efficiently without overprovisioning or wasting resources.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 处理可变工作负载**：云可以通过根据需求上下调整资源来帮助企业处理可变工作负载。这意味着企业可以迅速应对需求变化，确保拥有高效运营所需的资源，而不会过度配置或浪费资源。'
- en: '**• Cost-effective**: Scalability in the cloud can be cost-effective as it
    allows businesses to pay only for the resources they need at any given time. This
    means they can avoid the cost of overprovisioning and can scale down when demand
    is low, saving money on unused resources.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 成本效益**：云中的可扩展性具有成本效益，因为它允许企业只为任何时刻所需的资源付费。这意味着它们可以避免过度配置的成本，并在需求低时缩减规模，从而节省未使用资源的费用。'
- en: '**• Improved performance**: Scalability can also improve the performance of
    applications and services by ensuring that they have sufficient resources to operate
    efficiently. This can help businesses meet performance requirements and deliver
    a better user experience.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 性能提升**：可扩展性还可以通过确保应用程序和服务拥有足够的资源以高效运行，从而提高性能。这有助于企业满足性能要求并提供更好的用户体验。'
- en: '**• Business agility**: The ability to scale quickly and easily in the cloud
    can improve business agility, allowing businesses to respond more quickly to changing
    market conditions and customer demands. This can help businesses stay competitive
    and adapt to new opportunities.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 业务敏捷性**：在云端快速且轻松地扩展的能力可以提高业务的敏捷性，使企业能够更快地应对市场条件和客户需求的变化。这有助于企业保持竞争力并适应新机会。'
- en: Scalability is especially important in the cloud because it allows businesses
    to handle variable workloads, operate cost-effectively, improve performance, and
    improve business agility. By leveraging the scalability of the cloud, businesses
    can optimize their operations, reduce costs, and deliver better services to their
    customers.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展性在云中尤其重要，因为它使企业能够处理可变工作负载、提高成本效益、提升性能和增强业务敏捷性。通过利用云的可扩展性，企业可以优化运营、降低成本，并为客户提供更好的服务。
- en: Improved security
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性提升
- en: By integrating security testing and validation into the development process,
    DevOps has helped to improve the security of database environments, reducing the
    risk of data breaches and other security incidents. DevOps practices such as automated
    security testing, vulnerability scanning, and compliance validation can be used
    to detect and address security issues early in the development cycle.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将安全测试和验证融入开发过程，DevOps帮助提高了数据库环境的安全性，减少了数据泄露和其他安全事件的风险。DevOps实践，如自动化安全测试、漏洞扫描和合规验证，可以在开发周期的早期检测并解决安全问题。
- en: Additionally, by automating the deployment of security updates and patches,
    organizations can reduce the time required to address security vulnerabilities,
    minimizing the risk of data breaches and other security incidents.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过自动化安全更新和补丁的部署，组织可以减少处理安全漏洞所需的时间，最小化数据泄露和其他安全事件的风险。
- en: DevOps has also enabled organizations to implement security best practices such
    as least-privilege access and separation of duties, reducing the risk of security
    incidents caused by human error or malicious intent. This has helped organizations
    to improve the security of their database environments, protecting sensitive data
    and reducing the risk of reputational damage and regulatory fines.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps还使组织能够实施最佳安全实践，如最小权限访问和职责分离，减少了因人为错误或恶意意图引发的安全事件的风险。这有助于组织提高数据库环境的安全性，保护敏感数据，减少声誉损害和合规罚款的风险。
- en: The merging of these two worlds has brought significant benefits to database
    management, enabling organizations to deliver high-quality software faster and
    more reliably. The quantifiable benefits of DevOps in database management include
    a faster time to market, improved quality, reduced downtime, increased scalability,
    and improved security. These benefits have enabled organizations to improve business
    agility, reduce costs, and improve customer satisfaction, making DevOps an essential
    practice for modern software development.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个领域的融合为数据库管理带来了显著的好处，使得组织能够更快、更可靠地交付高质量的软件。DevOps 在数据库管理中的可量化好处包括更快的市场推出时间、提高的质量、减少的停机时间、增强的可扩展性和改进的安全性。这些好处使得组织能够提升业务敏捷性、降低成本并提高客户满意度，使
    DevOps 成为现代软件开发中不可或缺的实践。
- en: Good to know – why improved software security is important
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 了解一下——为什么提升软件安全性很重要
- en: 'The reasons improved software security is important are as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 提高软件安全性的重要原因如下：
- en: '**• Protection of sensitive data**: Many software applications handle sensitive
    user data, such as personal information, financial information, and intellectual
    property. Improved software security ensures that this data is protected from
    unauthorized access or theft.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 保护敏感数据**：许多软件应用程序处理敏感的用户数据，如个人信息、财务信息和知识产权。提高软件安全性确保这些数据不被未经授权的访问或盗窃。'
- en: '**• Prevention of cyber-attacks**: Cyber-attacks are becoming more sophisticated
    and frequent, and the damage they cause can be severe. Improved software security
    measures can prevent these attacks from happening, or at least reduce their impact.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 防止网络攻击**：网络攻击变得越来越复杂且频繁，造成的损害可能非常严重。改进的软件安全措施可以防止这些攻击发生，或者至少减少它们的影响。'
- en: '**• Compliance with regulations**: Many industries are subject to regulations
    that require specific security measures to be in place. Improved software security
    can help ensure compliance with these regulations.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 符合规定要求**：许多行业都需要遵守规定，这些规定要求实施特定的安全措施。提高软件安全性有助于确保符合这些规定。'
- en: '**• Reputation management**: If a software application is compromised and user
    data is stolen, the reputation of the company responsible for the software can
    be damaged. Improved software security measures can help prevent these types of
    incidents and protect a company’s reputation.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**• 声誉管理**：如果软件应用程序被攻破并且用户数据被盗，负责该软件的公司的声誉可能会受到损害。提高软件安全性措施可以帮助防止这些类型的事件，保护公司的声誉。'
- en: '**Cost savings**: Improving software security can help reduce the cost of dealing
    with security breaches and other related incidents. The cost of fixing security
    vulnerabilities and dealing with the aftermath of a breach can be significant,
    so investing in improved security up front can lead to significant cost savings
    in the long run.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**成本节省**：提高软件安全性可以帮助减少处理安全漏洞和其他相关事件的成本。修复安全漏洞和应对泄露事件的后果可能非常昂贵，因此在前期投资提升安全性，可以在长期内节省大量成本。'
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Database experts play a critical role in a DevOps-practicing team by ensuring
    that the database infrastructure is reliable, scalable, secure, and performing
    optimally. The database expert’s responsibilities include designing and implementing
    databases, ensuring high availability and disaster recovery, performance tuning,
    security and compliance, and automation. The database expert works closely with
    the application developers and infrastructure engineers to ensure that the database
    meets the application’s needs and the infrastructure’s requirements.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库专家在实践 DevOps 的团队中扮演着关键角色，确保数据库基础设施可靠、可扩展、安全且性能最佳。数据库专家的职责包括设计和实施数据库、确保高可用性和灾难恢复、性能调优、安全性和合规性以及自动化。数据库专家与应用开发人员和基础设施工程师密切合作，确保数据库满足应用程序的需求和基础设施的要求。
- en: By working closely with the DevOps-practicing team, the database expert can
    help ensure that the application is deployed quickly and reliably and that the
    application meets the business’s requirements. The database expert’s in-depth
    technical knowledge is critical in ensuring that the database infrastructure is
    optimized for performance, scalability, and availability and that the database
    is secure and compliant with regulations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过与实施DevOps的团队紧密合作，数据库专家可以帮助确保应用程序快速、可靠地部署，并且应用程序满足业务需求。数据库专家的深厚技术知识对于确保数据库基础设施在性能、可扩展性和可用性方面得到优化，以及确保数据库的安全性和符合监管要求至关重要。
- en: In conclusion, the role of a database expert in a DevOps-practicing team is
    crucial in ensuring the success of the application. The database expert’s knowledge
    of database design, administration, and optimization can help the team deliver
    high-quality software that meets business requirements while reducing the time
    to market.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，数据库专家在实施DevOps的团队中的角色至关重要，确保应用程序的成功。数据库专家在数据库设计、管理和优化方面的知识，可以帮助团队交付符合业务需求的高质量软件，同时减少上市时间。
- en: In the next chapter, we will dissect the complex yet essential subject of cloud
    migration.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将剖析一个复杂但至关重要的主题——云迁移。
- en: 'Part 2: Persisting Data in the Cloud'
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：在云中持久化数据
- en: This part will provide an overview of the evolution of how different database
    technologies had to evolve from static data centers to remain relevant in the
    modern, dynamic world of the cloud. Different types of databases reacted and changed
    differently. We will review the most common technologies, starting from traditional
    SQL to modern data lakes. We will detail each evolutionary step with data structure
    examples, implementation best practices, architectural designs, and the most common
    use cases, highlighting its relevance to day-to-day work.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分将概述不同数据库技术如何从静态数据中心发展，才能在现代动态的云环境中保持相关性。不同类型的数据库反应和变化各不相同。我们将回顾最常见的技术，从传统的SQL数据库开始，直到现代的数据湖。我们将通过数据结构示例、最佳实践、架构设计和最常见的应用场景，详细介绍每一个演变步骤，突出它们与日常工作的重要性。
- en: 'This part comprises the following chapters:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 4*](B19315_04.xhtml#_idTextAnchor069), *Data(base) Evolution*'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第四章*](B19315_04.xhtml#_idTextAnchor069)，*数据库演变*'
- en: '[*Chapter 5*](B19315_05.xhtml#_idTextAnchor095), *Relational Databases*'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第五章*](B19315_05.xhtml#_idTextAnchor095)，*关系型数据库*'
- en: '[*Chapter 6*](B19315_06.xhtml#_idTextAnchor104), *Non-Relational Databases*'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第六章*](B19315_06.xhtml#_idTextAnchor104)，*非关系型数据库*'
- en: '[*Chapter 7*](B19315_07.xhtml#_idTextAnchor138), *AI, ML, and Big Data*'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第七章*](B19315_07.xhtml#_idTextAnchor138)，*人工智能、机器学习与大数据*'
