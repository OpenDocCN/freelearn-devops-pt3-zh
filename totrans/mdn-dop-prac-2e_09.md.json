["```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\ \nmodern-devops\n$ cd modern-devops/ch9\n```", "```\n$ cd ~/modern-devops/ch9/setup-ansible-terraform\n$ vim terraform.tfvars\n```", "```\n$ terraform init\n$ terraform plan -out ansible.tfplan\n$ terraform apply ansible.tfplan\n```", "```\nresource \"azurerm_virtual_machine\" \"control_node\" {\n  name                  = \"ansible-control-node\"\n  ...\n  os_profile {\n   ...\n   custom_data    = base64encode(data.template_file.control_node_init.rendered)\n  }\n}\nresource \"azurerm_virtual_machine\" \"web\" {\n  name                  = \"web\" \n  ...\n  os_profile {\n   ...\n   custom_data    = base64encode(data.template_file.managed_nodes_init.rendered)\n  }\n}\nresource \"azurerm_virtual_machine\" \"db\" {\n  name                  = \"db\"\n  ...\n  os_profile {\n   ...\n   custom_data    = base64encode(data.template_file.managed_nodes_init.rendered)\n  }\n}\n```", "```\ndata \"template_file\" \"managed_nodes_init\" {\n  template = file(\"managed-nodes-user-data.sh\")\n  vars = {\n    admin_password = var.admin_password\n  }\n}\ndata \"template_file\" \"control_node_init\" {\n  template = file(\"control-node-user-data.sh\")\n  vars = {\n    admin_password = var.admin_password\n  }\n}\n```", "```\n#!/bin/sh\nsudo useradd -m ansible\necho 'ansible ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers\nsudo su - ansible << EOF\nssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa\nprintf \"${admin_password}\\n${admin_password}\" | sudo passwd ansible\nEOF\n```", "```\n#!/bin/sh\nsudo useradd -m ansible\necho 'ansible ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers\nsudo su - ansible << EOF\nssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa\nsleep 120\nssh-keyscan -H web >> ~/.ssh/known_hosts\nssh-keyscan -H db >> ~/.ssh/known_hosts\nsudo apt update -y && sudo apt install -y sshpass\necho \"${admin_password}\" | sshpass ssh-copy-id ansible@web\necho \"${admin_password}\" | sshpass ssh-copy-id ansible@db\nEOF\n```", "```\n$ ssh ssh_admin@104.46.61.213\n```", "```\n$ sudo su - ansible\n$ ssh web\n```", "```\n$ sudo apt update\n$ sudo apt install software-properties-common -y\n$ sudo apt-add-repository --yes --update ppa:ansible/ansible\n$ sudo apt install ansible -y\n```", "```\n$ ansible --version\nansible 2.9.27\n```", "```\n$ sudo chown -R ansible:ansible /etc/ansible\n```", "```\n$ sudo su - ansible\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\ \nmodern-devops\n$ cd ~/modern-devops/ch9/ansible-exercise\n```", "```\n[webservers]\nweb ansible_host=web\n[dbservers]\ndb ansible_host=db\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\n```", "```\n[defaults]\ninventory = ./hosts\nhost_key_checking = False\n```", "```\n$ ansible-inventory --list -y\nall:\n  children:\n    dbservers:\n      hosts:\n        db:\n          ansible_host: db\n          ansible_python_interpreter: /usr/bin/python3\n    ungrouped: {}\n    webservers:\n      hosts:\n        web:\n          ansible_host: web\n          ansible_python_interpreter: /usr/bin/python3\n```", "```\n$ ansible --list-hosts all\n  hosts (2):\n    web\n    db\n```", "```\n$ ansible --list-hosts webservers\n  hosts (1):\n    web\n```", "```\n$ ansible all -m ping\nweb | SUCCESS => {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\ndb | SUCCESS => {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n```", "```\n$ ansible <options> <inventory>\n```", "```\n$ ansible -m shell -a \"uname\" all\ndb | CHANGED | rc=0 >>\nLinux\nweb | CHANGED | rc=0 >>\nLinux\n```", "```\n---\n  - hosts: all\n    tasks:\n      - name: Ping all servers\n        action: ping\n```", "```\n$ ansible-playbook ping.yaml --syntax-check\nplaybook: ping.yaml\n```", "```\n$ ansible-playbook ping.yaml\nPLAY [all] *******************************************\nTASK [Gathering Facts] *******************************\nok: [db]\nok: [web]\nTASK [Ping all servers] ******************************\nok: [db]\nok: [web]\nPLAY RECAP *******************************************\ndb : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nweb : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ cd ~/modern-devops/ch9/lamp-stack\n```", "```\n...\n<?php\nmysqli_connect('db', 'testuser', 'Password@1') or die('Could not connect the database : \nUsername or password incorrect');\necho 'Database Connected successfully';\n?>\n...\n```", "```\n---\n- hosts: webservers:dbservers\n  become: true\n  tasks:\n    - name: Update apt packages\n      apt: update_cache=yes cache_valid_time=3600\n```", "```\n---\n- hosts: webservers\n  become: true\n  tasks:\n    - name: Install packages\n      apt:\n        name:\n        - apache2\n        - php\n        - libapache2-mod-php\n        - php-mysql\n        update_cache: yes\n        cache_valid_time: 3600\n        state: present\n    - name: Start and Enable Apache service\n      service: name=apache2 state=started enabled=yes\n```", "```\n---\n- hosts: dbservers\n  become: true\n  tasks:\n  - name: Install packages\n    apt:\n      name:\n      - python-pymysql\n      - mysql-server\n      update_cache: yes\n      cache_valid_time: 3600\n      state: present\n  - name: Start and enable MySQL service\n    service:\n      name: mysql\n      state: started\n      enabled: true\n```", "```\n---\n- hosts: webservers\n  become: true\n  tasks:\n  - name: Delete index.html file\n    file:\n      path: /var/www/html/index.html\n      state: absent\n  - name: Upload application file\n    copy:\n      src: index.php\n      dest: /var/www/html\n      mode: 0755\n    notify:\n      - Restart Apache\n  handlers:\n  - name: Restart Apache\n    service: name=apache2 state=restarted\n```", "```\n---\n- hosts: dbservers\n  become: true\n  vars:\n    mysql_root_password: \"Password@1\"\n  tasks:\n  - name: Set the root password\n    copy:\n      src: client.my.cnf\n      dest: \"/root/.my.cnf\"\n      mode: 0600\n    notify:\n      - Restart MySQL\n  - name: Create a test user\n    mysql_user:\n      name: testuser\n      password: \"Password@1\"\n      login_user: root\n      login_password: \"{{ mysql_root_password }}\"\n      state: present\n      priv: '*.*:ALL,GRANT'\n      host: '%'\n  - name: Remove all anonymous user accounts\n    mysql_user:\n      name: ''\n      host_all: yes\n      state: absent\n      login_user: root\n      login_password: \"{{ mysql_root_password }}\"\n    notify:\n    - Restart MySQL\n  - name: Remove the MySQL test database\n    mysql_db:\n      name: test\n      state: absent\n      login_user: root\n      login_password: \"{{ mysql_root_password }}\"\n    notify:\n    - Restart MySQL\n  - name: Change bind address\n    lineinfile:\n      path:  /etc/mysql/mysql.conf.d/mysqld.cnf\n      regexp: ^bind-address\n      line: 'bind-address            = 0.0.0.0'\n    notify:\n    - Restart MySQL\n  handlers:\n  - name: Restart MySQL\n    service: name=mysql state=restarted\n```", "```\n[client]\nuser=root\npassword=Password@1\n```", "```\n---\n- import_playbook: apt-update.yaml\n- import_playbook: install-webserver.yaml\n- import_playbook: install-dbserver.yaml\n- import_playbook: setup-webservers.yaml\n- import_playbook: setup-dbservers.yaml\n```", "```\n$ ansible-playbook playbook.yaml\nPLAY [webservers:dbservers] **************************\nTASK [Gathering Facts] *******************************\nok: [web]\nok: [db]\nTASK [Update apt packages] ***************************\nok: [web]\nok: [db]\nPLAY [webservers] ************************************\nTASK [Gathering Facts] *******************************\nok: [web]\nTASK [Install packages] ******************************\nchanged: [web]\nTASK [Start and Enable Apache service] ***************\nok: [web]\nPLAY [dbservers] *************************************\nTASK [Gathering Facts] *******************************\nok: [db]\nTASK [Install packages] ******************************\nchanged: [db]\nTASK [Start and enable MySQL service] ****************\nok: [db]\nPLAY [webservers] ************************************\nTASK [Gathering Facts] *******************************\nok: [web]\nTASK [Delete index.html file] ************************\nchanged: [web]\nTASK [Upload application file] ***********************\nchanged: [web]\nRUNNING HANDLER [Restart Apache] *********************\nchanged: [web]\nPLAY [dbservers] *************************************\nTASK [Gathering Facts] *******************************\nok: [db]\nTASK [Set the root password] *************************\nchanged: [db]\nTASK [Update the cnf file] ***************************\nchanged: [db]\nTASK [Create a test user] ****************************\nchanged: [db]\nTASK [Remove all anonymous user accounts] ************\nok: [db]\nTASK [Remove the MySQL test database] ***************\nok: [db]\nTASK [Change bind address] **************************\nchanged: [db]\nRUNNING HANDLER [Restart MySQL] **********************\nchanged: [db]\nPLAY RECAP *******************************************\ndb: ok=13   changed=6    unreachable=0    failed=0    \nskipped=0    rescued=0    ignored=0\nweb: ok=9    changed=4    unreachable=0    failed=0    \nskipped=0    rescued=0    ignored=0\n```", "```\n$ curl web\n<html>\n<head>\n<title>PHP to MQSQL</title>\n</head>\n<body>Database Connected successfully</body>\n</html>\n```", "```\nmysql_root_password: bar\n```", "```\n  - name: Remove the MySQL test database\n    mysql_db:\n      name: test\n      state: absent\n      login_user: root\n      login_password: \"{{ mysql_root_password }}\"\n```", "```\nregion:\n  - europe-west1\n  - europe-west2\n  - europe-west3\n```", "```\nregion: \" {{ region[0] }} \"\n```", "```\nfoo:\n  bar: one\n  baz: two\n```", "```\nbar: {{ foo.bar }}\n```", "```\nbar: {{ foo[bar] }}\n```", "```\n$ ansible -m setup webservers\nweb | SUCCESS => {\n    \"ansible_facts\": {\n        \"ansible_all_ipv4_addresses\": [\n            \"10.0.2.5\"\n        ],\n        ...\n        \"ansible_hostname\": \"web\",\n```", "```\n$ cd ~/modern-devops/ch9/vars-exercise\n```", "```\n- hosts: webservers\n  tasks:\n    - name: Get free space\n      command: free -m \n      register: free_space\n      ignore_errors: true\n    - name: Print the free space from the previous task\n      debug:\n        msg: \"{{ free_space }}\"\n```", "```\n$ ansible-playbook register.yaml\nPLAY [webservers] ************************************\nTASK [Gathering Facts] *******************************\nok: [web]\nTASK [Get free space] ********************************\nchanged: [web]\nTASK [Print the free space from the previous task] ***\nok: [web] => {\n    \"msg\": {\n       \"stdout\": \"              total        used        \nfree      shared  buff/cache   available\\nMem:           3.3G        \n170M        2.6G        2.2M        642M        3.0G\\nSwap:           \n 0B          0B          0B\",\n   }\nPLAY RECAP ****************************************\nweb: ok=3    changed=1    unreachable=0    failed=0    skipped=0\n    rescued=0    ignored=0\n```", "```\n...\n<?php\nmysqli_connect('db', '{{ mysql_user }}', '{{ mysql_password }}') \nor die('Could not connect the database : Username or password \nincorrect');\necho 'Database Connected successfully';\n?>\n...\n```", "```\n<playbook>.yaml\nroles/\n    <role>/\n        tasks/\n        handlers/\n        library/\n        files/\n        templates/\n        vars/\n        defaults/\n        meta/\n```", "```\n$ cd ~/modern-devops/ch9/lamp-stack-roles\n```", "```\n├── ansible.cfg\n├── hosts\n├── output.log\n├── playbook.yaml\n```", "```\n└── roles\n    ├── apache\n    │   ├── defaults\n    │   │   └── main.yaml\n    │   ├── handlers\n    │   │   └── main.yaml\n    │   ├── tasks\n    │   │   ├── install-apache.yaml\n    │   │   ├── main.yaml\n    │   │   └── setup-apache.yaml\n    │   └── templates\n    │       └── index.php.j2\n```", "```\n    ├── common\n    │   └── tasks\n    │       └── main.yaml\n```", "```\n    └── mysql\n        ├── defaults\n        │   └── main.yaml\n        ├── files\n        ├── handlers\n        │   └── main.yaml\n        ├── tasks\n        │   ├── install-mysql.yaml\n        │   ├── main.yaml\n        │   └── setup-mysql.yaml\n        └── templates\n            └── client.my.cnf.j2\n```", "```\n---\n- include: install-apache.yaml\n- include: setup-apache.yaml\n```", "```\n[client]\nuser=root\npassword={{ mysql_root_password }}\n```", "```\n---\n- include: install-mysql.yaml\n- include: setup-mysql.yaml\n```", "```\n---\n- hosts: webservers\n  become: true\n  roles:\n    - common\n    - apache\n- hosts: dbservers\n  become: true\n  roles:\n    - common\n    - mysql\n```", "```\n$ ansible-playbook playbook.yaml\nPLAY [webservers]\n...\nPLAY [dbservers]\n...\nPLAY RECAP\ndb: ok=10 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nweb:  ok=7 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible-playbook playbook.yaml --extra-vars \"mysql_user=foo mysql_password=bar@123\"\n```", "```\n...\nPLAY RECAP\ndb: ok=9 changed=1 unreachable=0 failed= skipped=0 rescued=0 ignored=0\nweb: ok=7 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n...\n<body>Database Connected successfully</body>\n...\n```"]