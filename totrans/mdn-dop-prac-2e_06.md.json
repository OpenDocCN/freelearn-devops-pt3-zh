["```\n$ gcloud services enable container.googleapis.com\n```", "```\n$ gcloud container clusters create cluster-1 --zone us-central1-a\n```", "```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\nmodern-devops \n$ cd modern-devops/ch6\n```", "```\n$ cd ~/modern-devops/ch6/deployments/\n```", "```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n```", "```\n$ kubectl apply -f nginx-replica-set.yaml\n```", "```\n$ kubectl get replicaset\nNAME    DESIRED   CURRENT   READY   AGE\nnginx   3         3         0       9s\n```", "```\n$ kubectl get replicaset\nNAME    DESIRED   CURRENT   READY   AGE\nnginx   3         3         3       1m10s\n```", "```\n$ kubectl get pod\nNAME          READY   STATUS    RESTARTS   AGE\nnginx-6qr9j   1/1     Running   0          1m32s\nnginx-7hkqv   1/1     Running   0          1m32s\nnginx-9kvkj   1/1     Running   0          1m32s\n```", "```\n$ kubectl delete pod nginx-9kvkj && kubectl get pod\npod \"nginx-9kvkj\" deleted\nNAME          READY   STATUS    RESTARTS   AGE\nnginx-6qr9j   1/1     Running   0          8m34s\nnginx-7hkqv   1/1     Running   0          8m34s\nnginx-9xbdf   1/1     Running   0          5s\n```", "```\n$ kubectl delete replicaset nginx\n```", "```\n$ kubectl get replicaset\nNo resources found in default namespace.\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n```", "```\n$ kubectl apply -f nginx-deployment.yaml\n```", "```\n$ kubectl get deployment\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   3/3     3            3           6s\n```", "```\n$ kubectl get replicaset\nNAME               DESIRED   CURRENT   READY   AGE\nnginx-6799fc88d8   3         3         3       11s\n```", "```\n$ kubectl get pod\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-6799fc88d8-d52mj   1/1     Running   0          15s\nnginx-6799fc88d8-dmpbn   1/1     Running   0          15s\nnginx-6799fc88d8-msvxw   1/1     Running   0          15s\n```", "```\n$ kubectl set image deployment/nginx nginx=nginx:1.16.1\ndeployment.apps/nginx image updated\n```", "```\n$ kubectl rollout status deployment nginx\ndeployment \"nginx\" successfully rolled out\n```", "```\n$ kubectl annotate deployment nginx kubernetes.io/change-cause\\\n=\"Updated nginx version to 1.16.1\" --overwrite=true\ndeployment.apps/nginx annotated\n```", "```\n$ kubectl rollout history deployment nginx\ndeployment.apps/nginx\nREVISION  CHANGE-CAUSE\n1         <none>\n2         Updated nginx version to 1.16.1\n```", "```\n$ kubectl rollout undo deployment nginx && kubectl rollout status deployment nginx\ndeployment.apps/nginx rolled back\nWaiting for deployment \"nginx\" rollout to finish: 2 out of 3 new replicas have been \nupdated...\nWaiting for deployment \"nginx\" rollout to finish: 1 old replicas are pending \ntermination...\ndeployment \"nginx\" successfully rolled out\n```", "```\n$ kubectl rollout history deployment nginx\ndeployment.apps/nginx\nREVISION  CHANGE-CAUSE\n2         Updated nginx version to 1.16.1\n3         <none>\n```", "```\n...\nspec:\n  replicas: 3\n  strategy:\n    type: Recreate\n...\n```", "```\n$ kubectl apply -f nginx-recreate.yaml && kubectl get replicaset -w\ndeployment.apps/nginx configured\nNAME               DESIRED   CURRENT   READY   AGE\nnginx-6799fc88d8   0         0         0       0s\nnginx-6889dfccd5   0         3         3       7m42s\nnginx-6889dfccd5   0         0         0       7m42s\nnginx-6799fc88d8   3         0         0       1s\nnginx-6799fc88d8   3         3         0       2s\nnginx-6799fc88d8   3         3         3       6s\n```", "```\n$ kubectl apply -f nginx-deployment.yaml && kubectl get replicaset -w\ndeployment.apps/nginx configured \nNAME               DESIRED   CURRENT   READY   AGE\nnginx-6799fc88d8   3         3         3       49s\nnginx-6889dfccd5   1         1         1       4s\nnginx-6799fc88d8   2         2         2       53s\nnginx-6889dfccd5   2         2         2       8s\nnginx-6799fc88d8   1         1         1       57s\nnginx-6889dfccd5   3         3         3       11s\nnginx-6799fc88d8   0         0         0       60s\n```", "```\n...\nspec:\n  replicas: 10\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n...\n```", "```\n$ kubectl apply -f nginx-ramped-slow-rollout.yaml \\\n&& kubectl rollout status deployment nginx\ndeployment.apps/nginx configured\n...\ndeployment \"nginx\" successfully rolled out\n```", "```\n$ kubectl set image deployment nginx nginx=nginx:1.16.1 \\\n&& kubectl get replicaset -w\ndeployment.apps/nginx image updated\nNAME               DESIRED   CURRENT   READY   AGE\nnginx-6799fc88d8   10        10        10      3m51s\nnginx-6889dfccd5   1         1         0       0s\nnginx-6799fc88d8   9         10        10      4m\n. . . . . . . . . .  . .  . .  .\nnginx-6889dfccd5   8         8         8       47s\nnginx-6799fc88d8   2         3         3       4m38s\nnginx-6889dfccd5   9         9         8       47s\nnginx-6799fc88d8   2         2         2       4m38s\nnginx-6889dfccd5   9         9         9       51s\nnginx-6889dfccd5   10        9         9       51s\nnginx-6799fc88d8   1         2         2       4m42s\nnginx-6889dfccd5   10        10        10      55s\nnginx-6799fc88d8   0         1         1       4m46s\nnginx-6799fc88d8   0         0         0       4m46s\n```", "```\n...\nspec:\n  replicas: 10\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 25%\n...\n```", "```\n$ kubectl apply -f nginx-best-effort-controlled-rollout.yaml \\ \n&& kubectl get replicaset -w\ndeployment.apps/nginx configured\nNAME               DESIRED   CURRENT   READY   AGE\nnginx-6799fc88d8   2         0         0       20m\nnginx-6889dfccd5   8         8         8       16m\nnginx-6799fc88d8   2         2         1       20m\nnginx-6889dfccd5   7         8         8       16m\n. . . . . . . . . . . . . . . .\nnginx-6889dfccd5   1         1         1       16m\nnginx-6799fc88d8   9         9         8       20m\nnginx-6889dfccd5   0         1         1       16m\nnginx-6799fc88d8   10        9         8       20m\nnginx-6889dfccd5   0         0         0       16m\nnginx-6799fc88d8   10        10        10      20m\n```", "```\n$ kubectl create deployment redis --image=redis\n```", "```\n$ cd ~/modern-devops/ch6/services/\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: redis\n  name: redis\nspec:\n  ports:\n  - port: 6379\n    protocol: TCP\n    targetPort: 6379\n  selector:\n    app: redis\n```", "```\n$ kubectl apply -f redis-clusterip.yaml\n```", "```\n$ kubectl get service redis\nNAME   TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE\nredis  ClusterIP  10.12.6.109   <none>       6379/TCP   16s\n```", "```\n$ kubectl run busybox --rm --restart Never -it --image=busybox\n/ #\n```", "```\n/ # telnet 10.96.118.99 6379\nConnected to 10.96.118.99\n```", "```\n/ # nslookup 10.96.118.99\nServer:         10.96.0.10\nAddress:        10.96.0.10:53\n99.118.96.10.arpa name = redis.default.svc.cluster.local\n```", "```\n/ # telnet redis 6379\nConnected to redis\n```", "```\n/ # telnet redis.default 6379\nConnected to redis.default\n```", "```\n$ kubectl run flask-app --image=<your_dockerhub_user>/python-flask-redis\n```", "```\n$ kubectl get pod flask-app\nNAME        READY   STATUS    RESTARTS   AGE\nflask-app   1/1     Running   0          19s\n```", "```\n...\nspec:\n  ports:\n  - port: 5000\n    protocol: TCP\n    targetPort: 5000\n  selector:\n    run: flask-app\n  type: NodePort\n```", "```\n$ kubectl apply -f flask-nodeport.yaml\n```", "```\n$ kubectl get service flask-app\nNAME       TYPE      CLUSTER-IP    EXTERNAL-IP  PORT(S)         AGE\nflask-app  NodePort  10.3.240.246  <none>       5000:32618/TCP  9s\n```", "```\n$ kubectl get nodes\nNAME            STATUS   ROLES    AGE   VERSION\ngke-node-1dhh   Ready    <none>   17m   v1.26.15-gke.4901\ngke-node-7lhl   Ready    <none>   17m   v1.26.15-gke.4901\ngke-node-zwg1   Ready    <none>   17m   v1.26.15-gke.4901\n```", "```\n$ gcloud compute ssh gke-node-1dhh\n```", "```\n$ curl localhost:32618\nHi there! This page was last visited on 2023-06-26, 08:37:50.\n```", "```\n$ exit\nConnection to 35.202.82.74 closed.\n```", "```\n...\nspec:\n  type: LoadBalancer\n...\n```", "```\n$ kubectl apply -f flask-loadbalancer.yaml\n```", "```\n$ kubectl get svc flask-app\nNAME      TYPE         CLUSTER-IP   EXTERNAL-IP PORT(S)\nflask-app LoadBalancer 10.3.240.246 34.71.95.96 5000:32618\n```", "```\n$ curl 34.71.95.96:5000\nHi there! This page was last visited on 2023-06-26, 08:37:50.\n```", "```\n$ kubectl apply -f \\\nhttps://raw.githubusercontent.com/kubernetes/ingress-nginx\\\n/controller-v1.8.0/deploy/static/provider/cloud/deploy.yaml\n```", "```\n$ kubectl apply -f flask-clusterip.yaml\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: flask-app\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  defaultBackend:\n    service:\n      name: flask-app\n      port:\n        number: 5000\n```", "```\n$ kubectl apply -f flask-basic-ingress.yaml\n```", "```\n$ kubectl get ingress flask-app\nNAME        CLASS    HOSTS   ADDRESS   PORTS   AGE\nflask-app   <none>   *                 80      40s\n```", "```\n$ kubectl get svc ingress-nginx-controller -n ingress-nginx\nNAME                     TYPE         EXTERNAL-IP\ningress-nginx-controller LoadBalancer 34.120.27.34\n```", "```\n$ curl 34.120.27.34\nHi there! This page was last visited on 2023-06-26, 09:28:26.\n```", "```\n$ kubectl delete ingress flask-app\n```", "```\n$ kubectl run nginx-v1 --image=bharamicrosystems/nginx:v1\n$ kubectl run nginx-v2 --image=bharamicrosystems/nginx:v2\n```", "```\n$ kubectl expose pod nginx-v1 --port=80\n$ kubectl expose pod nginx-v2 --port=80\n```", "```\n...\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /v1\n        pathType: Prefix\n        backend:\n          service:\n            name: nginx-v1\n            port:\n              number: 80\n      - path: /v2\n        pathType: Prefix\n        backend:\n          service:\n            name: nginx-v2\n            port:\n              number: 80\n```", "```\n$ kubectl apply -f nginx-app-path-ingress.yaml\n```", "```\n$ kubectl get ingress nginx-app -w\nNAME        CLASS    HOSTS   ADDRESS         PORTS   AGE\nnginx-app   <none>   *       34.120.27.34    80      114s\n```", "```\n$ curl 34.120.27.34/v1/\nThis is version 1\n$ curl 34.120.27.34/v2/\nThis is version 2\n```", "```\n...\nspec:\n  rules:\n  - host: v1.example.com\n    http:\n      paths:\n      - path: \"/\"\n        pathType: Prefix\n        backend:\n          service:\n            name: nginx-v1\n            port:\n              number: 80\n  - host: v2.example.com\n    http:\n      paths:\n      - path: \"/\"\n        pathType: Prefix\n        backend:\n          service:\n            name: nginx-v2\n            port:\n              number: 80\n```", "```\n$ kubectl apply -f nginx-app-host-ingress.yaml\n$ kubectl get ingress\nNAME       HOSTS                          ADDRESS       PORTS\nnginx-app  v1.example.com,v2.example.com  34.120.27.34  80\n```", "```\n<Ingress_External_IP> v1.example.com v2.example.com\n```", "```\n$ curl v1.example.com\nThis is version 1\n$ curl v2.example.com\nThis is version 2\n```", "```\n...\nspec:\n  replicas: 1\n  template:\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n...\n```", "```\n$ kubectl apply -f nginx-autoscale-deployment.yaml\n```", "```\n$ kubectl expose deployment nginx --port 80 --type LoadBalancer\n$ kubectl get svc nginx\nNAME  TYPE         CLUSTER-IP   EXTERNAL-IP   PORT(S)\nnginx LoadBalancer 10.3.243.225 34.123.234.57 80:30099/TCP\n```", "```\n$ kubectl autoscale deployment nginx --cpu-percent=25 --min=1 --max=5\n```", "```\n$ kubectl get deployment nginx -w\n```", "```\n$ kubectl get hpa nginx -w\n```", "```\n$ hey -z 120s -c 100 http://34.123.234.57\n```", "```\n$ kubectl get hpa nginx -w\nNAME    REFERENCE          TARGETS         MINPODS   MAXPODS   REPLICAS   AGE\nnginx   deployment/nginx   <unknown>/25%   1         5         1          32s\nnginx   deployment/nginx   46%/25%         1         5         1          71s\nnginx   deployment/nginx   46%/25%         1         5         2          92s\nnginx   deployment/nginx   92%/25%         1         5         4          2m2s\nnginx   deployment/nginx   66%/25%         1         5         5          2m32s\nnginx   deployment/nginx   57%/25%         1         5         5          2m41s\nnginx   deployment/nginx   27%/25%         1         5         5          3m11s\nnginx   deployment/nginx   23%/25%         1         5         5          3m41s\nnginx   deployment/nginx   0%/25%          1         5         4          4m23s\nnginx   deployment/nginx   0%/25%          1         5         2          5m53s\nnginx   deployment/nginx   0%/25%          1         5         1          6m30s\n```", "```\n$ kubectl get deployment nginx -w\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   1/1     1            1           18s\nnginx   1/2     1            1           77s\nnginx   2/2     2            2           79s\nnginx   2/4     2            2           107s\nnginx   3/4     4            3           108s\nnginx   4/4     4            4           109s\nnginx   4/5     4            4           2m17s\nnginx   5/5     5            5           2m19s\nnginx   4/4     4            4           4m23s\nnginx   2/2     2            2           5m53s\nnginx   1/1     1            1           6m30s\n```", "```\n$ cd ~/modern-devops/ch6/statefulsets/\n```", "```\n$ gcloud compute disks create nginx-manual \\\n--size 50GB --type pd-ssd --zone us-central1-a\nCreated [https://www.googleapis.com/compute/v1/projects/<project_id>/zones/us-central1-a/\ndisks/nginx-manual].\nNAME          ZONE           SIZE_GB  TYPE    STATUS\nnginx-manual  us-central1-a  50       pd-ssd  READY\n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: nginx-manual-pv\n  labels:\n    usage: nginx-manual-disk\nspec:\n  capacity:\n    storage: 50G\n  accessModes:\n    - ReadWriteOnce\n  gcePersistentDisk:\n    pdName: nginx-manual\n    fsType: ext4\n```", "```\n$ kubectl apply -f nginx-manual-pv.yaml\n```", "```\n$ kubectl get pv\nNAME             CAPACITY  ACCESS MODES  RECLAIM POLICY  STATUS\nnginx-manual-pv  50G       RWO           Retain          Available\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-manual\n  labels:\n    app: nginx-manual\nspec:\n  ports:\n  - port: 80\n    name: web\n  clusterIP: None\n  selector:\n    app: nginx-manual\n```", "```\n$ kubectl apply -f nginx-manual-service.yaml\n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: nginx-manual\nspec:\n  selector:\n    matchLabels:\n      app: nginx-manual\n  serviceName: \"nginx-manual\"\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx-manual\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        volumeMounts:\n        - name: html\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: html\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      resources:\n        requests:\n          storage: 40Gi\n      selector:\n        matchLabels:\n          usage: nginx-manual-disk\n```", "```\n$ kubectl apply -f nginx-manual-statefulset.yaml\n```", "```\n$ kubectl get pvc\nNAME                 STATUS VOLUME           CAPACITY  ACCESS MODES\nhtml-nginx-manual-0  Bound  nginx-manual-pv  50G       RWO\n```", "```\n$ kubectl get pv\nNAME             CAPACITY  ACCESS MODES  RECLAIM POLICY  STATUS\nnginx-manual-pv  50G       RWO           Retain          Bound\n```", "```\n$ kubectl get pod\nNAME             READY   STATUS    RESTARTS   AGE\nnginx-manual-0   1/1     Running   0          14s\n```", "```\n$ kubectl exec -it nginx-manual-0 -- /bin/bash\nroot@nginx-manual-0:/# cd /usr/share/nginx/html/\nroot@nginx-manual-0:/usr/share/nginx/html# echo 'Hello, world' > index.html\nroot@nginx-manual-0:/usr/share/nginx/html# exit\n```", "```\n$ kubectl delete pod nginx-manual-0\n$ kubectl get pod\nNAME             READY   STATUS              RESTARTS   AGE\nnginx-manual-0   1/1     Running             0          3s\n$ kubectl exec -it nginx-manual-0 -- /bin/bash\nroot@nginx-manual-0:/# cd /usr/share/nginx/html/ && cat index.html\nHello, world\nroot@nginx-manual-0:/usr/share/nginx/html# exit\n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast\nprovisioner: kubernetes.io/gce-pd\nparameters:\n  type: pd-ssd\n```", "```\n$ kubectl apply -f fast-storage-class.yaml\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-dynamic\n  labels:\n    app: nginx-dynamic\nspec:\n  ports:\n  - port: 80\n    name: web\n  clusterIP: None\n  selector:\n    app: nginx-dynamic\n```", "```\n$ kubectl apply -f nginx-dynamic-service.yaml\n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: nginx-dynamic\nspec:\n...\n  serviceName: \"nginx-dynamic\"\n  template:\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        volumeMounts:\n        - name: html\n          mountPath: /usr/share/nginx/html\n...\n  volumeClaimTemplates:\n  - metadata:\n      name: html\n    spec:\n      storageClassName: \"fast\"\n      accessModes: [ \"ReadWriteOnce\" ]\n      resources:\n        requests:\n          storage: 40Gi\n```", "```\n$ kubectl apply -f nginx-dynamic-statefulset.yaml\n```", "```\n$ kubectl get pvc\nNAME                  STATUS  VOLUME    CAPACITY  ACCESS MODES  STORAGECLASS\nhtml-nginx-dynamic-0  Bound   pvc-6b78  40Gi      RWO           fast\n$ kubectl get pv\nNAME      CAPACITY  ACCESS MODES  RECLAIM POLICY  STATUS  CLAIM\npvc-6b78  40Gi      RWO           Delete          Bound   default/html-nginx-dynamic-0\n```", "```\n$ kubectl exec -it nginx-dynamic-0 -- bash\nroot@nginx-dynamic-0:/# cd /usr/share/nginx/html/\nroot@nginx-dynamic-0:/usr/share/nginx/html# echo 'Hello, dynamic world' > index.html\nroot@nginx-dynamic-0:/usr/share/nginx/html# exit\n```", "```\n$ kubectl delete pod nginx-dynamic-0\n$ kubectl get pod nginx-dynamic-0\nNAME              READY   STATUS    RESTARTS   AGE\nnginx-dynamic-0   1/1     Running   0          13s\n$ kubectl exec -it nginx-dynamic-0 -- bash\nroot@nginx-dynamic-0:/# cd /usr/share/nginx/html/\nroot@nginx-dynamic-0:/usr/share/nginx/html# cat index.html\nHello, dynamic world\nroot@nginx-dynamic-0:/usr/share/nginx/html# exit\n```", "```\n$ alias k='kubectl'\n$ k get node\nNAME                 STATUS   ROLES    AGE     VERSION\nkind-control-plane   Ready    master   5m7s    v1.26.1\nkind-worker          Ready    <none>   4m33s   v1.26.1\n```", "```\n$ kubectl run nginx --image=nginx --dry-run=client -o yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: nginx\n  name: nginx\nspec:\n  containers:\n  - image: nginx\n    name: nginx\n    resources: {}\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n```", "```\n$ alias kdr='kubectl --dry-run=client -o yaml'\n```", "```\n$ kdr create deployment nginx --image=nginx\n```", "```\n$ alias kap='kubectl apply -f'\n$ alias kad='kubectl delete -f'\n```", "```\n$ kap nginx-deployment.yaml\n$ kad nginx-deployment.yaml\n```", "```\n$ kubectl run busybox-test --image=busybox -it --rm --restart=Never -- <cmd>\n```", "```\n$ alias kbb='kubectl run busybox-test --image=busybox -it --rm --restart=Never --'\n```", "```\n$ kbb sh\n/ #\n```", "```\n$ alias kgp='kubectl get pods'\n$ alias kgn='kubectl get nodes'\n$ alias kgs='kubectl get svc'\n$ alias kdb='kubectl describe'\n$ alias kl='kubectl logs'\n$ alias ke='kubectl exec -it'\n```", "```\n$ echo \"source <(kubectl completion bash)\" >> ~/.bashrc\n```"]