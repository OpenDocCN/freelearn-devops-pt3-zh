- en: <st c="0">2</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">2</st>
- en: <st c="2">Security Challenges of the DevOps Workflow</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">DevOps 工作流的安全挑战</st>
- en: <st c="44">As organizations embrace DevOps practices, they face new security
    challenges that will require them to enhance DevOps to DevSecOps.</st> <st c="177">These
    challenges arise from the increased speed of development and deployment, the automation
    of processes, and the collaboration between development and operations teams.</st>
    <st c="349">Traditional security approaches that have served organizations well
    in the past may prove inadequate in addressing these emerging issues.</st> <st
    c="487">Because of this, organizations must adapt their security practices and
    cultivate a security-focused culture to protect their applications, systems,</st>
    <st c="635">and data.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="44">随着组织采用 DevOps 实践，他们面临着新的安全挑战，这些挑战将要求他们将 DevOps 转变为 DevSecOps。</st>
    <st c="177">这些挑战源于开发和部署速度的提高、过程的自动化以及开发和运维团队之间的协作。</st> <st c="349">过去服务良好的传统安全方法可能不足以应对这些新兴问题。</st>
    <st c="487">因此，组织必须调整其安全实践，并培养以安全为重点的文化，以保护其应用程序、系统</st> <st c="635">和数据。</st>
- en: <st c="644">In this chapter, we will explore the unique security risks and threats
    that arise as a result of implementing DevOps practices.</st> <st c="773">We will
    examine how organizations can begin to address these challenges effectively.</st>
    <st c="858">By the end of this chapter, you will have gained a solid understanding
    of the following</st> <st c="946">key areas:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="644">在本章中，我们将探讨实施 DevOps 实践所带来的独特安全风险和威胁。</st> <st c="773">我们将研究组织如何有效地应对这些挑战。</st>
    <st c="858">在本章结束时，您将对以下</st> <st c="946">关键领域有一个扎实的理解：</st>
- en: <st c="956">Security challenges</st> <st c="977">of DevOps</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="956">DevOps 的安全挑战</st> <st c="977">（Security challenges of DevOps）</st>
- en: <st c="986">The case for DevSecOps and</st> <st c="1014">continuous security</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="986">支持 DevSecOps 和</st> <st c="1014">持续安全</st>
- en: <st c="1033">The challenges of</st> <st c="1052">continuous security</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1033">持续安全的挑战</st> <st c="1052">（continuous security）</st>
- en: <st c="1071">DevSecOps and supply</st> <st c="1093">chain security</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1071">DevSecOps 和供应</st> <st c="1093">链安全</st>
- en: <st c="1107">These topics will equip you with valuable insights into why DevOps
    alone is insufficient and why the adoption of DevSecOps is necessary.</st> <st
    c="1245">Additionally, we will highlight the pitfalls that organizations should
    be aware of in their DevSecOps journey.</st> <st c="1356">Prepare to navigate
    the realm of DevSecOps, where security takes center stage, and the challenges
    of the modern development landscape are</st> <st c="1494">addressed head-on.</st>
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1107">这些主题将为您提供宝贵的见解，帮助您理解为什么仅依靠 DevOps 不足以应对挑战，以及为何必须采用 DevSecOps。</st>
    <st c="1245">此外，我们还将强调组织在 DevSecOps 过程中应当注意的陷阱。</st> <st c="1356">准备好导航 DevSecOps
    的领域，在这里，安全占据核心地位，现代开发环境的挑战将</st> <st c="1494">迎刃而解。</st>
- en: <st c="1512">Technical requirements</st>
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1512">技术要求</st>
- en: <st c="1535">To follow along with the instructions in this chapter, you will
    need</st> <st c="1605">the following:</st>
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1535">要跟随本章的说明，您需要</st> <st c="1605">以下内容：</st>
- en: <st c="1619">A PC with an</st> <st c="1633">internet connection</st>
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1619">一台带有</st> <st c="1633">互联网连接的 PC</st>
- en: <st c="1652">An active</st> <st c="1663">Azure subscription</st>
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1652">一个有效的</st> <st c="1663">Azure 订阅</st>
- en: <st c="1681">An Azure</st> <st c="1691">DevOps organization</st>
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1681">一个 Azure</st> <st c="1691">DevOps 组织</st>
- en: <st c="1710">A GitHub</st> <st c="1720">Enterprise organization</st>
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1710">一个 GitHub</st> <st c="1720">企业组织</st>
- en: <st c="1743">Security challenges of DevOps</st>
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1743">DevOps 的安全挑战</st>
- en: <st c="1773">As many organizations evolve</st> <st c="1802">their software delivery
    practices (as discussed in the previous chapter), they still cling to traditional
    security processes that struggle to keep up with the fast pace of the DevOps world.</st>
    <st c="1993">According</st> <st c="2002">to Dynatrace’s 2021</st> **<st c="2023">Chief
    Information Security Officer</st>** <st c="2057">(</st>**<st c="2059">CISO</st>**<st
    c="2063">) report, 63% of CISOs agree that the shift to modern delivery models
    such as DevOps has seriously impacted their ability to detect and manage software
    vulnerabilities!</st> <st c="2233">This is not surprising, as DevOps is all about
    speed, agility, and continuous improvement.</st> <st c="2324">Without evolving
    our security processes and proper security integration, it is like driving a Formula
    One car without brakes – you are bound to crash and burn sooner</st> <st c="2490">or
    later.</st>
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2499">Note</st>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2504">Dynatrace’s 2021 CISO report can be accessed using this</st> <st
    c="2561">link:</st> [<st c="2567">https://assets.dynatrace.com/en/docs/report/2021-global-ciso-report.pdf</st>](https://assets.dynatrace.com/en/docs/report/2021-global-ciso-report.pdf)<st
    c="2638">.</st>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2639">In the upcoming chapters of this book, we will discover how organizations
    can adapt their security practices, embrace automation, and nurture a culture
    of security awareness.</st> <st c="2815">However, before we embark on that journey,
    let us take a moment to examine why traditional security falters and is limited
    in the fast-paced realm</st> <st c="2962">of DevOps.</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2972">Understanding the limitations of traditional security in a fast-paced
    DevOps world</st>
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '<st c="3055">In the DevOps world, speed</st> <st c="3082">is of the essence.</st>
    <st c="3102">However, with this speed comes a potential downside: an increase
    in vulnerabilities that are created and that can slip through the cracks.</st>
    <st c="3241">As organizations try to keep up with the demand for faster releases
    and quicker iterations, the risk of accidentally introducing vulnerabilities rises</st>
    <st c="3392">in tandem.</st>'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3402">As the software development and deployment speeds increase, so
    do the vulnerabilities that are created and that slip through the cracks.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3539">Traditional security struggles to keep up with this pace as it
    is often manual in its approach.</st> <st c="3636">Manual security checks and
    reviews are time-consuming, error-prone, and not scalable in a DevOps environment.</st>
    <st c="3746">For example, consider a company such as WeChat that deploys about
    1,000 times to production every day; very few organizations have the human resources
    to manually assess 1,000 releases on a daily basis!</st> <st c="3949">Also, the
    rigid task of performing compliance checks often falls to the security team, which
    can sometimes make them less popular</st> <st c="4079">with others.</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4091">Note</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4096">Companies who have implemented cloud-native techniques have managed
    to achieve significant</st> <st c="4187">speed, agility, and scalability, as mentioned</st>
    <st c="4234">here:</st> [<st c="4240">https://learn.microsoft.com/en-us/dotnet/architecture/cloud-native/definition</st>](https://learn.microsoft.com/en-us/dotnet/architecture/cloud-native/definition)<st
    c="4317">.</st>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4096">已实施云原生技术的公司已成功实现了显著的</st> <st c="4187">速度、敏捷性和可扩展性，如下所述：</st> [<st
    c="4240">https://learn.microsoft.com/en-us/dotnet/architecture/cloud-native/definition</st>](https://learn.microsoft.com/en-us/dotnet/architecture/cloud-native/definition)<st
    c="4317">。</st>
- en: <st c="4318">Also, traditional security approaches face limitations in supporting
    the modern technologies commonly used by organizations that follow a DevOps software
    delivery model.</st> <st c="4489">In a DevOps world, more development teams are
    taking on operational responsibilities.</st> <st c="4575">They are not only responsible
    for writing the code but also for deploying and managing the application.</st>
    <st c="4679">To facilitate this shift, they adopt cloud-native technologies such
    as microservices architecture to develop and deploy independent services, they
    employ containerization for easy deployment and scalability, and they manage infrastructure
    using code.</st> <st c="4930">However, traditional security approaches are not
    equipped to handle the unique challenges posed by these modern technologies.</st>
    <st c="5056">Securing these technologies requires</st> <st c="5092">a shift in
    the approach to security and the adoption of</st> <st c="5149">newer toolsets.</st>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4318">此外，传统的安全方法在支持采用 DevOps 软件交付模型的组织常用的现代技术时面临着局限性。</st> <st c="4489">在
    DevOps 的世界里，越来越多的开发团队承担起了运营职责。</st> <st c="4575">他们不仅负责编写代码，还负责部署和管理应用程序。</st>
    <st c="4679">为了促进这一转变，他们采用了云原生技术，如微服务架构，来开发和部署独立的服务，使用容器化技术实现便捷的部署和扩展性，并通过代码管理基础设施。</st>
    <st c="4930">然而，传统的安全方法并没有能力应对这些现代技术所带来的独特挑战。</st> <st c="5056">保护这些技术需要</st>
    <st c="5092">在安全方法上的转变，并采用</st> <st c="5149">更新的工具集。</st>
- en: <st c="5164">Microservices and containerization</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5164">微服务和容器化</st>
- en: '**<st c="5199">Microservices architecture</st>**<st c="5226">: An approach
    to software development</st> <st c="5264">where the application is built as a
    collection of small, independent services.</st> <st c="5344">Each service can
    work with others, making it simpler to manage and update individually.</st> <st
    c="5432">An example of a microservice is a feedback service to manage user feedback
    which can be reused</st> <st c="5526">by other applications</st> <st c="5549">as
    well.</st>'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="5199">微服务架构</st>**<st c="5226">：一种软件开发方法</st> <st c="5264">将应用程序构建为一组小型、独立的服务。</st>
    <st c="5344">每个服务可以与其他服务协同工作，使得单独管理和更新更加简单。</st> <st c="5432">一个微服务的例子是反馈服务，用于管理用户反馈，可以被其他应用程序重复使用。</st>
    <st c="5526">其他应用程序</st> <st c="5549">也可以使用该服务。</st>'
- en: '**<st c="5557">Containerization</st>**<st c="5574">: A software distribution
    and deployment</st> <st c="5616">approach where applications, along with their
    necessary settings and dependencies, are packaged into a</st> *<st c="5719">container</st>*<st
    c="5728">, ensuring consistent operation across various</st> <st c="5775">computing
    environments.</st>'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="5557">容器化</st>**<st c="5574">：一种软件分发和部署</st> <st c="5616">方法，将应用程序及其必要的设置和依赖项打包成一个</st>
    *<st c="5719">容器</st>*<st c="5728">，确保在各种</st> <st c="5775">计算环境中一致地运行。</st>'
- en: <st c="5798">Another issue with traditional security processes in a DevOps world
    is that security-related activities are often relegated to the final stages of
    the development life cycle (</st>*<st c="5974">Figure 2</st>**<st c="5983">.1</st>*<st
    c="5985">).</st> <st c="5989">It acts like a gatekeeper that stands at the end,
    evaluating the software for security vulnerabilities before it can be released
    or after it has been released.</st> <st c="6149">This approach treats security
    as a separate and detached phase, rather than an integral part of the development
    process, such as functionality</st> <st c="6292">or performance.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5798">在 DevOps 世界中，传统安全流程的另一个问题是，安全相关的活动通常被 relegated 到开发生命周期的最后阶段（</st>*<st
    c="5974">图 2</st>**<st c="5983">.1</st>*<st c="5985">）。</st> <st c="5989">它像一个守门人，站在最后，评估软件在发布前或发布后是否存在安全漏洞。</st>
    <st c="6149">这种方法将安全视为一个独立的阶段，而不是开发过程的一个不可或缺的部分，如功能性</st> <st c="6292">或性能。</st>
- en: '![Figure 2.1 – Traditional security integration in the software development
    workflow](img/B19710_02_1.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
- en: <st c="6425">Figure 2.1 – Traditional security integration in the software development
    workflow</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6507">The consequence of this gatekeeping mentality is that when it comes
    time to deploy the software into production, security suddenly becomes a hurdle.</st>
    <st c="6657">A senior developer once shared with me their experience, saying,
    “</st>*<st c="6723">Everything we do moves quickly and smoothly until we try to
    deploy into production, and that’s when security gets involved!</st>*<st c="6847">”
    This statement perfectly</st> <st c="6874">encapsulates the frustration that can
    arise when traditional security introduces friction in the</st> <st c="6972">DevOps
    process.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6987">Understanding how DevOps increases the attack surface</st>
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="7041">Adopting DevOps practices</st> <st c="7067">introduces new tools
    within organizations (we discussed some of these tools in the first chapter of
    this book).</st> <st c="7180">When utilized well, these tools can greatly enhance
    developer productivity.</st> <st c="7256">However, they also present their own
    set of challenges.</st> <st c="7312">They can lead to an expanded attack surface
    and create opportunities for potential attackers if not properly governed.</st>
    <st c="7431">There are risks associated with inadequate access controls, insecure
    tool configurations, vulnerabilities</st> <st c="7536">within the tools themselves,
    credential management, and insufficient monitoring</st> <st c="7617">and logging.</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7629">Take, for</st> <st c="7639">instance, a typical</st> **<st c="7660">Continuous
    Integration/Continuous Delivery</st>** <st c="7702">(</st>**<st c="7704">CI/CD</st>**<st
    c="7709">) system:</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7719">It has access to an organization’s source code, one of its most</st>
    <st c="7784">prized assets</st>
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="7797">It can generate build artifacts that are deployed to</st> <st c="7851">multiple
    systems</st>
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="7867">It has privileged access to</st> <st c="7896">production environments</st>
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="7919">It has access to service credentials during the</st> <st c="7968">build
    process</st>
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="7981">Such extensive access can pose serious risks if not properly secured.</st>
    <st c="8052">If an attacker is able to exploit a single weakness, they can gain
    access to the software supply chain, inject malware to impact a greater number
    of victims, and access</st> <st c="8221">sensitive data.</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8236">These types of attacks (targeting DevOps tooling) are increasing
    in frequency, and we expect to see an even greater increase in the upcoming years.</st>
    <st c="8385">A 2021 Forrester study found that 57% of organizations have suffered
    from a security incident related to exposure in the DevOps toolchain.</st> <st
    c="8524">This signifies that these tools have become prime targets of attacks
    since they are at the core of critical development processes for</st> <st c="8658">most
    organizations.</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8677">Forrester Report</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8694">Forrester is a well-known market research company that provides
    advice on existing and potential impacts of technology.</st> <st c="8815">For
    more details on the report mentioned earlier, refer</st> <st c="8871">to</st>
    [<st c="8874">https://www.prnewswire.com/news-releases/thycoticcentrify-report-57-of-organizations-suffered-security-incidents-related-to-exposed-secrets-in-devops-301425193.html</st>](https://www.prnewswire.com/news-releases/thycoticcentrify-report-57-of-organizations-suffered-security-incidents-related-to-exposed-secrets-in-devops-301425193.html)<st
    c="9038">.</st>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9039">In addition to this, these tools could also contain vulnerabilities
    of their own that could be exploited.</st> <st c="9146">There have been notable
    vulnerabilities in popular DevOps</st> <st c="9203">toolchains, such as CVE-2016-0792,
    a</st> **<st c="9241">remote code execution</st>** <st c="9262">(</st>**<st c="9264">RCE</st>**<st
    c="9267">) flaw that affected Jenkins, a widely used CI/CD server.</st> <st c="9326">A
    search for any DevOps tool on a public vulnerability database will uncover multiple
    exploitable vulnerabilities dating back over a long period!</st> <st c="9472">However,
    this issue extends beyond the primary tools or platforms.</st> <st c="9539">Most
    of these tools also support vast ecosystems of plugins and extensions, which makes
    it challenging for security teams to determine</st> <st c="9673">the right security
    framework</st> <st c="9703">for them.</st>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9712">Note</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9717">Although DevOps toolsets introduce new risks, they also equip us
    with a range of tools to mitigate risks in the development process, something
    that was challenging in the past.</st> <st c="9895">Security evaluations can be
    performed on code in version control, during peer reviews, and via automated testing.</st>
    <st c="10009">Proper use of these tools can further enhance security within our
    development practices.</st> <st c="10098">We will cover how this can be done in
    the</st> <st c="10140">upcoming chapters.</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10158">The case for DevSecOps</st>
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="10181">As previously discussed, isolating</st> <st c="10216">security
    as a distinct phase within the software development life cycle is not conducive
    to the principles of DevOps, which emphasize speed</st> <st c="10357">and agility.</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10369">For security to be effectively implemented in a DevOps environment,
    it must be seamlessly integrated into every aspect of the workflow.</st>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10505">For security to be effectively implemented in a DevOps environment,
    it must be seamlessly integrated into every aspect of the workflow.</st> <st c="10642">Failure
    to do so would render security unmanageable and</st> <st c="10698">impede scalability.</st>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10717">Embedding security into every workflow means incorporating security
    practices and considerations right from the beginning, rather than treating it
    as a separate task.</st> <st c="10885">This approach is referred to as</st> **<st
    c="10917">DevSecOps</st>**<st c="10926">. The main objective of DevSecOps is to
    enable teams that build and deliver software to identify and address critical
    security issues as early as possible in the development cycle.</st> <st c="11107">To
    achieve this goal, DevSecOps adds a new core practice to the software development
    and delivery process – the practice of</st> **<st c="11231">continuous security</st>**
    <st c="11250">that is embedded into every other</st> <st c="11284">practice (</st>*<st
    c="11295">Figure 2</st>**<st c="11304">.2</st>*<st c="11306">).</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – DevSecOps core practices](img/B19710_02_2.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: <st c="11441">Figure 2.2 – DevSecOps core practices</st>
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11478">But to truly understand</st> <st c="11502">what it takes to implement
    DevSecOps in an effective way that produces expected results, we need to understand
    its critical components – the</st> **<st c="11644">culture</st>**<st c="11651">,
    the</st> **<st c="11657">processes</st>**<st c="11666">, and the</st> **<st c="11676">tooling</st>**<st
    c="11683">. Let’s delve into these</st> <st c="11708">three aspects.</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11722">Understanding the cultural aspect of DevSecOps</st>
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="11769">Sadly, most discussions on DevSecOps</st> <st c="11807">are focused
    mainly on the integration of tools, and perhaps a few processes.</st> <st c="11884">We
    think this could be a contributing factor as to why some organizations are not
    seeing better outcomes from their</st> <st c="12000">DevSecOps initiatives.</st>
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="12022">DevSecOps at its core represents a cultural shift</st>**<st
    c="12072">. In most organizations, there is a clear separation between development,
    operations, and security teams.</st> <st c="12178">The development team is responsible
    for writing code and building applications, the operations team takes care of
    application deployment and configuration, and the security team ensures protection
    for applications</st> <st c="12392">in production.</st>'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12406">The culture of DevSecOps aims to remove the silos between these
    traditionally independent roles.</st> <st c="12504">The aim is to get people to
    work better together and make the whole process of creating software more secure.</st>
    <st c="12614">In this model, all teams are equally responsible for helping the
    business achieve its goal of consistently delivering secure and functional software
    to end users on a continuous basis.</st> <st c="12799">Each team contributes its
    unique expertise in a collaborative effort to achieve this objective, moving away
    from a culture characterized by persistent blame</st> <st c="12956">and avoidance.</st>
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12406">DevSecOps的文化旨在消除这些传统上独立角色之间的孤岛。</st> <st c="12504">目标是让人们更好地协作，使整个软件开发过程更加安全。</st>
    <st c="12614">在这一模式中，所有团队都共同负责帮助企业实现其持续为最终用户提供安全且功能完备的软件的目标。</st> <st c="12799">每个团队都贡献其独特的专业知识，通过协作共同努力实现这一目标，远离一种以持续归咎</st>
    <st c="12956">和回避为特征的文化。</st>
- en: <st c="12970">Culture shift</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12970">文化转变</st>
- en: <st c="12984">This is a significant change in the attitudes, behaviors, values,
    or norms of an organization over time.</st> <st c="13090">It often involves a
    change of leadership styles, operational practices, or</st> <st c="13165">company
    values.</st>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12984">这是组织在一段时间内在态度、行为、价值观或规范上的重大变化。</st> <st c="13090">它通常涉及领导风格、操作实践或</st>
    <st c="13165">公司价值观的变革。</st>
- en: <st c="13180">Eliminating silos and creating</st> <st c="13211">a collective
    focus usually takes time and a lot of organizational work, as it involves changing
    deeply embedded habits, routines, and attitudes.</st> <st c="13357">It can often
    lead to resistance from team members, especially if the changes are not effectively
    communicated or understood.</st> <st c="13482">To be successful, there are several
    components required including senior executive sponsorship, training of teams,
    and modification of team structures.</st> <st c="13634">Let’s look at each of</st>
    <st c="13656">these components:</st>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13180">消除孤岛并创建</st> <st c="13211">集体焦点通常需要时间和大量的组织工作，因为它涉及改变根深蒂固的习惯、常规和态度。</st>
    <st c="13357">这常常会导致团队成员的抵触，尤其是当变革未能有效沟通或被理解时。</st> <st c="13482">要成功实施，必须具备几个关键要素，包括高层领导支持、团队培训和团队结构的调整。</st>
    <st c="13634">让我们来看一下这些要素：</st>
- en: '**<st c="13673">Executive sponsorship</st>**<st c="13695">: Putting</st> *<st
    c="13706">DevSecOps</st>* <st c="13715">into action within an organization isn’t
    a one-off event.</st> <st c="13774">It is a journey that has to begin somewhere.</st>
    <st c="13819">If we were to offer a suggestion, we’d say start by getting senior
    executive sponsorship.</st> <st c="13909">This is needed for alignment with business
    objectives, garnering support from required stakeholders, providing political
    cover for the initiative, and defining and approving the required budget.</st>
    <st c="14104">Most successful security initiatives that achieve organization-wide
    impact are typically those with</st> <st c="14204">executive sponsorship.</st>'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="13673">高层赞助</st>**<st c="13695">：在组织内部将</st> *<st c="13706">DevSecOps</st>*
    <st c="13715">付诸实践不是一次性的事件。</st> <st c="13774">这是一个必须从某个地方开始的旅程。</st> <st c="13819">如果我们要提出建议，我们会说从获得高层领导的支持开始。</st>
    <st c="13909">这是确保与业务目标对齐、获得所需利益相关者的支持、为该举措提供政治保护，并定义和批准所需预算的关键。</st> <st c="14104">大多数成功的安全倡议，能够在整个组织范围内产生影响的，通常都是那些获得</st>
    <st c="14204">高层支持的倡议。</st>'
- en: <st c="14226">Synopsys BSIMM report</st>
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14226">Synopsys BSIMM报告</st>
- en: <st c="14248">The Synopsys</st> **<st c="14262">Building Security In Maturity
    Model</st>** <st c="14297">(</st>**<st c="14299">BSIMM</st>**<st c="14304">) series
    of reports, which provide</st> <st c="14339">a benchmark for software security
    initiatives, highlighted the importance of executive sponsorship and leadership.</st>
    <st c="14455">The latest</st> <st c="14465">report can be found</st> <st c="14486">here:</st>
    [<st c="14492">https://www.synopsys.com/software-integrity/engage/bsimm/bsimm13</st>](https://www.synopsys.com/software-integrity/engage/bsimm/bsimm13)<st
    c="14556">.</st>
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14248">Synopsys</st> **<st c="14262">安全构建成熟度模型</st>** <st c="14297">(</st>**<st
    c="14299">BSIMM</st>**<st c="14304">)系列报告为软件安全倡议提供了一个基准，强调了高层赞助和领导力的重要性。</st>
    <st c="14455">最新的</st> <st c="14465">报告可以在这里找到：</st> [<st c="14492">https://www.synopsys.com/software-integrity/engage/bsimm/bsimm13</st>](https://www.synopsys.com/software-integrity/engage/bsimm/bsimm13)<st
    c="14556">。</st>
- en: '**<st c="14557">Reviewing team structures and metrics</st>**<st c="14595">:
    A DevSecOps culture challenges the way traditional security teams integrate with
    the development and operations teams to serve the needs of the wider business.</st>
    <st c="14758">Instead of maintaining a siloed team structure with conflicting
    metrics which results in a</st> *<st c="14849">no</st>* <st c="14851">culture,
    new team structures and collaboration models are embraced with a strong cultural
    focus that emphasizes that security is an enabler and not</st> <st c="15000">a
    blocker.</st>'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="14557">审视团队结构与度量指标</st>**<st c="14595">：DevSecOps 文化挑战了传统安全团队如何与开发和运维团队整合，以满足更广泛的业务需求。</st>
    <st c="14758">我们不再维持一个有着冲突度量标准的孤立团队结构，这种结构会导致一种</st> *<st c="14849">无</st>* <st
    c="14851">文化的状况，而是拥抱了新的团队结构和协作模式，重点强调安全作为推动力，而非</st> <st c="15000">阻碍。</st>  '
- en: <st c="15010">Security teams consistently</st> <st c="15038">work together with
    development and operations teams to ensure that development and releases can be
    accomplished at the fast pace needed by the business while maintaining security.</st>
    <st c="15219">This approach calls for a shift in the security team’s mindset to
    prioritize rapid software delivery as per the business’s needs, with security
    acting as a facilitator toward this goal.</st> <st c="15405">This often leads
    to a shift toward a model where the security team focuses on empowering developers
    and operations teams to execute their tasks securely, in a way that minimizes
    critical risks that make it into production.</st> <st c="15628">This approach
    aligns with the</st> *<st c="15658">shift-left</st>* <st c="15668">philosophy,
    where responsibilities (such as security, in this case) are addressed earlier
    in the development or task life cycle.</st> <st c="15798">Shift left in DevOps
    means ensuring application security from the earliest stages of development, a
    key principle in DevSecOps, which fosters collaboration between development, security,
    and operations teams.</st> <st c="16007">The success of this approach must have
    empathy at its core – a willingness to learn how each team works to jointly determine
    the best ways to integrate</st> <st c="16159">security practices.</st>
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="15010">安全团队与开发和运维团队紧密合作，</st> <st c="15038">以确保开发和发布能够按照业务需求的快速节奏进行，同时保持安全。</st>
    <st c="15219">这种方法要求安全团队的思维方式发生转变，优先考虑按照业务需求快速交付软件，同时将安全作为促进这一目标的工具。</st> <st
    c="15405">这通常导致安全团队转向一种新模式，专注于赋能开发者和运维团队，以安全的方式执行他们的任务，最大程度地减少进入生产环境的重大风险。</st>
    <st c="15628">这种方法与</st> *<st c="15658">向左移动</st>* <st c="15668">哲学一致，在这种哲学中，责任（如安全问题）会在开发或任务生命周期的早期阶段得到解决。</st>
    <st c="15798">DevOps 中的向左移动意味着从开发的最早阶段就确保应用程序的安全，这是 DevSecOps 的一个关键原则，旨在促进开发、安全和运维团队之间的合作。</st>
    <st c="16007">这一方法的成功必须以共情为核心——愿意了解每个团队的工作方式，以共同确定整合</st> <st c="16159">安全实践的最佳方式。</st>
- en: '**<st c="16178">Training and communication</st>**<st c="16205">: As we stated
    previously, cultivating a DevSecOps culture requires everyone to embrace a security-first
    mindset where everyone takes responsibility for their part in delivering secure
    software.</st> <st c="16401">Achieving this will only be possible via training
    and communication.</st> <st c="16470">We will cover how to implement an effective
    security training program in</st> [*<st c="16543">Chapter 3</st>*](B19710_03.xhtml#_idTextAnchor053)<st
    c="16552">,</st> *<st c="16554">Implementing Security in the</st>* *<st c="16583">Plan</st>*
    *<st c="16587">Phase of DevOps</st>*<st c="16603">, so we will leave the conversation</st>
    <st c="16639">till then.</st>'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16178">培训与沟通</st>**<st c="16205">：正如我们之前所提到的，培养 DevSecOps 文化需要每个人都树立安全优先的思维方式，每个人都要对交付安全软件的各自责任负责。</st>
    <st c="16401">实现这一目标只能通过培训和沟通来完成。</st> <st c="16470">我们将在[*<st c="16543">第3章</st>*](B19710_03.xhtml#_idTextAnchor053)中介绍如何实施有效的安全培训计划，</st>
    *<st c="16554">在 DevOps 的</st>* *<st c="16583">规划</st>* *<st c="16587">阶段中实施安全</st>*<st
    c="16603">，因此我们将在那时再详细讨论。</st>  '
- en: <st c="16649">Embracing a DevSecOps culture</st> <st c="16679">in an existing
    organization can be challenging but it is a vital step toward achieving secure
    software development.</st> <st c="16796">However, this cultural shift is just
    part of the equation.</st> <st c="16855">To help individuals transition to this
    new culture, structured processes are required that can guide team members and
    provide a clear framework</st> <st c="16999">for operations.</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17014">Understanding the process aspect of DevSecOps</st>
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="17060">DevSecOps is an evolution of DevOps</st> <st c="17096">so the
    fundamental processes are the same.</st> <st c="17140">DevSecOps extends the same
    DevOps processes that we covered in the first chapter of this book, with additional
    layers of continuous security training, continuous security validation, and continuous
    security measurement.</st> <st c="17360">These processes help to transition to
    a state where security is perceived by all as an integral element of creating
    and delivering software, on the same level as functionality and stability.</st>
    <st c="17551">Let’s discuss</st> <st c="17565">the processes:</st>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="17579">Continuous security training</st>**<st c="17608">: This process
    puts in place both formal and informal channels for improving</st> *<st c="17686">role-specific</st>*
    <st c="17699">security knowledge and skills.</st> <st c="17731">This includes
    keeping the team up to date with the most recent and</st> *<st c="17798">relevant</st>*
    <st c="17806">security best practices, vulnerabilities, and mitigation strategies.</st>
    <st c="17876">This could include formal and informal education on secure coding
    practices, secure infrastructure configurations, or creating awareness about relevant
    threat actors.</st> <st c="18043">The aim is to build a security-first mindset
    across the organization and make security an integral part of every role.</st>
    <st c="18162">The key to success is to prioritize engagement; otherwise, it can
    become another box-ticking exercise.</st> <st c="18265">This is why a lot of thought
    and collaboration is needed to ensure that the training continually maintains
    its relevance.</st> <st c="18387">We will explore this further in the next chapter
    of</st> <st c="18439">this book.</st>'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="18449">Continuous security validation</st>**<st c="18480">: This is
    the process that defines what secure software build and release should look like
    for various categories of projects in your organization.</st> <st c="18629">It
    involves ongoing cooperation between the security team and major stakeholders
    such as engineering and operations.</st> <st c="18746">The goal is to</st> *<st
    c="18761">jointly</st>* <st c="18768">establish a mix of recommended regular security
    assessments and critical safety guardrails that must be respected.</st> <st c="18884">This
    shifts the role of the security team from verifying each individual release to
    regularly checking the integrity of the release pipelines.</st> <st c="19027">The
    key to success here is collaboration – ensuring that the validations are</st>
    *<st c="19104">mutually agreed</st>* <st c="19120">upon, and their significance
    is understood by all involved.</st> <st c="19180">Do not focus on tools or tests
    when defining what this process will look like in your environment.</st> <st c="19279">Instead,
    focus on the improvement outcomes that you would like to achieve.</st> <st c="19354">Like
    all other DevOps processes, this is an ongoing activity that needs to be adjusted
    as standards evolve and new insights are learned.</st> <st c="19491">We will go
    deeper into this subject in</st> *<st c="19530">Chapters 4</st>* <st c="19540">to</st>
    *<st c="19544">7</st>* <st c="19545">of</st> <st c="19549">this book.</st>'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="19559">Continuous security measurement</st>**<st c="19591">: Finally,
    continuous security measurement is focused on agreeing with stakeholders on metrics
    that will be used to assess progress and outcomes.</st> <st c="19738">The goal
    of this process is to provide ongoing visibility into the effectiveness of security
    practices and offer insights for continuous improvement.</st> <st c="19888">This
    could involve tracking key indicators such as the number of critical vulnerabilities
    that make it to later stages of the workflow, and improvements in overall security
    health (to determine the efficiency of the continuous security training).</st>
    <st c="20135">While determining these metrics, keep in mind that DevSecOps is
    a never-ending journey.</st> <st c="20223">Metrics and</st> **<st c="20235">key
    performance indicators</st>** <st c="20261">(</st>**<st c="20263">KPIs</st>**<st
    c="20267">) should not be fixated on a result, but rather</st> <st c="20316">on
    continuous improvement and a trend</st> <st c="20354">toward maturity.</st>'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="20370">Now that you have some understanding</st> <st c="20407">of defining
    the additional processes for your DevSecOps workflow, let’s turn our attention
    to the tooling aspect</st> <st c="20521">of DevSecOps.</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20534">Considerations for selecting your DevSecOps toolchain</st>
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="20588">To implement DevSecOps processes, we need</st> <st c="20630">the
    right set of tools.</st> <st c="20655">A common mistake is trying to fit security
    tools that were not designed for the DevOps workflows into the ecosystem.</st>
    <st c="20772">Not all security tools integrate well in a DevOps workflow!</st>
    <st c="20832">DevSecOps succeeds best with</st> *<st c="20861">developer-first</st>*
    <st c="20876">security tools that were designed with the developer as a central
    user.</st> <st c="20949">These tools prioritize aspects such as speed and integration
    compatibility with tools used by developers, rather than focusing solely on</st>
    <st c="21086">production environments.</st>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21110">The toolset should also take into consideration the newer cloud-native
    technologies such as containerization (Docker, Kubernetes, and Helm charts), infrastructure-as-code
    (Terraform, ARM templates, and Bicep templates), microservices, and cloud services
    such as managed platform compute services</st> <st c="21407">and serverless.</st>
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21422">When choosing our tools, there are many</st> <st c="21462">factors
    that we need to consider.</st> <st c="21497">Some factors, such as the scope of
    support, compatibility, and integrations, relate to the technical capabilities
    of the tools.</st> <st c="21625">Other factors such as ease of use, contextuality,
    and cost are connected to business considerations and user experience.</st> <st
    c="21746">Both sets of factors have significant importance.</st> <st c="21796">Decisions
    should be made collaboratively, involving the security practitioners, developers,
    and operations teams that will be using these tools as part of their</st> <st
    c="21957">daily work.</st>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21968">The following are some of the key considerations when selecting
    your</st> <st c="22038">tool sets:</st>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="22048">What artifacts are used to build and deploy software in</st>**
    **<st c="22105">your organization?</st>**'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="22123">Understanding this is important to ensure that our tool selection
    is compatible with artifacts that are in use in our environment.</st> <st c="22255">Before
    selecting your tools, consider the following.</st> <st c="22308">What technologies
    are used in our environment?</st> <st c="22355">Which security tools are available
    to assess and remediate security concerns?</st> <st c="22433">How advanced are
    the tools and what is their level of maturity?</st> <st c="22497">For example,
    are they customizable?</st> <st c="22533">The following are some of the artifacts</st>
    <st c="22573">to identify:</st>
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="22585">Understand the variety of application code languages and platforms,
    such as C#, Java, Node.js, and Python, currently used in your environment.</st>
    <st c="22729">Does your organization align itself with certain technology stacks
    and how likely is that to change?</st> <st c="22830">Is there any flexibility
    around language selection for</st> <st c="22885">different projects?</st>
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="22904">Understand the use of infrastructure code and templates.</st>
    <st c="22962">What template formats are in use for infrastructure</st> <st c="23013">deployments?</st>
    <st c="23027">Examples include</st> **<st c="23044">Azure Resource Manager</st>**
    <st c="23066">(</st>**<st c="23068">ARM</st>**<st c="23071">) templates, Terraform
    templates, and</st> <st c="23110">Bicep templates.</st>
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23126">Assess the role of</st> *<st c="23146">image as code</st>* <st
    c="23159">technologies in your organization, such as Dockerfiles, Packer templates,
    and a shared image gallery for Azure, in creating consistent and</st> <st c="23299">repeatable
    environments.</st>
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23323">Consider the</st> *<st c="23337">deployment as code</st>* <st
    c="23355">methodologies in use with technologies such as Kubernetes manifest files
    and Helm charts to automate your containerized</st> <st c="23476">solution deployments.</st>
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23497">Review the container images in use, such as Linux images, Windows
    images, or</st> <st c="23575">distroless images.</st>
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23593">Lastly, consider the configuration</st> <st c="23628">code and
    scripts such as Puppet manifests, Chef cookbooks, Ansible YAML templates, PowerShell
    scripts, or Bash scripts that help maintain consistent configuration across</st>
    <st c="23799">your infrastructure.</st>
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23819">Which security issues</st>** **<st c="23842">are detected?</st>**'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23855">This consideration is important but should also be driven by value.</st>
    <st c="23924">It involves deciding which security issues you would like to catch
    earlier in the development cycle with a shorter feedback loop for developers.</st>
    <st c="24069">Deciding this will influence the tools you choose.</st> <st c="24120">Some
    tools improve</st> <st c="24138">their detection capabilities by aligning them
    with</st> **<st c="24190">techniques, tactics, and procedures</st>** <st c="24225">(</st>**<st
    c="24227">TTPs</st>**<st c="24231">).</st> <st c="24235">This alignment helps
    in defending against particular strategies and threat vectors employed by malicious
    entities.</st> <st c="24350">It is perfectly acceptable to address this progressively,
    starting with issues that cause minimal disruption to developers but have a meaningful
    impact on the organization’s security posture.</st> <st c="24542">As teams gain
    more confidence, we can slowly incorporate other issue-detection methods.</st>
    <st c="24630">The following are some of the issues to concentrate on when deciding</st>
    <st c="24699">your toolsets:</st>
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="24713">Hardcoded secrets detection</st>**<st c="24741">: Capability
    to detect hardcoded secrets such as API keys, database credentials, or cryptographic
    keys embedded in code.</st> <st c="24863">These secrets, if exposed, can pose
    a serious security risk, leading to unauthorized access or</st> <st c="24958">data
    breaches.</st>'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="24972">Code vulnerabilities</st>**<st c="24993">: Capability to check
    for weaknesses in the application’s code, which could potentially be exploited
    to compromise the system.</st> <st c="25121">This could range from application
    code vulnerabilities such as buffer overflow, injection attacks, and insecure</st>
    <st c="25232">direct object references, to infrastructure or deployment code misconfigurations
    in IaC templates, Kubernetes manifest files, and</st> <st c="25363">Helm charts.</st>'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25375">Open source package vulnerabilities</st>**<st c="25411">: Ability
    to detect vulnerabilities in open source libraries or packages.</st> <st c="25486">Modern
    applications rely heavily on these libraries, and it is crucial to assess them
    for known vulnerabilities.</st> <st c="25599">If an attacker exploits a vulnerability
    in a package, they might compromise the</st> <st c="25679">entire application.</st>'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25698">Open source license compliance issues</st>**<st c="25736">:
    Ability to assess license requirements of open source packages to ensure that
    the organization is not at risk of legal issues due to non-compliance.</st> <st
    c="25888">Open source packages come with a variety of licenses, each with its
    own set of obligations and restrictions, and it is important to assess usage in</st>
    <st c="26036">our environment.</st>'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="26052">Malware</st>**<st c="26060">: Ability to scan and detect malicious
    software that can cause harm to the application or the underlying system.</st>
    <st c="26174">This includes viruses, worms, trojans, ransomware,</st> <st c="26225">and
    spyware.</st>'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="26237">Software bill of materials</st>** <st c="26264">(</st>**<st
    c="26266">SBOM</st>**<st c="26270">): An SBOM is a comprehensive</st> <st c="26300">list
    of components in a piece of software.</st> <st c="26344">Assessment tools scrutinize
    the SBOM to verify that each component is up-to-date, secure, and compliant with
    licensing requirements.</st> <st c="26477">This helps in managing the software
    supply chain risk and aids in effective</st> <st c="26553">vulnerability</st>
    <st c="26566">management.</st>'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="26578">What integrations</st>** **<st c="26597">are supported?</st>**'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26611">DevSecOps tools can be integrated at various stages in the software
    development life cycle.</st> <st c="26704">Each integration point presents an
    opportunity to catch and rectify security vulnerabilities before they become critical.</st>
    <st c="26826">It is important to understand the integration points that our toolsets
    support.</st> <st c="26906">The following are some key</st> <st c="26933">integration
    points:</st>
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26952">Integrated development environment</st>** <st c="26987">(</st>**<st
    c="26989">IDE</st>**<st c="26992">): These are the tools where developers</st>
    <st c="27032">spend most of their time writing and testing code.</st> <st c="27084">The
    integration of security tools into the IDE allows for immediate feedback on potential
    security issues, enabling developers to rectify vulnerabilities on the spot.</st>
    <st c="27251">It also allows developers to learn and adjust their coding habits,
    thereby improving the overall quality of the code produced.</st> <st c="27378">Examples
    of such integrations might include linters or static code analysis tools that
    highlight and, in some cases, remediate potential issues directly in</st> <st
    c="27534">the IDE.</st>'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="27542">Source control repositories</st>**<st c="27570">: When code
    is checked into a central</st> <st c="27608">source control repository, such as
    GitHub, Azure Repos, or a GitLab repository, it can be beneficial to run automated
    security checks.</st> <st c="27744">This could include any of the capabilities
    that we mentioned earlier (hardcoded secret detection, code vulnerabilities, and
    so on).</st> <st c="27876">If an issue is identified, a pull request can be made
    to address it.</st> <st c="27945">This not only enables early identification of
    security risks but also helps us to measure the effectiveness of security integrations
    at earlier stages of the cycle.</st> <st c="28110">DevSecOps is an ongoing process,
    and it is important to demonstrate ongoing value along the way.</st> <st c="28207">Integrating
    security tools in the IDE allows us to measure and</st> <st c="28270">showcase
    this.</st>'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="28284">CI/CD</st>**<st c="28290">: The CI/CD pipeline is another important
    area for security tool integration.</st> <st c="28369">As code is merged and prepared
    for build and deployment, automated security checks can ensure that vulnerable
    build artifacts are not created or shipped to production.</st> <st c="28537">This
    could include dynamic security testing, dependency checking, container security
    scanning, or automated compliance checks.</st> <st c="28664">This</st> <st c="28668">might
    involve tools such as</st> **<st c="28697">Static Application Security Testing</st>**
    <st c="28732">(</st>**<st c="28734">SAST</st>**<st c="28738">) and</st> **<st
    c="28745">Dynamic Application Security Testing</st>** <st c="28781">(</st>**<st
    c="28783">DAST</st>**<st c="28787">).</st> <st c="28791">By integrating automated
    security</st> <st c="28824">tests each time code is merged or deployed, we can
    apply guardrails that block the promotion of the code to the next stage if vulnerabilities
    are found, as part of our build or deploy process.</st> <st c="29018">We can also
    automatically embed necessary runtime</st> <st c="29067">security capabilities
    such as</st> **<st c="29098">Runtime Application Self-Protection</st>** <st c="29133">(</st>**<st
    c="29135">RASP</st>**<st c="29139">) agents to ensure security coverage for applications
    as they are deployed</st> <st c="29215">into production.</st>'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="29231">Runtime</st>**<st c="29239">: After deployment, it is crucial
    to continuously</st> <st c="29289">monitor for potential security vulnerabilities
    or incidents in the application and its environment.</st> <st c="29390">This can
    include monitoring for abnormal behavior, auditing system, and application logs,
    and regularly scanning for vulnerabilities in the runtime environment.</st> <st
    c="29551">Tools that are integrated into this phase are designed to provide real-time
    alerting and automated response capabilities, which can minimize the impact of
    any security incidents that occur.</st> <st c="29741">It is worth noting that
    modern applications run on a wide array of cloud compute services.</st> <st c="29832">This
    includes customer-managed virtual machines, managed platform services such as
    Azure App Service, and even serverless services such as Azure Functions apps,
    Azure Container Instances, and Azure Container Apps.</st> <st c="30046">We need
    to consider the value of runtime security and how we integrate the right tools
    for different types of</st> <st c="30156">runtime environments.</st>'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="30177">What is the cost (buy versus build</st>** **<st c="30213">versus
    adopt)?</st>**'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="30227">Deciding to adopt open source, purchase commercial, or build in-house
    is an important consideration in selecting our DevSecOps toolsets.</st> <st c="30365">The
    three options each come with their pros and cons that should be evaluated based
    on your organization’s specific needs.</st> <st c="30488">In most instances, organizations
    will opt for a combination of these three options, based on the specific needs
    and maturity of their DevSecOps processes.</st> <st c="30643">They might buy commercial
    solutions when they provide significant value and meet the organization’s needs.</st>
    <st c="30750">They might adopt open source solutions for areas where the organization
    is less mature and build custom solutions for unique challenges that can’t be
    addressed otherwise.</st> <st c="30921">This blend allows organizations to enjoy
    the best of all worlds while keeping costs in check.</st> <st c="31015">Let’s
    discuss the</st> <st c="31033">three options:</st>
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="31047">Open source</st>**<st c="31059">: Using open source solutions
    can be cost-effective as they don’t require direct purchasing.</st> <st c="31153">We
    will highlight many great open source tools as we delve into details</st> <st
    c="31224">in upcoming chapters.</st> <st c="31247">They typically have active
    communities contributing and improving the software.</st> <st c="31327">However,
    they usually lack automated fixes, and the company may need to provide its own
    support and maintenance.</st> <st c="31440">Also, if the tool lacks a robust community
    or the project becomes abandoned, the organization might find itself with an unsupported
    tool.</st> <st c="31578">Open source tools are great ways to get started with
    security integrations and there are many enterprises, even large ones, which rely
    on some open source tools for some aspects of their</st> <st c="31765">DevSecOps
    workflow.</st>'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="31784">Commercial</st>**<st c="31795">: Commercial solutions often
    come with the benefit of dedicated support and maintenance teams, and in some
    instances, offer automated fixes.</st> <st c="31937">They may also be easier to
    integrate with existing systems and can provide warranties and liability protection.</st>
    <st c="32049">However, they often come with higher costs, and companies might
    end up paying for features they don’t need.</st> <st c="32157">Many platform solutions
    that offer multiple DevSecOps toolsets integrated are</st> <st c="32235">commercial-only
    options.</st>'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="32259">Building in-house</st>**<st c="32277">: Creating your own tools
    should be considered only when your organization faces unique challenges that
    open source or off-the-shelf solutions cannot address effectively and when the
    effort associated with integrating an existing solution outweighs the costs of
    creating a custom one.</st> <st c="32563">For instance, large corporations often
    develop custom toolsets to manage unique scenarios arising from their scale.</st>
    <st c="32679">Consideration should also be given to the long-term sustainability
    of the tool.</st> <st c="32759">Questions about how the tool will be maintained,
    updated, and improved over time should be</st> <st c="32850">answered upfront.</st>'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="32867">Additional factors such as user-friendliness</st> <st c="32912">and
    contextual relevance are also important.</st> <st c="32958">However, we will cover
    these aspects when we explore specific tools in</st> <st c="33029">upcoming chapters.</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33047">DevSecOps and supply chain security</st>
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="33083">Ever since the US Executive Order</st> <st c="33117">aimed at
    enhancing the security and integrity of the software supply chain was announced
    (see</st> *<st c="33212">Figure 2</st>**<st c="33220">.3</st>*<st c="33222">),
    the topic of software supply chain security has gained</st> <st c="33281">considerable
    traction.</st>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – US Executive Order on software supply chain](img/B19710_02_3.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
- en: <st c="34066">Figure 2.3 – US Executive Order on software supply chain</st>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34122">US Executive Order on Improving the Nation’s Cybersecurity (May
    2021)</st>
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34192">Visit the following link to learn more about</st> <st c="34237">the
    US Executive</st> <st c="34255">Order:</st> [<st c="34262">https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/</st>](https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/)<st
    c="34390">.</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34391">I (David) recently wrote a blog post for Microsoft TechNet where
    I provided a definition for supply chain security, which I would like to</st>
    <st c="34530">restate here:</st>
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34543">“The software supply chain encompasses everything necessary to
    create and deliver software, including IDEs, source control systems, build systems,
    deployment systems, CICD platforms, runtime environments, and various artifacts
    such as application code, open-source dependencies, infrastructure code, and deployment
    artifacts.”</st>
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34870">Blog</st>
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34875">The</st> *<st c="34880">Securing the Code to Cloud Pipeline with
    GitHub and Azure</st>* <st c="34937">blog post can be found</st> <st c="34961">here:</st>
    [<st c="34967">https://www.microsoft.com/en-gb/industry/blog/technetuk/2023/03/30/securing-the-code-to-cloud-pipeline-with-github-and-azure/?WT.mc_id=AZ-MVP-5003870</st>](https://www.microsoft.com/en-gb/industry/blog/technetuk/2023/03/30/securing-the-code-to-cloud-pipeline-with-github-and-azure/?WT.mc_id=AZ-MVP-5003870)<st
    c="35116">.</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="35117">DevSecOps</st>* <st c="35127">and</st> *<st c="35132">supply
    chain security</st>* <st c="35153">are two distinct but connected concepts.</st>
    <st c="35195">DevSecOps is about integrating security measures into the DevOps
    workflow, whereas software supply chain security goes beyond this to include the
    security of every component necessary to create and deliver software!</st> <st
    c="35411">The primary goal of DevSecOps is to enable organizations to address
    critical security issues at a rapid pace and earlier in the development life cycle,
    preventing them from becoming vulnerabilities in production, where the cost of
    fixing them is significantly higher!</st> <st c="35679">The primary goal of software
    supply chain security is to mitigate known risks that could be exploited by attackers
    to hijack any aspect of our software</st> <st c="35831">delivery process.</st>'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35848">Both are crucial in modern software development and operations,
    as threats can originate from within the development process or externally from
    third-party components or during distribution.</st> <st c="36040">They are interconnected
    as secure development practices (DevSecOps) contribute significantly to a secure
    software supply chain, and a secure supply chain helps protect the software delivered
    through DevSecOps processes.</st> <st c="36260">Our approach in the rest of this
    book</st> <st c="36297">is to explore DevSecOps as a methodology for implementing
    supply chain security, as well as a constituent part of the broader supply chain</st>
    <st c="36437">security framework.</st>
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36456">Summary</st>
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="36464">In this chapter, we covered the security challenges of the fast
    pace of DevOps and the increase in attack surface caused by its toolsets.</st>
    <st c="36603">We highlighted the necessity to transition toward a DevSecOps model,
    where security measures are integrated at every stage of the development cycle.</st>
    <st c="36752">We presented the case and benefits of implementing a DevSecOps approach.</st>
    <st c="36825">We concluded with a discussion on the interrelationship between
    DevSecOps and supply chain security and how organizations can better protect their
    software from threats by integrating DevSecOps processes and prioritizing supply
    chain security.</st> <st c="37069">This chapter has equipped you with a comprehensive
    understanding of the security challenges of DevOps.</st> <st c="37172">It also
    provided you with clear insights into the necessity and benefits of transitioning
    to a DevSecOps model.</st> <st c="37284">In the next chapter, we will begin our
    discussion on implementing security into all the phases of DevOps, starting with
    the planning phase.</st> <st c="37424">We look forward to seeing you in the</st>
    <st c="37461">next chapter!</st>
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37474">Further reading</st>
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="37490">To learn more about the topics that were covered in this chapter,
    take a look at the</st> <st c="37576">following resources:</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="37596">DevOps Security best practices</st>* <st c="37627">by</st> <st
    c="37631">Snyk:</st> [<st c="37637">https://snyk.io/learn/devops-security/</st>](https://snyk.io/learn/devops-security/)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="37675">4 DevOps Security Challenges and</st>* *<st c="37709">Solutions</st>*<st
    c="37718">:</st> [<st c="37721">https://www.techwell.com/techwell-insights/2022/12/4-devops-security-challenges-and-solutions</st>](https://www.techwell.com/techwell-insights/2022/12/4-devops-security-challenges-and-solutions)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="37814">What is DevOps Security?</st>* <st c="37839">by</st> <st c="37843">Hackerone:</st>
    [<st c="37854">https://www.hackerone.com/knowledge-center/devops-security-challenges-and-6-critical-best-practices</st>](https://www.hackerone.com/knowledge-center/devops-security-challenges-and-6-critical-best-practices)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="0">Part 2: Securing the Plan and Code Phases of DevOps</st>'
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="52">In this part, you will learn how to implement DevSecOps principles
    in the PLAN phase, focusing on security challenges that can be addressed before
    developers start writing code.</st> <st c="231">We will also address security
    implementations in</st> <st c="280">source control.</st>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: <st c="295">This part contains the</st> <st c="319">following chapters:</st>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="338">Chapter 3</st>*](B19710_03.xhtml#_idTextAnchor053)<st c="348">,</st>
    *<st c="350">Implementing Security in the Plan Phase of DevOps</st>*'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="399">Chapter 4</st>*](B19710_04.xhtml#_idTextAnchor072)<st c="409">,</st>
    *<st c="411">Implementing Pre-commit Security Controls</st>*'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="452">Chapter 5</st>*](B19710_05.xhtml#_idTextAnchor098)<st c="462">,</st>
    *<st c="464">Implementing Source Control Security</st>*'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
