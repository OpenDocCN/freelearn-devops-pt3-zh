- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: How to Meet Your Security and Compliance Goals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s digital world, keeping your organization secure is an ongoing process—it’s
    never just a one-and-done deal. With the rise of cloud environments, the stakes
    have never been higher. This chapter will dive into some of the biggest challenges
    we face, from the risks of over-privileged access to the misconception that one
    penetration test before launch is enough. We’ll also break down supply chain security
    and clear up any confusion about the shared responsibility model. Whether you
    are deep into IT or just getting started with cloud security, you’ll find practical
    tips to help protect your organization.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will describe common security and compliance anti-patterns. These
    anti-patterns expose your organization and make it challenging to pass an external
    compliance audit.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: How to Manage Permissions Without Over-Privilege
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Importance of Continuous Compliance in Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proactive Monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Shared responsibility model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supply chain insecurity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Manage Permissions Without Over-Privilege
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to explore the permissions that we need within
    our cloud architectures, as human beings to do our everyday jobs, whether that
    be as a Solution Architect, DevOps Engineer, or even in a finance role in account.
    Each person needs different permissions for their role in business. We’ll then
    look at the permissions you need to apply to services and devices to access the
    resources needed by an individual in a role. And at the same time we’re going
    to ensure that we’re approaching these permissions with the bare minimum access
    that’s needed to be effective at the role involved, the principle of least privilege.
  prefs: []
  type: TYPE_NORMAL
- en: These are the sort of actions that will stop us, as human beings, from making
    large-scale mistakes that could cost you your business reputation.
  prefs: []
  type: TYPE_NORMAL
- en: Securing High-Privilege Accounts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the first moment we register ourselves a Cloud provider account, we create
    a set of credentials to set up our Cloud architectures as we desire. Each cloud
    provider may define this differently, however the big three cloud providers define
    them as such:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Web Services (AWS)**: The email address that is used when you register
    with AWS is considered the high-privilege account (aka the root account)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Azure (Azure)**: Here it is called the “Global Administrator”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud Platform (GCP**): This is referred to as the “Owner” role.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This level of access is both convenient and very high risk due to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unrestricted access to all resources and actions**: Giving someone unrestricted
    access to your cloud environment might make things easier, but it’s a major risk.
    With full control, users could accidentally delete key resources, misconfigure
    security settings, or access sensitive data they shouldn’t see. And if their credentials
    get compromised, attackers could do serious damage—everything from wiping out
    infrastructure to leaking confidential information. This is why the principle
    of least privilege is critical—it keeps access limited to what’s necessary, reducing
    the chance of accidental mishaps and minimizing the fallout if something goes
    wrong.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Potential for irreversible damage**: Too much access means opening the door
    to mistakes you can’t undo. Someone with full control could accidentally wipe
    out databases, corrupt backups, or even shut down production. Once that damage
    is done, there’s no guarantee of getting it back—data could be lost permanently,
    and downtime could cost you. That’s why it’s crucial to limit access and put safeguards
    in place so no one can make changes that can’t be reversed. It’s all about avoiding
    a single point of failure that could bring everything down.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**High-value target for attackers**: Accounts with unrestricted access are
    like gold to attackers. If they get hold of one, they can steal sensitive data,
    disable services, or take over your entire system. The damage would be immediate
    and far-reaching, hitting your security, reputation, and bottom line all at once.
    That’s why these accounts need to be locked down with strong controls like multi-factor
    authentication, and permissions need to stay limited. It’s all about making sure
    you don’t become an easy target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some fundamental best practices can be followed to ensure your highly privileged
    accounts are as secure as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Set yourself a strong password and store it in a secure password vault.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable Multi-Factor Authentication. This ensures that you have to physically
    prove you are the owner of the account to log in with either a 6-digit code or
    biometric information. More on this later in the section “*Implement Multi-Factor*
    *Authentication (MFA)*“.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: For a root account or similar, if it’s a unique account and not a role, try
    to use a hardware token instead and store this somewhere safe.
  prefs: []
  type: TYPE_NORMAL
- en: Create User accounts or implement a single sign-on provider and assign relevant
    permissions to the users.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not allow high-privileged accounts to have programmatic access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring account activity. If usage at this account level is detected, ensure
    that an alert is sent to relevant leadership or management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limit the use of this account level. Sometimes we need to log into this account
    level but it should be by exception, not rule.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider the high-privilege accounts to be of similar importance to your building
    lease or trading license. This is proof of who you are as a Business in the Cloud
    world, and if someone compromises this account, it’s going to be difficult to
    prove you are who you say you are.
  prefs: []
  type: TYPE_NORMAL
- en: Even if you are not using the root-like access accounts, the account should
    be secured as above.
  prefs: []
  type: TYPE_NORMAL
- en: Over Privileged Users and Services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How many times have you heard the following phrases or similar?
  prefs: []
  type: TYPE_NORMAL
- en: '*“Give me access to everything, it’s* *just easier!”*'
  prefs: []
  type: TYPE_NORMAL
- en: '*“just give them a temporary admin role to* *save time”.*'
  prefs: []
  type: TYPE_NORMAL
- en: Over privileged access in a Cloud environment means that the user may not need
    all the permissions that have been assigned to them.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a bustling office where everyone, from the intern to the CEO, has a
    master key to every door. While this might seem convenient, it poses a significant
    security risk. Anyone could access sensitive areas, confidential files, or even
    the CEO’s office, whether they need to be there or not. This scenario mirrors
    the issue of over-privileged users in cloud environments.
  prefs: []
  type: TYPE_NORMAL
- en: The first type of over-privileged user is the default account your cloud provider
    sets up for you and by now you should have secured that access control.
  prefs: []
  type: TYPE_NORMAL
- en: Now whether you’re a single developer, just getting started or a multi-million-dollar
    valued corporation, you’re going to need to ensure that you’re only using permissions
    that you require. Similarly, if you allow resources to perform actions on services,
    you’ll want to ensure that the service accounts deployed for this are only given
    access to the specific resource/object/file/service.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions for Humans
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In the cloud world, an over-privileged user is like an employee with a master
    key. They have more access rights and permissions than necessary to perform their
    job. This situation often arises because it seems easier to grant broad permissions
    rather than tailoring access to fit specific roles. However, this convenience
    comes at a high cost to security and in some cases, compliance, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: Increased Risk of Breaches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Human Error
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accountability Issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In essence, managing user access in cloud environments is about striking the
    right balance between convenience and security. By addressing over-privileged
    users and adopting best practices like least privilege and RBAC, organizations
    can protect their cloud resources and maintain a secure, efficient environment.
    Remember, in security, less is often more—especially when it comes to permissions.
  prefs: []
  type: TYPE_NORMAL
- en: As far as compliance is concerned, you’ll need to look at your specific standards
    and what the implications of over-privileged users might be. For example, PCI
    DSS will require the principle of least privilege otherwise you’ll fail an audit
    and further impact commercial priorities.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions for Services
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In cloud computing, a service account is like a machine in a factory. These
    accounts are used by applications and automated processes to interact with cloud
    services. An over-privileged service account has more permissions than necessary
    to perform its function, much like a machine with access to every part of the
    factory.
  prefs: []
  type: TYPE_NORMAL
- en: So why is this a problem?
  prefs: []
  type: TYPE_NORMAL
- en: '**Security vulnerabilities**: Service accounts can be an easy target for attackers.
    If compromised, they can be used to access sensitive data, disrupt services, or
    escalate privileges within the cloud environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unintended access**: With all the extra permissions that an over privileged
    service account may hold, it could lead to unintended actions such as deleting
    data or modifying configurations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let us now learn how to manage over privileged access for both human users and
    service accounts.
  prefs: []
  type: TYPE_NORMAL
- en: Applying the principle of least privilege
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Managing over privileged access for both human users and service accounts is
    crucial to maintaining security and operational efficiency. Follow the steps below
    to achieve the principle of least privilege:'
  prefs: []
  type: TYPE_NORMAL
- en: Understand access requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'When setting up access requirements try to:'
  prefs: []
  type: TYPE_NORMAL
- en: Begin by identifying the specific access requirements for each user and service.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determine the minimum set of permissions necessary to perform their job functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Define roles based on these requirements and ensure that roles are tailored
    to specific tasks or responsibilities within your organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Role-Based Access Control (RBAC)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Role-based access controls can be more secure, so it’s always worth investigating
    if this is possible. When creating roles consider the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Develop roles with specific permissions that align with job functions and assign
    users to these roles. This approach limits access to only what is needed for their
    role.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Separate roles by function and responsibility to prevent overlap and ensure
    clarity in permission allocation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leverage Identity and Access Management Tools
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There are many varying toolsets that can help you manage your Cloud’s Identity
    and Access controls. Consider the below best practices whilst making use of these
    tools:'
  prefs: []
  type: TYPE_NORMAL
- en: Use IAM tools provided by your cloud vendor to create and manage roles and policies
    that enforce the principle of least privilege.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assign roles to users and services instead of granting direct permissions to
    ensure that access is controlled and auditable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement control policies to set permission boundaries and prevent users from
    exceeding their intended access. Use access policies to define what actions users
    and services can perform, and apply these policies consistently across resources.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop custom roles tailored to your organization’s specific needs, ensuring
    that roles contain only the necessary permissions for users to perform their tasks.
    Custom roles help prevent the use of overly broad permissions that come with predefined
    roles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utilize centralized IAM solutions to manage user identities and access across
    all cloud services. This approach allows for consistent policy enforcement and
    streamlined access management, reducing the complexity of handling permissions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement Multi-Factor Authentication (MFA)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When it comes to securing cloud environments, **Multi-Factor Authentication**
    (**MFA**) is an essential step, but it’s not without its own challenges.
  prefs: []
  type: TYPE_NORMAL
- en: Within your Cloud’s Identity and Access Management dashboards or control panels,
    ensure you mandate the usage of MFA for accessing sensitive resources to add an
    extra layer of security, reducing the risk of unauthorized access even if credentials
    are compromised.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure you use an MFA mechanism which also does not present as a single point
    of failure. For example, you log into your work email account, your social media,
    or even your cloud account and you set up a virtual MFA device using an app on
    your phone (e.g. Google Authenticator). You then lose your phone and now you can’t
    log in to any of your accounts until you’ve gone through a sometimes lengthy process
    to prove your identity and reset MFA.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some people prefer a hardware MFA solution such as an RSA key, which will provide
    you the 6-digit code we’re most familiar with, or a more popular Yubikey-style
    device, which provides a single-touch method of secondary authentication. This
    way they don’t have to rely upon a technology that is considered almost disposable
    or easily replaceable. However, these methods still can get misplaced just like
    our keys or phones. And as they are small, they’re easy to conceal too in the
    event of someone wanting to steal them in order to access resources they shouldn’t.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are at least 2 compromises available to us here.
  prefs: []
  type: TYPE_NORMAL
- en: Virtualized MFA software platforms that provide backup and multiple access across
    different devices (e.g. 1Password, Authy, LastPass, etc).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applying multiple MFA methods to an account, if it’s supported. This way you
    can apply your phone’s Authenticator and a hardware device. This way you always
    have access to one or the other.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Top tip:'
  prefs: []
  type: TYPE_NORMAL
- en: If you can use biometric (fingerprint, facial recognition, etc) authentication,
    do so! Biometric authentication adds an extra layer of security by tying access
    to something unique to the individual, making it much harder for attackers to
    fake or steal.
  prefs: []
  type: TYPE_NORMAL
- en: Regularly Review and Audit Permissions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Conduct regular audits of permissions to ensure they remain aligned with current
    job functions and responsibilities. Remove or adjust permissions that are no longer
    needed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use automated tools and scripts to identify and report on over privileged accounts
    and unnecessary permissions. Tools of note across the big 3 Cloud providers are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Identity and Access Management (IAM) Access Analyzer**: Spots externally
    shared resources and flags overprivileged permissions, keeping your IAM policies
    secure and in check.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Config**: Tracks changes to resources, ensuring your IAM roles and permissions
    stay compliant and free of misconfigurations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS CloudTrail**: Logs API activity, giving you visibility into who’s doing
    what and flagging any unusual behavior.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure AD Privileged Identity Management (PIM)**: Monitors and controls access
    to critical resources, helping you identify and correct overprivileged accounts.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Policy**: Enforces compliance and audits resources to make sure your
    permissions and access controls meet security standards.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Security Center**: Provides a full view of your security posture, automating
    the detection and correction of risky permissions.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GCP**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud IAM Policy Analyzer**: Analyzes access across your GCP setup
    to spot overprivileged accounts and assess associated risks.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud Asset Inventory**: Offers a clear audit trail of resources and
    permissions, highlighting potential security gaps.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud Security Command Center**: Centralizes your security view, whilst
    keeping track of permissions, roles, and risky configurations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Temporary and Fine-Grained Access
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Other considerations to make with identity access could be:'
  prefs: []
  type: TYPE_NORMAL
- en: Utilize temporary access credentials, such as AWS **Security Token Service**
    (**STS**), Azure Managed Identities, or GCP Service Account keys with time-limited
    access, to reduce the risk of long-term credential exposure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply fine-grained permissions to restrict actions users and services can perform,
    such as specific API calls or access to particular data sets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement Logging and Monitoring
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'As you may read later in [*Chapter 10*](B22364_10.xhtml#_idTextAnchor270),
    understanding what is happening in your architecture is important. The same goes
    for your Identity Management and this can be done with Logging and Monitoring:'
  prefs: []
  type: TYPE_NORMAL
- en: Enable logging and monitoring to track access and actions performed by users
    and services. Use cloud native tools like AWS CloudTrail, Azure Monitor, and GCP
    Cloud Logging.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up alerts for suspicious activities or attempts to access resources beyond
    granted permissions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Educate and Train Users
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'And lastly, to round of the principle of least privilege, we need to ensure
    that our users are well educated in our security goals:'
  prefs: []
  type: TYPE_NORMAL
- en: Provide regular training to users on the importance of the principle of least
    privilege and best practices for maintaining a secure environment. Educate them
    about the potential risks and consequences of over privileged access.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conduct threat modeling workshops to help users understand potential security
    threats and how to mitigate them. By analyzing threats, users can better comprehend
    the importance of appropriate access controls and the role they play in protecting
    the organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep users informed about updates to access policies and procedures. Ensure
    they understand the rationale behind these changes and how they align with overall
    security strategies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not all logging is the same
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As mentioned in the previous section, logging is important. However, it’s important
    to note the difference between application logging and security logging.
  prefs: []
  type: TYPE_NORMAL
- en: '**Application logging**is all about tracking the performance and behavior of
    your software. It’s the bread and butter of debugging and performance tuning.
    When something goes wrong, these logs tell you what happened, where, and why.
    They’re focused on the internal workings of your application—like tracking user
    activities, errors, and system events that help you improve the user experience.'
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, **security logging** is your line of defense against threats.
    These logs are designed to catch anything suspicious, from unauthorized access
    attempts to unusual patterns of behavior. They’re not just about what’s happening
    inside your application, but also what’s happening around it—like who’s trying
    to get in and what they’re doing once they’re there. Security logs give you the
    insights needed to detect and respond to potential breaches before they escalate.
  prefs: []
  type: TYPE_NORMAL
- en: In short, while application logs help you keep things running smoothly, security
    logs are there to keep things safe. Both are essential, but they serve different
    masters. Make sure you’re paying attention to both because missing the mark on
    either one can leave you exposed.
  prefs: []
  type: TYPE_NORMAL
- en: Reliance on long-term static credentials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A common anti-pattern within cloud management and security is that once we’ve
    configured a user, we often forget to manage that user. We make errors sometimes
    and we also occasionally copy and paste the wrong thing at the wrong time.
  prefs: []
  type: TYPE_NORMAL
- en: '**Static credentials** are the type of credentials that we set in the management
    console, on our laptop, or in our own emails. Occasionally, they’re long-lived
    beyond 90 days (about 3 months), sometimes beyond 120 days (about 4 months). As
    time passes since the password is set, the more chance that it has been compromised.
    Common breaches can be:'
  prefs: []
  type: TYPE_NORMAL
- en: Loyalty card systems having their databases copied to a public source.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Service providers leaving development API’s open and public by accident
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy and pasting the credentials into a source code repo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leaving a backup of the data on the bus or train on a USB stick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is not a limited list of potential breaches either, be creative, if you
    can think it, it’s probably happened.
  prefs: []
  type: TYPE_NORMAL
- en: Once a bad actor has access to your data, it’s already being sold on the dark
    web or used in malicious ways. This data could include your name, email address,
    usernames, and passwords.
  prefs: []
  type: TYPE_NORMAL
- en: 'Top tip:'
  prefs: []
  type: TYPE_NORMAL
- en: Keeping passwords for a long time is bad, reusing passwords across different
    systems is just as bad!
  prefs: []
  type: TYPE_NORMAL
- en: As human beings, we like to reuse patterns in life as this helps make things
    feel familiar. So that password that’s been resold on the dark web has probably
    been used at work and in our cloud environment, which then means it is prone to
    attack through guessing mechanisms. Once a bad actor has a list of email addresses
    and passwords, they’ll start applying those to many other services, purely as
    a guess, to try and compromise and get access to resources that they wouldn’t
    have had access to before.
  prefs: []
  type: TYPE_NORMAL
- en: 'By way of example, if I’ve just received a user table dump from the dark web
    that came from a coffee shop loyalty program that shows the below:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Username: “user1@bigcorp.com”'
  prefs: []
  type: TYPE_NORMAL
- en: 'Password: “Thi!Sh0uldHaveB33nMySuperStrongPassword”'
  prefs: []
  type: TYPE_NORMAL
- en: From this, we’re already identifying the company the person works for, their
    potential username for corporate ID, and their password. This person used best
    practices when it came to setting their password. However, having the password
    breached like this doesn’t help no matter how strong your password is.
  prefs: []
  type: TYPE_NORMAL
- en: Now that this password is out in the open, there’s a very good chance this is
    also the password for their corporate email, VPN, single sign, etc. As time goes
    on, this gets around the internet and eventually gets into the wrong hands and
    then potentially used.
  prefs: []
  type: TYPE_NORMAL
- en: One cloud provider, AWS, suggests rotating passwords every 90 to 120 days as
    a password is deemed leaked and compromised after this point. This can be done
    using IAM user controls within the console or similar features within other cloud
    providers.
  prefs: []
  type: TYPE_NORMAL
- en: When rotating passwords, we also need to remember that sometimes we have other
    static credentials, such as a Developer using the AWS CLI, AWS CDK, or SDK, and
    have provided an access key and secret key to their application. These also need
    to be rotated, either using native cloud features or custom rotation policies
    using Lambda or other functions.
  prefs: []
  type: TYPE_NORMAL
- en: Static credentials can also exist for databases and APIs, which can often last
    for years or even a decade in some cases. Cloud providers offer dedicated secret
    vaults that allow you to store credentials securely and rotate them, so the passwords
    are not used in plain text or environment variables and are rotated sufficiently.
  prefs: []
  type: TYPE_NORMAL
- en: API keys are a lot harder to change, as they may be used by customers, not just
    your application. In this case, you need to reduce the blast radius by ensuring
    that an access key, IAM identity, or API key can’t be used to access anyone’s
    data but that customer’s data, and ensure you have fine-grained controls to isolate
    customer data in a multi-tenancy system. You can read more about this in the last
    section of this chapter, “*Supply* *chain insecurity*”.
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prior to any planned permissions being given out to people or systems, it’s
    important to understand the threat level presented to you at the time of making
    these decisions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ask yourself the following 4 questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What are we working on?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What can go wrong?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are we going to do about it?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Did we do a good enough job?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you’ve answered these 4 questions, you should have a much better picture
    of the threat level presented at the time. This is basic threat modeling.
  prefs: []
  type: TYPE_NORMAL
- en: '**Threat modeling** is all about getting ahead of the game when it comes to
    security. It’s a process where you break down your system to spot potential vulnerabilities
    and figure out how they could be exploited. By thinking like an attacker, you
    can identify where the weak spots are and take steps to shore them up before they
    become a problem. It’s about being proactive, not reactive, giving you a way to
    prioritize and address risks so you’re not caught off guard. In short, threat
    modeling helps you stay one step ahead of any potential threats.'
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling as a practice could be a whole book of its own and is a lot
    to go into but the one major anti-pattern seen here is the ignorance or naivety
    of it as a practice.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure all your staff who work with code or infrastructure are trained in
    threat modeling. Don’t just make it one-off training either, this should be revisited
    yearly, and part included as part of standard onboarding processes for human resources.
  prefs: []
  type: TYPE_NORMAL
- en: Importance of Continuous Compliance in Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When it comes to launching a new application or system, there’s often a rush
    to check off that final penetration test before the big go-live moment. But here’s
    the catch: relying on just one test is like giving your car a once-over before
    a road trip and hoping for the best. Security and compliance require ongoing attention
    and effort. In this chapter, we’ll unravel the true meaning of compliance and
    why it’s essential to integrate it into your security strategy beyond that one-time
    test.'
  prefs: []
  type: TYPE_NORMAL
- en: Myth busting the One-Time Test
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You must have heard this myth “*One penetration test is all* *I need*”.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s bust this myth right now. One penetration test before launch is not going
    to be enough to guarantee the security of your application. It’ll give you a great
    picture of where things are right now, that snapshot in time, and may be enough
    to give you a red light/green light, “go/no-go” situation.
  prefs: []
  type: TYPE_NORMAL
- en: But what about next week? Next month?
  prefs: []
  type: TYPE_NORMAL
- en: Security threats evolve over time, sometimes even overnight. Security needs
    to be an ongoing process, something you’re always working on and always have visibility
    of. Not just at the last minute. Bake it into your application, architecture,
    and infrastructure. Make it part of your workplace culture.
  prefs: []
  type: TYPE_NORMAL
- en: Overnight changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Back in November 2021 on the 23rd, many millions of software developers, CTO’s,
    CIO and engineering managers went to bed blissfully unaware that anything could
    be wrong with their application stack. Like something from a movie scene, these
    people were all rudely awakened the next morning to what is known as one of the
    most serious security exploits ever.
  prefs: []
  type: TYPE_NORMAL
- en: “*Log4Shell*” (CVE-2021-44228) was a vulnerability found in the popular Java
    logging framework, Log4J. It was rated as a 10 on the CVE index, the highest rating
    that can ever be given, and allowed bad actors to execute arbitrary code on servers
    using Log4J. The vulnerability lay dormant since 2013 and was only found 8 years
    later and took almost another month to patch.
  prefs: []
  type: TYPE_NORMAL
- en: But once this became a known vulnerability, this was Day 0\. The moment of panic.
    The moment when you are most vulnerable because the exploit is known to the world,
    arming hackers with a weapon to be used at will by anyone wanting to cause malicious
    damage. At the same time, the authorities, “the good guys” in our movie scene,
    are looking for ways to work around and patch protect from the effects of this
    vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: If you were a Java software developer or a CTO with a Java stack, would you
    want to be blissfully unaware of this situation? Or would you rather be woken
    up to an alert or an email, arming yourself with the right information at the
    right time to mitigate this circumstance?
  prefs: []
  type: TYPE_NORMAL
- en: The Importance of Continuous Security and Compliance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The story of Log4Shell is a stark reminder that security is never a one-and-done
    task. Even if your system passes a penetration test today, new vulnerabilities
    could be discovered tomorrow. The only way to stay ahead of these threats is through
    continuous security monitoring and compliance validation.
  prefs: []
  type: TYPE_NORMAL
- en: Compliance Is More Than Just a Checklist
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compliance is not just about a bunch of checkboxes or avoiding harsh fines.
    It’s about protecting your intellectual property, your organization, and your
    reputation and building a level of trust with your customers. When you integrate
    compliance into your security strategy, you are not just adhering to a bunch of
    loose guidelines, you’re also safeguarding yourself and your systems against massive
    threats.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine compliance as the framework that holds your security strategy together.
    Without it, even the most advanced security measures can fall apart under the
    weight of a new vulnerability or regulatory requirement. That’s why it’s critical
    to make compliance an ongoing process, not just a once-a-year audit.
  prefs: []
  type: TYPE_NORMAL
- en: Compliance Frameworks
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There are many compliance frameworks and blueprints that you can look toward
    using. It’s worth noting that once you adhere to a certain compliance framework,
    it’s like a badge of honor, a seal of trust, that customers and vendors alike
    can see and know you adhere to certain standards. Some of the popular frameworks
    to date are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ISO/IEC 27001:2022 - Information security, cybersecurity and privacy protection**:
    Focused primarily on information security management systems (ISMS) it provides
    a blueprint for continuously protecting sensitive information and controls related
    to implementing and maintaining the integrity of data protection. ISO27001 requires
    regular audits to ensure standards are maintained and is a globally recognized
    standard.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PCI-DSS - Payment Card Industry Data Security Standard**: PCI-DSS is focused
    on securing payment card data for any organization that processes, stores, or
    transmits it. The standard lays out strict requirements, from encryption to access
    controls, ensuring that cardholder information is protected against breaches.
    Compliance isn’t optional—if you handle payment cards, following PCI-DSS is a
    must to operate legally and securely.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SOC-2 - Systems and Organization Controls 2**: SOC 2 is all about making
    sure your organization’s security, availability, and privacy controls are up to
    par, especially if you’re a tech or cloud service provider. It’s split into two
    types:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type I checks your controls at a specific point in time, while
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Type II looks at how well they perform over time.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: This standard is key for proving you can handle customer data securely and reliably.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Each one of these standards requires a yearly audit to show compliance.
  prefs: []
  type: TYPE_NORMAL
- en: There are many other frameworks globally, but these are potentially the most
    popular that we see in the wild.
  prefs: []
  type: TYPE_NORMAL
- en: As has now been mentioned repeatedly through this section, it’s important to
    maintain these standards long term, and as such, each framework has its yearly
    re-audit and re-compliance.
  prefs: []
  type: TYPE_NORMAL
- en: The ongoing success of compliance and passing the audits does not come from
    yearly auditing which may incur a couple of months of preparation, whilst pulling
    engineers or operational staff out of billable roles for a massive chunk of time.
    Instead, success comes from making these frameworks part of your culture. Everyone
    should have these frameworks as part of their daily routine, this way passing
    the audit will be second nature. Not something to be prepared for.
  prefs: []
  type: TYPE_NORMAL
- en: This is what we call “*Continuous Compliance*”.
  prefs: []
  type: TYPE_NORMAL
- en: The Role of Automation in Security and Compliance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Given the pace at which threats evolve, manual security checks simply aren’t
    enough. Automation plays a crucial role in ensuring that your security posture
    remains robust and that compliance is maintained continuously.
  prefs: []
  type: TYPE_NORMAL
- en: Automated tools can help you monitor your systems in real time, detect potential
    threats, and ensure that your security controls are always aligned with the latest
    compliance standards. By automating these processes, you’re not only improving
    efficiency but also reducing the risk of human error.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each of the big 3 cloud providers offers continuous compliance tooling to help
    ensure standards are maintained:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS**: AWS Security Hub gives you a central place to see what’s going on
    with your security across AWS. It pulls in data from various AWS services and
    third-party tools, continuously checks your environment against best practices,
    and helps you prioritize issues that need fixing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure**: Azure Security Center (now Microsoft Defender for Cloud) does something
    similar for Azure. It keeps an eye on your resources, offering security assessments,
    threat protection, and a dashboard to track your compliance. It’s not just for
    Azure, though—it also covers hybrid and multi-cloud setups, so you’re protected
    no matter where your data lives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GCP**: Google Cloud **Security Command Center** (**SCC**) is GCP’s answer
    to centralized security management. It gives you a clear view of your Google Cloud
    environment, keeping tabs on misconfigurations, vulnerabilities, and threats.
    SCC also helps you stay compliant with industry standards, all while integrating
    with Google’s security services to spot and respond to issues quickly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are also third-party solutions available to achieve this externally of
    your Cloud environment. You’ll generally provision it access to view your cloud
    account using a role or access credentials and let it scan regularly. Consider
    this, a fresh pair of eyes looking at your architecture, offering capabilities
    that might go beyond what the native tooling may do. These tool sets come with
    their own costings, so it could be a security vs cost-optimization trade-off.
  prefs: []
  type: TYPE_NORMAL
- en: Building a Proactive Security Culture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To reference [*Chapter 5*](B22364_05.xhtml#_idTextAnchor136)*, Underestimating
    the cultural impact*, to truly protect your organization, security and compliance
    need to be ingrained in your company’s culture. This means everyone—from developers
    to top executives—should understand the importance of security and be committed
    to maintaining it.
  prefs: []
  type: TYPE_NORMAL
- en: Regular training sessions, security drills, and awareness programs can help
    build this culture, ensuring that every team member knows their role in keeping
    the organization secure. When security is everyone’s responsibility, you’re far
    less likely to be caught off guard by a new threat.
  prefs: []
  type: TYPE_NORMAL
- en: 'Top Tip:'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t do your own penetration test—bring in an independent reviewer. You’re
    too close to your own setup, which means blind spots are easy to miss. An external
    expert will bring fresh eyes, spot weaknesses you didn’t see, and give you a truly
    unbiased assessment that stands up for compliance.
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping compliance up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So, you’ve passed the penetration test and launched your application. What’s
    next? This is where the real work begins. Ongoing security assessments, regular
    compliance checks, and a commitment to continuous improvement are what will keep
    your application secure in the long run.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, security isn’t just a destination; it’s a journey. And on this journey,
    there’s no room for complacency. The moment you let your guard down, you open
    the door to potential threats. But by making security and compliance a continuous
    process, you can protect your organization against whatever challenges lie ahead.
  prefs: []
  type: TYPE_NORMAL
- en: The story of Log4Shell isn’t just a cautionary tale—it’s a call to action. It’s
    a reminder that in the world of security, there’s no such thing as “*enough*.”
    One penetration test before going live might give you a temporary sense of security,
    but it’s the ongoing work—continuous monitoring, compliance validation, and a
    proactive security culture—that will truly protect your organization.
  prefs: []
  type: TYPE_NORMAL
- en: In the end, security is about more than just protecting your systems; it’s about
    building trust, safeguarding your reputation, and ensuring the long-term success
    of your organization. So don’t stop at the go-live moment. Keep pushing forward,
    keep improving, and keep your security and compliance efforts at the forefront
    of everything you do.
  prefs: []
  type: TYPE_NORMAL
- en: 'Proactive Monitoring: Don’t Wait for the External Audit to Spot Issues'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Launching a new application or system is an exciting milestone, but it’s also
    a critical moment for ensuring your security measures are up to scratch. Relying
    on a single vulnerability scan or penetration test before go-live is like giving
    your car a once-over before a cross-country road trip and hoping for the best.
    Security is not a one-time event; it’s an ongoing process that requires constant
    vigilance. By integrating regular security assessments and leveraging automation,
    organizations can maintain continuous compliance and tackle vulnerabilities before
    they turn into big problems.
  prefs: []
  type: TYPE_NORMAL
- en: Importance of Ongoing Security Assessments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One-off security assessments give you a snapshot of your current state, but
    they don’t account for future changes or emerging threats. To stay ahead of the
    game, you need a mindset focused on continuous improvement and proactive defense.
    Consider the following best practices:'
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability Scans and Penetration Tests
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Regular vulnerability scans and penetration tests are essential for spotting
    and fixing security weaknesses. These assessments shine a light on vulnerabilities
    that attackers could exploit, allowing you to take action before it’s too late.
  prefs: []
  type: TYPE_NORMAL
- en: Continuous Monitoring
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Set up a schedule for regular scans and tests to ensure your security posture
    is always up to date. This approach helps you catch new vulnerabilities and address
    them promptly, keeping your systems secure. By way of example, many organizations
    will organize quarterly perimeter scans of their architecture and then a yearly
    external, more in depth, penetration test. This way they can get insight into
    any network or application vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Proactive Defense & Continuous Compliance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By running regular assessments, you can anticipate threats and bolster your
    defenses against evolving attack vectors. Staying ahead of potential attacks is
    key to maintaining a strong security posture. These assessments don’t have to
    be orchestrated activities but can be automated systems that then send alerts
    to relevant stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: Comprehensive Coverage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Make sure your vulnerability scans and penetration tests cover all bases, from
    networks to applications and infrastructure. A holistic view of your security
    posture ensures that no stone is left unturned. Key points here may be:'
  prefs: []
  type: TYPE_NORMAL
- en: '**External network port scanning**: What network ports and protocols are exposed?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application penetration tests**: Can we exploit anything that is exposed?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source code scanning**: You can scan source code in pipelines or at rest
    in its repository.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Internal configuration checks**: Check resources are configured appropriately
    and won’t cause any issues if exposed by accident (or on purpose).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t forget, some things will be exposed on purpose, like HTTPS or SMTP ports.
    So make sure the versions are secured and up to date.
  prefs: []
  type: TYPE_NORMAL
- en: Automating Security Processes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Making continuous compliance and security assessments feasible requires automation.
    By automating routine security checks, organizations can streamline efforts and
    ensure consistent protection while freeing up resources for more strategic activities.
    Consider the below whilst implementing:'
  prefs: []
  type: TYPE_NORMAL
- en: Automation takes care of repetitive tasks, freeing up your team for more critical
    work. From running regular vulnerability scans to deploying patches, automated
    processes ensure security measures are applied consistently and efficiently.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use automated tools to perform scans, analyze results, and generate reports.
    Automation allows you to scale security efforts without overwhelming your team,
    keeping you covered across large environments.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automated tools can detect anomalies and potential threats faster than manual
    processes, enabling quicker responses and minimizing potential damage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automation supports an agile approach to compliance, allowing for more frequent
    checkpoints and adjustments based on real-time insights. This agility ensures
    your security measures stay in line with best practices and regulations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous Compliance Validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Annual compliance checks are a thing of the past. With today’s dynamic threat
    landscape, continuous compliance validation is the way forward. This involves
    regularly evaluating and updating security controls to stay aligned with current
    standards. Consider the example of Agile Compliance. **Agile compliance** means
    integrating compliance checks into your regular development and operational processes,
    ensuring that compliance is an ongoing focus rather than a last-minute scramble.
  prefs: []
  type: TYPE_NORMAL
- en: Establish several compliance checkpoints throughout the year to continuously
    validate your security measures and ensure they meet evolving requirements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use insights from ongoing assessments to make real-time adjustments to your
    security posture, keeping your organization resilient and ready for whatever comes
    next.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encourage collaboration between security, compliance, and development teams
    to ensure security and compliance are woven into every stage of the development
    lifecycle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Role of External Audits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While internal assessments and automation play vital roles in maintaining security,
    external audits provide a fresh perspective and additional assurance. These audits,
    conducted by independent third parties, can identify blind spots and offer insights
    that internal teams might overlook.
  prefs: []
  type: TYPE_NORMAL
- en: External audits provide an objective assessment of your security posture, highlighting
    areas for improvement that might be missed by those too close to daily operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditors assess your security practices against industry standards and regulatory
    requirements, ensuring that your organization meets or exceeds compliance benchmarks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Successfully completing an external audit can enhance trust with customers,
    partners, and stakeholders by demonstrating your commitment to maintaining a robust
    security posture.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: External auditors can offer practical, actionable recommendations to enhance
    your security strategy and close identified gaps.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building a Proactive Security Culture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To support continuous compliance and security assessments, fostering a proactive
    security culture is crucial. This means valuing security as an integral part of
    operations, supported by leadership and embraced by everyone. Educate your team
    by:'
  prefs: []
  type: TYPE_NORMAL
- en: Regularly educating employees about the importance of security and compliance.
    Empower them with the knowledge to identify and respond to potential threats.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing buy-in from leadership to prioritize security initiatives and allocate
    necessary resources. Leadership support drives cultural change and keeps security
    a top priority.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capture lessons learned from security incidents and assessments. Use this feedback
    to refine security policies and practices, promoting continuous improvement.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To summarize, security and compliance aren’t just boxes to tick off before going
    live—they’re ongoing commitments that demand constant attention and adaptation.
    By embracing continuous security assessments, leveraging automation, and adopting
    agile compliance practices, you can maintain a robust security posture and stay
    ahead of potential threats. This proactive approach not only protects your assets
    but also builds trust with stakeholders and ensures long-term success in an ever-evolving
    digital landscape. By integrating security into your organization’s fabric and
    utilizing external audits for additional insight, you can confidently navigate
    today’s complex threat environment.
  prefs: []
  type: TYPE_NORMAL
- en: Misunderstanding the shared responsibility model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the world of cloud computing, the shared responsibility model is a fundamental
    concept that dictates how security and compliance duties are divided between cloud
    service providers and their customers. Despite its importance, this model is often
    misunderstood, leading to gaps in security and increased risk. This chapter explores
    common misconceptions about the shared responsibility model and offers guidance
    on how to navigate and leverage it effectively to enhance your organization’s
    security posture.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, we explore the difference between “*Security of the Cloud*” and
    “*Security in* *the Cloud*”
  prefs: []
  type: TYPE_NORMAL
- en: Understanding and Addressing Misconceptions in the Shared Responsibility Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **shared responsibility model** is a framework that defines the division
    of labor between cloud providers and their customers when it comes to security
    and compliance. While the provider is responsible for securing the infrastructure
    that runs all services, the customer is responsible for securing their data, applications,
    and configurations.
  prefs: []
  type: TYPE_NORMAL
- en: Responsibilities of Cloud Providers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cloud providers, such as AWS, Azure, and Google Cloud, are responsible for the
    security of the cloud. This includes the physical security of data centers, the
    underlying hardware, network infrastructure, and foundational services.
  prefs: []
  type: TYPE_NORMAL
- en: Providers ensure that the physical infrastructure and network components are
    secure, protecting against unauthorized access and tampering. They also maintain
    compliance with various industry standards and certifications, offering customers
    a secure platform to build upon.
  prefs: []
  type: TYPE_NORMAL
- en: Responsibilities of Customers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Customers are responsible for security in the cloud. This means they must secure
    their applications, data, and configurations within the cloud environment.
  prefs: []
  type: TYPE_NORMAL
- en: Customers must protect their data through encryption, access controls, and regular
    backups whilst ensuring that applications running in the cloud are secure from
    vulnerabilities and potential exploits is the customer’s responsibility. Customers
    must also implement robust identity and access policies to control access to cloud
    resources and data.
  prefs: []
  type: TYPE_NORMAL
- en: Shared Responsibility Model Across “The Big 3”
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whilst the shared responsibility model is a common framework across all providers,
    each of the big three cloud vendors (AWS, Azure, and GCP), implements it with
    slight variations that customers need to be across.
  prefs: []
  type: TYPE_NORMAL
- en: AWS (Amazon Web Services)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: AWS addresses its shared responsibility model by using 2 different terms or
    phrases. “*Security of the Cloud*” and “*Security in* *the cloud*”
  prefs: []
  type: TYPE_NORMAL
- en: In the former, “*Security of the Cloud*”, AWS is responsible for protecting
    all of the infrastructure that runs the services offered in the AWS Cloud. This
    includes hardware, software, networking and facilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the latter, “*Security in the Cloud*”, the Customer is responsible for ensuring
    that their data, operating systems and applications they run on AWS are secure.
    This also includes configuration and access controls.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The below diagram details the demarcation areas of the AWS Shared Responsibility
    Model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22364_06_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.1 – AWS Share Responsibility Model (source: [https://aws.amazon.com/compliance/shared-responsibility-model/](https://aws.amazon.com/compliance/shared-responsibility-model/))'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Azure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure follows a similar shared responsibility model, where Microsoft is responsible
    for the security of the underlying cloud infrastructure, including data centers,
    physical hosts, and networking. Customers are responsible for securing their workloads,
    applications, data, and configurations within the Azure environment. Azure also
    emphasizes the importance of using their built-in security tools to manage and
    monitor the customer’s responsibilities effectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'This image shows us the divide of responsibility:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22364_06_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.2 – Azure Shared Responsibility Model (source: [https://learn.microsoft.com/en-us/azure/security/fundamentals/shared-responsibility](https://learn.microsoft.com/en-us/azure/security/fundamentals/shared-responsibility))'
  prefs: []
  type: TYPE_NORMAL
- en: The expectation from Microsoft is that you are the owner of your data therefore
    you are responsible for it. You also maintain ownership and responsibility for
    accounts and identities as well as any device or user end points you might configure
    and utilize.
  prefs: []
  type: TYPE_NORMAL
- en: GCP (Google Cloud Platform)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Google also adheres to a very familiar model to the other providers where Google
    is the owner of the global infrastructure, network, and foundational services
    and therefore responsible. Similarly, Customers are expected to manage their data,
    applications, and access controls.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike other providers, note today, Google operates a slightly augmented Shared
    responsibility model called “Shared responsibility and Shared fate”. This adds
    geographical location and Industry also into the considerations.
  prefs: []
  type: TYPE_NORMAL
- en: Geographical location awareness starts with looking at your responsibilities
    depending on where you deploy your workload and where your customer data resides.
    E.g. If you deploy in the EU, you may find yourself having to abide by the requirements
    of GDPR (General Data Protection Regulation) and you will then have to ensure
    your data doesn’t leave the EU.
  prefs: []
  type: TYPE_NORMAL
- en: Various Industries may have different regulatory compliance frameworks, which
    then may stipulate how you handle data. For example, the Payment Card Industry
    Data Security Standard stipulates how payment processors look after their data
    and isolate certain data types.
  prefs: []
  type: TYPE_NORMAL
- en: In both situations, Google has a separate Responsibility Matrix to ensure services
    and architectures are secure by design.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – GCP shared responsibility shared fate (source: https://cloud.google.com/architecture/framework/security/shared-responsibility-shared-fate)](img/B22364_06_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.3 – GCP shared responsibility shared fate (source: [https://cloud.google.com/architecture/framework/security/shared-responsibility-shared-fate](https://cloud.google.com/architecture/framework/security/shared-responsibility-shared-fate))'
  prefs: []
  type: TYPE_NORMAL
- en: Common Misunderstandings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Despite the clarity of the shared responsibility model, several misconceptions
    persist that can lead to security oversights and vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Misconception 1: The Provider Handles Everything'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One common misunderstanding is the belief that cloud providers handle all aspects
    of security. While providers do ensure the security of the infrastructure, they
    do not manage customer-specific configurations or data security.
  prefs: []
  type: TYPE_NORMAL
- en: Reality Check
  prefs: []
  type: TYPE_NORMAL
- en: Customers must take an active role in securing their applications and data within
    the cloud environment. Neglecting this responsibility can lead to data breaches
    and compliance failures.
  prefs: []
  type: TYPE_NORMAL
- en: 'Misconception 2: Security Tools are Built-In'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some organizations assume that using a cloud provider automatically includes
    comprehensive security tools. While providers offer a range of security services,
    it is up to customers to configure and use these tools effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Reality Check
  prefs: []
  type: TYPE_NORMAL
- en: Customers must select, configure, and manage the appropriate security tools
    to meet their specific needs and compliance requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Misconception 3: Compliance is Guaranteed'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another misconception is that compliance with industry standards is guaranteed
    by using a compliant cloud provider. However, compliance is a shared responsibility,
    and customers must ensure that their specific configurations and data-handling
    practices meet regulatory requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Reality Check
  prefs: []
  type: TYPE_NORMAL
- en: Customers should conduct regular compliance assessments and audits to ensure
    their operations within the cloud meet all relevant standards.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud Provider Proof of Compliance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the latter misconception, it’s worth noting that each of the cloud providers
    will provide you attestations of their compliance to their part of the shared
    responsibility. An example of this is that a Cloud Service may become FedRAMP
    or HIPPA compliant. But how do we prove this?
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS**: AWS Artifact is your quick-access portal for grabbing all the compliance
    documentation you need when using AWS. Whether it’s SOC reports, ISO certifications,
    or PCI-DSS attestations, Artifact has it all in one place, saving you the hassle
    of hunting down the paperwork when you need to prove your environment meets industry
    standards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure**: Azure Compliance Manager not only gives you access to the necessary
    compliance reports but also helps you manage your compliance posture with a clear
    dashboard and built-in workflows. It’s all about making compliance easier, giving
    you the insights and tools to stay on top of regulatory requirements without getting
    bogged down.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GCP**: Google Cloud Compliance Reports Manager keeps things straightforward,
    providing a centralized spot to download the compliance documentation relevant
    to your Google Cloud services. It’s all there, from SOC reports to ISO certifications,
    so you’re never left scrambling when it’s time to show your compliance credentials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common Misconfigurations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To put these common misunderstandings into more practical terms, the most common
    misconfigurations seen in the wild, due to misunderstanding or ignoring the shared
    responsibility model, are listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: Inappropriate access controls leading to unauthorized access to sensitive data
    and systems, further leading to data breaches, compromised accounts and insider
    threats.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not encrypting sensitive data stored in the cloud or during transmission between
    systems leading to data exposure, especially in the event of a data breach or
    interception during transit, resulting in loss of confidentiality and regulatory
    non-compliance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not patching Operating Systems or applying updates to applications and software,
    leading to vulnerability to known exploits and attacks, leading to potential system
    compromise, data breach and exploitation to malicious actors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using overly broad or permissive security group settings or firewall rules that
    allow unrestricted inbound or outbound traffic. This can lead to increased risk
    of unauthorized network access, exposing systems to potential attacks such as
    Distributed Denial of Service (DDoS), port scanning, or unauthorized data exfiltration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incorrectly configuring cloud storage services such as Amazon S3, Azure Blob
    Storage or Google Cloud Storage, allowing access to sensitive data, leading to
    accident data exposure and then leading to significant reputational damage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is not an exhaustive list however the scope for loss of data, reputation
    and then significant damage to reputation will eventually lead to commercial failure.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, understanding the shared responsibility model is crucial for effectively
    securing your cloud environment. By recognizing the distinct roles of cloud providers
    and customers, organizations can ensure that their security measures are comprehensive
    and robust. Educating your team, implementing strong security controls, and leveraging
    provider tools are essential steps in navigating this model successfully. By embracing
    your responsibilities, you can protect your organization’s data and applications,
    ensuring compliance and building trust with stakeholders in today’s dynamic digital
    landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Supply chain insecurity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the key areas that gets neglected in security is the Supply Chain. Think
    of your business as a series of interconnected parts and you are the middle link.
    You have vendors, suppliers, and partners all linked into each other like a bicycle
    chain. All of a sudden one of those links is compromised and you have a weak point
    in your chain. You’re all potentially at risk
  prefs: []
  type: TYPE_NORMAL
- en: In a cloud-based environment, your data and systems are often intertwined with
    those of third parties. This interdependence can expose your organization to vulnerabilities
    if your partners don’t have robust security measures in place. A breach in one
    part of the supply chain can have cascading effects, leading to data leaks, service
    disruptions, and reputational damage.
  prefs: []
  type: TYPE_NORMAL
- en: However, we cannot go through our day-to-day business without the chain of relationships
    between vendors and customers. These relationships are essential to us doing business.
    Therefore we have to look at how we trade information and data, safely and securely.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges in Supply Chain Security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Common challenges in supply chain security can arise from:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of visibility**: Often, organizations of all sizes can have limited
    insight into the security practices of their vendors. This lack of visibility
    makes it challenging to assess and manage risks effectively.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Varying security standards**: Different vendors may have different levels
    of security maturity, from zero trust to not having an enforced standard and ad
    hoc controls. While some may have rigorous security measures, others might not
    meet the same standards, creating gaps in your security posture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Complex relationships**: Managing relationships with multiple vendors can
    be complex. Ensuring consistent security practices across all partners requires
    effort and coordination.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Third-party access**: Vendors often need access to your systems and data
    to provide services. Without proper access controls, this can lead to over privileged
    access, increasing the risk of unauthorized actions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoiding Supply Chain Risks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To try and mitigate the risk of an insecure supply chain, try and adopt the
    following best practices:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Vendor-based risk management**: Have your new vendors complete a security
    audit or a risk evaluation prior to onboarding. Check they are following security
    best practices. It’s crucial at this point to set up a foundation for your risk
    tolerance, maybe categorize your different levels of risk based on the level of
    access to your environment they may need. It’s also important to respect regulatory
    requirements in these audits such as GDPR, CCPA, and HIPAA. You could also consider
    geographical location to be a factor in your prioritization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scheduled review of risk**: Having completed the risk assessment shouldn’t
    be a one-off activity. A vendor is generally out of your purview and things can
    change rapidly. If our vendor acquires a new CTO or CEO and they announce cost-cutting
    measures or improved efficiencies they may deem a certain security standard or
    practice to be changed or even removed if they believe it to be of excessive overhead.
    This may change your vendor’s risk profile, but you will not be aware of it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is where a regular review of the risk or a yearly security assessment may
    help identify any changed risk.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Scheduled review of requirements**: Just as much as things may change at
    your vendor, things will change within your own organization as well. You may
    deprecate systems, add in new systems, or change data locations. In this case,
    the access requirements of your vendor relationship will change too. It’s easy
    to grant new access to extra services but we often forget to remove the old access.
    This review should identify excessive permissions where possible'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Incident response across the chain**: What happens when there is a security
    incident somewhere in your supply chain? “Great question” I hear you exclaim.
    Because of the potential for tight dependencies on each other in the relationship
    and shared risk at this point, you will want to develop an Incident response plan.
    This needs to be concise actions and clear communication. Who reports what to
    whom? Why? Which members of who’s team need to enact what? At this point, honesty
    is the best policy, as they say. Ensure the policy removes any element of blame
    to ensure a swift outcome of the incident response plan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s worth noting that each cloud vendor also offers a series of playbooks/runbooks
    to help in the event of a security breach.
  prefs: []
  type: TYPE_NORMAL
- en: '| **AWS** | AWS Incident Response Playbook Samples | [https://github.com/aws-samples/aws-incident-response-playbooks](https://github.com/aws-samples/aws-incident-response-playbooks)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Azure** | Incident response playbooks | [https://learn.microsoft.com/en-us/security/operations/incident-response-playbooks](https://learn.microsoft.com/en-us/security/operations/incident-response-playbooks)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **GCP** | Data incident response process | [https://cloud.google.com/docs/security/incident-response](https://cloud.google.com/docs/security/incident-response)
    |'
  prefs: []
  type: TYPE_TB
- en: Table 6.1 - Cloud Provider Incident Response Playbooks
  prefs: []
  type: TYPE_NORMAL
- en: These playbooks, in most cases, are designed to augment your own processes and
    not be depended on as a sole resource.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of Supply Chain Insecurity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Quite often, you’ll not realize you have a supply chain security issue until
    it’s too late. These examples of real-world supply chain insecurities can help
    you learn by mistakes others have made in the wild:'
  prefs: []
  type: TYPE_NORMAL
- en: Example 1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A common example of this is providing vendors, suppliers or customers with third
    party API keys or access keys to your systems. These often don’t get rotated because
    of complexity in systems at the third-party side and/or lack of policy. The third
    party may also not store the credential in a secure way, leaving the keys exposed.
    This means that your system can be breached due to their lack of robust security.
  prefs: []
  type: TYPE_NORMAL
- en: Example 2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In 2016, a small npm package called left-pad caused a huge disruption across
    the JavaScript world. Left-pad’s job was simple—add padding to the left side of
    a string—but it was a dependency for thousands of projects, including major ones
    like React. Out of nowhere, the developer, frustrated with a separate dispute,
    decided to pull left-pad from npm. Instantly, projects around the globe broke
    down, leaving developers scrambling to fix the sudden mess.
  prefs: []
  type: TYPE_NORMAL
- en: This incident was a harsh lesson in supply chain insecurity. It showed how fragile
    our software ecosystems can be when we rely on external dependencies without safeguards
    in place. If something as small as left-pad could bring down so many projects,
    it’s clear we need to be more vigilant. This means verifying the integrity of
    packages, having backup plans, and thinking carefully about every dependency we
    include in our projects. Even the smallest component can cause a major headache
    when it’s gone.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s digital landscape, supply chain security is not just a nice-to-have,
    it’s a necessity. By proactively managing the security of your supply chain, you
    can protect your organization from the risks associated with third-party relationships
    and maintain the trust of your customers and stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: From this, you’ve got a solid handle on how to lock down your cloud environment
    by putting the principle of least privilege into practice. This gives you the
    tools to cut down the risks tied to over-privileged users and ensures you’ve got
    tighter control over who can access your critical resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'Throughout this chapter we have reviewed and understood the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Application of the prinicpal of least priviledge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous compliance in security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provactive monitoring of security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The shared responsiblity model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The importance of supply chain security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next chapter, we continue on to discuss the business logic that makes
    your application and common anti-pattern in some software development practices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 3: Turning It into Actions'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This final part will follow on from the previous part and describe common anti-patterns,
    how to avoid them, and how to transition to good habits. The areas we will explore
    include applications, data, networking, observability, operations, migrations,
    and testing. This final part will summarize how to prepare ourselves and our organization
    for a successful cloud adoption journey, how to spot anti-patterns, and how to
    define the best outcome. We will close by discussing achieving good stakeholder
    alignment, enhancing our roadmap, and setting our organization up for continuous
    improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B22364_07.xhtml#_idTextAnchor198)*, Expressing Your Business
    Goals in Application Code*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B22364_08.xhtml#_idTextAnchor224)*, Don’t Get Lost in the Data
    Jungle*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B22364_09.xhtml#_idTextAnchor250)*, Connecting It All*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B22364_10.xhtml#_idTextAnchor270)*, Observing Our Architecture*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B22364_11.xhtml#_idTextAnchor292)*, Running It Without Breaking
    It*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B22364_12.xhtml#_idTextAnchor320)*, Migrating from Legacy Systems
    to Cloud Native Solutions*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B22364_13.xhtml#_idTextAnchor337)*, How Do You Know It All Works?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B22364_14.xhtml#_idTextAnchor367)*, How to Get Started with
    Your Cloud Native Improvement Journey*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B22364_15.xhtml#_idTextAnchor386)*, Transitioning to Cloud Native
    Good Habits*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
