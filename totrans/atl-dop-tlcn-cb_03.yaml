- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Planning and Documentation with Confluence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we begin the development process, we must look for a convenient place to
    document our progress, specify what the scope of work is, and state how we’ll
    go about the development process. For many organizations, that place is **Confluence**.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Confluence with other products in the DevOps toolchain allows you
    to link artifacts from those other tools into Confluence documentation pages.
    The contents of these pages may include plans and other project data, as well
    as code contents from Bitbucket. By allowing this tight integration between Confluence
    pages and artifacts in Jira and Bitbucket, the documentation artifacts that are
    created as pages in Confluence have a richer context, enabling richer meaning
    and better understanding.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will leverage integrations between Confluence and the other
    Atlassian DevOps toolchain tools that are available. To do so, we’ll cover the
    following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating Confluence pages linked to Jira projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Displaying Jira issues from Confluence pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing reports generated in Jira on Confluence pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing Jira roadmaps in Confluence pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing linked pages from other applications using Smart Links
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete the recipes in this chapter, you’ll need to have created an Atlassian
    Cloud site with both Jira and Confluence installed. Connecting Confluence to Jira
    was covered in the *Connecting Confluence* recipe in [*Chapter 1*](B21937_01.xhtml#_idTextAnchor019).
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, a Jira administrator and possibly a Jira project administrator
    must verify you have the Browse Projects permission enabled for the project you
    want to work with. A Confluence Space administrator must verify that you are in
    the correct group and have enabled **Pages, whiteboard, and Smart Links**, as
    illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – Space permission to add Pages, whiteboard, and Smart Links](img/B21937_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.1 – Space permission to add Pages, whiteboard, and Smart Links
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve covered the prerequisites, let’s start by linking Confluence
    to a Jira project.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Confluence pages linked to Jira projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We learned how to integrate Jira and Confluence in [*Chapter 1*](B21937_01.xhtml#_idTextAnchor019).
    Within every Jira project, members can create and modify Confluence content directly
    from Jira.
  prefs: []
  type: TYPE_NORMAL
- en: 'The integration between Confluence pages and Jira projects allows you to keep
    documentation in close context with the events and artifacts that are produced
    by the project. Here are some examples of documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: User documentation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirement specifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Meeting notes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Release notes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s learn how to create such content and connect it to a Jira project.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can create Confluence pages without leaving Jira. This allows for greater
    productivity as it eliminates unnecessary context switching.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see how that’s done:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From your Jira project, select **Project pages** from the sidebar on the left,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Selecting Project pages](img/B21937_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.2 – Selecting Project pages
  prefs: []
  type: TYPE_NORMAL
- en: 'The page will show any content from Confluence, such as pages or Spaces (collections
    of pages) that have already been connected. From here, you have the following
    options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Edit a currently connected page
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a new page at the top level
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a new child page of an existing page
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s look at these options in more depth.
  prefs: []
  type: TYPE_NORMAL
- en: Editing an existing page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the **Project pages** page, find the page you wish to edit. Hover over the
    row corresponding to that page; you should see a pencil icon, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Selecting a page to edit](img/B21937_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.3 – Selecting a page to edit
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the pencil icon opens a modal where the page is ready to edit. Make
    your changes and click **Update** to publish the changed page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Here, you went to Confluence from Jira and edited the page via Confluence. The
    row updates to indicate that it was recently edited.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.4 – Updated page in Jira](img/B21937_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.4 – Updated page in Jira
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To the right of the **Project pages** page is a section that shows relevant
    page templates.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.5 – Selecting a template for a new page](img/B21937_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – Selecting a template for a new page
  prefs: []
  type: TYPE_NORMAL
- en: 'Selecting a template opens a new page where that template is being used in
    a modal, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Editing a new page](img/B21937_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Editing a new page
  prefs: []
  type: TYPE_NORMAL
- en: Make the desired changes and click **Publish** to make the page available to
    others in Confluence or Jira. The page will appear at the top level of the Space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should now have a brand-new page in Confluence that’s connected to your
    Jira project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.7 – New Page seen in Jira](img/B21937_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – New Page seen in Jira
  prefs: []
  type: TYPE_NORMAL
- en: Creating a child page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: On the **Project pages** page, find the page you want to use as the parent.
    Hover over the row representing that page to view the various tools, such as the
    pencil icon. Select the plus sign (**+**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Selecting the parent page](img/B21937_03_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Selecting the parent page
  prefs: []
  type: TYPE_NORMAL
- en: A page you wish to edit will open as a modal. Make the desired changes and click
    **Public** to make the page available to others in Confluence or Jira.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So far, the content we’ve added to our Confluence pages has been text that we’ve
    edited using a default text editor. In the following recipes, we’ll look at adding
    special content to these pages.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying Jira issues on Confluence pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Integrating Confluence with Jira allows for enhanced content to be added to
    Confluence pages for documentation purposes. The content that’s added through
    integration is updated in real time, allowing the Confluence page to be dynamic.
  prefs: []
  type: TYPE_NORMAL
- en: You can integrate Jira issues into Confluence pages by using **macros**. These
    are add-on features that are native to Confluence or can be added through Atlassian
    Marketplace apps. They provide enhanced formatting and allow you to add content.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a closer look at how to use Confluence macros.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will use macros to perform the following actions:'
  prefs: []
  type: TYPE_NORMAL
- en: Display existing Jira issues from the Jira project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create new Jira issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each action utilizes a different macro.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying existing Jira issues
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s look at the macro that displays existing Jira issues:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the available macros, select the plus sign (**+**) on the page you’re
    editing or edit the modal in Jira, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Adding a macro](img/B21937_03_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.9 – Adding a macro
  prefs: []
  type: TYPE_NORMAL
- en: Search for the appropriate Jira-specific macro. In this case, we want to find
    the **Jira Issues** macro from the pulldown shown in the following screenshot.
    You can search by keyword or select a category. Select **View more** to view all
    categories.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Searching for a macro](img/B21937_03_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.10 – Searching for a macro
  prefs: []
  type: TYPE_NORMAL
- en: When selecting **View more**, all the available macros can be accessed on a
    separate **Browse** screen by category or by searching for them. Select the macro
    you wish to use and click **Insert**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.11 – Selecting a macro from the Browse screen](img/B21937_03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.11 – Selecting a macro from the Browse screen
  prefs: []
  type: TYPE_NORMAL
- en: In our case, we want to find the `jira` and selecting it from the possible options
    that appear.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.12 – Selecting the Jira Issues macro](img/B21937_03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.12 – Selecting the Jira Issues macro
  prefs: []
  type: TYPE_NORMAL
- en: The **Jira Issues** macro looks for issues to display through a **BASIC** search
    mechanism or a **Jira Query Language** (**JQL**) query for more advanced queries.
    Search for the desired issues and select **Insert issues**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.13 – Selecting Jira issues](img/B21937_03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.13 – Selecting Jira issues
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know how to use macros to add content, let’s look at using a macro
    to create new Jira issues.
  prefs: []
  type: TYPE_NORMAL
- en: Creating new Jira issues
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a new Jira issue and link it to our Confluence page, we are going
    to use a different macro. Follow these steps to create new Jira issues through
    a macro:'
  prefs: []
  type: TYPE_NORMAL
- en: We can look for Jira macros in the **Development** category, as shown in the
    following screenshot. Select the **Create Jira issue** macro and click **Insert**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.14 – Selecting the Create Jira issue macro](img/B21937_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.14 – Selecting the Create Jira issue macro
  prefs: []
  type: TYPE_NORMAL
- en: The fields that you can use to edit the new Jira issue will appear as a modal.
    Fill in the desired fields and click **Create** to record the new Jira issue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.15 – Creating a Jira issue](img/B21937_03_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.15 – Creating a Jira issue
  prefs: []
  type: TYPE_NORMAL
- en: 'Once created, the Jira issue can be formatted so that it can displayed on the
    Confluence page. You can choose from the following configurations:'
  prefs: []
  type: TYPE_NORMAL
- en: URL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single line of text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a card, with several fields showing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Embedded onto the page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The desired formatting can be changed if the Confluence page is in edit mode.
  prefs: []
  type: TYPE_NORMAL
- en: With that, you should have a new Jira issue that’s also present on the Confluence
    page.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more information about creating queries using JQL, check out the following
    resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/watch?v=KC7vPPP2sQo](https://www.youtube.com/watch?v=KC7vPPP2sQo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/watch?v=Bbvl9PqCePA](https://www.youtube.com/watch?v=Bbvl9PqCePA)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.atlassian.com/software/jira/guides/jql/overview#what-is-jql](https://www.atlassian.com/software/jira/guides/jql/overview#what-is-jql)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing Jira reports on a Confluence page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The same reports that are created on Jira can be replicated and displayed on
    a Confluence page. Macros allow you to replicate and display these reports. These
    macros come built into Confluence or may be provided by third-party Atlassian
    Marketplace apps such as Custom Charts for Jira.
  prefs: []
  type: TYPE_NORMAL
- en: You might be wondering, “If the reports are available on Jira, why use Confluence?”
    The answer is that Confluence provides the perspective of viewing the reports
    within the greater context of the project. A report can be embedded within a Confluence
    page or as part of a Confluence Space, which keeps all of the project information
    together in one spot for easy lookup.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s examine how to enable these reporting macros on your project’s Confluence
    page.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following macros can be used for reporting in Confluence:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The JIRA report template**: This is a Confluence page template for text-based
    reports such as **Change log** or **Status report**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The JIRA Charts macro**: This allows you to place custom 2D graphs, created
    versus resolved charts, or pie charts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s learn how to create reports regarding Jira data in Confluence using these
    macros.
  prefs: []
  type: TYPE_NORMAL
- en: Using the JIRA Charts macro
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We’ll start by looking at the JIRA Charts macro:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The reporting macros can be found in the **Development** category when you’re
    browsing for macros, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.16 – Browsing the Development category for reporting macros](img/B21937_03_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.16 – Browsing the Development category for reporting macros
  prefs: []
  type: TYPE_NORMAL
- en: Select **JIRA Charts** and click **Insert**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'An alternate method for finding and selecting any Confluence macro can be done
    while editing the Confluence page. Just add a backslash character (`/`) to an
    empty line, as depicted here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.17 – Selecting a macro while editing a Confluence page](img/B21937_03_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.17 – Selecting a macro while editing a Confluence page
  prefs: []
  type: TYPE_NORMAL
- en: Continue typing the name of the macro (in this case, `JIRA Charts`). The built-in
    search function will limit the possible options as you type. When you find the
    macro you want, select it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once selected from either the browse modal or via inline editing, various configuration
    options for the reporting macro will appear in a modal. Configure the desired
    options, including data sources, refresh interval, and formatting. An example
    of this is shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.18 – Configuring the JIRA Charts macro](img/B21937_03_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.18 – Configuring the JIRA Charts macro
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see, the configuration includes selecting the type of chart (**Two
    Dimensional**, **Created vs Resolved**, or **Pie Chart**), specifying the data
    source through a JQL query or filter, and various **Display options**, including
    grouping the data. Once you’ve finished configuring the chart, click **Insert**.
    An example of doing such a configuration using the **Created vs Resolved** chart
    is shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.19 – Setting the configuration for the JIRA Charts macro](img/B21937_03_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.19 – Setting the configuration for the JIRA Charts macro
  prefs: []
  type: TYPE_NORMAL
- en: 'The chart will be generated and added to the Confluence page. The resulting
    page should look something like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.20 – A Jira chart on a Confluence page](img/B21937_03_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.20 – A Jira chart on a Confluence page
  prefs: []
  type: TYPE_NORMAL
- en: By following the preceding steps, you have created and configured a Jira chart
    and set its display to a Confluence page.
  prefs: []
  type: TYPE_NORMAL
- en: Other reports use the **JIRA** **report** template.
  prefs: []
  type: TYPE_NORMAL
- en: Using the JIRA report template
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s look at an example of creating a Confluence page with a template and
    configuring a report. Reports such as a change log or a status report can form
    the basis of design documentation that gets updated throughout the project. Follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new Confluence page using the **JIRA report** template. You can search
    for this by using the **More templates** option in the **Create a** **page** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.21 – Using the More templates option](img/B21937_03_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.21 – Using the More templates option
  prefs: []
  type: TYPE_NORMAL
- en: 'On the page that opens, type `Jira report` in the search bar. You should see
    the following result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.22 – Finding the JIRA report template](img/B21937_03_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.22 – Finding the JIRA report template
  prefs: []
  type: TYPE_NORMAL
- en: 'Selecting the **JIRA report** template and clicking **Use** opens a modal where
    you can select a report type, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.23 – Select report type](img/B21937_03_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.23 – Select report type
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the report type you wish to use and clicking **Next** opens another
    page where you can choose which project you want to create a status report for
    and edit its title.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.24 – Create a status report](img/B21937_03_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.24 – Create a status report
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding figure, we selected a status report and identified its project.
    The respective page is created after clicking the **Create** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With that, we’ve created either a Jira change log or status report that’s visible
    on a Confluence page based on the **JIRA** **report** template.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.25 – Our newly created change log](img/B21937_03_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.25 – Our newly created change log
  prefs: []
  type: TYPE_NORMAL
- en: Viewing Jira roadmaps on a Confluence page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you’ve created a timeline in your project, you can display that timeline
    as a roadmap on a Confluence page. We will use the **Jira timeline** macro to
    facilitate this.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s learn how to create a Jira roadmap on a Confluence page:'
  prefs: []
  type: TYPE_NORMAL
- en: On a Confluence page, look for the Jira timeline macro. Once found, add it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.26 – Configuring the Jira timeline macro](img/B21937_03_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.26 – Configuring the Jira timeline macro
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **Jira timeline** page of your project, copy and paste the URL into
    the **Paste a Jira instance URL** text area, and click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By pasting the URL of the **Jira timeline** page, you’ve linked the Jira roadmap
    to a Confluence page.
  prefs: []
  type: TYPE_NORMAL
- en: So far, we’ve been looking at connecting Jira to Confluence to allow Confluence
    to display Jira artifacts. In the next recipe, we’ll turn our attention to connecting
    other applications so that they can do the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: Viewing linked pages from other applications using Smart Links
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Content that resides on other applications, such as Bitbucket, GitLab, and Figma,
    can be displayed dynamically on a Confluence page using **Smart Links**. Smart
    Links allow Confluence to display URL links from various applications, including
    Atlassian products such as Bitbucket and Jira, inline or embedded in pages.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a close look at how to embed linked page content onto a Confluence
    page using Smart Links.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Smart Links can be established from both Atlassian and non-Atlassian products.
    The following Atlassian products can have their links specified as Smart Links:'
  prefs: []
  type: TYPE_NORMAL
- en: Atlas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Atlassian Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bitbucket
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compass
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira Roadmaps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira Align
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trello
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Non-Atlassian products that are commonly used in the application development
    process and have their links expressed as Smart Links in Confluence include Azure
    DevOps, GitHub, and GitLab. A complete list of supported applications can be found
    at [https://support.atlassian.com/confluence-cloud/docs/insert-links-and-anchors/#Smart-Links-from-Jira-and-other-products](https://support.atlassian.com/confluence-cloud/docs/insert-links-and-anchors/#Smart-Links-from-Jira-and-other-products).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a closer look at what’s involved in setting up Smart Links.
  prefs: []
  type: TYPE_NORMAL
- en: Authenticating with the other application
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For any non-Atlassian product that requires authentication, you must log into
    that application first to display the Smart Link on the Confluence page. You should
    only need to log in once. This will be effective on all sites in that Atlassian
    Cloud organization.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With authentication established, let’s create and configure our Smart Links:'
  prefs: []
  type: TYPE_NORMAL
- en: With the Confluence page in edit mode, copy the desired URL from the second
    application and paste it into the desired spot on your Confluence page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To make adjustments to the formatting of the linked content, click the Smart
    Link. Various controls should appear, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.27 – Smart Link controls](img/B21937_03_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.27 – Smart Link controls
  prefs: []
  type: TYPE_NORMAL
- en: 'The first four icons determine how the link will be displayed. The order from
    left to right is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Raw URL
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Title of the linked page
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Card mode showing the title of the linked page and a description (shown in the
    preceding screenshot)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Embedded mode, where the contents of the linked page will be visible
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The other controls allow you to perform the following actions:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Edit the underlying URL link
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the linked page on another browser tab
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the URL link
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **Link** **preferences** page
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the Smart Link from the Confluence page
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s take a closer look at link preferences.
  prefs: []
  type: TYPE_NORMAL
- en: Working with link preferences
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Link preferences are set on a per-account basis – that is, they are the preferred
    settings for all Smart Links that are created by an individual user. As such,
    they will show up as part of a user’s Atlassian account settings, found under
    [https://id.atlassian.com](https://id.atlassian.com). Let’s take a closer look:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the aforementioned page, you will find the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Default display**: Sets the default display when creating a Smart Link'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exceptions for specific domains**: Specifies exceptions based on the link’s
    domain'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.28 – The Link preferences page](img/B21937_03_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.28 – The Link preferences page
  prefs: []
  type: TYPE_NORMAL
- en: To set the default display, select the desired mode (**Display URL**, **Display
    Inline**, or **Display Card**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To set an exception for the default display, type the domain’s URL, select the
    desired mode (**Display URL**, **Display Inline**, **Display Card**, or **Display
    Embed**), and click **Submit**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With that, we’ve set up the configuration that Atlassian will use to establish
    Smart Links when they’re created by an individual, as well as how to create Smart
    Links.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 2: Development to Deployment'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this part of the development process, we are developing our implementation.
    That requires the software being developed to be under version control, where
    we track all changes against the previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: Upon a commit performed in Git, a pipeline springs into action. Scanning and
    tests are run to find errors and security vulnerabilities. If everything passes,
    packaging of the build artifacts is done by the pipeline for deployment.
  prefs: []
  type: TYPE_NORMAL
- en: This part examines the role played by pipelines to perform all the necessary
    activities triggered by a commit to Git. We begin by describing how to connect
    Jira to external Git server tools and external pipeline tools for continuous integration.
  prefs: []
  type: TYPE_NORMAL
- en: We then introduce Bitbucket Cloud. This tool can act as both a Git server and
    a pipeline tool with Bitbucket Pipelines. With Bitbucket Pipelines, we explore
    the different functions available, including connecting with testing and security
    tools and, ultimately, deployment to different environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B21937_04.xhtml#_idTextAnchor072), *Enabling Connections for
    Design, Source Control, and Continuous Integration*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B21937_05.xhtml#_idTextAnchor087), *Understanding Bitbucket and
    Bitbucket Pipelines*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B21937_06.xhtml#_idTextAnchor103)*,* *Extending and Executing
    Bitbucket Pipelines*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B21937_07.xhtml#_idTextAnchor137)*,* *Leveraging Test Case Management
    and Security Tools for DevSecOps*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21937_08.xhtml#_idTextAnchor149)*,* *Deploying with Bitbucket
    Pipelines*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21937_09.xhtml#_idTextAnchor185)*,* *Leveraging Docker and Kubernetes
    for Advanced Configurations*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
