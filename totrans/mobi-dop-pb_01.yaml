- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Resolving Challenges in Mobile DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Release times for mobile apps can be extended due to their nature. Mobile-first
    features help you test, build, and release them more efficiently and quickly.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure Mobile DevOps is successful, it is imperative for development, operations,
    and QA teams to collaborate closely. Establish clear lines of communication to
    ensure everyone is on the same page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to this, in this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The importance of mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Mobile DevOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How does Agile work in Mobile DevOps?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transforming Mobile DevOps effectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to accelerate Mobile DevOps in your organization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Team roles and responsibilities for Mobile DevOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Large-scale mobile app development challenges
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The importance of mobile apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every day, digital transformation gains traction. Consumers today demand better
    products and services and businesses need to adopt technologies to stay competitive.
    This will enable them to be more efficient and to make better decisions.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, there is room for innovation that meets customer needs. All of
    this requires integration, continuous development, innovation, and deployment.
    It is all possible with Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: In particular, mobile app development is becoming more challenging and complicated
    every day. Today, we rely on mobile apps to accomplish a number of tasks, including
    online shopping, online payments, money transfers, medical consultations, e-learning,
    social sharing, and so much more.
  prefs: []
  type: TYPE_NORMAL
- en: With all of these activities, customers expect mobile apps to perform better,
    have a friendly user interface, be customizable, and multilingual, and have more
    advanced features, with a small footprint.
  prefs: []
  type: TYPE_NORMAL
- en: When your mobile app launches with bugs, it is very difficult, if not impossible,
    to maintain and recover it. The process of finding the root cause, preparing a
    new release, testing it, and releasing the hotfix again requires a lot of effort
    on the part of the team. You may need to wait weeks or months for that to happen.
    As a result, your customers **will** leave negative reviews on the App Stores
    during this time.
  prefs: []
  type: TYPE_NORMAL
- en: “*To maximize customer satisfaction and value, you must examine your processes
    and tooling and identify opportunities* *for improvement.*”
  prefs: []
  type: TYPE_NORMAL
- en: But the question is, can your current workflow or setup support your mobile
    app in the long run? What about the future? Is your team able to cope with the
    scale? What happens if the business and the team grow? Last but not least, is
    your team satisfied with the tasks they perform on a daily basis?
  prefs: []
  type: TYPE_NORMAL
- en: Mobile teams focus on handling increasingly challenging tasks. Because of this
    focus, it is all too easy to miss the process altogether. Mobile developers will
    spend less time fixing bugs if they stop and check their work regularly (a DevOps
    process).
  prefs: []
  type: TYPE_NORMAL
- en: Challenges lie ahead
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Smartphone usage is growing worldwide. **In 2025, there are expected to be
    7.49 billion smartphone users worldwide, up from 7.26 billion in 2022**. More
    details can be found at this link: [https://shorturl.at/vCQ13](https://shorturl.at/vCQ13)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: By 2026, it is estimated that the worldwide spending on premium apps, in-app
    purchases, and subscriptions will reach $233 billion across Apple’s App Store
    and Google Play, which is 77 percent above the $132 billion spent in 2021 by consumers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, it is expected that over the next 5 years, the gross revenue
    on both app stores will continue to rise at a rate of 12 percent at a **compound
    annual growth rate** (**CAGR**) of 19 percent, reaching $233 billion in 2026\.
    More details can be found at this link: [https://sensortower.com/blog/sensor-tower-app-market-forecast-2026](https://sensortower.com/blog/sensor-tower-app-market-forecast-2026).'
  prefs: []
  type: TYPE_NORMAL
- en: Wow, that’s a lot! There is no doubt that all businesses need to prepare for
    the next wave, be aware of their challenges, put together a plan for the next
    wave, and not mention the opportunity to grow and improve.
  prefs: []
  type: TYPE_NORMAL
- en: 'In mobile development, every business has the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Unique processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unique investments and goals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unique people and culture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Here’s an example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fintech apps play a huge role in our everyday activities. Individuals can use
    these apps to manage their finances and make financial decisions, and they often
    offer personalized recommendations and insights using advanced technology such
    as artificial intelligence and machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: Whether in e-commerce, food/groceries delivery, or digital banking, fintech
    is becoming an integral part of our personal and professional lives.
  prefs: []
  type: TYPE_NORMAL
- en: In the digital age, fintech has already made a significant impact, and these
    advanced technological tools for both private and marketable finance will only
    evolve further in their usage and effectiveness.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile apps of this type require different processes from other apps. They need
    an effective test automation strategy including security testing since security
    is very important here, app performance is also important, and releasing frequently
    and quickly is a high priority due to competition or customer satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if we are creating a social media app, the requirements and
    processes will differ.
  prefs: []
  type: TYPE_NORMAL
- en: Because of this, I believe that there is **no silver bullet** and each team
    or company should come up with its own solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Let me tell you a story
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to understand the importance of Mobile DevOps, let me share with you
    a real-world scenario that occurred before we had any processes, technologies,
    or stack in place for Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose that we are working at XYZ, a fintech company, and the process of developing
    and releasing mobile apps could be faster and more efficient. Before an app can
    be released, the development team spends weeks or even months building and testing
    new features, and the QA team finds bugs that needed to be fixed manually because
    they don’t have test automation scripts. Because of this, new versions of the
    app are rarely released, and when they are, they often have issues that need to
    be fixed later.
  prefs: []
  type: TYPE_NORMAL
- en: 'The current challenges can be summarized as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Our new features are released every 3 months**: This is a huge factor because
    we have to keep up with competitors and release new features as quickly as possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Our deployment process is chaotic and painful** because we don’t have a clear
    deployment process or release manager.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Continuous Integration (CI) pipelines or workflows are inflexible and
    fragile** and our team spends a great deal of time and effort dealing with daily
    issues related to the CI server and configuration, as well as network issues and
    device issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**There are a lot of problems associated with manual testing**, including them
    being time-consuming and effort-consuming. Additionally, UI tests as well as emulators
    may not work well if we have automated tests, which drives us to have flaky tests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**There are no security testing tools available to us** and we have no idea
    which tools to use for security testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was frustrating for the management team to see the slow rate of app development
    and the many issues with it. Despite knowing it needed to improve the way it developed
    and released mobile apps, it didn’t know where to begin. Previously, the team
    released every **3 months**, and the first goal was to reduce the release cycle
    to **1 month or 2 weeks (a weekly or bi-weekly** **release cadence)**.
  prefs: []
  type: TYPE_NORMAL
- en: In order to improve its mobile app development process, the company adopted
    **Mobile DevOps** practices. It started a collaboration process between its mobile
    development and QA teams on the principles of Mobile DevOps, including CI, continuous
    delivery, and continuous deployment.
  prefs: []
  type: TYPE_NORMAL
- en: '*Mobile DevOps =* *faster releases*'
  prefs: []
  type: TYPE_NORMAL
- en: With Mobile DevOps, the company was able to significantly improve the speed
    and reliability of its mobile app development process. The mobile development
    team was able to make small, frequent updates to the app, and the QA team was
    able to quickly identify and fix any issues that arose.
  prefs: []
  type: TYPE_NORMAL
- en: '*As a result, the company was able to release new versions of the app more
    frequently, with* *fewer issues.*'
  prefs: []
  type: TYPE_NORMAL
- en: The management team was pleased with the results of the Mobile DevOps implementation,
    and the more stable and frequently updated apps led to significant improvements
    in user satisfaction. As a result, the company was able to deliver high-quality
    apps to users more quickly and efficiently than before.
  prefs: []
  type: TYPE_NORMAL
- en: But was it easy? No, it required a change in the team’s mindset and the involvement
    of all the team members to achieve success.
  prefs: []
  type: TYPE_NORMAL
- en: Is this something that takes a short amount of time? No, it’s a journey that
    never ends, a process that’s always evolving to address the challenges of developing
    mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'Considering my point of view, I believe the following:'
  prefs: []
  type: TYPE_NORMAL
- en: “*Mobile DevOps is a journey, not* *a destination.*”
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have addressed most of the main challenges that mobile teams face
    on a daily basis, let’s learn why we need to consider a process such as Mobile
    DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Why does Mobile DevOps matter?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mobile DevOps enables teams to release new features, updates, and bug fixes
    at a faster pace. This agility helps meet evolving user demands and gain a competitive
    edge in the market. It ensures higher app quality with automated testing and continuous
    monitoring by reducing the number of bugs and issues reaching end users, which
    leads to improved user experience and customer satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: It also promotes collaboration and communication between developers, testers,
    and operations teams. This collaborative environment facilitates knowledge sharing,
    feedback exchange, and a culture of teamwork and collective ownership.
  prefs: []
  type: TYPE_NORMAL
- en: 'During the previous short story, we encountered different challenges that hindered
    our progress such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Inflexible and fragile development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The QA team takes a long time to approve the new release
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Releasing a new version of the app takes a long time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We don’t have a clear process or responsibilities for the releases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It then realized Mobile DevOps processes could help it resolve all of these
    issues because of the benefits of Mobile DevOps, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Solving problems and delivering results faster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your business will be more agile as a result
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building trust and collaboration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Innovation results from automation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Costs and risks are significantly reduced
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Focusing on customer satisfaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Faster feedback and time to market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved ability to build the right solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better product quality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More reliable releases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved productivity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile DevOps processes can help businesses solve problems faster, become more
    agile, build trust and collaboration, reduce costs and risks, focus on customer
    satisfaction, and improve product quality, reliability, productivity, and the
    time to market.
  prefs: []
  type: TYPE_NORMAL
- en: This will be a quick introduction to Mobile DevOps since we will go into it
    further in [*Chapter 3*](B18113_03.xhtml#_idTextAnchor083), *Mobile* *DevOps Fundamentals*.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Mobile DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mobile DevOps is a set of practices that speeds up the development and delivery
    of mobile apps. The approach combines the principles of DevOps, which emphasize
    collaboration and automation in software development, with the specific challenges
    and considerations of developing mobile applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mobile DevOps involves the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Collaboration and communication**: Mobile DevOps requires close collaboration
    and communication between development, operations, and QA teams. It is important
    to establish clear lines of communication and channels for feedback and collaboration
    to ensure that everyone is working together toward the same goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous integration, deployment, and delivery**: Mobile DevOps relies
    on automated processes for the CI and delivery of mobile apps. This means that
    code changes are automatically built, tested, and deployed to staging and production
    environments, without the need for manual intervention.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing and quality assurance**: Testing and quality assurance are critical
    components of Mobile DevOps. Automated testing tools and processes should be integrated
    into the development workflow to ensure that new code changes do not introduce
    bugs or regressions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring and feedback**: Mobile DevOps also involves monitoring the performance
    and usage of mobile apps in production environments, and using that data to provide
    feedback to development teams. This can help identify and resolve issues quickly
    and improve the overall user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tooling and technology**: To implement Mobile DevOps effectively, organizations
    need to invest in the right tools and technologies. This may include tools for
    CI and delivery, automated testing, monitoring, and feedback.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For the Mobile DevOps approach to be as effective as possible, you should also
    integrate security throughout the entire life cycle of the mobile app releases.
    The Mobile DevOps approach integrates security into the process from the start,
    with security becoming a shared responsibility. It is called “DevSecOps” because
    all DevOps initiatives must be based on a secure foundation.
  prefs: []
  type: TYPE_NORMAL
- en: DevOps versus Mobile DevOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Almost every company now uses DevOps to build, test, and deliver their backend
    services (APIs), websites, or infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of mobile engineering, Mobile DevOps is a variant of DevOps that
    focuses on the ability to rapidly deliver high-quality apps to the market, through
    faster iteration cycles and improved collaboration between the mobile development,
    operation and QA teams. A key goal of Mobile DevOps and DevOps is to promote fast,
    high-quality software delivery by automating, collaborating, and communicating
    between teams.
  prefs: []
  type: TYPE_NORMAL
- en: During the Mobile DevOps life cycle, a slightly different approach is taken.
    There is a change made to the steps, but the continuity symbol remains the same
    to deliver value apps frequently to customers, maintain quality, and monitor the
    applications' health in real time. An updated mobile development life cycle would
    likely include **continuous integration/continuous delivery** (**CI/CD**) strategies,
    builds, tests, releases, monitoring, and measurement.
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 1.1 – Mobile DevOps \uFEFFversus DevOps](img/Figure_1.1_B18113.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – Mobile DevOps versus DevOps
  prefs: []
  type: TYPE_NORMAL
- en: Mobile DevOps extends the principles of DevOps to mobile app development, emphasizing
    collaboration and automation throughout the development life cycle. Because of
    fostering collaboration between developers, testers, and operations teams, I’m
    using the preceding figure. It’s the same practices but, for mobile, they’re unique
    and include different challenges.
  prefs: []
  type: TYPE_NORMAL
- en: The focus
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DevOps focuses on different types of software or applications such as websites,
    and backend services, but Mobile DevOps is specifically focused on mobile applications.
  prefs: []
  type: TYPE_NORMAL
- en: The complexity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The wide range of device types, OS versions, and network conditions that mobile
    applications must support often makes their deployment environments more complex
    and varied than those of traditional software or applications.
  prefs: []
  type: TYPE_NORMAL
- en: How does Agile work in Mobile DevOps?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Since we have already spent so much time describing the differences between
    the Waterfall model and Agile in different books, articles, and videos, I don’t
    want to spend more time describing the Waterfall model. However, let me ask you
    a question: **can a Waterfall model be used with DevOps, or is Agile** **more
    appropriate?**'
  prefs: []
  type: TYPE_NORMAL
- en: You can find the answer if you take the advantages of Mobile DevOps (listed
    previously) and the challenges in Mobile App Development (listed previously) and
    apply them to the Waterfall Model and Agile.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re still confused, remember the Agile Manifest[o at the following link:
    https://agilemanifesto.org/](https://agilemanifesto.org/principles.html) .'
  prefs: []
  type: TYPE_NORMAL
- en: What’s the answer now? I can help you, but first, let’s recall the Waterfall
    model and identify the problems.
  prefs: []
  type: TYPE_NORMAL
- en: The Waterfall model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Waterfall model is a **linear** approach to software development that involves
    a sequential and linear flow from one phase to the next in a downward direction.
    Therefore, each phase must be completed in its entirety before the next phase
    can begin.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.2 – The Waterfall model](img/Figure_1.2_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – The Waterfall model
  prefs: []
  type: TYPE_NORMAL
- en: 'The phases in the Waterfall model are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gathering and analyzing requirements**: This phase involves identifying the
    problem that the software will solve, determining the requirements for the software,
    and creating a specification.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Design**: A detailed technical design of the software is created, as well
    as interfaces between various components, and a plan for implementing the software
    is constructed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implementation**: In this phase, the actual coding of the software takes
    place. The code is created based on the previous phase’s design.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing**: In this phase, software testing is performed to ensure that the
    software meets the specifications in the specification document and performs as
    intended.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deployment**: During this phase, the software is deployed to its target environments,
    such as production servers or mobile devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maintenance**: As part of the maintenance phase, any bugs or issues found
    in the software are fixed, new features or functionality are added, and the software’s
    performance is improved.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are some drawbacks to the Waterfall model. It assumes that the requirements
    for the software can be gathered and analyzed upfront, which may not always be
    possible. Furthermore, it assumes that the software is designed correctly and
    completely, which may not always be the case. As a final note, once the development
    process has moved on, no changes can be made to the software.
  prefs: []
  type: TYPE_NORMAL
- en: Is Waterfall a viable model for Mobile DevOps? In practice, no, because Mobile
    DevOps involves CI, continuous testing, continuous deployment, and continuous
    monitoring changes are normal and phases are not silos or isolated islands. In
    Mobile DevOps, all the cross-functional teams work together in one process, with
    one goal and one objective, which is to deliver mobile apps quickly, frequently,
    and at a high level of quality in order to satisfy customers.
  prefs: []
  type: TYPE_NORMAL
- en: Agile
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In contrast, the agile methodology is regarded as the direct successor to the
    waterfall methodology. It is a set of principles that emphasizes **collaboration,
    flexibility, and rapid iteration** in software development. This is a system that
    is built on the Agile Manifesto, which outlines a set of values and principles
    that are critical to delivering high-quality software within a short time frame.
  prefs: []
  type: TYPE_NORMAL
- en: Often, Agile is implemented using Agile methodologies such as **Scrum**, in
    which team members communicate and provide feedback to each other in short development
    cycles (called sprints).
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Agile Principles ([https://agilemanifesto.org/principles.html](https://agilemanifesto.org/principles.html))
    behind the Agile Manifesto, we can find the **first** principle is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: “*Our highest priority is to satisfy the customer through early and continuous
    delivery of valuable software.*”
  prefs: []
  type: TYPE_NORMAL
- en: Do you remember the benefits of Mobile DevOps? **Customer stratification** and
    **frequent delivery** of mobile apps. Due to this, the Agile Principle with Mobile
    DevOps aims to speed up the development and delivery of mobile apps using a CI,
    continuous delivery, and continuous deployment strategy, enabling teams to release
    mobile applications rapidly and reliably.
  prefs: []
  type: TYPE_NORMAL
- en: There is a strong emphasis in both Mobile DevOps and Agile on **collaboration
    and communication between teams**, and both emphasize the **importance of automating
    repetitive tasks** in order to generate high-quality software products as quickly
    and efficiently as possible. Both also emphasize the **importance of delivering
    high-quality software products as quickly and as efficiently as possible**.
  prefs: []
  type: TYPE_NORMAL
- en: Agile emphasizes short development cycles, while DevOps emphasizes continuous
    delivery.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.3 – Agile methodology](img/Figure_1.3_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – Agile methodology
  prefs: []
  type: TYPE_NORMAL
- en: '**Achieving maximum velocity with minimal risks is the goal** – you need to
    experiment, test, and turn every stone in order not to fall behind customer demands
    or crash your current structure in the process. It is not important to prevent
    failure, but rather to recover quickly. The only thing that matters is how fast
    you recover.'
  prefs: []
  type: TYPE_NORMAL
- en: Mobile DevOps stages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Like DevOps, Mobile DevOps has different stages for mobile apps from planning
    to monitoring, including all the practices that help the mobile team to deliver
    qualitative mobile apps smoothly, quickly, and frequently.
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 1.4 – Mobile DevOps \uFEFFstages](img/Figure_1.4_B18113.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – Mobile DevOps stages
  prefs: []
  type: TYPE_NORMAL
- en: '**Strategy and planning**: This involves identifying the goals and objectives
    of the mobile app, as well as the target audience and any specific requirements
    or constraints.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Development**: In this stage, the mobile app is developed using agile methodologies
    and CI/CD practices. This includes writing code, building and testing the app,
    and integrating any required APIs or services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing**: Mobile app testing is an important part of the DevOps process
    to ensure the app is stable and performs well on different devices and operating
    systems. This can include unit testing, integration testing, and user acceptance
    testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Releasing**: Once the app is tested and ready for release, it can be released
    to the appropriate app store or distribution platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring**: After the app is deployed, it is important to monitor its performance
    and address any issues that arise. This can include crash reporting, error tracking,
    network request analysis, memory leakage, and app performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This was a quick introduction to the stages but in [*Chapter 3*](B18113_03.xhtml#_idTextAnchor083),
    *Mobile DevOps Fundamentals*, we will deep dive into all of them, and in the rest
    of the chapters, we’ll explore each one separately with real examples and use
    cases.
  prefs: []
  type: TYPE_NORMAL
- en: Having gained an understanding of the differences between DevOps and Mobile
    DevOps and the strong relationship between Agile and Mobile DevOps and seen the
    different stages of Mobile DevOps, let’s see how we can transform our team or
    organization successfully and effectively to Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Transforming Mobile DevOps effectively
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The success of a Mobile DevOps transformation and CI/CD implementation can be
    tracked using KPIs, which are measurable values. The effectiveness of your mobile
    CI/CD efforts can be tracked by setting specific, quantifiable KPIs and monitoring
    their progress regularly.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to drive a mobile CI/CD transformation, the following KPIs can be
    used:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The deployment frequency** determines how often new code changes are deployed
    to production. An efficient and successful CI/CD process involves a high deployment
    frequency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mean time to restore or recover** (**MTTR**) measures how quickly an organization
    can resume operations after an outage. CI/CD processes with a low MTTR show that
    they are robust and capable of detecting and resolving issues quickly. Mobile
    apps may have a few challenges because once our apps are released, they will be
    hard to measure, but in general, we can apply the measurement to other services
    mobile apps use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Defect density**: How many bugs are being found in production? A low number
    of bugs indicates that the CI/CD process is thorough and effective at identifying
    and fixing issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User satisfaction**: Is the mobile app well received by users? A good indicator
    of app quality is user satisfaction. If your app is rated poorly or has negative
    feedback in the app stores, this can indicate that your quality and release processes
    need to be revisited.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Measure developer satisfaction** with the tools, processes, and support they
    receive while building and maintaining the company’s products. To save money,
    companies often build their own tools, but developers may not be satisfied with
    them, and the company should know if developers are satisfied. This is an extremely
    important issue. On a scale from 0 to 10, companies ask their internal developers
    to rate the likelihood that they would recommend the company’s development environment
    to a colleague. Based on this data, improvements can be made to the development
    environment to better support internal developers’ needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can also measure DevOps and Mobile DevOps performance and productivity usi[ng
    a variety of metrics,](https://shorturl.at/beAX1) such as the MODAS survey ([https://shorturl.at/beAX1](https://shorturl.at/beAX1)
    the DORA metrics () from Google.
  prefs: []
  type: TYPE_NORMAL
- en: ROI of Mobile DevOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Return on investment** (**ROI**) is a measure of an investment’s efficiency.
    The ROI from Mobile DevOps can be calculated by determining the costs of implementing
    the approach and comparing them to the benefits gained.'
  prefs: []
  type: TYPE_NORMAL
- en: You would first need to determine the costs associated with implementing the
    Mobile DevOps approach for mobile app development, including any training or certification
    costs for your team, any tools or technologies that will be used, and any other
    associated costs. Using this information, you can calculate the total cost of
    implementing Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to determine the benefits of using Mobile DevOps, such as increased
    efficiency, improved collaboration and communication between team members, and
    faster deployment and release cycles. In order to measure these benefits, you
    can conduct surveys as we mentioned previously (developer satisfaction), analyze
    project performance data, and compare the results to those of similar projects
    that did not utilize DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to calculate the ROI of Mobile DevOps, you will need to determine
    the costs and benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ROI = (Benefits - Costs) /** **Costs**'
  prefs: []
  type: TYPE_NORMAL
- en: How to accelerate Mobile DevOps in your organization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mobile DevOps is a collaborative effort involving a team, mindset, and commitment
    as well as a process and toolset.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Mobile DevOps considerations](img/Figure_1.5_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – Mobile DevOps considerations
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to accelerate the Mobile DevOps process and success, the team should
    consider the following considerations and best practices:'
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that version control is robust so that merging conflicts and lost work
    are minimized
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build automation (CI/CD) so you can focus on creating rather than managing complex
    pipelines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test frequently and automate to respond to feedback (shift-left testing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage your mobile apps’ artifacts to release them where they belong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be sure to keep your security in mind
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make a small start and grow intelligently from there
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating is about designing and developing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform app monitoring and status checking continuously
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Team roles and responsibilities for Mobile DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we discussed previously, Mobile DevOps involves a cross-functional team,
    and each role has unique responsibilities, such as CI/CD pipelines, cloud architecture,
    security compliance, and on-call (incident management). Each of them completes
    the other. Assuming the team follows a squads-and-tribes approach, maybe a dedicated
    and centralized team can handle Mobile DevOps practices and processes as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A release manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile engineering managers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quality assurance engineers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A DevOps engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile engineers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A security engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud/DevOps architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 1.6 – Mobile DevOps team](img/Figure_1.6_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.6 – Mobile DevOps team
  prefs: []
  type: TYPE_NORMAL
- en: This approach or setup can help enterprise companies scale their teams and business
    effectively.
  prefs: []
  type: TYPE_NORMAL
- en: In medium-sized or small teams, the mobile developers with the DevOps engineers
    can do the same job but this might require time and effort from them, so it always
    depends on the goal of Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Large-scale mobile app development challenges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Aside from the unique nature of mobile apps, there are many challenges to be
    faced when developing them. Among the most common challenges are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Integrating multiple platforms to create a seamless user experience**: Mobile
    applications often need to be developed for multiple platforms, such as iOS and
    Android. This can create additional complexity in terms of testing, deployment,
    and maintenance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monorepos and multiple repositories**: When working on large-scale projects,
    coordination and version control become challenging.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adapting the app to different devices and operating systems**: Emulators
    and simulators can be useful for testing, but they can’t replicate the full range
    of experiences and issues that users may encounter on real devices. This can make
    it difficult to ensure the quality and reliability of mobile applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assuring the app is secure and meets security and data privacy requirements**:
    Mobile applications often handle sensitive data, such as personal information
    and financial transactions. This requires careful management of the security and
    privacy risks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Staying up to date with mobile app trends and technology**: In order to develop
    mobile apps, you need a unique toolset that is constantly evolving. With ever-growing
    market demands, there are always new technologies for building, deploying, and
    monitoring performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensuring continuous delivery and deployment**: Mobile applications need to
    be updated frequently to fix bugs, add new features, and improve performance.
    This requires a robust DevOps process that can handle multiple releases per day.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integrating with APIs**: Mobile applications often rely on external APIs
    for features such as location tracking, and data storage. These APIs can be prone
    to change or downtime, which can impact the stability of the mobile application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we mentioned in the Mobile DevOps fundamentals previously, since every business
    has unique investments, goals, and processes, as well as unique processes and
    goals, developing mobile applications can be a challenge. Here are a few examples
    of different kinds of mobile apps that we have, and each needs to be explored
    briefly in order to better understand their purpose.
  prefs: []
  type: TYPE_NORMAL
- en: In light of all of these challenges, there are different kinds of mobile app
    companies that can develop.
  prefs: []
  type: TYPE_NORMAL
- en: Super apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A super app is a mobile application that offers a wide variety of services.
    A few examples of these services include ride-hailing, food delivery, online shopping,
    and financial services. A super app provides users with a one-stop shop for all
    their needs, allowing them to access multiple services without having to download
    and use multiple separate apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'Asia is a popular region for super apps because they increase [user engagement
    and revenue](https://www.gojek.com/en-id/) for companies that offer them:'
  prefs: []
  type: TYPE_NORMAL
- en: Gojek ([https://www.gojek.com/en-id/](https://www.gojek.com/en-id/)) – An Indonesian
    super app that allows users to use a wide [range of services, suc](https://www.grab.com/sg/)h
    as messaging and payment processing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grab ([https://www.grab.com/sg/](https://www.grab.com/sg/)) – An on-demand [app
    that offers](https://paytm.com/) food delivery, payments, and other services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paytm ([https://paytm.com/](https://paytm.com/)) – A popular Indian e-wallet
    and payment app that offers features such as shopping and inv[esting, as well
    as](https://line.me/en/) booking tickets for travel, movies, and events
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LINE ([https://line.me/en/](https://line.me/en/)) – A Japanese messaging app
    that also allows you to make payments and book hotel rooms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By providing convenience to users, super apps can enable them to access a variety
    of services without having to switch between multiple apps. Business owners can
    generate new revenue and reach new customers through super apps.
  prefs: []
  type: TYPE_NORMAL
- en: White-label apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The white-label version of an app bears the logo and name of the company that
    is reselling it, rather than the name of the original developer who created it
    in the first place. Typically, these apps are customized to meet the specific
    needs of the company and are then resold to other businesses or clients in order
    to generate revenue for the company.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, they are recommended as a way for companies to offer their customers
    a customizable app solution instead of having to invest the time and resources
    needed to develop an app from scratch, thereby increasing their customers’ satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: E-commerce is a common example of white-label applications, in which businesses
    can purchase preexisting software and cu[stomize it with their o](https://www.shopify.com/)wn
    branding, products, and prices, such as Shopify ([https://www.shopify.com/](https://www.shopify.com/)).
    This allows them to quickly and easily launch their own online store without having
    to build a platform from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, white-label apps are used in healthcare, education, and government.
    White-label apps, for instance, are used by healthcare providers to schedule and
    track patients’ treatments, while schools use them to grade and track students’
    progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using white-label apps has several benefits, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An app that is developed from the ground up can be expensive and time-consuming.
    Apps with white labels are more affordable and efficient.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Due to their pre-existing nature, white-label apps can be implemented and launched
    more quickly than custom-built ones.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are a few examples of white-label mobile apps:'
  prefs: []
  type: TYPE_NORMAL
- en: Branded and customized food delivery apps for local restaurant chains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hotel or resort-branded booking and reservation apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customized and branded ticketing and event management software for concert and
    sports venues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Furthermore, developing an app that the target audience will find valuable and
    engaging, as well as optimizing the app’s features, can be challenging.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile teams can tackle these challenges by implementing best practices such
    as CI/CD and automated testing. Additionally, they can use tools such as mobile
    device clouds and test automation frameworks to streamline their processes and
    improve their mobile applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s summarize:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Since mobile app development is unique, DevOps should also* *be unique.*'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concept of Mobile DevOps entails integrating development and operations
    (DevOps) practices to improve the efficiency and speed of mobile application development.
    To accomplish this, we use mobile-first features to test, build, and release mobile
    apps more quickly, as well as implement continuous integration, testing, deployment,
    delivery, and monitoring of mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: An effective Mobile DevOps process also involves collaboration and communication
    between the development, operations, and quality assurance teams, as well as the
    use of the right tools and technologies to achieve the desired results. To remain
    competitive and meet customer demands for high-quality mobile apps, businesses
    should adopt Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you don’t copy someone else’s process if you find it online. Develop
    a strategy and plan that suits the needs of your stakeholders and team members.
    Establish a standard process for your Mobile DevOps best practices upfront.
  prefs: []
  type: TYPE_NORMAL
- en: Our journey toward Mobile DevOps has just begun, and in the next chapters, we
    will explore more and learn how to effectively use Mobile DevOps.
  prefs: []
  type: TYPE_NORMAL
