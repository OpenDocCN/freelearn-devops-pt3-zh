- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Releasing on Demand to Realize Value
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have now reached the end of our journey through the Continuous Delivery Pipeline.
    We started with a benefit hypothesis to deliver value to our customers and turned
    it into features to develop in Continuous Exploration. In Continuous Integration,
    we developed our feature, story by story, and applied those changes into version
    control, which built and tested the change using the automation of the Continuous
    Delivery Pipeline until it was ready to go to the production environment. In Continuous
    Deployment, we propagated our changes to the production environment, keeping the
    change hidden from the general user population, until we were ready to release.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we are ready to release our change to customers. Releasing our change on-demand
    involves the following four activities:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Releasing that value to customers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stabilizing our solution in operations
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measuring the value
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning the outcomes
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s begin by looking at the release process.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Releasing value to customers
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Up to this point, we have our changes in the production environment, testing
    them to ensure functionality, security, and reliability. Now we are ready to release.
    We want to release our changes to the customer for the following reasons:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: We think the timing is right for the customer to take advantage and when the
    organization thinks there is high market demand
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have confidence that the change will not have a negative impact on the production
    environment
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even with those reasons, we may not want to introduce our release all at once.
    On April 23, 1985, the Coca-Cola Company announced the first major change to the
    formula for its flagship soft drink. *New Coke* had succeeded in over 200,000
    blind taste tests against Pepsi, Coke’s chief competitor. However, upon release,
    the reaction was swift and negative. The outcry against the new formula had forced
    Coca-Cola to reintroduce the original formula as *Coca-Cola Classic* after only
    79 days. Since that time, companies have used progressive releases before releasing
    to the entire market.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want to approach releasing incrementally and progressively, we will use
    the following practices:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Feature flags
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dark launches
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decoupling releases by component architecture
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Canary releases
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have previously examined feature flags and dark launches in our previous
    chapter, [*Chapter 12*](B18756_12.xhtml#_idTextAnchor268), *Continuous Deployment
    to Production*. Let’s take a look at the other practices of decoupling releases
    by component architecture and canary releases.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Decoupling releases by component architecture
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [*Chapter 10*](B18756_10.xhtml#_idTextAnchor221), *Continuous Exploration
    and Finding New Features*, we talked about how one of the key activities in looking
    at new features to develop was architecting the solution. A part of that is allowing
    for releasability to meet the organization’s business priorities.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: One way of achieving this releasability is to architect your product or solution
    into major decoupled components. These components can have their own separate
    release cadences.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 2*](B18756_02.xhtml#_idTextAnchor040), *Culture of Shared Responsibility*,
    we first introduced the idea of operational and development value streams. We
    discussed how development value streams designed, developed, tested, released,
    and maintained a product or solution and we identified several development value
    streams that had solutions that the Operational Value Stream of our video streaming
    service relied on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Turning back to this example, let’s examine one of those development value streams,
    one that maintains the mobile application. This value stream has several components,
    each with a different release cadence as shown by the following diagram.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 13.1 \uFEFF– Decoupled release schedule for mobile application \uFEFF\
    value stream](img/B18756_13_01.jpg)"
  id: totrans-25
  prefs: []
  type: TYPE_IMG
- en: Figure 13.1 – Decoupled release schedule for mobile application value stream
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: In our mobile application value stream example, we release security updates
    as fixes to vulnerabilities appear, after moving them through the Continuous Delivery
    Pipeline.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: One component is the interface and logic seen on the mobile devices themselves,
    otherwise known as the frontend. The development here can be released on a quick
    cadence, effectively at the end of every sprint.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: The other component deals with the logic and processing found on the streaming
    service’s data centers or cloud, known as the backend. In this example, releases
    for that component occur every month.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Canary releases
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The term canary release comes from the practice in mining of carrying a canary
    into the coal mine. The canary would act as a warning of the presence of toxic
    gases. Because of its small size, if it died in the coal mine, a toxic gas was
    present, and the miners should evacuate immediately.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: In terms of modern product development, a canary release is the release of a
    product or new features to a small select group of customers to get their feedback
    on a release before the entire user population.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: To set up a canary release, feature flags are used again to route who receives
    visibility into the change in the production environment. This feature flag configuration
    is shown in the following diagram.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 13.2 \uFEFF– Canary release configuration using feature flags](img/B18756_13_02.jpg)"
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Figure 13.2 – Canary release configuration using feature flags
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Another possible way to perform a canary release is in distributed production
    environments. If the production environments are in different geographic regions,
    the changes are released in one production environment to try on one set of users,
    while the other production environments remain on their versions. If all goes
    well, eventually the environments in the remaining regions are upgraded.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Canary releases offer the advantage that they allow for A/B testing where the
    *A* group that receives the change can be measured against the *B* group or control
    group to see whether the new change creates a desired change in user behavior.
    Running canary releases as experimentation does require the ability to measure
    user and system behavior as part of full-stack telemetry.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'There may be situations where canary releases should not be done. These may
    include the following reasons:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: If the solution is part of a mission-critical, medical, or safety system where
    there is low tolerance for failure
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the end users will react negatively to being *guinea pigs* or treated as
    beta testers
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the changes require changes on backend configurations such as database schemas
    that are not compatible with the current production version
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we progress in the release from our initial canary users to the entire user
    population, we want to be able to ensure that our production environment remains
    resilient. This may require us to stabilize our solution and ensure proper operation.
    We will examine the steps needed for this in our next section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Stabilizing and operating the solution
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our goal is to ensure that our production environment remains stable, is resilient
    to handle the new changes, and that we continue to have sustainable value delivery.
    To maintain this activity, we want to apply the following practices:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Site reliability engineering
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Failover and disaster recovery
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous Security Monitoring
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Architecting for operations
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring NFRs
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have previously looked at testing and monitoring NFRs in [*Chapter 12*](B18756_12.xhtml#_idTextAnchor268),
    *Continuous Deployment to Production*. Let’s examine the remaining practices.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Site reliability engineering
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We first learned about **Site Reliability Engineering** (**SRE**) in [*Chapter
    6*](B18756_06.xhtml#_idTextAnchor138), *Recovering from Production Failures*.
    In that chapter, we saw the following four practices that site reliability engineers
    use to maintain the production environment when high availability is required
    for large scaled systems:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Formulation of an error budget using **Service Level Indicators** (**SLI**)
    and **Service Level** **Objectives** (**SLO**)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating standards for release through release engineering
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collaborating on product launches with launch coordination engineering
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Practicing recovery with chaos engineering and incident management procedures
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [*Chapter 6*](B18756_06.xhtml#_idTextAnchor138), we saw that if availability
    SLOs were at *four-nines* (99.99% availability or higher), the monthly allowable
    would be 4 minutes, 23 seconds. To maintain that availability, SREs use the previously
    mentioned practices to ensure reliability and have standard incident management
    policies defined and rehearsed to minimize downtimes when problems do occur.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Other principles and practices adopted by Google can give us a better picture
    of the discipline of SRE and how it contributes to the DevOps approach. To understand
    these additional principles and practices, it may be necessary to look at the
    origins of SRE at Google.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: 'SRE started at Google in 2004 by Ben Treynor Sloss. His original view was to
    rethink how operations were performed by system administration. He wanted to approach
    problems found in operations from a software development perspective. From that
    perspective, the following principles emerged in addition to the preceding practices:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Eliminating toil, that is, finding the repetitive tasks and seeing whether they
    could be eliminated
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased use of automation as a way of cost effectively eliminating toil
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring every aspect of the production environment, which leads to observability
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The people Sloss enlisted for his initial SRE team would spend half of their
    time in development and the other half in operations to follow changes they developed
    from beginning to end. This allowed them to develop skills necessary for operations
    as well as maintain their development expertise.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Since 2004, the number of practices that have been pulled into the discipline
    of SRE has expanded as technology has evolved. Nevertheless, many site reliability
    engineers have kept to the principles previously outlined. Adopting these principles
    and practices may provide tangible benefits when reliability is a key nonfunctional
    requirement.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Failover and disaster recovery
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Murphy’s Law famously states that “*anything that can go wrong, will*.” In that
    sense, it’s not *if* a disaster will strike your system, but *when*. We’ve looked
    at ways of preventing disaster and using chaos engineering to simulate disasters,
    but are there other ways of preparing for disaster?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'Disaster recovery focuses on ensuring that the technical aspects that are important
    to a business are restored as quickly as possible should a natural or manmade
    disaster strike. Disaster recovery incorporates the following elements to prepare
    for the worst:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '**Disaster recovery team**: A group of individuals that are responsible for
    creating, implementing, and managing a disaster recovery plan. The disaster recovery
    plan outlines the responsibilities for the team to follow in an emergency, including
    communication with other employees and customers.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk evaluation**: The disaster recovery team should identify the possible
    scenarios and the appropriate responses for each. For example, if a cyberattack
    happened, what would the steps be in the disaster recovery plan?'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Asset identification and evaluation**: The disaster recovery team should
    identify all systems, applications, data, and other resources. Part of this identification
    includes how important they are for business continuity as well as instructions
    for restoring them.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource backups**: The disaster recovery plan should identify what resources
    should be backed up, the frequency of backup, where those backups are stored,
    and for how long the backups are kept.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源备份**：灾难恢复计划应确定需要备份的资源、备份频率、备份存储位置以及备份保存的时间。'
- en: '**Dress rehearsals**: All parts of the disaster recovery plan should be practiced
    regularly. Restores of backups should be attempted to find flaws in the backup
    process and to determine whether the backups are sound. Any flaws found while
    rehearsing should be fixed to improve the disaster recovery plan. Rehearsals should
    examine evolving threats to see whether new measures should be added to the disaster
    recovery plan.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**演练**：灾难恢复计划的所有部分应定期进行演练。应尝试恢复备份，以发现备份过程中的缺陷，并确定备份是否有效。在演练过程中发现的任何缺陷应进行修复，以改进灾难恢复计划。演练应检查不断变化的威胁，看看是否需要在灾难恢复计划中加入新的措施。'
- en: 'The disaster recovery plan will look at the following two measurements as goals
    to determine the overall strategy:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 灾难恢复计划将根据以下两个度量目标来确定整体策略：
- en: '**Recovery Point Objective** (**RPO**) is a measure of the state of the data,
    measured from the time of the last backup when the resource of record is restored'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复点目标**（**RPO**）是指数据的状态，通常从上次备份的时间开始计算，当资源恢复时恢复点的状态。'
- en: '**Recovery Time Objective** (**RTO**) is a measure of the allowable downtime
    after a disaster'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复时间目标**（**RTO**）是指灾难发生后可接受的停机时间。'
- en: Let’s explain these objectives using an example shown in the following diagram.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下图示的示例来解释这些目标。
- en: "![Figure 13.3 \uFEFF– Illustration of RPO and RTO](img/B18756_13_03.jpg)"
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图13.3 – RPO和RTO的示意图](img/B18756_13_03.jpg)'
- en: Figure 13.3 – Illustration of RPO and RTO
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – RPO和RTO的示意图
- en: In the preceding diagram, we take a backup of our resource every four hours.
    We have practiced performing disaster recovery on our resource and have reliably
    restored operations in 30 minutes. When disaster strikes, if it is something familiar
    and has been rehearsed, our Time to Restore Service will match our RTO objective
    and be 30 minutes.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，我们每四小时备份一次资源。我们已经练习了对资源进行灾难恢复，并且能够在30分钟内可靠地恢复操作。当灾难发生时，如果是熟悉的情况并且已经经过演练，我们的服务恢复时间将与我们的RTO目标相匹配，为30分钟。
- en: For the RPO, we need to see the point of the last backup. In our example, the
    time difference between the last backup and the disaster could be as large as
    four hours. The higher the frequency of backups, the lower the RPO.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于RPO，我们需要查看上次备份的时间点。在我们的示例中，上次备份与灾难之间的时间差可能高达四小时。备份频率越高，RPO就越低。
- en: 'The mechanisms for disaster recovery can take many forms. Organizations may
    opt to use one or a combination of the following methods:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 灾难恢复机制可以采取多种形式。组织可以选择使用以下方法之一或多种组合：
- en: '**Backups**: Backups are the simplest form of disaster recovery. Note that
    this ensures that the data is kept safe; this does nothing for infrastructure.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份**：备份是最简单的灾难恢复形式。请注意，这确保了数据的安全，但对于基础设施没有任何帮助。'
- en: '**Cold site**: A redundant second production environment. This allows for business
    continuity, but there is no way to restore data. A blue/green deployment is an
    example of a cold site.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**冷站点**：冗余的第二生产环境。这可以确保业务连续性，但无法恢复数据。蓝绿部署就是一个冷站点的例子。'
- en: '**Hot site**: A redundant second production environment that has its data regularly
    synchronized with the active production environment.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**热站点**：一个冗余的第二生产环境，其数据与活动生产环境定期同步。'
- en: '**Disaster Recovery as a Service (DRaaS)**: A vendor moves an organization’s
    processing capability from the organization to its own (often cloud-based) infrastructure.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灾难恢复即服务（DRaaS）**：供应商将组织的处理能力从组织自身的基础设施转移到其自身的（通常是云基础设施）中。'
- en: '**Backup as a Service (BaaS)**: Backups are taken and reside off-site or stored
    in a cloud infrastructure by a third-party provider.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份即服务（BaaS）**：备份由第三方供应商执行，并存储在异地或云基础设施中。'
- en: '**Data center disaster recovery**: These are devices on the organization’s
    premises used to deal with disasters such as fire or power loss. Examples of these
    include backup power generators or fire suppression equipment.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据中心灾难恢复**：这些是组织场所上的设备，用于应对如火灾或停电等灾难。这些设备的例子包括备用发电机或灭火设备。'
- en: Continuous Security Monitoring
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续安全监控
- en: In previous stages of our Continuous Delivery pipeline, our focus on security
    was prevention. We wanted to ensure that the changes we designed and developed
    did not introduce security vulnerabilities. So, the automated security testing
    we performed on the pipeline examined the code changes.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: With the code released, we shift our focus from prevention to detecting threats
    that come from malicious actors. We look for breaches or attacks using currently
    unknown vulnerabilities.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'The **National Institute of Standards and Technology** (**NIST**) looks at
    **Continuous Security Monitoring** (**CSM**) as Information Security Continuous
    Monitoring. In a white paper published in September 2011 ([https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-137.pdf](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-137.pdf)),
    they describe Information Security Continuous Monitoring as the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '*Information security continuous monitoring (ISCM) is defined as maintaining
    ongoing awareness of information security, vulnerabilities, and threats to support
    organizational risk* *management decisions.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'The white paper further defines a process to implement CSM by incorporating
    the following steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Defining a strategy by looking at risk tolerance including visibility into assets,
    vulnerability awareness, current threat information, and impacts on the mission
    or business.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Establishing a program including definitions of metrics, status monitoring frequency,
    and the technical architecture.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing the program and collecting security-related information for metrics,
    assessments, and reporting. Automate the collection, analysis, and reporting as
    much as possible.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Analyze the findings and report.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Respond to the findings.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review and update the monitoring program.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The assets that need to be monitored include not only ones directly maintained
    by the organization but may also extend to third parties and vendors. Monitoring
    tools may look at the following assets:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '**Known assets**: Assets that are part of an organization’s inventory'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unknown assets**: Forgotten assets including development websites or old
    marketing sites'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rogue assets**: Assets created by malicious actors that may impersonate the
    organization’s domain'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vendor assets**: Assets owned by third-party vendors'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once identified, the assets should be examined for possible threats and vulnerabilities.
    A sampling of common threats and vulnerabilities are the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '**Unnecessary open TCP/UDP ports**: Any open ports may pose a problem if the
    service that communicates on those ports is misconfigured or unpatched, potentially
    allowing a vulnerability.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Man-in-the-middle attacks**: This is a cyber attack where the attacker is
    between two parties connected together. The parties believe they have a direct
    connection, but the attacker may listen in and even change the messages before
    transmitting to the other party.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Poor email security**: This may leave your organization open to email spoofing.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain hijacking**: An attacker changes the registration of an organization’s
    domain name without permission of the domain’s owner.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cross-site scripting** (**XSS**) **vulnerabilities**: Attackers can inject
    client-side scripts on web pages allowing access control.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Leaked credentials**: Discovered through data breaches, they allow attackers
    access into an organization.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data leaks**: Exposure of private or sensitive data.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Typosquatted domains**: This is a form of cybersquatting where attackers
    claim a domain name similar to a known organization’s domain name in hopes that
    someone will incorrectly type a URL and enter the attacker’s site.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identification of these attacks may be part of an assessment created after automated
    monitoring. The mitigation steps and action will outline who in the organization
    will perform the remediation steps and coordinate the response.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Architecting for operations
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The support activities performed in this stage of the Continuous Delivery Pipeline
    will have a profound effect on the architecture of the system and may even drive
    the future direction of the product or solution. These things may be part of the
    architectural decisions the system architect makes when looking at new capabilities
    in the Continuous Exploration stage of the Continuous Delivery Pipeline.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: 'Decisions found in this stage that may be taken to Continuous Exploration include
    the following items:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Fixes and new automation created by the site reliability engineers
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changes because of flaws discovered in the disaster recovery plan that affect
    the configuration of the test, staging, or production environments.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New vulnerabilities that have been discovered by CSM that the product’s architecture
    must prevent from occurring in the future.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The system architect thus becomes the balance point of intentional architecture,
    overseeing the desired architecture of the product or solution, and of emergent
    design, where other factors such as the environment play a role in requiring changes
    to the architecture.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: The learning at this stage is not limited to the architectural aspects. We also
    have to evaluate from a product performance standpoint whether the benefit hypothesis
    was fulfilled by our development. For this, we need to measure our solution’s
    value. Let’s look at this in our next section.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Measuring the value
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Throughout the design and development journey through the Continuous Delivery
    Pipeline, we have subjected our changes to an array of testing. We will now look
    at the final test to answer the question: is our development effort bringing value
    to the customers to the point that this benefits both the customer and the organization?'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'To aid us in answering this question, we will look at the following activities:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Innovation accounting
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proving/disproving the benefit hypothesis
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We will first revisit innovation accounting and its source: the Lean Startup
    Cycle. Based on that knowledge, we will see how leading and lagging indicators
    prove or disprove the benefit hypothesis we created in Continuous Exploration.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Innovation accounting
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We first saw innovation accounting in [*Chapter 5*](B18756_05.xhtml#_idTextAnchor114),
    *Measuring the Process and Solution*. In the chapter, according to *The Lean Startup:
    How Today’s Entrepreneurs Use Continuous Innovation to Create Radically Successful
    Businesses* by Eric Ries, we saw that measures were important to gauge whether
    the benefit hypothesis had been proven.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'Ries expands upon innovation accounting in his follow-up book, *The Startup
    Way: How Modern Companies Use Entrepreneurial Management to Transform Culture
    and Drive Long-Term Growth*. In his book, he gives the following definition for
    innovation accounting:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '*Innovation Accounting (IA) is a way of evaluating progress when all the metrics
    typically used in an established company (revenue, customers, ROI, market share)
    are* *effectively zero.*'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: He proposes three levels of innovation accounting, each with a different set
    of metrics to collect. Let’s look at these levels now.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: 'Level 1: Dashboard metrics'
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These metrics serve as a starting point. Ries advises setting up a dashboard.
    On this initial dashboard are customer-facing metrics the development teams think
    are important. These types of metrics are based on per-customer input. The following
    per-customer metrics for learning include the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Conversion rates (usually the percentage of customers who move from a free version
    to a paid version of a product)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Revenue per customer
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lifetime value per customer
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retention rate
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cost per customer
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Referral rate
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Channel adoption
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metrics like these help enforce the idea that development can affect these metrics
    after observing the outcomes of their efforts. Metrics here that are visible help
    keep the development process aligned with feedback.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'Level 2: Business case metrics'
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We proceed deeper with a different set of metrics in Level 2\. Here, we try
    to quantify the “*leap of faith assumptions*” as Ries calls them. Leap of faith
    assumptions come in the following two categories:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '**Value assumptions**: These describe the value that users receive from the
    product or solution'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Growth assumptions**: How do new users find the product?'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These types of assumptions are needed for any new development, otherwise nothing
    new would be developed. These assumptions get tested by the development of the
    MVP and other validated exercises.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: 'The following metrics illustrate the assumptions and categories of assumptions:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Retention rate (value assumption)
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Referral rates (value assumption)
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Word-of-mouth referrals (growth assumption)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value assumptions look for customer behavior. They are met based on positive
    user behavior. Growth assumptions are looking for sustainable growth.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'Level 3: Net present value'
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At this level, we look at performance over a long period of time. Changes will
    come as you acquire new data and re-evaluate or compare the present data over
    what was forecasted. You look at long-term drivers of the product’s future performance.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'The following metrics may provide guidance over the long term:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Number of website users
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Percentage of visitors that become users
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Percentage of paid users
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Average price paid by a user
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These metrics often involve more than the development teams. Finance may also
    be involved with the goal of shifting the focus at this point to the financial
    performance of the product.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Proving/disproving the benefit hypothesis
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we’ve seen the steps taken with innovation accounting, let’s see how
    they play against the benefit hypothesis we created in Continuous Exploration.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: In our journey through the Continuous Delivery Pipeline, we created our benefit
    hypothesis in Continuous Exploration. To measure the validity of our hypothesis,
    we may be incorporating Level 2 metrics in our dashboard. Our dashboard is acquiring
    the metrics automatically through the full-stack telemetry that we have designed
    into our system in our test, staging, and production environments.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: We may get some indications from testing done at Continuous Deployment, but
    the real measurements will come from Release on Demand, first during any A/B testing
    or canary releases, but also upon general release. We want to see all correlations
    between the performance and our initial benefit hypothesis.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: The data we collect and analyze now in this step may not be just to improve
    the product, but also to improve our value stream and our development process.
    Let’s explore our next section to see how both are accomplished.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Learning from the outcomes
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Based on our learning, we now need to figure what’s the best next step. This
    is true from the perspective of our product as well as the perspective of our
    value stream.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: For our product, it’s a matter of determining the best direction. This may mean
    whether it’s time to pivot, change direction in our overall product strategy,
    or persevere or continue in the same direction.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: For our value stream, this time is used to reflect on how to improve. What lessons
    are there that we can learn from to improve?
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'The following practices are used to determine future product direction as well
    as future direction of our value stream:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Pivot or persevere from Lean Startup
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Relentless improvement
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value stream mapping sessions
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We perform this learning so we can begin again with renewed focus at the start
    of the Continuous Delivery Pipeline in setting up ideas to execute. We improve
    our value streams to improve the performance of our Continuous Delivery Pipeline.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at these practices that allow us to improve.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Pivot or persevere
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [*Chapter 10*](B18756_10.xhtml#_idTextAnchor221), *Continuous Exploration
    and Finding New Features*, we viewed the application of Eric Ries’s Build-Measure-Learn
    cycle into the SAFe® Lean Startup cycle where we saw how Epics are created with
    a benefit hypothesis. The Epics are implemented with a **Minimum Viable Product**
    (**MVP**), which acts as an experiment to prove or disprove the benefit hypothesis.
    The MVP is evaluated through innovation accounting and tracking of leading indicators
    that will be used to determine the pivot or persevere decision.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: 'We are now at that point of that decision. For our ART, the MVP may be a few
    features created at the beginning of the Continuous Delivery Pipeline. We have
    developed these features, tested them, and deployed them into the production environment
    through the Continuous Integration and Continuous Deployment stages of our pipeline.
    Now, in Release on Demand, we show our MVP as features to the user population
    to see whether the benefit hypothesis is proven. Based on the innovation accounting
    metrics we are collecting through our full-stack telemetry, we come to the following
    two decisions:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '**Pivot**: Our feature didn’t meet the benefit hypothesis. It’s time to move
    in a different direction. This may include stopping development in that product
    direction.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Persevere**: Our benefit hypothesis was validated. We should continue to
    develop further features to enhance our MVP.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that even after our persevere decision for the MVP, our features will still
    be evaluated to determine that they prove to be valuable and that the product
    direction still resonates with our customers.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Relentless improvement
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We first saw relentless improvement when we first examined the SAFe House of
    Lean in [*Chapter 2*](B18756_02.xhtml#_idTextAnchor040)*, Culture of Shared Responsibility*,
    We mentioned that in relentless improvement, we looked for opportunities to be
    better because of that “hidden sense of danger.”
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Throughout development, the teams and the ART have looked for such opportunities
    to improve the flow of value. The teams have been regularly holding retrospectives
    at the end of each iteration to identify problems at the team level and ART holds
    the **Inspect and Adapt** (**I&A**) event at the end of the Program Increment
    to look at systemic issues.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Other improvements may come to the Continuous Delivery Pipeline itself. Newer
    tools, additional testing, and continued maintenance allow the ART to maintain
    or improve how they create the experiments to validate benefit hypotheses.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Additional value stream mapping sessions
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another important part of relentless improvement comes from Value Stream Management
    and continuous learning, ideas originally discussed in [*Chapter 9*](B18756_09.xhtml#_idTextAnchor207),
    *Moving to the Future with* *Continuous Learning*.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: One activity we originally performed in our value stream mapping was not only
    mapping our value stream as it stands currently, but also identifying an ideal
    *future-state* value stream. Improvement actions could come from small, iterative
    changes toward that ideal value stream.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: One other step for improvement is to hold a value stream mapping session at
    least once a year to evaluate the value stream in its current iteration. This
    allows the ART to view the present bottlenecks impeding the flow of value. During
    this value stream mapping session, a new future-state value stream can be identified
    for new improvements.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we have reached the last stage of the Continuous Delivery
    Pipeline: Release on Demand. After using feature flags to allow testers to view
    new changes in the development environment, we can use them to incrementally release
    those changes to a small population of users in a canary release. We may also
    want to set up our architecture to allow for each component to have different
    release cadences. After release, we want to ensure that the changes don’t disrupt
    the environment and that our overall solution is stable. To do that, we adhere
    to the principles and primary practices of SRE, including preparing for disaster
    recovery.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: With the changes released in a stable environment, it’s time to measure business
    results through full-stack telemetry. We selected our measures during Continuous
    Exploration, relying on innovation accounting principles. Looking at these measures
    on dashboards visible to everyone, we can try to determine whether our benefit
    hypothesis that we created in Continuous Exploration is valid.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Based on whether the benefit hypothesis is valid or not, we must decide to pivot,
    change direction, or persevere and continue developing in the same product direction.
    After making that decision, the ART looks at other improvement opportunities through
    retrospectives, I&A, and regularly mapping their value stream.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to a close on *Part 3*. We now will take a look at emerging trends
    as well as some tips and tricks for success in your DevOps adoption in our last
    chapter of the book.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of these are key practices or principles of SRE? (pick 3)
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use feature flags for A/B testing
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reduce toil mainly through automation
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Run unit tests in production
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Know how much risk you can handle through error budgets
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Chaos engineering
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Test in production
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of these should be part of a disaster recovery plan? (pick 3)
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Disaster recovery team identified
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Resource identification
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Vendor contact information
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Server schematics
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Backup schedule
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Hard-copy versions of important files
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Backups are performed on the database every two hours. If the database server
    crashes, what is the expected RPO?
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2 hours
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 4 hours
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 8 hours
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 16 hours
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What problems can CSM detect? (pick 2)
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Man-in-the-middle attacks
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: License violations
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cross-site Scripting (XSS) vulnerabilities
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Weak passwords
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What practices are NOT examples of relentless improvement? (pick 2)
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Retrospectives
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Code reviews
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Inspect and Adapt (I&A)
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding tests to the Continuous Delivery Pipeline
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Code comments
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An account of the introduction of New Coke: [https://www.coca-colacompany.com/company/history/the-story-of-one-of-the-most-memorable-marketing-blunders-ever](https://www.coca-colacompany.com/company/history/the-story-of-one-of-the-most-memorable-marketing-blunders-ever'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Another account of the introduction of New Coke, with an additional perspective
    of the competitive landscape: [https://www.vox.com/2015/4/23/8472539/new-coke-cola-wars](https://www.vox.com/2015/4/23/8472539/new-coke-cola-wars)'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://blog.getambassador.io/cloud-native-patterns-canary-release-1cb8f82d371a](https://blog.getambassador.io/cloud-native-patterns-canary-release-1cb8f82d371a)
    – Blog article that defines canary releases and details implementation, benefits,
    and examples of use'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An interesting reference on canary releases: [https://martinfowler.com/bliki/CanaryRelease.html](https://martinfowler.com/bliki/CanaryRelease.html'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: 'Blog article from LaunchDarkly, a vendor for feature flag management solutions,
    about using feature flags for canary releases: [https://launchdarkly.com/blog/what-is-a-canary-release/](https://launchdarkly.com/blog/what-is-a-canary-release/'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: 'YouTube video from Google detailing the history behind site reliability engineering
    including perspectives from Ben Treynor Sloss: [https://www.youtube.com/watch?v=1NF6N2RwVoc&t=6s](
    https://www.youtube.com/watch?v=1NF6N2RwVoc&t=6s'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: 'Details from VMWare on different types of disaster recovery: [https://www.vmware.com/topics/glossary/content/disaster-recovery.html](https://www.vmware.com/topics/glossary/content/disaster-recovery.html'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'A white paper from NIST detailing Information Security Continuous Monitoring,
    which is used a lot when talking about CSM: https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-137.pdf'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Blog article from Upgard, a vendor of CSM tools, defining the major vulnerabilities:
    https://www.upguard.com/blog/continuous-security-monitoring'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The Startup Way: How Modern Companies Use Entrepreneurial Management to Transform
    Culture and Drive Long-Term Growth* by Eric Ries – The follow-up book to *The
    Lean Startup*; this further defines concepts such as innovation accounting'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A blog article outlining additional thoughts on innovation accounting: [https://www.boldare.com/blog/lean-startup-innovation-accounting/](
    https://www.boldare.com/blog/lean-startup-innovation-accounting/)'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
