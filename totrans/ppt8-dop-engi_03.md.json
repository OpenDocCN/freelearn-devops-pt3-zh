["```\nbolt --verbose plan run pecdm::provision –params @params.json\n```", "```\n    class  example_class (\n      String example_parameter\n    )\n    {\n       <code block>\n    }\n    ```", "```\nClass {'class_name':\n  paramter1 => 'value1'\n}\n```", "```\ndefine exampledefine (\n  String user = \"${title}\",\n  String group\n) {\nuser { ${user}: }\ngroup { ${group}: }\nfile { '/export/home/${user}/.examplesetting':\n  user => ${user},\n  group => ${group},\n  content => \"User is ${user} and group is ${group}\",\n}\n}\n```", "```\nexampledefine {'user1':\n  group => 'group1'\n}\nexampledefine {'user2':\n  group => 'group2'\n}\n```", "```\ntype { 'title':\n   attribute1  => value1,\n   attribute2 => value2,\n}\n```", "```\npackage { 'vscode':\n  ensure => 'latest',\n}\n```", "```\n$apache_package_name = $facts['os']['name']? {\n  Fedora  => 'httpd',\n  default => 'apache2',\n}\npackage { 'apache':\n  ensure => 'latest',\n  name   => \"$apach_package_name\",\n}\n```", "```\nC:\\ProgramData\\PuppetLabs>puppet resource file \"c:\\Program Files\\Puppet Labs\"\nfile { 'c:\\Program Files\\Puppet Labs':\n  ensure   => 'directory',\n  ctime    => '2022-01-31 22:01:02 +0000',\n  group    => 'S-1-5-18',\n  mode     => '2000770',\n  mtime    => '2022-01-31 22:01:02 +0000',\n  owner    => 'S-1-5-18',\n  provider => 'windows',\n  type     => 'directory',\n}\n```", "```\npackage { 'vscode': }\n```", "```\nfile { '/var/tmp/testfile' : }\n```", "```\nfile {'Puppet directory' :\n  ensure => 'directory',\n  path   => 'C:\\ProgramData\\PuppetLabs'\n}\n```", "```\nfile {'Example config':\n  ensure => 'file',\n  path   => '/app/exampleapp/config.txt',\n  owner => 'exampleapp',\n  group => 'examplegroup',\n  content => \"verbose = true\\nselinux=permissive\"\n}\n```", "```\nfile {'Remove apache config files outside of puppet control' :\n  ensure  => 'directory',\n  purge   => true,\n  recurse => true,\n  path    => '/etc/httpd/conf'\n}\n```", "```\nfile {'Picking a python on Rhel 8' :\n  ensure  => link,\n  path    => /usr/bin/python3,\n  target  => /usr/bin/python,\n}\n```", "```\nfile {'/etc/exampleapp.conf':\n  source => [\n    \"nfsserver:///exampleapp/conf.${host}\",\n    \"nfsserver:///exampleapp/conf.${operatingsystem}\",\n    'nfsserver:///exampleapp/conf'\n  ]\n}\n```", "```\nservice { 'wuauserv':\n  ensure       => running,\n  enable       => 'delayed',\n  logonaccount => 'LocalSystem'\n}\nservice { 'bam':\n  ensure => stopped,\n  enable => 'false'\n}\n```", "```\nservice {'legacy service':\n  ensure       => running,\n  enable       => true,\n  start  => '/opt/legacyapp/startlegacy -e production'\n  stop   => '/opt/legacyapp/stoplegacy -e production'\n  status => '/opt/legacyapp/legacystatus -e production'\n}\n```", "```\npackage { 'example app package':\n  ensure => latest,\n  name   => 'exampleapp'\n  before => File['example app configuration']\n}\nfile { 'example app configuration':\n  content => 'attribute=value',\n  notify    => Service['example app service']\n}\nService {'example app service':\n  name    => 'exampleapp',\n  enable  => true,\n  ensure  => running,\n  require => Package['example app package']\n}\n```", "```\nfile { ' C:\\Program Files\\Common Files\\Example':\n  require => Package['package1',package2],\n}\n```", "```\n<html>\n<head>\n</head>\n<body>\n   <h1>Hello World<h1>\n</body>\n</html>\n```", "```\n[server]\nProtocol = HTTP\nHttp_port = 8080\n```", "```\nuser { 'david':\n  ensure   => 'present',\n  groups   => ['BUILTIN\\Administrators', 'BUILTIN\\Users']\n}\ngroup { 'Users':\n  ensure   => 'present',\n  members  => ['NT AUTHORITY\\INTERACTIVE', 'NT AUTHORITY\\Authenticated Users', 'DESKTOP-1MT10AJ\\david'],\n}\nuser { 'ubuntu':\n  ensure             => 'present',\n  comment            => 'Ubuntu',\n  gid                => 1000,\n  groups             => ['adm', 'dialout', 'cdrom', 'floppy', 'sudo', 'audio', 'dip', 'video', 'plugdev', 'lxd', 'netdev'],\n  home               => '/home/ubuntu',\n  password           => '!',\n  password_max_age   => 99999,\n  password_min_age   => 0,\n  password_warn_days => 7,\n  shell              => '/bin/bash',\n  uid                => 1000\n}\ngroup { 'ubuntu':\n  ensure   => 'present',\n  gid      => 1000\n}\n```", "```\nexec { 'disable_public_chocolatey':\n    command => \"C:/ProgramData/chocolatey/choco.exe source disable -n=chocolatey\",\n    unless  => \"\\$sourceOutput = choco.exe source list; if (\\$sourceOutput.Contains('chocolatey [Disabled]')) {exit 0} else {exit 1}\",\n    provider => powershell,\n}\n```", "```\nexec { 'Cowsay file':\n   command => '/bin/cowsay Hello world > /etc/cowsaysays',\n   creates => '/etc/cowsaysays'\n}\n```", "```\nexec  { 'refresh exampleapp configuration' :\n  command   => [''/bin/exampleapp/rereadconfig']\n  refreshonly => true\n  subscribe    => File['config file']\n}\nfile {'config file':\n  path => '/etc/exampleapp/configfile',\n  content => 'setting 1 = value'\n}\n```", "```\nexec  { 'parametrized command'\n  command => ['/bin/echo', 'real parameters; rm -rf /']\n}\n```", "```\naugtool print /files/etc/security/access.conf\n```", "```\n+ : john : 2001:4ca0:0:101::/64\n+ : root : 192.168.200.1 192.168.200.4 192.168.200.9\n- : ALL : ALL\n```", "```\n/files/etc/security/access.conf/access[1] = \"+\"\n/files/etc/security/access.conf/access[1]/user = \"john\"\n/files/etc/security/access.conf/access[1]/origin = \"2001:4ca0:0:101::/64\"\n/files/etc/security/access.conf/#comment[83] = \"All other users should be denied to get access from all sources.\"\n/files/etc/security/access.conf/access[2] = \"+\"\n/files/etc/security/access.conf/access[2]/user = \"root\"\n/files/etc/security/access.conf/access[2]/origin[1] = \"192.168.200.1\"\n/files/etc/security/access.conf/access[2]/origin[2] = \"192.168.200.4\"\n/files/etc/security/access.conf/access[2]/origin[3] = \"192.168.200.9\"\n/files/etc/security/access.conf/access[3] = \"-\"\n/files/etc/security/access.conf/access[3]/user = \"ALL\"\n/files/etc/security/access.conf/access[3]/origin = \"ALL\"\n```", "```\naugtool rm /files/etc/security/access.conf/*[user=\"john\"]\n```", "```\nAugeas { 'remove John from access.conf' :\n  changes => 'rm /files/etc/security/access.conf/*[user=\"john\"]'\n}\n```", "```\nnotify { 'print a message to logs'}\n```", "```\nfile {'/var/tmp/example'\n  mode => 0770,\n  audit  => [owner,group]\n}\n```", "```\nNotice: /Stage[main]/Main/File[/var/tmp/example]/owner: audit change: previously recorded value 'absent' has been changed to 'root'\nNotice: /Stage[main]/Main/File[/var/tmp/example]/group: audit change: previously recorded value 'absent' has been changed to 'root'\n```", "```\nclass example::access {\n  group {'ubuntu':\n    ensure   => 'present',\n    gid      => 1000,\n    tag      => ['pci','sox']\n  }\n  user {'ubuntu':\n    ensure  => 'present',\n    tag         => 'pci'\n  }\n}\n```", "```\nresources {'user':\n  purge => true,\n  noop => true\n}\n```", "```\nfile{ ['/opt/example1','/opt/example1/etc','/opt/example1/bin'] :\n  owner => user,\n  group => user,\n  mode  => 0750\n}\n```", "```\nFile['/opt/example/bin/'] {\n  group  => other_group,\n  Audit   => true\n}\n```", "```\ncase $facts['os']['name'] {\n  /^(Debian|Ubuntu)$/: {\n  $package_options = {\n    \"name\"  => \"apache2\"\n    }\n  }\n  default:  {\n  $package_options = {\n    \"name\"  => \"httpd\"\n    }\n  }\n}\nPackage { 'http' :\n  ensure => latest,\n  *       =>  ${package_options}\n}\n```", "```\n$selectedtype = exec\nresource[$mytype] { \"/bin/echo 'don't use this' > /tmp/badidea\": creates => /tmp/badidea , }\n```", "```\nexec {\"/bin/echo 'don't use this' > /tmp/badidea\":\n  creates  =>  /tmp/badidea\n}\n```", "```\nfile {\n  default:\n    ensure => directory,\n    owner => 'exampleapp',\n    group => 'exampleapp',\n    mode => '0660'\n  ;\n  ['/opt/example','/opt/example/app','/etc/exampleapp']:\n  ;\n  ['/var/example','/var/example/app',]:\n    mode => '0644'\n  ;\n}\n```", "```\nfile {\n  owner  => 'exampleapp',\n  group  => 'exampleapp',\n  mode   => 0660\n}\n```", "```\nschedule { 'Friday Night':\n  day=> 'Friday',\n  range  => '18 - 9',\n}\n```", "```\nexec {'/bin/echo weekend start > /tmp/example'\n  Schedule = > 'Friday Night'\n}\n```", "```\n@@host { \"Oracle database host entry ${::hostname}\" :\n  name  => 'dbserver1',\n  ip    => '192.168.0.6',\n  tag   => 'oracle'\n}\n```", "```\nHost <<| tag = oracle |>>\n```"]