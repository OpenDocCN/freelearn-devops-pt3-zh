- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Zero-Touch Operations
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 零接触操作
- en: In the field of DevOps, **zero-touch operations** refers to a concept or approach
    where operations and processes related to managing and maintaining *any objects
    or services* (such as databases) are automated to the extent that they require
    little to no manual intervention or human interaction.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 领域，**零接触操作**指的是一种概念或方法，涉及将管理和维护*任何对象或服务*（如数据库）相关的操作和流程自动化到几乎不需要人工干预或人类交互的程度。
- en: The goal of zero-touch operations is to minimize human involvement and reduce
    the risk of errors or inconsistencies that can occur due to manual processes.
    It involves implementing automation techniques, tools, and workflows that streamline
    and simplify various tasks associated with database management, deployment, monitoring,
    scaling, and recovery.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 零接触操作的目标是尽量减少人工干预，降低因手动操作导致的错误或不一致性的风险。它涉及实施自动化技术、工具和工作流，简化和优化与数据库管理、部署、监控、扩展和恢复相关的各种任务。
- en: With zero-touch operations, routine and repetitive tasks such as provisioning
    new database instances, applying patches and updates, monitoring performance,
    optimizing configurations, and managing backups can be performed automatically
    through scripts, configuration management tools, or **Infrastructure as Code**
    (**IaC**) solutions. This allows for faster and more efficient operations, reduces
    the chances of human error, and enables teams to focus on higher-value activities.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过零接触操作，像是新建数据库实例、应用补丁和更新、监控性能、优化配置、管理备份等日常和重复性任务可以通过脚本、配置管理工具或**基础设施即代码**（**IaC**）解决方案自动执行。这使得操作更加快速高效，减少人为错误的机会，并使团队可以专注于更高价值的活动。
- en: By leveraging automation, zero-touch operations can help improve reliability,
    scalability, and consistency across database environments. It also enables teams
    to adopt **continuous integration and continuous deployment** (**CI/CD**) practices,
    where changes to databases can be automatically tested, validated, and deployed
    without manual intervention.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用自动化，零接触操作可以帮助提高数据库环境的可靠性、可扩展性和一致性。它还使团队能够采用**持续集成和持续部署**（**CI/CD**）实践，可以自动测试、验证并部署数据库更改，无需人工干预。
- en: However, it’s important to note that achieving a fully **zero-touch** state
    may not always be feasible or practical in all scenarios. Certain exceptional
    cases or critical situations may still require human intervention or decision-making.
    Nonetheless, the aim is to minimize manual effort and maximize automation wherever
    possible to streamline database operations.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，重要的是要注意，在所有场景中实现完全的**零接触**状态可能并不总是可行或实际的。某些特殊情况或关键情境可能仍然需要人工干预或决策。尽管如此，目标是尽可能减少手动工作，并在可能的情况下最大化自动化，以简化数据库操作。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Traditional versus zero-touch approaches
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传统方法与零接触方法的对比
- en: Increased operational efficiency
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高操作效率
- en: Improved reliability and consistency
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高可靠性和一致性
- en: Accelerated deployment and time-to-market
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速部署和市场推广
- en: Enhanced scalability and elasticity
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强的可扩展性和弹性
- en: Reduced downtime and faster recovery
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少停机时间并加快恢复速度
- en: Improved compliance and security
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进的合规性与安全性
- en: Sanity-checking our approach
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对我们方法的合理性检查
- en: Traditional versus zero-touch approaches
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 传统方法与零接触方法的对比
- en: Let’s delve into the technical details to understand the differences between
    the traditional approach and the zero-touch approach.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨技术细节，以理解传统方法与零接触方法之间的区别。
- en: Automated configuration management
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化配置管理
- en: '**Traditional approach**:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, configuration management involves manually configuring
    systems and applications. Configuration changes are performed directly on each
    system, often through command-line interfaces or configuration files.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，配置管理涉及手动配置系统和应用程序。配置更改通常直接在每个系统上执行，通常通过命令行界面或配置文件进行。
- en: There is a lack of standardized processes and centralized control, leading to
    variations in configurations across different systems and a higher risk of errors
    or inconsistencies.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏标准化流程和集中控制，导致不同系统之间配置的差异，增加了错误或不一致的风险。
- en: '**Zero-touch approach**:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**零接触方法**：'
- en: The zero-touch approach automates configuration management using tools such
    as Ansible, Puppet, or Chef
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零接触方法通过使用诸如 Ansible、Puppet 或 Chef 等工具实现自动化配置管理
- en: Configuration settings are defined in code or declarative language, allowing
    for consistent and repeatable configurations across systems
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置设置通过代码或声明性语言定义，允许在系统之间进行一致且可重复的配置
- en: Automation tools apply the desired configurations to the target systems, ensuring
    that they conform to the specified state
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化工具将所需的配置应用到目标系统，确保它们符合指定的状态
- en: '**Key differences**:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键区别**：'
- en: '**Traditional approach**: Manual configuration changes on individual systems'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：在单个系统上手动进行配置更改'
- en: '**Zero-touch approach**: Automated configuration management using code or declarative
    language'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零接触方法**：使用代码或声明性语言进行自动化配置管理'
- en: Automated release management
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化发布管理
- en: '**Traditional approach**:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, release management typically involves manual steps
    for building, testing, and deploying software releases
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，发布管理通常涉及手动构建、测试和部署软件发布的步骤
- en: These manual steps are often time-consuming and error-prone, relying on manual
    intervention to initiate and track the release process
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些手动步骤通常耗时且容易出错，需要人工干预来启动和跟踪发布过程
- en: Coordination and communication between various teams is necessary to ensure
    the proper sequencing of tasks
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各团队之间需要协调和沟通，以确保任务按正确的顺序执行
- en: '**Zero-touch approach**:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**零接触方法**：'
- en: The zero-touch approach automates release management through CI/CD pipelines
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零接触方法通过CI/CD流水线实现自动化发布管理
- en: The CI/CD pipeline is configured to automatically trigger build, test, and deployment
    processes based on events such as code commits or predefined schedules
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI/CD流水线被配置为根据事件（如代码提交或预定义的时间表）自动触发构建、测试和部署过程
- en: Automated testing ensures that the software is thoroughly validated before deployment,
    reducing the risk of releasing faulty code
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化测试确保在部署前软件经过彻底验证，从而减少发布有缺陷代码的风险
- en: '**Key differences**:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键区别**：'
- en: '**Traditional approach**: Manual, error-prone release coordination and deployment'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：手动且容易出错的发布协调和部署'
- en: '**Zero-touch approach**: Automated release management through CI/CD pipelines'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零接触方法**：通过CI/CD流水线实现自动化发布管理'
- en: Automated monitoring and alerting
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化监控和告警
- en: '**Traditional approach**:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, monitoring systems and applications often rely
    on manual checks and log analysis
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，监控系统和应用通常依赖人工检查和日志分析
- en: Monitoring tools may be configured, but their usage and data interpretation
    require human intervention
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控工具可能已配置，但它们的使用和数据解读需要人工干预
- en: Alerting systems, if present, may be set up to send notifications for specific
    events or thresholds, but manual configuration is typically required
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在告警系统，它们可能会被设置为在特定事件或阈值发生时发送通知，但通常需要手动配置
- en: '**Zero-touch approach**:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**零接触方法**：'
- en: The zero-touch approach automates monitoring and alerting using tools such as
    Prometheus, Nagios, and **Elasticsearch, Logstash, and** **Kibana** (**ELK**)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零接触方法使用Prometheus、Nagios和**Elasticsearch、Logstash、Kibana**（**ELK**）等工具实现自动化监控和告警
- en: Monitoring metrics and events are collected automatically from various sources,
    including system logs, application logs, and performance counters
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控指标和事件自动从多个来源收集，包括系统日志、应用日志和性能计数器
- en: Automated alerting mechanisms are set up to send notifications when specific
    conditions or thresholds are met
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化告警机制设置为在特定条件或阈值满足时发送通知
- en: '**Key differences**:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键区别**：'
- en: '**Traditional approach**: Manual monitoring and log analysis'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：手动监控和日志分析'
- en: '**Zero-touch approach**: Automated monitoring and alerting through predefined
    configurations and event-driven notifications'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零接触方法**：通过预定义配置和事件驱动通知实现自动化监控和告警'
- en: In summary, the key technical differences between the traditional approach and
    the zero-touch approach lie in the level of automation, standardization, and centralized
    control achieved. The traditional approach relies on manual intervention, leading
    to variations, errors, and slower processes. In contrast, the zero-touch approach
    automates tasks, ensures consistency, and provides centralized control through
    configuration management tools, CI/CD pipelines, and automated monitoring and
    alerting systems.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，传统方法与零触控方法之间的关键技术差异在于自动化、标准化和集中控制的实现程度。传统方法依赖人工干预，导致变动、错误和流程缓慢。相反，零触控方法自动化任务，确保一致性，并通过配置管理工具、CI/CD管道和自动化监控及告警系统提供集中控制。
- en: 'Zero-touch operations have a high potential in the context of DevOps with databases.
    Let me try to illustrate some of the potential improvements you can expect if
    you decide to go down this road:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 零触控操作在DevOps数据库环境中具有很大的潜力。如果你决定走这条路，我试着说明一些你可能会期待的潜在改进：
- en: '**Increased** **operational efficiency**:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提高的** **运营效率**：'
- en: Automation reduces the time and effort required to perform routine tasks, resulting
    in increased operational efficiency
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化减少了执行常规任务所需的时间和精力，从而提高了运营效率。
- en: A study by Forrester Consulting found that organizations implementing automation
    in database management experienced a 50% reduction in operational costs and a
    40% reduction in time spent on manual tasks
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Forrester Consulting的一项研究发现，实施数据库管理自动化的组织，在运营成本上减少了50%，并且减少了40%的人工任务时间。
- en: '**Improved reliability** **and consistency**:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改进的可靠性** **和一致性**：'
- en: Automation helps enforce standardization and consistency across database environments,
    reducing the risk of human errors or configuration inconsistencies
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化帮助在数据库环境中执行标准化和一致性，减少人为错误或配置不一致的风险。
- en: A report by Puppet State of DevOps revealed that high-performing organizations
    with automated release processes experienced 60 times fewer failures and recovered
    from failures 168 times faster than low-performing organizations
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Puppet的《DevOps状态报告》揭示，高绩效的组织在自动化发布流程中经历的故障次数比低绩效组织少60倍，且从故障中恢复的速度比低绩效组织快168倍。
- en: '**Accelerated deployment** **and time-to-market**:'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加速的部署** **和上市时间**：'
- en: Automating deployment processes enables faster and more frequent releases, reducing
    time-to-market for new features and enhancements
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化部署流程可以实现更快速和更频繁的发布，缩短新功能和增强功能的上市时间。
- en: A survey by **DevOps Research and Assessment** (**DORA**) found that organizations
    with higher levels of automation in software delivery achieved 46 times more frequent
    deployments and had a lead time for changes that was 440 times faster than their
    low-performing counterparts
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps研究与评估**（**DORA**）的一项调查发现，软件交付中自动化水平较高的组织，部署频率是低绩效组织的46倍，变更的交付时间比低绩效组织快了440倍。'
- en: '**Enhanced scalability** **and elasticity**:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强的可扩展性** **和弹性**：'
- en: Automation enables the dynamic scaling of database resources based on demand,
    allowing organizations to handle increased workloads without manual intervention
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化使得数据库资源可以根据需求进行动态扩展，使得组织能够在无需人工干预的情况下处理增加的工作负载。
- en: '**Amazon Web Services** (**AWS**) reported that customers using AWS Database
    Migration Service, an automated database migration tool, achieved up to 98% reduction
    in manual effort and scaled database migrations to handle petabytes of data'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**亚马逊云服务**（**AWS**）报告称，使用AWS数据库迁移服务（自动化数据库迁移工具）的客户，手动工作量减少了高达98%，并且能够扩展数据库迁移，以处理PB级的数据。'
- en: '**Reduced downtime and** **faster recovery**:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少停机时间和** **更快的恢复**：'
- en: Automated monitoring and proactive alerting help identify and address issues
    before they cause significant downtime or performance degradation
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化监控和主动告警有助于在问题引发重大停机或性能下降之前及时发现并解决问题。
- en: The State of Database DevOps Report by Redgate found that organizations implementing
    automated monitoring and alerting reduced the **mean time to recovery** (**MTTR**)
    by 79%
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redgate发布的《数据库DevOps状态报告》发现，实施自动化监控和告警的组织将**平均恢复时间**（**MTTR**）缩短了79%。
- en: '**Improved compliance** **and security**:'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改进的合规性** **和安全性**：'
- en: Automation allows for consistent implementation of security measures, such as
    access controls, encryption, and patch management, reducing the risk of vulnerabilities
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化使得安全措施（如访问控制、加密和补丁管理）的实施保持一致，减少了漏洞的风险。
- en: A study by IBM reported that organizations using automated security tools achieved
    a 92% higher **return on investment** (**ROI**) compared to manual security practices
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM的一项研究报告显示，使用自动化安全工具的组织，其**投资回报率**（**ROI**）比采用手动安全措施的组织高出92%。
- en: These examples demonstrate the tangible benefits organizations have realized
    through the adoption of zero-touch operation principles, including cost savings,
    faster deployment cycles, improved reliability, and enhanced security.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些例子展示了组织通过采用零接触操作原则所实现的实际好处，包括节省成本、更快的部署周期、提高的可靠性和增强的安全性。
- en: Let’s dive deeper into these topics one by one.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一深入探讨这些话题。
- en: Increased operational efficiency
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高操作效率
- en: Zero-touch operations improve increased operational efficiency by automating
    manual tasks, reducing human effort, and minimizing the risk of errors. In this
    section, we’ll explain how it enhances operational efficiency with clear examples,
    along with the associated risks and effort required for implementation and maintenance.
    Based on the risks and effort highlighted, we can draw a conclusion on the ROI.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 零接触操作通过自动化手动任务、减少人工努力并最小化错误风险，显著提高了操作效率。在本节中，我们将通过清晰的示例解释它如何提高操作效率，同时讨论实施和维护所需的风险和努力。基于这些风险和努力，我们可以得出关于投资回报率（ROI）的结论。
- en: Automated database provisioning
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化数据库供应
- en: 'Let’s look at this in further detail:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步详细看看：
- en: '**Implementation**:'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现**：'
- en: Use IaC tools such as Terraform to define and provision databases automatically
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Terraform等IaC工具来定义并自动供应数据库
- en: Define the desired database configurations, including instance size, storage,
    and access controls, in the Terraform code
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Terraform代码中定义所需的数据库配置，包括实例大小、存储和访问控制。
- en: '**Risks**:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Misconfigurations in the IaC templates or improper handling of sensitive data
    may result in security vulnerabilities or operational issues. It is crucial to
    follow best practices, conduct regular code reviews, and perform thorough testing
    before deploying the infrastructure.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在IaC模板中的配置错误或不当处理敏感数据可能导致安全漏洞或操作问题。遵循最佳实践、进行定期代码审查，并在部署基础设施之前进行彻底的测试至关重要。
- en: '**Effort**:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves designing the IaC templates, defining
    configurations, and setting up integration with version control and CI/CD systems
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实现工作涉及设计IaC模板、定义配置，并与版本控制和CI/CD系统进行集成。
- en: Ongoing maintenance requires updating the templates to reflect changes in requirements,
    performing regular security audits, and staying up to date with new features or
    changes in the IaC tool
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护需要更新模板以反映需求变化，进行定期的安全审计，并保持与IaC工具的新特性或变化同步。
- en: Automated backup and recovery
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化备份和恢复
- en: 'Let’s look at this in further detail:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步详细看看：
- en: '**Implementation**:'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现**：'
- en: Utilize built-in backup and recovery features of database management systems
    or use backup automation tools
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用数据库管理系统的内置备份和恢复功能，或使用备份自动化工具
- en: Define backup schedules, retention policies, and recovery procedures to ensure
    data protection and fast recovery
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义备份计划、保留策略和恢复流程，以确保数据保护和快速恢复。
- en: '**Risks**:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Inadequate backup configurations or failure to regularly test the recovery process
    may result in data loss or extended downtime during recovery. Regular testing
    and validation of backups and recovery procedures are crucial to mitigate these
    risks.
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不足的备份配置或未定期测试恢复过程可能导致数据丢失或恢复期间的长时间停机。定期测试和验证备份及恢复流程对减轻这些风险至关重要。
- en: '**Effort**:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves configuring backup schedules, defining
    retention policies, and setting up the necessary automation scripts or tools
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实现工作涉及配置备份计划、定义保留策略，并设置必要的自动化脚本或工具。
- en: Ongoing maintenance includes monitoring backup operations, regularly testing
    recovery procedures, and updating configurations as needed
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护包括监控备份操作、定期测试恢复流程，并根据需要更新配置。
- en: Improved reliability and consistency
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高可靠性和一致性
- en: Zero-touch operations improve reliability and consistency by automating processes,
    reducing human errors, and ensuring standardized configurations. In this section,
    we’ll explain how it enhances reliability and consistency with clear examples,
    along with the associated risks and effort required for implementation and maintenance.
    Based on the risks and effort highlighted, we can draw a conclusion on the ROI.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 零触发操作通过自动化过程、减少人为错误并确保标准化配置，提升了可靠性和一致性。在本节中，我们将通过清晰的示例解释它如何增强可靠性和一致性，并分析实现和维护所需的风险和努力。根据突出显示的风险和努力，我们可以得出ROI的结论。
- en: Automated configuration management
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化配置管理
- en: 'Let’s look at this in further detail:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步详细了解：
- en: '**Implementation**:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现**：'
- en: Use configuration management tools such as Ansible, Puppet, or Chef to define
    and automate the configuration of systems and applications
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用配置管理工具，如Ansible、Puppet或Chef，来定义和自动化系统和应用程序的配置
- en: Define desired configurations in code, such as server settings, application
    configurations, and security policies
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在代码中定义所需的配置，例如服务器设置、应用程序配置和安全策略
- en: '**Risks**:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Misconfigurations in the automation scripts or incomplete coverage of configurations
    may lead to inconsistencies or security vulnerabilities. Thorough testing, code
    reviews, and periodic audits are crucial to minimize these risks.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化脚本中的配置错误或配置覆盖不完整可能导致不一致性或安全漏洞。彻底的测试、代码审查和定期审核对于最小化这些风险至关重要。
- en: '**Effort**:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves designing the automation scripts,
    defining configurations, and integrating them with version control and CI/CD systems
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实施工作包括设计自动化脚本、定义配置，并与版本控制和CI/CD系统进行集成
- en: Ongoing maintenance requires updating the scripts to reflect changes in requirements,
    conducting regular reviews, and addressing any configuration drift
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护需要更新脚本以反映需求变化，进行定期审核，并解决任何配置漂移问题
- en: Automated release management
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化发布管理
- en: 'Let’s look at more details:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再看一些细节：
- en: '**Implementation**:'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现**：'
- en: Utilize CI/CD pipelines to automate the release and deployment processes
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用CI/CD流水线自动化发布和部署过程
- en: Define pipelines that automatically build, test, and deploy software releases
    based on version control commits or trigger events
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义流水线，基于版本控制提交或触发事件自动构建、测试和部署软件发布
- en: '**Risks**:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Inadequate testing, incomplete automation, or issues in the CI/CD pipeline can
    lead to faulty releases, downtime, or degraded performance. Rigorous testing,
    quality assurance, and monitoring are necessary to mitigate these risks.
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试不足、自动化不完全或CI/CD流水线中的问题可能导致发布故障、停机或性能下降。严谨的测试、质量保证和监控对于减轻这些风险是必要的。
- en: '**Effort**:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves setting up CI/CD pipelines, defining
    build and deployment scripts, and integrating with testing frameworks and version
    control systems
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实施工作包括设置CI/CD流水线、定义构建和部署脚本，并与测试框架和版本控制系统进行集成
- en: Ongoing maintenance includes updating the pipelines, addressing any pipeline
    failures or performance issues, and continuously improving the release process
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护包括更新流水线、解决任何流水线故障或性能问题，并持续改进发布过程
- en: Accelerated deployment and time-to-market
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加速部署和上市时间
- en: Zero-touch operation improves accelerated deployment and time-to-market by automating
    the software release process, reducing manual effort, and enabling faster and
    more frequent deployments. In this section, we’ll explain how it enhances deployment
    speed and time-to-market with clear examples, along with the associated risks
    and effort required for implementation and maintenance. I will also highlight
    the differences between traditional deployment approaches and the zero-touch approach
    that’s used in the examples provided.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 零触发操作通过自动化软件发布过程、减少人工工作量、加速部署并提高市场响应速度，提升了部署速度和上市时间。在本节中，我们将通过清晰的示例解释它如何增强部署速度和上市时间，并分析实现和维护所需的风险和努力。我还将突出显示传统部署方法与示例中使用的零触发方法之间的区别。
- en: CI/CD pipelines
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CI/CD流水线
- en: 'Let’s look at this in more detail:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地来看：
- en: '**Traditional approach**:'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, software releases involve manual steps such as
    building, testing, and deploying code
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，软件发布涉及构建、测试和部署代码等手动步骤
- en: Manual intervention and coordination are required to ensure the proper sequence
    of tasks, resulting in longer deployment cycles and slower time-to-market
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要手动干预和协调来确保任务的正确顺序，这导致了更长的部署周期和较慢的市场推出时间
- en: '**Zero-touch approach**:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零触发方法**：'
- en: With zero-touch operations, CI/CD pipelines are implemented to automate the
    software release process
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在零触发操作中，CI/CD管道用于自动化软件发布流程
- en: Version control systems, such as Git, trigger the CI/CD pipeline when changes
    are committed, initiating automated building, testing, and deployment
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制系统（如Git）在提交更改时触发CI/CD管道，启动自动化构建、测试和部署
- en: Automated testing ensures that the software is thoroughly validated, enabling
    confidence in the release quality
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化测试确保软件经过充分验证，从而增强对发布质量的信心
- en: '**Risks**:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include inadequate testing or incomplete automation,
    which can result in faulty releases or regressions. Proper testing and quality
    assurance processes are essential to mitigate these risks.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发方法中的风险包括测试不足或自动化不完全，这可能导致发布故障或回归。适当的测试和质量保证过程对缓解这些风险至关重要。
- en: '**Effort**:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作量**：'
- en: The initial implementation effort involves setting up the CI/CD pipeline, defining
    build scripts, and configuring automated testing frameworks
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实现工作包括设置CI/CD管道、定义构建脚本，并配置自动化测试框架
- en: Ongoing maintenance includes updating the pipeline as new requirements arise,
    adding new tests, and continuously improving the release process
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护包括根据新需求更新管道，添加新测试并持续改进发布过程
- en: IaC and orchestration
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IaC与编排
- en: 'Let’s look at this in more detail:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这个：
- en: '**Traditional approach**:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, infrastructure provisioning and configuration are
    often manual, leading to delays and inconsistencies
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，基础设施的提供和配置通常是手动进行的，这会导致延迟和不一致性
- en: Manual intervention is required to set up servers, install dependencies, and
    configure the infrastructure
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要手动干预来设置服务器、安装依赖项并配置基础设施
- en: '**Zero-touch approach**:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零触发方法**：'
- en: Zero-touch operation leverages IaC tools such as Terraform or cloud provider
    APIs to automate infrastructure provisioning and configuration
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发操作利用IaC工具（如Terraform）或云提供商的API来自动化基础设施的提供和配置
- en: Infrastructure definitions are written in code, enabling consistent and repeatable
    deployments
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施定义以代码形式编写，实现一致且可重复的部署
- en: Orchestration tools such as Kubernetes or Docker Swarm automate containerized
    deployments, ensuring consistent environments
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编排工具如Kubernetes或Docker Swarm自动化容器化部署，确保一致的环境
- en: '**Risks**:'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include misconfigurations in the IaC templates
    or inadequate coverage of deployment scenarios. Rigorous testing and reviews are
    necessary to mitigate these risks.
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发方法中的风险包括IaC模板中的配置错误或部署场景的覆盖不足。严格的测试和评审是缓解这些风险的必要措施。
- en: '**Effort**:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作量**：'
- en: The initial implementation effort involves designing IaC templates, configuring
    orchestration tools, and integrating with version control and CI/CD systems
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实现工作包括设计IaC模板、配置编排工具，以及与版本控制和CI/CD系统的集成
- en: Ongoing maintenance includes updating infrastructure configurations, addressing
    changes in requirements, and performing regular audits
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护包括更新基础设施配置、应对需求变化，并执行定期审计
- en: In summary, zero-touch operation accelerates deployment and time-to-market by
    automating the release process and infrastructure provisioning. It reduces manual
    effort, eliminates coordination overhead, and enables faster and more frequent
    deployments. While there are risks associated with inadequate testing, incomplete
    automation, or misconfigurations, proper testing, quality assurance, and continuous
    improvement efforts help mitigate these risks.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，零触发操作通过自动化发布流程和基础设施提供来加速部署和市场推出时间。它减少了手动工作，消除了协调开销，并实现了更快、更频繁的部署。尽管与不充分的测试、不完全的自动化或配置错误相关的风险存在，但适当的测试、质量保证和持续改进的努力有助于缓解这些风险。
- en: The implementation effort for zero-touch operations involves setting up CI/CD
    pipelines, defining automated deployment configurations, and integrating with
    IaC and orchestration tools. Ongoing maintenance requires updating the pipelines,
    infrastructure definitions, and tests to reflect changes in requirements.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 零触操作的实施工作涉及设置CI/CD管道、定义自动化部署配置，并与基础设施即代码（IaC）和编排工具进行集成。持续的维护需要更新管道、基础设施定义和测试，以反映需求的变化。
- en: The ROI of zero-touch operations in terms of accelerated deployment and time-to-market
    is significant as it allows organizations to release software faster, respond
    to market demands promptly, and gain a competitive edge. While the initial implementation
    effort and ongoing maintenance should be considered, the long-term benefits and
    improved efficiency outweigh the risks and effort involved.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 零触操作在加速部署和缩短市场时间方面的投资回报率（ROI）显著，因为它使组织能够更快发布软件，及时响应市场需求，获得竞争优势。尽管需要考虑初始实施工作和持续维护，但长期效益和提高的效率超出了所涉及的风险和工作量。
- en: Enhanced scalability and elasticity
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 增强的可扩展性和弹性
- en: Zero-touch operations improve enhanced scalability and elasticity by automating
    the management of resources and enabling dynamic scaling based on demand. In this
    section, we’ll explain how it enhances scalability and elasticity with clear examples,
    along with the associated risks and effort required for implementation and maintenance.
    I will also highlight the differences between traditional approaches and the zero-touch
    approach used in the examples.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 零触操作通过自动化资源管理和基于需求动态扩展，提高了可扩展性和弹性。在这一部分，我们将解释它如何通过清晰的示例提高可扩展性和弹性，并讨论实施和维护过程中所需的风险和工作量。我还将重点说明传统方法与在示例中使用的零触方法之间的区别。
- en: Automated resource provisioning
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化资源配置
- en: 'Let’s look at this in more detail:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解一下：
- en: '**Traditional approach**:'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, provisioning resources involves manual intervention,
    such as setting up new servers or allocating additional storage
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，资源配置涉及人工干预，例如设置新服务器或分配额外的存储
- en: Manual scaling requires human effort and coordination and may lead to delays
    in responding to increased workloads
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动扩展需要人力和协调，可能导致响应增加的工作负载时出现延迟
- en: '**Zero-touch approach**:'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零触方法**：'
- en: With zero-touch operation, resource provisioning is automated using tools such
    as Terraform or cloud provider APIs
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在零触操作下，使用如Terraform或云服务提供商API等工具自动化资源配置
- en: IaC templates define the desired resource configurations, allowing for dynamic
    and consistent provisioning of resources
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IaC模板定义所需的资源配置，允许动态且一致地配置资源
- en: Auto-scaling groups or similar mechanisms automatically adjust resource capacity
    based on predefined rules or workload metrics
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动扩展组或类似机制根据预定义规则或工作负载指标自动调整资源容量
- en: '**Risks**:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include misconfigurations in the IaC templates
    or improper scaling rules, which may lead to resource inefficiencies or unexpected
    scaling behavior. Thorough testing and validation are necessary to mitigate these
    risks.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触方法的风险包括IaC模板中的配置错误或不当的扩展规则，这可能导致资源低效或意外的扩展行为。需要进行彻底的测试和验证以减轻这些风险。
- en: '**Effort**:'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作量**：'
- en: The initial implementation effort involves designing IaC templates, defining
    scaling rules, and integrating with auto-scaling mechanisms or cloud provider
    APIs
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实施工作包括设计IaC模板、定义扩展规则，并与自动扩展机制或云服务提供商API进行集成
- en: Ongoing maintenance includes updating scaling rules as per changing requirements,
    monitoring resource utilization, and optimizing configurations
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续的维护包括根据变化的需求更新扩展规则、监控资源利用率并优化配置
- en: Container orchestration
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 容器编排
- en: 'Let’s look at this in more detail:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解一下：
- en: '**Traditional approach**:'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, scaling applications to handle increased workloads
    may involve manual intervention and coordination
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，扩展应用程序以应对增加的工作负载可能需要人工干预和协调
- en: Manually setting up and configuring additional servers or virtual machines to
    handle increased traffic can be time-consuming and error-prone
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动设置和配置额外的服务器或虚拟机以处理增加的流量可能既耗时又容易出错
- en: '**Zero-touch approach**:'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零触方法**：'
- en: Zero-touch operation leverages container orchestration platforms such as Kubernetes
    and Docker Swarm
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触操作利用容器编排平台，如Kubernetes和Docker Swarm
- en: These platforms automate the scaling of containerized applications based on
    defined rules, metrics, or workload thresholds
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些平台根据定义的规则、指标或工作负载阈值，自动扩展容器化应用程序。
- en: The orchestration layer automatically adjusts the number of running containers
    or replicas to handle changes in demand
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编排层会自动调整运行容器或副本的数量，以应对需求变化。
- en: '**Risks**:'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include misconfigurations in the orchestration
    settings or inadequate monitoring of resource utilization, which may lead to resource
    wastage or insufficient capacity. Rigorous testing, monitoring, and continuous
    optimization are essential to mitigate these risks.
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零接触方法中的风险包括编排设置中的配置错误或资源利用率监控不足，可能导致资源浪费或容量不足。严格的测试、监控和持续优化对于降低这些风险至关重要。
- en: '**Effort**:'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作量**：'
- en: The initial implementation effort involves setting up the container orchestration
    platform, defining scaling rules, and configuring monitoring and alerting
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初步实施工作包括设置容器编排平台、定义扩展规则并配置监控和告警。
- en: Ongoing maintenance includes adjusting scaling rules, monitoring application
    performance, and optimizing resource allocation as per changing requirements
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续维护包括根据变化的需求调整扩展规则、监控应用程序性能并优化资源分配。
- en: In summary, it improves enhanced scalability and elasticity by automating resource
    provisioning and dynamically scaling based on demand. It reduces manual effort,
    enables faster response to workload fluctuations, and ensures efficient resource
    utilization. While there are risks associated with misconfigurations or inadequate
    monitoring, proper testing, monitoring, and continuous optimization efforts help
    mitigate these risks.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，通过自动化资源供应和基于需求的动态扩展，它提高了可扩展性和弹性。它减少了人工工作量，加快了对工作负载波动的响应，并确保了资源的高效利用。虽然配置错误或监控不足带来了一些风险，但适当的测试、监控和持续优化努力有助于降低这些风险。
- en: The implementation effort for zero-touch operation involves designing IaC templates,
    integrating with auto-scaling mechanisms or container orchestration platforms,
    and configuring scaling rules. Ongoing maintenance includes updating configurations,
    monitoring resource utilization, and optimizing scaling parameters.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 零接触操作的实施工作包括设计IaC模板、与自动扩展机制或容器编排平台集成以及配置扩展规则。持续维护包括更新配置、监控资源利用率并优化扩展参数。
- en: The ROI of zero-touch operation in terms of enhanced scalability and elasticity
    is significant as it allows organizations to handle increased workloads without
    manual intervention, optimize resource usage, and improve overall system performance.
    While the initial implementation effort and ongoing maintenance should be considered,
    the long-term benefits and improved scalability outweigh the risks and effort
    involved.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 零接触操作在增强可扩展性和弹性方面的投资回报率显著，因为它使组织能够在没有人工干预的情况下处理增加的工作负载，优化资源使用，并改善整体系统性能。虽然需要考虑初步实施工作和持续维护，但长期利益和改进的可扩展性超过了风险和投入的努力。
- en: Reduced downtime and faster recovery
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 减少停机时间并加速恢复。
- en: Zero-touch operations improve reduced downtime and faster recovery by automating
    monitoring, proactive alerting, and streamlined recovery processes. In this section,
    we’ll explain how it enhances reduced downtime and faster recovery with clear
    examples, along with the associated risks and effort required for implementation
    and maintenance. I will also highlight the differences between traditional approaches
    and the zero-touch approach used in the examples.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 零接触操作通过自动化监控、主动告警和简化恢复过程来减少停机时间和加速恢复。在本节中，我们将通过清晰的示例解释它如何减少停机时间并加快恢复，同时介绍实施和维护过程中相关的风险和工作量。我还将强调传统方法和示例中使用的零接触方法之间的区别。
- en: Automated monitoring and alerting
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化监控和告警
- en: 'Let’s look at this in more detail:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看一下：
- en: '**Traditional approach**:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, monitoring systems and applications rely on manual
    checks or reactive troubleshooting
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，监控系统和应用程序依赖于手动检查或被动排查故障。
- en: Manual monitoring and response can lead to delays in detecting issues and addressing
    them, resulting in prolonged downtime
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动监控和响应可能导致延迟发现问题并解决问题，从而导致停机时间延长。
- en: '**Zero-touch approach**:'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零接触方法**：'
- en: Zero-touch operations automate monitoring using tools such as Prometheus, Nagios,
    or ELK
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零接触操作通过使用如Prometheus、Nagios或ELK等工具来自动化监控。
- en: Automated monitoring systems collect real-time metrics, log data, and perform
    health checks on systems and applications
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化监控系统收集实时指标、日志数据并对系统和应用程序执行健康检查
- en: Proactive alerting mechanisms are configured to notify appropriate teams or
    individuals when predefined conditions or thresholds are met
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动警报机制被配置为在满足预定义条件或阈值时通知相关团队或个人
- en: '**Risks**:'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include misconfigurations or inadequate coverage
    in monitoring configurations, leading to missed alerts or false positives. Thorough
    testing, proper configuration, and continuous monitoring are necessary to mitigate
    these risks.
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发方法中的风险包括监控配置中的配置错误或覆盖不充分，导致漏掉警报或误报。为了减轻这些风险，必须进行彻底的测试、适当的配置和持续的监控。
- en: '**Effort**:'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves setting up the monitoring infrastructure,
    configuring metrics, and defining alerting rules
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实施工作包括设置监控基础设施、配置指标和定义警报规则
- en: Ongoing maintenance includes updating monitoring configurations, adjusting alerting
    thresholds, and addressing any issues or false alarms
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续的维护工作包括更新监控配置、调整警报阈值以及解决任何问题或误报
- en: Streamlined recovery processes
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化的恢复过程
- en: 'Let’s look at this in more detail:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看：
- en: '**Traditional approach**:'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传统方法**：'
- en: In the traditional approach, recovery from failures or data loss often involves
    manual intervention, complex procedures, and longer downtime
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统方法中，故障恢复或数据丢失通常需要人工干预、复杂的过程和更长的停机时间
- en: The lack of standardized and automated recovery processes can lead to delays
    in restoring services or data
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏标准化和自动化的恢复过程可能导致恢复服务或数据的延迟
- en: '**Zero-touch approach**:'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零触发方法**：'
- en: Zero-touch operations automate recovery processes using predefined and tested
    recovery procedures
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发操作通过使用预定义和经过测试的恢复程序来自动化恢复过程
- en: Automated recovery mechanisms, such as backups and replication, are implemented
    to minimize data loss and restore services quickly
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化恢复机制，如备份和复制，被实施以最小化数据丢失并迅速恢复服务
- en: Orchestration tools such as Kubernetes or database-specific tools provide built-in
    mechanisms for automating recovery and failover processes
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像Kubernetes或数据库特定工具这样的编排工具提供内建机制来自动化恢复和故障转移过程
- en: '**Risks**:'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险**：'
- en: Risks in the zero-touch approach include inadequate backup configurations, incomplete
    testing of recovery procedures, or errors in automation scripts, which may result
    in data loss or extended downtime. Rigorous testing, validation, and continuous
    improvement are necessary to mitigate these risks.
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零触发方法中的风险包括备份配置不足、恢复程序测试不完全或自动化脚本中的错误，这可能导致数据丢失或停机时间延长。为了减轻这些风险，必须进行严格的测试、验证和持续改进。
- en: '**Effort**:'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**努力**：'
- en: The initial implementation effort involves setting up automated backup mechanisms,
    defining recovery procedures, and configuring failover or replication settings
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始实施工作包括设置自动化备份机制、定义恢复程序和配置故障转移或复制设置
- en: Ongoing maintenance includes regular testing of recovery procedures, updating
    backup configurations, and addressing any issues or gaps in the automation
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续的维护工作包括定期测试恢复程序、更新备份配置并解决自动化中的任何问题或漏洞
- en: In summary, it reduces downtime and faster recovery by automating monitoring,
    proactive alerting, and streamlined recovery processes. It reduces manual effort,
    enables faster issue detection and resolution, and minimizes the impact of failures.
    While there are risks associated with misconfigurations, incomplete automation,
    or errors in recovery procedures, proper testing, validation, and continuous improvement
    efforts help mitigate these risks.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，通过自动化监控、主动警报和简化的恢复过程，它减少了停机时间并加快了恢复速度。它减少了人工操作，能够更快地发现和解决问题，并最小化故障的影响。尽管零触发操作存在由于配置错误、自动化不完全或恢复程序中的错误而带来的风险，但通过适当的测试、验证和持续改进努力，可以帮助减轻这些风险。
- en: The implementation effort for zero-touch operation involves setting up the monitoring
    infrastructure, configuring alerting rules, and implementing automated recovery
    mechanisms. Ongoing maintenance includes monitoring, updating configurations,
    testing recovery procedures, and addressing any issues that arise.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 零触发操作的实施工作包括设置监控基础设施、配置警报规则以及实施自动化恢复机制。持续的维护工作包括监控、更新配置、测试恢复程序以及解决任何出现的问题。
- en: The ROI of zero-touch operation in terms of reduced downtime and faster recovery
    is significant as it minimizes the impact of failures, reduces downtime, and improves
    overall system availability. While the initial implementation effort and ongoing
    maintenance should be considered, the long-term benefits and improved reliability
    outweigh the risks and effort involved.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Improved compliance and security
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Zero-touch operations improve compliance and security by automating security
    measures, enforcing standardized configurations, and providing auditability. In
    this section, we’ll explain how it enhances compliance and security with clear
    examples, along with the associated risks and effort required for implementation
    and maintenance. I will also highlight the differences between traditional approaches
    and the zero-touch approach used in the examples.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Automated security configurations
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s look at this in more detail:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '**Traditional approach**:'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the traditional approach, security configurations are often manually implemented,
    leading to inconsistencies and the potential for misconfigurations
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Manual configuration increases the risk of security vulnerabilities and makes
    it challenging to enforce standardized security measures
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Zero-touch approach**:'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero-touch operations automate security configurations using tools such as Ansible,
    Puppet, or Chef
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Security settings, such as access controls, firewall rules, or encryption configurations,
    are defined in code or declarative language
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Automation tools apply the desired security configurations consistently across
    systems, reducing the risk of misconfigurations
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risks**:'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risks in the zero-touch approach include misconfigurations in the automation
    scripts or incomplete coverage of security configurations, which may introduce
    security vulnerabilities. Rigorous testing, adherence to security best practices,
    and continuous monitoring are necessary to mitigate these risks.
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Effort**:'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The initial implementation effort involves designing and implementing the automation
    scripts for security configurations, defining security policies, and integrating
    them with version control and CI/CD systems
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ongoing maintenance includes updating the scripts to reflect changes in security
    requirements, addressing security vulnerabilities, and performing regular security
    audits
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Automated compliance checks
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s look at this in more detail:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '**Traditional approach**:'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the traditional approach, compliance checks are often performed manually,
    requiring time-consuming inspections and manual documentation
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Manual checks and documentation can be error-prone, leading to compliance gaps
    or difficulties in proving compliance
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Zero-touch approach**:'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero-touch operations automate compliance checks using tools such as OpenSCAP,
    InSpec, or custom scripts
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Compliance rules or requirements are defined in code, enabling automated checks
    against desired configurations
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Reports and audit trails are generated automatically, providing documentation
    and evidence of compliance
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risks**:'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risks in the zero-touch approach include incomplete coverage of compliance checks,
    misconfigurations in compliance scripts, or false positives/negatives in the automated
    checks. Thorough testing, adherence to compliance standards, and regular validation
    are necessary to mitigate these risks.
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Effort**:'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The initial implementation effort involves setting up compliance automation
    tools, defining compliance rules, and integrating them with monitoring systems
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ongoing maintenance includes updating compliance rules, addressing new compliance
    requirements, and performing regular audits and validations
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In summary, it improves compliance and security by automating security configurations
    and compliance checks. It reduces manual effort, ensures standardized security
    measures, and provides auditable evidence of compliance. While there are risks
    associated with misconfigurations, incomplete coverage, or false positives/negatives,
    proper testing, adherence to security best practices, and continuous improvement
    efforts help mitigate these risks.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: The implementation effort for zero-touch operation involves designing and implementing
    automation scripts for security configurations, defining compliance rules, and
    integrating them with relevant systems. Ongoing maintenance includes updating
    configurations, addressing security vulnerabilities, updating compliance rules,
    and performing regular audits.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: The ROI of zero-touch operations in terms of compliance and security is significant
    as it reduces manual effort, improves security consistency, and provides evidence
    of compliance. While the initial implementation effort and ongoing maintenance
    should be considered, the long-term benefits and improved security posture outweigh
    the risks and effort involved.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Sanity-checking our approach
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To determine if you have implemented zero-touch operations correctly, you can
    consider the following indicators:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '**Minimal manual intervention**: Zero-touch operations aim to minimize manual
    intervention and human interaction in routine tasks. Evaluate the level of automation
    achieved and ensure that most of the operations related to database management,
    deployment, monitoring, scaling, and recovery are automated. Manually initiated
    actions should be exceptions rather than the norm.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated workflows**: Verify that you have established end-to-end automated
    workflows for database-related processes. For example, database provisioning,
    configuration management, deployment, and backup/restoration processes should
    be orchestrated through automated scripts, tools, or IaC solutions.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring and alerting**: Implement automated monitoring and alerting systems
    to proactively identify issues and notify the appropriate teams. Ensure that the
    system can detect performance bottlenecks, resource utilization, and potential
    security vulnerabilities. This helps maintain a proactive approach to managing
    the databases and minimizes the need for reactive manual intervention.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控和警报**：实施自动化监控和警报系统，主动识别问题并通知相关团队。确保系统能够检测到性能瓶颈、资源利用率和潜在的安全漏洞。这有助于维持主动管理数据库的方法，最小化对反应性人工干预的需求。'
- en: '**CI/CD**: Evaluate the level of automation that’s achieved in the CI/CD pipeline
    for databases. Verify if changes to the database schema, configurations, or data
    can be automatically tested, validated, and deployed. CI/CD automation ensures
    that changes are rapidly and consistently deployed without manual intervention.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CI/CD**：评估在数据库的CI/CD流水线中实现的自动化程度。验证是否可以自动测试、验证和部署对数据库模式、配置或数据的更改。CI/CD自动化确保更改能够快速且一致地部署，而无需人工干预。'
- en: '**Metrics and reporting**: Implement automated metrics collection and reporting
    mechanisms to gather data on database performance, resource utilization, availability,
    and other relevant metrics. Automated reporting enables teams to monitor the health
    and performance of the databases without manual effort and helps identify trends
    and areas for improvement.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指标和报告**：实施自动化的指标收集和报告机制，以收集关于数据库性能、资源利用、可用性和其他相关指标的数据。自动化报告使团队能够在无需人工干预的情况下监控数据库的健康状况和性能，并帮助识别趋势和改进领域。'
- en: '**Efficiency and error reduction**: Measure the impact of zero-touch operations
    on operational efficiency and error reduction. Assess the time and effort that’s
    saved through automation, as well as the reduction in manual errors and inconsistencies.
    Compare key performance metrics before and after implementing zero-touch operations
    to evaluate their effectiveness.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**效率和错误减少**：衡量零触点操作对操作效率和错误减少的影响。评估通过自动化节省的时间和精力，以及减少的人工错误和不一致性。比较实施零触点操作前后的关键绩效指标，以评估其效果。'
- en: It’s important to remind ourselves that achieving a fully “zero-touch” state
    may not be feasible or necessary for all tasks or situations. Some exceptional
    cases or critical scenarios may still require human intervention. However, the
    goal is to minimize manual effort and maximize automation wherever possible to
    improve operational efficiency and reduce the risk of errors.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要提醒自己，实现完全的“零触点”状态可能并不适用于所有任务或情况。有些特殊情况或关键场景仍然可能需要人工干预。然而，目标是尽可能减少人工努力，最大化自动化，以提高操作效率并减少错误的风险。
- en: Regularly review and refine your automation processes based on feedback, performance
    metrics, and evolving requirements to continuously improve the implementation
    of zero-touch operations.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 根据反馈、绩效指标和不断发展的需求，定期审查并完善你的自动化流程，以持续改进零触点操作的实施。
- en: Conclusion on ROI
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 投资回报率结论
- en: Implementing zero-touch operations requires an initial investment of time and
    effort to design, implement, and validate the automated workflows. Additionally,
    ongoing maintenance efforts are needed to ensure the reliability and consistency
    of the automated processes.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 实施零触点操作需要投入初步的时间和精力来设计、实施和验证自动化工作流。此外，还需要持续的维护工作，以确保自动化过程的可靠性和一致性。
- en: However, the ROI can be significant in terms of improved reliability and consistency.
    By automating configuration management and release processes, organizations can
    reduce human errors, ensure standardized configurations, and achieve faster and
    more consistent deployments.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，从提高可靠性和一致性的角度来看，投资回报率可能是显著的。通过自动化配置管理和发布流程，组织可以减少人为错误，确保标准化的配置，并实现更快速、更一致的部署。
- en: The risks associated with misconfigurations or incomplete automation can be
    mitigated through thorough testing, reviews, and ongoing monitoring. Regular updates
    and enhancements to the automated processes help maintain their reliability and
    effectiveness.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 与配置错误或自动化不完全相关的风险，可以通过彻底的测试、审查和持续监控来降低。对自动化过程进行定期更新和增强，有助于保持其可靠性和有效性。
- en: Overall, the ROI of implementing zero-touch operations depends on the specific
    context, the complexity of the systems involved, and the level of automation achieved.
    Organizations that prioritize reliability and consistency, invest in robust testing
    and monitoring practices, and continuously improve their automation workflows
    are likely to realize significant long-term benefits and improved operational
    stability.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，实施零接触操作的投资回报率（ROI）取决于具体的环境、涉及的系统复杂性以及实现的自动化水平。那些优先考虑可靠性和一致性的组织，投资于强大的测试和监控实践，并持续改进其自动化工作流程，往往能够实现显著的长期收益和更高的操作稳定性。
- en: Summary
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Implementing zero-touch operations requires an initial investment of time and
    effort to design, implement, and validate the automated workflows. Additionally,
    ongoing maintenance efforts are needed to ensure the reliability and consistency
    of the automated processes.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 实施零接触操作需要投入时间和精力来设计、实现和验证自动化工作流。此外，还需要持续的维护工作，以确保自动化过程的可靠性和一致性。
- en: However, the ROI can be significant in terms of improved reliability and consistency.
    By automating configuration management and release processes, organizations can
    reduce human errors, ensure standardized configurations, and achieve faster and
    more consistent deployments.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，从提高可靠性和一致性的角度来看，投资回报率可能非常可观。通过自动化配置管理和发布流程，组织可以减少人为错误，确保配置标准化，并实现更快、更一致的部署。
- en: The risks associated with misconfigurations or incomplete automation can be
    mitigated through thorough testing, reviews, and ongoing monitoring. Regular updates
    and enhancements to the automated processes help maintain their reliability and
    effectiveness.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 与错误配置或不完整自动化相关的风险可以通过全面的测试、审查和持续监控来降低。定期更新和改进自动化过程有助于维持其可靠性和有效性。
- en: Overall, the ROI of implementing zero-touch operations depends on the specific
    context, the complexity of the systems involved, and the level of automation achieved.
    Organizations that prioritize reliability and consistency, invest in robust testing
    and monitoring practices, and continuously improve their automation workflows
    are likely to realize significant long-term benefits and improved operational
    stability.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，实施零接触操作的投资回报率（ROI）取决于具体的环境、涉及的系统复杂性以及实现的自动化水平。那些优先考虑可靠性和一致性的组织，投资于强大的测试和监控实践，并持续改进其自动化工作流程，往往能够实现显著的长期收益和更高的操作稳定性。
- en: In the next chapter, we will learn about the role of the DevOps DBA through
    design to production.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将通过设计到生产的过程，学习DevOps数据库管理员（DBA）的角色。
