- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Getting the Best Out of DevOps Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps can be viewed as an approach aimed to improve the overall **Software
    Development Life Cycle** (**SDLC**) process, leading to greater collaboration
    between the teams involved. Hence, using the right set of tools for your DevOps
    processes and activities is critical to driving consistency and predictability
    across the various engineering teams. The goal is to establish a culture of innovation
    by automating the various processes, thereby synchronizing the efforts of the
    teams (or roles) while developing, testing, and deploying software faster with
    the highest quality possible.
  prefs: []
  type: TYPE_NORMAL
- en: '**Microsoft** offers great products such as **Azure DevOps**, **GitHub**, **Azure
    Monitor**, and **Visual Studio Code** that help simplify the adoption of important
    practices spanning across the various life cycle phases of your DevOps implementation.
    These tools are feature-rich and offer a best-in-class experience to the developer
    community. The out-of-the-box experience can be further extended using marketplace
    extensions offered by other **Independent Software Vendors** (**ISVs**) and even
    the open source community.'
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will be familiar with some of these tool offerings,
    as well as the context in which they can be used within your respective software
    development programs.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: SDLC and DevOps tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure DevOps and GitHub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure DevTest Labs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Monitor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual Studio Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SDLC and DevOps tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Be it a service or a product, the term SDLC refers to the set of processes and
    practices that are applied when building a software solution to ensure quality
    and meet other objectives, as outlined for the engineering team.
  prefs: []
  type: TYPE_NORMAL
- en: These processes are typically grouped as per the various phases in the development
    life cycle. The maturity of these processes has evolved over the years due to
    the evolution of technology. As engineering systems have become relatively complex
    with the use of distributed computing and cloud technologies, the development
    teams are expected to maintain strong rigor and discipline, as well as making
    use of automation to sustain their digital transformation journeys.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on which software development methodology you may follow, be it **Waterfall**,
    **Agile**, **Scrum**, **Kanban**, or even a tailored version of your own, it is
    highly likely that you will make use of the DevOps-related practices in some form
    or the other. However, it is worth mentioning that Waterfall is not a recommended
    methodology to choose anymore if you wish to realize the true potential of your
    DevOps investments.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at some of the key activities that are executed in a DevOps life
    cycle.
  prefs: []
  type: TYPE_NORMAL
- en: Key activities in a DevOps life cycle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At a high level, the DevOps-related activities can be grouped into four different
    focus areas, as depicted in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – Focus areas and key activities in a DevOps life cycle ](img/B18655_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.1 – Focus areas and key activities in a DevOps life cycle
  prefs: []
  type: TYPE_NORMAL
- en: The list of activities depicted here is meant to serve as a basic foundational
    list. Depending on your DevOps maturity level, you may implement many more practices
    to maximize your business outcomes. You must make use of the DevOps metrics discussed
    in [*Chapter 1*](B18655_01.xhtml#_idTextAnchor014), *Introduction to DevOps*,
    that are relevant to your context, and then identify the important practices that
    will help you achieve it.
  prefs: []
  type: TYPE_NORMAL
- en: In the next few sections, we will review these focus areas in detail to help
    you understand each of them better.
  prefs: []
  type: TYPE_NORMAL
- en: Plan and track
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The development team identifies and organizes the product backlog and publishes
    work for the team. The work will be scheduled based on business priority and the
    available capacity. Backlog grooming and refinement is an ongoing activity throughout
    the life cycle of the product and shall span across multiple releases.
  prefs: []
  type: TYPE_NORMAL
- en: Develop and test
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The development team starts producing the work outputs in the form of source
    code or scripts. All changes to the code base are checked for quality issues using
    static analyzers, unit tests, and even manual inspection. Once satisfied, the
    artifacts are compiled and built to produce a deployable package, also known as
    a solution.
  prefs: []
  type: TYPE_NORMAL
- en: Deploy and release
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The solutions are initially deployed in a test environment, validated for correctness
    using automated tests, and then released to production environments. After this,
    the solution is then live and accessible to end users of the product or service.
  prefs: []
  type: TYPE_NORMAL
- en: Monitor and learn
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once the solution has gone live, this phase kicks in, and diagnostic and health
    monitoring information is captured from the live usage of the product or service.
    The data that’s captured in the monitoring tools is periodically analyzed for
    faults and errors; any problems that have been identified are either mitigated
    using automation procedures or logged as bugs to be fixed by the team. Additionally,
    customer feedback can be channelized to suggest enhancements to the product or
    service. Now that you’re aware of what goes on in the DevOps life cycle, let’s
    review some of the commonly used tools for your DevOps practices.
  prefs: []
  type: TYPE_NORMAL
- en: Tools for your DevOps needs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Microsoft has a wide variety of tools to support your DevOps life cycle needs.
    Furthermore, it supports integration with other third-party tools to offer a cohesive
    experience to the developers of your team. So, whether you are building a new
    software system or maintaining one, you can easily adopt the Azure DevOps services
    and GitHub to innovate at scale.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we have listed the tools that you can plan to make use of for the various
    types of SDLC activities:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Practice/Activity** | **Choice of Tool** |'
  prefs: []
  type: TYPE_TB
- en: '| Manage your product backlog.Plan and track your work.Prepare dashboards and
    reports. | Azure Boards |'
  prefs: []
  type: TYPE_TB
- en: '| Develop code locally, build, debug, and test. | Visual Studio Code/Visual
    Studio |'
  prefs: []
  type: TYPE_TB
- en: '| Manage and track changes to your source code. | Azure Repos, Git |'
  prefs: []
  type: TYPE_TB
- en: '| Define **continuous integration** (**CI**)/**continuous deployment** (**CD**)
    workflows to integrate changes and deploy the latest releases to different environments.
    | Azure PipelinesGitHub ActionsJenkins (third party) |'
  prefs: []
  type: TYPE_TB
- en: '| Provision developer environments. | Azure DevTest Labs, Azure Virtual Desktop
    |'
  prefs: []
  type: TYPE_TB
- en: '| Deploy and manage Azure cloud infrastructure and services (both IaaS and
    PaaS). | **Azure Resource Manager** (**ARM**) and the Azure **Command-Line Interface**
    (**CLI**)Ansible and Terraform (third party) |'
  prefs: []
  type: TYPE_TB
- en: '| Manage the configuration of your resources. | Ansible, Terraform, Chef, Puppet,
    and Azure Automation |'
  prefs: []
  type: TYPE_TB
- en: '| Advanced analytics and reporting. | Power BI |'
  prefs: []
  type: TYPE_TB
- en: '| Capture and analyze logs (diagnostic, auditing, and health). | Azure Monitor
    and Azure Data Explorer |'
  prefs: []
  type: TYPE_TB
- en: '| Prepare test plans and manage execution. | Azure Test Plans |'
  prefs: []
  type: TYPE_TB
- en: '| Store reusable packages and artifacts. | Azure Artifacts |'
  prefs: []
  type: TYPE_TB
- en: '| Improve productivity by using third-party extensions and plugins. | Azure
    DevOps MarketplaceGitHub Marketplace |'
  prefs: []
  type: TYPE_TB
- en: Table 3.1 – DevOps tools for your SDLC activities
  prefs: []
  type: TYPE_NORMAL
- en: Please go to https://azure.microsoft.com/en-in/solutions/devops/#practices for
    more details.
  prefs: []
  type: TYPE_NORMAL
- en: In the next few sections, we will look at the features and capabilities of a
    few of these tools. Detailed usage of these tools has also been explained in the
    subsequent chapters while providing illustrative examples of how the respective
    DevOps practices are being implemented.
  prefs: []
  type: TYPE_NORMAL
- en: Azure DevOps and GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Azure DevOps** and **GitHub** are two powerful **Software as a Service**
    (**SaaS**) offerings from Microsoft that serve as a complete DevOps toolset. From
    managing your backlog and team processes to a Git-based code repository to having
    the ability to execute CI/CD processes with automated testing, you will discover
    that GitHub and Azure DevOps is the perfect solution for you.'
  prefs: []
  type: TYPE_NORMAL
- en: In the following subsections, we will explore the unique features of these two
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: Azure DevOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Originally, being part of the Visual Studio suite of products, the present-day
    Azure DevOps is perhaps the most used product by engineering teams to manage their
    source code and application life cycle processes. It was formerly known as **Visual
    Studio Team Services** and **Visual Studio Online** before that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure DevOps is an Azure cloud-hosted version of the Azure DevOps server, previously
    known as **Team Foundation Server** (**TFS**) within the developer community.
    The main services that are available within this product are shown in the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Services available in Azure DevOps ](img/B18655_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.2 – Services available in Azure DevOps
  prefs: []
  type: TYPE_NORMAL
- en: Your access to these services will depend on the license type for your user
    account. For a complete list of the licensing options available for individuals
    and organizations, please go to [https://azure.microsoft.com/en-in/pricing/details/devops/azure-devops-services/](https://azure.microsoft.com/en-in/pricing/details/devops/azure-devops-services/).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a brief look at each service.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Boards
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Managing your product backlog and tracking work has become a lot easier with
    Azure Boards. By making use of Kanban-style boards, you can create customized
    boards to track all your ideas to implementation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Capabilities in Azure Boards ](img/B18655_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.3 – Capabilities in Azure Boards
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read more about Azure Boards here: [https://docs.microsoft.com/en-in/azure/devops/boards/get-started/what-is-azure-boards?view=azure-devop](https://docs.microsoft.com/en-in/azure/devops/boards/get-started/what-is-azure-boards?view=azure-devop)`s`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Boards, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Manage and organize your backlog.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualize stages and use them during daily standups and team meetings to track
    progress.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create customized dashboard reports for various stakeholders.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will look at Azure Repos, where you will store all your
    work products.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Repos
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Source Code Management** (**SCM**) and **version control** are fundamental
    to engineering teams that are managing changes to the code base. Azure Repos offers
    a version control tool for managing a variety of software development projects.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Repos offers two types of version control systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Team Foundation Version Control** (**TFVC**): This is a centralized version
    control system. Though not widely used in recent times, many project teams are
    continuing to use this approach for legacy purposes only.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Git**: This is the more popular distributed version control system. If you
    are just starting your DevOps journey, it is recommended to start with a Git-based
    version control system only:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.4 – Capabilities in Azure Repos ](img/B18655_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.4 – Capabilities in Azure Repos
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read more about Azure Repos here: [https://docs.microsoft.com/en-us/azure/devops/repos/get-started/what-is-repos](https://docs.microsoft.com/en-us/azure/devops/repos/get-started/what-is-repos).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Repos, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Manage changes to your source code using the Git CLI or GUI-based tools.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure branch policies and security to ensure compliance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quickly find what you are looking for in your code base using semantic search.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s review Azure Pipelines, which you will use for your CI/CD processes.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Pipelines
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'All code-based artifacts follow some sort of CI, CD, and **Continuous Testing**
    (**CT**) to certify their quality before they can be moved to a production environment.
    Azure Pipelines offers automation to execute the build, test, and release workflows.
    The sequence of tasks to be executed is configured using a YAML file. There are
    multiple source repositories (such as **Azure Repos**, **GitHub**, **Bitbucket**,
    and so on) you can choose from while building your pipelines. Also, separate pipelines
    are typically created for different workloads, along with gated approval checks
    as appropriate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – Capabilities in Azure Pipelines ](img/B18655_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – Capabilities in Azure Pipelines
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read more about Azure Repos here: [https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/what-is-azure-pipelines?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/what-is-azure-pipelines?view=azure-devops).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Pipelines, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Create CI/CD pipelines (YAML-based) to execute various tasks, such as building
    the solution, running automated tests, and, subsequently, deploying the solution.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage deployments to different environments. You can also implement gated checks
    and approvals.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s review how you can organize your test cases using Azure Test Plans.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Test Plans
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Testing is a very important step within an SDLC. There are different types
    of testing activities, such as functional testing (manual or automated), performance
    testing, user acceptance testing, and exploratory testing. Azure Test Plans allows
    you to create execution plans for any specific iteration or release, by including
    the applicable tests and tracking the results of the execution. Reports from executing
    a test plan can easily be created and inferred by the stakeholders to assess the
    quality of the software product or service under evaluation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Capabilities in Azure Test Plans ](img/B18655_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Capabilities in Azure Test Plans
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read more about Azure Test Plans here: [https://docs.microsoft.com/en-us/azure/devops/test/overview?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/overview?view=azure-devops).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Test Plans, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Create execution plans for various types of testing activities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintain traceability between test cases, defects, and product backlog items.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyze the test reports using the charts and widgets that are available out
    of the box.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will review how your team can leverage Azure Artifacts
    as a store for all reusable code components.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Artifacts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure Artifacts allows developers to manage different types of reusable packages
    for their solution development needs. These packages can be for internal use only
    or distributed externally. Essentially, it serves as a repository of packages,
    such as publicly available registries.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read more about Azure Artifacts here: [https://docs.microsoft.com/en-us/azure/devops/artifacts/start-using-azure-artifacts?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/artifacts/start-using-azure-artifacts?view=azure-devops).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Artifacts, you can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Publish packages to a central private repository. The supported package types
    are NuGet, npm, Maven, Python, and Universal Packages.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consume and share the packages for reuse and reference in other solution components.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s look at the GitHub offering from Microsoft.
  prefs: []
  type: TYPE_NORMAL
- en: GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GitHub was acquired by Microsoft around June 2018\. In its initial years, GitHub
    was a very popular code repository among the developer community as a code-sharing
    platform for open source projects. However, since its acquisition, it has added
    a variety of features to make it even more popular among developers to build and
    share code, as well as expanding on its enterprise usage footprint by offering
    a variety of other features.
  prefs: []
  type: TYPE_NORMAL
- en: 'GitHub is another very popular tool for implementing your DevOps practices.
    The main features that are available in the product are shown in the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.7 – Features available on GitHub ](img/B18655_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – Features available on GitHub
  prefs: []
  type: TYPE_NORMAL
- en: You can explore these features in more detail at https://github.com/features.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the list of features is constantly evolving (you can refer to the public
    roadmap here: [https://github.com/github/roadmap](https://github.com/github/roadmap)),
    please refer to the product documentation for more up-to-date information at any
    point in time.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look at **Azure DevTest Labs**, which allows you
    to quickly provision non-production type environments to verify whether your solutions
    work.
  prefs: []
  type: TYPE_NORMAL
- en: Azure DevTest Labs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a service offering from Microsoft Azure that allows developers to quickly
    create development and test environments using reusable templates and artifacts
    that have been published. You can find more information at [https://azure.microsoft.com/en-in/services/devtest-lab/](https://azure.microsoft.com/en-in/services/devtest-lab/).
  prefs: []
  type: TYPE_NORMAL
- en: 'While the service is available for free, it still requires developers to have
    access to a paid Azure subscription. However, the usage of the provisioned Azure
    resources will be charged at a highly discounted rate, as per their applicable
    pricing plans. You can refer to the pricing-related details here: [https://azure.microsoft.com/en-in/pricing/details/devtest-lab/](https://azure.microsoft.com/en-in/pricing/details/devtest-lab/).'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will take a look at the monitoring tools available in
    Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Azure Monitor** provides rich dashboarding capabilities to help you monitor
    application-specific metrics, resource health, and utilization to detect anomalies
    and provide timely intervention. It’s a comprehensive service that allows you
    to collect, analyze, and act on the ingested monitoring data from a variety of
    sources, including applications, infrastructure, and other custom sources.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some key features of Azure Monitor that you must plan to use are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Log Analytics** for digging into the monitoring data and deriving deep insights'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application Insights** for end-to-end transaction traceability, exceptions,
    and performance metrics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Container Insights** for microservices usage and health-related statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Custom dashboards** that are tailored to the use cases to track usage and
    reliability metrics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alerts** to detect anomalies and notify teams about the appropriate action,
    as well as executing automated [actions](https://azure.microsoft.com/en-us/services/monitor/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[To learn more about Azure Monitor, please](https://azure.microsoft.com/en-us/services/monitor/)
    go to [https://azure.microsoft.com/en-us/services/monitor/](https://azure.microsoft.com/en-us/services/monitor/).'
  prefs: []
  type: TYPE_NORMAL
- en: The monitoring data from a variety of sources can be broken down into two parts,
    namely **logs** and **metrics**. They are separate big data stores within the
    Azure Monitor service.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor is comprised of a suite of products and services that offer the
    desired monitoring and dashboarding capabilities. In the following subsections,
    we will review three of the most commonly used services – that is, Azure Monitor
    Logs, Azure Monitor Metrics, and Application Insights.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor Logs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Generic log and performance data from a variety of sources can be collected
    and consolidated into a single workspace in Azure Monitor Logs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Refer here for more information: [https://docs.microsoft.com/en-in/azure/azure-monitor/logs/data-platform-logs](https://docs.microsoft.com/en-in/azure/azure-monitor/logs/data-platform-logs).'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor Metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a feature of Azure Monitor that captures numeric data from a variety
    of sources into a **time series database**. These values correspond to samples
    that have been collected at regular intervals for a list of metrics that have
    been captured from the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Refer here for more information: [https://docs.microsoft.com/en-in/azure/azure-monitor/essentials/data-platform-metrics](https://docs.microsoft.com/en-in/azure/azure-monitor/essentials/data-platform-metrics).'
  prefs: []
  type: TYPE_NORMAL
- en: Application Insights
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can bake in support for rich telemetry capture in all your applications
    using Azure Application Insights. Use the logs to derive insights and detect performance
    issues, diagnose common errors, visualize an HTTP request using its end-to-end
    transaction flow, and collect metrics to derive various other metrics.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can learn more about Azure Application Insights here: [https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview).'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will review Visual Studio Code, a popular tool among
    developers.
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visual Studio Code is a free code editor from Microsoft that allows you to quickly
    develop, build, deploy, and test your modern cloud applications. It can be used
    on Windows, Linux, and macOS. It has built-in support for a wide range of programming
    languages. It also has a community of widgets and plugins that will immensely
    improve your productivity.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a developer, you must try out Visual Studio Code. To find out more,
    please go to [https://code.visualstudio.com/](https://code.visualstudio.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we reviewed a few of the important tools that can be used for
    your DevOps life cycle needs. We shall elaborate on the specific usage of these
    tools in the upcoming chapters via examples and hands-on labs. Whether you are
    a developer or an IT administrator (Ops), you will find usage of one or more of
    these tools in your day-to-day work.
  prefs: []
  type: TYPE_NORMAL
- en: With a continued focus on building automated workflows, a greater adoption of
    these tools will be beneficial for your organization to accomplish its DevOps
    objectives, as tracked through various metrics. Research indicates that enterprises
    that have transitioned into a DevOps-based delivery model have been more successful
    than their competitors in executing their various digital transformation initiatives.
  prefs: []
  type: TYPE_NORMAL
- en: Hence, it is imperative to understand that use of technology also plays a critical
    role in moving the needle on the DevOps maturity index. Adopting Azure DevOps
    and GitHub in your enterprise will not only activate greater productivity and
    potential of your teams, but also bolster your chances to become a top performer
    as a DevOps adopter.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we shall explore the importance of having the right DevOps
    practices in place for your API platform life cycle processes.
  prefs: []
  type: TYPE_NORMAL
- en: Self-practice exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Make use of the concepts presented in this chapter to complete the following
    activities:'
  prefs: []
  type: TYPE_NORMAL
- en: Sign up for GitHub using your email at [https://github.com/](https://github.com/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a free Azure account by going to https://azure.microsoft.com/en-us/free/.
    The account creation step will require you to sign up using an existing Microsoft
    account (or a GitHub credential).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a free Azure DevOps organization by going to https://azure.microsoft.com/en-us/services/devops/?nav=min.
    This will create an organization for you within the Azure DevOps directory.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter’s material. You will find the answers in the *Assessments*
    section of the Appendix:'
  prefs: []
  type: TYPE_NORMAL
- en: 'True or false: You need an enterprise user account to create an Azure DevOps
    project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True or false: You can visualize and track your team’s work using Azure Boards.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True or false: Azure Application Insights provides performance metrics such
    as response times for all the applications that are integrated with it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True or false: You can use GitHub repositories within Azure Pipelines.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True or false: GitHub is only used as an open source code repository.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enterprise DevOps report: https://azure.microsoft.com/en-us/resources/enterprise-devops-report-20202021/'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Agile: https://docs.microsoft.com/en-us/devops/plan/what-is-agile'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scrum: [https://docs.microsoft.com/en-us/devops/plan/what-is-scrum](https://docs.microsoft.com/en-us/devops/plan/what-is-scrum)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kanban: https://docs.microsoft.com/en-us/devops/plan/what-is-kanban'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub: [https://docs.github.com/en](https://docs.github.com/en)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ansible: [https://docs.ansible.com/](https://docs.ansible.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Terraform: [https://www.terraform.io/docs](https://www.terraform.io/docs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chef and Puppet: [https://www.chef.io/puppet](https://www.chef.io/puppet)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part 2 – Getting to Continuous Delivery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will learn about source control, continuous integration, and
    continuous deployment practices. Most organizations start with these DevOps practices
    first, as it allows you to produce quality solutions in the most effective and
    predictable way continuously.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part of the book comprises the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18655_04.xhtml#_idTextAnchor069), *Everything Starts with Source
    Control*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18655_05.xhtml#_idTextAnchor177), *Moving to Continuous Integration*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18655_06.xhtml#_idTextAnchor330), *Implementing Continuous Deployment
    and Release Management*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
