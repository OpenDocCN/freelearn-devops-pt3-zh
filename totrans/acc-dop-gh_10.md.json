["```\non:\n```", "```\n  release:\n```", "```\n    types: [created]\n```", "```\n  build:\n```", "```\n    runs-on: ubuntu-latest\n```", "```\n    steps:\n```", "```\n      - uses: actions/checkout@v2\n```", "```\n      - uses: actions/setup-node@v2\n```", "```\n        with:\n```", "```\n          node-version: 12\n```", "```\n      - run: npm ci\n```", "```\n      - run: npm test\n```", "```\n  publish-gpr:\n```", "```\n    needs: build\n```", "```\n    runs-on: ubuntu-latest\n```", "```\n    permissions:\n```", "```\n      packages: write\n```", "```\n      contents: read\n```", "```\n    steps:\n```", "```\n      - uses: actions/checkout@v2\n```", "```\n      - uses: actions/setup-node@v2\n```", "```\n        with:\n```", "```\n          node-version: 12\n```", "```\n          registry-url: https://npm.pkg.github.com/\n```", "```\n      - run: npm ci\n```", "```\n      - run: npm publish\n```", "```\n        env:\n```", "```\n          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}\n```", "```\n- name: 'Change NPM version'\n```", "```\n  uses: reedyuk/npm-version@1.1.1\n```", "```\n  with:\n```", "```\n    version: ${{github.event.release.tag_name}}\n```", "```\n    steps:\n```", "```\n      - uses: actions/checkout@v2\n```", "```\n        with: \n```", "```\n          fetch-depth: 0\n```", "```\n      - name: Install GitVersion\n```", "```\n        uses: gittools/actions/gitversion/setup@v0.9.7\n```", "```\n        with:\n```", "```\n          versionSpec: '5.x'\n```", "```\n      - name: Determine Version\n```", "```\n        id:   gitversion\n```", "```\n        uses: gittools/actions/gitversion/execute@v0.9.7\n```", "```\n  - name: Display GitVersion outputs\n```", "```\n    run: |\n```", "```\n      echo \"Major: ${{ steps.gitversion.outputs.major }}\"\n```", "```\non:\n```", "```\n  push: \n```", "```\n    tags:\n```", "```\n      - 'v*'\n```", "```\n    branches:\n```", "```\n      - 'release/*'\n```", "```\n    FROM alpine\n    CMD [\"echo\", \"Hello World!\"]\n    ```", "```\n$ docker build -t container-demo \n```", "```\n$ docker run --rm container-demo\n```", "```\n    name: Publish Docker image\n    on:\n      release:\n        types: [published]\n    ```", "```\nenv:\n  REGISTRY: ghcr.io\n  IMAGE_NAME: ${{ github.repository }}\n```", "```\njobs:\n  build-and-push-image:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n      packages: write\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n```", "```\n- name: Log in to the Container registry\n  uses: docker/login-action@v1.10.0\n  with:\n    registry: ${{ env.REGISTRY }}\n    username: ${{ github.actor }}\n    password: ${{ secrets.GITHUB_TOKEN }}\n```", "```\n- name: Extract metadata (tags, labels)\n  id: meta\n  uses: docker/metadata-action@v3.5.0\n  with:\n    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n```", "```\n- name: Build and push Docker image\n  uses: docker/build-push-action@v2.7.0\n  with:\n    context: .\n    push: true\n    tags: ${{ steps.meta.outputs.tags }}\n    labels: ${{ steps.meta.outputs.labels }}\n```", "```\n    $ docker pull ghcr.io/<user>/container-demo:latest\n    $ docker run --rm ghcr.io/<user>/container-demo:latest\n    > Hello World!\n    ```", "```\n<distributionManagement>\n```", "```\n  <repository>\n```", "```\n    <id>github</id>\n```", "```\n    <name>GitHub Packages</name>\n```", "```\n    <url>https://maven.pkg.github.com/user/repo</url>\n```", "```\n  </repository>\n```", "```\n</distributionManagement>\n```", "```\n- name: Publish package\n```", "```\n  run: mvn --batch-mode deploy\n```", "```\n  env:\n```", "```\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```", "```\nrepositories {\n```", "```\n  maven {\n```", "```\n    name = \"GitHubPackages\"\n```", "```\n    url = \"https://maven.pkg.github.com/user/repo\"\n```", "```\n    credentials {\n```", "```\n      username = System.getenv(\"GITHUB_ACTOR\")\n```", "```\n      password = System.getenv(\"GITHUB_TOKEN\")\n```", "```\n    }\n```", "```\n  }\n```", "```\n}\n```", "```\n- name: Publish package\n```", "```\n  run: gradle publish\n```", "```\n  env:\n```", "```\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```", "```\n- name: Build and publish gems got .gemspec files\n```", "```\n  uses: jstastny/publish-gem-to-github@master\n```", "```\n  with:\n```", "```\n    token: ${{ secrets.GITHUB_TOKEN }}\n```", "```\n    owner: OWNER\n```", "```\n---\n```", "```\n:backtrace: false\n```", "```\n:bulk_threshold: 1000\n```", "```\n:sources:\n```", "```\n- https://rubygems.org/\n```", "```\n- https://USERNAME:TOKEN@rubygems.pkg.github.com/OWNER/\n```", "```\n:update_sources: true\n```", "```\n:verbose: true  \n```", "```\n$ bundle config \\\n```", "```\nhttps://rubygems.pkg.github.com/OWNER \\\n```", "```\nUSERNAME:TOKEN\n```", "```\n- uses: actions/setup-dotnet@v1\n```", "```\n  with:\n```", "```\n    dotnet-version: '5.0.x'\n```", "```\n    source-url: https://nuget.pkg.github.com/OWNER/index.json\n```", "```\n  env:\n```", "```\n    NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}\n```", "```\n- run: |\n```", "```\n  dotnet pack --configuration Release\n```", "```\n  dotnet nuget push \"bin/Release/*.nupkg\"\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n```", "```\n<configuration>\n```", "```\n    <packageSources>\n```", "```\n        <add key=\"github\" value=\"https://nuget.pkg.github.com/OWNER/index.json\" />\n```", "```\n    </packageSources>\n```", "```\n    <packageSourceCredentials>\n```", "```\n        <github>\n```", "```\n            <add key=\"Username\" value=\"USERNAME\" />\n```", "```\n            <add key=\"ClearTextPassword\" value=\"TOKEN\" />\n```", "```\n        </github>\n```", "```\n    </packageSourceCredentials>\n```", "```\n</configuration>\n```"]