- en: <st c="0">7</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">7</st>
- en: <st c="2">Building Secure and Compliant Products</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">构建安全和合规的产品</st>
- en: <st c="40">In the digital age, cyber crimes are on the rise.</st> <st c="91">While
    not every organization will have the hard compliance requirements of a bank or
    a government agency, the security standards and best practices for those highly
    regulated environments can and should be generalized to your platform.</st> <st
    c="327">Security at every layer of an organization helps to prevent a security
    breach down</st> <st c="410">the line.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40">在数字化时代，网络犯罪日益增多。</st> <st c="91">虽然并非每个组织都有银行或政府机构那样严格的合规要求，但那些高度监管环境的安全标准和最佳实践可以并应该被推广到你的平台。</st>
    <st c="327">每一层次的安全性都能帮助防止安全漏洞的发生，</st> <st c="410">从而减少风险。</st>
- en: <st c="419">By the end of this chapter, you should have gained a better understanding
    of security standards, frameworks, and trends.</st> <st c="541">This includes
    tips for understanding and</st> <st c="582">leveraging a</st> **<st c="595">Software
    Bill of Materials</st>** <st c="621">(</st>**<st c="623">SBOM</st>**<st c="627">),
    understanding open source projects for platform security, and understanding policy
    engine technologies (with examples and use cases).</st> <st c="765">You should
    be able to use these learnings to define the right actions to secure your platform
    without limiting your capabilities and ensure the app delivery process will provide
    hardened and secure</st> <st c="963">software/container packages.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="419">在本章结束时，你应该能更好地理解安全标准、框架和趋势。</st> <st c="541">这包括理解和</st> <st c="582">利用</st>
    **<st c="595">软件材料清单</st>** <st c="621">(</st>**<st c="623">SBOM</st>**<st c="627">)，了解开源项目如何提升平台安全，以及理解策略引擎技术（包含示例和用例）。</st>
    <st c="765">你应该能够利用这些学习，定义正确的行动来保障平台安全，同时不限制你的功能，并确保应用交付过程提供加固且安全的</st> <st c="963">软件/容器包。</st>
- en: <st c="991">As such, we will cover the following main topics in</st> <st c="1044">the
    chapter:</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="991">因此，本章将涵盖以下主要内容：</st>
- en: <st c="1056">Reconciling security to the left and</st> <st c="1094">Zero Trust</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1056">调和安全左移与</st> <st c="1094">零信任</st>
- en: <st c="1104">Understanding platform security – how to build a secure yet flexible
    and</st> <st c="1178">open system</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1104">理解平台安全——如何构建既安全又灵活和</st> <st c="1178">开放的系统</st>
- en: <st c="1189">Looking at</st> <st c="1201">SBOM practices</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1189">查看</st> <st c="1201">SBOM 实践</st>
- en: <st c="1215">Understanding pipeline security – what you have to consider to
    secure your</st> **<st c="1291">continuous integration/continuous delivery</st>**
    <st c="1333">(</st>**<st c="1335">CI/CD</st>**<st c="1340">) pipelines</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1215">理解流水线安全——你需要考虑的事项，以确保你的</st> **<st c="1291">持续集成/持续交付</st>** <st
    c="1333">(</st>**<st c="1335">CI/CD</st>**<st c="1340">) 流水线</st>
- en: <st c="1352">Understanding application security – setting and</st> <st c="1402">enforcing
    policies</st>
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1352">理解应用安全——制定并</st> <st c="1402">执行策略</st>
- en: '**<st c="1420">Free and open source software</st>** <st c="1450">(</st>**<st
    c="1452">FOSS</st>**<st c="1456">) for platform security and how to</st> <st c="1492">use
    it</st>'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1420">自由和开源软件</st>** <st c="1450">(</st>**<st c="1452">FOSS</st>**<st
    c="1456">) 在平台安全中的应用以及如何</st> <st c="1492">使用它</st>'
- en: <st c="1498">Reconciling security to the left and Zero Trust</st>
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1498">调和安全左移与零信任</st>
- en: '**<st c="1546">Security to the left</st>** <st c="1567">and</st> **<st c="1572">Zero
    Trust</st>** <st c="1582">are the</st> <st c="1590">buzzwords du jour in cybersecurity.</st>
    <st c="1627">These</st> <st c="1633">buzzwords – or buzz phrases if you will–most
    certainly will fade into obscurity, but the practices they represent will continue
    to be best practices for years</st> <st c="1792">to come.</st>'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="1546">安全左移</st>** <st c="1567">和</st> **<st c="1572">零信任</st>** <st
    c="1582">是当前网络安全领域的</st> <st c="1590">流行术语。</st> <st c="1627">这些术语——或者说是流行短语——无疑会逐渐消失，但它们所代表的实践将在未来几年继续作为最佳实践。</st>'
- en: '*<st c="1800">Security to the left</st>* <st c="1821">looks at the process
    of building and delivering software as a linear flowchart that reads left to right.</st>
    <st c="1927">That chart would look something</st> <st c="1959">like this:</st>'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="1800">安全左移</st>* <st c="1821">将构建和交付软件的过程视为一个从左到右的线性流程图。</st> <st c="1927">该流程图可能会像这样：</st>'
- en: '![Figure 7.1: Simple app development workflow](img/Figure_7.1.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1: 简单的应用程序开发工作流](img/Figure_7.1.jpg)'
- en: '<st c="1997">Figure 7.1: Simple app development workflow</st>'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="1997">图 7.1: 简单的应用程序开发工作流</st>'
- en: <st c="2040">In this very simplified example, a developer writes code that is
    then placed in source control and ultimately comes out as an application for consumption
    by users.</st> <st c="2205">Looking at this security workflow on the right side,
    at the application layer itself, is important but too late.</st> <st c="2318">There
    are already three other obvious places where a lack of security can create vulnerabilities
    that could</st> <st c="2426">be exploited.</st>
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2040">在这个简化的示例中，开发人员编写代码，代码随后被放入源代码管理，最终作为应用程序供用户使用。</st> <st c="2205">查看右侧的这个安全工作流程，尤其是在应用层面本身，虽然重要，但为时已晚。</st>
    <st c="2318">已经有三个明显的地方，缺乏安全性可能会造成漏洞，这些漏洞可能</st> <st c="2426">被利用。</st>
- en: <st c="2439">Solving security at the personnel level is the essence of security
    to the left, but that’s not where security ends; it’s just where it begins.</st>
    <st c="2583">Security must be centered at every step along the flowchart so that
    when we get to more realistic examples, we can see how security needs to expand
    with</st> <st c="2736">the footprint:</st>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2439">在人员层面解决安全问题是向左安全的核心，但这并不是安全的终点；它只是安全的起点。</st> <st c="2583">安全必须贯穿于流程图的每个步骤，以便当我们进入更现实的示例时，能够看到安全如何随</st>
    <st c="2736">业务范围的扩展而扩展：</st>
- en: '![Figure 7.2: Expanded development and delivery workflow](img/Figure_7.2.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2：扩展的开发和交付工作流程](img/Figure_7.2.jpg)'
- en: '<st c="2904">Figure 7.2: Expanded development and delivery workflow</st>'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2904">图 7.2：扩展的开发和交付工作流程</st>
- en: <st c="2958">In the preceding</st> <st c="2975">diagram, you can already see
    some common security best practices implemented at the point where users are trying
    to interact with the application and its supporting infrastructure.</st> <st c="3157">However,
    security at the dev team and open source dependencies’ levels, within source control,
    with CI/CD, and on the application, itself is not addressed.</st> <st c="3313">Even
    storage for keys and secrets, while representing a best practice, also needs security
    applied to the accessing of those passwords.</st> <st c="3449">Security to the
    left helps you develop your security story from the beginning of the product life
    cycle through to the delivery of the completed application to the end users.</st>
    <st c="3624">In platform engineering, this can create a feeling of dissonance
    between the most secure platform and the platform that achieves perfect self-service.</st>
    <st c="3775">Since the platform needs to support developer self-service, then
    the platform owning the full security story starts to run counter to the flexibility
    that accompanies self-service.</st> <st c="3956">It can, therefore, impose enough
    restrictions for it to feel like a high barrier to entry and thus jeopardize the
    adoption of the platform and</st> <st c="4099">developer happiness.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2958">在前面的</st> <st c="2975">图中，你已经可以看到在用户尝试与应用程序及其支持基础设施互动时，实施的一些常见安全最佳实践。</st>
    <st c="3157">然而，开发团队和开源依赖项层面的安全性，源代码管理中的安全性，CI/CD中的安全性，以及应用程序本身的安全性并未被解决。</st>
    <st c="3313">即便是密钥和机密的存储，虽然代表着一种最佳实践，也需要对访问这些密码的过程应用安全措施。</st> <st c="3449">向左的安全帮助你从产品生命周期的开始，到将完成的应用程序交付给最终用户的全过程中构建安全故事。</st>
    <st c="3624">在平台工程中，这可能会在最安全的平台和实现完美自助服务的平台之间产生不和谐感。</st> <st c="3775">由于平台需要支持开发人员的自助服务，因此平台完全拥有安全故事的做法开始与自助服务所带来的灵活性相冲突。</st>
    <st c="3956">因此，它可能会施加足够的限制，使得平台显得有很高的准入门槛，从而危及平台的采纳以及</st> <st c="4099">开发人员的幸福感。</st>
- en: <st c="4119">In days past,</st> *<st c="4134">Trust but Verify</st>* <st c="4150">would
    have been the security model to solve this.</st> <st c="4201">The meaning is self-explanatory.</st>
    <st c="4234">You trust the developers have done everything necessary to maintain
    the desired security posture for the application, but at the platform team, you
    don’t own the security posture end to end.</st> <st c="4425">That platform would
    verify to the best of its ability that all the right things have been done without
    intruding</st> <st c="4538">on self-service.</st>
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4119">在过去，</st> *<st c="4134">信任，但要验证</st>* <st c="4150">将是解决这个问题的安全模型。</st>
    <st c="4201">其含义不言自明。</st> <st c="4234">你信任开发人员已经做了所有必要的工作，以维持应用程序所需的安全态势，但在平台团队那边，你并不拥有端到端的安全控制。</st>
    <st c="4425">该平台会尽最大努力验证所有正确的措施已经到位，而不会干扰</st> <st c="4538">自助服务。</st>
- en: <st c="4554">These days, security best practices have shifted, and</st> *<st
    c="4609">Zero Trust</st>* <st c="4619">is the name of the game.</st> <st c="4645">Zero
    Trust</st> <st c="4656">essentially assumes everyone is a bad actor (whether or
    not that’s intentional is irrelevant).</st> <st c="4751">To maintain this security
    posture, the platform needs to conform to best practices, but it cannot take on
    the responsibility of the application.</st> <st c="4896">In other words, the platform
    needs to provide all the scaffolding to the dev team and the stakeholders to support
    a secure and compliant product.</st> <st c="5042">For example, if the Python language
    is needed, then a secured Python binary, either internally secured or from a trusted
    vendor, could be supplied within an image registry accessible to all users and
    applications of the platform.</st> <st c="5272">Using Python-Slim from the Docker
    registry is also a more secure choice and more readily available.</st> <st c="5372">The
    Slim image is probably fine for most use cases.</st> <st c="5424">From there,
    a reasonable and self-service attentive restriction would be to deny workloads
    that don’t use images from a known safe source.</st> <st c="5563">A check in the
    CI pipeline can handle this.</st> <st c="5607">Pushing the check as far left as
    possible saves everyone time and also avoids spending compute processing a change
    that isn’t conformant to the security posture.</st> <st c="5769">However, adding
    a check in that part can be a little painful as it involves writing a job to scan,
    analyze, and then reach a decision based on the contents of all Dockerfiles in
    the repository.</st> <st c="5963">Those could be nested within sub-directories,
    and while it’s not the most impossible challenge, it can be painful.</st> <st
    c="6078">Additionally, writing this type of functionality into CI pipelines should
    be considered out of the scope of the average</st> <st c="6198">platform team.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4554">如今，安全最佳实践发生了变化，</st> *<st c="4609">零信任</st>* <st c="4619">成为了主流。</st>
    <st c="4645">零信任</st> <st c="4656">本质上假设每个人都是恶意行为者（无论是否故意都不重要）。</st> <st c="4751">为了保持这种安全姿态，平台需要遵循最佳实践，但它不能承担应用程序的责任。</st>
    <st c="4896">换句话说，平台需要为开发团队和利益相关者提供所有必要的支撑，以支持一个安全且合规的产品。</st> <st c="5042">例如，如果需要使用Python语言，那么可以在镜像注册表中提供一个经过安全处理的Python二进制文件，无论是内部加固的，还是来自受信任的供应商，所有平台的用户和应用程序都可以访问。</st>
    <st c="5272">使用来自Docker注册表的Python-Slim镜像也是一个更安全的选择，并且更容易获得。</st> <st c="5372">对于大多数使用场景，Slim镜像应该是足够的。</st>
    <st c="5424">从这里出发，一个合理且自服务的限制是拒绝那些不使用已知安全来源镜像的工作负载。</st> <st c="5563">在CI管道中可以处理这个检查。</st>
    <st c="5607">尽可能将检查推到最左边可以节省每个人的时间，同时也避免了在不符合安全姿态的更改上浪费计算资源。</st> <st c="5769">然而，在这一部分添加检查可能会有点痛苦，因为它需要编写一个作业来扫描、分析，然后根据存储库中所有Dockerfile的内容做出决策。</st>
    <st c="5963">这些文件可能嵌套在子目录中，虽然这不是不可能完成的挑战，但确实可能比较麻烦。</st> <st c="6078">此外，将这种功能写入CI管道应该被视为超出普通</st>
    <st c="6198">平台团队的职责范围。</st>
- en: <st c="6212">From the platform perspective, an alternative approach would be
    to use policy engines and admission webhooks to reject any Pod definition that
    doesn’t leverage a trusted image source.</st> <st c="6397">This isn’t as far left
    as the ideal, and hopefully, the development team and the processes they follow
    prevent cases where this would be necessary, but in Zero Trust environments, this
    policy would act as a last fail-safe to ensure only the correct software is being
    promoted to production environments.</st> <st c="6701">It could be deemed reasonable
    that images from more public sources are acceptable for prototyping within the
    IDP, and therefore, the fail-safe is only necessary for production environments.</st>
    <st c="6891">This allows the platform to continue to act in service to the team
    and not unnecessarily</st> <st c="6980">impede them.</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6212">从平台的角度来看，另一种方法是使用策略引擎和准入Webhook来拒绝任何未使用受信任镜像源的Pod定义。</st> <st c="6397">这虽然没有达到理想的最左边，但希望开发团队及其遵循的流程能够避免这种情况的发生。然而，在零信任环境中，这项政策将作为最后的防护措施，确保只有正确的软件被推广到生产环境。</st>
    <st c="6701">可以认为，来自更多公共来源的镜像对于IDP中的原型设计是可接受的，因此，防护措施仅对生产环境是必要的。</st> <st c="6891">这使得平台可以继续为团队服务，而不会不必要地</st>
    <st c="6980">妨碍他们。</st>
- en: <st c="6992">Another example would be to only accept commits into a GitHub repository
    if the commit is signed.</st> <st c="7091">The signature identifies that the author
    and the code hasn’t been tampered with since the signature was applied.</st> <st
    c="7204">This can be enforced via webhooks on a GitHub repository, although how
    much influence the platform team has over GitHub organizations for any company
    may be limited; the security team (if present) will likely require this.</st>
    <st c="7427">And while it’s a good example of</st> <st c="7460">Zero Trust and
    security to the left working together, it’s again most likely out of the scope
    of the</st> <st c="7561">platform team.</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6992">另一个例子是，只有当提交被签名时，才能接受将提交推送到GitHub仓库。</st> <st c="7091">签名表明作者及代码自签名后未被篡改。</st>
    <st c="7204">这可以通过GitHub仓库中的webhooks来强制执行，尽管平台团队对任何公司的GitHub组织的影响力可能有限；如果有的话，安全团队可能会要求此项操作。</st>
    <st c="7427">尽管这是“零信任”与左移安全性共同作用的一个很好的例子，但这很可能超出了</st> <st c="7460">平台团队的范围。</st>
- en: <st c="7575">However much these phrases may sound like empty aphorisms, teams
    fail if they ignore the fundamental principles they represent.</st> <st c="7704">Security
    done right is one of the best investments a company can make.</st> <st c="7775">Shifting
    security left means testing it early and testing</st> <st c="7833">it often.</st>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7575">虽然这些短语听起来像是空洞的格言，但如果团队忽视它们所代表的基本原则，就会失败。</st> <st c="7704">做得好的安全性是公司可以做出的最佳投资之一。</st>
    <st c="7775">将安全性左移意味着尽早进行测试并频繁地进行测试。</st>
- en: <st c="7842">Every major security breach and vulnerability could have been caught
    with testing.</st> <st c="7926">There are various types of testing, including
    some specifically executed by security professionals, but regardless of whether
    it’s penetration testing or just basic negative testing in your quality engineering
    process, security and compliance should be tested regularly to guarantee there
    are no unexpected surface areas.</st> <st c="8248">This could look like using
    software in unexpected ways, or simply validating that the permissions settings
    for roles within the organization</st> <st c="8389">are correct.</st>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7842">每一个重大的安全漏洞和风险都可以通过测试被发现。</st> <st c="7926">有各种类型的测试，包括一些由安全专业人员执行的测试，但无论是渗透测试还是仅仅是质量工程过程中的基础负面测试，都应该定期测试安全性和合规性，以确保没有意外的表面区域。</st>
    <st c="8248">这可能表现为以意外的方式使用软件，或者仅仅是验证组织内角色的权限设置</st> <st c="8389">是否正确。</st>
- en: <st c="8401">Now that we’ve introduced the concepts of security to the left
    and Trust but Verify, let’s look at how to build a system that is both secure</st>
    <st c="8543">and flexib</st><st c="8553">le.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8401">现在我们已经介绍了左移安全性和“信任但验证”这两个概念，接下来让我们看看如何构建一个既安全又灵活的系统</st> <st c="8543">和灵活的系统。</st>
- en: <st c="8557">Understanding platform security – how to build a secure yet flexible
    and open system</st>
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="8557">理解平台安全性——如何构建一个既安全又灵活、开放的系统</st>
- en: <st c="8642">The platform isn’t the</st> <st c="8665">totality of an organization’s
    security posture; rather, it’s part of an equation.</st> <st c="8748">When assessing
    how to integrate cybersecurity or DevSecOps into the platform, a balance must
    be stuck.</st> <st c="8851">Pushing security to the left helps to reduce the efforts
    the platform team needs to exert, but a clear and defined scope helps everyone
    to understand their part of the</st> <st c="9019">security st</st><st c="9030">ory.</st>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8642">平台并不是组织安全态势的全部；它只是方程式的一部分。</st> <st c="8665">在评估如何将网络安全或DevSecOps集成到平台时，必须保持平衡。</st>
    <st c="8748">将安全性左移有助于减少平台团队需要投入的努力，但明确和清晰的安全范围有助于每个人理解自己在</st> <st c="9019">安全故事</st><st
    c="9030">中的角色。</st>
- en: <st c="9035">Breaking down the problem into consumable chunks</st>
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="9035">将问题拆解成可消化的小块</st>
- en: <st c="9084">Security and flexibility can also feel like two words that stand
    diametrically opposed.</st> <st c="9173">Good security is inherently inflexible;
    however, it’s possible and necessary for an IDP’s success to balance both.</st>
    <st c="9288">How do we achieve this?</st> <st c="9312">Step one</st> <st c="9321">is</st>
    **<st c="9324">scope security</st>**<st c="9338">.</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9084">安全性和灵活性也可能让人觉得是两个完全对立的词。</st> <st c="9173">良好的安全性本质上是僵化的；然而，对于IDP（身份验证平台）的成功来说，平衡这两者是可能且必要的。</st>
    <st c="9288">我们如何实现这一点呢？</st> <st c="9312">第一步</st> <st c="9321">是</st> **<st
    c="9324">定义安全范围</st>**<st c="9338">。</st>
- en: <st c="9339">The first part of scoping is to understand what the minimum level
    of security is that’s required.</st> <st c="9438">Obviously, we should always
    do more than the bare minimum, so if you want to understand what a maximum level
    would look like, it’s not the worst idea, but it may artificially increase the
    scope and cause you to be unable to see the forest for the trees.</st> <st c="9692">Therefore,
    it’s our recommendation to start with a narrow focus.</st> <st c="9757">Once you
    know what the minimum level of security is that the platform must enforce, then
    you start looking at what the minimum level of security is that the platform</st>
    <st c="9923">must support.</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9339">范围界定的第一步是了解所需的最低安全水平。</st> <st c="9438">显然，我们总是应该做得比最低要求更多，因此，如果你想了解最高安全水平可能是什么样的，虽然这不是一个坏主意，但它可能会人为地增加范围，使你无法看到整体的全貌。</st>
    <st c="9692">因此，我们建议从一个狭窄的重点开始。</st> <st c="9757">一旦你知道平台必须执行的最低安全级别后，就可以开始考虑平台</st>
    <st c="9923">必须支持的最低安全级别。</st>
- en: <st c="9936">When you go down the path of security, it’s very easy to quickly
    realize how dangerous the world of the internet is and overcorrect.</st> <st c="10070">These
    overcorrections can increase cognitive load and create a barrier to entry for
    using a platform.</st> <st c="10172">If a good developer is lazy, then the platform
    will need to help them to be lazy, not introduce additional layers of complexity.</st>
    <st c="10301">It’s for this reason that while the platform cannot own the entire
    cybersecurity posture of an organization, it plays a pivotal role in said posture.</st>
    <st c="10451">Security is good; security theater</st> <st c="10486">is not.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9936">当你走上安全这条道路时，很容易迅速意识到互联网世界有多么危险，从而产生过度修正。</st> <st c="10070">这些过度修正可能会增加认知负担，并为使用平台设置进入障碍。</st>
    <st c="10172">如果一个优秀的开发人员懒惰，那么平台应当帮助他们懒惰，而不是引入额外的复杂性。</st> <st c="10301">正因为如此，尽管平台不能承担组织整个网络安全姿态的责任，但它在这一姿态中扮演着至关重要的角色。</st>
    <st c="10451">安全是好的；但安全表演</st> <st c="10486">却不是。</st>
- en: <st c="10493">Knowing how much is too much and how much is just right is a skill
    that gets honed over time, and there’s nothing to cleanly say when a security
    measure is too much or just right.</st> <st c="10674">The answer will always be:</st>
    *<st c="10701">It depends</st>*<st c="10711">. For example, securing an environment
    so that it is not accessible to the public internet may impede the ability of
    people working on a project to work from home, but if that project involves space
    shuttles or nuclear reactors, then the air-gapped environment is correct, and
    not</st> <st c="10992">an overcorrection.</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10493">了解多少是过多，多少是恰到好处，是一种随着时间推移而不断磨练的技能，并且在什么时候一个安全措施过多或恰到好处，没有明确的界限。</st>
    <st c="10674">答案永远是：</st> *<st c="10701">视情况而定</st>*<st c="10711">。例如，确保一个环境不对公共互联网开放，可能会妨碍项目人员在家办公，但如果这个项目涉及航天飞机或核反应堆，那么这种“空气隔离”环境是正确的，而不是</st>
    <st c="10992">过度修正。</st>
- en: <st c="11010">Many security experts have spent years researching security and
    defining solid definitions of what it means to be secure and compliant.</st> <st
    c="11147">The</st> **<st c="11151">National Institute of Standards and Technology</st>**
    <st c="11197">(</st>**<st c="11199">NIST</st>**<st c="11203">) division</st> <st
    c="11214">of the US Department of Commerce is built up of such experts who regularly
    publish new standards and update pre-existing standards as the</st> <st c="11353">industry
    evolves.</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11010">许多安全专家花费了多年时间研究安全，并定义了什么是安全和合规的明确标准。</st> <st c="11147">美国</st>
    **<st c="11151">国家标准与技术研究院</st>** <st c="11197">(</st>**<st c="11199">NIST</st>**<st
    c="11203">) 是美国商务部下属的一个部门，汇聚了这样的专家，他们定期发布新的标准并随着</st> <st c="11353">行业的发展更新现有标准。</st>
- en: <st c="11370">It’s worth understanding the work of these organizations to help
    guide you in developing your</st> <st c="11465">understanding of how security
    and a flexible</st> **<st c="11510">Internal Developer</st>** **<st c="11528">Platform</st>**
    <st c="11537">(</st>**<st c="11539">IDP</st>**<st c="11542">) intersect.</st>
    <st c="11556">Since these agencies typically publish standards for companies that
    work with the government, it’s worth noting that their publications are intended
    for a specific type of audience and do not replace talking to a cybersecurity
    expert with experience in your</st> <st c="11814">specific indu</st><st c="11827">stry.</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11370">了解这些组织的工作有助于你在发展对安全性和灵活的</st> **<st c="11510">内部开发者</st>** **<st
    c="11528">平台</st>** <st c="11537">(</st>**<st c="11539">IDP</st>**<st c="11542">)
    交集的理解。</st> <st c="11556">由于这些机构通常发布针对与政府合作的公司的标准，值得注意的是，它们的出版物是针对特定类型的受众，并不能替代与在你</st>
    <st c="11814">特定行业</st><st c="11827">中有经验的网络安全专家的交流。</st>
- en: <st c="11833">Addressing the OWASP 10</st>
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="11833">解决OWASP十大安全问题</st>
- en: <st c="11857">If you’re still not sure</st> <st c="11882">where to start, another
    organization has published guidelines that make a great starting point for scoping
    security.</st> <st c="12000">The</st> **<st c="12004">Open Worldwide Application
    Security Project</st>** <st c="12047">(</st>**<st c="12049">OWASP</st>**<st c="12054">)
    (</st>[<st c="12058">owasp.org</st>](http://owasp.org)<st c="12068">) is a</st>
    <st c="12076">non-profit foundation focused on cybersecurity.</st> <st c="12124">As
    a respected group of security experts, their</st> *<st c="12172">Top Ten</st>*
    <st c="12179">list has become a guiding beacon for anticipating and preventing
    security issues within software.</st> <st c="12278">Every so often, they</st>
    <st c="12298">re-publish this list, and as of the 2021 publication, this is their</st>
    <st c="12367">current list:</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11857">如果你仍然不确定从哪里开始，另一个组织发布了可以作为界定安全范围的极好起点的指南。</st> <st c="12000">这个</st>
    **<st c="12004">开放全球应用安全项目</st>** <st c="12047">(</st>**<st c="12049">OWASP</st>**<st
    c="12054">)（</st>[<st c="12058">owasp.org</st>](http://owasp.org)<st c="12068">）是一个</st>
    <st c="12076">专注于网络安全的非盈利组织。</st> <st c="12124">作为一个受人尊敬的安全专家团体，他们的</st> *<st
    c="12172">十大安全问题</st>* <st c="12179">列表已成为预见并防止软件安全问题的重要指南。</st> <st c="12278">他们会定期重新发布此列表，2021年出版的版本就是他们的</st>
    <st c="12367">当前列表：</st>
- en: '*<st c="12380">A01:2021</st>*<st c="12389">–</st>*<st c="12391">Broken</st>*
    *<st c="12398">Access Control</st>*'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12380">A01:2021</st>*<st c="12389">–</st>*<st c="12391">访问控制</st>*
    *<st c="12398">破坏</st>*'
- en: '*<st c="12412">A02:2021</st>*<st c="12421">–</st>*<st c="12423">Cryptographic
    Failures</st>*'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12412">A02:2021</st>*<st c="12421">–</st>*<st c="12423">加密失败</st>*'
- en: '*<st c="12445">A03:2021</st>*<st c="12454">–</st>*<st c="12456">Injection</st>*'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12445">A03:2021</st>*<st c="12454">–</st>*<st c="12456">注入攻击</st>*'
- en: '*<st c="12465">A04:2021</st>*<st c="12474">–</st>*<st c="12476">Insecure Design</st>*'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12465">A04:2021</st>*<st c="12474">–</st>*<st c="12476">不安全的设计</st>*'
- en: '*<st c="12491">A05:2021</st>*<st c="12500">–</st>*<st c="12502">Security Misconfiguration</st>*'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12491">A05:2021</st>*<st c="12500">–</st>*<st c="12502">安全配置错误</st>*'
- en: '*<st c="12527">A06:2021</st>*<st c="12536">–</st>*<st c="12538">Vulnerable
    and</st>* *<st c="12553">Outdated Components</st>*'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12527">A06:2021</st>*<st c="12536">–</st>*<st c="12538">脆弱和</st>* *<st
    c="12553">过时的组件</st>*'
- en: '*<st c="12572">A07:2021</st>*<st c="12581">–</st>*<st c="12583">Identification
    and</st>* *<st c="12602">Authentication Failures</st>*'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12572">A07:2021</st>*<st c="12581">–</st>*<st c="12583">身份识别和</st>*
    *<st c="12602">认证失败</st>*'
- en: '*<st c="12625">A08:2021</st>*<st c="12634">–</st>*<st c="12636">Software and
    Data</st>* *<st c="12654">Integrity Failures</st>*'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12625">A08:2021</st>*<st c="12634">–</st>*<st c="12636">软件和数据</st>*
    *<st c="12654">完整性失败</st>*'
- en: '*<st c="12672">A09:2021</st>*<st c="12681">–</st>*<st c="12683">Security Logging
    and</st>* *<st c="12704">Monitoring Failures</st>*'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12672">A09:2021</st>*<st c="12681">–</st>*<st c="12683">安全日志记录和</st>*
    *<st c="12704">监控失败</st>*'
- en: '*<st c="12723">A10:2021</st>*<st c="12732">–</st>*<st c="12734">Server-Side
    Request</st>* *<st c="12754">Forgery (SSRF)</st>*'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12723">A10:2021</st>*<st c="12732">–</st>*<st c="12734">服务器端请求</st>*
    *<st c="12754">伪造（SSRF）</st>*'
- en: <st c="12768">OWASP went a little further and also introduced a Kubernetes-specific</st>
    *<st c="12839">Top Ten</st>* <st c="12846">list as</st> <st c="12855">of 2022:</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12768">OWASP更进一步，2022年还推出了针对Kubernetes的</st> *<st c="12839">十大安全问题</st>*
    <st c="12846">列表：</st>
- en: '*<st c="12863">K01</st>*<st c="12867">:</st> *<st c="12870">Insecure</st>*
    *<st c="12879">Workload Configurations</st>*'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12863">K01</st>*<st c="12867">:</st> *<st c="12870">不安全的</st>* *<st
    c="12879">工作负载配置</st>*'
- en: '*<st c="12902">K02</st>*<st c="12906">:</st> *<st c="12909">Supply</st>* *<st
    c="12916">Chain Vulnerabilities</st>*'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12902">K02</st>*<st c="12906">:</st> *<st c="12909">供应链漏洞</st>* '
- en: '*<st c="12937">K03</st>*<st c="12941">:</st> *<st c="12944">Overly Permissive</st>*
    *<st c="12962">RBAC Configurations</st>*'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12937">K03</st>*<st c="12941">:</st> *<st c="12944">过于宽松的</st>* *<st
    c="12962">RBAC 配置</st>*'
- en: '*<st c="12981">K04</st>*<st c="12985">:</st> *<st c="12988">Lack of Centralized</st>*
    *<st c="13008">Policy Enforcement</st>*'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="12981">K04</st>*<st c="12985">:</st> *<st c="12988">缺乏集中式</st>* *<st
    c="13008">策略执行</st>*'
- en: '*<st c="13026">K05</st>*<st c="13030">:</st> *<st c="13033">Inadequate Logging</st>*
    *<st c="13052">and Monitoring</st>*'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13026">K05</st>*<st c="13030">:</st> *<st c="13033">日志记录不足</st>* *<st
    c="13052">与监控</st>*'
- en: '*<st c="13066">K06</st>*<st c="13070">:</st> *<st c="13073">Broken</st>* *<st
    c="13080">Authentication Mechanisms</st>*'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13066">K06</st>*<st c="13070">:</st> *<st c="13073">破损的</st>* *<st
    c="13080">认证机制</st>*'
- en: '*<st c="13105">K07</st>*<st c="13109">:</st> *<st c="13112">Missing Network</st>*
    *<st c="13128">Segmentation Controls</st>*'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13105">K07</st>*<st c="13109">:</st> *<st c="13112">缺失的网络</st>* *<st
    c="13128">分段控制</st>*'
- en: '*<st c="13149">K08</st>*<st c="13153">:</st> *<st c="13156">Secrets</st>* *<st
    c="13164">Management Failures</st>*'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13149">K08</st>*<st c="13153">:</st> *<st c="13156">机密管理失败</st>*'
- en: '*<st c="13183">K09</st>*<st c="13187">:</st> *<st c="13190">Misconfigured</st>*
    *<st c="13204">Cluster Components</st>*'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13183">K09</st>*<st c="13187">:</st> *<st c="13190">配置错误的</st>* *<st
    c="13204">集群组件</st>*'
- en: '*<st c="13222">K10</st>*<st c="13226">:</st> *<st c="13229">Outdated and Vulnerable</st>*
    *<st c="13253">Kubernetes Components</st>*'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*<st c="13222">K10</st>*<st c="13226">:</st> *<st c="13229">过时和易受攻击的</st>*
    *<st c="13253">Kubernetes 组件</st>*'
- en: <st c="13274">The lists by and</st> <st c="13292">large match up, but both apply
    to a Kubernetes-based IDP.</st> <st c="13350">Instead of taking these lists as
    comprehensive guides to create a security posture, these should be considered
    bare-minimum items to address in the security posture of the IDP but still represent
    a comprehensive start to your</st> <st c="13576">scoping project.</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13274">这些列表大致匹配，但都适用于基于 Kubernetes 的身份提供平台（IDP）。</st> <st c="13292">这些列表不应被视为全面的安全姿态指南，而应被认为是
    IDP 安全姿态中需要解决的最基本事项，但仍然是启动你的</st> <st c="13576">范围项目</st>的一个全面起点。
- en: <st c="13592">Implementing threat modeling</st>
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="13592">实施威胁建模</st>
- en: <st c="13621">After you scope security, step two</st> <st c="13656">is</st>
    **<st c="13660">threat modeling</st>**<st c="13675">. A threat model is a representation
    of everything that can impact the security of your application or, in this case,
    platform.</st> <st c="13803">Performing threat modeling is an excellent example
    of how to arrive at the correct conclusions for the security posture of an organization.</st>
    <st c="13943">You can use these</st> *<st c="13961">Top Ten</st>* <st c="13968">lists
    to guide your conversations around threat modeling.</st> <st c="14027">According
    to the authors of the</st> <st c="14058">Threat Modeling Manifesto (</st>[<st
    c="14086">threatmodelingmanifesto.org</st>](http://threatmodelingmanifesto.org)<st
    c="14114">), a threat model should answer the following</st> <st c="14161">four
    questions:</st>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13621">在你定义安全范围后，第二步</st> <st c="13656">是</st> **<st c="13660">威胁建模</st>**<st
    c="13675">。威胁模型是对可能影响你的应用程序或在本案例中平台安全的所有因素的表示。</st> <st c="13803">执行威胁建模是如何得出正确结论的一个典范，这对于组织的安全姿态至关重要。</st>
    <st c="13943">你可以使用这些</st> *<st c="13961">十大</st>* <st c="13968">列表来引导你关于威胁建模的讨论。</st>
    <st c="14027">根据</st> <st c="14058">《威胁建模宣言》（</st>[<st c="14086">threatmodelingmanifesto.org</st>](http://threatmodelingmanifesto.org)<st
    c="14114">）的作者，威胁模型应当回答以下</st> <st c="14161">四个问题：</st>
- en: <st c="14176">What are we</st> <st c="14189">working on?</st>
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="14176">我们正在</st> <st c="14189">做什么？</st>
- en: <st c="14200">What can</st> <st c="14210">go wrong?</st>
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="14200">可能会</st> <st c="14210">出什么问题？</st>
- en: <st c="14219">What are we going to do</st> <st c="14244">about it?</st>
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="14219">我们将如何处理</st> <st c="14244">这个问题？</st>
- en: <st c="14253">Did we do a good</st> <st c="14271">enough job?</st>
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="14253">我们做得够好</st> <st c="14271">吗？</st>
- en: <st c="14282">For example, you can start with:</st> *<st c="14316">We’re working
    on the way users authenticate to the IDP</st>*<st c="14370">. Then, follow that
    with</st> *<st c="14395">What can go wrong with overly permissive RBAC configurations?</st>*
    <st c="14456">and work through each of these</st> *<st c="14488">Top Ten</st>*
    <st c="14495">items in the Kubernetes list.</st> <st c="14526">These questions
    are deceptively simple, but the surface area quickly expands as question two (</st>*<st
    c="14620">What can go wrong?</st>*<st c="14639">) and question one (</st>*<st
    c="14660">What are we working on?</st>*<st c="14684">) are a many-to-one ratio,
    as is the same for question three (</st>*<st c="14747">What are we going to do
    about it?</st>*<st c="14781">) compared to question four.</st> <st c="14811">In
    any case, where the answer to</st> *<st c="14844">Did we do a good enough job?</st>*
    <st c="14872">isn’t a decisive yes, then the loop of questions should be repeated.</st>
    <st c="14942">A successful threat model and response plan is conducted in a collaborative
    way with all stakeholders of the</st> <st c="15051">platform involved.</st>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14282">例如，你可以从以下开始：</st> *<st c="14316">我们正在研究用户如何向IDP进行身份验证</st>*<st
    c="14370">。然后，接着讨论</st> *<st c="14395">过于宽松的RBAC配置可能会出什么问题？</st>* <st c="14456">并逐一处理Kubernetes列表中的每个</st>
    *<st c="14488">前十名</st>* <st c="14495">项目。</st> <st c="14526">这些问题看似简单，但随着第二个问题（</st>*<st
    c="14620">可能会出什么问题？</st>*<st c="14639">）和第一个问题（</st>*<st c="14660">我们在做什么？</st>*<st
    c="14684">）的比例是多对一的，第三个问题（</st>*<st c="14747">我们要如何解决？</st>*<st c="14781">）与第四个问题也有类似的关系。</st>
    <st c="14811">无论如何，如果</st> *<st c="14844">我们做得够好吗？</st>* <st c="14872">的答案不是一个决定性的“是”，那么这些问题的循环应该继续。</st>
    <st c="14942">成功的威胁模型和应对计划是通过与所有</st> <st c="15051">平台利益相关者的协作进行的。</st>
- en: <st c="15069">This collaboration on security is one of the most important strategies
    to successfully center security without sacrificing usability, the ability to
    accept contributions, or self-service.</st> <st c="15258">It is also through a
    collaborative threat modeling process that sociotechnical risks to security can
    be addressed.</st> <st c="15373">Security to the left doesn’t just mean as far
    as the developer’s computer, but the developer themselves.</st> <st c="15478">Ensure
    they’re taking appropriate precautions, are aware of how bad actors try to manipulate
    situations to steal credentials, and are generally following best practices–such
    as not leaving a company laptop in a car from where it cou</st><st c="15710">ld</st>
    <st c="15714">be stolen.</st>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15069">这种在安全方面的协作是成功将安全置于中心的一项重要策略，且不牺牲可用性、接受贡献的能力或自助服务。</st> <st c="15258">正是通过协作的威胁建模过程，可以解决安全方面的社会技术风险。</st>
    <st c="15373">“安全向左”不仅意味着到达开发者的电脑，甚至包括开发者本人。</st> <st c="15478">确保他们采取适当的预防措施，了解恶意行为者如何试图操控情况以窃取凭证，并且通常遵循最佳实践——例如，不要将公司笔记本电脑留在车里，以免被盗。</st>
- en: <st c="15724">Common security standards and frameworks</st>
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="15724">常见的安全标准和框架</st>
- en: <st c="15765">Navigating the world of security standards starts with trying
    to demystify a language of acronyms.</st> <st c="15865">The goal isn’t to become
    a security expert overnight but to instead know what the level of security you
    need is and ensure the platform does everything necessary to conform to that security.</st>
    <st c="16056">An easy way to approach this problem is to look at the industry
    your company serves and what security frameworks are relevant.</st> <st c="16183">A
    hospital or large medical group in the US, for example, would need</st> <st c="16252">to
    follow</st> **<st c="16262">Health Insurance Portability and Accountability Act</st>**
    <st c="16313">(</st>**<st c="16315">HIPAA</st>**<st c="16320">) compliance.</st>
    <st c="16335">As such, any vendor to a similar organization regardless of locale
    would need to be able to conform to the same.</st> <st c="16448">By understanding
    the end customers and the needs of the development team, a platform team can determine
    what level of security and compliance is required beyond standard</st> <st c="16618">best
    practices.</st>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15765">进入安全标准的世界，首先需要尝试弄清楚一系列缩略语的含义。</st> <st c="15865">目标并不是一夜之间成为安全专家，而是了解自己所需的安全级别，并确保平台做出一切必要措施来符合该安全标准。</st>
    <st c="16056">解决这个问题的一个简单方法是，查看你所在公司所服务的行业以及相关的安全框架。</st> <st c="16183">例如，美国的医院或大型医疗集团需要</st>
    <st c="16252">遵守</st> **<st c="16262">健康保险流动性与责任法案</st>** <st c="16313">(</st>**<st
    c="16315">HIPAA</st>**<st c="16320">)合规性要求。</st> <st c="16335">因此，任何与类似机构合作的供应商，无论其所在地如何，都需要能够遵守相同的标准。</st>
    <st c="16448">通过了解最终用户和开发团队的需求，平台团队可以确定超越标准最佳实践之外所需的安全性和合规性级别。</st>
- en: <st c="16633">Let’s do a quick overview of some security standards.</st> <st
    c="16688">This is by no means an exhaustive list but addresses some of the more</st>
    <st c="16758">common standards:</st>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16633">让我们快速概述一些安全标准。</st> <st c="16688">这并不是一个详尽无遗的列表，但涵盖了一些更常见的标准：</st>
    <st c="16758">常见标准：</st>
- en: '| **<st c="16775">Standard</st>** | **<st c="16784">Locale</st>** | **<st c="16791">Levels</st>**
    | **<st c="16798">Description</st>** | **<st c="16810">Notes</st>** |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="16775">标准</st>** | **<st c="16784">地区</st>** | **<st c="16791">级别</st>**
    | **<st c="16798">描述</st>** | **<st c="16810">备注</st>** |'
- en: '| **<st c="16816">PCI DSS</st>** | <st c="16824">International</st> | <st c="16838">1-4</st>
    | **<st c="16842">Payment Card Industry Data Security Standard</st>**<st c="16887">.
    Defines security</st> <st c="16906">and compliance.</st> <st c="16922">Applicable
    to any company that processes, transmits, or stores credit card information.</st>
    <st c="17010">Levels are based on</st> <st c="17030">transaction</st> <st c="17041">volume.</st>
    | <st c="17049">Created</st> <st c="17058">by credit card brands, not</st> <st
    c="17085">the government.</st> |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="16816">PCI DSS</st>** | <st c="16824">国际</st> | <st c="16838">1-4</st>
    | **<st c="16842">支付卡行业数据安全标准</st>**<st c="16887">。定义了安全性和合规性要求。</st> <st c="16922">适用于任何处理、传输或存储信用卡信息的公司。</st>
    <st c="17010">级别基于</st> <st c="17030">交易</st> <st c="17041">量。</st> | <st c="17049">由信用卡品牌创建，而非</st>
    <st c="17085">政府机构。</st> |'
- en: '| **<st c="17100">DPDPA</st>** | <st c="17106">India</st> | <st c="17112">N/A</st>
    | **<st c="17116">Digital Personal Data Protection Act</st>**<st c="17153">. Defines
    how</st> <st c="17166">personal data can</st> <st c="17185">be processed.</st>
    | <st c="17198">The government of India passed this in 2023, and</st> <st c="17247">while
    it’s comparable</st> <st c="17269">to the</st> **<st c="17277">General Data Protection
    Regulation</st>** <st c="17311">(</st>**<st c="17313">GDPR</st>**<st c="17317">),
    it also has</st> <st c="17333">notable differences.</st> |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="17100">DPDPA</st>** | <st c="17106">印度</st> | <st c="17112">不适用</st>
    | **<st c="17116">数字个人数据保护法</st>**<st c="17153">。定义了个人数据的处理方式。</st> | <st c="17198">印度政府在2023年通过了该法案，虽然它与</st>
    **<st c="17277">通用数据保护条例</st>** <st c="17311">(</st>**<st c="17313">GDPR</st>**<st
    c="17317">)相似，但也有显著的差异。</st> |'
- en: '| **<st c="17353">FedRAMP</st>** | <st c="17361">US</st> | <st c="17364">Moderate,</st>
    <st c="17375">High</st> | **<st c="17379">Federal Risk and Authorization Management
    Program</st>**<st c="17429">. Defines the security</st> <st c="17452">and compliance
    required to provide software and services to the</st> <st c="17516">federal government.</st>
    | <st c="17535">US</st> <st c="17539">federal government; different from</st>
    <st c="17574">state government.</st> |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="17353">FedRAMP</st>** | <st c="17361">美国</st> | <st c="17364">中等，</st>
    <st c="17375">高</st> | **<st c="17379">联邦风险与授权管理程序</st>**<st c="17429">。定义了提供软件和服务给</st>
    <st c="17452">联邦政府所需的安全性</st> <st c="17516">和合规性。</st> | <st c="17535">美国</st>
    <st c="17539">联邦政府；与</st> <st c="17574">州政府不同。</st> |'
- en: '| **<st c="17591">HIPAA</st>** | <st c="17597">US</st> | <st c="17600">N/A</st>
    | **<st c="17604">Health Insurance Portability and</st>** **<st c="17638">Accountability
    Act</st>**<st c="17656">.</st> | <st c="17657">A</st> <st c="17660">standard set
    in the</st> <st c="17680">90s, it’s had to evolve</st> <st c="17704">with technology.</st>
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="17591">HIPAA</st>** | <st c="17597">美国</st> | <st c="17600">N/A</st>
    | **<st c="17604">健康保险可携带性与责任法案</st>** **<st c="17638">。</st>** | <st c="17657">这是</st>
    <st c="17660">90年代设定的标准，随着技术的发展，必须不断演变</st> <st c="17704">以适应新需求。</st> |'
- en: '| **<st c="17720">DGA</st>** | **<st c="17724">European</st>** **<st c="17734">Union</st>**
    <st c="17739">(</st>**<st c="17741">EU</st>**<st c="17743">)</st> | <st c="17745">N/A</st>
    | **<st c="17748">Data Governance Act</st>**<st c="17768">. Defines the</st> <st
    c="17781">policy of the EU for data use</st> <st c="17812">and sharing.</st> |
    <st c="17824">Applies</st> <st c="17832">to the context of public sector data
    and data altruism and what can and cannot be shared.</st> <st c="17923">Fills
    gaps in the</st> <st c="17941">GDPR standard.</st> |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="17720">DGA</st>** | **<st c="17724">欧洲</st>** **<st c="17734">联盟</st>**
    <st c="17739">(</st>**<st c="17741">欧盟</st>**<st c="17743">)</st> | <st c="17745">N/A</st>
    | **<st c="17748">数据治理法案</st>**<st c="17768">。定义了</st> <st c="17781">欧盟在数据使用</st>
    <st c="17812">和共享方面的政策。</st> | <st c="17824">适用于</st> <st c="17832">公共部门数据和数据利他主义的背景，以及什么可以共享，什么不能共享。</st>
    <st c="17923">填补了</st> <st c="17941">GDPR标准中的空白。</st> |'
- en: '| **<st c="17955">GDPR</st>** | <st c="17960">EU</st> | <st c="17963">N/A</st>
    | <st c="17967">How</st> <st c="17972">personal data can and cannot</st> <st c="18001">be
    used.</st> | <st c="18009">This</st> <st c="18014">was a historic move and radically
    changed data</st> <st c="18062">handling globally.</st> |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| **<st c="17955">GDPR</st>** | <st c="17960">欧盟</st> | <st c="17963">N/A</st>
    | <st c="17967">个人数据如何使用</st> <st c="17972">以及如何不使用。</st> | <st c="18009">这是一次历史性的举措，彻底改变了全球的数据</st>
    <st c="18062">处理方式。</st> |'
- en: '<st c="18080">Table 7.1: Security and compliance frameworks explained</st>'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18080">表7.1：安全性与合规性框架说明</st>
- en: <st c="18136">Although the frameworks differ a little and they seek to accomplish
    different things, at their core, they are the same.</st> <st c="18257">Data captured
    and stored by an application must be secured while in motion and at rest, and
    it must only end up in expected places that can be accessed by expected users.</st>
    <st c="18428">This is accomplished partially with RBAC, but RBAC alone will not
    save you.</st> <st c="18504">Security standards such as PCI DSS include a physical
    inspection of hardware, servers, and access to those physical devices and their
    housing in order for compliance to be certified.</st> <st c="18687">Compliance
    and security are typically coupled but are actually distinct.</st> <st c="18760">A
    system can be secured but not compliant and vice versa.</st> <st c="18818">While
    we won’t go into those differences here, as they’re outside of the scope of an
    IDP by itself, it’s important to understand that security is more than just ticking
    boxes on a list.</st> <st c="19004">Those boxes should help inform how far threat
    modeling work must sprawl through the system and how you develop the role of the
    platform in any</st> <st c="19147">regulated industry.</st>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18136">虽然这些框架有所不同，并且它们旨在实现不同的目标，但从核心上讲，它们是相同的。</st> <st c="18257">由应用程序捕获和存储的数据必须在传输过程中和静止时都得到保护，并且它必须仅进入预期的位置，只有预期的用户可以访问。</st>
    <st c="18428">这一点部分通过RBAC实现，但仅靠RBAC不足以保障安全。</st> <st c="18504">诸如PCI DSS这样的安全标准包括对硬件、服务器及其物理设备和存放位置的实际检查，才能获得合规认证。</st>
    <st c="18687">合规性和安全性通常是紧密相关的，但实际上是不同的。</st> <st c="18760">一个系统可以是安全的，但不合规，反之亦然。</st>
    <st c="18818">尽管我们在此不会深入讨论这些差异，因为它们超出了IDP本身的范围，但了解安全性不仅仅是勾选清单上的框是非常重要的。</st> <st
    c="19004">这些框应该有助于指导威胁建模的工作应在系统中扩展到何种程度，以及你如何在任何</st> <st c="19147">受监管行业中开发平台的角色。</st>
- en: <st c="19166">Asset protection</st>
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="19166">资产保护</st>
- en: <st c="19183">Sticking to the paradigm of the</st> <st c="19215">digital space,
    the asset we’ll discuss is your service’s data.</st> <st c="19279">Most security
    and compliance regulations focus on the handling of data.</st> <st c="19351">You
    should take this to mean that data is the most valuable asset the average organization
    has, and it should be valued</st> <st c="19471">as such.</st>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19183">坚持数字空间的范式，我们讨论的资产是你服务的数据库。</st> <st c="19279">大多数安全性和合规性法规关注数据处理。</st>
    <st c="19351">你应当理解为，数据是普通组织最有价值的资产，应该被</st> <st c="19471">珍视。</st>
- en: '<st c="19479">Your data has three states: it is either in motion, in use, or
    at rest.</st> <st c="19552">As such, the security for it must address all states.</st>
    <st c="19606">Since the data lives on the platform, it’s the responsibility of
    the platform to own this part of the security posture.</st> <st c="19726">It’s
    a rare product where the data doesn’t need to be secured with the utmost care,
    so it’s very difficult to go too far in</st> <st c="19850">securing data.</st>'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19479">你的数据有三种状态：它要么在传输中，要么在使用中，要么处于静止状态。</st> <st c="19552">因此，针对它的安全性必须涵盖所有状态。</st>
    <st c="19606">由于数据存储在平台上，所以平台有责任确保这一部分的安全性。</st> <st c="19726">这是一个极少数不需要极高安全保护的数据产品，因此，确保数据安全几乎不可能过度。</st>
- en: <st c="19864">Securing data at rest</st>
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="19864">静态数据保护</st>
- en: <st c="19886">Your data will</st> <st c="19902">spend the majority of the time
    at rest.</st> <st c="19942">Data design and overall database security require
    very specific attention and regular review, but the high-level concepts for data
    at rest</st> <st c="20080">fall into the</st> <st c="20095">following categories:</st>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19886">你的数据将</st> <st c="19902">大部分时间处于静止状态。</st> <st c="19942">数据设计和整体数据库安全需要非常具体的关注和定期审查，但静态数据的高级概念</st>
    <st c="20080">归属于</st> <st c="20095">以下几个类别：</st>
- en: <st c="20116">Classification</st>
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20116">分类</st>
- en: <st c="20131">What type of data is it, and what information does</st> <st c="20183">it
    contain?</st>
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20131">这是什么类型的数据，它包含了什么信息？</st>
- en: <st c="20194">How important</st> <st c="20209">is it?</st>
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20194">它有多重要？</st> <st c="20209">重要性如何？</st>
- en: <st c="20215">Physical isolation of data based on regulatory needs or</st> <st
    c="20272">business weight</st>
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20215">根据监管需求或</st> <st c="20272">业务重要性进行数据的物理隔离</st>
- en: <st c="20287">How the data interacts with the system can</st> <st c="20331">inform
    classification</st>
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20287">数据如何与系统交互可以</st> <st c="20331">为分类提供信息</st>
- en: <st c="20352">Encryption</st>
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20352">加密</st>
- en: <st c="20363">Encryption at every layer, both the physical and</st> <st c="20413">the
    digital</st>
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20363">每一层的加密，包括物理层和</st> <st c="20413">数字层</st>
- en: <st c="20424">Salts</st> <st c="20431">and hashes</st>
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20424">盐值</st> <st c="20431">和哈希</st>
- en: <st c="20441">Not just for encryption but also</st> <st c="20475">for compression</st>
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20441">不仅仅是加密，</st> <st c="20475">还有压缩</st>
- en: <st c="20490">Not great if you want data</st> <st c="20518">kept human-readable</st>
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20490">如果你希望数据</st> <st c="20518">保持人类可读性，这就不太理想</st>
- en: <st c="20537">Can expand hugely in memory and could create</st> <st c="20583">an
    accidental</st> **<st c="20597">distributed denial of</st>** **<st c="20619">service</st>**
    <st c="20626">(</st>**<st c="20628">DDOS</st>**<st c="20632">)</st>
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20537">在内存中可能会大幅扩展，并可能创建</st> <st c="20583">一个意外的</st> **<st c="20597">分布式拒绝服务</st>**
    **<st c="20619">攻击</st>** <st c="20626">(</st>**<st c="20628">DDOS</st>**<st c="20632">)</st>
- en: <st c="20634">Restricted access</st>
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20634">限制访问</st>
- en: <st c="20651">Can be adjusted based on</st> <st c="20677">the classification</st>
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20651">可以根据</st> <st c="20677">分类进行调整</st>
- en: <st c="20695">Should have a formal review process,</st> <st c="20733">roles,
    responsibilities</st>
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20695">应该有正式的审查流程，</st> <st c="20733">角色与职责</st>
- en: <st c="20756">Redundant backups</st>
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20756">冗余备份</st>
- en: <st c="20774">Three is the magic number for high- and</st> <st c="20815">low-availability
    systems</st>
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20774">三是高可用和</st> <st c="20815">低可用系统的魔法数字</st>
- en: <st c="20839">The redundancy of data does not need to be uniform; policy design
    based on the cost of losing</st> <st c="20934">the data</st>
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20839">数据的冗余不需要完全一致；可以根据数据丢失的成本来设计策略</st> <st c="20934">数据</st>
- en: <st c="20942">Data</st> <st c="20948">retention policies</st>
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20942">数据</st> <st c="20948">保留政策</st>
- en: <st c="20966">How</st> <st c="20970">long do you really need it for?</st> <st
    c="21003">Are</st> <st c="21007">there any</st> <st c="21017">governing laws?</st>
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="20966">你</st> <st c="20970">到底需要它保存多久？</st> <st c="21003">是否有</st> <st
    c="21007">相关法律</st> <st c="21017">约束？</st>
- en: <st c="21032">What is the</st> **<st c="21045">chain of custody</st>** <st c="21061">on</st>
    <st c="21065">that</st> <st c="21070">decision?</st>
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21032">那</st> **<st c="21045">监管链</st>** <st c="21061">是什么</st> <st c="21065">关于</st>
    <st c="21070">那个</st> <st c="21079">决策的？</st>
- en: <st c="21079">Same as redundancy; no need for one policy for</st> <st c="21127">all
    data</st>
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21079">与冗余相同；不需要为</st> <st c="21127">所有数据制定统一政策</st>
- en: <st c="21135">Do you need it in the</st> <st c="21158">first place?</st>
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21135">你首先需要它吗？</st>
- en: <st c="21170">Challenge</st> <st c="21181">every piece:</st>
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21170">挑战</st> <st c="21181">每一部分：</st>
- en: <st c="21193">Bloat occurs when people assume data</st> <st c="21231">is necessary</st>
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21193">膨胀发生在当人们认为数据</st> <st c="21231">是必要的</st>
- en: <st c="21243">Uncertainty makes people ask for more than</st> <st c="21287">they
    need</st>
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21243">不确定性让人们要求比</st> <st c="21287">他们需要的更多</st>
- en: <st c="21296">Showing how data adds value and accountability and makes it easy
    to justify usage and</st> <st c="21383">cost later:</st>
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21296">展示数据如何增加价值和责任，并使得后续使用和</st> <st c="21383">成本合理化变得容易：</st>
- en: <st c="21394">Aggressively descope</st> <st c="21416">unjustified pieces</st>
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21394">积极地减少</st> <st c="21416">没有正当理由的部分</st>
- en: <st c="21434">Commit the history of how and why the system</st> <st c="21480">was
    made</st>
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21434">记录系统如何以及为什么被创建的历史</st> <st c="21480">过程</st>
- en: <st c="21488">Onboarding people</st> <st c="21507">becomes easy</st>
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21488">员工入职</st> <st c="21507">变得容易</st>
- en: <st c="21519">Answering questions about the system becomes easy, including</st>
    <st c="21581">unfair ones</st>
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21519">回答关于系统的问题变得容易，包括</st> <st c="21581">不公平的问题</st>
- en: <st c="21592">The bus number loses</st> <st c="21614">its importance</st>
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21592">公共汽车编号失去</st> <st c="21614">其重要性</st>
- en: <st c="21628">What is the business case to keep</st> <st c="21663">the data?</st>
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21628">保留</st> <st c="21663">这些数据的商业理由是什么？</st>
- en: <st c="21672">Does it</st> <st c="21681">make money?</st>
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21672">它会</st> <st c="21681">带来利润吗？</st>
- en: <st c="21692">Does it</st> <st c="21701">save money?</st>
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21692">这能</st> <st c="21701">节省资金吗？</st>
- en: <st c="21712">Will we learn</st> <st c="21727">from it?</st>
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21712">我们会从中</st> <st c="21727">学习吗？</st>
- en: <st c="21735">Is it the right thing</st> <st c="21758">to do?</st>
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21735">做这件事</st> <st c="21758">是正确的吗？</st>
- en: <st c="21764">What risks are we exposed to by</st> <st c="21797">keeping it?</st>
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21764">我们面临哪些风险</st> <st c="21797">如果我们保留它的话？</st>
- en: '<st c="21808">What is the operational use case?</st> <st c="21843">(e.g.: troubleshooting
    items, access logs,</st> <st c="21886">audit trails)</st>'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21808">操作使用案例是什么？</st> <st c="21843">(例如：故障排除项目、访问日志、</st> <st c="21886">审计跟踪)</st>
- en: <st c="21899">Hot</st> <st c="21904">and</st> <st c="21908">cold storage</st>
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21899">热</st> <st c="21904">存储</st> <st c="21908">和</st> <st c="21936">冷存储</st>
- en: <st c="21920">Hot</st> <st c="21924">storage is</st> <st c="21936">more</st>
    <st c="21941">readily available</st>
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21920">热</st> <st c="21924">存储更</st> <st c="21936">容易访问</st>
- en: <st c="21958">Needs</st> <st c="21965">access rules</st>
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21958">需要</st> <st c="21965">访问规则</st>
- en: <st c="21977">Cold storage is not</st> <st c="21997">readily available</st>
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="21977">冷存储则不</st> <st c="21997">那么容易访问</st>
- en: <st c="22015">Older data that doesn’t need frequent attention but is still important
    goes into</st> <st c="22097">cold storage</st>
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="22015">不需要频繁关注但仍然重要的旧数据进入</st> <st c="22097">冷存储</st>
- en: <st c="22109">Harder to access, typically gated by higher levels</st> <st c="22161">of
    pe</st><st c="22166">rmissions</st>
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="22109">更难访问，通常由更高级别的</st> <st c="22161">权限</st><st c="22166">控制</st>
- en: <st c="22176">Data sovereignty</st>
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="22176">数据主权</st>
- en: <st c="22193">Many</st> <st c="22199">countries are adopting data sovereignty</st>
    <st c="22238">laws, essentially mandating that data created by people within the
    boundaries of the country does not leave the physical boundary of the country
    where it was created.</st> <st c="22406">This does not always mean that data cannot
    be viewed (data in use) outside of the country but that the data storage must
    remain within the regional boundary.</st> <st c="22564">This addresses the data-at-rest
    compliance posture but not the</st> <st c="22627">securi</st><st c="22633">ty
    posture.</st>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22193">许多</st> <st c="22199">国家正在采纳数据主权</st> <st c="22238">法律，本质上规定在该国边界内由人们创建的数据不得离开该国的物理边界。</st>
    <st c="22406">这并不总是意味着数据不能在国外查看（使用中的数据），而是数据存储必须保持在区域边界内。</st> <st c="22564">这解决了静态数据合规性问题，但并没有解决</st>
    <st c="22627">安全性</st><st c="22633">问题。</st>
- en: <st c="22645">Securing data in motion</st>
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="22645">保障数据在传输中的安全</st>
- en: <st c="22669">When</st> <st c="22674">data is in motion, it is being transmitted
    between</st> <st c="22726">microservices, which means that it’s exposed to the
    networking of the platform and/or external endpoints.</st> <st c="22832">The data
    will need to be encrypted during transmission, but ultimately, the data needs
    to be used so that it will be unpacked by the receiving endpoint at</st> <st c="22987">some
    point:</st>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22669">当</st> <st c="22674">数据在传输过程中，它正被微服务之间传输，这意味着它暴露在平台的网络和/或外部端点中。</st>
    <st c="22832">数据在传输过程中需要加密，但最终，数据需要被使用，接收端点将在<st c="22987">某个时刻解压数据：</st>
- en: <st c="22998">Limit what data is stored in memory and for how long–this protects
    the platform health and the data (be smart about</st> <st c="23115">your caching)</st>
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="22998">限制存储在内存中的数据及其存储时间—这能保护平台的健康和数据安全（要聪明地管理</st> <st c="23115">缓存）</st>
- en: <st c="23128">Don’t transmit data on ports that are widely opened</st> <st c="23181">or
    privileged</st>
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23128">不要在广泛开放或特权的端口上传输数据</st>
- en: <st c="23194">Only log absolutely necessary information about the data transaction,
    not the transacted data itself (see</st> <st c="23301">log sanitization)</st>
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅记录数据交易中绝对必要的信息，而不是交易本身的数据（参见<st c="23301">日志清理</st>）
- en: <st c="23318">Protect against injection by</st> <st c="23348">sanitizing inputs</st>
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23318">通过</st> <st c="23348">清理输入</st> <st c="23365">来防止注入攻击</st>
- en: <st c="23365">Use networking security and best practices for cryptography to
    prevent</st> **<st c="23437">man-in-the-middle</st>** <st c="23454">(</st>**<st
    c="23456">MITM</st>**<st c="23460">) attacks</st> <st c="23470">and other k</st><st
    c="23482">inds</st> <st c="23488">of attacks</st>
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23365">使用网络安全和加密的最佳实践来防止</st> **<st c="23437">中间人</st>** <st c="23454">(</st>**<st
    c="23456">MITM</st>**<st c="23460">)攻击</st> <st c="23470">以及其他各种</st><st c="23482">类型</st>
    <st c="23488">的攻击</st>
- en: <st c="23498">Data in use</st>
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="23498">使用中的数据</st>
- en: '<st c="23510">Data in use is</st> <st c="23525">exactly what it sounds like:
    data that the system is viewing or</st> <st c="23589">changing.</st> <st c="23600">When
    already stored in use, it’s either being retrieved from storage or cached.</st>
    <st c="23680">It might be held in memory or be read directly leveraging various
    read and caching technologies.</st> <st c="23777">Data would also be in use when
    it is initially entering a system.</st> <st c="23843">This includes registering
    new users or storing a new log line.</st> <st c="23906">Oftentimes, data in this
    state may also be undergoing data transformation such as aggregations or sanitization
    operations that ensure the data can’t be used for an injection attack, or even
    deletion.</st> <st c="24106">Securing data in use is just another application
    of the same principles we use when data is in m</st><st c="24202">otion or</st>
    <st c="24212">at rest.</st>'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23510">使用中的数据</st> <st c="23525">正如其字面意思所示：系统正在查看或</st> <st c="23589">更改的数据。</st>
    <st c="23600">数据一旦存储并在使用中，它要么从存储中检索，要么被缓存。</st> <st c="23680">它可能保存在内存中，或者通过各种读取和缓存技术直接读取。</st>
    <st c="23777">数据在初次进入系统时也会处于使用状态。</st> <st c="23843">这包括注册新用户或存储新的日志行。</st> <st
    c="23906">通常，处于这种状态的数据也可能正在经历数据转换，如聚合或清理操作，以确保数据不能用于注入攻击，甚至可能被删除。</st> <st c="24106">保护使用中的数据，只是我们在数据传输或静止时所应用的相同原则的另一种体现。</st>
- en: <st c="24220">Securing your network</st>
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="24220">保护你的网络安全</st>
- en: <st c="24242">Kubernetes has a</st> <st c="24260">pluggable architecture, and
    while it ships without a networking stack, some Kubernetes platform options will
    have their own default.</st> <st c="24393">For</st> <st c="24396">example, OpenShift
    Container Platform adopted a default</st> **<st c="24453">Container Network Interface</st>**
    <st c="24480">(</st>**<st c="24482">CNI</st>**<st c="24485">) known as</st> **<st
    c="24497">Open Virtual Network</st>** <st c="24517">(</st>**<st c="24519">OVN</st>**<st
    c="24522">).</st> <st c="24526">Aside</st> <st c="24531">from OVN, there are other
    secure and more observable solutions for</st> <st c="24599">Kubernetes networking.</st>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24242">Kubernetes 具有可插拔架构，虽然它默认没有网络栈，但某些 Kubernetes 平台选项会有自己的默认设置。</st>
    <st c="24393">例如，OpenShift 容器平台采用了默认的</st> **<st c="24453">容器网络接口</st>** <st c="24480">(</st>**<st
    c="24482">CNI</st>**<st c="24485">)，并称其为</st> **<st c="24497">开放虚拟网络</st>** <st
    c="24517">(</st>**<st c="24519">OVN</st>**<st c="24522">)。</st> <st c="24526">除了
    OVN，还有其他更安全、可观察性更强的解决方案适用于</st> <st c="24599">Kubernetes 网络。</st>
- en: '**<st c="24621">Cilium</st>** <st c="24628">is an</st> <st c="24634">example
    of this more secure</st> <st c="24663">networking.</st> <st c="24675">It uses</st>
    **<st c="24683">eBPF</st>**<st c="24687">, which is a Linux kernel-level technology
    that allows kernel capabilities to be leveraged by programs running in a privileged
    context without needing changes to the kernel or a kernel module to be loaded.</st>
    <st c="24893">Cilium’s use of eBPF creates highly secure, observable, and performant
    networking for Kubernetes environments.</st> <st c="25004">Cilium brings those
    kernel-level capabilities into the Kubernetes network layer.</st> <st c="25085">The</st>
    <st c="25089">Cilium project website (</st>[<st c="25113">https://cilium.io/</st>](https://cilium.io/)<st
    c="25132">) is filled with hands-on tutorials and labs for gaining familiarity
    with the technology, and it is a</st> <st c="25235">property of the</st> **<st
    c="25251">Cloud Native Computing</st>** **<st c="25274">Foundation</st>** <st
    c="25284">(</st>**<st c="25286">CNCF</st>**<st c="25290">).</st>'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**'
- en: <st c="25293">In addition to the networking technology, the networking topology
    will play an important role in network security.</st> <st c="25409">Networking
    tools such as firewalls, VPNs, VLANs, routers, switches, and so on may not live
    on the Kubernetes cluster but play a very important part in the security of the
    cluster.</st> <st c="25589">Whatever the final network topology looks like and
    how the cluster interacts with the public internet (or maybe it doesn’t!), for
    proper threat modeling and compliance, you will need to be able to observe your
    network an</st><st c="25809">d document</st> <st c="25821">your network.</st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25293">除了网络技术外，网络拓扑在网络安全中也扮演着重要角色。</st> <st c="25409">像防火墙、VPN、VLAN、路由器、交换机等网络工具可能不会直接部署在
    Kubernetes 集群上，但它们在集群安全中起着非常重要的作用。</st> <st c="25589">无论最终的网络拓扑如何，集群如何与公共互联网交互（或者可能根本没有交互！），为了进行适当的威胁建模和合规性，你需要能够观察并</st><st
    c="25809">记录</st> <st c="25821">你的网络。</st>
- en: <st c="25834">Isolation between pre-production and production environments</st>
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="25834">预生产环境与生产环境之间的隔离</st>
- en: <st c="25895">A general best practice</st> <st c="25919">is that regardless
    of security and compliance needs, your system keeps production data and access
    isolated from other environments to ensure data is protected.</st> <st c="26080">Data
    is the most valuable asset most companies have, so the protection and isolation
    of data is the best way to secure the asset, guaranteeing adequate security and
    compliance for all companies.</st> <st c="26275">Data protection is at the heart
    of security and compliance.</st> <st c="26335">Production data should never leave
    a production environment, and access to that data must be rigorously gatekept
    to ensure no bad actors–internal, external, intentional, or accidental–can gain
    access to that production data.</st> <st c="26560">Let’s again reference our platform
    architecture from</st> [*<st c="26613">Chapter 2</st>*](B31164_02.xhtml#_idTextAnchor055)<st
    c="26622">:</st>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25895">一般的最佳实践</st> <st c="25919">是无论安全性和合规性需求如何，你的系统都应该将生产数据和访问权限与其他环境隔离，以确保数据受到保护。</st>
    <st c="26080">数据是大多数公司最有价值的资产，因此保护和隔离数据是确保资产安全的最佳方式，能够保证所有公司的安全性和合规性。</st> <st
    c="26275">数据保护是安全性和合规性的核心。</st> <st c="26335">生产数据绝不能离开生产环境，且必须严格控制对这些数据的访问，确保没有恶意行为者——无论是内部、外部、故意还是意外——能够访问生产数据。</st>
    <st c="26560">我们再次引用我们的平台架构，来自</st> [*<st c="26613">第2章</st>*](B31164_02.xhtml#_idTextAnchor055)<st
    c="26622">：</st>
- en: '![Figure 7.3: Platform reference components](img/Figure_7.3.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3：平台参考组件](img/Figure_7.3.jpg)'
- en: '<st c="27459">Figure 7.3: Platform reference components</st>'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27459">图 7.3：平台参考组件</st>
- en: <st c="27500">Each white box, even</st> <st c="27521">the security-related boxes,
    must have its own security gates.</st> <st c="27584">The ability to manage RBAC
    for the organization cannot be open for just anyone to change, as an example.</st>
    <st c="27689">It’s easy to see how this can quickly spiral into a problem that
    has spawned an entire field of experts.</st> <st c="27794">We won’t seek to replace
    their knowledge and expertise in this book; however, we will share some of the
    most important aspects of security for an IDP as we see them to get you started
    on the</st> <st c="27985">right path.</st>
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27500">每个白盒，即便</st> <st c="27521">是与安全相关的盒子，都必须有自己的安全网关。</st> <st c="27584">例如，组织的RBAC管理能力不能开放给任何人修改。</st>
    <st c="27689">很容易看出，这种情况如何迅速演变成一个问题，并催生了一个专家领域。</st> <st c="27794">我们不会在本书中取代他们的知识和专业技能；然而，我们会分享一些我们认为最重要的IDP安全方面，帮助你走上</st>
    <st c="27985">正确的道路。</st>
- en: <st c="27996">An easy win for any organization is to have the staging, development,
    and production environments all completely isolated from one another.</st> <st
    c="28137">This includes having separate databases with different access rules
    entirely versus one database with different tables and different</st> <st c="28270">access
    rules.</st>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27996">任何组织的一个简单胜利是将暂存、开发和生产环境完全隔离开来。</st> <st c="28137">这包括拥有完全不同访问规则的独立数据库，而不是一个包含不同表格和不同</st>
    <st c="28270">访问规则的数据库。</st>
- en: <st c="28283">It is possible to use a single cluster and have network policy-based
    separations, RBAC that applies to very specific namespaces, and create a similar
    experience for isolation as you would experience with having multiple clusters,
    but the cluster’s API server, audit logs,</st> `<st c="28556">etcd</st>`<st c="28560">,
    networking, and other cluster-scoped resources will still represent a single point
    of potential failure of</st> <st c="28669">that isolation.</st>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="28283">可以使用单一集群，并通过基于网络策略的隔离、适用于特定命名空间的RBAC，以及创建类似于多个集群的隔离体验，但集群的API服务器、审计日志、</st>
    `<st c="28556">etcd</st>`<st c="28560">、网络及其他集群范围资源仍然代表着潜在的单点故障，可能影响</st> <st
    c="28669">隔离的安全性。</st>
- en: <st c="28684">Therefore, for</st> <st c="28700">security and compliance, it’s
    best to separate environments completely.</st> <st c="28772">By having two distinct
    clusters, the isolation of the production data is guaranteed and leaves less room
    for human error to impact that security.</st> <st c="28918">From there, you may
    also have different networking configurations, such as firewall rules that have
    different allowances, or even environments that are completely disconnected</st>
    <st c="29094">from the</st> <st c="29103">public internet.</st>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="28684">因此，出于</st> <st c="28700">安全和合规性的考虑，最好将环境完全隔离。</st> <st c="28772">通过拥有两个独立的集群，可以保证生产数据的隔离，并减少人为错误对安全性的影响。</st>
    <st c="28918">从这里开始，你还可以拥有不同的网络配置，例如有不同允许规则的防火墙规则，甚至完全与</st> <st c="29094">公共互联网断开连接的环境。</st>
- en: <st c="29119">Secret and token management</st>
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="29119">机密和令牌管理</st>
- en: <st c="29147">In Kubernetes, a Secret</st> <st c="29171">is a password, authentication
    token, environment variable, API key, or similar piece of sensitive data that
    an application may need to access in order to function correctly or accomplish
    a task.</st> <st c="29367">Secret management</st> <st c="29384">becomes one of
    the most critical challenges to solve when working on a system that relies so
    heavily on automation as an IDP does.</st> <st c="29516">Fortunately, there are
    patterns and technologies designed to help</st> <st c="29582">handle this.</st>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29147">在Kubernetes中，Secret</st> <st c="29171">是应用程序可能需要访问的敏感数据，如密码、认证令牌、环境变量、API密钥等，以确保其正常功能或完成某项任务。</st>
    <st c="29367">机密管理</st> <st c="29384">成为在依赖自动化如此重的系统中，像IDP一样工作的最关键挑战之一。</st> <st
    c="29516">幸运的是，有一些设计好的模式和技术可以帮助</st> <st c="29582">应对这一挑战。</st>
- en: <st c="29594">As a Kubernetes-based platform, the built-in Kubernetes functions
    for secret security are the key starting point.</st> <st c="29709">It’s important
    to know that default behaviors are not secure.</st> <st c="29771">Secrets are
    stored similarly to ConfigMaps and are not encrypted.</st> <st c="29837">They
    are encoded, but the encoding is only</st> `<st c="29880">base64</st>`<st c="29886">.
    This is fine for development environments but not so good for production environments.</st>
    <st c="29975">You can, however, encrypt secret data at rest without installing
    any</st> <st c="30044">third-party applications.</st>
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29594">作为一个基于 Kubernetes 的平台，内建的 Kubernetes 功能用于秘密管理的安全性是关键的起点。</st>
    <st c="29709">需要明确的是，默认行为并不安全。</st> <st c="29771">秘密信息与 ConfigMaps 的存储方式类似，且没有加密。</st>
    <st c="29837">它们是编码存储的，但编码仅仅是</st> `<st c="29880">base64</st>`<st c="29886">。这种方式适用于开发环境，但对于生产环境并不安全。</st>
    <st c="29975">然而，你可以在不安装任何第三方应用的情况下对静态的秘密数据进行加密。</st>
- en: <st c="30069">For further reading on encryption at rest, and some examples that
    could be used against a test cluster, please see the</st> *<st c="30189">Data
    encryption</st>* <st c="30204">section of the Kubernetes</st> <st c="30231">documentation:</st>
    [<st c="30246">https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/</st>](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/)<st
    c="30311">.</st>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30069">有关静态数据加密的进一步阅读以及可以应用于测试集群的示例，请参阅 Kubernetes 文档中的</st> *<st c="30189">数据加密</st>*
    <st c="30204">部分：</st> [<st c="30246">https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/</st>](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/)<st
    c="30311">。</st>
- en: <st c="30312">Secret management is</st> <st c="30333">often fairly large in
    scope, and once you have more than one cluster or more than one environment, it
    becomes difficult to manage all the secrets required for the IDP to support applications.</st>
    <st c="30526">As such, the use of secret storage software such as HashiCorp’s
    Vault or password managers such as Bitwarden or 1Password has become the industry
    standard.</st> <st c="30682">A standard best practice for landing secrets in a
    cluster automatically is to store in a code a reference to the secret and then
    have a logic of some kind that knows how to look up the secret by its reference
    and fetch it for the application.</st> <st c="30925">As such, a common pattern
    for applications to pull in secret information via references is to leverage a</st>
    <st c="31030">sidecar model.</st>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30312">秘密管理的范围通常相当广泛，一旦你有多个集群或多个环境，管理支持应用程序所需的所有秘密变得非常困难。</st> <st c="30526">因此，使用诸如
    HashiCorp Vault 这样的秘密存储软件，或如 Bitwarden 和 1Password 这样的密码管理器，已经成为行业标准。</st> <st
    c="30682">一个标准的最佳实践是，将秘密信息在集群中自动部署的方式是：在代码中存储对秘密的引用，然后通过某种逻辑查找该引用并为应用获取相应的秘密。</st>
    <st c="30925">因此，应用程序通过引用拉取秘密信息的常见模式是利用</st> <st c="31030">侧车模型。</st>
- en: <st c="31044">In a sidecar model, one of the containers in the Pod has the specific
    job of fetching and making available</st> <st c="31151">secrets for use by the
    main application container upon Pod start.</st> <st c="31218">The secrets are
    then placed into a storage volume and read by the application when it</st> <st
    c="31304">needs them.</st>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31044">在侧车模型中，Pod 中的一个容器专门负责在 Pod 启动时获取并提供</st> <st c="31151">供主应用容器使用的秘密信息。</st>
    <st c="31218">这些秘密信息随后被放入存储卷中，当应用需要时</st> <st c="31304">它会读取这些信息。</st>
- en: <st c="31315">A sidecar model</st> <st c="31331">would look like this, where
    the Pod contains both the application and</st> <st c="31402">the sidecar:</st>
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31315">侧车模型</st> <st c="31331">如下所示，其中 Pod 同时包含应用程序和</st> <st c="31402">侧车容器：</st>
- en: '![Figure 7.4: Container sidecar model](img/Figure_7.4.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4：容器侧车模型](img/Figure_7.4.jpg)'
- en: '<st c="31485">Figure 7.4: Container sidecar model</st>'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31485">图 7.4：容器侧车模型</st>
- en: <st c="31520">However, unless the</st> <st c="31540">sidecar (or another service)
    that does the lookup is running on a loop, this is only solved once and doesn’t
    address environments where secrets may be changing on a regular cadence.</st>
    <st c="31723">This is where FOSS solutions are an excellent option.</st> <st c="31777">The</st>
    **<st c="31781">External Secrets Operator</st>** <st c="31806">(</st>**<st c="31808">ESO</st>**<st
    c="31811">) is a</st> <st c="31819">FOSS offering that enables this.</st> <st
    c="31852">The project is a Linux Foundation property.</st> <st c="31896">For a
    full overview of how it works,</st> <st c="31933">visit</st> [<st c="31939">external-secrets.io</st>](http://external-secrets.io)<st
    c="31958">.</st>
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31520">但是，除非</st> <st c="31540">sidecar（或其他服务）在循环中运行，否则这只解决一次，不能解决密钥可能定期更改的环境。</st>
    <st c="31723">这就是开源软件解决方案是一个绝佳选择的地方。</st> <st c="31777">**<st c="31781">外部秘密操作员</st>**
    <st c="31806">(</st>**<st c="31808">ESO</st>**<st c="31811">)是一个</st> <st c="31819">开源软件，可以实现这一点。</st>
    <st c="31852">该项目是Linux Foundation的财产。</st> <st c="31896">有关其工作原理的详细概述，请访问</st>
    [<st c="31939">external-secrets.io</st>](http://external-secrets.io)<st c="31958">。</st>
- en: <st c="31959">Their reference architecture diagram is this, which is pretty
    much identical to our</st> <st c="32044">sidecar reference:</st>
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31959">他们的参考架构图如下，几乎与我们的</st> <st c="32044">sidecar 参考图几乎完全一样:</st>
- en: '![Figure 7.5: Reference architecture for ESO](img/Figure_7.5.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5：ESO的参考架构](img/Figure_7.5.jpg)'
- en: '<st c="32114">Figure 7.5: Reference architecture for ESO</st>'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32114">图7.5：ESO的参考架构</st>
- en: <st c="32156">Essentially, secrets</st> <st c="32178">are stored in a password
    storage that lives outside the cluster, and then the operator is able to access
    them.</st> <st c="32289">The secret references exist as</st> **<st c="32320">Custom
    Resources</st>** <st c="32336">(</st>**<st c="32338">CRs</st>**<st c="32341">)
    that</st> <st c="32349">the operator knows how to interpret and action the retrieval
    for.</st> <st c="32415">If the secret changes, then the new secret is automatically
    applied by the operator to the cluster, meaning there is only ever one</st> **<st
    c="32546">source of truth</st>** <st c="32561">(</st>**<st c="32563">SOT</st>**<st
    c="32566">) for</st> <st c="32572">secrets in</st> <st c="32584">the IDP.</st>
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32156">基本上，秘密</st> <st c="32178">存储在集群外的密码存储中，然后操作员可以访问它们。</st> <st c="32289">秘密引用存在</st>
    **<st c="32320">自定义资源</st>** <st c="32336">(</st>**<st c="32338">CRs</st>**<st
    c="32341">)，操作员知道如何解释和执行检索。</st> <st c="32415">如果秘密发生变化，则操作员会自动将新秘密应用于集群，这意味着秘密在</st>
    **<st c="32546">IDP</st>** <st c="32561">(</st>**<st c="32563">SOT</st>**<st c="32566">)中只有一个</st>
    <st c="32572">真实来源。</st>
- en: <st c="32592">Of course, the authentication secret to the storage must be supplied
    initially for the operator to work.</st> <st c="32698">This can pose a little
    bit of a Catch-22 as whoever sets up this operator will need the ability to provide
    it with credentials to access the off-cluster</st> <st c="32851">secret storage.</st>
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32592">当然，必须首先提供存储的身份验证秘密给操作员才能工作。</st> <st c="32698">这可能有点困难，因为设置此操作员的人需要能够提供凭据以访问集群外的</st>
    <st c="32851">秘密存储。</st>
- en: <st c="32866">ESO is especially useful in highly regulated environments where
    the contents of secrets, such as certificates and tokens, are rotated frequently.</st>
    <st c="33013">This allows for the rotation to happen at the source but automatically
    propagates out to the</st> <st c="33106">necessary environments.</st>
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32866">ESO在高度监管的环境中特别有用，例如证书和令牌等秘密经常轮换。</st> <st c="33013">这允许在源头进行轮换，但自动传播到</st>
    <st c="33106">必要的环境。</st>
- en: <st c="33129">ESO is not the only open source project for secret management
    on a cluster; there are several others incubating in CNCF, and all are worth a
    review.</st> <st c="33279">Choosing the correct tool for your organization will
    need to come after weighing a list of pros and cons, but the pattern leveraged
    by these tools represents the best pr</st><st c="33448">actice you should seek</st>
    <st c="33472">to emulate.</st>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33129">ESO并非集群上秘密管理的唯一开源项目；CNCF正在孵化其他几个项目，都值得审查。</st> <st c="33279">选择适合您组织的正确工具需要在权衡一系列利弊之后进行，但这些工具利用的模式代表了您应该追求的最佳实践。</st>
- en: <st c="33483">Sanitizing logs</st>
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="33483">日志清理</st>
- en: <st c="33499">Any logs the platform generates should</st> <st c="33539">be sanitized.</st>
    <st c="33553">This is true for applications as well; however, that exceeds the
    boundaries of the platform.</st> <st c="33646">Logs are part of the data and,
    therefore, assets that the security of the platform needs to protect.</st> <st
    c="33747">In addition to the storage and transmission topic we covered previously,
    data sanitization is a key part of ensuring that even if a bad actor gains access
    to logging data, they cannot use it to further compromise the system.</st> <st
    c="33972">Code quality checking tools such as</st> <st c="34008">SonarQube (</st>[<st
    c="34019">https://docs.sonarsource.com/sonarqube/latest/</st>](https://docs.sonarsource.com/sonarqube/latest/)<st
    c="34066">) are excellent for detecting any sensitive data going to the wrong
    location, allowing for remediation of the issue before a security incident</st>
    <st c="34210">can occur.</st>
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33499">平台生成的任何日志都应该</st> <st c="33539">进行清理。</st> <st c="33553">应用程序也应该如此；然而，这超出了平台的边界。</st>
    <st c="33646">日志是数据的一部分，因此是平台安全需要保护的资产。</st> <st c="33747">除了我们之前讨论的存储和传输问题，数据清理是确保即使恶意行为者获得日志数据访问权限，他们也无法利用这些数据进一步危害系统的关键部分。</st>
    <st c="33972">像</st> <st c="34008">SonarQube（</st>[<st c="34019">https://docs.sonarsource.com/sonarqube/latest/</st>](https://docs.sonarsource.com/sonarqube/latest/)<st
    c="34066">）这样的代码质量检查工具非常适合检测任何敏感数据是否被发送到错误的位置，从而在发生安全事件之前进行修复。</st> <st c="34210">以防发生安全事件。</st>
- en: <st c="34220">Logs that are sanitized are cleared of passwords or tokens in
    their body.</st> <st c="34295">For example, when logging requests to an API, how
    the request was authenticated (for example, bearer token) could be logged, but
    the actual token itself needs to be scrubbed.</st> <st c="34470">Where sensitive
    data is captured or stored, it should be salted</st> <st c="34534">and hashed.</st>
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34220">已清理的日志不应包含密码或令牌。</st> <st c="34295">例如，在记录API请求时，请求的身份验证方式（例如，持有者令牌）可以被记录，但实际的令牌本身需要被清除。</st>
    <st c="34470">在捕获或存储敏感数据的地方，应进行加盐</st> <st c="34534">并哈希处理。</st>
- en: <st c="34545">These platform logs</st> <st c="34566">should also be kept as
    clear as possible of</st> **<st c="34610">Personally Identifiable Information</st>**
    <st c="34645">(</st>**<st c="34647">PII</st>**<st c="34650">).</st> <st c="34654">This
    type of data is typically not required, so storing it creates an unnecessary risk</st>
    <st c="34741">surface area.</st>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34545">这些平台日志</st> <st c="34566">也应该尽可能避免包含</st> **<st c="34610">个人身份信息</st>**
    <st c="34645">(</st>**<st c="34647">PII</st>**<st c="34650">)。</st> <st c="34654">这种类型的数据通常不需要，因此存储它会带来不必要的风险</st>
    <st c="34741">暴露面。</st>
- en: <st c="34754">Log sanitization also includes retention policies.</st> <st c="34806">Just
    as application data should be lifecycled and destroyed after</st> <st c="34872">its</st>
    **<st c="34876">time to live</st>** <st c="34888">(</st>**<st c="34890">TTL</st>**<st
    c="34893">) has expired, so too should log data.</st> <st c="34933">Logs become
    progressively less useful over time for the platform team as the platform continues
    to run, but the information contained within them can retain value where PII cannot
    be stripped out due to business needs.</st> <st c="35152">As such, keeping data
    around with value to bad actors presents an unnecessary risk that even the use
    of cold storage doesn’t mitigate.</st> <st c="35287">When to destroy data is ultimately
    a business decision, and data transformation could be done to further anonymize
    data so that only the PII is destroyed if there’s a compelling reason to</st>
    <st c="35474">keep platform metrics</st> <st c="35497">around forever.</st>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34754">日志清理也包括保留政策。</st> <st c="34806">就像应用数据在其</st> **<st c="34876">生存时间</st>**
    <st c="34888">(</st>**<st c="34890">TTL</st>**<st c="34893">) 到期后应进行生命周期管理和销毁一样，日志数据也应如此。</st>
    <st c="34933">随着平台的不断运行，日志对平台团队的帮助逐渐减少，但其中包含的信息可能在某些情况下仍有价值，尤其是在由于业务需求无法剥离个人身份信息（PII）时。</st>
    <st c="35152">因此，保留可能对恶意行为者有价值的数据会带来不必要的风险，甚至使用冷存储也无法完全规避这一风险。</st> <st c="35287">何时销毁数据最终是一个业务决策，如果有充分的理由保留平台指标数据，可以对数据进行转换进一步匿名化，以便仅销毁PII。</st>
    <st c="35474">保持平台指标</st> <st c="35497">永远存储。</st>
- en: <st c="35512">Secure access</st>
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="35512">安全访问</st>
- en: <st c="35526">We’ve covered RBAC a few times already.</st> <st c="35567">It’s
    explicitly named as one of the OWASP</st> *<st c="35609">Top Ten</st>*<st c="35616">,
    so it’s clearly important to the security posture of an organization for access
    controls to be correct.</st> <st c="35722">One method of ensuring this is to create
    service accounts.</st> <st c="35781">These accounts are non-human identity accounts
    that can be leveraged by workloads on the system.</st> <st c="35878">Just as with
    a human, the authentication of a service account requires a token, and that token
    should be regularly rotated.</st> <st c="36002">By splitting access types into
    human and non-human, you can leverage</st> <st c="36071">the</st> **<st c="36075">principle
    of least privilege</st>** <st c="36103">(</st>**<st c="36105">PoLP</st>**<st c="36109">)
    to ensure that a human or a workload has the permissions it needs but none of
    the permissions it</st> <st c="36209">does not.</st>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="35526">我们已经讨论过几次RBAC了。</st> <st c="35567">它被明确列为OWASP</st> *<st c="35609">十大</st>*<st
    c="35616">之一，因此，确保访问控制正确对组织的安全性至关重要。</st> <st c="35722">确保这一点的方法之一是创建服务账户。</st>
    <st c="35781">这些账户是非人工身份账户，可以被系统上的工作负载使用。</st> <st c="35878">与人工账户一样，服务账户的认证需要一个令牌，并且这个令牌应定期更换。</st>
    <st c="36002">通过将访问类型分为人工和非人工，你可以利用</st> <st c="36071">最小权限原则</st> **<st c="36075">（PoLP）</st>**<st
    c="36103">来确保人工用户或工作负载仅拥有其所需的权限，而不会拥有它们</st> <st c="36209">不需要的权限。</st>
- en: <st c="36218">Least privilege should not just apply to workloads; it should
    apply to people too.</st> <st c="36302">When evaluating what permissions users
    should have, there are a few things to keep in mind for their access.</st> <st
    c="36411">Next, we’ll define some high-level best practices for you</st> <st c="36469">to
    investigate:</st>
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="36218">最小权限不仅应适用于工作负载，也应适用于人员。</st> <st c="36302">在评估用户应该拥有的权限时，有几点需要注意。</st>
    <st c="36411">接下来，我们将为您定义一些高层次的最佳实践供您调查：</st>
- en: <st c="36484">Single-user, multi-RBAC:</st>
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36484">单用户，多RBAC：</st>
- en: <st c="36509">User has independent RBAC roles for staging</st> <st c="36554">and
    production.</st>
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36509">用户在预备环境和生产环境中有独立的RBAC角色。</st>
- en: <st c="36569">Staging should maintain parity with production so that actions
    performed in one environment will prepare the user to do the same in</st> <st
    c="36702">the other.</st>
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36569">预备环境应与生产环境保持一致，以便在一个环境中执行的操作能帮助用户在另一个环境中执行相同的操作。</st>
- en: <st c="36712">May have break-glass procedures to gain higher levels of access.</st>
    <st c="36778">This access, if it exists, must be auditable, meaning all the facts
    about it</st> <st c="36855">are logged.</st>
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36712">可能有破玻璃程序来获取更高的访问权限。</st> <st c="36778">这种访问权限（如果存在）必须是可审计的，这意味着所有相关信息</st>
    <st c="36855">都必须被记录。</st>
- en: <st c="36866">GitOps for</st> <st c="36878">security :</st>
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36866">GitOps用于</st> <st c="36878">安全：</st>
- en: <st c="36888">Can</st> <st c="36893">manage RBAC.</st>
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36888">可以</st> <st c="36893">管理RBAC。</st>
- en: <st c="36905">Reduces the need to grant direct access to</st> <st c="36949">the
    cluster.</st>
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36905">减少直接授予访问</st> <st c="36949">集群的需要。</st>
- en: <st c="36961">Doe</st><st c="36965">s become</st> <st c="36975">a SPOF.</st>
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36961">Doe</st><st c="36965">变成</st> <st c="36975">单点故障（SPOF）。</st>
- en: <st c="36982">Centers</st> <st c="36991">security left.</st>
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="36982">中心</st> <st c="36991">的安全性已被移除。</st>
- en: <st c="37005">Audit logs</st>
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="37005">审计日志</st>
- en: <st c="37016">What is an audit log?</st> <st c="37039">An audit log is</st>
    <st c="37054">the record of actions the Kubernetes API server sees.</st> <st c="37109">This
    means every change in the Kubernetes cluster, both automated and human-initiated,
    from logins to Pod scheduling, is tracked in audit logs.</st> <st c="37253">If
    there’s identifying information, it’s going to be in your audit logs.</st> <st
    c="37326">This is because it is a critical path to know who did what action, where,
    and when, reviewing audit logs for both incident resolution and security</st>
    `<st c="37618">PUT</st>` <st c="37621">or</st> `<st c="37625">PATCH</st>` <st
    c="37630">– that payload should be logged as well.</st> <st c="37672">Credentials
    should not be logged as PII and should be omitted in the vast majority</st> <st
    c="37755">of cases.</st>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37016">什么是审计日志？</st> <st c="37039">审计日志是</st> <st c="37054">Kubernetes
    API 服务器看到的操作记录。</st> <st c="37109">这意味着 Kubernetes 集群中的每一个变更，无论是自动化的还是人工发起的，从登录到
    Pod 调度，都记录在审计日志中。</st> <st c="37253">如果存在标识信息，它将在审计日志中记录。</st> <st c="37326">这是因为审计日志是了解谁在何时、何地做了什么操作的重要路径，审计日志对于事件解决和安全性</st>
    `<st c="37618">PUT</st>` <st c="37621">或</st> `<st c="37625">PATCH</st>` <st c="37630">等有效载荷也应被记录。</st>
    <st c="37672">凭据不应作为个人身份信息（PII）记录，应在绝大多数情况下省略。</st> <st c="37755">案例。</st>
- en: <st c="37764">Leveraging audit logs</st> <st c="37786">to determine anomalous
    behaviors can be done with some base-level observability implementations and corresponding
    alerting.</st> <st c="37911">When defining the platform, you should have come
    up with user stories and critical user journeys.</st> <st c="38009">In these exercises,
    you looked at what your users will do and expect to be successful with.</st> <st
    c="38101">But did you look at what your users would not do or should not do and
    expect to</st> <st c="38181">be successful?</st>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37764">利用审计日志</st> <st c="37786">来确定异常行为可以通过一些基础的可观察性实现和相应的警报来完成。</st>
    <st c="37911">在定义平台时，你应该已经构思出用户故事和关键用户流程。</st> <st c="38009">在这些练习中，你会分析用户将会做什么并期待成功的操作。</st>
    <st c="38101">但是你是否考虑过用户不会做或不应做的事情，并期待成功呢？</st>
- en: <st c="38195">Behaviors found in audit logs that defy the norms of the platform
    users are the simplest way to define alerts around potential anomalies.</st> <st
    c="38334">An example of this would be a very high number of</st> `<st c="38384">403</st>`
    <st c="38387">errors or a significant number of requests from an IP address outside
    of a</st> <st c="38462">specific</st> **<st c="38472">Classless Inter-Domain Routing</st>**
    <st c="38502">(</st>**<st c="38504">CIDR</st>**<st c="38508">) range.</st>
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38195">审计日志中发现的行为，如果偏离平台用户的正常行为，是定义潜在异常警报的最简单方法。</st> <st c="38334">一个例子是出现大量的</st>
    `<st c="38384">403</st>` <st c="38387">错误，或者来自于</st> <st c="38462">特定</st> **<st
    c="38472">无类域间路由</st>** <st c="38502">（</st>**<st c="38504">CIDR</st>**<st c="38508">）范围外的IP地址的请求数量显著增加。</st>
- en: <st c="38517">Other items automated detection might look for include</st> <st
    c="38573">the following:</st>
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38517">自动化检测可能会查找的其他项目包括</st> <st c="38573">以下内容：</st>
- en: <st c="38587">Detecting unusual or invalid user agents</st> <st c="38629">or
    bots</st>
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="38587">检测异常或无效的用户代理</st> <st c="38629">或机器人</st>
- en: <st c="38636">Multiple user sign-ins or sessions from</st> <st c="38677">different
    locations</st>
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="38636">来自</st> <st c="38677">不同位置的多个用户登录或会话</st>
- en: <st c="38696">In general, events that violate known norms should probably reach
    human eyes automatically.</st> <st c="38789">However, most of these still require
    human review as they do not always indicate a security incident.</st> <st c="38891">They
    may indicate a software issue or an event that is necessary but was not factored
    in when the alerts were designed.</st> <st c="39011">Alerts should not become
    overly noisy.</st> <st c="39050">False signals can cause harm, especially when
    they page your team in the middle of the night.</st> <st c="39144">If false signals
    fire too often, they may soon be ignored by engineers looking to maintain a lower</st>
    <st c="39243">cognitive load.</st>
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38696">通常，违反已知规范的事件应该自动地引起人工注意。</st> <st c="38789">然而，大多数情况下，这些事件仍然需要人工审核，因为它们不一定表示安全事件。</st>
    <st c="38891">它们可能指示一个软件问题或一个必要的事件，但在设计警报时并未考虑到。</st> <st c="39011">警报不应过于频繁。</st>
    <st c="39050">虚假信号会造成伤害，尤其是当它们在半夜打扰到你的团队时。</st> <st c="39144">如果虚假信号触发得过于频繁，工程师们可能会很快忽视它们，以维持较低的</st>
    <st c="39243">认知负荷。</st>
- en: <st c="39258">We’ve covered the basics of security so far and have a long way
    to go.</st> <st c="39330">Now that we’ve learned about so</st><st c="39361">me
    general topics, let’s get</st> <st c="39391">more specific.</st>
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="39258">到目前为止，我们已经介绍了安全的基础知识，还有很长的路要走。</st> <st c="39330">现在我们已经学习了一些</st><st
    c="39361">一般性话题，接下来让我们更具体一点。</st>
- en: <st c="39405">Looking at SBOM practices</st>
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="39405">查看 SBOM 实践</st>
- en: <st c="39431">Open source tools, libraries within programming languages, package
    managers, and container images are the building blocks of the modern application
    and also introduce a unique set of challenges when it comes to securing</st> <st
    c="39651">your</st> **<st c="39657">software supply chain</st>**<st c="39678">.
    This is what we affectionately call the supply chain security conundrum.</st>
    <st c="39753">How do you maintain a good security posture when you don’t own all
    of the code that needs to</st> <st c="39846">be secured?</st>
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="39431">开源工具、编程语言中的库、包管理器和容器镜像是现代应用程序的构建块，同时在安全</st> <st c="39651">你的</st>
    **<st c="39657">软件供应链</st>**<st c="39678">方面也带来了独特的挑战。这就是我们亲切地称之为供应链安全难题的原因。</st>
    <st c="39753">当你并不拥有所有需要</st> <st c="39846">被保护的代码时，你如何保持良好的安全态势呢？</st>
- en: <st c="39857">If we represent the supply chain visually, it’ll have some unknown
    people (we’ll call them actors) contributing to an open source dependency and
    another likely known actor contributing to your code base more directly.</st>
    <st c="40076">This is an extremely simplified drawing (there are probably 10 boxes
    missing here) but it should help you get</st> <st c="40186">the point:</st>
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="39857">如果我们以可视化的方式表示供应链，它将包含一些未知的人（我们称之为参与者）为开源依赖项做出贡献，以及另一个可能已知的参与者更直接地为你的代码库做出贡献。</st>
    <st c="40076">这是一个极度简化的图示（这里可能缺少了10个框），但它应该有助于你理解</st> <st c="40186">重点：</st>
- en: '![Figure 7.6: Example supply chain](img/Figure_7.6.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.6：示例供应链](img/Figure_7.6.jpg)'
- en: '<st c="40263">Figure 7.6: Example supply chain</st>'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40263">图 7.6：示例供应链</st>
- en: <st c="40295">Your software supply chain is everything and everyone is involved
    in releasing your app.</st> <st c="40385">When we look at how to maintain security,
    we have to break down our application and infrastructure topology.</st> <st c="40494">An</st>
    <st c="40496">SBOM is an important tool for tracking and managing the risks of</st>
    <st c="40562">a project.</st>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40295">你的软件供应链就是一切，所有参与者都在发布你的应用程序中发挥作用。</st> <st c="40385">当我们考虑如何维护安全时，我们必须拆解我们的应用程序和基础设施拓扑结构。</st>
    <st c="40494">SBOM 是跟踪和管理项目风险的重要工具。</st>
- en: <st c="40572">After the US government issued an executive order in 2021, these
    documents became mandatory for many companies.</st> <st c="40685">The essential
    premise is that a company knows what the software they’re building depends on
    and where the dependencies of the software originate.</st> <st c="40831">An SBOM
    is generated at the time a piece of software and all of its dependencies are bundled
    up for release.</st> <st c="40940">While not strictly necessary for every company,
    these represent a best practice as, when paired with a scanning tool, they can
    assist with audits and understanding the surface area of a risk if a Day 0 vulnerability
    such as Heartbleed or Log4j is</st> <st c="41187">found again.</st>
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40572">在美国政府于2021年发布行政命令后，这些文档对于许多公司来说变得强制性。</st> <st c="40685">其基本前提是，公司知道它们构建的软件依赖于什么，以及这些软件的依赖项来自何处。</st>
    <st c="40831">SBOM 会在一款软件及其所有依赖项捆绑发布时生成。</st> <st c="40940">虽然对于每个公司来说并非绝对必要，但作为最佳实践，当与扫描工具配合使用时，它们有助于审计并理解风险的表面区域，特别是在像
    Heartbleed 或 Log4j 这样的 Day 0 漏洞再次被发现时。</st>
- en: <st c="41199">An SBOM</st> <st c="41207">is usually generated at build time
    in the CI pipeline.</st> **<st c="41263">Syft</st>** <st c="41267">is a</st> <st
    c="41272">pretty common SBOM generation tool and often is paired with the scanner</st>
    **<st c="41345">Grype</st>** <st c="41350">since</st> <st c="41356">they’re both
    free open source tools from Anchore.</st> <st c="41407">Cisco’s Open Source Program
    Office also recently released an</st> <st c="41467">SBOM tool called</st> **<st
    c="41485">KubeClarity</st>** <st c="41496">(</st>[<st c="41498">https://github.com/openclarity/kubeclarity</st>](https://github.com/openclarity/kubeclarity)<st
    c="41540">), which can use multiple SBOM and scanner tools in concert to provide
    the most complete picture of the software and its surface area</st> <st c="41675">for
    risks.</st>
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41199">SBOM</st> <st c="41207">通常是在 CI 流水线的构建过程中生成的。</st> **<st c="41263">Syft</st>**
    <st c="41267">是一个</st> <st c="41272">相当常见的 SBOM 生成工具，通常与扫描器</st> **<st c="41345">Grype</st>**
    <st c="41350">配合使用，</st> <st c="41356">因为它们都是 Anchore 提供的免费开源工具。</st> <st c="41407">思科的开源项目办公室最近还发布了一个</st>
    <st c="41467">名为</st> **<st c="41485">KubeClarity</st>** <st c="41496">(</st>[<st
    c="41498">https://github.com/openclarity/kubeclarity</st>](https://github.com/openclarity/kubeclarity)<st
    c="41540">)，该工具可以协同使用多个 SBOM 和扫描工具，提供软件及其表面区域的最完整视图</st> <st c="41675">以便于风险评估。</st>
- en: <st c="41685">SBOM generation tools are still fairly new, and so they’re not
    yet perfect.</st> <st c="41762">It’s possible for one tool to miss a package the
    other tool detects and vice versa.</st> <st c="41846">For understanding your security
    posture, less is not more, so gaining the most complete picture possible is the
    most important part of staying on top</st> <st c="41996">of security.</st>
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41685">SBOM 生成工具仍然相对较新，因此它们还不完美。</st> <st c="41762">可能某个工具未能检测到一个包，而另一个工具则能检测到，反之亦然。</st>
    <st c="41846">为了了解你的安全态势，少即不等于多，因此获得尽可能最完整的视图是保持安全的最重要部分。</st> <st c="41996">安全优先。</st>
- en: <st c="42008">How to use an SBOM</st>
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="42008">如何使用 SBOM</st>
- en: <st c="42027">An SBOM is</st> <st c="42038">more than just a checkmark on a
    list of requirements from a customer or the US government.</st> <st c="42130">It’s
    also an effective tool for vulnerability detection and response.</st> <st c="42200">In</st>
    *<st c="42203">Figure 7</st>**<st c="42211">.6</st>*<st c="42213">, we show how
    your application likely inherits code, and therefore vulnerabilities from dependencies
    and libraries it may leverage that are open source.</st> <st c="42366">Those dependencies
    are difficult to track, which is why an SBOM can act as the ledger for your system.</st>
    <st c="42469">This means that down the line, if a significant security vulnerability
    is announced, you can quickly cross-reference that announcement with your SBOM
    and understand in a timely manner if your software is vulnerable.</st> <st c="42685">This
    can be done by looking at an already created report and also by simply running
    the report again.</st> <st c="42787">If your report generation is paired with
    scanning, the scanning tool should pick up on the new vulnerability as soon as
    it’s entered into the critical</st> <st c="42938">vulnerability registry.</st>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="42027">SBOM 不仅仅是客户或美国政府要求清单上的一个勾选项。</st> <st c="42038">它还是一个有效的漏洞检测和响应工具。</st>
    <st c="42130">在</st> *<st c="42203">图 7</st>**<st c="42211">.6</st>*<st c="42213">中，我们展示了你的应用程序如何继承代码，从而继承了可能利用的开源依赖和库中的漏洞。</st>
    <st c="42366">这些依赖关系很难跟踪，这也是为什么 SBOM 可以作为你系统的账本。</st> <st c="42469">这意味着，如果后续发布了重大安全漏洞通报，你可以快速将该通报与
    SBOM 进行交叉引用，并及时了解你的软件是否存在漏洞。</st> <st c="42685">这可以通过查看已创建的报告，也可以通过重新生成报告来完成。</st>
    <st c="42787">如果报告生成与扫描工具配合使用，扫描工具应该在漏洞被录入到关键</st> <st c="42938">漏洞注册表后立即检测到新的漏洞。</st>
- en: <st c="42961">Getting an SBOM for a GitHub repo</st>
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="42961">获取 GitHub 仓库的 SBOM</st>
- en: <st c="42995">An easy way to see an</st> <st c="43018">SBOM for a GitHub repo
    is to curl the GitHub API for the repo you want to investigate.</st> <st c="43105">For
    the sake of a quick example, we’ll walk through how to do this and how to interpret</st>
    <st c="43193">the results.</st>
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="42995">查看 GitHub 仓库的 SBOM 的一种简单方法是使用 curl 命令调用你要调查的仓库的 GitHub API。</st>
    <st c="43018">为了快速演示，我们将介绍如何执行此操作以及如何解读</st> <st c="43193">结果。</st>
- en: <st c="43205">GitHub SBOMs</st> <st c="43218">are in a format known as SPDX;
    you can learn</st> <st c="43264">more about that format</st> <st c="43287">here:</st>
    [<st c="43293">https://spdx.github.io/spdx-spec/v2.3/introduction/</st>](https://spdx.github.io/spdx-spec/v2.3/introduction/)<st
    c="43344">.</st>
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43205">GitHub SBOM</st> <st c="43218">采用一种被称为 SPDX 的格式；你可以在</st> <st
    c="43264">这里了解更多关于该格式的信息</st> <st c="43287">：</st> [<st c="43293">https://spdx.github.io/spdx-spec/v2.3/introduction/</st>](https://spdx.github.io/spdx-spec/v2.3/introduction/)<st
    c="43344">。</st>
- en: <st c="43345">To get an SBOM, use the following code block in your terminal
    to curl the GitHub API.</st> <st c="43432">You do not need to authenticate for
    this to work, although you can do so.</st> <st c="43506">Replace the</st> `<st
    c="43518">$REPOSITORY</st>` <st c="43529">and</st> `<st c="43534">$OWNER</st>`
    <st c="43540">variables with your desired repo.</st> <st c="43575">For the sake
    of the example, we’ll look at the</st> `<st c="43622">tag-security</st>` <st c="43634">CNCF
    repository:</st>
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43345">要获取 SBOM，请在终端中使用以下代码块来调用 GitHub API。</st> <st c="43432">你不需要进行身份验证就可以运行此命令，但如果需要的话，也可以进行身份验证。</st>
    <st c="43506">将</st> `<st c="43518">$REPOSITORY</st>` <st c="43529">和</st> `<st
    c="43534">$OWNER</st>` <st c="43540">变量替换为你所需的仓库信息。</st> <st c="43575">为了示例，我们将查看</st>
    `<st c="43622">tag-security</st>` <st c="43634">CNCF 仓库：</st>
- en: '[PRE0]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="43814">The JSON return will be somewhat lengthy, so let’s just look at
    a subset of the SBOM we’ve received from</st> <st c="43920">curling (</st>[<st
    c="43929">https://api.github.com/repos/cncf/tag-security/dependency-graph/sbom</st>](https://api.github.com/repos/cncf/tag-security/dependency-graph/sbom)<st
    c="43998">):</st>
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43814">返回的 JSON 会比较长，所以我们只看从</st> <st c="43920">curl 请求中收到的 SBOM 的一部分（</st>[<st
    c="43929">https://api.github.com/repos/cncf/tag-security/dependency-graph/sbom</st>](https://api.github.com/repos/cncf/tag-security/dependency-graph/sbom)<st
    c="43998">）：</st>
- en: '[PRE1]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="44409">At the top of the output, you have some basics about the SBOM,
    including how it was generated, when, and pertinent data licensing.</st> <st c="44541">This
    just tells you about the repo you’ve analyzed at a high level.</st> <st c="44609">The
    next section is</st> `<st c="44629">packages</st>`<st c="44637">, which contains
    all the software dependencies it</st> <st c="44686">includes and</st> <st c="44700">the
    relationships:</st>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="44409">输出的顶部包含了一些关于 SBOM 的基本信息，包括它是如何生成的、何时生成的以及相关的数据许可信息。</st> <st c="44541">这只是告诉你关于你分析的仓库的高层次信息。</st>
    <st c="44609">接下来的部分是</st> `<st c="44629">包</st>`<st c="44637">，它包含了所有的软依赖项以及它们的关系：</st>
- en: '[PRE2]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="45246">Looking at just</st> <st c="45262">one of the packages in the
    SBOM, you have the package information, the version in use, and licensing and
    copyright information.</st> <st c="45391">The MIT license means that the package
    is open source, but the copyright information indicates who has been maintaining
    the package and, essentially, prevents the name of that package from being used
    by another software project.</st> <st c="45620">IBM explains the reason for copyright
    here:</st> [<st c="45664">https://www.ibm.com/topics/open-source</st>](https://www.ibm.com/topics/open-source)<st
    c="45702">. Also included in the output are the label supplier and download location.</st>
    <st c="45778">For these two fields in this example, you’ll find the metadata says</st>
    `<st c="45846">NOASSERTION</st>`<st c="45857">. As explained in the SPDX documentation
    (</st>[<st c="45899">https://spdx.github.io/spdx-spec/v2.3/package-information/</st>](https://spdx.github.io/spdx-spec/v2.3/package-information/)<st
    c="45958">), this should be used in the</st> <st c="45989">following circumstances:</st>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="45246">只看</st> <st c="45262">SBOM 中的一个包，你可以看到包信息、使用的版本、许可和版权信息。</st>
    <st c="45391">MIT 许可证意味着该包是开源的，但版权信息表明谁在维护该包，并且从本质上防止其他软件项目使用该包的名称。</st> <st c="45620">IBM
    在此解释了版权的原因：</st> [<st c="45664">https://www.ibm.com/topics/open-source</st>](https://www.ibm.com/topics/open-source)<st
    c="45702">。输出中还包括了标签供应商和下载位置。</st> <st c="45778">在这个示例中，这两个字段的元数据显示</st> `<st
    c="45846">NOASSERTION</st>`<st c="45857">。正如 SPDX 文档中所解释的那样（</st>[<st c="45899">https://spdx.github.io/spdx-spec/v2.3/package-information/</st>](https://spdx.github.io/spdx-spec/v2.3/package-information/)<st
    c="45958">），这应该在以下情况下使用：</st> <st c="45989">以下情况：</st>
- en: <st c="46013">The SPDX document creator has attempted to but cannot reach a
    reasonable</st> <st c="46087">objective determination</st>
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="46013">SPDX 文档创建者已尝试但无法做出合理的</st> <st c="46087">客观判断</st>
- en: <st c="46110">The SPDX document creator has made no attempt to determine</st>
    <st c="46170">this field</st>
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="46110">SPDX 文档创建者未尝试确定</st> <st c="46170">此字段</st>
- en: <st c="46180">The SPDX document creator has intentionally provided no information
    (no meaning should be implied by</st> <st c="46282">doing so)</st>
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="46180">SPDX 文档创建者有意没有提供任何信息（不应因此而意味着任何含义）</st> <st c="46282">。</st>
- en: <st c="46291">For other packages, these fields may have additional data about
    the package or may also have no assertions.</st> <st c="46400">After the list
    of packages, in the same order are the relationships of the packages to</st> <st
    c="46487">the repository:</st>
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46291">对于其他软件包，这些字段可能包含有关软件包的其他数据，也可能没有任何断言。</st> <st c="46400">在软件包列表之后，按照相同顺序列出软件包与</st>
    <st c="46487">存储库的关系：</st>
- en: '[PRE3]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="46692">This is</st> <st c="46700">pretty straightforward in this example
    as it’s saying the primary element, the tag security repo, depends on the</st>
    `<st c="46814">npm:@babel/helper-validator-identifier</st>` <st c="46852">package
    at version</st> `<st c="46872">7.22.20</st>`<st c="46879">. Additional metadata
    could be supplied by the SBOM creator but hasn’t been in this case.</st> <st c="46969">More
    information on these relationships can be found</st> <st c="47022">here:</st>
    [<st c="47028">https://spdx.github.io/spdx-spec/v2.3/relationships-between-SPDX-elements/#111-relationship-field</st>](https://spdx.github.io/spdx-spec/v2.3/relationships-between-SPDX-elements/#111-relationship-field)<st
    c="47125">.</st>
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46692">在这个例子中，这是</st> <st c="46700">非常直接的，因为它说主要元素，标签安全库，依赖于</st> `<st
    c="46814">npm:@babel/helper-validator-identifier</st>` <st c="46852">软件包版本</st>
    `<st c="46872">7.22.20</st>`<st c="46879">。在这种情况下，SBOM 创建者可以提供更多元数据，但目前没有。</st>
    <st c="46969">有关这些关系的更多信息可以在这里找到：</st> [<st c="47028">https://spdx.github.io/spdx-spec/v2.3/relationships-between-SPDX-elements/#111-relationship-field</st>](https://spdx.github.io/spdx-spec/v2.3/relationships-between-SPDX-elements/#111-relationship-field)<st
    c="47125">。</st>
- en: <st c="47126">Again, an SBOM is a pretty simple tool; it creates a ledger that
    tallies what an application or codebase is composed of.</st> <st c="47248">By
    itself, it doesn’t do much, but as part of a toolchain, it goes a long way to
    understanding your systems and the surface area of risk for vulnerabilities their</st>
    <st c="47411">dependencies present.</st>
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47126">再次提醒，SBOM 是一个非常简单的工具；它创建一个分类账，列出应用程序或代码库的组成部分。</st> <st c="47248">单独使用时，它并没有太多作用，但作为工具链的一部分，它对理解系统及其依赖的漏洞风险表面有很大帮助。</st>
    <st c="47411">依赖。</st>
- en: <st c="47432">Keeping on top of vulnerabilities</st>
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="47432">保持在漏洞的顶端</st>
- en: <st c="47466">Software vulnerabilities</st> <st c="47492">are typically called</st>
    **<st c="47513">Common Vulnerabilities and Exposures</st>**<st c="47549">, or</st>
    **<st c="47554">CVEs</st>**<st c="47558">. The US</st> **<st c="47567">Department
    of Homeland Security</st>** <st c="47598">(</st>**<st c="47600">DHS</st>**<st
    c="47603">) maintains a</st> <st c="47618">public CVE registry (</st>[<st c="47639">https://www.cve.org</st>](https://www.cve.org)<st
    c="47659">) where you can keep abreast of what exposures are known, and this can
    be referenced against your software and applications to check for known CVEs and
    your exposure.</st> <st c="47827">While a platform team can build a bespoke service
    to determine if there are CVEs in the systems, there’s no need to do this as plenty
    of FOSS tools exist to do this</st> <st c="47992">for you.</st>
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47466">软件漏洞</st> <st c="47492">通常称为</st> **<st c="47513">公共漏洞及曝光</st>**<st
    c="47549">，或</st> **<st c="47554">CVEs</st>**<st c="47558">。美国</st> **<st c="47567">国土安全部</st>**
    <st c="47598">(</st>**<st c="47600">DHS</st>**<st c="47603">) 维护公共 CVE 注册表 (</st>[<st
    c="47639">https://www.cve.org</st>](https://www.cve.org)<st c="47659">)，您可以了解已知的曝光情况，并可与您的软件和应用进行对比，检查已知的
    CVE 和您的风险。</st> <st c="47827">尽管平台团队可以构建专门服务来确定系统中是否存在 CVEs，但无需如此，因为存在大量的 FOSS
    工具可以为您完成这项工作。</st>
- en: <st c="48000">You can check for CVEs in GitHub via</st> <st c="48038">the following:</st>
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="48000">您可以通过 GitHub 检查 CVEs，方式如下：</st> <st c="48038">以下：</st>
- en: '**<st c="48052">Dependabot</st>**<st c="48063">, a</st> <st c="48066">GitHub
    bot that scans your repo and raises pull requests to proactively address CVE by
    bumping packages to known</st> <st c="48180">safe versions</st>'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="48052">Dependabot</st>**<st c="48063">，一个</st> <st c="48066">GitHub
    机器人，扫描您的存储库，并提出拉取请求，通过提升软件包到已知的安全版本来积极解决 CVE</st> <st c="48180">问题</st>'
- en: '**<st c="48193">Snyk</st>**<st c="48198">, which</st> <st c="48206">validates
    pull requests to ensure they do not introduce any</st> <st c="48266">new vulnerabilities</st>'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="48193">Snyk</st>**<st c="48198">，验证拉取请求以确保不引入任何</st> <st c="48206">新的漏洞</st>'
- en: '**<st c="48285">CodeQL</st>**<st c="48292">, similar to</st> <st c="48305">Snyk,
    evaluates the content of pull requests to ensure they do not</st> <st c="48372">introduce
    vulnerabilities</st>'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="48285">CodeQL</st>**<st c="48292">，类似于</st> <st c="48305">Snyk，评估拉取请求的内容，确保它们不会</st>
    <st c="48372">引入漏洞</st>'
- en: <st c="48397">For keeping track of vulnerabilities during runtime, regular scanning
    of an image registry such as Harbor or a tool such as Trivy targeting your most
    critical environments (minimally) will help you to keep on top of vulnerabilities
    in</st> <st c="48633">your environment.</st>
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="48397">为了跟踪运行时的漏洞，定期扫描图像注册中心，如 Harbor，或使用 Trivy 等工具，至少针对你最关键的环境进行扫描，将帮助你及时掌握环境中的漏洞。</st>
- en: <st c="48650">Since SBOM generation and vulnerability detection are usually
    part of a CI pipeline, let’s move on to discuss the rest of the pip</st><st c="48780">eline
    and how you can ensure security in your</st> <st c="48827">CI/CD process.</st>
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="48650">由于 SBOM 生成和漏洞检测通常是 CI 管道的一部分，我们接着讨论管道的其余部分，及如何确保你的</st><st c="48780">CI/CD
    过程中的安全性。</st>
- en: <st c="48841">Understanding pipeline security – what you have to consider to
    secure your CI/CD pipelines</st>
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="48841">理解管道安全——你需要考虑的事项，以确保你的 CI/CD 管道的安全</st>
- en: <st c="48932">Assuming the platform team does have influence or jurisdiction
    over GitHub or other source control repositories leveraged by the company, then
    the security of the CI/CD pipelines</st> <st c="49112">end to end becomes a major
    part of the IDP</st> <st c="49155">security posture.</st>
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="48932">假设平台团队对 GitHub 或公司使用的其他源代码控制仓库具有影响力或管辖权，那么 CI/CD 管道的安全性</st> <st
    c="49112">从头到尾将成为身份提供平台（IDP）</st> <st c="49155">安全态势的关键部分。</st>
- en: <st c="49172">Securing your repo</st>
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="49172">保护你的仓库</st>
- en: <st c="49191">The security of the code repository</st> <st c="49227">is an excellent
    example of security to the left.</st> <st c="49277">By enforcing security norms
    early and baking them into the way of working on a project, an organization can
    prevent issues from arising down the line.</st> <st c="49428">A secured repository
    leverages several</st> <st c="49467">best practices:</st>
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="49191">代码仓库的安全性</st> <st c="49227">是“安全向左移”的一个很好的例子。</st> <st c="49277">通过早期强制执行安全规范并将其融入项目的工作方式，组织可以防止问题在后续发生。</st>
    <st c="49428">一个安全的仓库采用了多个</st> <st c="49467">最佳实践：</st>
- en: '**<st c="49482">Write protect</st>** **<st c="49497">main branches</st>**'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49482">写保护</st>** **<st c="49497">主分支</st>**'
- en: <st c="49510">You can use private Git repositories and self-hosted Git if you
    need</st> <st c="49580">extra security</st>
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49510">如果需要额外的安全性，你可以使用私有 Git 仓库和自托管的 Git</st> <st c="49580">来增强安全性</st>
- en: '**<st c="49594">Require</st>** **<st c="49603">signed commits</st>**'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49594">要求</st>** **<st c="49603">签名提交</st>**'
- en: <st c="49617">This validates the identity of the</st> <st c="49653">commit author</st>
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49617">这验证了</st> <st c="49653">提交作者的身份</st>
- en: '**<st c="49666">Pre-commit webhooks</st>**'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49666">提交前 Webhook</st>**'
- en: <st c="49686">Used to validate that no secrets are</st> <st c="49724">accidentally
    committed</st>
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49686">用于验证没有机密被</st> <st c="49724">意外提交</st>
- en: '**<st c="49746">Mandatory</st>** **<st c="49757">peer review</st>**'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49746">强制性</st>** **<st c="49757">同行评审</st>**'
- en: <st c="49768">Including signoff by</st> <st c="49790">code owners</st>
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49768">包括由</st> <st c="49790">代码所有者的签字</st>
- en: '**<st c="49801">Automated validation of</st>** **<st c="49826">pull requests</st>**'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49801">自动验证</st>** **<st c="49826">拉取请求</st>**'
- en: <st c="49839">Dependency</st> <st c="49851">security scans</st>
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49839">依赖</st> <st c="49851">安全扫描</st>
- en: <st c="49865">Tests – should include validation of security</st> <st c="49912">and
    access</st>
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49865">测试——应包括安全性</st> <st c="49912">和访问权限的验证</st>
- en: '**<st c="49922">Continuous scanning</st>**'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="49922">持续扫描</st>**'
- en: <st c="49942">Scans</st> <st c="49949">for accidental commits of passwords,
    tokens, or other</st> <st c="50003">secret data</st>
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="49942">扫描</st> <st c="49949">以防止密码、令牌或其他</st> <st c="50003">机密数据的意外提交</st>
- en: <st c="50014">This list is by no means exhaustive but should start any organization
    off on the best path for ensuring th</st><st c="50121">eir source code is secured
    against bad actors and</st> <st c="50172">human error.</st>
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50014">这份清单并非详尽无遗，但它应该为任何组织提供最佳的起点，以确保其</st><st c="50121">源代码能防止恶意行为者和</st>
    <st c="50172">人为错误的风险。</st>
- en: <st c="50184">Securing GitOps</st>
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="50184">保护 GitOps</st>
- en: <st c="50200">GitOps was covered in</st> <st c="50222">depth in</st> [*<st c="50232">Chapter
    5</st>*](B31164_05.xhtml#_idTextAnchor255)<st c="50241">, so we’ll simply review
    it very briefly due to its importance for platform security.</st> <st c="50327">GitOps
    is loosely defined as an automated process that validates the SOT (Git or other
    version control), which defines the desired state and the actual state match.</st>
    <st c="50492">It does this through one-time deployments or changes but also through
    an automated reconcile loop that actively checks for changes in the desired state
    and acts upon the actual state to make it match, or detects a change in the actual
    state and makes changes on the system to put it back to the desired state.</st>
    <st c="50802">The current largest open source GitOps project is Argo CD, a CD
    tool that is a property of CNCF.</st> <st c="50899">Within Argo CD and other GitOps
    paradigms, there are a few best practices to note for guaranteeing a more</st>
    <st c="51005">secure environment.</st>
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50200">GitOps 已在</st> <st c="50222">第</st> [*<st c="50232">第五章</st>*](B31164_05.xhtml#_idTextAnchor255)<st
    c="50241">中详细介绍，因此由于其对平台安全的重要性，我们将简要回顾一下。</st> <st c="50327">GitOps 被松散地定义为一种自动化过程，用于验证
    SOT（Git 或其他版本控制系统），以确保期望状态与实际状态匹配。</st> <st c="50492">它通过一次性部署或更改来完成此操作，但也通过一个自动化的调和循环，主动检查期望状态的变化，并对实际状态采取行动，使其与期望状态匹配，或检测到实际状态的变化并对系统进行更改，将其恢复到期望状态。</st>
    <st c="50802">当前最大的开源 GitOps 项目是 Argo CD，这是一个属于 CNCF 的 CD 工具。</st> <st c="50899">在
    Argo CD 和其他 GitOps 模式中，有一些最佳实践需要注意，以确保更</st> <st c="51005">安全的环境。</st>
- en: <st c="51024">For GitOps, there are two models of propagating changes; one is
    a push model and the other is a pull model.</st> <st c="51133">In a push model,
    the GitOps system receives changes as pushes to its API endpoint.</st> <st c="51216">It
    goes without saying that those pushes should be properly authenticated, but we’ll
    say it anyway to ensure there’s no confusion.</st> <st c="51347">After receiving
    the push, the GitOps system processes the changes and then takes action.</st>
    <st c="51436">That action is probably promoting new software packages to production,
    but it could also be configuration changes.</st> <st c="51551">However, the source
    of the push is not typically validated with this model, and Argo CD doesn’t have
    a configuration to validate it.</st> <st c="51684">This creates an attack vector
    because if the credentials are compromised, a bad actor can push changes through
    the CD system, which can open up additional</st> <st c="51839">entry points.</st>
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="51024">对于 GitOps，有两种传播更改的模型；一种是推送模型，另一种是拉取模型。</st> <st c="51133">在推送模型中，GitOps
    系统将更改作为推送到其 API 端点的方式接收。</st> <st c="51216">不言而喻，这些推送应当经过适当认证，但我们还是要强调，以确保没有混淆。</st>
    <st c="51347">接收到推送后，GitOps 系统处理更改，然后采取行动。</st> <st c="51436">这个行动可能是将新的软件包推向生产环境，但也可能是配置更改。</st>
    <st c="51551">然而，在这种模型中，推送源通常不会被验证，Argo CD 也没有配置来验证它。</st> <st c="51684">这就创建了一个攻击向量，因为如果凭证被泄露，攻击者可以通过
    CD 系统推送更改，这可能会打开额外的</st> <st c="51839">入口点。</st>
- en: <st c="51852">A pull method is just the opposite.</st> <st c="51889">The GitOps
    system reaches out to the SOT using its authentication and then reads the changes
    in from the endpoint.</st> <st c="52004">Since the source is a known safe source,
    the application of those changes via automation is considered a safe action.</st>
    <st c="52122">This is not to say a pull model isn’t without risks.</st> <st c="52175">Both
    push and pull models can be subjected to MITM attacks, but in a properly secured
    network with the correct cryptographic implementations, these risks should be</st>
    <st c="52339">significantly limited.</st>
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="51852">拉取方法正好相反。</st> <st c="51889">GitOps 系统使用其认证机制访问 SOT，然后从端点读取更改。</st>
    <st c="52004">由于源是已知的安全源，通过自动化应用这些更改被认为是一个安全的操作。</st> <st c="52122">这并不是说拉取模型没有风险。</st>
    <st c="52175">推送和拉取模型都可能遭受 MITM 攻击，但在正确安全的网络和适当的加密实现下，这些风险应该</st> <st c="52339">被大大限制。</st>
- en: <st c="52361">When your GitOps system is taking action, it should do so in the
    most secure way.</st> <st c="52444">We’ve already discussed the uses and value
    of a service account, so it should come as no surprise that your GitOps systems
    should be expected to leverage service accounts.</st> <st c="52616">Those service
    accounts should also have the minimum amount of access possible while still being
    able to accomplish the goals of the GitOps implementation in</st> <st c="52773">the
    platform.</st>
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52361">当你的 GitOps 系统采取行动时，它应该以最安全的方式进行。</st> <st c="52444">我们已经讨论过服务账户的使用和价值，因此你应该不会感到惊讶，GitOps
    系统应该利用服务账户。</st> <st c="52616">这些服务账户应当只具备完成 GitOps 实施目标所需的最小访问权限，</st> <st c="52773">同时仍能在平台上执行任务。</st>
- en: <st c="52786">Security and</st> <st c="52800">GitOps may be an important factor
    in selecting the GitOps working model for your IDP, and we hope these guidelines
    are useful when building out GitOps for</st> <st c="52955">your organization.</st>
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52786">安全性和</st> <st c="52800">GitOps 可能是选择适合你 IDP 的 GitOps 工作模式时一个重要的因素，我们希望这些指南在为你的组织构建
    GitOps 时能发挥作用。</st>
- en: <st c="52973">Now that we’ve covered securing the delivery of the application,
    let’s build off</st> <st c="53054">our secure foundation and take a look at</st>
    <st c="53096">application security.</st>
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52973">现在我们已经覆盖了应用交付的安全性，让我们在</st> <st c="53054">安全基础上继续深入，看看</st> <st
    c="53096">应用安全。</st>
- en: <st c="53117">Understanding application security – setting and enforcing policies</st>
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="54011">理解应用安全性——设定并执行政策</st>
- en: <st c="53185">Security is a moving target, and as technology advances, attack
    vectors increase and attackers become more and more sophisticated.</st> <st c="53317">Due
    to this, the process and ceremonies the team maintains around security are even
    more important than technology itself.</st> <st c="53440">This is not because
    technology doesn’t matter but because good discipline and the habit of a strong
    process allow technologies to plug in and out as the</st> <st c="53593">industry
    evolves.</st>
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="53185">安全性是一个动态目标，随着技术的进步，攻击方式增多，攻击者变得越来越复杂。</st> <st c="53317">因此，团队在安全方面保持的流程和仪式比技术本身还要重要。</st>
    <st c="53440">这并不是因为技术不重要，而是因为良好的纪律和强有力的流程习惯能够使技术根据行业的发展灵活地替换和调整。</st>
- en: <st c="53610">One aspect of good discipline for security is maintaining accurate
    documentation and architectural diagrams.</st> <st c="53720">If a significant
    change is made to the application architecture, then that can change the risk
    surface areas and attack vectors.</st> <st c="53849">For example, an undocumented
    or underdocumented dependency on a library or a network port could result in expos</st><st
    c="53960">ure to a vulnerability that may be more difficult</st> <st c="54011">to
    determine.</st>
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="53610">良好纪律的一部分是维护准确的文档和架构图。</st> <st c="53720">如果应用架构发生了重大变更，那么这可能会改变风险面和攻击向量。</st>
    <st c="53849">例如，对一个库或网络端口的未记录或记录不全的依赖，可能导致暴露在一个更难以识别的漏洞面前。</st><st c="53960">从而增加发现的难度。</st>
- en: <st c="54024">Foundational application security</st>
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="54024">基础应用安全</st>
- en: <st c="54058">In</st> [*<st c="54062">Chapter 5</st>*](B31164_05.xhtml#_idTextAnchor255)<st
    c="54071">, we discussed</st> <st c="54085">building and delivering images and
    artifacts.</st> <st c="54132">The described method of semantic versioning for
    an application represents a best practice for creating software but not for using
    it.</st> <st c="54266">When a release is built using Git for source control for
    an application, the release, in addition to a human-defined version, actually
    gets a SHA-256 signature thanks to the modern functionality of Git.</st> <st c="54469">Unlike
    the version numbers, which can be reused, the</st> **<st c="54522">Secure Hash
    Algorithm</st>** <st c="54543">(</st>**<st c="54545">SHA</st>**<st c="54548">)
    is a</st> <st c="54555">signature for that exact build of the software and it
    is always unique.</st> <st c="54628">As such, it’s important for security best
    practices to use the full SHA address for the images used by the platform as opposed
    to the</st> <st c="54762">image version.</st>
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54058">在</st> [*<st c="54062">第5章</st>*](B31164_05.xhtml#_idTextAnchor255)<st
    c="54071">中，我们讨论了</st> <st c="54085">构建和交付镜像及工件的方法。</st> <st c="54132">所描述的应用程序语义版本方法代表了创建软件的最佳实践，但不适用于其使用。</st>
    <st c="54266">当使用Git进行源代码控制构建发布时，发布除了一个人为定义的版本外，实际上还会获得一个SHA-256签名，这得益于Git的现代功能。</st>
    <st c="54469">与可以重复使用的版本号不同，**<st c="54522">安全哈希算法</st>** <st c="54543">(</st>**<st
    c="54545">SHA</st>**<st c="54548">)是该软件确切构建的签名，并且它始终是唯一的。</st> <st c="54555">因此，对于安全最佳实践来说，使用平台所使用的镜像的完整SHA地址，而不是</st>
    <st c="54762">镜像版本，是非常重要的。</st>
- en: <st c="54776">Here’s an example of the</st> `<st c="54802">docker pull</st>`
    <st c="54813">command using the image version</st> <st c="54846">and SHA:</st>
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54776">以下是使用镜像版本</st> `<st c="54802">docker pull</st>` <st c="54813">命令的示例，以及SHA：</st>
- en: '[PRE4]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: <st c="54964">In addition to image versions, there is another identification
    method known as</st> `<st c="55185">latest</st>`<st c="55191">, but they can be
    pretty much anything since there are only industry norms and no technical limitations.</st>
    <st c="55296">Since a tag can be later re-pointed to any release image, it’s not
    a secure way to pull in a dependency.</st> <st c="55401">Risks of using floating
    tags</st> <st c="55429">include</st> <st c="55438">the following:</st>
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54964">除了镜像版本，还有一种称为</st> `<st c="55185">latest</st>`<st c="55191">的标识方法，但它们几乎可以是任何东西，因为只有行业规范，没有技术限制。</st>
    <st c="55296">由于标签可以稍后重新指向任何发布镜像，因此这不是拉取依赖项的安全方法。</st> <st c="55401">使用浮动标签的风险</st>
    <st c="55429">包括</st> <st c="55438">以下几点：</st>
- en: <st c="55452">Unintentional</st> <st c="55467">and untested/vetted updates to</st>
    <st c="55498">application components.</st>
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="55452">无意的</st> <st c="55467">和未经测试/审查的更新至</st> <st c="55498">应用程序组件。</st>
- en: <st c="55521">Limits the ability to immediately know what’s running where</st>
    <st c="55582">and when.</st>
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="55521">限制了立刻了解正在运行的内容以及运行地点的能力</st> <st c="55582">和时间。</st>
- en: <st c="55591">Unvetted external software packages can automatically propagate,
    creating exploitable backdoors for bad actors.</st> <st c="55704">This is common
    if a Pod restarts and</st> `<st c="55741">latest</st>` <st c="55747">is used in
    the Dockerfile for</st> <st c="55778">the Pod.</st>
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="55591">未经审查的外部软件包可能会自动传播，为恶意行为者创建可利用的后门。</st> <st c="55704">如果一个Pod重启并且</st>
    `<st c="55741">latest</st>` <st c="55747">被用于该Pod的Dockerfile中</st> <st c="55778">，这种情况是常见的。</st>
- en: <st c="55786">There are a few reasons to use a floating tag or to use a semantic
    version release tag instead of a precise SHA.</st> <st c="55900">It’s easier to
    test the continued supportability of a dependency if you’re testing regularly
    against the latest build.</st> <st c="56019">The flexibility that comes from always
    using the latest version of a known good package may be desirable in a development
    environment and then could be pinned to a precise version tag or SHA when moving
    to production.</st> <st c="56237">Validating against floating tags can allow a
    team to be more responsive to security vulnerabilities as well, so a risk assessment
    of each dependency and a policy should be set to determine what the norms of the
    application</st> <st c="56460">will be.</st>
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="55786">有几个原因可以选择使用浮动标签，或者使用语义版本发布标签，而不是精确的SHA。</st> <st c="55900">如果你定期测试最新版本的构建，测试依赖项的持续可支持性会更容易。</st>
    <st c="56019">在开发环境中，始终使用已知良好包的最新版本所带来的灵活性可能是需要的，然后在转向生产环境时，可以将其固定到精确的版本标签或SHA。</st>
    <st c="56237">针对浮动标签进行验证，还可以使团队在应对安全漏洞时更加灵活，因此应该对每个依赖项进行风险评估，并制定政策以确定应用程序的规范</st>
    <st c="56460">是什么。</st>
- en: <st c="56468">A typical way of setting a policy would be to use tools such as
    open source policy agents to catch any deviation from the defined norms and prevent
    those deviations from entering restricted</st> <st c="56659">environments.</st>
    **<st c="56673">Open Policy Agent</st>** <st c="56690">(</st>**<st c="56692">OPA</st>**<st
    c="56695">) and</st> **<st c="56702">Kyverno</st>** <st c="56709">are both open
    source options that are free to use.</st> <st c="56761">For both tools, you leverage</st>
    **<st c="56790">Policy as Code</st>** <st c="56804">(</st>**<st c="56806">PaC</st>**<st
    c="56809">), which is</st> <st c="56821">easily reviewed and kept in</st> <st
    c="56850">source control.</st>
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56468">设置策略的典型方式是使用开源策略代理等工具来捕捉任何偏离已定义规范的行为，并防止这些偏离进入受限</st> <st c="56659">环境。</st>
    **<st c="56673">开放策略代理</st>** <st c="56690">(</st>**<st c="56692">OPA</st>**<st
    c="56695">)和</st> **<st c="56702">Kyverno</st>** <st c="56709">都是免费使用的开源选项。</st>
    <st c="56761">对于这两个工具，你可以利用</st> **<st c="56790">代码即策略</st>** <st c="56804">(</st>**<st
    c="56806">PaC</st>**<st c="56809">)，它可以方便地审查并保存在</st> <st c="56850">源代码管理中。</st>
- en: <st c="56865">OPA and Kyverno are two examples of OSS that might be leveraged
    for</st> <st c="56933">security, but they’re not the only tools in the open</st>
    <st c="56987">source ecosystem.</st>
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56865">OPA和Kyverno是两个可以用于安全的开源软件示例，但它们并不是开源生态系统中唯一的工具。</st>
- en: <st c="57004">FOSS for platform security and how to use it</st>
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="57004">用于平台安全的FOSS及其使用方式</st>
- en: <st c="57049">FOSS projects, both</st> <st c="57070">within and outside of the
    Linux Foundation or CNCF, exist in great abundance to help you manage the security
    posture of your platform.</st> <st c="57205">Previously mentioned projects such
    as Harbor and Trivy are two among a</st> <st c="57276">large number.</st>
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57049">FOSS项目，无论是在Linux基金会还是CNCF内部外部，都有大量的项目可以帮助你管理平台的安全态势。</st> <st
    c="57205">前面提到的项目如Harbor和Trivy只是其中的两个。</st> <st c="57276">它们只是众多项目中的一部分。</st>
- en: <st c="57289">When comparing your security needs, such as ensuring the OWASP</st>
    *<st c="57353">Top Ten</st>* <st c="57360">is addressed for available open sourc</st><st
    c="57398">e projects, you’ll find a tool to help you address each item on</st>
    <st c="57463">the list.</st>
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57289">在比较你的安全需求时，比如确保已涵盖OWASP</st> *<st c="57353">十大</st>* <st c="57360">针对可用的开源项目，你会发现有工具可以帮助你解决列表上的每一项。</st>
- en: <st c="57472">Patterns and tools for managing security</st>
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="57472">管理安全的模式与工具</st>
- en: <st c="57513">The platform can only do so much to manage the security posture
    of the company.</st> <st c="57594">As such, it needs to provide a strong foundation
    for security by providing useful integrations, taking a security-first approach,
    and, as we discussed in previous chapters, being open to contributions from the
    developer community it supports.</st> <st c="57837">When you’ve determined what
    levels of compliance are necessary, then you can start looking at what mistakes
    might lead to a failure in your compliance and security posture by conducting
    process-based security reviews and technology-based</st> <st c="58075">security
    reviews:</st>
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57513">平台的作用仅限于管理公司安全态势。</st> <st c="57594">因此，它需要通过提供有用的集成、采取安全优先的策略，并且如前几章所讨论的，保持对支持的开发者社区的贡献开放，来为安全提供坚实的基础。</st>
    <st c="57837">当你确定了所需的合规级别后，就可以开始查看哪些错误可能导致合规性和安全态势的失败，通过进行基于流程的安全审查和基于技术的</st>
    <st c="58075">安全审查：</st>
- en: <st c="58092">A</st> **<st c="58095">process-based review</st>** <st c="58115">would</st>
    <st c="58121">mean that a person is reviewing and assessing compliance and security.</st>
    <st c="58193">This could be an audit done to seek certification, or it could be
    an internal review conducted regularly to ensure best practices are still in effect
    and guidelines are up</st> <st c="58365">to date.</st>
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="58092">一个</st> **<st c="58095">基于流程的审查</st>** <st c="58115">意味着有人在审查和评估合规性与安全性。</st>
    <st c="58193">这可能是为了寻求认证而进行的审计，也可能是定期进行的内部审查，以确保最佳实践仍在实施，并且指南是最新的。</st> <st c="58365">。</st>
- en: <st c="58373">A</st> **<st c="58376">technology-based review</st>** <st c="58399">would</st>
    <st c="58406">leverage software to automatically and likely continuously review
    and validate security and compliance.</st> <st c="58510">SBOMs and CVE scanning
    are examples of technology-based reviews of software builds, and policy engines
    such as OPA or Kyverno can help with the automated governance of the IDP.</st>
    <st c="58687">Technological solutions can also go the additional step of helping
    to detect anomalies and events that may represent a security incident.</st> <st
    c="58825">The CNCF project</st> **<st c="58842">Falco</st>** <st c="58847">(</st>[<st
    c="58849">https://falco.org</st>](https://falco.org)<st c="58866">) does this.</st>
    <st c="58880">It has several key</st> <st c="58898">features, but</st> <st c="58913">importantly,
    it detects if access levels are escalated, which may represent a bad security
    and compliance posture or could represent a bad actor who has gained access to</st>
    <st c="59083">the system.</st>
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="58373">一个</st> **<st c="58376">基于技术的审查</st>** <st c="58399">将</st> <st
    c="58406">利用软件自动并可能持续地审查和验证安全性与合规性。</st> <st c="58510">SBOM和CVE扫描是基于技术的软件构建审查的例子，像OPA或Kyverno这样的策略引擎可以帮助自动治理IDP。</st>
    <st c="58687">技术解决方案还可以进一步帮助检测可能代表安全事件的异常和事件。</st> <st c="58825">CNCF项目</st> **<st
    c="58842">Falco</st>** <st c="58847">(</st>[<st c="58849">https://falco.org</st>](https://falco.org)<st
    c="58866">) 就是这样做的。</st> <st c="58880">它有几个关键的</st> <st c="58898">特点，但</st> <st
    c="58913">重要的是，它能检测是否存在权限提升，这可能代表着不良的安全和合规态势，或者可能代表一个已经获得系统访问权限的不法分子。</st> <st
    c="59083">该系统的安全性可能已经被破坏。</st>
- en: <st c="59094">For any company looking to demonstrate a level of security and
    compliance in accordance with a governing framework, that compliance framework
    will help to define the frequency of the process execution and pair</st> <st c="59305">that
    guidance with regular audits to help ensure the platform</st> <st c="59367">isn’t
    slipping.</st>
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="59094">任何公司如果希望展示符合某一治理框架的安全性和合规性，那么该合规框架将有助于定义过程执行的频率，并将</st> <st c="59305">这些指导与定期审计相结合，以帮助确保平台</st>
    <st c="59367">不会出现任何问题。</st>
- en: <st c="59382">What would our fictitious company do?</st>
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="59382">我们的虚构公司会怎么做呢？</st>
- en: <st c="59420">Our fictitious company Financial One ACME is a long-standing financial
    institution that has been working on its cloud-native transformation in order
    to remain competitive with younger Fintech companies.</st> <st c="59624">As a
    financial institution, they have an inherent goal to minimize risk.</st> <st c="59697">They
    are also subject to regulatory restrictions, including</st> <st c="59757">PCI
    DSS.</st>
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="59420">我们的虚构公司“Financial One ACME”是一家长期存在的金融机构，正在进行云原生转型，以便在与年轻的金融科技公司竞争中保持竞争力。</st>
    <st c="59624">作为一家金融机构，他们有一个固有的目标——最小化风险。</st> <st c="59697">他们还受到监管限制，包括</st>
    <st c="59757">PCI DSS。</st>
- en: <st c="59765">Additionally, as they are a bank and must protect both monetary
    assets and customer data, they have modeled potential threats to their systems.</st>
    <st c="59910">Out of a long list of physical and non-physical risks, many security
    action items came to the platform team to be addressed during the implementation
    of the IDP.</st> <st c="60072">These items have likely been addressed already,
    but since this IDP is a greenfield application (or brand new), it needs to address
    the compliance</st> <st c="60218">requirements afresh.</st>
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="59765">此外，由于他们是一家银行，必须保护货币资产和客户数据，他们已经建模了可能威胁到其系统的潜在风险。</st> <st c="59910">在众多物理和非物理风险中，许多安全行动项目被交给平台团队，在IDP的实施过程中解决。</st>
    <st c="60072">这些问题可能已经得到解决，但由于这个IDP是一个全新的应用程序（或者是一个全新的项目），它需要重新处理合规性</st> <st
    c="60218">要求。</st>
- en: <st c="60238">One item that came to the platform team for implementation was
    guaranteeing that all new versions of their software bundle were</st> <st c="60367">properly
    secured.</st>
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60238">平台团队需要实施的一个事项是确保他们所有新版本的软件包都已</st> <st c="60367">妥善安全。</st>
- en: <st c="60384">Properly secured means</st> <st c="60408">the following:</st>
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60384">妥善安全意味着</st> <st c="60408">以下内容：</st>
- en: <st c="60422">Signed</st> <st c="60430">and validated</st>
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60422">签名</st> <st c="60430">并验证</st>
- en: <st c="60443">Stored securely</st>
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60443">安全存储</st>
- en: <st c="60459">Retrieved securely</st>
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60459">安全地检索</st>
- en: <st c="60478">Strict</st> <st c="60486">change control</st>
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60478">严格的</st> <st c="60486">变更控制</st>
- en: <st c="60500">Audit trail</st>
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60500">审计跟踪</st>
- en: <st c="60512">The platform team took the steps previously outlined to secure
    their repository and their GitOps system, but those weren’t enough to satisfy
    this requirement.</st> <st c="60672">For this reason, the platform team decided
    to leverage an internal image registry where all software commits and packages
    are signed.</st> <st c="60806">The CI/CD pipelines create images based on those
    artifacts and place them in the private registry, where platform applications</st>
    <st c="60933">consume them.</st>
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60512">平台团队采取了之前概述的步骤来确保他们的代码库和GitOps系统的安全，但这些措施不足以满足这一要求。</st> <st c="60672">因此，平台团队决定利用一个内部镜像注册表，其中所有软件提交和包都会进行签名。</st>
    <st c="60806">CI/CD管道基于这些工件创建镜像，并将它们放入私有注册表中，平台应用程序</st> <st c="60933">从中获取镜像。</st>
- en: <st c="60946">The image registry selection would look like one of a</st> <st
    c="61001">few options:</st>
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60946">镜像注册表的选择可能看起来像是以下几种选项之一：</st>
- en: <st c="61013">Pay for an image registry vendor that helps them maintain their
    security posture via scanning and provides them with</st> <st c="61130">trusted</st>
    **<st c="61139">Universal Base</st>** **<st c="61154">Images</st>** <st c="61160">(</st>**<st
    c="61162">UBIs</st>**<st c="61166">)</st>
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="61013">支付给一个镜像注册表供应商，帮助他们通过扫描来维持安全姿态，并为他们提供</st> <st c="61130">可信</st>
    **<st c="61139">通用基础</st>** **<st c="61154">镜像</st>** <st c="61160">(</st>**<st
    c="61162">UBI</st>**<st c="61166">)</st>
- en: <st c="61168">Host their own image registry such as</st> <st c="61206">Harbor,
    a CNCF-graduated project with an image registry that</st> *<st c="61267">signs</st>*<st
    c="61272">,</st> *<st c="61274">stores</st>*<st c="61280">, and</st> *<st c="61286">scans</st>*
    <st c="61291">container images (</st>[<st c="61310">https://goharbor.io/</st>](https://goharbor.io/)<st
    c="61331">) that they would populate with</st> <st c="61364">approved images</st>
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="61168">托管他们自己的镜像注册表，如</st> <st c="61206">Harbor，这是一个CNCF毕业项目，拥有一个镜像注册表，该注册表</st>
    *<st c="61267">签名</st>*<st c="61272">、</st> *<st c="61274">存储</st>*<st c="61280">和</st>
    *<st c="61286">扫描</st>* <st c="61291">容器镜像（</st>[<st c="61310">https://goharbor.io/</st>](https://goharbor.io/)<st
    c="61331">），并且它们将被填充为</st> <st c="61364">已批准的镜像</st>
- en: <st c="61379">If they are using OpenShift, there is already an image registry
    as part of the cluster topology, and the platform team would supplement it with</st>
    <st c="61524">scanning tools</st>
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="61379">如果他们使用的是OpenShift，那么集群拓扑中已经有一个镜像注册表，平台团队会用</st> <st c="61524">扫描工具</st>
    来补充它。
- en: '<st c="61538">They’ve further added an admission webhook to ensure that no
    container is based on an unapproved image.</st> <st c="61643">This use case is
    very straightforward: a validating webhook checks to see if the container image
    matches the defined expectations.</st> <st c="61774">If not, the workload is rejected
    and the Pod will not start.</st> <st c="61835">While the team could build their
    own admission webhook service, they would likely choose OPA.</st> <st c="61929">While
    it is not the only open source project to provide this functionality, it is the
    only graduated project, making it the safest choice to use</st> <st c="62074">in
    production.</st>'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="61538">他们进一步添加了一个准入webhook，以确保没有容器基于未批准的镜像。</st> <st c="61643">这个用例非常简单：一个验证webhook检查容器镜像是否符合定义的预期。</st>
    <st c="61774">如果不符合，工作负载将被拒绝，Pod将无法启动。</st> <st c="61835">虽然团队可以自己构建一个准入webhook服务，但他们可能会选择OPA。</st>
    <st c="61929">虽然它不是唯一提供此功能的开源项目，但它是唯一一个毕业项目，使其成为生产环境中最安全的选择。</st> <st c="62074">在生产中使用。</st>
- en: <st c="62088">Sysdig</st> <st c="62095">made an open source version of such
    a webhook that also mutates or modifies Pod configurations to have their images
    use the full image SHA versus a release tag, which can be found here:</st> [<st
    c="62282">https://github.com/sysdiglabs/opa-image-scanner</st>](https://github.com/sysdiglabs/opa-image-scanner)<st
    c="62329">. Both of these webhooks represent absolute best practices for security
    and compliance and are a smart move for an easy security win for any platform</st>
    <st c="62479">engineering team.</st>
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="62088">Sysdig</st> <st c="62095">创建了一个开源版本的此类webhook，它还会更改或修改Pod配置，以便其镜像使用完整的镜像SHA，而不是发布标签，详细信息见：</st>
    [<st c="62282">https://github.com/sysdiglabs/opa-image-scanner</st>](https://github.com/sysdiglabs/opa-image-scanner)<st
    c="62329">。这两个webhook都代表了安全性和合规性的最佳实践，是任何平台</st> <st c="62479">工程团队在安全方面轻松获胜的明智之选。</st>
- en: <st c="62496">However, as important as these restrictions are, they can negatively
    impact innovation by removing flexibility from the IDP capabilities.</st> <st
    c="62635">For this reason, the platform team has decided to limit these restrictions
    to the production environment.</st> <st c="62741">Doing so allows the development
    teams to experiment in their dev environments without risking anything that shouldn’t
    accidentally make it into</st> <st c="62885">production environments.</st>
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="62496">然而，尽管这些限制至关重要，它们可能通过限制 IDP 能力的灵活性而对创新产生负面影响。</st> <st c="62635">因此，平台团队决定将这些限制限制在生产环境中。</st>
    <st c="62741">这样做允许开发团队在其开发环境中进行实验，而无需担心任何不应意外进入</st> <st c="62885">生产环境。</st>
- en: <st c="62909">One strategy to manage dependencies where you don’t want to pull
    source code from untrusted locations is to use vendoring.</st> <st c="63033">Vendoring
    is the process of actually copying the code from the open source library you’d
    otherwise import into your code base.</st> <st c="63160">During vendoring, changes
    may be made to that code to</st> <st c="63213">make it more secure, such as enabling</st>
    **<st c="63252">Federal Information Processing Standards</st>** <st c="63292">(</st>**<st
    c="63294">FIPS</st>**<st c="63298">) mode.</st> <st c="63307">FIPS compliance
    specifies the strength of the encryption of</st> <st c="63367">data over</st>
    **<st c="63377">Secure Socket Layer</st>** <st c="63396">(</st>**<st c="63398">SSL</st>**<st
    c="63401">) and is generally a</st> <st c="63423">best practice.</st>
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="62909">管理依赖项的一种策略是使用供应。</st> <st c="63033">供应是将代码从你原本会导入代码库的开源库复制过来的过程。</st>
    <st c="63160">在供应过程中，可能会对该代码进行更改以</st> <st c="63213">增强其安全性，例如启用</st> **<st c="63252">联邦信息处理标准</st>**
    <st c="63292">(</st>**<st c="63294">FIPS</st>**<st c="63298">) 模式。</st> <st c="63307">FIPS
    合规性规定了数据通过</st> <st c="63367">安全套接层</st> **<st c="63377">(</st>**<st c="63398">SSL</st>**<st
    c="63401">) 的加密强度，通常是最佳实践。</st>
- en: <st c="63437">Another action item that might come to the platform team would
    be to be the first point of contact in the event of a suspected security breach.</st>
    <st c="63582">This means having a way to immediately react to reports of an issue.</st>
    <st c="63651">Since the platform is responsible for so much of the company infrastructure,
    from development to production capabilities, the team will need to be able to
    quickly engage in order to mitigate damages caused by a</st> <st c="63862">bad
    actor.</st>
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="63437">平台团队可能会有的另一个行动项目是在疑似安全漏洞事件中成为第一联系点。</st> <st c="63582">这意味着需要立即对问题报告做出反应。</st>
    <st c="63651">由于平台对公司基础架构的责任很大，从开发到生产能力，团队需要能够迅速响应，以减轻</st> <st c="63862">恶意行为者造成的损害。</st>
- en: <st c="63872">Such</st> **<st c="63878">IR plans</st>** <st c="63886">(</st>**<st
    c="63888">IRPs</st>**<st c="63892">) should</st> <st c="63901">be crafted and
    regularly tested.</st> <st c="63935">Similar to a</st> **<st c="63948">disaster
    recovery plan</st>** <st c="63970">(</st>**<st c="63972">DRP</st>**<st c="63975">),
    regular</st> <st c="63986">testing of the plan and the ability to respond to a
    real security breach can</st> <st c="64064">mitigate damages.</st>
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="63872">应当制定并定期测试这样的</st> **<st c="63878">IR 计划</st>** <st c="63886">(</st>**<st
    c="63888">IRPs</st>**<st c="63892">)。</st> <st c="63901">与</st> **<st c="63948">灾难恢复计划</st>**
    <st c="63970">(</st>**<st c="63972">DRP</st>**<st c="63975">) 类似，定期</st> <st c="63986">测试计划及其响应真实安全漏洞的能力可以</st>
    <st c="64064">减轻损害。</st>
- en: <st c="64081">Early detection is another key capability required by the platform.</st>
    <st c="64150">Analysis of audit logging is key to understanding who got in (or
    whose credentials were compromised) and what was done once the bad actor gained
    access to the system.</st> <st c="64317">Audit logs can also be used for proactive
    detection as they can be leveraged</st> <st c="64393">by</st> **<st c="64397">machine
    learning</st>** <st c="64413">(</st>**<st c="64415">ML</st>**<st c="64417">) models
    for anomaly detection, which can highlight a security breach faster than a human
    can find it.</st> <st c="64521">Additionally, using a highly observable cloud-native
    networking solution such as Cilium can help to identify and track bad actors.</st>
    <st c="64652">While some hardcoded observability implementations can attain the
    same outcomes, it does need to be manually kept and maintained, whereas ML models
    may have some more inherent flexibility due to their</st> <st c="64853">self-learning
    nature.</st>
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="64081">早期检测是该平台所需的另一个关键能力。</st> <st c="64150">对审计日志的分析是理解谁进入了系统（或谁的凭证被泄露）以及恶意行为者在获得访问权限后进行了什么操作的关键。</st>
    <st c="64317">审计日志还可以用于主动检测，因为它们可以被</st> <st c="64393">用于</st> **<st c="64397">机器学习</st>**
    <st c="64413">(</st>**<st c="64415">ML</st>**<st c="64417">)模型进行异常检测，这可以比人类更快地发现安全漏洞。</st>
    <st c="64521">此外，使用像Cilium这样具有高度可观察性的云原生网络解决方案可以帮助识别和追踪恶意行为者。</st> <st c="64652">尽管一些硬编码的可观察性实现能够达到相同的结果，但它们需要手动维护，而机器学习模型由于其</st>
    <st c="64853">自学习的特性，可能具有更多的内在灵活性。</st>
- en: <st c="64874">Neither method is perfect, so when determining how to implement
    automation around threat detection, an organization will have to make a judgment
    call on benefits, trade-offs, and team capabilities.</st> <st c="65073">Choosing
    the path forward here for our fictitious company would be a build-versus-buy conversation
    that could very well result in a buy decision due to the size and complexity of
    the task and the highly secured environment they’re meant</st> <st c="65310">to
    maintain.</st>
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="64874">两种方法都不是完美的，因此，在决定如何围绕威胁检测实现自动化时，组织需要对收益、权衡和团队能力做出判断。</st> <st
    c="65073">在我们虚构公司的情况下，选择前进的路径将是一个关于“自建与购买”的讨论，这可能会因为任务的规模和复杂性以及它们所需维护的高度安全环境而最终做出购买的决策。</st>
    <st c="65310">为了维持这一点。</st>
- en: <st c="65322">Speaking of that highly secured environment, in order to demonstrate
    to an auditor the PCI compliance of the organization with the new IDP, our platform
    team will need to be able to produce a drawing of the network architecture and
    explain the contents of that drawing to</st> <st c="65595">the auditor.</st>
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="65322">谈到这个高度安全的环境，为了向审计员展示组织使用新IDP的PCI合规性，我们的平台团队需要能够提供网络架构图，并向</st>
    <st c="65595">审计员解释该图的内容。</st>
- en: <st c="65607">Any compliance auditor will want to verify that the dev and production
    environments are sufficiently isolated, whether that’s physically true or via</st>
    <st c="65757">networking implementations.</st>
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="65607">任何合规性审计员都希望验证开发和生产环境是否得到充分隔离，无论这是否在物理上得到实现，或者通过</st> <st c="65757">网络实现来完成。</st>
- en: <st c="65784">Finally, while the platform team at Financial One ACME will be
    making sure they follow all known best practices for build time, they’ll implement
    tools to ensure their runtime is equally as secured.</st> <st c="65984">It’s very
    likely that the only users with permissions to create Pods in the production environment
    would be those service account users, ensuring that Git remains the SOT, and GitOps
    can be leveraged to codify the platform’s</st> <st c="66209">security posture.</st>
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="65784">最后，虽然Financial One ACME平台团队将确保他们遵循所有已知的构建时最佳实践，但他们也会实施工具，确保他们的运行时同样安全。</st>
    <st c="65984">很可能，生产环境中唯一有权限创建Pod的用户将是那些服务帐户用户，确保Git保持为SOT，并且可以利用GitOps来规范平台的</st>
    <st c="66209">安全态势。</st>
- en: <st c="66226">These example responses cover only a subset of the security and
    compliance that would be required for a financial institution such as a bank;
    they’re also likely to be subjected to additional government regulations, which
    would require even further security and compliance risk mitigations.</st> <st
    c="66518">Just as your team will need to, our fictitious company would need to
    address every line item within the compliance frameworks they’re subject to and,
    most</st> <st c="66673">importantly, create collaborative ceremonies to maintain
    the best security</st> <st c="66748">they can.</st>
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="66226">这些示例响应仅涵盖了金融机构（如银行）所需的一部分安全性和合规性要求；它们还可能会受到额外政府法规的约束，这将需要进一步的安全性和合规性风险缓解措施。</st>
    <st c="66518">正如您的团队所需要的，我们虚构的公司也需要解决其所遵循的合规框架中的每一项条目，并且最</st> <st c="66673">重要的是，创建协作仪式来维持最佳安全性</st>
    <st c="66748">他们可以达到的水平。</st>
- en: <st c="66757">Summary</st>
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="66757">总结</st>
- en: <st c="66765">To conclude, security and compliance is a vast space with many
    experts who have published dedicated works on the subject.</st> <st c="66888">This
    chapter should not be taken as being all-encompassing but should have you started
    down the correct path to define and execute a cybersecurity strategy for your
    IDP.</st> <st c="67058">It’s important to know how to keep track of vulnerabilities,
    and have ceremonies and tooling set up within your organization to catch and surface
    vulnerabilities in the IDP and the applications</st> <st c="67252">it hosts.</st>
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="66765">总之，安全性和合规性是一个广阔的领域，许多专家已经发布了专门的著作。</st> <st c="66888">本章不应被视为包罗万象，但应帮助您迈出正确的步伐，为您的IDP定义并执行网络安全策略。</st>
    <st c="67058">了解如何追踪漏洞并在您的组织中建立仪式和工具，以便捕捉和发现IDP及其所承载的应用程序中的漏洞是非常重要的。</st> <st
    c="67252">它所托管的应用程序。</st>
- en: <st c="67261">While security and flexibility are not natural partners, smart
    implementations that focus on critical security needs without impeding innovation
    are the key to providing the developers with the tools they need to be successful
    and the protections they need to</st> <st c="67522">be secure.</st>
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67261">尽管安全性和灵活性并非天生是合作伙伴，但专注于关键安全需求而不阻碍创新的智能实现是为开发人员提供他们成功所需工具和他们所需保护的关键。</st>
    <st c="67522">保持安全。</st>
- en: <st c="67532">Remember – the cost of a security incident can be astronomically
    expensive and could even result in bankruptcy or trials.</st> <st c="67655">While
    log storage and other security requirements can cost, those costs can be managed
    and will never cost more than failing to secure your systems.</st> <st c="67804">For
    more on how to manage the costs of your platform, let’s continue to</st> [*<st
    c="67876">Chapter 8</st>*](B31164_08.xhtml#_idTextAnchor430)<st c="67885">.</st>
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67532">请记住——安全事件的成本可能极其昂贵，甚至可能导致破产或诉讼。</st> <st c="67655">虽然日志存储和其他安全要求可能需要费用，但这些费用是可以管理的，并且永远不会比未能保护系统所带来的成本更高。</st>
    <st c="67804">关于如何管理平台成本的更多信息，我们继续阅读</st> [*<st c="67876">第8章</st>*](B31164_08.xhtml#_idTextAnchor430)<st
    c="67885">。</st>
