- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Overcoming Common Pitfalls in DevOps Release Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 克服 DevOps 发布管理中的常见陷阱
- en: There is a widespread misunderstanding regarding the right approach to DevOps
    release management. The truth is that one solution may be effective for one particular
    customer, but it may not be optimal for another. Every solution must align with
    an organization’s unique culture, working style, and software release objectives.
    If you look at enough DevOps-centric establishments, you’ll notice that they encounter
    several common pitfalls over the course of their operations. Most of them end
    up wasting a lot of time and money learning the hard way as they iteratively tweak
    their DevOps strategy through extensive trial and error. Even though this is often
    an inevitable aspect of the DevOps journey, let’s investigate some of the ways
    that you can hedge against these growing pains, leading your organization to become
    the next success story.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 DevOps 发布管理方法，存在一种广泛的误解。事实上，一种解决方案可能对某个特定客户有效，但对另一个客户可能并不理想。每个解决方案都必须与组织独特的文化、工作方式和软件发布目标相契合。如果你观察足够多的以
    DevOps 为核心的组织，你会发现它们在运营过程中会遇到几个常见的陷阱。大多数组织最终会浪费大量的时间和金钱，在不断的试错过程中艰难地调整他们的 DevOps
    策略。尽管这是 DevOps 之旅中常常不可避免的一部分，但让我们探讨一些可以帮助你规避这些成长的烦恼的方法，从而带领你的组织成为下一个成功案例。
- en: 'In this tenth chapter, you will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十章中，你将学习以下主题：
- en: Having a carefully designed change management process
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有精心设计的变更管理流程
- en: Following a release checklist
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循发布清单
- en: Exploring 10 common pitfalls of DevOps release management
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 DevOps 发布管理的10个常见陷阱
- en: Having a carefully designed change management process
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拥有精心设计的变更管理流程
- en: A change management strategy is a deliberate approach that empowers leaders
    to effectively navigate a company through change while reducing disturbance and
    the potential for unforeseen outcomes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 变革管理策略是一种有意识的方法，它使领导者能够有效地引导公司度过变革，同时减少干扰和预料之外的结果。
- en: Although the objective may involve altering the organization, the crucial factor
    for achieving success, in the majority of instances, is the aptitude to effectively
    guide individuals throughout the process of change. Businesses typically pursue
    change when their existing business plan no longer contributes to the organization’s
    success. An innovative approach is necessary to enhance profit margins and maintain
    competitiveness amid a dynamic corporate environment. Depending on the organization’s
    long-term objectives, every change project will have a unique character. Efficiency,
    performance, and the development of superior procedures may be the focal points
    of your change program. Innovation can be incremental, such as adding new features
    to an existing product, or revolutionary, such as developing a whole new line
    of products.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管目标可能涉及改变组织，但在大多数情况下，实现成功的关键因素是能够有效地引导个体度过变化过程的能力。当现有的商业计划无法继续为组织的成功做出贡献时，企业通常会追求变革。创新的做法是提升利润率并在动态的企业环境中保持竞争力所必需的。根据组织的长期目标，每个变革项目都有其独特的特点。效率、绩效以及更优流程的发展可能是你变革项目的重点。创新可以是渐进式的，例如为现有产品添加新功能，或者是革命性的，例如开发一整条新的产品线。
- en: Your employees and company processes will probably experience some level of
    disruption as a result of the change, no matter how small or large it is. Unexpected
    repercussions might arise from even the most well-intentioned and essential of
    reforms. The necessity for a methodical strategy grows in tandem with the size
    and complexity of the change, as does the associated risk. Consequently, it is
    essential to have a methodical approach to change and to guide your staff through
    it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 无论变革规模多小或多大，你的员工和公司流程都可能会经历一定程度的干扰。即使是最具善意和必要的改革，也可能带来意外的后果。随着变革的规模和复杂性的增加，方法论策略的必要性也随之增长，相关的风险也随之加大。因此，拥有一种系统化的变革方法，并引导员工顺利度过变革过程，是至关重要的。
- en: 'Not having a carefully designed approach to managing change is a common mistake.
    No release management program would be complete without a change advisory board
    or change control board of some kind. They are primarily responsible for assisting
    the company in conducting objective risk and impact assessments. When used in
    conjunction with one another, they aid in the discovery of technical dependencies
    that could otherwise go undetected during deployment. Establishing consistent
    procedures for handling project change requests and tracking their approval and
    implementation will greatly aid in the development of your change management process.
    It is advised that your organization implement standardized *change proposals*
    and *change* *management logs*:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 没有精心设计的变更管理方法是一个常见的错误。没有变更建议委员会或某种变更控制委员会，任何发布管理计划都无法算完整。它们主要负责帮助公司进行客观的风险和影响评估。当它们相互配合时，有助于发现部署过程中可能未被发现的技术依赖关系。建立一致的处理项目变更请求的程序，并跟踪其批准和实施，将极大地促进变更管理流程的发展。建议贵组织实施标准化的*变更提案*和*变更*
    *管理日志*：
- en: A **change proposal** delineates the nature and magnitude of the proposed change,
    serving as an initial stage in the change management procedure. When initiating
    a change proposal, provide a comprehensive analysis of the rationale behind the
    change, anticipated results and effects, necessary time and resources, and any
    additional factors that necessitate evaluation. Your organization’s change proposal
    document should provide additional room for incorporating descriptive details,
    along with dedicated sections for computing expenses and for documenting the expected
    benefits.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更提案**概述了所提议变更的性质和规模，作为变更管理程序的初始阶段。在启动变更提案时，需提供对变更背后理由、预期结果和影响、所需时间和资源以及任何其他需要评估的因素的全面分析。贵组织的变更提案文档应提供额外空间，以便包含描述性细节，并设置专门的部分来计算费用和记录预期的收益。'
- en: A **change management log** is a written record that monitors the individuals
    who initiated a particular modification, the date and time of the request, the
    current state of the change request, its level of importance, and details regarding
    its resolution. To obtain a more comprehensive record, incorporate additional
    specifics such as the nature and consequences of the modification. Additional
    reasons to keep a detailed change management log are to facilitate the organization
    and retrieval of critical data, enabling efficient prioritization, resolution,
    and future references of previous change requests.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更管理日志**是记录特定修改的发起人、请求的日期和时间、变更请求的当前状态、其重要性等级及解决细节的书面记录。为了获得更全面的记录，建议加入修改的性质和后果等额外细节。保持详细的变更管理日志的其他原因是为了便于组织和检索关键数据，从而有效地优先处理、解决问题，并为未来参考以前的变更请求提供便利。'
- en: Effectively managing change involves more than simply creating and conveying
    a persuasive vision. It encompasses more than just possessing a clearly defined
    change model. The failure of organizational change is often attributed to a lack
    of comprehension by senior executives and change leaders regarding the psychology
    of their employees and the culture of their organization, rather than the change
    process itself.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地管理变更不仅仅是创建并传达一个有说服力的愿景。它不仅仅依赖于拥有一个明确定义的变更模型。组织变更的失败往往归因于高级管理人员和变更领导者对员工心理和组织文化的理解不足，而非变更过程本身。
- en: Presented next are four alarming factors that contribute to the failure of change
    management initiatives, along with data-driven recommendations for resolving these
    issues.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将介绍四个导致变更管理计划失败的严重因素，并提供基于数据的建议以解决这些问题。
- en: Employees must comprehend the rationale for change management initiatives
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 员工必须理解变更管理计划的理由。
- en: Before embarking on any organizational change, it is essential to thoroughly
    examine the underlying reasons that necessitate such a transformation. Answering
    this question should be straightforward; you just need to explain the reasons
    behind the organization’s transition and the necessity for personnel to participate
    in the transformation. It may seem quite surprising that many workers are unclear
    about the motives behind the shift in management initiatives introduced by their
    leaders and employers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始任何组织变革之前，必须彻底审视促使这种变革的潜在原因。回答这个问题应该是简单的；你只需要解释组织转型背后的原因以及员工参与转型的必要性。令人惊讶的是，许多员工对领导和雇主引入的管理举措背后的动机不清楚。
- en: 'On average, 1 in 6 employees in any organization understands the rationale
    behind their organization’s strategy at any given moment. Said another way, according
    to this statistic, 85% of employees working for a given company are not clear
    why changes are taking place, what the significance of that change means, or what
    the significance of their own participation means in context. To say that this
    is shocking would be an understatement, but if you were to perform an identical
    survey at your own organization, chances are that your results would follow similar
    conclusions. Notably, the subjects of these change initiatives span a wide range
    of verticals, such as economics, marketplace, competitive factors, and others.
    The bottom line is this: often, there are more people who never or rarely understand
    the objective behind their organization’s strategy than there are those who always
    or frequently do. Let’s change that!'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 平均而言，在任何组织中，只有1/6的员工能够理解其组织战略背后的理由。换句话说，根据这一统计数据，85%的员工不清楚为何会发生变化，这些变化的意义是什么，或者自己参与的意义是什么。从这个角度来看，这种情况令人震惊，但如果你在自己所在的组织中进行类似调查，结果很可能会得出相似的结论。值得注意的是，这些变革举措的主题涉及多个领域，如经济学、市场、竞争因素等。关键是：通常，未能理解其组织战略背后目标的人远多于那些始终或经常理解的人。让我们改变这一点！
- en: Without comprehending the underlying reasoning behind organizational change
    management, individuals will not be inclined to modify their behavior. If a company
    appears to be thriving on the surface, it would seem very illogical to the majority
    of reasonable people why any kind of change would be required. The worst part,
    though, is that most executives don’t launch new change initiatives at random.
    Organizational change management is something that most leaders have given a lot
    of thought to, perhaps for months.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有理解组织变革管理背后的基本原因，个人就不会倾向于改变自己的行为。如果一家公司表面上看起来蒸蒸日上，大多数理性的人可能会觉得没有理由进行任何形式的变革。然而，最糟糕的是，大多数高层管理者并不是随意启动新的变革举措。组织变革管理是大多数领导者经过深思熟虑的事情，可能已经考虑了几个月。
- en: Executives may have been keeping tabs on market movements, tracking the development
    of cutting-edge tech, or taking notice of major developments at industry conferences.
    For months, most executives have pondered the *why* behind a change management
    initiative, regardless of the details. However, when announcing new change initiatives,
    many executives often neglect to communicate the cognitive process they underwent
    that led them to their realization and recognition of the necessity for change
    within the organization.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 高管们可能一直在关注市场动态、跟踪前沿技术的发展，或留意行业会议上的重大进展。几个月以来，大多数高管已经在思考变革管理举措的*为何*，无论细节如何。然而，在宣布新的变革举措时，许多高管往往忽视了传达他们在经过的认知过程，这一过程使他们认识到组织内变革的必要性。
- en: While leaders may jot down some notes or deliver a short presentation outlining
    their thoughts, it’s rare for those documents to reflect the months of deliberation,
    inquisition, and competitive research that really went into them. So, the result
    is that the present change management activities are not well understood by the
    average employee. In all candor, most change management processes put far too
    much emphasis on outlining a desired future state of the change endeavor and far
    too little on the rationale behind the change management process that is needed
    to achieve it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然领导者可能会记下一些笔记或做一个简短的报告来概述他们的想法，但很少有这些文件能够反映出背后几个月的深思熟虑、探究和竞争性研究。因此，现有的变革管理活动往往没有被普通员工很好地理解。坦率地说，大多数变革管理过程过于强调描绘变革努力的未来目标状态，而对实现这一目标所需的变革管理过程的理由却关注得不够。
- en: The success of every organizational change program hinges on your ability to
    articulate the reasoning behind it, down to the most minuscule details, in a clear
    and concise manner.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组织变革计划的成功取决于你能否清晰简洁地阐述其背后的理由，直到最微小的细节。
- en: Executives operate outside of their comfort zone, while others...
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高层管理人员通常在舒适区之外运作，而其他人则…
- en: How are executive officers unique from regular people? Most people would say
    it’s due to a lack of balance between their job and their personal life; perhaps
    it is that they are more ambitious, are more intelligent, or have good fortune.
    The truth is that in the majority of cases, it is none of these. Rather, it is
    a combination of risk tolerance with change readiness. Essentially, the typical
    **chief executive officer** (**CEO**) is an enthusiastic agent of change, and
    it is this courageousness that defines their character.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 高层管理人员与普通人有什么不同？大多数人可能会说是因为他们的工作和个人生活之间缺乏平衡；也许是因为他们更有雄心、更聪明，或者更幸运。事实是，在大多数情况下，原因并不在于这些。相反，这是一种风险容忍度与变革准备度的结合。本质上，典型的**首席执行官**（**CEO**）是变革的热情推动者，而正是这种勇气定义了他们的个性。
- en: Those familiar with human nature won’t be surprised that less than one-third
    of individuals take on challenging or bold changes. Generally speaking, people
    tend to avoid change, or they make small changes that yield a small impact. A
    total of 45% of C-suite executives make what others would call bold or visionary
    changes. Contrarily, just 27% of frontline workers fall into that category. That
    is to say, when compared to frontline workers, CEOs are 66% more likely to desire
    a bold change initiative.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对人性有一定了解的人不会感到惊讶的是，少于三分之一的人愿意承担具有挑战性或大胆的变革。一般来说，人们倾向于避免变革，或者做出小的变革，这些变革带来的影响也较小。总共有45%的高层管理人员做出了别人认为大胆或有远见的变革。相反，只有27%的一线员工属于这一类别。也就是说，与一线员工相比，首席执行官更有可能发起大胆的变革行动，比例高出66%。
- en: There is a clear and robust correlation between an individual’s hierarchical
    position within the firm and their propensity to engage in bold and daring initiatives.
    Employees and managers who work directly with customers are more likely to favor
    maintaining the status quo, and even if they do accept change, they will be more
    cautious about it. When it comes to spearheading transformation, executives are
    frequently daredevils, driven by uncertainty, big dreams, and drastic action.
    Ambitious people do best in dynamic settings. In general, they thrive on taking
    on large tasks and relish the opportunity to pioneer novel approaches. That makes
    them much more enthusiastic about change management than the average employee
    in their organization.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 个人在公司中的层级地位与其参与大胆和冒险计划的倾向之间存在明确且强烈的相关性。直接与客户打交道的员工和管理者更倾向于保持现状，即便他们接受变革，也会更加谨慎。在引领变革时，执行官往往是敢于冒险的人，他们受到不确定性、大梦想和激烈行动的驱动。雄心勃勃的人在动态环境中表现最佳。一般来说，他们喜欢承担重大任务，并乐于开创新的方法。这使得他们比组织中的普通员工更热衷于变革管理。
- en: This idea is crucial for every change management approach. Those at the top
    of an organization are more likely to back a change effort or program if they
    are the ones who instigated it. However, it is important to note that the CEO
    or change manager may lack an understanding of the fact that their perspective
    differs significantly from that of the vast majority of people working directly
    with customers and other frontline workers. In short, senior executives are significantly
    more likely to be interested in taking on the role of change manager, while those
    working on the front lines are much more inclined to be content with how things
    are.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个观点对每一种变革管理方法都至关重要。如果组织的高层领导是变革倡议的发起人，他们更有可能支持变革工作或计划。然而，需要注意的是，CEO或变革经理可能缺乏认识到他们的视角与那些直接与客户和其他一线工作人员打交道的绝大多数人的视角有很大不同。简而言之，高层管理人员更可能对担任变革经理的角色感兴趣，而那些在一线工作的员工则更倾向于满足于现状。
- en: Leaders aren’t candid about the difficulties they face
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领导者没有坦诚面对他们所面临的困难
- en: 'A notable aspect of change management is that it is comparatively simpler to
    implement change in a company that is experiencing failure, as opposed to one
    that is already successful. The reason for this is simple: doing *business as
    usual* is not an option for a struggling corporation. Why would an organization
    continue to operate with the same approach when that company is clearly failing?
    Perhaps, ironically, change leaders like to engage with dysfunctional businesses
    that have a strong sense of urgency.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 变革管理的一个显著特点是，在经历失败的公司中实施变革相对更容易，而在已经成功的公司中则更加困难。原因很简单：对于一个陷入困境的公司来说，*按部就班*已经不是一种选择。当一个公司显然正在失败时，为什么还要继续以相同的方式运营？或许，讽刺的是，变革领导者喜欢与那些有强烈紧迫感的功能失调公司打交道。
- en: However, in prosperous organizations, it is reasonable for employees to inquire
    about the rationale behind implementing organizational change when they are already
    achieving success. For the uninitiated, it might seem reasonable to question why
    an organization would require a change management plan even when they are experiencing
    significant success. Undoubtedly, even the most prosperous corporations encounter
    obstacles; no company is flawless. The problems begin when leaders become averse
    to engaging in open and honest discussions regarding difficulties they are facing
    and how those obstacles are affecting the business.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在繁荣的组织中，当员工已经取得成功时，询问实施组织变革的理由是合理的。对于外行人来说，当一个组织已经取得显著成功时，质疑为何需要变革管理计划似乎是合理的。毫无疑问，即使是最繁荣的公司也会遇到障碍；没有任何公司是完美无缺的。问题出现在领导者不愿意就他们所面临的困难以及这些障碍如何影响业务进行公开和诚实的讨论时。
- en: Just 35% of CEOs consistently or regularly communicate the challenges that they
    are experiencing, and this correlation only goes higher the more severe an issue
    becomes. This indicates that approximately 66% of leaders are neglecting to engage
    in the crucial practice of openly communicating their challenges as part of the
    change management process. Leaders who choose an evolutionary approach to change
    management are less inclined to publicly communicate difficulties compared to
    leaders who embrace a more revolutionary approach. Their inclination toward gradual
    modifications diminishes their propensity toward extensive deliberations regarding
    company obstacles.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 只有35%的CEO会持续或定期沟通他们所面临的挑战，而且随着问题的严重性增加，这一比例会更高。这表明，大约66%的领导者忽视了在变革管理过程中公开沟通挑战这一至关重要的做法。选择渐进性变革管理方法的领导者相比选择革命性方法的领导者，更不倾向于公开沟通困难。渐进的变化倾向使得他们减少了广泛讨论公司问题的可能性。
- en: On the other hand, there are leaders who proceed under the erroneous belief
    that if they discuss the difficulties that the organization is experiencing, then
    they would be perceived as being pessimistic or negative. Nevertheless, that is
    completely false. The act of openly discussing difficulties is not a negative
    thing; rather, it is only being honest and frank. There is a significant amount
    of admiration among workers for leaders who exhibit that particular quality.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，也有领导者在错误的信念下行事，认为如果他们讨论组织面临的困难，那么他们会被认为是悲观或消极的。然而，这完全是错误的。公开讨论困难并不是一件负面的事情；这只是诚实和坦率的表现。员工对展现出这一特质的领导者有着相当大的敬佩。
- en: A successful change initiative necessitates a compelling impetus; no organization
    undergoes transformation without a strong justification. If the corporation is
    actively seeking to achieve transformational change, then the requirement for
    a compelling challenge becomes even more significant. An effective change management
    model emphasizes that organizational change will progress more rapidly and smoothly
    when there is a significant problem that must be addressed. However, if your suggested
    change lacks a direct connection to a specific, pressing, and tangible problem,
    you should anticipate encountering significant opposition.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的变革举措需要一个强有力的推动力；没有强有力的理由，任何组织都不会进行转型。如果公司积极寻求实现转型变革，那么对于一个具有挑战性的推动力的需求将变得更加重要。有效的变革管理模型强调，当组织面临必须解决的重大问题时，变革将进展得更快、更顺利。然而，如果你提出的变革与具体、紧迫且可触及的问题没有直接联系，你应该预期会遇到强烈的反对。
- en: Employee temperaments are resistant to change
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 员工的气质对变革具有抵触情绪
- en: Organizational culture, including employee personalities, is a rarely discussed
    predictor of successful organizational change.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 组织文化，包括员工个性，是一个很少被讨论的成功组织变革的预测因素。
- en: 'In the realm of workplace dynamics, individuals are galvanized to action by
    a set of five prominent motivators: *Achievement*, *Power*, *Affiliation*, *Security*,
    and *Adventure*. These five motivators play a pivotal role in shaping and influencing
    human behavior within professional settings. It has been determined that a significant
    proportion of workers, specifically 33%, exhibit a strong inclination toward being
    motivated by affiliation. Furthermore, an additional 20% of participants have
    demonstrated a notable inclination toward being motivated by security.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在职场动态中，有五个主要的驱动力促使个体采取行动：*成就*、*权力*、*归属*、*安全*和*冒险*。这五种驱动力在塑造和影响职场中的人类行为方面起着至关重要的作用。研究表明，约33%的员工具有较强的归属动机。此外，另外20%的参与者表现出显著的安全动机倾向。
- en: Individuals motivated by affiliation seek positive relationships and acceptance
    from others. These people prefer jobs with substantial personal interaction, are
    group-oriented, and excel in teamwork. The problem arises when an organization
    implements sudden changes that make people uncomfortable, leading to the dissolution
    of affiliative bonds, the departure of key team members, and a sense of a previously
    close-knit group falling apart. If affiliative individuals were included in a
    change advisory board, they may be more likely to transition from resistors to
    key stakeholders. However, individuals motivated by security seek stability and
    reliability in their employment, tasks, and compensation. They value guarantees
    and tend to stay with the same company, position, or department for a long time.
    High-security individuals frequently experience anxiety when faced with change.
    They are not inclined toward transformational, highly destructive, or disruptive
    change.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由归属动机驱动的个体寻求与他人的积极关系和接纳。这些人倾向于选择有较多个人互动的工作，注重团队合作，并在团队中表现出色。问题出现在组织实施突然的变革时，这让人感到不舒服，导致归属关系的解体、关键团队成员的离开，以及曾经紧密团结的团队分崩离析。如果将归属动机的个体纳入变革咨询委员会，他们可能更容易从反对者转变为关键利益相关者。然而，安全动机驱动的个体寻求在工作、任务和薪酬方面的稳定性和可靠性。他们看重保障，倾向于长时间留在同一公司、职位或部门。高安全感的个体在面对变革时经常感到焦虑，他们不倾向于接受转型性、极具破坏性或颠覆性的变革。
- en: In certain instances, it is important to note that not all companies possess
    a substantial workforce consisting primarily of individuals motivated by security
    and affiliation. Instead, there are cases where organizations are comprised of
    individuals who are driven by a desire for adventure and are catalysts for change
    within the company. For companies that place a strong emphasis on social cultures
    and prioritize consistency and predictability, the process of transformational
    change can be particularly disruptive. The situation can present significant challenges
    if the primary stakeholders of the organization are primarily motivated by concerns
    related to security and affiliation.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，值得注意的是，并非所有公司都拥有以安全感和归属感为驱动力的大量员工。相反，也有一些组织由那些追求冒险并成为公司内部变革催化剂的个体组成。对于那些注重社会文化并优先考虑一致性和可预测性的公司来说，转型变革过程可能特别具有破坏性。如果公司的主要利益相关者主要受安全感和归属感的驱动，那么这种情况可能会带来重大挑战。
- en: You may be wondering how you can determine whether or not your culture employs
    a majority of people who are driven by affiliation and security. Take a look at
    the things that appear to motivate your staff members. If they place a high value
    on working together as a team, maintaining social relationships with coworkers,
    and spending a lot of time in person, there is a good chance that they have a
    strong affiliation drive. There is a good chance that they have a high security
    drive if they tend to think things through before acting on them, experience anxiety
    when confronted with ambiguity, and favor jobs and projects that are well defined.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在想，如何判断你的企业文化是否以归属感和安全感为驱动。观察一下那些似乎能激励员工的因素。如果他们非常重视团队合作、与同事保持社会关系并且喜欢花很多时间面对面交流，那么他们很可能有强烈的归属感驱动力。如果他们在行动之前倾向于深思熟虑，当面临模糊不清的情况时感到焦虑，并且偏好那些定义清晰的工作和项目，那么他们很可能具有较强的安全感驱动力。
- en: Now that we have covered the reasons why it is important to have a carefully
    designed change management process, let’s expand on this theme. In the next section,
    we will discuss the importance of following a software release checklist. Combining
    these two strategies ensures that you stay organized and can adequately communicate
    the value that your team brings to the organization as a whole.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了为什么设计周密的变更管理流程如此重要，接下来让我们进一步展开这个主题。在接下来的部分，我们将讨论遵循软件发布清单的重要性。结合这两种策略，可以确保你保持组织性，并且能够充分传达你的团队为整个组织带来的价值。
- en: Following a release checklist
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 遵循发布清单
- en: 'A common challenge in release management is adhering to a release checklist,
    which is a frequently neglected necessity. The information contained in a release
    checklist is critical; a few examples include: ensuring that all components have
    been accurately labeled for release, a clear rollback plan has been established,
    and the user documentation has been freshly revised. However, a reference to a
    comprehensive release checklist has been included in the [*Appendix*](B21803_Appendix.xhtml#_idTextAnchor223)
    of the book, for your benefit. As a release manger, even if you are experiencing
    a less productive day or facing distractions while creating a product, the checklist
    remains a reliable source of truth that will help you stay focused and on track.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 发布管理中常见的挑战之一是遵循发布清单，这是一个常被忽视的重要任务。发布清单中的信息至关重要；一些示例包括：确保所有组件已准确标记为发布，已建立清晰的回滚计划，并且用户文档已更新。为了你的便利，本书的[*附录*](B21803_Appendix.xhtml#_idTextAnchor223)中包含了详细的发布清单作为参考。作为发布经理，即使你在某天工作效率不高或在产品创建过程中受到干扰，发布清单依然是一个可靠的信息来源，帮助你保持专注并确保进度。
- en: To ensure the best possible **user experience** (**UX**), it is essential that
    you incorporate relevant questions into every release checklist. By doing so,
    you can guarantee that each release delivers exceptional value to the end user’s
    experience. A fantastic way to make certain that your software product is ready
    for release is by ensuring that your release checklist contains both *pre-* and
    *post-*release activities. This should include final reviews, testing, and release
    package creation for the former, and tasks for updating documentation, informing
    end users, and monitoring application performance for the latter. In the context
    of DevOps, a software release checklist expedites the process of delivering a
    product by guaranteeing that every release undergoes thorough testing to verify
    its optimal viability through a reliable pipeline.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保最佳的**用户体验**（**UX**），必须在每个发布检查清单中加入相关问题。这样可以确保每次发布都能为最终用户的体验提供卓越的价值。确保软件产品准备好发布的一个好方法是，确保发布检查清单中包含*发布前*和*发布后*的活动。这应包括发布前的最终审查、测试和发布包创建，发布后的任务则包括更新文档、通知最终用户以及监控应用程序性能。在DevOps的背景下，软件发布检查清单通过确保每次发布都经过充分测试，从而通过可靠的流水线验证其最佳可行性，加速了产品交付的过程。
- en: When embarking on the release of a new software application, it becomes evident
    that there are a multitude of factors that necessitate careful consideration.
    The most important thing to remember is that these questions and the standards
    by which you should evaluate each release are completely subjective. In order
    to effectively navigate through diverse environments, it is highly important to
    construct a comprehensive set of queries. These questions will serve as a valuable
    tool in acquiring the necessary information and insights pertaining to each distinct
    environment. A successful release can be achieved by following customized checklists
    that meet the needs of each unique product or business. By strictly adhering to
    the checklist, software releases can be completed swiftly and without the risk
    of expensive mistakes or delays.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布新软件应用程序时，显而易见，有许多因素需要仔细考虑。最重要的是要记住，这些问题以及评估每次发布的标准是完全主观的。为了有效地应对不同的环境，构建一个全面的问题集非常重要。这些问题将作为获取与每个特定环境相关的必要信息和洞察的宝贵工具。通过遵循满足每个独特产品或业务需求的定制化检查清单，可以实现成功的发布。严格遵循检查清单，软件发布可以迅速完成，且避免昂贵的错误或延误。
- en: However, it is important to note that any comprehensive list of ultimate criteria
    must include all aspects of a release, with particular emphasis on performance,
    security, and usability. Never forget that it’s better to be thorough than to
    be careless. Prior to shipping your software, ensure that it complies with the
    industry standards, as outlined in your checklist. When you have finished the
    entire project, you do not want to come to the realization that you neglected
    to ask one of these questions during the process. Your users will be very grateful
    that you did so.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，需要注意的是，任何完整的最终标准清单必须包括发布的各个方面，特别是性能、安全性和可用性。永远不要忘记，做得彻底总比草率行事好。在发布软件之前，确保其符合您的检查清单中列出的行业标准。当您完成整个项目后，您不希望意识到在过程中忽视了某个问题。您的用户会非常感激您这样做。
- en: Finally, to guarantee a smooth release cycle, it is necessary to determine whether
    the support team is cognizant of any features that could cause confusion for the
    end user. An adept support team is vital for the implementation of any product,
    and software is no different. The frequency and severity of challenges encountered
    by customers can be greatly reduced if the support personnel receives thorough
    training and possesses a comprehensive understanding of the application’s functionality.
    Generic responses seldom satisfy customers, so plan on delivering personalized
    support for each one in all available opportunities.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了保证顺利的发布周期，有必要确定支持团队是否了解任何可能导致最终用户困惑的功能。一个熟练的支持团队对于任何产品的实施都至关重要，软件也不例外。如果支持人员接受了充分的培训，并且对应用程序的功能有全面的理解，那么客户遇到的挑战的频率和严重性将大大降低。通用的回应很少能令客户满意，因此应计划在所有可用机会中为每位客户提供个性化支持。
- en: Make sure they have access to as much pertinent information as you can in order
    to set them up for success. This will not only ensure that the release cycle is
    successful, but it will also prevent engineers and product managers from having
    to deal with questions that are recurring in the future. A great way to do this
    is to derive your support materials from the release checklist itself; this ensures
    that your support documentation is as comprehensive as the release process. By
    doing so, you can optimize the process and guarantee that development teams and
    customers obtain the information they need with minimal effort. To make this process
    better, it is helpful if you define key elements of the software release.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 确保他们能够访问尽可能多的相关信息，以为他们的成功提供支持。这不仅能确保发布周期的顺利进行，还能防止工程师和产品经理在未来处理重复性的问题。一个很好的做法是从发布清单本身提取支持材料；这能确保你的支持文档和发布过程一样全面。通过这样做，你可以优化流程，确保开发团队和客户以最小的努力获得他们需要的信息。为了改进这一过程，定义软件发布的关键元素是非常有帮助的。
- en: Successful releases go far beyond following a checklist
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成功的发布远远不止是遵循清单
- en: A software release checklist can be defined as a meticulously organized compilation
    of items and tasks that are adhered to by development and operations teams in
    order to guarantee the glorious release of a software product. The checklist functions
    as an exhaustive manual, encompassing diverse facets of the **software development
    life cycle** (**SDLC**). In essence, it serves as a surrogate for a navigational
    guide, aiding teams in maneuvering through the intricacies of deploying software
    using a regulated and effective method.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 软件发布清单可以定义为一个精心组织的任务和项目的汇编，开发和运维团队遵循这些项目以确保软件产品的顺利发布。该清单充当了一个详尽的手册，涵盖了**软件开发生命周期**（**SDLC**）的各个方面。从本质上讲，它作为导航指南的替代品，帮助团队通过受控和高效的方法应对软件部署的复杂性。
- en: However, there is one rather significant caveat about what a software release
    checklist is and what it should and should not be used for. A checklist is fundamentally
    just a way to organize the actions that you should already be taking anyway! To
    be clear, a release checklist should follow the work that you are performing,
    not leading it. The crucial point to understand is that you must avoid becoming
    an organization that focuses on checking boxes rather than innovating and optimizing.
    Otherwise, your operations will become dull, stagnant, unimaginative, and uncompetitive.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，关于软件发布清单，有一个相当重要的警告：它到底是什么，它应该如何使用，以及不应该如何使用。清单本质上只是一种组织你本来就应该采取的行动的方式！明确一点，发布清单应该跟随你正在执行的工作，而不是引导它。关键点是，你必须避免成为一个专注于勾选框而非创新和优化的组织。否则，你的运营将变得枯燥、停滞、缺乏创意且缺乏竞争力。
- en: To avoid becoming a tick-the-box organization, your software release checklist
    must be the product of a group effort that includes an extensive array of individuals.
    Software engineers, **quality assurance** (**QA**) specialists, system administrators,
    and project managers are all essential members of the team. To ensure that your
    release checklist is comprehensive and useful, every team member must contribute
    their own distinct input and unique perspective.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免成为一个“勾选清单”的组织，你的软件发布清单必须是团队共同努力的产物，涉及多方人员。软件工程师、**质量保证**（**QA**）专家、系统管理员和项目经理都是团队中必不可少的成员。为了确保发布清单全面且有用，每个团队成员必须贡献自己独特的观点和看法。
- en: Next is a list of nine crucial activities that your software development team
    should already be doing on an ongoing basis. Notably, it is important that these
    items are reflected in your release checklist.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是一个列出了九个至关重要的活动的清单，这些活动是你的软件开发团队应该一直在进行的。值得注意的是，这些项目应当在你的发布清单中有所体现。
- en: Code review and QA
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码审查与QA
- en: Begin your checklist by conducting a comprehensive analysis of your code. Code
    reviews serve as the primary means of safeguarding against potential issues. They
    capture software defects, enhance the quality of code, and guarantee adherence
    to coding standards. Code reviews establish the groundwork for a strong release
    by implementing QA procedures. Indeed, adhering to code standards and utilizing
    **version control systems** (**VCS**) are essential components of sound coding
    practices.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从全面分析你的代码开始制作清单。代码审查是防止潜在问题的主要手段。它们能够捕捉软件缺陷、提高代码质量，并确保遵循编码标准。通过实施 QA 程序，代码审查为强大的发布奠定了基础。实际上，遵守代码标准并使用**版本控制系统**（**VCS**）是良好编码实践的重要组成部分。
- en: The purpose of functional testing is to guarantee that all features and capabilities
    perform as expected. Functional testing, whether automated or by manual human
    effort, ensures that your product satisfies all criteria and offers a positive
    UX. In other words, it’s the last chance you get to make sure your software works
    as expected. Functional testing checklists often ensure that each feature is validated
    against its specifications, test all user interactions, and verify error handling
    and recovery methods.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 功能测试的目的是确保所有功能和能力按预期执行。无论是自动化测试还是人工测试，功能测试都能确保你的产品满足所有标准，并提供积极的用户体验。换句话说，这是确保你的软件按预期运行的最后机会。功能测试清单通常确保每个功能都经过规格验证，测试所有用户交互，并验证错误处理和恢复方法。
- en: User interface and UX testing
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户界面和 UX 测试
- en: Making a good first impression is important, and **user interface** (**UI**)
    and UX testing can help you achieve that with your software. One of the most important
    factors in user happiness is an attractive and easy-to-use design. Explore how
    UI/UX testing can improve the visual appeal and usability of your software. In
    general, when testing a UI or UX, you should look for things such as consistent
    design components, how easy it is to navigate, and how responsive it is across
    different devices.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 留下好印象很重要，而**用户界面**（**UI**）和 UX 测试能帮助你在软件中做到这一点。用户幸福感的一个重要因素是具有吸引力和易于使用的设计。探索
    UI/UX 测试如何改善软件的视觉吸引力和可用性。一般来说，在测试 UI 或 UX 时，你应该关注设计组件是否一致，导航是否简便，以及在不同设备上的响应性如何。
- en: In software development, the UI/UX design phase typically consists of several
    key stages. Much as with backend software development and the SDLC, UI/UX development
    often includes similar concepts, such as a pre-design stage and a design research
    stage, as well as initial sketches, wireframing, visualization, and slicing. Make
    sure to include UI/UX items such as these as part of your release checklist if
    relevant to your project.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件开发中，UI/UX 设计阶段通常包括几个关键阶段。与后台软件开发和 SDLC 类似，UI/UX 开发通常也包含类似的概念，如前期设计阶段和设计研究阶段，以及初步草图、线框图、可视化和切图。如果这些
    UI/UX 项目与你的项目相关，确保将其列入发布清单。
- en: Compatibility testing
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 兼容性测试
- en: Your program will always work as intended if you test it across a variety of
    devices, operating systems, and browsers. Learn the ins and outs of compatibility
    testing and why it’s so important to attract more users to your product and your
    company’s brand. As part of the compatibility testing process, you should include
    assessments on how the application works on various devices, such as laptops,
    desktops, and mobile devices, but also on operating systems such as Linux, macOS,
    and Windows. Don’t forget to test your web applications across each of the four
    most popular browsers (Chrome, Firefox, Safari, and Edge) as well. Naturally,
    these items should all be included in your release checklist to ensure a successful
    release and happy customers.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在多种设备、操作系统和浏览器上进行测试，你的程序将始终按预期工作。了解兼容性测试的各个方面，并理解为什么它对吸引更多用户使用你的产品和品牌如此重要。作为兼容性测试过程的一部分，你应该评估应用程序在各种设备上的表现，如笔记本电脑、台式机和移动设备，也要评估它在操作系统上的表现，如
    Linux、macOS 和 Windows。别忘了还要在四大主流浏览器（Chrome、Firefox、Safari 和 Edge）上测试你的 Web 应用程序。显然，这些项目都应该包括在发布清单中，以确保顺利发布和满意的客户。
- en: Security testing
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全性测试
- en: Safeguarding user data and guaranteeing the integrity of your program is of
    utmost importance. Security testing detects flaws and weaknesses, protecting your
    program from potential cyber threats and data breaches. Examine how security testing
    enables you to earn your customers’ trust by analyzing all of its many aspects.
    Perform penetration testing, verify data encryption algorithms, and guarantee
    secure authentication and authorization processes as part of security testing.
    Definitely don’t skip these on your release checklist, and don’t forget to include
    your own unique security requirements as well.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 保护用户数据并确保程序的完整性至关重要。安全测试能够发现缺陷和弱点，保护你的程序免受潜在的网络威胁和数据泄露。通过分析安全测试的各个方面，了解它如何帮助你赢得客户的信任。进行渗透测试、验证数据加密算法，并确保安全的身份验证和授权过程，这些都是安全测试的一部分。发布检查单中一定不要遗漏这些内容，也不要忘记包括你自己独特的安全需求。
- en: Regression testing
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回归测试
- en: Ensure that recent modifications have not adversely affected pre-existing functionality.
    Regression testing is a process that detects and resolves unanticipated side effects
    of change, ensuring the general stability of your software. Explore the utility
    of regression testing as a protective measure for your software release. Your
    regression testing checklist should include assessing items such as test cases,
    the automation of repetitive test scenarios, and the verification of backward
    compatibility with earlier releases.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 确保近期的修改没有对现有功能产生不良影响。回归测试是一种检测和解决变更意外副作用的过程，确保软件的整体稳定性。了解回归测试作为软件发布保护措施的作用。你的回归测试检查单应包括评估项目，如测试用例、自动化重复测试场景，以及验证与早期版本的向后兼容性。
- en: Documentation review
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档审查
- en: It is essential for both developers and end users to have documentation that
    is fully comprehensive and up to date. Make sure that your documentation depicts
    the most recent modifications and capabilities in an accurate manner. Consider
    the significance of documentation in ensuring that the UX is as seamless as possible.
    The documentation and review process should adhere to best practices, which include
    maintaining versioned documentation, having instructions that are clear and simple,
    and upgrading documentation with each release. Include these items on your release
    checklist as well.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员和最终用户都必须拥有完整且最新的文档。确保你的文档准确地反映了最新的修改和功能。考虑文档在确保用户体验尽可能无缝中的重要性。文档和审查过程应遵循最佳实践，包括保持版本化文档、提供清晰简明的说明，以及在每次发布时更新文档。将这些内容也包括在你的发布检查单中。
- en: Deployment readiness
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署准备
- en: To get ready for deployment, you should make sure that your infrastructure,
    servers, and databases are all prepared to operate well with the new version.
    This phase enables a smooth transition and reduces the amount of downtime that
    occurs. It is important to understand the complexities of deployment readiness
    and the role it plays in a successful release. Verifying server and infrastructure
    settings, checking data backup and recovery processes, and planning deployment
    for low-traffic times are all important items on your deployment readiness checklist.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备部署时，你应确保基础设施、服务器和数据库都已准备好与新版本良好兼容。这个阶段能够确保平稳过渡，减少停机时间。理解部署准备的复杂性及其在成功发布中的作用非常重要。验证服务器和基础设施设置、检查数据备份和恢复过程，以及在低流量时段规划部署，都是部署准备检查单上的重要内容。
- en: Rollback plan
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回滚计划
- en: Keep a backup plan handy at all times. In the event that problems emerge after
    the release, it is critical to have a clear method for rolling back changes to
    their previous state. This way, in case you need to roll back to an earlier version,
    you may do so easily. Discover the ins and outs of developing a solid rollback
    plan and why it is an essential part of any release strategy. The standard components
    of a rollback plan are a communication strategy for stakeholders, testing of the
    rollback procedure in a simulated environment, and the identification of crucial
    rollback checkpoints. The best way to keep your rollback strategy functional during
    a **disaster recovery** (**DR**) event is to create a checklist for it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 随时准备好备份计划。在发布后出现问题时，必须有明确的方法将更改回滚到以前的状态。这样，一旦需要回滚到早期版本，你可以轻松实现。了解如何制定一个可靠的回滚计划，并明白它为何是任何发布策略中不可或缺的一部分。回滚计划的标准组成部分包括与利益相关者的沟通策略、在模拟环境中测试回滚过程，以及识别关键回滚检查点。在**灾难恢复**（**DR**）事件中保持回滚策略有效的最佳方法是为其创建一个检查清单。
- en: Performance testing
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能测试
- en: Performance testing is an essential part of your release checklist. Making sure
    your software can take the predicted load without sacrificing speed or functionality
    is the goal of this step, which involves evaluating its behavior under various
    scenarios. Your brand’s reputation, user satisfaction, and availability are all
    at risk if performance problems go unchecked.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 性能测试是你发布检查清单中不可或缺的一部分。确保你的软件在不牺牲速度或功能的情况下，能够应对预期的负载是此步骤的目标，这需要评估软件在各种场景下的表现。如果性能问题得不到解决，你的品牌声誉、用户满意度和可用性都会面临风险。
- en: There are many reasons why performance testing matters. To begin with, user
    satisfaction is key. A slow or unreliable system can frustrate users, leading
    to a negative perception of your software. Performance testing also helps identify
    potential bottlenecks, preventing unexpected crashes during peak usage and ensuring
    **business continuity** (**BC**). Critically, addressing performance issues during
    development is more cost-effective than dealing with them post-release.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 性能测试的重要性有很多原因。首先，用户满意度至关重要。一个缓慢或不可靠的系统会让用户感到沮丧，进而对你的软件产生负面看法。性能测试还可以帮助识别潜在的瓶颈，防止在高峰期出现意外崩溃，并确保**业务连续性**（**BC**）。更重要的是，在开发过程中解决性能问题比在发布后处理它们更具成本效益。
- en: 'Methods employed for assessing software application performance include the
    following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 评估软件应用性能的方法包括以下几种：
- en: '**Load testing**: The software’s responsiveness under both light and heavy
    loads to guarantee it can manage the anticipated volume of users'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**负载测试**：软件在轻负载和重负载下的响应能力，以确保它能够处理预期的用户量'
- en: '**Scalability testing**: Verifies the software’s scalability in response to
    increasing load requirements, keeping it efficient no matter the number of users'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性测试**：验证软件在应对增加的负载需求时的可扩展性，确保无论用户数量多少，软件都能高效运行'
- en: '**Spike testing**: Examines the manner in which the system responds to abrupt
    spikes or swings in the amount of user traffic'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**峰值测试**：检查系统在用户流量急剧激增或波动时的响应方式'
- en: '**Endurance testing**: Determines whether or not the system is stable for a
    lengthy period of time and evaluates how well it performs under sustained loads'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**耐力测试**：确定系统是否能够在长时间内保持稳定，并评估其在持续负载下的表现'
- en: '**Concurrency testing**: Analyzes the software’s responsiveness and performance
    under heavy processing load from several concurrent users'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**并发测试**：分析软件在多个并发用户同时进行处理时的响应能力和性能'
- en: You will find that a comprehensive software release checklist is your best friend
    when you are navigating the complicated environment of software deployment. Despite
    the fact that each item on the checklist makes a contribution to the overall success
    of your release, performance testing stands out as a crucial component in ensuring
    that users are satisfied and that your product remains in good health over the
    long run. Incorporating these approaches into your performance testing strategy
    will improve your software’s overall success and reliability while also improving
    the UX.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在软件部署的复杂环境中航行时，你会发现一份全面的软件发布检查清单是你最好的朋友。尽管清单上的每一项都有助于你发布的整体成功，但性能测试作为确保用户满意并让你的产品长期保持良好状态的关键环节，尤为突出。将这些方法纳入你的性能测试策略中，将提升软件的整体成功和可靠性，同时改善用户体验（UX）。
- en: Taking a methodical approach with your software release checklist lays the groundwork
    for a software release that is error-free, efficient, and seamless. In the next
    section, we’ll discuss the top 10 pitfalls of DevOps release management. By learning
    from hardships that others have faced, you will be well on your path to mastering
    the art of DevOps release management.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 采用系统化的方法来完成软件发布清单，为无错误、高效且无缝的发布打下基础。在下一部分，我们将讨论 DevOps 发布管理中的十大陷阱。通过学习他人所经历的困难，你将能够顺利踏上掌握
    DevOps 发布管理的道路。
- en: Exploring 10 common pitfalls of DevOps release management
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 DevOps 发布管理中的十大常见陷阱
- en: DevOps release management is a game-changing approach. It is becoming increasingly
    common for businesses across virtually all sectors to implement DevOps in order
    to provide teams with the time and autonomy they require to handle more ambitious
    tasks. Using a DevOps release management strategy can invigorate your engineering
    team and direct your product development efforts toward better satisfying your
    customers. On the other hand, any time that you adopt a new technique, there is
    always the possibility of encountering significant challenges.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 发布管理是一种具有变革意义的方法。几乎所有行业的企业都越来越普遍地实施 DevOps，以为团队提供完成更具挑战性任务所需的时间和自主权。采用
    DevOps 发布管理策略可以激励你的工程团队，并将产品开发工作引导到更好地满足客户需求的方向。另一方面，每当你采用一种新技术时，总会有可能面临重大挑战。
- en: Problems and obstacles are inevitable whenever you try to alter the fundamental
    nature of your business. Every transition to DevOps comes with its own set of
    challenges that your team will have to overcome. With regard to transformations,
    it is impossible to anticipate and mitigate every potential challenge that may
    arise. However, this particular chapter aims to equip you with the necessary knowledge
    needed to navigate the most frequently encountered pitfalls in DevOps release
    management and provide you with effective strategies for their resolution. When
    considering the implementation of DevOps practices, it remains essential to have
    the necessary awareness of the elements involved and the intuition required to
    effectively prioritize them. As with any implementation of DevOps release management,
    an organization must maintain its primary focus on people first, followed by process,
    and finally, technology.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你尝试改变业务的基本性质时，问题和障碍是不可避免的。每一次转向 DevOps 都会带来一系列独特的挑战，团队必须克服。关于变革，很难预测并规避可能出现的每一个潜在挑战。然而，本章旨在为你提供应对
    DevOps 发布管理中最常见陷阱的必要知识，并为解决这些问题提供有效的策略。在考虑实施 DevOps 实践时，必须具备对涉及元素的充分了解以及有效优先排序的直觉。与任何
    DevOps 发布管理的实施一样，组织必须始终将人的因素置于首位，其次是流程，最后是技术。
- en: A lack of support from leadership
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺乏领导层支持
- en: Most executives have experienced unsuccessfully leading an organization through
    a change initiative that ran counter to the organization’s culture. Although this
    might sound surprising the truth is that more than two-thirds of all organizational
    change initiatives fail.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数高管都有过未能成功引导组织进行与组织文化相悖的变革倡议的经历。虽然这可能听起来令人惊讶，但事实是，超过三分之二的所有组织变革倡议都以失败告终。
- en: The failure rate is significantly greater when efforts are designed to disrupt
    the entire existing business culture. It should not come as a surprise to see
    that four-fifths of these attempts are met with defeat. When it comes to organizations,
    culture is deeply ingrained and endures through generations of personnel that
    come and go over the course of time. Altering the culture of an organization is
    not the first step in a campaign to change the organization; rather, it is the
    last step.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当努力试图颠覆整个现有的企业文化时，失败率显著增加。看到其中四分之三的尝试以失败告终并不奇怪。对于组织而言，文化是根深蒂固的，并随着时间的推移在一代代员工的更替中延续。改变一个组织的文化并不是改变组织的第一步，而是最后一步。
- en: Embracing the DevOps dynamic
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拥抱 DevOps 动态
- en: Leaders engaging in a DevOps transformation must have a thorough understanding
    of the methodology’s unique dynamic. Implementing DevOps in organizations is a
    complex process that involves more than just adopting new technical practices
    and tools. As Gene Kim explains in *The Phoenix Project*, organizations that embrace
    *The Three Ways* principles invite significant advantages that make achieving
    success more likely. We covered in *Chapter 5* that this involves a transition
    from a culture of isolated departments to a mindset that emphasizes efficiency
    and adaptability, with a primary focus on continuously creating and delivering
    value.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 从事DevOps转型的领导者必须深入理解该方法论的独特动态。将DevOps实施到组织中是一个复杂的过程，涉及的内容不仅仅是采用新的技术实践和工具。正如Gene
    Kim在*《凤凰项目》*中解释的那样，采纳*《三大原则》*的组织会获得显著的优势，这使得成功的可能性更大。我们在*第五章*中讨论过，这意味着从一个孤立部门的文化转向一种注重效率和适应性的思维方式，重点是持续创造和交付价值。
- en: 'History has shown us that culture change has been a significant obstacle in
    the adoption of DevOps release management practices. It has emerged as the primary
    culprit that hinders the adoption of DevOps among the many organizations that
    embark on such a transfiguration. The breadth of research pertaining to the challenges
    associated with cultural transformation leads to a definitive observation: the
    adoption of a DevOps methodology inherently carries a significant degree of risk
    and is susceptible to potential setbacks.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 历史告诉我们，文化变革一直是采用DevOps发布管理实践的一个重要障碍。它已成为许多组织在进行这种转型时阻碍DevOps采用的主要原因。关于文化转型挑战的研究广度导致了一个明确的观察结论：采纳DevOps方法论本身就伴随着较大的风险，并且容易遭遇潜在的挫折。
- en: One possible solution is to maintain the status quo and steer clear of the challenging
    journey toward cultural transformation that frequently accompanies the implementation
    of a DevOps initiative. The issue associated with the aforementioned strategy
    lies in the fact that DevOps encompasses a broader scope beyond existing merely
    as a methodology or framework that is solely applicable to technologists. In contemporary
    society, organizations encounter a continuous flow of internal and external influences
    that have the potential to shape their culture in big ways. These influences encompass
    a wide range of factors, including market disruption caused by new competitors,
    fluctuations in global economics, geopolitical instability, currency fluctuations,
    shifts in workforce demographics, and rapid advancements in technology, among
    others. These forces present organizations with both favorable prospects and potential
    challenges.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可能的解决方案是保持现状，避免迈向文化转型的艰难旅程，而这通常伴随着DevOps计划的实施。上述策略所面临的问题在于，DevOps的涵盖范围远远超出了仅作为一种适用于技术人员的方法论或框架。在当代社会，组织面临着持续不断的内部和外部影响，这些影响有可能在大范围内塑造其文化。这些影响因素包括新竞争者带来的市场颠覆、全球经济波动、地缘政治不稳定、货币波动、劳动力人口结构的变化以及技术的迅猛发展等。这些力量既为组织带来了有利的前景，也可能带来挑战。
- en: The capacity to swiftly adapt and innovate within this particular context has
    emerged as a fundamental organizational asset. The adoption of DevOps, *when implemented
    successfully*, brings about an abundance of prosperity in systems development
    processes, technology, and culture. These changes are crucial in fostering organizational
    agility, which in turn allows businesses to attain a competitive edge in today’s
    dynamic markets. The aforementioned factors result in a decrease in the time required
    to bring a product or service to the market, a reduction in wasteful activity,
    an enhancement in overall quality, and the introduction of novel and revolutionary
    products and services.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种特定背景下，迅速适应和创新的能力已经成为一种基本的组织资产。*当成功实施* DevOps时，会在系统开发过程、技术和文化方面带来丰硕的成果。这些变化对促进组织敏捷性至关重要，而敏捷性又使得企业能够在当今动态市场中获得竞争优势。上述因素使得将产品或服务推向市场所需的时间减少，减少了浪费性的活动，提高了整体质量，并引入了新颖和革命性的产品与服务。
- en: The inherent difficulty faced by leaders and agents of change when initiating
    DevOps initiatives is discovering a means to overcome these obstacles and strategically
    enhance the likelihood of success as you adopt DevOps principles, methods, and
    culture.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动DevOps举措时，领导者和变革推动者面临的固有困难，是如何找到克服这些障碍的途径，并在采用DevOps原则、方法和文化时，战略性地提升成功的可能性。
- en: Adept leadership matters
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高效的领导力至关重要
- en: The key to successfully navigating the obstacles associated with cultural change
    in DevOps implementations lies in the leadership approach adopted by corporate
    executives.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 成功应对与文化变革相关的障碍，在于企业高层领导所采取的领导方法。
- en: 'Your initial goal should be to gain insight into factors that contribute to
    the significant failure rates observed in most organizational change initiatives.
    Numerous studies identify multiple variables that contribute to suboptimal outcomes
    in a variety of scenarios. These variables include inadequate planning, institutional
    resistance to change, ineffective communication, and impractical expectations.
    The prevailing considerations are predominantly associated with the manner in
    which members of a company respond to change. The three highest-ranked items,
    listed in sequential order, are presented here:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你的初步目标应该是深入了解导致大多数组织变革举措失败的关键因素。大量研究指出，多种变量导致了在各种场景中次优结果的出现。这些变量包括不充分的规划、对变革的制度性抵抗、低效的沟通和不切实际的期望。最主要的考虑因素通常与公司成员对变革的反应方式密切相关。按顺序列出的三项最高优先级的因素如下：
- en: '**Resistance to change**: This refers to the natural tendency of individuals
    or groups to oppose or be hesitant toward adopting new ideas, technologies, or
    processes. This resistance can manifest in various ways, such as skepticism, fear,
    or a desire to maintain the status quo.'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**对变革的抵抗**：指的是个人或团体对采纳新想法、新技术或新流程的自然倾向，通常表现为怀疑、恐惧或维持现状的愿望。'
- en: '**Low readiness for change**: This refers to a state in which individuals or
    organizations are resistant or unprepared to embrace and adapt to new ideas, processes,
    or technologies. This lack of readiness can hinder progress and innovation, as
    it creates barriers to implementing necessary changes. It may stem from various
    factors.'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**低变革准备度**：指的是个人或组织对于接受和适应新思想、新流程或新技术的抗拒或缺乏准备的状态。这种准备不足可能会妨碍进展和创新，因为它为实施必要的变革设置了障碍，可能源自各种因素。'
- en: '**Poor employee engagement**: This refers to a situation where employees are
    not fully involved, motivated, or committed to their work. This lack of engagement
    can have negative consequences for both the employees and the organization as
    a whole. It may result in decreased productivity.'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**员工参与度低**：指的是员工未能充分参与、激励或投入到工作中。这种参与度不足可能对员工和整个组织产生负面影响，导致生产力下降。'
- en: Equipped with this new understanding, it is important to set out on a quest
    to explore strategies for enhancing the ability of individuals within an organization
    to effectively adapt to and embrace change. Numerous everyday observations indicate
    that the manner in which leaders exercise their leadership and interact with others
    holds considerable sway over the degree to which employees respond amiably to
    change, or not.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这种新的理解后，重要的是开始探索提升组织内部个人有效适应和接受变革能力的策略。大量的日常观察表明，领导者如何行使领导职能、与他人互动，极大地影响了员工对变革的反应——是否友好。
- en: 'For the better part of four decades, literature on the topic of successful
    leadership behavior has been centered on the *Theory of Transformational Leadership*,
    pioneered by James McGregor Burns. More academic publications have been published
    on this subject than on any other alternative theory of leadership in history.
    According to Burns and other scholars such as James Victor Downton, successful
    transformational leaders possess the four main traits listed next:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去近四十年里，有关成功领导行为的文献一直围绕着**变革型领导理论**展开，该理论由詹姆斯·麦格雷戈·伯恩斯（James McGregor Burns）首创。关于这一主题的学术出版物数量，远超历史上任何其他替代领导理论的出版物数量。根据伯恩斯和其他学者如詹姆斯·维克托·唐顿（James
    Victor Downton）的研究，成功的变革型领导者具有以下四个主要特征：
- en: '**Intellectual stimulation**: In addition to questioning the status quo, transformational
    leaders foster innovation in their followers. The leader inspires people to investigate
    novel approaches and new avenues for educational opportunities.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智力激励**：除了质疑现状，变革型领导者还激励追随者创新。领导者鼓励人们探索新的方法和教育机会。'
- en: '**Individualized consideration**: Transformational leadership is a leadership
    style that encompasses the act of providing support and encouragement to individual
    followers. Transformational leaders prioritize the establishment of supportive
    relationships by maintaining open lines of communication. This encourages followers
    to freely express their ideas and enables leaders to promptly acknowledge and
    appreciate the distinct contributions made by every follower.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个性化关怀**：变革型领导力是一种领导风格，涵盖了对个别追随者提供支持和鼓励的行为。变革型领导者优先建立支持性关系，通过保持开放的沟通渠道，鼓励追随者自由表达他们的想法，并使领导者能够及时确认和欣赏每个追随者的独特贡献。'
- en: '**Inspirational motivation**: Transformational leaders possess a well-defined
    vision that they are capable of effectively communicating to their followers.
    Leaders have the ability to inspire and motivate their followers, fostering a
    shared sense of passion and motivation toward achieving common goals.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**鼓舞人心的激励**：变革型领导者拥有明确的愿景，并能够有效地传达给他们的追随者。领导者有能力激励并鼓舞追随者，培养共同的激情和动力，以实现共同的目标。'
- en: '**Idealized influence**: In the context of leadership, the transformational
    leader assumes the responsibility of serving as a model for their followers. Followers
    exhibit trust and respect toward their leader, leading them to imitate the leader’s
    behavior and adopt their values as their own:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理想化影响力**：在领导力的背景下，变革型领导者承担着作为其追随者榜样的责任。追随者表现出对领导者的信任和尊敬，这使他们模仿领导者的行为，并将领导者的价值观视为自己的：'
- en: '![Figure 11.1: The four key tenets of transformational leadership](img/B21803_11_1.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图11.1：变革型领导力的四个关键原则](img/B21803_11_1.jpg)'
- en: 'Figure 11.1: The four key tenets of transformational leadership'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：变革型领导力的四个关键原则
- en: For company executives in charge of present and future DevOps transformations,
    additional research shows two crucial conclusions. First, the adoption of particular
    change management strategies is less effective than inspiring followers to actively
    support organizational change as a whole. Furthermore, and maybe most importantly,
    transformative leadership consists of practices that can be taught to and learned
    by others.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于负责当前和未来DevOps转型的公司高层管理人员，额外的研究显示了两个关键结论。首先，采用特定的变革管理策略不如激励追随者积极支持组织整体变革那样有效。更重要的是，变革型领导力包含的是可以教授和学习的实践。
- en: Leadership is the secret ingredient
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 领导力是成功的秘密成分
- en: Organizations can enhance the likelihood of success for DevOps and other change
    initiatives by implementing training, coaching, and mentoring programs. These
    programs aim to develop the transformational leadership competency of current
    and future leaders within the organization. By investing in these initiatives,
    organizations can take tangible and proven measures to increase the probability
    of success in their endeavors. DevOps leaders who achieve success demonstrate
    notable qualities in vision, authenticity, and dedication to personal development
    and creativity. They empower their teams and encourage decentralized decision-making.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 组织可以通过实施培训、辅导和指导计划来提高DevOps和其他变革项目成功的可能性。这些计划旨在培养组织内现有和未来领导者的变革型领导力能力。通过投资这些计划，组织可以采取切实可行且经过验证的措施，增加其努力成功的概率。成功的DevOps领导者在远见、真实性、个人发展和创造力方面展现出显著的品质。他们赋能团队并鼓励去中心化决策。
- en: This has obvious implications. The manner in which leaders exercise their leadership
    skills plays a crucial role in successfully managing the challenging process of
    cultural transformation associated with the adoption of DevOps practices. The
    leadership style chosen by an organization has a direct impact on how its members
    react to significant changes in processes, technology, roles, and ideologies.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点具有显著的影响。领导者运用领导技能的方式在成功管理与采用DevOps实践相关的文化转型这一挑战性过程中的作用至关重要。组织所选择的领导风格直接影响其成员对流程、技术、角色和意识形态重大变化的反应。
- en: The likelihood of a successful DevOps transformation significantly increases
    when practitioners are actively involved, motivated, empowered, and supported
    within a conducive environment. This environment is characterized by leaders who
    provide a clear vision, lead with honesty and authenticity, and cultivate a culture
    of trust.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当从业人员积极参与、充满动力、拥有授权并得到支持，且处于一个有利的环境中时，成功实现DevOps转型的可能性会显著增加。这种环境的特点是，领导者提供清晰的愿景，以诚实和真实性为领导原则，并培养信任文化。
- en: Thinking DevOps is mainly about tools
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以为DevOps主要是关于工具
- en: The implementation of DevOps release management is heavily dependent on the
    utilization of various tools, which serve the purpose of expediting task completion
    and fostering enhanced collaboration among different groups involved in the software
    development and operations processes. The selection of appropriate tools holds
    significant importance in this regard. As we have covered extensively in this
    book, the DevOps methodology encompasses a wide spectrum of tools, including source
    code and version control management tools, **continuous integration/continuous
    deployment** (**CI/CD**) tools, communication and collaboration platforms, and
    monitoring tools. Notably, these tools are already numerous and continually growing
    as each day passes.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps发布管理的实施在很大程度上依赖于各种工具的使用，这些工具的目的是加速任务的完成，并促进不同团队之间的协作，从而改进软件开发和运维过程。选择合适的工具在这方面具有重要意义。正如本书中广泛讨论的那样，DevOps方法论涵盖了广泛的工具，包括源代码和版本控制管理工具、**持续集成/持续部署**（**CI/CD**）工具、沟通与协作平台以及监控工具。值得注意的是，这些工具已经非常多，而且随着时间的推移不断增加。
- en: On the contrary, dedicating excessive amounts of time and focus toward selecting
    the optimal tool (which, it should be noted, does not actually exist), and subsequently
    providing training to teams for its utilization, becomes a futile endeavor. This
    is especially true if said tool fails to accurately replicate your desired workflow.
    The hypothetical tool in our example here has the potential to accomplish the
    task it was selected for through the pursuit of clever strategies and occasional
    manual implementation. However, this approach may result in a more arduous and
    exasperating UX (for both internal and external parties) than necessary, often
    resulting in limited utilization of the tool.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，过多地投入时间和精力去选择最佳工具（应该注意的是，这样的工具实际上并不存在），并随后为团队提供培训以便其使用，这是一项徒劳的努力。尤其是在所选择的工具未能准确地复制你期望的工作流程时，这一点尤为明显。我们这里举的假设工具通过运用巧妙的策略和偶尔的手动操作，的确有可能完成它被选中的任务。然而，这种方法可能会导致比必要的更加繁重且令人沮丧的用户体验（无论是对于内部人员还是外部人员），常常导致工具的使用受到限制。
- en: DevOps, at its core, revolves around the elimination of obstacles and the optimization
    of the process for delivering value to customers. In the arena of problem-solving,
    the significance lies not in the individual tools employed, but rather in the
    identification and alleviation of pain points. Even more significant than any
    of this are the minds of the individuals and the creative talent employed to use
    these tools and to solve these challenges. It would behoove any executive to know
    where their bread is buttered.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的核心在于消除障碍，并优化为客户交付价值的过程。在问题解决的领域中，重要性不在于使用的单一工具，而在于识别和缓解痛点。比这一切更为重要的是，运用这些工具并解决这些挑战的人才和创造力。任何高层管理人员都应当知道自己成功的关键所在。
- en: '*But why do we* *need tools?*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*但为什么我们* *需要工具？*'
- en: Tools are essential in DevOps release management for various reasons. They enable
    us to efficiently solve complex problems, automate tasks, and enhance productivity.
    Tools provide a systematic approach to problem-solving by offering predefined
    algorithms, libraries, and frameworks that simplify the development process. They
    also facilitate collaboration among developers by providing VCS, **integrated
    development environments** (**IDEs**), and others. As per the established definition
    of *tool*, any object or device that assists in the successful completion of a
    specific task can be categorized as a tool. In the natural world, it is observed
    that even seemingly ordinary objects such as sticks or rocks can serve as tools
    to accomplish specific objectives.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 工具在DevOps发布管理中至关重要，原因有多种。它们帮助我们高效解决复杂问题、自动化任务并提高生产力。工具通过提供预定义的算法、库和框架，提供一种系统化的解决问题的方法，从而简化了开发过程。它们还通过提供版本控制系统（VCS）、**集成开发环境**（**IDEs**）等，促进开发人员之间的协作。根据*工具*的既定定义，任何有助于成功完成特定任务的物体或设备都可以被归类为工具。在自然界中，甚至像棍子或石头这样的普通物体也能作为工具来完成特定目标。
- en: However, everything starts to look like a nail when you only have a hammer,
    so it’s important for DevOps craftspeople to have a wide variety of tools in their
    toolbox. New resources and methods will become available to us as we refine our
    skills. However, an artisan’s attention is more focused on the finished product
    than on the process itself. The tool alone is only a means to an end; having more
    and better tools can only increase your effectiveness as a capable human being.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当你只有一把锤子时，一切看起来都像钉子，因此DevOps工匠的工具箱中需要有各种各样的工具。随着我们技能的不断提升，将会有新的资源和方法提供给我们。然而，工匠的注意力更多地集中在最终产品上，而不是过程本身。工具本身仅仅是达到目的的一种手段；拥有更多、更好的工具只能提高你作为一个有能力的人的效率。
- en: The selection of tools for companies is contingent upon their specific process.
    In order to identify the most suitable tool for your organization, it is crucial
    to possess a comprehensive understanding of your existing process flow. It is
    necessary to ensure that this process flow has been optimized to its fullest potential.
    Subsequently, the next step involves evaluating various tools and selecting the
    one that aligns with your optimized process flow, requiring minimal customization.
    In the context of DevOps and pipeline management, it is important to consider
    the compatibility of different tools. Moreover, it is possible that a particular
    tool is highly effective for a minor aspect of your process but lacks compatibility
    with another tool that is essential for a more crucial process. Consequently,
    the tool that is ideal for the specific area may not be suitable when considering
    DevOps and your pipelines as a whole. This is referred to as the *local* *optimization
    problem*.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 企业选择工具的关键在于其具体的流程。为了识别最适合您组织的工具，必须全面了解现有的流程流程。需要确保该流程已经最大化地优化。接下来，下一步是评估不同的工具，并选择与优化后的流程兼容的工具，且需要最小化定制。在DevOps和流水线管理的背景下，考虑不同工具的兼容性非常重要。此外，某些工具可能在流程的某一小部分非常有效，但与另一种对更重要的流程至关重要的工具不兼容。因此，专门针对特定领域的理想工具，在考虑DevOps和整个流水线时，可能并不适用。这被称为*局部*
    *优化问题*。
- en: Ultimately, it’s better to design your ideal processes in advance, and then
    select the tools that can automate or complement them effectively and with little
    to no human involvement required to implement them.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，最好是提前设计好理想的流程，然后选择能够有效自动化或补充这些流程的工具，并且实现这些工具时几乎无需人工干预。
- en: Treating DevOps and CI/CD as the same thing
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将DevOps和CI/CD视为相同的概念
- en: DevOps release management encompasses automated build processes and infrastructure,
    but its scope extends beyond just CI/CD. DevOps and CI/CD, although related, are
    distinct concepts in the field of computer science, project management, or a combination
    thereof. DevOps can be conceptualized as a holistic approach to software development
    and deployment, akin to a bicycle wheel. In this analogy, CI/CD can be likened
    to one of the spokes of the wheel, playing a crucial role in facilitating the
    smooth operation of the entire apparatus.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 发布管理涵盖了自动化构建流程和基础设施，但其范围不仅限于 CI/CD。DevOps 和 CI/CD 虽然相关，但在计算机科学、项目管理或二者结合的领域中，它们是不同的概念。DevOps
    可以被看作是一个全面的软件开发和部署方法，类似于一辆自行车的车轮。在这个类比中，CI/CD 可以看作是车轮的一根辐条，在促进整个系统平稳运行中起着至关重要的作用。
- en: DevOps’ success hinges upon effective collaboration among essential stakeholders,
    similar to other proficient teams in any industry. In the realm of software engineering,
    the collaboration between development engineers and operations staff is imperative
    across the entire development life cycle. This collaboration spans various stages,
    including design, development, and production support. DevOps is a cultural paradigm
    that encompasses the entire SDLC, extending beyond the roles of software developers
    and operations personnel. It is characterized by a set of behaviors that promote
    collaboration and integration between these traditionally separate functions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 的成功取决于关键利益相关者之间的有效协作，这与任何行业中的高效团队类似。在软件工程领域，开发工程师和运维人员之间的协作对于整个开发生命周期至关重要。这种协作跨越多个阶段，包括设计、开发和生产支持。DevOps
    是一种文化范式，涵盖了整个软件开发生命周期，超出了软件开发人员和运维人员的角色。它以一组行为为特征，促进这两个传统上分离的职能之间的协作与整合。
- en: In the context of DevOps release management, the integration of software development,
    deployment, information security, QA, release management, and related disciplines
    results in a unified collection of practices. To be clear, the use of CI/CD does
    not accredit that a company is successfully applying DevOps practices.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 发布管理的背景下，软件开发、部署、信息安全、QA、发布管理和相关学科的整合，形成了一个统一的实践集合。需要明确的是，使用 CI/CD
    并不能证明一个公司成功应用了 DevOps 实践。
- en: The absence of a clearly defined DevOps concept in organizations leads to the
    adoption of inefficient models from the past, where development, QA, and systems
    administration teams operate in isolated silos. Teams that do not possess the
    fundamental principles of DevOps, namely effective communication, seamless collaboration,
    and transparent practices, will not be able to progress as desired.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 组织中缺乏明确的 DevOps 概念，导致采用过去效率低下的模式，其中开发、QA 和系统管理团队各自为政。没有掌握 DevOps 基本原则的团队，即有效沟通、无缝协作和透明化实践，无法如期推进工作。
- en: Understanding the key differences
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解关键差异
- en: 'CI/CD refers to a collection of development methodologies that facilitate the
    swift and dependable deployment of code modifications. DevOps is a cohesive set
    of concepts, methodologies, procedures, and technologies that facilitate collaboration
    between development and operations teams in order to optimize product development.
    Although the two concepts are interconnected, they exhibit distinct characteristics.
    To put it succinctly, the following applies:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 是一组开发方法论，旨在促进代码修改的快速且可靠部署。DevOps 是一整套概念、方法论、程序和技术，旨在促进开发和运维团队之间的协作，以优化产品开发。尽管这两个概念是相互关联的，但它们具有不同的特征。简而言之，以下内容适用：
- en: CI/CD encompasses a series of development methodologies that facilitate the
    prompt and dependable deployment of code modifications
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI/CD 包括一系列开发方法论，旨在促进代码修改的快速且可靠部署。
- en: DevOps encompasses a range of concepts, methodologies, procedures, and technologies
    that foster collaboration between development and operations teams to optimize
    product development
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps 包括一系列概念、方法论、程序和技术，促进开发和运维团队之间的协作，以优化产品开发。
- en: In today’s business landscape, it is fundamental for any technology-driven organization
    aiming to achieve optimal operational efficiency and exceptional product quality
    to recognize the significance of DevOps and **continuous integration/continuous
    delivery** (**CI/CD**). Internationally, development teams depend on CI/CD practices
    to swiftly and consistently deliver enhancements to code. Conversely, DevOps principles
    encourage collaboration between development and operations teams in order to optimize
    all aspects of product development.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今的商业环境中，任何技术驱动型组织要想实现最佳的运营效率和卓越的产品质量，必须认识到DevOps和**持续集成/持续交付**（**CI/CD**）的重要性。在国际上，开发团队依赖CI/CD实践快速且一致地交付代码改进。相反，DevOps原则鼓励开发和运维团队之间的协作，以优化产品开发的各个方面。
- en: Let us explicate the fundamental distinctions between CI/CD and DevOps further.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步阐明CI/CD与DevOps之间的根本区别。
- en: The scope of DevOps versus CI/CD
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DevOps与CI/CD的范围
- en: CI is a fundamental principle in software engineering that promotes the regular
    integration of team members’ work. In the context of software development, practitioners
    of this methodology strive to incorporate changes into the code base on a frequent
    basis, typically on a daily or even an hourly basis. In the traditional context,
    integration was an expensive ordeal that necessitated extensive communication
    between various engineering groups. In order to overcome this obstacle, CI promotes
    the use of testing and building automation tools. The development of a software-defined
    life cycle is the end aim of this kind of automation. By reducing the amount of
    work required for integration, successful CI helps teams find and fix integration
    errors faster.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）是软件工程中的一项基本原则，倡导团队成员定期整合各自的工作。在软件开发的背景下，遵循这一方法论的实践者努力频繁地将更改整合到代码库中，通常是每天甚至每小时进行一次。在传统的环境中，集成是一项昂贵的工作，需要不同工程组之间进行大量的沟通。为了克服这一障碍，CI提倡使用自动化的测试和构建工具。这种自动化的最终目标是发展出一个软件定义的生命周期。通过减少集成所需的工作量，成功的CI帮助团队更快地发现和修复集成错误。
- en: Similar to how CI optimizes the processes of building and testing software,
    CD enhances the effectiveness of packaging and deploying software applications.
    Organizations that embrace CD can effectively orchestrate the entire SDLC, encompassing
    design, construction, packaging, and deployment. This approach facilitates the
    realization of software-defined production, an approach that aims to optimize
    cost-efficiency and automation to the fullest extent possible.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于持续集成（CI）优化构建和测试软件的过程，持续交付（CD）增强了软件应用程序打包和部署的效果。采用CD的组织能够有效地协调整个软件开发生命周期（SDLC），涵盖设计、构建、打包和部署等环节。这种方法有助于实现软件定义的生产方式，旨在最大限度地优化成本效益和自动化。
- en: At its best, CI/CD allows for the rapid deployment of updated software to production.
    This promotes a culture of DevOps, whereby the SDLC gives users more chances to
    share feedback and more opportunities to be imaginative.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在最佳状态下，CI/CD允许快速地将更新后的软件部署到生产环境中。这促进了DevOps文化的发展，使得软件开发生命周期（SDLC）为用户提供更多的反馈机会和更多的创意空间。
- en: The purpose of DevOps and CI/CD
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DevOps和CI/CD的目的
- en: CI/CD consolidates all code updates of an application into a unified repository,
    followed by automated testing. This process guarantees the comprehensive development
    of the product and meticulously readies it for deployment. The primary objective
    of CI/CD is to facilitate rapid, streamlined, and automated deployment of product
    updates. This process additionally reduces product defects, thereby enhancing
    average user satisfaction levels. In essence, a robust CI/CD pipeline enhances
    the speed and quality of software development, provides benefits to operational
    and product development teams, and increases the overall business value for the
    enterprise and its customers.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD将应用程序的所有代码更新整合到一个统一的代码库中，随后进行自动化测试。这个过程保证了产品的全面开发，并精心准备它以进行部署。CI/CD的主要目标是促进产品更新的快速、简化和自动化部署。此外，这一过程还减少了产品缺陷，从而提高了用户的平均满意度。总的来说，强大的CI/CD流水线能够提高软件开发的速度和质量，为运维和产品开发团队提供益处，提升企业及其客户的整体业务价值。
- en: 'DevOps release management is a methodology that aims to resolve a common challenge
    faced by many organizations: a lack of coordination and collaboration between
    the operations, development, and other teams throughout the process of creating
    new software. Due to insufficient collaboration, a communication gap and lack
    of cooperation will usually result in significant obstacles and costly setbacks.
    By bringing together the various elements found throughout the SDLC, DevOps release
    management aims to streamline these efforts. DevOps accomplishes this by promoting
    a software development process that is more nimble, simplified, and productive.
    By fostering and sustaining a shared culture among teams, DevOps readily facilitates
    the adoption of common business processes and the overall improvement of collaboration
    levels.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps发布管理是一种旨在解决许多组织面临的共同挑战的方法：在创建新软件的过程中，操作、开发及其他团队之间缺乏协调与合作。由于协作不足，沟通鸿沟和缺乏合作通常会导致重大障碍和昂贵的挫折。通过将SDLC中的各个要素整合起来，DevOps发布管理旨在简化这些工作。DevOps通过推动更加灵活、简化且富有成效的软件开发过程来实现这一目标。通过在团队之间培养和维持共享文化，DevOps能够轻松促进共通业务流程的采用，并整体提高协作水平。
- en: The individual benefits of DevOps and CI/CD
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DevOps和CI/CD的个人利益
- en: 'There are many advantages to implementing a CI/CD pipeline, including the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 实施CI/CD流水线有许多优势，包括以下几点：
- en: Because of automated testing, fewer bugs are introduced into production.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于自动化测试，生产环境中引入的错误较少。
- en: Addressing integration issues early on in the cycle simplifies the release-building
    process.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发周期初期解决集成问题，简化了发布构建过程。
- en: Because developers get notifications the moment a build fails, they need to
    switch between tasks much less frequently and spend less time doing so.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为开发人员在构建失败时会立刻收到通知，所以他们需要切换任务的频率大大减少，从而节省了时间。
- en: Less money is spent on testing thanks to CI servers’ ability to run hundreds
    of tests in a matter of seconds. The QA team can now devote their time and energy
    to more important and valuable tasks.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于CI服务器能够在几秒钟内运行数百个测试，因此测试花费的资金更少。QA团队现在可以将他们的时间和精力投入到更重要和更有价值的任务中。
- en: Reducing the amount of time teams spend preparing for release simplifies software
    deployment.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少团队在准备发布时花费的时间，简化了软件部署。
- en: The end-to-end feedback loop becomes more effective with an increase in the
    frequency of releases.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着发布频率的增加，端到端反馈循环变得更有效。
- en: Streamlines the iteration process by making small change implementation decisions
    easily.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过轻松做出小的变更实施决策，简化了迭代过程。
- en: 'Embracing DevOps release management has several advantages, such as the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 接受DevOps发布管理有多个优势，如下所示：
- en: Enhanced agility, automation, collaboration, efficiency, and quality
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强了敏捷性、自动化、协作、效率和质量
- en: Early detection and addressal of errors and bugs
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 及早发现并解决错误和bug
- en: Minimized **time to** **market** (**TTM**)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化**市场时间**（**TTM**）
- en: Enhanced **return on** **investment** (**ROI**)
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强的**投资回报率**（**ROI**）
- en: Improved user satisfaction
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高了用户满意度
- en: Reduced risk of misalignment and miscommunication
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少了对齐错误和沟通失误的风险
- en: A robust DevOps culture fosters collaboration among teams to align their efforts
    toward shared business objectives, rather than working in isolated departmental
    silos. Automated testing and continuous feedback, when combined with agile principles,
    speed up development and make bug management a breeze. When DevOps processes are
    implemented correctly, they yield several benefits, including improved product
    quality, enhanced user satisfaction, and increased profitability.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 强大的DevOps文化促进了团队之间的协作，使他们的努力朝着共同的商业目标对齐，而不是各自孤立的部门。自动化测试和持续反馈与敏捷原则相结合，能够加速开发并让错误管理变得轻松。当DevOps过程得到正确实施时，它带来了多个好处，包括提高产品质量、增强用户满意度和增加盈利能力。
- en: Quality as an afterthought
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将质量视为事后考虑
- en: Quality in products, services, employees, and reputation is something every
    business aspires to, but it’s not easy to achieve. Using it as a company slogan,
    posting it online, displaying clever quotations about it in break rooms, and even
    devoting sections about it in employee handbooks can be simple to do. However,
    for a culture of quality to truly permeate an organization, it must permeate every
    employee’s consciousness.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 产品、服务、员工和声誉中的质量是每个企业都渴望的目标，但实现这一目标并不容易。将其作为公司口号、在线发布、在休息室展示有关它的聪明引语，甚至在员工手册中专门列出相关内容，都很容易做到。然而，要让质量文化真正渗透到组织中，它必须渗透到每位员工的意识中。
- en: In order to achieve this goal, businesses need to adopt a comprehensive strategy
    regarding quality. A peer-driven approach, support from the highest corporate
    echelons, generous rewards, and the inclusion of all aspects of the company, especially
    people, processes, products, and services, are all required for it to be successful.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一目标，企业需要采用全面的质量战略。同行推动的方式、高层支持、丰厚的奖励，以及涉及公司所有方面，特别是人员、流程、产品和服务的包含，都是成功的关键。
- en: Notably, certain companies may engage in the practice of consistently generating
    development code without incorporating essential quality checkpoints at each stage
    of the pipeline. CI/CD pipelines, while enabling rapid software release, may not
    yield high-value outcomes. In order to optimize performance, it is crucial to
    prioritize speed while also ensuring that the desired level of quality is maintained.
    When implementing DevOps practices, it is essential to evaluate the quality aspects
    offered by each stage of the pipeline and implement local optimization techniques
    where it is beneficial. Numerous low-overhead methods exist for adding quality
    checks to the pipeline, and doing so will pay off in the long run by allowing
    for the early detection of problematic code.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，某些公司可能会持续生成开发代码，但在每个阶段的管道中未纳入必要的质量检查。CI/CD管道虽然能够快速发布软件，但可能无法带来高价值的成果。为了优化性能，关键是优先考虑速度的同时确保维持所需的质量水平。在实施DevOps实践时，必须评估管道中每个阶段提供的质量方面，并在有利的情况下实施局部优化技术。存在许多低开销的方法可以在管道中添加质量检查，做到这一点将有助于长期的回报，因为它能在早期发现有问题的代码。
- en: 'Fortunately, the majority of development engineers have a basic understanding
    of shifting left, which is useful for saving time and money by discovering mistakes
    earlier in the process. Put yourself ahead of the competition by adopting a DevOps
    culture that prioritizes early defect detection. Ensure that your pipelines feature
    mature quality checkpoints throughout. This will allow you to release better software
    faster. When constructing a mature pipeline, it is essential to incorporate various
    quality stages, such as the following:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，大多数开发工程师基本理解“左移”的概念，这有助于通过在流程早期发现错误来节省时间和成本。通过采用以早期缺陷检测为优先的DevOps文化，领先于竞争对手。确保你的管道在整个过程中都具备成熟的质量检查点，这将使你能够更快地发布更好的软件。在构建成熟的管道时，纳入以下各类质量阶段是至关重要的：
- en: Code coverage
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码覆盖率
- en: Static code analysis
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态代码分析
- en: Unit tests
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试
- en: Integration tests
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成测试
- en: Infrastructure verification
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施验证
- en: Post-deployment testing
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署后测试
- en: You can greatly enhance the maturity and value of your CI/CD pipelines by incorporating
    these quality checks from the very beginning.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从一开始就将这些质量检查纳入其中，你可以极大地提升CI/CD管道的成熟度和价值。
- en: 'Here are seven things to keep in mind when you launch your strategic quality
    management initiative:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 启动战略质量管理计划时，请记住以下七点：
- en: '**Articulate your fundamental principles and standards of excellence**: One
    of the most difficult parts is usually figuring out what quality you’re aiming
    for. When describing what quality means to your company, be as detailed as possible;
    otherwise, your definition will remain vague and never get off the ground. Be
    careful to keep tabs on your progress after providing specific examples of quality
    metrics.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阐明你的基本原则和卓越标准**：通常最困难的部分是弄清楚你要追求的质量是什么。描述公司对质量的定义时，尽量做到详细；否则，你的定义将显得模糊，永远无法付诸实践。在提供具体的质量度量示例后，务必关注自己的进展。'
- en: '**Avoid prioritizing compliance as the primary focus**: Several companies believe
    that by achieving compliance with industry standards such as the **International
    Organization for Standardization** (**ISO**), the **Health Insurance Portability
    and Accountability Act** (**HIPAA**), the **Health Information Trust Alliance**
    (**HITRUST**), the **National Institute for Standards and Technology** (**NIST**),
    the **Current Good Manufacturing Practice** (**cGMP**), the **General Data Protection
    Regulation** (**GDPR**), and others, they have demonstrated their commitment to
    quality. However, they fail to grasp the essence of the subject. By prioritizing
    quality, compliance naturally follows. Compliance can be likened to focusing solely
    on achieving a passing grade in a test. While it assists companies in overcoming
    a specific obstacle, it does not adequately prepare them for establishing an enduring
    culture of excellence.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免将合规性作为首要关注点**：许多公司认为，通过达到如**国际标准化组织**（**ISO**）、**健康保险流通与问责法案**（**HIPAA**）、**健康信息信任联盟**（**HITRUST**）、**国家标准与技术研究院**（**NIST**）、**现行良好制造规范**（**cGMP**）、**通用数据保护条例**（**GDPR**）等行业标准的合规性，他们就展示了对质量的承诺。然而，他们没有抓住这一主题的本质。通过优先考虑质量，合规性自然会跟随。合规性可以类比于单纯关注通过考试的成绩。虽然它帮助公司克服了某些障碍，但并没有充分准备公司建立持久的卓越文化。'
- en: '**Evangelize quality management to all coworkers**: While many companies do
    have people in charge of **quality control** (**QC**) and QA, quality should really
    be everyone’s job. Without fear of retaliation, employees should feel safe providing
    feedback and suggestions for enhancing quality. In addition, quality warriors
    should be given the opportunity to implement their ideas and be recognized when
    their efforts yield positive results.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**向所有同事宣传质量管理**：虽然许多公司确实有专人负责**质量控制**（**QC**）和质量保证（QA），但质量管理应该是每个人的责任。员工应当在没有报复担忧的情况下，能够自由地提供反馈和建议以提升质量。此外，质量战士应当有机会实施他们的想法，并在其努力取得积极成果时得到认可。'
- en: '**Streamline the process with automation**: The impact of quality processes
    on a company’s operations is apparent, but achieving those effects can be a lengthy
    and complex process. Ensure quality processes are followed, documentation is current
    and accurate, and dashboards alert you to any quality issues that can be addressed
    before they get out of hand. This is really made easier with an automated **quality
    management system** (**QMS**) that consolidates data across divisions. With the
    system taking care of quality processes, managers can concentrate on innovation
    and the core business rather than responding to emergencies and P1 incidents.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过自动化简化过程**：质量过程对公司运营的影响是显而易见的，但实现这些效果可能是一个漫长且复杂的过程。确保质量过程得到遵循，文档保持最新和准确，并且仪表板能够在质量问题变得无法控制之前及时提醒你。这通过自动化的**质量管理系统**（**QMS**）更加容易实现，该系统整合了跨部门的数据。在系统处理质量流程时，经理们可以专注于创新和核心业务，而不是应对紧急情况和P1事件。'
- en: '**Allow data to guide decision-making and actions**: Although the development
    of a genuine culture of excellence may appear to be a subjective skill, it actually
    involves a significant amount of scientific principles. Quality should be guided
    and driven by data that identifies areas of concern, predicts patterns, and aids
    in monitoring progress.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**让数据引导决策和行动**：虽然建立真正的卓越文化似乎是一项主观技能，但实际上它涉及大量的科学原理。质量应当由数据引导，数据可以识别问题领域、预测模式并帮助监控进展。'
- en: '**Continuously measure work in progress (WIP)**: Establishing clear goals with
    measurable objectives is the first step in any quality initiative, whether it’s
    a new production process, expanded product features, or revised security testing
    criteria. Next, get input from stakeholders such as clients, staff, or vendors
    to evaluate the project’s performance.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续衡量在制品（WIP）**：设定明确的目标并配有可衡量的指标是任何质量改进计划的第一步，无论是新的生产过程、扩展的产品特性，还是修订的安全测试标准。接下来，向客户、员工或供应商等利益相关者征求意见，以评估项目的执行情况。'
- en: '**Make it your goal to pursue continuous improvement**: After delivering the
    applications and collecting feedback from stakeholders, it is crucial to ensure
    that the process does not conclude at that point. Genuine quality programs are
    inherently dynamic and must continuously adapt to address evolving needs and requirements.
    By consistently elevating your own standards, you can guarantee that quality becomes
    ingrained in the culture rather than being a temporary solution to a particular
    issue.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将持续改进作为你的目标**：在交付应用程序并收集利益相关者反馈后，确保过程不会在此结束是至关重要的。真正的质量程序本质上是动态的，必须持续适应以应对不断变化的需求和要求。通过不断提升自己的标准，你可以确保质量成为文化的一部分，而不仅仅是针对特定问题的临时解决方案。'
- en: Companies that prioritize quality as an inherent part of their organizational
    culture, rather than treating it as a short-term response to a problem, reap numerous
    advantages such as decreased security incidents, fewer occurrences of rolling
    back a release, and less damage to their reputation. However, it is only when
    a business adopts a comprehensive and integrated approach that quality can genuinely
    be established as its distinctive brand. A wise person once said *the way that
    you do one thing is the way that you* *do everything*.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将质量作为组织文化内在组成部分而非短期应对问题的方式的公司，能够获得诸多优势，如减少安全事件、减少回滚发布的情况以及更少的声誉损害。然而，只有当企业采取全面和一体化的方式时，质量才能真正成为其独特的品牌。曾有智慧的人说过，*你做一件事的方式就是你做所有事情的方式*。
- en: Lacking dashboarding and reporting, or having too much
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺乏仪表盘和报告，或者报告过多
- en: Effective software development requires clear and open communication among all
    teams, which is crucial. It is essential for all individuals and groups to have
    a shared understanding and knowledge so that no one is excluded or left behind.
    Effective dashboards facilitate stakeholder buy-in and enhance the overall efficiency
    of the process.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 高效的软件开发需要各团队之间清晰和开放的沟通，这至关重要。所有个人和团队必须有共同的理解和知识，确保没有人被排除在外或落后于他人。有效的仪表盘能够促进利益相关者的支持，并提升整个过程的效率。
- en: Regrettably, this crucial element often lacks the necessary emphasis in numerous
    DevOps initiatives. Dashboarding and reporting of outstanding quality is frequently
    overlooked or given little consideration. As failures accumulate and identifying
    the underlying cause becomes challenging, firms become aware of the need for additional
    resources to facilitate decision-making.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 可惜的是，这一关键元素在许多DevOps倡议中往往没有得到足够的重视。高质量的仪表盘和报告常常被忽视或未受到充分考虑。随着失败的积累，发现根本原因变得更加困难，公司开始意识到需要更多的资源来推动决策过程。
- en: Effective dashboarding and reporting, characterized by openness, not only enhances
    decision-making but also enables the team to closely monitor all stages of the
    development cycle, hence facilitating process refinement and pipeline optimization.
    When difficulties arise, as they inevitably will, these issues will no longer
    be overlooked. And after you’ve trained the staff on how to log and report correctly,
    it helps everyone get to the bottom of things, which means fewer failures in the
    future.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 高效的仪表盘和报告，通过开放性，能不仅提升决策质量，还能使团队紧密监控开发周期的各个阶段，从而促进流程的优化和管道的改进。当问题出现时，正如它们不可避免地会出现的那样，这些问题将不再被忽视。而且，当你训练员工如何正确记录和报告时，帮助每个人追根溯源，这意味着未来的失败会更少。
- en: If specific stages in the pipeline consistently experience a significant failure
    rate, having visibility into these stages will facilitate prioritizing the investigation
    into the root causes of these failures. These feedback loops are crucial for achieving
    success in DevOps and pipeline implementation. By implementing effective dashboarding
    and reporting, you not only reduce time and cost but also enhance customer satisfaction
    and UX by delivering superior software. Quantitative data and statistics are highly
    persuasive, and numerous institutions have incorporated the collection of diverse
    indicators.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果管道中的特定阶段持续出现较高的失败率，能够看到这些阶段的情况将有助于优先调查这些失败的根本原因。这些反馈循环对于在DevOps和管道实施中取得成功至关重要。通过实施有效的仪表盘和报告，你不仅可以减少时间和成本，还可以通过交付更优质的软件来提高客户满意度和用户体验。定量数据和统计数字具有很强的说服力，许多机构已经开始采集多种指标。
- en: However, one can potentially become trapped in a state of excessive pursuit
    of dashboards and metrics, commonly referred to as *a dashboard and metric black
    hole*. The process of collecting basic data, while well intentioned, can rapidly
    become a tedious and time-intensive task. Perhaps even worse, in such an obsessive
    mental condition, it is more than likely that you will end up losing focus of
    what the point is in the first place. The primary purpose of collecting measurements
    is to enable companies to make informed decisions and implement strategies aimed
    at enhancing the metrics, not to create attractive-looking dashboards.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，人们可能会陷入过度追求仪表板和指标的状态，这通常被称为*仪表板和指标黑洞*。尽管收集基础数据本意良好，但这个过程可能迅速变得繁琐且耗时。更糟糕的是，在这种过度执着的心理状态下，你很可能最终会失去最初的焦点。收集数据的主要目的是帮助公司做出明智的决策，并实施旨在改善指标的战略，而不是为了创建外观吸引的仪表板。
- en: One approach to achieve this objective is to focus on collecting **DevOps Research
    and Assessment** (**DORA**) metrics and providing teams with easy access to them.
    Additionally, agreed-upon procedures can be established to improve the quality
    of this data specifically for each team. By embracing a focused and concentrated
    strategy, these teams can initiate the adoption of engineering best practices,
    thereby facilitating the establishment and integration of a DevOps culture within
    the company.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这一目标的一种方法是专注于收集**DevOps研究与评估**（**DORA**）指标，并为团队提供便捷的访问方式。此外，可以为每个团队建立商定的程序，专门提高数据质量。通过采用集中的战略，这些团队可以开始采纳工程最佳实践，从而促进DevOps文化在公司内的建立和融合。
- en: Selecting the wrong metrics to measure project success
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择错误的指标来衡量项目成功
- en: Although DevOps offers the advantage of faster delivery, teams must remain cautious
    as the increased pace might potentially have a detrimental impact on the quality
    of the product. Having a well-defined and quantifiable set of DevOps metrics can
    effectively monitor the advancement and excellence of the project.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管DevOps的优势在于更快的交付，团队仍需保持谨慎，因为加快的节奏可能对产品质量产生不利影响。拥有一套明确且可量化的DevOps指标，可以有效地监控项目的进展和卓越表现。
- en: DevOps offers a high degree of adaptability and can be easily tailored to the
    specific needs of any organization. Begin by clearly delineating the issues you
    aim to address through the implementation of DevOps and outlining the specific
    characteristics of your organization’s DevOps transformation. Subsequently, ascertain
    the potential obstacles that your organization may face in implementing DevOps
    and utilize them as a basis for your metrics. Selecting the appropriate DevOps
    metrics for your unique organization will enable you to assess your level of achievement.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps提供了高度的适应性，并且可以轻松地根据任何组织的具体需求进行定制。首先，明确你希望通过实施DevOps解决的问题，并概述你组织的DevOps转型的具体特征。然后，确定你的组织在实施DevOps时可能面临的潜在障碍，并将其作为衡量指标的依据。为你的独特组织选择合适的DevOps指标，将帮助你评估自己的成就水平。
- en: In addition to the technical metrics, it is essential to consider the selection
    of business metrics in the context of DevOps. These metrics play a crucial role
    in effectively communicating the ROI of DevOps initiatives to key stakeholders.
    In order to effectively measure and evaluate performance, it is critically important
    to carefully choose metrics that are focused on the desired outcomes and are in
    line with the priorities of the business. For example, when the primary business
    objective is to enhance efficiency in organizational processes, it is advisable
    to employ metrics that specifically measure costs.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 除了技术性指标外，还需要在DevOps的背景下考虑选择商业指标。这些指标在有效传达DevOps项目投资回报率（ROI）给关键利益相关者方面起着至关重要的作用。为了有效地衡量和评估绩效，至关重要的是仔细选择那些专注于期望结果的指标，并且与商业优先事项保持一致。例如，当主要商业目标是提高组织流程的效率时，建议使用专门衡量成本的指标。
- en: What are DevOps metrics?
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是DevOps指标？
- en: It is necessary for businesses to invest a significant amount of time, money,
    and resources in order to undergo a DevOps transformation. This includes reevaluating
    everything from tools to communication and training. It is essential to have the
    capability to evaluate DevOps metrics and performance benchmarks in a way that
    is both clear and accurate in order to effectively define goals, improve efficiency,
    and monitor progress.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 企业需要投入大量时间、金钱和资源来进行 DevOps 转型。这包括重新评估从工具到沟通和培训的各个方面。为了有效地定义目标、提高效率并监控进展，必须具备评估
    DevOps 指标和性能基准的能力，而且这种评估要既清晰又准确。
- en: When launching a DevOps initiative, it’s important to identify which **key performance
    indicators** (**KPIs**) will help you overcome your business’ unique hurdles.
    KPIs for DevOps should show the full extent of the transformation’s value and
    effect on the company. In order to make informed decisions about future processes
    and technologies, it is important to have accurate performance metrics to measure
    the value of current work.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 DevOps 项目时，确定哪些 **关键绩效指标**（**KPIs**）能够帮助克服企业独特的挑战非常重要。DevOps 的 KPI 应该能够展示转型对公司价值和影响的全面体现。为了对未来的流程和技术做出明智的决策，必须有准确的性能指标来衡量当前工作的价值。
- en: Characteristics of useful DevOps metrics
  id: totrans-192
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 有效 DevOps 指标的特征
- en: 'To better understand how a DevOps initiative or team is doing, here are five
    characteristics that reflect a high-quality DevOps indicator:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解 DevOps 项目或团队的表现，以下是五个能够反映高质量 DevOps 指标的特征：
- en: '**Measurable**: In order to ensure consistency and comparability, metrics should
    possess standardized values that remain constant throughout protracted time periods.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可测量性**：为了确保一致性和可比性，指标应具有标准化的值，并在较长时间内保持不变。'
- en: '**Actionable**: A comprehensive analysis of the metric over a long period of
    time should yield insights into potential enhancements to systems, workflows,
    strategies, and other areas.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可操作性**：对指标进行长期的综合分析应能够揭示出系统、工作流程、策略等领域潜在的改进空间。'
- en: '**Reliable**: In order to ensure the accuracy of measurements, it is important
    to prevent team members from manipulating or influencing the results in any way.
    This ensures that the measurements are objective and free from any intentional
    bias or distortion.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可靠性**：为了确保测量的准确性，必须防止团队成员以任何方式操控或影响结果。这能够确保测量结果客观、公正，不受任何故意偏见或扭曲的影响。'
- en: '**Traceable**: The metrics should not merely make a passing reference to a
    general issue; rather, they should point directly to a root cause.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可追溯性**：这些指标不应仅仅是对一般问题的简单提及；相反，它们应直接指向根本原因。'
- en: '**Relevant**: It is essential that these metrics are designed to measure factors
    that hold significant importance to the overall functioning and success of the
    business.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相关性**：这些指标必须设计成能够衡量对企业整体运营和成功具有重要意义的因素。'
- en: 'Avoid tracking DevOps metrics that do not provide meaningful insights or contribute
    to the overall improvement of the software development and operations processes,
    such as the following:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 避免跟踪那些不能提供有意义洞察或不促进软件开发和运维过程整体改进的 DevOps 指标，例如以下这些：
- en: '**Non-DevOps metrics**: For example, metrics that measure *flow load* are more
    suited for organizations that subscribe to the **Scaled Agile Framework** (**SAFe**),
    as opposed to DORA metrics, which are specifically designed to measure the success
    of DevOps release management initiatives.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非 DevOps 指标**：例如，衡量*流量负载*的指标更适合那些采纳 **Scaled Agile Framework**（**SAFe**）的组织，而不是专门设计用来衡量
    DevOps 发布管理成功的 DORA 指标。'
- en: '**Frivolous metrics**: Metrics should be designed to facilitate and enhance
    teamwork. Vain, or shallow, metrics show that you can do something, but they don’t
    really show how well your company is doing. Sometimes, incompetent leaders will
    ask for teams to produce vapid metrics to cover up their inexperience or negligence.
    For example, since code can be discarded entirely during refactoring and, occasionally,
    less code is better for the organization, metrics such as weekly code lines written
    become meaningless. Unless each build significantly improves the end-user experience,
    the quantity of builds per day is meaningless.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无意义的指标**：指标应该设计为促进和增强团队合作。虚浮的或浅显的指标显示你能做某事，但它们并不能真正展示公司运作得多好。有时，无能的领导者会要求团队提供无意义的指标，以掩盖他们的经验不足或疏忽。例如，由于在重构过程中代码可能会被完全丢弃，且有时更少的代码对组织更有利，像每周编写的代码行数这样的指标就变得毫无意义。除非每次构建都能显著改善最终用户体验，否则每天构建的数量是毫无意义的。'
- en: '**Contentious metrics**: When only the top performers are considered winners
    and everyone else is considered losers, it becomes challenging to anticipate effective
    communication and collaboration within and among teams. Avoid creating metrics
    that foster derision or contention among team members or teams, such as measuring
    the number of failed builds or fatal errors. Teams will develop a fixation on
    enhancing the metric, rather than identifying genuine issues and collaborating
    to address them.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有争议的指标**：当只有顶尖表现者被认为是赢家，而其他人都被视为输家时，预测团队内外的有效沟通与协作变得具有挑战性。避免创建那些会引发轻蔑或争斗的指标，如衡量失败的构建次数或致命错误数量。团队可能会过于专注于提高这些指标，而忽视识别实际问题并共同合作解决它们。'
- en: Six key DevOps metrics and six key customer satisfaction metrics
  id: totrans-203
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 六个关键DevOps指标和六个关键客户满意度指标
- en: 'In DevOps release management, the assessment of performance and progress is
    crucial for organizations. To this end, six key metrics have emerged as significant
    indicators. These metrics serve as a yardstick for evaluating the effectiveness
    and efficiency of DevOps practices within most organizations:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps发布管理中，评估性能和进展对于组织至关重要。为此，六个关键指标已经成为重要的衡量标准。这些指标作为评估大多数组织内DevOps实践的有效性和效率的尺度：
- en: '**Lead Time**: In order to gauge completion time, the group needs to establish
    when exactly the task will begin and conclude. Every step of the process, from
    committing code to deploying it to production, needs to be quantifiable. One way
    to achieve this is by making the most of automated testing and integration processes;
    another is to shorten the total deployment time.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交付时间**：为了衡量完成时间，团队需要明确任务的开始和结束时间。从提交代码到将其部署到生产环境的每个步骤，都需要是可量化的。实现这一目标的一种方法是充分利用自动化测试和集成过程；另一种方法是缩短整体部署时间。'
- en: '**Deployment Frequency**: Automated deployment pipelines, API calls, and manual
    scripts are just a few ways that deployment frequency can be measured. Due to
    the fact that not every deployment is advanced to production, this metric focuses
    on the technical performance of the pipeline rather than the shipping frequency.
    Failed deployments impact customer satisfaction overall, but more frequent deployments
    can reduce errors associated with them.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署频率**：自动化部署管道、API调用和手动脚本只是衡量部署频率的一些方式。由于并非每次部署都会推进到生产环境，因此这个指标更多关注管道的技术性能，而非发布频率。失败的部署会整体影响客户满意度，但更频繁的部署可以减少相关的错误。'
- en: '**Change Failure Rate**: It is important to measure both success and failure
    rates when evaluating a DevOps initiative, even though increasing velocity is
    one of the intended goals. Unhappy customers occasionally become a consequence
    of failing to ensure that changes are consistently being released to production.
    As the number of deployments increases, if KPIs show a higher rate of failure,
    it is time to slow down and investigate problems in the pipeline.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更失败率**：在评估DevOps项目时，重要的是要同时衡量成功率和失败率，尽管提高速度是其中一个目标。客户的不满有时是未能确保变更一致地发布到生产环境的结果。随着部署次数的增加，如果关键绩效指标（KPI）显示更高的失败率，就该放慢速度，调查管道中的问题。'
- en: '**Mean Time to Recovery (MTTR)**: This metric measures the time it takes for
    an organization to bounce back from a failure and is part of the DevOps framework.
    This metric is crucial for businesses as it shows how well teams can cope with
    disruptions and return to their regular operations quickly. Minutes and hours
    are the standard units of measurement, but sometimes days must be used as well.
    If you want to shorten the time it takes to resolve an issue, you need the correct
    application monitoring tools and strong cooperation between operations and developers.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均恢复时间（MTTR）**：这个指标衡量组织从故障中恢复所需的时间，是DevOps框架的一部分。该指标对企业至关重要，因为它显示了团队应对中断并快速恢复常规运营的能力。以分钟和小时为标准计量单位，但有时也需要使用天数。如果你希望缩短解决问题的时间，就需要正确的应用监控工具以及运营和开发人员之间的紧密合作。'
- en: '**Customer Ticket Volume**: This metric gauges how satisfied customers are.
    In many cases, the end user is the one who notices the flaws and errors, rather
    than the testers. After that, they will get in touch with customer service to
    voice their concerns. Consequently, a key measure of application quality is the
    amount of customer tickets labeled as problems or bugs. A low number of tickets
    shows that the application is robust, whereas a high number suggests that there
    are quality issues.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户工单量**：这个指标衡量客户的满意度。在许多情况下，最终用户是第一个注意到缺陷和错误的人，而不是测试人员。之后，他们会联系客户服务，提出他们的疑虑。因此，应用质量的一个关键衡量标准是被标记为问题或缺陷的客户工单数量。工单数量较低表明应用程序很稳健，而较高的数量则表明存在质量问题。'
- en: '**Defect Escape Rate**: Defects will happen regardless of how good a DevOps
    pipeline you have. The pipeline’s development or testing phases might be the best
    time to find these flaws. However, users will be able to spot them even if they
    pass tests. The defect escape rate can be defined as the percentage of production
    issues discovered both before and after deployment. It identifies weaknesses in
    the software development process, where bugs can easily slip through, and suggests
    ways to improve and strengthen the assurance of products and processes.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺陷逃逸率**：无论DevOps流水线多么优秀，缺陷总是会发生。流水线的开发或测试阶段通常是发现这些缺陷的最佳时机。然而，即使它们通过了测试，用户仍然可能会发现这些缺陷。缺陷逃逸率可以定义为在部署前后发现的生产问题的百分比。它帮助识别软件开发过程中的薄弱环节，指出漏洞容易被忽视的地方，并建议改进产品和过程保障的方法。'
- en: DevOps programs offer significant advantages to organizations, yet their implementation
    involves complexity and substantial costs. DevOps metrics play a crucial role
    in assessing the performance of DevOps teams and evaluating the effectiveness
    of implementing DevOps practices. These metrics provide valuable insights into
    the overall performance and impact of DevOps initiatives in organizations of any
    size or maturity level.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps项目为组织提供了显著的优势，但其实施涉及复杂性和可观的成本。DevOps指标在评估DevOps团队表现和评估实施DevOps实践的有效性方面起着至关重要的作用。这些指标提供了对DevOps倡议在任何规模或成熟度的组织中整体表现和影响的宝贵洞察。
- en: 'Before we move forward, it is imperative that we spend some time reviewing
    key metrics that measure customer satisfaction. While these are indeed a separate
    concern from DevOps in a strict sense, they will enable you as both a leader and
    a release manager to succeed, no matter the context. These metrics apply to both
    internal and external customers. For example, you may be developing an internal
    product that is intended to assist other departments with being more productive.
    Or, you might be developing a software product in the traditional sense, with
    external facing customers in mind:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续前进之前，必须花一些时间回顾衡量客户满意度的关键指标。虽然这些指标在严格意义上与DevOps是两个不同的领域，但它们将帮助你作为领导者和发布经理取得成功，无论在什么样的背景下。这些指标适用于内部和外部客户。例如，你可能正在开发一个内部产品，目的是帮助其他部门提高工作效率。或者，你可能正在开发一个传统意义上的软件产品，面向外部客户：
- en: '**Customer Satisfaction (CSAT) score**: Measuring the CSAT score involves conducting
    a survey where customers are asked to rate their experience following an interaction
    or purchase. You’re familiar with those; they appear right after you’ve completed
    a task or made a purchase, and inquire about your experience. The survey typically
    includes a scale, either numerical or emoji-based, that captures a wide range
    of experiences, from negative to positive. According to the feedback, the CSAT
    score can range from 0% to 100%.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**顾客满意度 (CSAT) 分数**：测量CSAT分数包括进行一项调查，要求顾客在互动或购买后对他们的体验进行评分。你一定见过这种调查，它通常在你完成任务或购买后出现，询问你的体验。这项调查通常包括一个评分尺度，可以是数字或表情符号形式，涵盖从负面到正面的各种体验。根据反馈，CSAT分数可以在0%到100%之间变化。'
- en: Calculating the CSAT score
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 计算CSAT评分
- en: Take the total number of favorable responses gathered and divide that number
    by the total number of responses surveyed, then multiply the result by 100\. This
    will yield your company’s CSAT score. The final result is the percentage of happy
    consumers doing business with your company.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 计算CSAT分数的方法是：将收集到的有利回应总数除以调查总回应数，再将结果乘以100\。这将得出你公司CSAT分数。最终结果是与你公司做生意的满意消费者的百分比。
- en: '**Net Promoter Score (NPS)**: NPS is a commonly used metric, usually measured
    on a scale of one out of ten, for assessing customer loyalty and enthusiasm for
    a brand. It provides insights into customer satisfaction and their likelihood
    of recommending your business.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**净推荐值 (NPS)**：NPS是一个常用的指标，通常使用1到10的评分标准，用于评估客户对品牌的忠诚度和热情。它提供了关于客户满意度和他们推荐你公司业务的可能性的洞察。'
- en: Determining the NPS
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 确定NPS
- en: Patrons who rate your business as a nine or ten are generally referred to as
    promoters. They’ve developed a strong sense of loyalty toward your business and
    are enthusiastic about recommending it to someone else. Patrons who rate your
    business as a seven or eight are commonly referred to as passives. Their loyalty
    to your company can’t be considered unbreakable, so they might consider doing
    business with your competitors if presented with a superior alternative. Patrons
    who rate your business with a score of seven or below are considered detractors.
    They lack devotion toward your business and might actively express unfavorable
    views or opinions about it publicly.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 评分为9或10的顾客通常被称为推广者。他们对你的公司已经形成了强烈的忠诚感，并热衷于向他人推荐你的公司。评分为7或8的顾客通常被称为中立者。他们对公司忠诚度不能视为牢不可破，因此在面对更好的选择时，他们可能会考虑与竞争对手做生意。评分为7或以下的顾客被视为贬低者。他们对你的公司缺乏忠诚，可能会公开表达对公司不利的观点或意见。
- en: '**Customer Effort Score (CES)**: CES is a metric used to gauge the level of
    effort patrons demonstrate when engaging with your company. These exchanges might
    include factors such as the level of effort required to use your company’s products
    and services, or the ease with which customers had their issues resolved by your
    company’s customer service representatives.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**顾客努力分数 (CES)**：CES是一种衡量顾客在与公司互动时所付出努力程度的指标。这些互动可能包括使用公司产品和服务所需的努力程度，或客户服务代表解决顾客问题的难易程度。'
- en: It is recommended to send a survey to measure the level of effort customers
    had to spend following their last customer service exchange. You might consider
    implementing CES surveys to assess how satisfied patrons are with each individual
    customer service representative. This will enable the members of your customer
    service staff to further improve their results and ensure that your business maintains
    its commitment to providing exceptional customer support.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 建议发送调查问卷以测量客户在最近一次与客户服务互动后所花费的努力程度。你可能会考虑实施CES调查，以评估顾客对每个客户服务代表的满意度。这将使你的客服团队能够进一步提升表现，并确保你的公司继续致力于提供卓越的客户支持。
- en: Measuring CES
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 测量CES
- en: The measurement of CES entails asking one question and the reply is scored on
    a scale from one to seven, where one indicates the greatest disapproval with the
    assertion.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: CES的测量包括提问一个问题，回答会根据1到7的尺度进行评分，其中1表示对该陈述的最大反对。
- en: The CES metric is determined by the proportion of customers who express agreement,
    indicating that the company effectively facilitated the resolution of their issue.
    Building customer loyalty becomes more achievable when customers transition from
    a state of disagreement or neutrality.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: CES指标通过表示同意的客户比例来确定，表明公司有效地帮助解决了他们的问题。当客户从不同意或中立状态转变为同意时，建立客户忠诚度变得更加可行。
- en: '**Customer Churn Rate (CCR)**: The CCR is the percentage of a company’s customers
    that discontinue using its services. It’s also called the attrition rate. A typical
    way to quantify it is as a percentage of a company’s subscribers who cancel within
    a particular time frame. It’s also the percentage of workers who quit within a
    given time span. Growth must outpace churn, in terms of customer loss, for a business
    to increase its customer base.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户流失率（CCR）**：CCR是公司客户停止使用其服务的百分比。它也叫做流失率。通常的量化方式是计算在特定时间段内取消订阅的公司客户的百分比。它也代表在特定时间范围内辞职的员工百分比。为了让业务扩大客户基础，增长必须超过流失，尤其是在客户流失方面。'
- en: Calculating CCR
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 计算CCR
- en: The churn rate formula is *(Lost Customers ÷ Total Customers at the Start of
    Time Period)* *x 100*.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 客户流失率公式是*(流失客户 ÷ 时间段开始时的总客户数)* *x 100*。
- en: '**Customer Health Score (CHS)**: A CHS is the most effective indicator for
    assessing a customer’s likelihood of remaining loyal to your company or defecting
    to a competitor. These ongoing client retention statistics are particularly valuable
    to account executives and support staff as they provide insight into the likelihood
    and extent of customer churn.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户健康评分（CHS）**：CHS是评估客户是否保持忠诚或流失到竞争对手的最有效指标。这些持续的客户留存统计数据对客户经理和支持人员特别有价值，因为它们提供了关于客户流失可能性和程度的洞察。'
- en: Calculating the CHS
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 计算CHS
- en: 'Contrary to the majority of SaaS metrics, the CHS lacks a predetermined algorithm.
    However, the computation of your CHS will be distinct to your organization and
    your particular product. However, there are five primary stages that you will
    follow when computing a client health score:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数SaaS指标不同，CHS没有预设的算法。然而，CHS的计算方法将是特定于您的组织和产品的。不过，计算客户健康评分时有五个主要步骤：
- en: 1\. Define what the level of health is for your customers.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 定义您的客户的健康水平。
- en: 2\. Choose the metrics that will be used for making predictions.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 选择用于预测的度量指标。
- en: 3\. Establish a system for assigning scores.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 建立一个评分分配系统。
- en: 4\. Divide your consumer data into distinct segments.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将您的消费者数据分为不同的细分群体。
- en: 5\. Display a graphical representation of your CHS.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 展示您的CHS的图形表示。
- en: '**Customer Lifetime Value (CLTV)**: CLTV is a quantitative measure that represents
    the anticipated amount of income generated by just one customer during the entire
    duration of their relationship with your business.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户生命周期价值（CLTV）**：CLTV是一个定量衡量指标，表示一个客户在与您的业务关系期间所产生的预期收入总额。'
- en: Calculating the CLTV
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 计算CLTV
- en: Multiply the customer value by the average customer lifespan. To determine the
    CLTV, you can find the customer value by multiplying the average purchase value
    by the average number of purchases. After obtaining the average customer lifespan,
    it is possible to calculate the CLTV by multiplying it by the customer value.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 将客户价值与平均客户生命周期相乘。要确定CLTV，您可以通过将平均购买值与平均购买次数相乘来找到客户价值。获得平均客户生命周期后，可以通过将其与客户价值相乘来计算CLTV。
- en: 'Here are the formulas:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是公式：
- en: '- **Calculating customer value** is done by multiplying the average purchase
    value by the average number of purchases.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '- **计算客户价值**是通过将平均购买值与平均购买次数相乘来完成的。'
- en: '- **Calculating the CLTV** is done by multiplying the customer value by the
    average customer lifespan.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '- **计算CLTV**是通过将客户价值与平均客户生命周期相乘来完成的。'
- en: Leaving others behind as you move forward with DevOps
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在推进DevOps的过程中，把其他人甩在身后。
- en: The internal justification for implementing DevOps practices in your organization
    plays a crucial role in shaping the foundational aspects of an organization’s
    culture. In the context of agriculture, the search for fertile soil is a fundamental
    endeavor. Fertile soil refers to soil that possesses the necessary nutrients and
    physical properties to support the growth and development of plants, and this
    search typically involves assessing various factors. In the context of a DevOps
    transformation, it is crucial to effectively communicate, demonstrate, and persuade
    key stakeholders about its significance. Failing to do so may result in skepticism
    toward the initiative and a propensity to seize any chance to prove its failure.
    Being in an unfavorable position is undesirable, especially when embarking on
    a journey where others anticipate your failure.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的组织内部实施 DevOps 实践的理由在塑造组织文化的基础方面起着至关重要的作用。在农业领域，寻找肥沃的土壤是一项基础性工作。肥沃的土壤是指具有必要的营养和物理特性，能够支持植物的生长和发展，而这项工作通常需要评估多个因素。在
    DevOps 转型的背景下，如何有效地沟通、展示和说服关键利益相关者 DevOps 的重要性至关重要。如果做不到这一点，可能会导致对这一举措的怀疑，并且容易抓住任何机会证明它的失败。在一个不利的境地中行动是不可取的，特别是当你开始一个别人预期你失败的旅程时。
- en: In order to achieve success, it is important to have the full participation
    and support of all individuals, including those who express doubt or skepticism
    toward DevOps. Notably, engineers are the ones who most often exhibit a skeptical
    disposition. Having spent a decade or two in this industry, they have witnessed
    numerous ideas and novel approaches emerge and fade away. They can dismiss DevOps
    as a “failed approach” to the same recurring issues without much difficulty. If
    you execute it inadequately, DevOps will undoubtedly become another unsuccessful
    methodology. It is crucial for you and your team to demonstrate to others the
    possibilities and encourage them to participate in a manner that includes everyone.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得成功，获得所有人员的全面参与和支持非常重要，包括那些对 DevOps 表示怀疑或质疑的人。值得注意的是，工程师通常是最容易持怀疑态度的群体。在行业中工作了十年或二十年后，他们见证了无数新思想和新方法的出现和消失。他们很容易把
    DevOps 看作是解决相同重复问题的“失败方法”。如果执行不当，DevOps 无疑会成为另一种失败的工作方法。因此，您和您的团队必须向其他人展示 DevOps
    的可能性，并鼓励他们以一种包括所有人的方式参与其中。
- en: Utilize data and emphasize the potential for expedited software delivery when
    persuading executives. However, engineers require an understanding of how DevOps
    will enhance their job satisfaction. Demonstrate the correlation between DevOps
    and business requirements, as well as its ability to minimize obstacles throughout
    the software delivery process. Ensure that you do not excessively promote or exaggerate
    the concept. Encountering DevOps challenges is inevitable, as DevOps is not a
    panacea and necessitates significant effort initially to establish a culture of
    continuous learning, where engineers have the freedom to make errors and advance
    their careers.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在说服高管时，利用数据并强调加快软件交付的潜力。然而，工程师需要理解 DevOps 如何提升他们的工作满意度。展示 DevOps 与业务需求之间的关联，以及它在整个软件交付过程中如何减少障碍。确保不要过度宣传或夸大这一概念。遇到
    DevOps 挑战是不可避免的，因为 DevOps 不是万能药，它需要在初期投入大量的努力来建立持续学习的文化，在这种文化中，工程师可以自由犯错并推进自己的职业生涯。
- en: Once you have reached a critical point in your organization, where a significant
    number of individuals embrace the concept of DevOps, you can confidently move
    forward, knowing that your organization and its members are fully supportive.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的组织达到了一个关键点，许多人开始接受 DevOps 概念，你就可以自信地向前推进，知道你的组织及其成员完全支持这一转变。
- en: Working toward a common vision and goals
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 朝着共同的愿景和目标努力
- en: An optimally functioning DevOps team is characterized by its members possessing
    a unified perspective that aligns with the overall objectives of the organization.
    Team members should possess an intimate understanding of the company’s strategic
    objectives in order to enhance their capacity for decision-making during the development
    and implementation of applications. The leadership of the organization plays a
    crucial role in effectively conveying this vision and facilitating team members’
    awareness of the desired trajectory of their ambitions. By striving toward a common
    vision, the team establishes a stronger foundation for collaborating on their
    respective projects and effectively communicating with one another.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 一个高效运作的DevOps团队的特点是其成员拥有统一的视角，与组织的整体目标保持一致。团队成员应当深入理解公司战略目标，以提升他们在开发和实施应用程序过程中的决策能力。组织的领导层在有效传达这一愿景和帮助团队成员意识到其雄心的期望轨迹方面发挥着至关重要的作用。通过朝着共同的愿景努力，团队为在各自的项目上合作并有效沟通奠定了更加坚实的基础。
- en: Equally significant to a collective vision is a collective awareness of the
    specific objectives they are striving to accomplish. These goals encompass not
    only the organizational level but also the team and project levels. Furthermore,
    they can incorporate objectives for the DevOps initiative itself, encompassing
    various teams and a wide range of software projects. DevOps teams should be spared
    the burden of managing conflicting priorities and competing objectives. Once again,
    the leadership of the organization will have a crucial role in effectively communicating
    goals at different levels, as well as sharing the overall vision.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 对集体愿景来说，集体对具体目标的意识同样重要。这些目标不仅涵盖组织层面，还包括团队和项目层面。此外，它们还可以包含DevOps本身的目标，涉及不同的团队和广泛的软件项目。DevOps团队应避免管理冲突的优先级和相互竞争的目标的负担。再次强调，组织的领导层在有效传达不同层面的目标以及共享整体愿景方面扮演着至关重要的角色。
- en: Opposition to change
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 反对变革
- en: Some key stakeholders and employees may find the transition to DevOps terrifying.
    To avoid coming across as revolutionary, try framing it as an improvement over
    current development methods because that is exactly what DevOps release management
    is.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关键利益相关者和员工可能会觉得转向DevOps令人恐惧。为了避免给人一种颠覆性的感觉，尽量将其框架定位为对现有开发方法的改进，因为这正是DevOps发布管理所带来的价值。
- en: Potentially, the act of providing advice to an individual can elicit a negative
    response from the recipient. A successful DevOps transition necessitates a smooth
    and incremental approach. The culture of DevOps can be embraced by individuals
    through a process of gradual adjustment and recognition of the diverse ways in
    which it can facilitate the development process. The integration of DevOps practices
    into a small-scale full-stack project is a commendable strategy to begin a DevOps
    transformation.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 从潜在角度来看，向个人提供建议的行为可能会引发接收者的负面反应。成功的DevOps转型需要一个平滑且渐进的过程。个人可以通过逐步调整和认识到DevOps在促进开发过程中的多样化作用来接纳DevOps文化。在一个小规模的全栈项目中整合DevOps实践，是开始DevOps转型的值得称赞的策略。
- en: After observing the benefits firsthand, teams will naturally be inclined to
    adopt the new operational procedures. As a result, everyone will be in agreement
    to transition to the new DevOps ecosystem, and the sense of unfamiliarity will
    gradually diminish.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在亲身体验到好处后，团队自然会倾向于采纳新的操作流程。因此，大家将一致同意过渡到新的DevOps生态系统，且不熟悉感将逐渐减弱。
- en: Converting to microservices from old infrastructure and design
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从旧有基础设施和设计转向微服务
- en: Despite their long-standing usefulness to the business, bygone applications
    and obsolete infrastructures, with complex architecture stacks, have the potential
    to cause problems in the near term and catastrophes in the long term. You risk
    falling behind the competition if you stick too long with what’s already been
    working, and you will likely experience instability challenges, a shortfall of
    knowledgeable support engineers, and high operational costs compared to more contemporary
    alternatives that are more efficient.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管过时的应用程序和过时的基础设施在长期以来一直对业务有益，但复杂的架构堆栈可能会在短期内引发问题，并在长期内造成灾难。如果你过于依赖已经有效的旧系统，你可能会在竞争中落后，并且可能会面临不稳定的挑战、缺乏有经验的支持工程师，以及相比于更高效、更现代化的替代方案，运营成本更高。
- en: '**Infrastructure-as-code** (**IaC**) and microservice architectures are key
    components in achieving a future of perpetual innovation. By adopting these approaches,
    the SDLC is transformed and modernized, allowing businesses to swiftly adapt to
    changing markets and meet evolving consumer expectations in real time.'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '**基础设施即代码**（**IaC**）和微服务架构是实现持续创新未来的关键组成部分。通过采用这些方法，软件开发生命周期（SDLC）得以转型和现代化，使企业能够迅速适应不断变化的市场，并实时满足不断变化的消费者期望。'
- en: By adopting microservice architectures and migrating to a cloud-native environment,
    you can enhance the efficiency of research and development operations. To succeed
    at this, a solid understanding of automation, configuration management, and CD
    processes is required for effectively managing the elevated operational workload
    associated with microservice architectures and advanced delivery strategies.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 通过采用微服务架构并迁移到云原生环境，你可以提升研发操作的效率。为此，必须具备对自动化、配置管理和持续交付（CD）过程的深入理解，才能有效管理与微服务架构和先进交付策略相关的增加的操作负荷。
- en: Limitations of monolithic-to-microservices migration
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单体架构向微服务架构迁移的局限性
- en: There is no universal answer that can be applied to all situations, and the
    same principle applies to microservices. Although the design may seem attractive
    due to its many benefits, your software may really benefit more from a monolithic
    architecture. Hence, it is vital to evaluate whether there is a legitimate need
    to transition from a monolithic architecture to a microservices architecture in
    the first place.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个普遍适用的答案可以应用于所有情况，同样的原则也适用于微服务。虽然由于其众多优势，微服务的设计可能看起来很有吸引力，但你的软件可能更适合使用单体架构。因此，首先评估是否确实有必要从单体架构迁移到微服务架构是至关重要的。
- en: When transitioning from a monolithic architecture to a microservices architecture,
    it is important to acknowledge that the process may entail substantial time and
    upfront expenses. Although the long-term cost-effectiveness of this architecture
    is unambiguous, it is important to note that allocating resources for team formation,
    infrastructure setup, and data storage is necessary for each microservice. The
    duration of the migration process directly correlates with the amount of resources
    that must be allocated.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 当从单体架构过渡到微服务架构时，必须意识到这一过程可能需要大量时间和前期投入。虽然这种架构的长期成本效益是明确的，但需要注意的是，为每个微服务分配资源来组建团队、搭建基础设施和存储数据是必要的。迁移过程的持续时间与必须分配的资源数量直接相关。
- en: 'When discussing migration times, it is important to note that there is no universally
    applicable average duration. The duration of the process can exhibit significant
    variation, ranging from 6 months to 5 years for its completion. The duration of
    the timeline for a project is influenced by two factors: the complexity of the
    project and the frequency of updates to the monolith system. These updates serve
    as a constraint on the migration process.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论迁移时间时，需要注意的是没有适用于所有情况的普遍平均时长。该过程的持续时间可能会有显著差异，完成时间从6个月到5年不等。项目时间线的持续时间受两个因素的影响：项目的复杂性和单体系统更新的频率。这些更新对迁移过程起到约束作用。
- en: In the process of migrating legacy applications to microservices, it is important
    to note that the monolithic application will continue to operate. In the context
    of software development, when faced with a lengthy migration process, it is advisable
    to periodically update the monolithic system in order to sustain your market position.
    However, it is recommended to refrain from performing this action if feasible.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在将遗留应用程序迁移到微服务的过程中，需要注意的是，单体应用程序将继续运行。在软件开发的背景下，面对漫长的迁移过程时，建议定期更新单体系统，以维持市场地位。然而，如果可能的话，建议避免进行此操作。
- en: In order to maintain efficient operation, it is necessary to establish a harmonious
    cohabitation between the monolithic and microservices versions. This is vital
    in order to prevent redundant data, guarantee dependable communication between
    various components, and minimize any potential errors. The responsibility of handling
    this task lies primarily with your migration team, as it involves numerous technical
    aspects. To achieve a successful migration from monolithic architecture to microservices,
    it is fundamental that you verify that the specialists selected to operate possess
    the requisite skills and expertise.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持高效的运营，有必要在单体和微服务版本之间建立和谐的共存关系。这对于防止冗余数据、确保各个组件之间的可靠通信以及减少潜在错误至关重要。处理这一任务的责任主要由迁移团队承担，因为它涉及多个技术方面。要实现从单体架构到微服务的成功迁移，关键是要验证所选的专家是否具备必要的技能和专业知识。
- en: Due to the inherent uniqueness of each project, a distinct approach is necessary
    for its migration process, which may not necessarily conform to established theoretical
    principles. Specialists in the field of DevOps release management must possess
    adaptability and a comprehensive understanding of various concepts, including
    familiarity with relevant tribal knowledge in order to formulate an optimal development
    strategy for each migration project.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个项目的独特性，其迁移过程需要采取不同的方法，这可能并不完全符合现有的理论原则。DevOps发布管理领域的专家必须具备适应性，并全面了解各种概念，包括对相关部落知识的熟悉，以便为每个迁移项目制定最佳的开发策略。
- en: After discussing the intricacies of transitioning from a monolithic architecture
    to a microservices architecture, we will now explore the ideal roadmap for such
    a transformation.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论从单体架构到微服务架构转换的复杂性后，我们现在将探讨这种转型的理想路线图。
- en: Monolithic-to-microservices roadmap
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单体到微服务迁移路线图
- en: The process of transitioning to microservices involves more than just a simple
    system adaptation. The procedure is intricate and requires a considerable amount
    of time. It involves substantial changes, such as reorganizing the team and choosing
    new systems and tools, among other things. Therefore, it is important to possess
    a well-defined roadmap that will facilitate the seamless integration of diverse
    modifications.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 向微服务过渡的过程不仅仅是一个简单的系统适配。该过程复杂且需要大量时间。它涉及重大变化，比如重新组织团队、选择新的系统和工具等。因此，拥有一个明确的路线图是非常重要的，这将有助于各种修改的顺利整合。
- en: 'In the context of managing multiple projects with distinct business requirements,
    it is necessary to develop individualized roadmaps that facilitate the transition
    to microservices for each one. The following roadmap provides a general framework
    for outlining this transition:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理多个具有不同业务需求的项目时，需要为每个项目制定个性化的路线图，以促进向微服务的过渡。以下路线图提供了一个概述这一转型的通用框架：
- en: '**Map out microservices**: The initial step in designing a new architecture
    is to collaboratively identify and select the microservices that will be incorporated
    into the system. Microservices are commonly organized according to their specific
    functionality, where each microservice is assigned a distinct responsibility for
    performing a particular task.'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**绘制微服务图**：设计新架构的初步步骤是共同识别并选择将被纳入系统的微服务。微服务通常根据其特定功能进行组织，每个微服务被分配一个明确的责任，以执行特定任务。'
- en: In order to divide the application appropriately and prevent microservices from
    being partially or fully duplicated, you need to look into the monolithic application
    components that might have comparable functionality and remove them. Most monolithic
    applications have the capability to be divided into smaller components. The effectiveness
    and precision of this procedure are contingent upon the proficiency and expertise
    possessed by your team.
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了适当划分应用程序并防止微服务部分或完全重复，你需要查看单体应用程序中可能具有相似功能的组件，并将其移除。大多数单体应用程序都有能力被划分为更小的组件。这个过程的有效性和精确性取决于你的团队的熟练程度和专业知识。
- en: '**Configure the infrastructure**: In order to establish a robust and efficient
    computing environment, it is advisable to enlist the expertise of seasoned DevOps
    engineers. These professionals possess the necessary knowledge and skills to define
    crucial components such as databases, communication protocols, cloud infrastructure,
    and data synchronization methods. Once these elements have been clearly defined,
    the DevOps engineers proceed to configure and establish the computing environment
    accordingly.'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**配置基础设施**：为了建立一个稳健高效的计算环境，建议寻求经验丰富的DevOps工程师的帮助。这些专业人士拥有定义关键组件的必要知识和技能，例如数据库、通信协议、云基础设施和数据同步方法。一旦这些元素得到明确的定义，DevOps工程师将继续相应地配置并建立计算环境。'
- en: '**Define and split the team**: In the context of microservices architecture,
    it is common for individual developers to be assigned responsibility for specific
    microservices. Teams can also be cross-functional, meaning they can collaborate
    with multiple services concurrently if necessary.'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定义并划分团队**：在微服务架构的背景下，通常会将每个开发人员分配到具体的微服务上负责。团队也可以是跨职能的，这意味着在必要时，团队可以与多个服务同时协作。'
- en: An alternative strategy involves the arrangement of specialists according to
    intricate procedures that have the capacity to encompass multiple microservices.
    In a typical organizational structure, different teams are assigned specific responsibilities
    to ensure efficient management of various aspects of a system. For instance, one
    team may be designated for infrastructure management, while another team may be
    responsible for data management. This division of labor allows for specialization
    and effective handling of different components within the system.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一种策略是根据复杂的程序安排专家，这些程序可以涵盖多个微服务。在典型的组织结构中，不同的团队会被分配特定的责任，以确保系统各方面的高效管理。例如，一个团队可能会被指定为负责基础设施管理，而另一个团队则可能负责数据管理。这种劳动分工使得专业化成为可能，并能够有效处理系统内的不同组件。
- en: '**Define the tech stack for each microservice**: Microservices offer the advantage
    of selecting the most suitable technology stack for each specific service. In
    order to achieve reliable and efficient performance in each microservice, it is
    essential to consult with architects, tech leads, and security specialists. This
    collaboration necessitates identifying the most appropriate technologies and frameworks
    for each component of the application. By doing so, each microservice can function
    optimally, as well as the application as a whole.'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**为每个微服务定义技术栈**：微服务的一个优势是可以为每个具体的服务选择最合适的技术栈。为了在每个微服务中实现可靠和高效的性能，必须与架构师、技术负责人和安全专家进行协作。这一合作需要识别出最适合每个应用组件的技术和框架。通过这样做，每个微服务都能够以最佳状态运行，整个应用也能正常运作。'
- en: '**Set up sprints**: After allocating teams to specific technologies for microservices
    development, it is essential to compile a comprehensive list of features present
    in the monolithic application. Subsequently, the team should proceed to establish
    sprints and assessments for each of these features. Once all necessary preparations
    have been completed, the migration process can begin.'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置冲刺**：在将团队分配到特定技术以进行微服务开发后，必须编制出单体应用程序中存在的功能的完整清单。随后，团队应该着手为这些功能建立冲刺和评估。一旦所有必要的准备工作完成，迁移过程就可以开始了。'
- en: '**Development and testing**: The development process should be initiated by
    creating a **minimum viable product** (**MVP**). This is done to evaluate the
    selected architecture and tools. This could be an initial pilot project consisting
    of one or more critical microservices. Taking this approach allows for a focused
    examination of the chosen components and their effectiveness in supporting the
    desired system.'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**开发与测试**：开发过程应通过创建**最小可行产品**（**MVP**）来启动。这是为了评估所选的架构和工具。这可以是一个包含一个或多个关键微服务的初始试点项目。采取这种方式可以集中评估所选组件及其在支持预期系统中的有效性。'
- en: Testing is an essential component of code refactoring to ensure the quality
    of the code. It is essential to ensure that the team conducts unit, integration,
    and acceptance testing while simultaneously developing the code. The tests should
    be developed in parallel with the code development process.
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试是代码重构的一个重要组成部分，确保代码的质量至关重要。必须确保团队在开发代码的同时进行单元测试、集成测试和验收测试。这些测试应与代码开发过程并行进行。
- en: '**Deployment**: The process of deploying microservices in a gradual manner
    involves ensuring that the monolithic application remains compatible with the
    changes. This approach allows for a smooth transition from a monolithic architecture
    to a microservices architecture. The implementation of this approach aims to reduce
    any disturbances that may occur during the process of transitioning.'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**部署**：逐步部署微服务的过程涉及确保单片应用与变更兼容。这种方法允许从单片架构平稳过渡到微服务架构。实施这种方法的目标是减少过渡过程中可能发生的任何干扰。'
- en: Before embarking on the migration from a monolithic architecture to a microservices
    architecture, it is important to consider additional critical variables in order
    to mitigate common hurdles. Although the monolithic-to-microservices roadmap provides
    some guidance, the following additional considerations will only further enhance
    the migration process.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在从单片架构迁移到微服务架构之前，重要的是考虑其他关键变量，以减轻常见障碍。虽然单片到微服务的路线图提供了一些指导，但以下额外的考虑将进一步增强迁移过程。
- en: Factors to consider before monolithic-to-microservices migration
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在将单片到微服务迁移之前需要考虑的因素
- en: 'When transitioning from a monolithic architecture to microservices, it is important
    to take into account the considerations that follow:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在从单片架构到微服务架构的过渡中，重要的是考虑以下几点：
- en: '**Thorough plan creation**: First and foremost in guaranteeing a smooth transition
    from monolithic to microservices architecture is a well-defined migration roadmap.
    Pay close attention to this initial step because it’s simple to miss important
    details and make mistakes if you don’t. You, the development team, and the business
    owners will all benefit from complete transparency during the migration process
    if you have a detailed plan that accounts for fair division of resources, minimization
    of risks, and workload sharing.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**彻底的计划创建**：确保从单片架构平稳过渡到微服务架构的首要步骤是制定明确的迁移路线图。在此初始步骤中要格外注意，因为如果不注意，很容易漏掉重要细节并造成错误。在迁移过程中，如果有一个详细的计划，考虑资源公平分配、风险最小化和工作负载共享，那么开发团队、业务所有者和你都将从完全透明中受益。'
- en: Also, make preparations for unexpected events and possible obstacles. Plan for
    a fallback to the old design and what to do if problems emerge during the move.
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同时，为意外事件和可能的障碍做好准备。规划回退到旧设计，并在移动过程中出现问题时采取应对措施。
- en: '**Freezing new feature development**: Upgrades and patches to systems that
    are still in operation during migrations are a leading cause of project failure.
    The team will have twice as much work to accomplish if the company is always requesting
    system changes, new features, or updates to existing ones during the transition
    to a microservices-based architecture. Prior to migrating to microservices, businesses
    must provide resources to execute these enhancements within the monolith. Because
    of this, the monolithic architecture becomes more complicated, which in turn makes
    the migration take longer and causes technical debt to accumulate.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**冻结新功能开发**：在迁移期间仍在运行的系统进行升级和补丁是项目失败的主要原因。如果公司在过渡到基于微服务的架构期间不断要求系统更改、新功能或现有功能的更新，团队将要做的工作将增加一倍。在迁移到微服务之前，企业必须提供资源来在单体应用中执行这些增强功能。因此，单片架构变得更加复杂，这反过来使迁移时间更长，并导致技术债务累积。'
- en: Consequently, the team runs the risk of squandering time and energy, leading
    to an enormous backlog of unfinished work and a microservices architecture that
    doesn’t function properly.
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果，团队面临浪费时间和精力的风险，导致庞大的未完成工作积压和功能不正常的微服务架构。
- en: '**Current system assessment**: Perform a thorough evaluation of your current
    monolithic system in order to identify areas that necessitate enhancement or contain
    obsolete features. The migration process presents a valuable opportunity to leverage
    contemporary technologies and methodologies in order to revamp inefficient and
    outdated processes. Microservices architecture allows for the incorporation of
    relatively new features with minimal modifications.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当前系统评估**：对当前的单片系统进行彻底评估，以确定需要改进的领域或包含过时功能的地方。迁移过程为利用现代技术和方法重塑低效和过时流程提供了宝贵的机会。微服务架构允许在最小修改的情况下集成相对新的功能。'
- en: In addition to refactoring pre-determined functionality, developers may encounter
    additional code vulnerabilities while performing the migration process. The possibility
    of additional modifications and a prolonged timeline for development may arise
    as a result of this.
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了重构预定的功能外，开发人员在迁移过程中可能会遇到额外的代码漏洞。由于这一原因，可能会出现额外的修改需求，导致开发周期延长。
- en: '**Choosing an experienced migration team**: Although an optimal theoretical
    microservices migration plan exists, it is often challenging to implement it completely
    in real-world scenarios due to the uniqueness of each project, necessitating a
    customized solution. In order to determine the most suitable option, it is vital
    to have a highly skilled migration team.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择经验丰富的迁移团队**：尽管存在理想的理论微服务迁移计划，但由于每个项目的独特性，完全在现实场景中实现这一计划往往充满挑战，因此需要量身定制的解决方案。为了确定最合适的方案，拥有一支高技能的迁移团队至关重要。'
- en: Achieving a successful migration entails more than simply completing a technical
    project. Undoubtedly, it will predominantly assume a technical nature, necessitating
    a methodical and cautious progression. However, the most crucial aspect is to
    carefully select the appropriate team. You require individuals possessing the
    appropriate mindsets and technical intuition. The remainder of the process relies
    on the application of specific methodologies and the proficiency of the developers.
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功的迁移不仅仅是完成一个技术项目。毫无疑问，它将主要具有技术性质，需要有条不紊和谨慎的推进。然而，最关键的一点是慎重选择合适的团队。你需要的是那些具备正确心态和技术直觉的人员。其余的过程则依赖于特定方法论的应用和开发人员的熟练度。
- en: '**Allocating sufficient time for the transition**: Take into account the amount
    of time required for the shift from a monolithic architecture to microservices.
    This is not a simple process, but rather an exploration into uncharted territory
    that might be time-consuming. The minimal timeline for the project varies depending
    on its complexity and requirements. The duration could range from 1 year to several
    years.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为过渡分配充足的时间**：考虑从单体架构转向微服务所需的时间。这不是一个简单的过程，而是一次探索未知领域的旅程，可能会非常耗时。项目的最短时间表取决于其复杂性和需求，持续时间可能从1年到几年不等。'
- en: To alleviate any anxieties regarding these timelines, it is important to note
    that your monolithic application will remain functional throughout the transfer
    process. Although it is advisable to halt expansion and the addition of new features,
    your solution will continue to function until the whole transition to microservices
    is achieved.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了缓解关于这些时间表的焦虑，重要的是要注意，在整个迁移过程中，你的单体应用仍将保持功能性。虽然建议暂停扩展和添加新功能，但你的解决方案会在完成整个向微服务的迁移之前继续运行。
- en: Deciding to automate the wrong processes
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 决定自动化错误的流程
- en: Frequently, when attempting to optimize the utilization of DevOps resources,
    teams tend to excessively automate operations that do not require automation.
    They attempt to imitate the accomplishments of industry leaders such as Amazon
    or Google by utilizing their configuration management technologies. In certain
    scenarios, crucial processes may be omitted from the automation workflow. Without
    a comprehensive understanding of how all processes and subprocesses are interconnected,
    teams may struggle to identify which processes require automation when they begin
    automating tasks.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 经常地，在优化DevOps资源利用时，团队往往会过度自动化那些不需要自动化的操作。他们试图通过使用像Amazon或Google这样的行业领袖的配置管理技术来模仿他们的成就。在某些情况下，关键流程可能会被遗漏在自动化工作流之外。如果没有全面理解所有流程和子流程是如何相互关联的，团队可能会在开始自动化任务时，难以识别哪些流程需要自动化。
- en: In the realm of automation, it is prudent to refrain from applying a blanket
    approach to every process. Instead, it is recommended to deconstruct each process
    into its individual subprocesses, such as the case when performing value stream
    mapping exercises. By doing so, a more comprehensive understanding of the process
    can be achieved, allowing for a more targeted and effective application of automation
    techniques. Next, it is necessary to evaluate each process to determine if it
    is functioning according to the expected behavior. This procedure helps DevOps
    teams twofold. First, it gives a thorough picture of each process and guarantees
    no step is neglected. Second, it prevents the incorrect automation of any process
    by mandating a comprehensive review of all procedures.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在自动化领域，谨慎起见，不应对每个过程都采取一刀切的方法。相反，建议将每个过程分解为其独立的子过程，就像进行价值流映射练习时一样。通过这样做，可以更全面地了解过程，从而更有针对性和更有效地应用自动化技术。接下来，需要评估每个过程，以确定它是否按照预期的行为运行。这个过程对
    DevOps 团队有双重帮助。首先，它提供了每个过程的全面视图，确保没有步骤被忽略。其次，通过要求对所有程序进行全面审查，它避免了任何过程被错误地自动化。
- en: It is crucial for you to recognize that DevOps extends to more than just automation.
    It covers the entire process, from generating ideas to delivering and implementing
    them into production environments. Even prominent corporations with exceptional
    DevOps teams and large budgets may not always have a clear understanding of the
    issue that they are facing, and they may encounter difficulties that impact their
    ability to effectively manage their value streams or their ability to integrate
    multiple pipelines holistically.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须认识到，DevOps 不仅仅是自动化。它涵盖了整个过程，从生成想法到交付并将其实施到生产环境中。即使是拥有卓越 DevOps 团队和巨额预算的知名公司，可能也并不总能清晰地了解他们面临的问题，且他们可能会遇到影响其有效管理价值流或全面整合多个管道的困难。
- en: In a nutshell, there is a common misconception that DevOps is really about seeking
    to automate every process. Keep in mind that just because you automate something
    doesn’t mean you’re automatically improving it. In fact, you might inadvertently
    be automating your own destruction without realizing it until it is too late.
    Hindsight is 2020...
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，有一个普遍的误解认为 DevOps 主要是为了自动化每个过程。请记住，单单自动化某个操作并不意味着你正在自动改善它。事实上，你可能在不知情的情况下正在自动化你自己的毁灭，直到为时已晚。事后诸葛亮总是明智的…
- en: A quiet customer is a happy customer
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安静的客户是一个幸福的客户
- en: For certain individuals, the notion of clients remaining silent throughout the
    entirety of their project could be perceived as a perfect scenario, even something
    they enthusiastically desire. In the context of project teams, the absence of
    interruptions and the ability to solely focus on delivering the requested outcome
    can be considered a state of bliss. Perhaps, in the midst of our pleasant dream,
    we may come to the realization that isolating ourselves from customers beyond
    the immediate project team is not a sensible approach when attempting to achieve
    our goals.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些人来说，客户在整个项目过程中保持沉默的观念可能会被视为一个完美的场景，甚至是他们热切期望的事情。在项目团队的背景下，缺乏干扰并且能够专注于交付所要求的结果可以被视为一种幸福的状态。也许，在我们美好的梦想中，我们会意识到，将自己从客户之外、只局限于立即项目团队的隔离，并不是实现目标的明智方法。
- en: The unfortunate reality is that the project team will sometimes choose to cut
    off all communication with the client. Most often, this happens after a disagreement
    or after changes in requirements have occurred and emotions run hot. The client
    may also perceive that they benefit from this since they would prefer to not deal
    with any more conflicts or difficult situations; after all, they want the project
    to get completed.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的现实是，项目团队有时会选择切断与客户的所有沟通。通常，这发生在意见不合或需求变更后，情绪变得激烈时。客户也可能认为他们从中受益，因为他们更愿意不再面对任何冲突或棘手的情况；毕竟，他们希望项目能顺利完成。
- en: This level of naivety may seem effective until there is a need for some type
    of interaction between the project and the client. Reestablishing that connection
    and beginning the conversation all over again is never easy, but it’s essential
    for the project’s success. Perhaps, the newly reestablished relationship falls
    by the wayside, and the vicious cycle of conflict and divergent viewpoints begins
    all over again. This kind of toxic relationship certainly won’t benefit anyone
    or the project in general.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这种天真可能看起来有效，直到项目和客户之间需要某种互动时。重新建立这种联系并重新开始对话从来都不容易，但它对项目的成功至关重要。也许，重新建立的关系最终会不了了之，冲突和不同观点的恶性循环将再次开始。这种有毒的关系肯定不会对任何人或项目本身带来好处。
- en: If you intentionally avoid communicating with customers because you mistakenly
    believe that they hinder your progress and that providing updates or engaging
    in conversations with them will distract you from completing project work, I’m
    here to tell you that this is foolish! It is absolutely essential that you receive
    prompt feedback from the customer as often as possible. Doing so ensures that
    your team receives vital information that is necessary to improve a product and
    produce optimal outcomes for all parties involved.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你故意避免与客户沟通，因为你错误地认为他们阻碍了你的进展，且认为提供更新或与他们交流会让你分心，影响完成项目工作，那么我想告诉你，这样做是愚蠢的！你必须尽可能及时地从客户那里获取反馈。这能够确保你的团队获得改善产品和为所有相关方产生最佳结果所必需的重要信息。
- en: 'Several factors can contribute to customers exhibiting less communication than
    anticipated:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个因素可能导致客户沟通比预期的少：
- en: '**Customers are happy with what’s happening**: Assuming that they are pleased
    with the progress of the project, they may learn through various channels how
    the project is moving in comparison to the plan and will be content with it. Although
    it is entirely feasible, it would be prudent to call and discuss it just to be
    sure.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户对正在发生的事情感到满意**：假设他们对项目进展感到满意，他们可能通过各种渠道了解到项目的进展情况与计划的对比，并对此感到满足。尽管完全可行，但最好还是打个电话，确认一下。'
- en: '**Customers have higher-priority work that needs their attention**: In certain
    instances, individuals may be engaged in multiple competing priorities such as
    other projects that they perceive as more intriguing or compelling. As a release
    or project manager, it is your responsibility to recognize where your project’s
    position lies within the customer’s hierarchy of priorities. To obtain accurate
    information regarding this, it is essential to establish consistent communication
    with your customers.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户有更高优先级的工作需要他们关注**：在某些情况下，个人可能会参与多个竞争的优先事项，例如其他他们认为更有趣或更有吸引力的项目。作为发布或项目经理，你的责任是识别你的项目在客户优先事项中的位置。要获得关于这一点的准确信息，建立与客户的持续沟通至关重要。'
- en: '**Customers don’t know what their project management responsibilities are**:
    At times, clients, particularly those in bigger companies, lack knowledge about
    how projects operate and may believe that they can continue with their other obligations
    once they have initiated the project and can wait for its successful completion.
    As a release/project manager, it is your duty to keep your clients abreast of
    project status if they lack understanding. The day may come when you really need
    their help, after all.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户不知道他们的项目管理职责是什么**：有时，尤其是在大公司中，客户可能不了解项目的运作方式，可能认为一旦启动了项目，他们就可以继续处理其他事务，并可以等待项目的成功完成。作为发布/项目经理，如果客户缺乏理解，你有责任让他们了解项目状态。毕竟，总有一天你可能需要他们的帮助。'
- en: '**Customers have lost interest in your project**: In the pursuit of completing
    a project, it is common for individuals to dedicate a significant amount of time
    and effort to what they are trying to accomplish. Your customers are likely occupied
    with their respective jobs and will not be available sometimes. When engaging
    with others, it is important to exercise caution and thoughtfulness. The primary
    purpose of providing updates is to inform stakeholders about the current status
    and any challenges that have emerged during the course of a project or task. In
    order to ensure future support for the project, it is important to establish their
    backing. In the context of customer engagement, it is crucial to address situations
    where customers become unresponsive. This lack of communication may indicate a
    potential loss of interest in the project, which could be indicative of broader
    organizational issues. Therefore, it is essential to actively engage with these
    customers to ascertain their level of interest and identify any underlying concerns.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户对你的项目失去兴趣**：在完成项目的过程中，个人通常会投入大量的时间和精力去实现目标。你的客户很可能忙于各自的工作，无法随时参与。当与他人互动时，保持谨慎和深思熟虑是很重要的。提供更新的主要目的是告知利益相关者当前的进展情况和在项目或任务过程中出现的任何挑战。为了确保项目未来获得支持，必须争取他们的支持。在客户参与的背景下，必须处理客户变得没有回应的情况。这种沟通的缺失可能表明他们对项目失去兴趣，进而反映出更广泛的组织问题。因此，积极与这些客户互动，了解他们的兴趣程度并识别潜在问题是至关重要的。'
- en: A project should not have the goal of cultivating a group of clients who are
    not particularly vocal about their needs. If some clients are more reserved than
    others or have become less communicative than they have been in the past, then
    this is an indication that something needs to be investigated more deeply. Always
    keep in mind that the customers of a project are its allies and champions, and
    it is the responsibility of individuals working on the project to maintain engagement
    with those customers. While it is true that this does take time away from what
    some people might consider to be direct project work, it is ultimately beneficial
    to make sure that you have a group of clients that are both supportive and thoroughly
    involved.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 一个项目不应以培养一群对需求不太表达意见的客户为目标。如果有些客户比其他人更为内敛，或者变得比过去更少沟通，这表明需要更深入地调查。始终记住，项目的客户是其盟友和支持者，项目中的人员有责任保持与这些客户的互动。虽然确实会花费一些时间，可能会让一些人认为这不直接涉及项目工作，但最终确保你拥有一群既支持又全程参与的客户是有益的。
- en: Summary
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This concludes [*Chapter 11*](B21803_11.xhtml#_idTextAnchor199) and this book.
    In this final chapter, you have been shown why it is essential to have a carefully
    designed change management process. You know how to leverage change requests and
    change management logs to keep your day-to-day operations organized and accountable.
    Additionally, you are now aware of the importance of keeping and following a software
    release checklist and have an awareness of how they can be customized for each
    product that you are managing. Finally, you have learned the common pitfalls of
    DevOps release management and are familiar with essential strategies to avoid
    repeating them in your own initiatives.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本书的[*第11章*](B21803_11.xhtml#_idTextAnchor199)的总结，也是本书的结尾。在这一章中，你了解了为什么精心设计的变更管理过程是至关重要的。你学会了如何利用变更请求和变更管理日志来保持日常工作的组织性和可追溯性。此外，你现在意识到保持和遵循软件发布检查单的重要性，并了解如何根据你管理的每个产品来定制这些检查单。最后，你学习了DevOps发布管理中的常见陷阱，并熟悉了避免在自己项目中重复这些问题的关键策略。
- en: Don’t forget that there is a wealth of additional information in the [*Appendix*](B21803_Appendix.xhtml#_idTextAnchor223)
    of this book. Some of the material includes answers to the chapter questions,
    a glossary of terms, templated release management documents, expanded content
    that did not fit in the body of the text of this book, and much more!
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了，本书的[*附录*](B21803_Appendix.xhtml#_idTextAnchor223)中有大量额外信息。一些内容包括章节问题的答案、术语词汇表、模板化的发布管理文档、未能纳入书本正文的扩展内容等等！
- en: Conclusion
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Let me personally thank you for taking the time to read this content that I
    have worked so hard on. Whether you are an aspiring DevOps release manager, a
    seasoned DevOps engineer, a senior executive, or something in between, thank you,
    from the bottom of my heart!
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 让我个人感谢你花时间阅读我辛苦制作的内容。不管你是一个有抱负的 DevOps 发布经理，一个经验丰富的 DevOps 工程师，一个高级管理人员，还是介于两者之间的角色，衷心感谢你！
- en: Now that you have finished reading this book, you are familiar with a brief
    history of release management, what DevOps release management is, how it is different,
    and basic strategies to implement it. You have been shown how CI/CD pipelines
    enforce good DevOps release management, and you’ve learned techniques to optimize
    them. Additionally, you have learned how to create a culture of cross-functional
    product development that reduces waste and increases value to the customer. As
    a result, you understand its usefulness in removing silos that isolate team members.
    Finally, you are now qualified to explain why DevOps release management is emerging
    as the most popular strategy currently being adopted today.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经读完了这本书，你对发布管理的简史、什么是 DevOps 发布管理、它的不同之处以及如何实施基本策略都有了了解。你已经看到了 CI/CD 管道如何推动良好的
    DevOps 发布管理，并且学到了如何优化它们的技巧。此外，你还学到了如何创建一个跨职能的产品开发文化，减少浪费并增加客户价值。结果，你明白了它在消除团队成员之间孤岛的作用。最后，你现在有能力解释为什么
    DevOps 发布管理正在成为当今最流行的战略。
- en: The concept of DevOps has sparked heated controversy in the IT industry since
    its very beginning. Individual views have varied on this subject, with certain
    groups dismissing it as a superficial trend that will fade away, while others
    see it as something absolutely revolutionary. Over the course of time, strategists
    have made many predictions about the future of DevOps, and although the movement
    has been growing continuously, it has yet to gain widespread adoption among certain
    sectors of the economy. This is where the responsibility lies with you, to shine
    a light on those organizations that have not fully grasped the potential of DevOps
    and the value it can bring to their operations.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 概念自诞生以来，就在 IT 行业引发了激烈的争论。对于这个话题的看法各不相同，某些群体将其视为一种表面的潮流，认为它会消失，而另一些人则认为它是绝对革命性的。随着时间的推移，战略家们对
    DevOps 的未来做出了许多预测，尽管这一运动持续增长，但在某些经济部门中，它仍未得到广泛采纳。这正是你肩负的责任，要照亮那些尚未完全理解 DevOps
    潜力和它为运营带来的价值的组织。
- en: DevOps has undergone a significant transformation, advancing from an obscure
    methodology to a powerful strategy that unifies developers and operations teams,
    ultimately revolutionizing all aspects of a company. With a forward-thinking mindset,
    DevOps redefines IT product and service delivery by enhancing collaboration, communication,
    and alignment throughout the entire organization. Now that you firmly understand
    the concepts of DevOps release management, go forward and be the catalyst that
    heralds improved agility, streamlined IT management, minimized costs, and superior
    product quality for your business and the world!
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 经历了重大变革，从一个晦涩难懂的方法论发展成了一个强大的战略，它将开发团队和运维团队统一起来，最终彻底改变了公司的各个方面。凭借前瞻性思维，DevOps
    通过提升整个组织的协作、沟通和对齐，重新定义了 IT 产品和服务的交付。现在你已经牢牢掌握了 DevOps 发布管理的概念，走出去，成为推动提高敏捷性、简化
    IT 管理、降低成本和提升产品质量的催化剂，为你的企业和世界带来变革！
- en: I wish you all the best on your journey toward DevOps mastery.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你在通往 DevOps 精通之路上一路顺利。
- en: Questions
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Answer the following questions to test your knowledge of this chapter:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 回答以下问题，测试你对本章内容的理解：
- en: What is a change management strategy intended for?
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变更管理策略的目的是什么？
- en: What are the elements of a change proposal and what is its purpose?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变更提案的要素是什么，它的目的是什么？
- en: What are the elements of a change log and what is its purpose?
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变更日志的要素是什么，它的目的是什么？
- en: What is a release checklist and what is its intended purpose?
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布检查清单是什么，它的目的是什么？
- en: What is the secret ingredient to any successful DevOps transformation?
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功的 DevOps 转型的秘密成分是什么？
- en: Why is it false to think that DevOps is mainly about tools?
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么认为 DevOps 主要是关于工具是错误的？
- en: What are three kinds of metrics that DevOps release managers should stridently
    avoid tracking?
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps 发布经理应该坚决避免追踪的三种指标是什么？
- en: Briefly, what are the seven steps in the monolithic-to-microservices roadmap?
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简要来说，单体到微服务的路线图的七个步骤是什么？
- en: Is it true that the use of CI/CD pipelines means that a company is successfully
    applying DevOps practices?
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用CI/CD流水线是否意味着公司成功应用了DevOps实践？
- en: What is the single most critical reason why it is a mistake to assume that a
    quiet customer is a happy customer?
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认为安静的客户就是满意客户的最大错误的关键原因是什么？
- en: Appendix
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: Finally, we have arrived at the end of the book – the [*Appendix*](B21803_Appendix.xhtml#_idTextAnchor223).
    Here you will find lots of great content about DevOps release management.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们到达了书的结尾 - [*附录*](B21803_Appendix.xhtml#_idTextAnchor223)。在这里，您将找到关于DevOps发布管理的大量精彩内容。
- en: 'Here’s a quick list of the main topics covered in the [*Appendix*](B21803_Appendix.xhtml#_idTextAnchor223):'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[*附录*](B21803_Appendix.xhtml#_idTextAnchor223)中涵盖的主要主题的快速列表：
- en: The OWASP Top 10 CI/CD Security Risks
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP十大CI/CD安全风险
- en: Value stream mapping
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 价值流映射
- en: 'Release management templates:'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布管理模板：
- en: Software release checklist
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件发布检查表
- en: Business specification document
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务规格文档
- en: '**Software Requirements** **Specification** (**SRS**)'
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件需求规格** **说明书**（**SRS**）'
- en: Requirement traceability matrix document
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需求跟踪矩阵文档
- en: Use case document
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用例文档
- en: Answers to chapter questions
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 章节问题的答案
- en: Glossary of terms
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 术语表
- en: The OWASP Top 10 CI/CD Security Risks
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OWASP十大CI/CD安全风险
- en: '**Continuous Integration** (**CI**) and **Continuous Deployment** (**CD**)
    have emerged as crucial elements of contemporary software engineering practices.
    The utilization of CI/CD also presents certain security vulnerabilities that necessitate
    careful consideration. In this section, we will examine the *OWASP Top 10 CI/CD
    Security Risks*, a comprehensive exploration of the most prevalent security risks
    that threaten the CI/CD pipeline infrastructure of any contemporary organization.
    This section serves as a valuable reference for understanding the most predominant
    vulnerabilities, along with recommendations for mitigating these risks. By familiarizing
    yourself with these risks and implementing the suggested countermeasures, you
    will be emboldened to enhance the security of the CI/CD pipeline infrastructure
    in your organization.'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续集成**（**CI**）和**持续部署**（**CD**）已成为当代软件工程实践的关键要素。CI/CD的利用还带来了一定的安全漏洞，需要仔细考虑。在本节中，我们将探讨*OWASP十大CI/CD安全风险*，对威胁任何现代组织的CI/CD流水线基础设施的最常见安全风险进行全面探索。本节作为了解最突出的漏洞及其减轻风险建议的有价值参考资料。通过熟悉这些风险并实施建议的对策，您将能够增强组织中CI/CD流水线基础设施的安全性。'
- en: Insufficient Flow Control Mechanisms (CICD-SEC-1)
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不足的流程控制机制（CICD-SEC-1）
- en: Risk and security flaws can be introduced when designing the overall system
    architecture for CI/CD infrastructure without addressing security in the pre-code
    activities. When companies construct their CI/CD environment without effectively
    adopting secure-by-design principles to protect against potential exposure to
    security threats, design and architectural flaws occur. These are not to be confused
    with implementation errors, which occur during a system’s initialization and configuration.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有在预编码活动中解决安全性的情况下设计CI/CD基础架构时，会引入风险和安全漏洞。当公司在不有效采纳安全设计原则的情况下构建其CI/CD环境时，会出现设计和架构上的缺陷，从而导致潜在的安全威胁暴露。这些与系统初始化和配置期间发生的实施错误不应混淆。
- en: These dangers serve as examples of the CI/CD processes’ complexity and the many
    potential attack surfaces that they present. The fundamentals of a DevOps governance
    model involve the identification and mapping of potential risk areas, followed
    by the implementation of a set of policies, standards, and procedures. These measures
    are put in place to ensure adherence to established processes and to uphold the
    desired level of code quality and system integrity. Moreover, this endeavor will
    have a significant influence on the overall operations of the business. By implementing
    improved governance practices, not only will the level of security risks be diminished,
    but the efficiency of your pipeline will be enhanced, enabling developers to maintain
    their workflow and effectively meet your business requirements in a more expeditious
    and cost-effective way.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 这些危险案例展示了CI/CD流程的复杂性以及它们所带来的许多潜在攻击面。DevOps治理模型的基本原则包括识别和绘制潜在的风险区域，随后实施一套政策、标准和程序。这些措施的目的是确保遵守既定流程，并保持所期望的代码质量和系统完整性水平。此外，这项工作将对业务的整体运营产生重大影响。通过实施更好的治理实践，不仅可以减少安全风险的程度，还能提高管道的效率，使开发人员能够维持工作流程，并更高效、更具成本效益地满足业务需求。
- en: It is necessary to implement comprehensive evaluations and manual authorizations
    for any modifications and adaptations made inside the environment. Automated code
    review is essential for the efficient and effective evaluation of code quality.
    However, despite the benefits of automation, it is still necessary to conduct
    manual code reviews for any new customizations or modifications. This requirement
    is prevalent in the majority of **Source Control Management** (**SCM**) platforms,
    such as GitHub.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 有必要对环境内的任何修改和适配进行全面评估和人工授权。自动化代码审查对高效、有效地评估代码质量至关重要。然而，尽管自动化有其优势，但仍然需要对任何新的定制或修改进行人工代码审查。这一要求在大多数**源代码管理**（**SCM**）平台中普遍存在，如GitHub。
- en: Inadequate Identity and Access Management (CICD-SEC-2)
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不充分的身份和访问管理（CICD-SEC-2）
- en: Access control is an issue that must be considered by businesses of all sizes.
    Attackers may be able to compromise your engineering ecosystem because of inadequate
    identity and access management. Fortunately, there are numerous solutions available
    to help you quickly and easily give, modify, or cancel access rights, even without
    manual input. This class of tools ensures that access restrictions are applied
    uniformly across enterprise systems, reducing the possibility of human error.
    Additionally, DevOps should adhere to the principle of least privilege, which
    states that users should only be given the permissions they actually need to do
    their jobs and no more. This necessitates restricting access to critical information
    and systems to only those who have a legitimate need for it.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 访问控制是所有规模企业都必须考虑的问题。由于身份和访问管理不充分，攻击者可能会破坏你的工程生态系统。幸运的是，现有许多解决方案可以帮助你快速、轻松地授予、修改或取消访问权限，即使没有手动输入。这类工具确保访问限制在企业系统中得到一致应用，从而减少人为错误的可能性。此外，DevOps应遵循最小权限原则，即用户只能获得完成工作所需的权限，而不应拥有额外的权限。这要求将对关键信息和系统的访问限制在那些确实需要这些信息和系统的人之间。
- en: It is also best practice to adhere to the segregation of duties, a practice
    that makes it much harder for someone to perpetrate fraud or deliberately damage
    your systems. It also reduces the risk of errors since more than one person oversees
    essential tasks, such as reviewing pull requests and merging new code in with
    the mainline branch. Also consider requiring multi-factor authentication, which
    requires that users must show at least two different kinds of identification to
    prove who they are. Usually, they need to know something metaphysical, such as
    a password, but also possess a physical thing, such as a security key or a one-time
    code sent to their phone.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循职责分离的最佳实践非常重要，这一做法使得有人实施欺诈或故意破坏系统变得更加困难。同时，它还降低了错误的风险，因为多个不同的人会监督重要的任务，比如审查拉取请求和将新代码合并到主分支中。还可以考虑要求多因素认证，这要求用户必须提供至少两种不同类型的身份验证来证明身份。通常，他们需要知道某些抽象信息，比如密码，同时也需要拥有某些物理物品，如安全密钥或发送到他们手机的一次性代码。
- en: Dependency Chain Abuse (CICD-SEC-3)
  id: totrans-350
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 依赖链滥用（CICD-SEC-3）
- en: Cybercriminals wreak havoc on businesses by assaulting their supply chains,
    aiming for the weakest links. Any sector, from the government to the oil industry,
    is vulnerable to supply chain attacks. Both software and hardware are vulnerable
    to supply chain attacks. Cybercriminals commonly insert malware or hardware-based
    spying components into the production or distribution stages of a product.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 网络犯罪分子通过攻击供应链对企业造成破坏，目标是最薄弱的环节。从政府到石油行业，任何行业都可能成为供应链攻击的目标。软件和硬件都容易受到供应链攻击。网络犯罪分子常常在产品的生产或分发阶段插入恶意软件或硬件间谍组件。
- en: Malicious actors frequently exploit vulnerabilities within supply chains present
    in engineering and build environments in order to introduce malevolent software.
    These attacks on supply chains frequently target vulnerabilities that are already
    known to exist in both commercial and open source dependencies.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意行为者经常利用工程和构建环境中的供应链漏洞，引入恶意软件。这些供应链攻击通常会利用已经存在于商业和开源依赖项中的已知漏洞。
- en: The suggested approach for mitigating risk involves the implementation of a
    centralized artifact system. The dependencies provided by the company are put
    onto the system and their checksums are validated. Examples include Sonatype Nexus,
    Jfrog Artifactory, and Apache Archiva.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减轻风险，建议采取实施集中化工件系统的方法。公司提供的依赖项被放入该系统中，并验证它们的校验和。示例包括 Sonatype Nexus、Jfrog
    Artifactory 和 Apache Archiva。
- en: Poisoned Pipeline Execution (CICD-SEC-4)
  id: totrans-354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 毒化管道执行（CICD-SEC-4）
- en: The concept of **Poisoned Pipeline Execution** (**PPE**) risks revolves around
    the possibility of an attacker, who possesses access to source control systems
    but lacks access to the build environment, skillfully manipulating the build process.
    This manipulation occurs through the cunning injection of malicious code or commands
    into the build pipeline configuration, resulting in the pipeline itself becoming
    tainted or “poisoned.” Consequently, when the build process is initiated, the
    poisoned pipeline proceeds to execute the injected malicious code, surreptitiously
    incorporating it as an ingrained part of the build process.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '**毒化管道执行**（**PPE**）风险的概念围绕着这样一种可能性：攻击者拥有访问源代码控制系统的权限，但没有访问构建环境的权限，通过巧妙地操控构建过程来实施攻击。这种操控通过将恶意代码或命令巧妙注入构建管道配置中，导致管道本身被“毒化”。因此，当构建过程启动时，毒化的管道会执行注入的恶意代码，并悄无声息地将其作为构建过程的一部分。'
- en: Once a PPE attack succeeds, it may take over the CI/CD pipeline’s identity and
    exploit any number of vulnerabilities. Potentially harmful operations include
    getting access to secrets that the CI job has access to, gaining access to external
    assets that the job node can access, sending code and artifacts that appear to
    be valid down the pipeline, and getting access to other hosts and assets in the
    job node’s network or environment. Because of its destructive impact, complexity
    to detect, and the availability of multiple exploit techniques, the PPE threat
    is a big worry. Understanding PPE and the countermeasures against it is vitally
    required for CI/CD security on the side of security teams, engineers, and release
    managers.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 PPE 攻击成功，它可能接管 CI/CD 管道的身份并利用任意多个漏洞。潜在的有害操作包括访问 CI 作业可访问的机密，获得作业节点可以访问的外部资产，向管道发送看似有效的代码和工件，以及访问作业节点网络或环境中的其他主机和资产。由于其破坏性影响、难以检测的复杂性以及多种可用的攻击技巧，PPE
    威胁是一个大问题。了解 PPE 及其应对措施对于安全团队、工程师和发布经理而言，是确保 CI/CD 安全至关重要的。
- en: It is recommended to execute unverified code within isolated systems and restrict
    access to sensitive areas. The management of pipeline activation in public repositories
    should be regulated, and superfluous user permissions should be revoked. It is
    advisable to verify the CI configuration files prior to the execution of the pipeline.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在隔离的系统中执行未经验证的代码，并限制对敏感区域的访问。应对公共代码库中的管道激活进行管理，撤销不必要的用户权限。建议在执行管道之前验证 CI 配置文件。
- en: Insufficient Pipeline-Based Access Controls (CICD-SEC-5)
  id: totrans-358
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不足的基于管道的访问控制（CICD-SEC-5）
- en: Central to access controls in a CI/CD process is the establishment of governance
    guidelines for the usage, location, and authorization of automated processes.
    In addition, setting environment-protection rules that determine who can make
    changes in which environment (i.e., build, staging, and production environments)
    is another important aspect of access controls. Without these kinds of access
    controls, enterprises expose themselves to additional risks, such as the possibility
    that a non-approved workflow would be performed, which will result in the system
    being compromised, or that an attacker will gain access to important environments
    within the CI/CD systems.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CI/CD 过程中的访问控制核心是建立有关自动化流程使用、位置和授权的治理指南。此外，设定环境保护规则，明确谁可以在不同环境（即构建、暂存和生产环境）中进行更改，是访问控制的另一个重要方面。没有这些访问控制，企业就会面临额外的风险，例如，可能会执行未经批准的工作流，导致系统被攻破，或者攻击者获得对
    CI/CD 系统中重要环境的访问权限。
- en: Suggested mitigation strategies encompass the utilization of dedicated environments
    specifically designated for sensitive pipelines, the restriction of access permissions
    solely to necessary resources, and the limitation of network connectivity within
    the execution environment.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 建议的缓解策略包括：使用专门为敏感管道指定的独立环境，仅限于必要资源的访问权限，限制执行环境内的网络连接。
- en: Insufficient Credential Hygiene (CICD-SEC-6)
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 凭证卫生不足（CICD-SEC-6）
- en: Access and authentication credentials such as passwords are typically stored
    in automated workflows in CI/CD environments because they leverage multiple systems.
    These are called *secrets*, and they are used all through the CI/CD processes.
    Unencrypted secrets can be turned into a potent attack surface if they aren’t
    properly protected or if organizations have lax governance standards for granting
    access to such secrets.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CI/CD 环境中，访问和身份验证凭证（如密码）通常存储在自动化工作流中，因为它们涉及多个系统。这些被称为*秘密*，并贯穿整个 CI/CD 流程。如果没有适当保护，或者组织在授予访问这些秘密的权限时存在宽松的治理标准，未加密的秘密就可能成为一个强大的攻击面。
- en: One potential measure to enhance security is the adoption of transient credentials
    instead of static ones, as well as the avoidance of shared credentials across
    various situations. In addition, it is advisable to employ automatic scanners
    that are capable of detecting credentials within files. Two examples of tools
    that might be mentioned are git-secrets developed by AWS Labs and TruffleHog developed
    by Truffle Security.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 增强安全性的一个潜在措施是采用临时凭证，而不是静态凭证，并避免在不同情况下共享凭证。此外，建议使用能够检测文件中凭证的自动扫描工具。可能被提到的两种工具是
    AWS Labs 开发的 git-secrets 和 Truffle Security 开发的 TruffleHog。
- en: Insecure System Configuration (CICD-SEC-7)
  id: totrans-364
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统配置不安全（CICD-SEC-7）
- en: Specifically, this speaks to the use of weak passwords, not applying necessary
    security patches, and the improper protection of various systems within a CI/CD
    environment, all of which can put sensitive data in jeopardy. Even though they
    may be easy to overlook, security misconfigurations may leave an application vulnerable
    to attacks. A hacker may not even have to launch a deliberate attack if certain
    configuration mistakes disclose sensitive data. There is a greater threat to application
    security for every bit of code and data that clients can access.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 具体而言，这指的是使用弱密码、不应用必要的安全补丁，以及在 CI/CD 环境中未能正确保护各种系统，这些都可能将敏感数据置于危险之中。即使这些问题容易被忽视，安全配置错误也可能让应用程序易受攻击。如果某些配置错误泄露了敏感数据，黑客甚至可能不需要发动故意的攻击。每一行代码和每一条数据，都增加了客户访问时应用程序安全面临的威胁。
- en: For instance, data might be available with a simple online search due to a misconfigured
    database server. An attacker might be able to access more data outside the database
    or even start a new attack on the business’s server infrastructure if that data
    contains administrative credentials. Massive volumes of personally identifiable
    information may become publicly available online if storage devices’ security
    protections are either not set up properly or are completely nonexistent. In most
    cases, learning who may have accessed this data prior to its security measures
    is not possible. Another typical problem with online apps, especially those built
    on popular platforms such as WordPress, is directory listing. People are able
    to freely explore and access the filesystem, which makes it easy for them to find
    and exploit deficiencies in security. Attackers may change or reverse-engineer
    a program if they are able to access its filesystem.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，由于数据库服务器配置不当，数据可能通过简单的在线搜索就能获得。如果数据中包含管理员凭证，攻击者可能能够访问更多的数据，甚至发起对公司服务器基础设施的新攻击。如果存储设备的安全防护没有正确设置或完全缺失，可能导致大量个人身份信息公开在线。在大多数情况下，无法得知在采取安全措施之前，谁曾访问过这些数据。另一个常见的在线应用问题，尤其是基于流行平台（如WordPress）构建的应用，是目录列表。人们能够自由地浏览和访问文件系统，这使他们很容易发现并利用安全漏洞。如果攻击者能够访问文件系统，他们可能会修改或反向工程一个程序。
- en: In order to enhance the security of CI/CD processes, it is necessary to not
    only focus on the code and artifacts involved but also consider the posture and
    resilience of each system. Suggested strategies for enhancing security encompass
    periodic evaluations of system configurations and the timely updating of deprecated
    program versions.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强CI/CD过程的安全性，必须不仅关注所涉及的代码和工件，还需要考虑每个系统的姿态和弹性。增强安全性的建议策略包括定期评估系统配置，并及时更新已废弃的程序版本。
- en: Ungoverned Usage of 3rd Party Services (CICD-SEC-8)
  id: totrans-368
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无监管的第三方服务使用 (CICD-SEC-8)
- en: When considering the topic of CI/CD, unregulated usage of third-party services
    refers to the unrestricted and unsupervised utilization of external tools and
    services that have been incorporated into, or given access to, an organization’s
    CI/CD infrastructure and resources.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑CI/CD话题时，无监管的第三方服务使用指的是对已纳入或已经被授权访问组织CI/CD基础设施和资源的外部工具和服务进行不加限制和不受监督的利用。
- en: Within a **continuous integration and continuous delivery** (**CI/CD**) infrastructure,
    it is common for organizations to establish linkages between their primary **Version
    Control System** (**VCS**), **Software Configuration Management** (**SCM**), and
    CI servers with external tools and services provided by third-party vendors. In
    the absence of adequate governance measures to ensure the security of access to
    these tools, unauthorized intrusion into a third-party tool has the potential
    to enable an attacker to gain elevated access to the broader technology stack
    and source code.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在**持续集成与持续交付**（**CI/CD**）基础设施中，组织通常会将其主要的**版本控制系统**（**VCS**）、**软件配置管理**（**SCM**）和CI服务器与第三方供应商提供的外部工具和服务建立联系。若缺乏足够的治理措施来确保对这些工具的安全访问，未经授权侵入第三方工具可能使攻击者获得更高权限，从而访问更广泛的技术栈和源代码。
- en: The creation of policies, oversight, risk management, and monitoring of the
    system are all essential to the effective governance of third-party services.
    All of these factors work together to guarantee that the utilization of external
    tools and services complies with your organization’s security standards.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 制定政策、进行监管、风险管理和系统监控都是有效治理第三方服务的关键因素。所有这些因素共同作用，确保外部工具和服务的使用符合组织的安全标准。
- en: The implementation of governance controls related to the consumption of third-party
    services is crucial to improving security posture. One possible approach to achieve
    this is by implementing signature and checksum checks.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 实施与使用第三方服务相关的治理控制对于提升安全态势至关重要。实现这一目标的一种可能方法是通过实施签名和校验和检查。
- en: Improper Artifact Integrity Validation (CICD-SEC-9)
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不当的工件完整性验证 (CICD-SEC-9)
- en: Due to insufficient means for verifying the integrity of code and artifacts,
    a malicious actor gaining access to one of the systems involved in the CI and
    continuous delivery process might potentially pass seemingly innocent code or
    artifacts down the pipeline, causing damage.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 由于缺乏验证代码和构件完整性的手段，恶意行为者如果获得了涉及持续集成和持续交付过程中某一系统的访问权限，可能会将看似无害的代码或构件通过管道传递，造成损害。
- en: The CI/CD framework’s dependence on a wide variety of sources and collaborators
    can open up numerous avenues through which malicious actors can compromise your
    system by manipulating your code, automating your workflows, or installing malicious
    third-party packages. Any time malware enters the CI/CD pipeline without being
    caught, it increases the risk that it will be released to end users.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD框架依赖多种来源和合作者，这可能为恶意行为者提供了通过操控代码、自动化工作流或安装恶意第三方包等方式侵害系统的多个途径。每当恶意软件未被及时发现进入CI/CD管道时，它都增加了最终被发布给终端用户的风险。
- en: An adversary that has a foothold within the software delivery process may use
    insufficient artifact integrity validation in order to send a malicious artifact
    via the pipeline. Systems involved in the CI/CD process, or, more seriously, those
    in production, can be compromised and malicious code executed as a consequence
    of this.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 已经在软件交付过程中占据立足点的敌对者，可能会利用不充分的构件完整性验证，将恶意构件通过管道发送。参与CI/CD过程的系统，或者更严重的，生产系统，可能会因此受到威胁，执行恶意代码。
- en: To decrease risk, it is advisable to do resource integrity checks, such as utilizing
    code and artifact review tools.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 为了降低风险，建议进行资源完整性检查，例如使用代码和构件审查工具。
- en: Insufficient Logging and Visibility (CICD-SEC-10)
  id: totrans-378
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不充分的日志记录和可见性（CICD-SEC-10）
- en: In today’s ever-evolving landscape, adversaries are becoming increasingly cunning
    in their pursuit of achieving their objectives. For organizations that fail to
    prioritize the implementation of robust logging and visibility controls within
    these environments, the consequences can be dire. Without the necessary measures
    in place, the detection of a breach becomes a daunting challenge. The absence
    of comprehensive logging and visibility controls leaves organizations vulnerable
    and unable to identify and respond to security incidents in a timely manner. As
    a result, the path to mitigation and remediation becomes riddled with obstacles
    and hindered by limited investigative capabilities.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今快速发展的环境中，敌对者在追求实现其目标的过程中变得越来越狡猾。对于那些未能在这些环境中优先实施强大日志记录和可见性控制的组织来说，后果可能是灾难性的。如果没有必要的措施，检测到安全漏洞将成为一项艰巨的挑战。缺乏全面的日志记录和可见性控制使得组织处于脆弱状态，无法及时识别和应对安全事件。因此，缓解和修复的路径充满了障碍，并受到有限调查能力的制约。
- en: To safeguard against these potential pitfalls, organizations must take proactive
    steps to fortify their engineering environments. By implementing the appropriate
    logging and visibility controls, they can enhance their ability to detect breaches
    swiftly and effectively. This proactive approach empowers organizations to respond
    promptly, minimizing the impact of security incidents and ensuring a smoother
    path to mitigation and remediation. In this high-stakes digital marketplace, it
    is crucial for organizations to stay one step ahead.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止这些潜在的陷阱，组织必须采取主动步骤来加强其工程环境。通过实施适当的日志记录和可见性控制，他们可以增强迅速有效地检测漏洞的能力。这种主动的方法使组织能够及时响应，减少安全事件的影响，并确保更顺利地进行缓解和修复。在这个竞争激烈的数字市场中，组织保持领先一步至关重要。
- en: The establishment of robust monitoring and visibility capabilities within businesses
    is of utmost significance, as it enables the utilization of logging mechanisms
    to identify potential threats and conduct thorough investigations into security
    occurrences. It is advisable to implement alarm systems for the purpose of identifying
    anomalies and potentially harmful behavior across multiple systems within the
    operational framework.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业中建立强大的监控和可见性能力至关重要，因为它使得可以利用日志机制来识别潜在威胁，并对安全事件进行深入调查。建议实施报警系统，以便在操作框架内识别异常和潜在的有害行为。
- en: Value stream mapping
  id: totrans-382
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 价值流映射
- en: Value stream mapping is a tool for lean management that involves tracing the
    steps taken to create a product or service, from its inception all the way to
    its final destination, the customer. With the help of a value stream map, you
    can see exactly how much time and effort goes into each stage of a process and
    how important each step is. Resources and data are both shown in value stream
    maps, which track their movement through a process.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流图绘制是精益管理中的一种工具，涉及追踪创建产品或服务的各个步骤，从其开始到最终目的地——客户。通过价值流图，你可以清晰地看到每个阶段所投入的时间和精力，以及每个步骤的重要性。资源和数据都会在价值流图中显示，追踪它们在过程中的流动。
- en: Creating a current state map as a team is a common first step in value stream
    mapping. This refers to the process of accurately documenting the current state
    of both the physical movement of materials and the flow of information inside
    a value stream. The next step is for the team to develop a map of the future state.
    In other words, the target picture represents the ideal flow of material and information
    via the value stream.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 创建当前状态图作为团队的第一步是价值流图绘制中的常见做法。这指的是准确记录材料的物理移动以及信息在价值流中的流动的过程。下一步是团队开发未来状态图。换句话说，目标图代表了材料和信息在价值流中理想的流动方式。
- en: Repeating this action consistently is the most straightforward and optimal method
    to instruct yourself and your colleagues on how to recognize and appreciate value.
    Value stream mapping is mostly used in the context of lean manufacturing. Nevertheless,
    managers across many industries may get significant benefits from it.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 持续重复这一行动是最直接且最优的方式，帮助自己和同事学会如何识别和欣赏价值。价值流图绘制主要应用于精益制造中。然而，各行业的管理者也可能从中获得显著的益处。
- en: Value stream management
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流管理
- en: Value stream management is a managerial approach that prioritizes enhancing
    the flow and productivity of delivering company value, starting from customer
    requests and ending with customer fulfillment. The meticulous strategy applied
    by this approach enables businesses to effectively measure and enhance the rate
    of improvement, hence reducing the time required to bring products to market,
    increasing overall output, enhancing product quality, and optimizing for desired
    customer satisfaction.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流管理是一种管理方法，优先改善公司价值交付的流动性和生产力，从客户需求开始，最终以客户满意为结束。这种方法所应用的精确策略，使企业能够有效地衡量并提升改进速度，从而减少将产品推向市场所需的时间，提高整体产出，提升产品质量，并优化期望的客户满意度。
- en: '![](img/B21803_App_01.jpg)'
  id: totrans-388
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21803_App_01.jpg)'
- en: The main goal of value stream mapping is to pinpoint and minimize any unnecessary
    steps or inefficiencies in value streams, ultimately enhancing the overall efficiency
    of a specific value stream. Efficient waste removal is crucial for enhancing productivity
    and streamlining operations, leading to improved identification of waste and quality
    issues.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流图绘制的主要目标是识别并最小化价值流中任何不必要的步骤或低效之处，最终提高特定价值流的整体效率。高效的浪费去除对于提升生产力和简化操作至关重要，从而帮助更好地识别浪费和质量问题。
- en: Waste
  id: totrans-390
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浪费
- en: 'The term *lean* refers to being lightweight or lacking excess fat. Operations
    that are lean are characterized by the absence of waste. A variety of waste, or
    muda, that lean operations may produce is known by the acronym **TIM WOODS**:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '*精益*一词指的是轻量化或缺乏多余的“脂肪”。精益操作的特点是没有浪费。精益操作可能产生的各种浪费，或称为muda，通常用首字母缩写**TIM WOODS**来表示：'
- en: '**Transport**: The act of moving people, goods, and information from one place
    to another'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运输**：将人员、货物和信息从一个地方转移到另一个地方'
- en: '**Inventory**: The act of storing artifacts, data, and components in advance
    of their anticipated need'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库存**：提前存储物品、数据和组件，以备将来需要'
- en: '**Motion**: Engaging in physical movements such as stretching, rotating, pulling,
    and pushing'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运动**：进行诸如伸展、旋转、拉动和推动等身体动作'
- en: '**Waiting**: For parts, components, data, guidance, or hardware'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**等待**：等待零件、组件、数据、指导或硬件'
- en: '**Overproduction**: The act of producing in excess of what is urgently necessary'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过度生产**：生产超过紧急需求的产品'
- en: '**Overprocessing**: Refers to the use of greater precision or materials of
    greater quality than what is truly required'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过度加工**：指使用比实际需要更精确或更高质量的材料'
- en: '**Defects**: Revising garbage or erroneous documentation'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺陷**：修订垃圾或错误的文档'
- en: '**Skills**: Not fully using talents; assigning responsibilities without proper
    education'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技能**：未充分发挥才能；在没有适当培训的情况下分配责任'
- en: The lean operations framework centers on the principles of value, flow, pull,
    and perfection in order to minimize various forms of waste.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 精益运营框架围绕价值、流动、拉动和完美的原则展开，以最大限度地减少各种形式的浪费。
- en: Value
  id: totrans-401
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 价值
- en: The customer is always the one who determines the worth or importance of anything
    that you do with your business. To be successful, a company has to have a solid
    understanding of what the customer considers to be valuable. Investing your resources
    in developing products and services that customers don’t see as worthwhile constitutes
    a wasteful commitment of financial resources and man hours. If you want to know
    what your customers value, you need to get to know them and ask for their input
    at every available opportunity.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 客户始终是决定你在业务中所做的一切价值或重要性的人。要想成功，一家公司必须清楚理解客户认为有价值的内容。将资源投入到开发客户认为不值得的产品和服务中，等同于浪费财力和人力。如果你想了解客户的需求，你需要了解他们，并在每个可用的机会中征求他们的意见。
- en: 'A value stream map is the term used in the lean methodology when referring
    to a process flow diagram. The purpose of building a value stream map is to classify
    every action of a process under distinct groups:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流图是精益方法学中用于描述流程图的术语。构建价值流图的目的是将每个过程的每个操作分类为不同的组别：
- en: '**Value added**: Engaging in actions that provide value from the customer’s
    perspective'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增值**：从客户的角度进行提供价值的行为'
- en: '**Non-value added**: Processes that fail to provide value in the view of customers
    and must be promptly discarded'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非增值**：从客户的角度来看无法提供价值的流程，必须立即废弃'
- en: '**Essential non-value added**: Not-yet-eliminated operations that have no use
    but are mandated by legislation or by the firm'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本质的非增值**：尚未消除的操作，这些操作没有实际用途，但却是法律或公司规定的'
- en: In addition to determining how much time is dedicated to creating value, value
    stream mapping also shows how much time is wasted storing or transporting the
    product. There must be minimal time devoted to storing or transporting anything.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 除了确定投入多少时间来创造价值，价值流图还展示了多少时间被浪费在存储或运输产品上。必须尽量减少存储或运输任何物品所花费的时间。
- en: Continuous flow and continuous improvement
  id: totrans-408
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续流动和持续改进
- en: Continuous flow refers to a production system where a product moves continually
    without any waiting time, removing the need for logistics and storage. The elimination
    of batches and queues is essential, the reason for this is that batching results
    in idleness and can be considered wasteful. Queues indicate that a product has
    been finished in a previous processing stage before the subsequent stage is prepared
    to receive more input. Given that the ultimate stage of the manufacturing process
    involves delivering the product to consumers, it is crucial to manufacture your
    products at a pace that aligns with customer demand. You can use this same strategy
    to build services as well.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 持续流动指的是一种生产系统，在该系统中，产品持续移动，无需等待时间，从而消除了物流和存储的需求。消除批次和排队是至关重要的，因为批量生产会导致闲置，且可视为浪费。排队意味着某一产品在前一个加工阶段已经完成，但下一个阶段尚未准备好接收更多输入。鉴于制造过程的最终阶段是将产品交付给消费者，因此至关重要的是，产品的生产节奏要与客户需求相匹配。你也可以用这种策略来构建服务。
- en: Apple’s case study of continuous flow and improvement
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果的持续流动和改进案例研究
- en: When creating new products, Apple prioritizes the needs of its customers. A
    thorough comprehension of customer desires, habits, and preferences is the company’s
    primary goal. In order to develop products that really connect with consumers,
    Apple does thorough user research to get inputs that shape the company’s design
    direction.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 在创造新产品时，苹果公司优先考虑客户的需求。深入理解客户的欲望、习惯和偏好是公司的主要目标。为了开发真正与消费者产生共鸣的产品，苹果公司进行详尽的用户研究，以获得能够塑造公司设计方向的反馈。
- en: They use an iterative design process to make their goods better over time. In
    order to test and analyze ideas, interactions, and user interfaces, the design
    team builds many mockups, prototypes, and iterations. By iteratively incorporating
    user input and usability testing into the design process, Apple is able to achieve
    a never-ending cycle of improvement.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 他们采用迭代设计过程，以便随着时间的推移使产品变得更好。为了测试和分析想法、交互和用户界面，设计团队构建了许多模型、原型和迭代版本。通过将用户反馈和可用性测试不断融入设计过程，苹果能够实现持续不断的改进循环。
- en: When designing its products, Apple takes great pains to ensure that every little
    detail is perfect. Apple strives for visually beautiful and high-quality products
    in every aspect, from material selection to finish and component fit. With a market
    worth of $2.54 trillion, Apple has become the greatest firm in the world by sticking
    to these ideas and phases.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计其产品时，苹果极力确保每个细节都完美无缺。苹果力求在每个方面都打造视觉美丽且高质量的产品，从材料选择到表面处理和组件配合。凭借2.54万亿美元的市值，苹果已经成为全球最大的公司，通过坚持这些理念和阶段走到了今天。
- en: Locating instances where **Work in Progress** (**WIP**) accumulates and forms
    queues is one way to spot bottlenecks. Decreasing the amount of time it costs
    to process a single product or introducing extra computing capacity might enhance
    the processing rate while overcoming a bottleneck. Although WIP preceding a bottleneck
    will dissipate when its velocity is increased, a new bottleneck could possibly
    develop at any time.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 发现**在制品**（**WIP**）积压并形成排队现象，是识别瓶颈的一种方式。减少处理单个产品所需的时间或增加额外的计算能力，可能会在克服瓶颈的同时提高处理速度。尽管在瓶颈之前的WIP会随着速度的提高而消失，但新的瓶颈可能随时出现。
- en: Lean manufacturing involves pulling products rather than pushing them through
    the system; in other words, nothing is made unless the customer requests it. While
    it’s necessary to have some inventory in reserve to satisfy current demand, you
    can decrease lead times and increase product variation by implementing innovations
    such as continuous delivery.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 精益制造涉及按需拉动产品，而不是将它们推送通过系统；换句话说，除非客户要求，否则不生产任何产品。虽然必须保留一定的库存以满足当前需求，但通过实施持续交付等创新，您可以减少交货时间并增加产品变种。
- en: Lean systems strive for excellence by consistently pursuing continuous improvement.
    Rather than measuring your success against your competition, strive for excellence
    by recognizing and eradicating any unnecessary and wasteful activity within your
    company.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 精益系统通过持续追求不断改进来实现卓越。与其将成功与竞争对手进行比较，不如通过识别并消除公司内部任何不必要和浪费的活动来追求卓越。
- en: Release management templates
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布管理模板
- en: The following section describes several documents that will aid you with day-to-day
    release management tasks, including a software release checklist, business specification
    Document, SRS, requirement traceability matrix document, and use case document.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节描述了几份能够帮助您完成日常发布管理任务的文档，包括软件发布检查表、业务规范文档、SRS、需求可追溯性矩阵文档和用例文档。
- en: Software release checklist
  id: totrans-419
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件发布检查表
- en: A software release checklist is a comprehensive document outlining the actions
    and processes that a software development team must adhere to throughout the software
    release process. This encompasses all aspects ranging from the conception and
    creation of the product to rigorous quality assurance measures and final delivery.
    The checklist serves as a precautionary measure to prevent inadequate quality
    control and guarantees that all desired features requested by the customer are
    prepared for delivery. Checklists typically consist of a few pages in length and
    are used by businesses for both software improvements and the creation of new
    software applications.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 软件发布检查表是一份全面的文档，概述了软件开发团队在整个软件发布过程中必须遵循的行动和流程。这涵盖了从产品构思和创建到严格的质量保证措施和最终交付的所有方面。检查表作为一种预防措施，防止质量控制不充分，并确保客户要求的所有功能都准备好交付。检查表通常为几页长，并且被企业用于软件改进以及新软件应用程序的创建。
- en: 'To aid you with creating your own software release checklist, please consult
    the template at this location: [https://www.smartsheet.com/sites/default/files/IC-Release-Management-Checklist-9281_PDF.pdf](https://www.smartsheet.com/sites/default/files/IC-Release-Management-Checklist-9281_PDF.pdf).'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 为帮助您创建自己的软件发布清单，请参考以下位置的模板：[https://www.smartsheet.com/sites/default/files/IC-Release-Management-Checklist-9281_PDF.pdf](https://www.smartsheet.com/sites/default/files/IC-Release-Management-Checklist-9281_PDF.pdf)。
- en: Business specification document
  id: totrans-422
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务规范文档
- en: A business specification document, also known as a business requirements document,
    is a meticulously organized and formalized statement concerning a forthcoming
    project. The purpose of such a document is to articulate the justification for
    a company’s desire to create new applications or functional solutions. Business
    specification documents describe the challenges that the organization is facing
    and how the respective project will aim to resolve them. This usually includes
    an analysis of the financial impact that the project will have, including potential
    advantages and disadvantages if the software is not developed at all.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 业务规范文档，也称为业务需求文档，是一个经过精心组织和正式化的关于即将开展的项目的声明。该文档的目的是阐明公司希望创建新应用程序或功能解决方案的理由。业务规范文档描述了组织面临的挑战，以及相应的项目将如何解决这些问题。通常，它包括对项目的财务影响的分析，包括如果软件完全不开发时的潜在优缺点。
- en: 'To aid you with creating your own business specification document, please consult
    the template at this location: [https://assets.asana.biz/m/2dcf4dfc471895ad/original/Business-Requirements-Document-Template-PDF.pdf](https://assets.asana.biz/m/2dcf4dfc471895ad/original/Business-Requirements-Document-Template-PDF.pdf).'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 为帮助您创建自己的业务规范文档，请参考以下位置的模板：[https://assets.asana.biz/m/2dcf4dfc471895ad/original/Business-Requirements-Document-Template-PDF.pdf](https://assets.asana.biz/m/2dcf4dfc471895ad/original/Business-Requirements-Document-Template-PDF.pdf)。
- en: Software Requirements Specification (SRS)
  id: totrans-425
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件需求规格说明书（SRS）
- en: An SRS is a comprehensive outline for a software project pending development.
    The software product’s intended use is defined by the requirements specifications,
    which lays the groundwork for a contract between customers and businesses. The
    purpose of an SRS is to minimize rework in the future by conducting a thorough
    evaluation of requirements prior to the more detailed design and development phases.
    It may also function as an appropriate framework for time, risk, and price estimates
    for the product.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 软件需求规格说明书（SRS）是一个软件项目的综合性大纲，旨在为即将开发的软件产品设定使用目的，需求规格说明书为客户与企业之间的合同奠定基础。SRS的目的是通过在设计和开发阶段之前对需求进行彻底评估，最大限度地减少未来的返工。它也可以作为评估产品的时间、风险和价格的合适框架。
- en: 'To aid you with creating your own SRS document, please consult the template
    at the following location: [https://assets.asana.biz/m/6ac2683dd6006280/original/software-requirement-document-template.pdf](https://assets.asana.biz/m/6ac2683dd6006280/original/software-requirement-document-template.pdf).'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 为帮助您创建自己的SRS文档，请参考以下位置的模板：[https://assets.asana.biz/m/6ac2683dd6006280/original/software-requirement-document-template.pdf](https://assets.asana.biz/m/6ac2683dd6006280/original/software-requirement-document-template.pdf)。
- en: Requirement traceability matrix document
  id: totrans-428
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需求可追溯性矩阵文档
- en: The requirements traceability matrix is a formal document often used in release
    management and software development. Its purpose is to guarantee that each project
    requirement has been adequately addressed and accounted for. As an outline, it
    ties each of the requirements in a project to architectural elements, test scenarios,
    and additional deliverables that are associated with those requirements. It may
    also function as an appropriate framework for determining time, risk, and price
    estimates for the product.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 需求可追溯性矩阵是一个正式文档，常用于发布管理和软件开发中。其目的是确保每个项目需求都已得到充分解决和考虑。作为大纲，它将项目中的每个需求与架构元素、测试场景以及与这些需求相关的其他交付物联系起来。它也可以作为确定产品的时间、风险和价格估算的合适框架。
- en: 'To aid you with creating your own requirement traceability matrix document,
    please consult the template here: [https://www.projectmanager.com/wp-content/uploads/2022/08/Free_Requirements_Traceability_Matrix_Template_ProjectManager_WLNK.xlsx](https://www.projectmanager.com/wp-content/uploads/2022/08/Free_Requirements_Traceability_Matrix_Template_ProjectManager_WLNK.xlsx).'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 若要帮助您创建自己的需求可追溯性矩阵文档，请参考此模板：[https://www.projectmanager.com/wp-content/uploads/2022/08/Free_Requirements_Traceability_Matrix_Template_ProjectManager_WLNK.xlsx](https://www.projectmanager.com/wp-content/uploads/2022/08/Free_Requirements_Traceability_Matrix_Template_ProjectManager_WLNK.xlsx)。
- en: Use case document
  id: totrans-431
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用例文档
- en: Use cases are written specifications of how users engage with systems. Every
    use case outlines the sequential actions necessary to achieve a specific outcome,
    emphasizing what is required for developing the application, system, or process.
    Notably, a use case includes a clearly defined starting point and endpoint, and
    the actor is intended to gain objective value following its completion.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 用例是描述用户如何与系统交互的书面规范。每个用例都列出了为了达成特定结果所需的顺序行动，重点描述了开发应用程序、系统或流程所需的内容。值得注意的是，一个用例包含一个明确的起始点和终点，且其执行者旨在通过完成用例获得目标价值。
- en: 'To aid you with creating your own use case document, please consult the template
    here: [https://static.dexform.com/media/docs/6584/use-case-template-2_3dac.pdf](https://static.dexform.com/media/docs/6584/use-case-template-2_3dac.pdf).'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 若要帮助您创建自己的用例文档，请参考此模板：[https://static.dexform.com/media/docs/6584/use-case-template-2_3dac.pdf](https://static.dexform.com/media/docs/6584/use-case-template-2_3dac.pdf)。
- en: Answers to chapter questions
  id: totrans-434
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 各章节问题的答案
- en: This section contains answers to the questions found at the end of each chapter
    in this book.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含本书每一章末尾问题的答案。
- en: Chapter 1
  id: totrans-436
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一章
- en: 'Q1: The SDLC refers to the systematic approach that development teams use to
    produce high-quality software, with optimal cost efficiency.'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 1：SDLC（软件开发生命周期）指的是开发团队用来生产高质量软件的系统化方法，旨在实现最佳的成本效益。
- en: 'Q2: Planning, analysis, design, build, testing, implementation, and maintenance.'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 2：规划、分析、设计、构建、测试、实施和维护。
- en: 'Q3: The software development life cycle is limited to the creation and testing
    of software components. In contrast, systems development incorporates the setup
    and management of the hardware, software, people, and processes required for a
    complete system.'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 3：软件开发生命周期仅限于软件组件的创建和测试。而系统开发则包括硬件、软件、人员和流程的设置与管理，构建一个完整的系统。
- en: 'Q4: The primary goal of the SDLC is to mitigate risk and keep the development
    effort well structured. In contrast, the primary objective of release management
    is to ensure that the development team is well organized and successfully fulfills
    the business objectives.'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 4：SDLC的主要目标是减轻风险，并保持开发工作的良好结构。与此相对，发布管理的主要目标是确保开发团队井然有序，并成功实现业务目标。
- en: 'Q5: The software development life cycle primarily emphasizes the development
    phase of an application, whereas ALM adopts a more holistic approach, encompassing
    the entirety of the program’s life cycle.'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 5：软件开发生命周期主要强调应用程序的开发阶段，而ALM（应用生命周期管理）采用更为全面的方法，涵盖程序整个生命周期。
- en: 'Q6: The SDLC encompasses several distinct stages, including planning, design,
    coding, testing, and deployment. In contrast, the PDLC incorporates supplementary
    phases, such as market research, product planning, and product marketing.'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 6：SDLC包含几个不同的阶段，包括规划、设计、编码、测试和部署。与此相对，PDLC（产品开发生命周期）包括额外的阶段，如市场研究、产品规划和产品营销。
- en: 'Q7: Release management guarantees the timely delivery of software releases,
    while adhering to budgetary constraints and minimizing any potential disruptions.
    Change management allows changes to be accepted, documented, and communicated
    to the appropriate parties to promote a positive impact on the business and its
    goals, requirements, and standards.'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 7：发布管理保证软件发布按时交付，同时遵守预算限制并最小化潜在的中断。变更管理允许接受、记录并将变更传达给相关方，以促进对业务及其目标、需求和标准的正面影响。
- en: 'Q8: Release management is the process of overseeing the creation and distribution
    of software releases, including its planning, scheduling, testing, and deployment.
    The goal of project management is to ensure the success of a specific project
    within the parameters of a scope, such as the planning time limits, schedules,
    finances, and communication.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 问题8：发布管理是监督软件发布的创建和分发的过程，包括其规划、调度、测试和部署。项目管理的目标是在一个特定项目的范围参数内确保项目的成功，例如规划时间限制、日程安排、财务和沟通。
- en: 'Q9: Blue/green deployments produce two identical environments. After testing
    passes in the green environment, live application traffic is directed there, and
    the blue environment is deprecated. A canary deployment refers to a gradual and
    controlled release strategy for an application, wherein traffic is divided between
    an existing version and a new version.'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 问题9：蓝绿部署产生两个相同的环境。在绿色环境中的测试通过后，应用程序流量会切换到该环境，蓝色环境将被废弃。金丝雀部署是一种逐步控制的发布策略，其中流量在现有版本和新版本之间进行分配。
- en: 'Q10: Planning, analysis, design, build, testing, implementation, and maintenance.'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 问题10：规划、分析、设计、构建、测试、实施和维护。
- en: Chapter 2
  id: totrans-447
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二章
- en: 'Q1: The systems development life cycle.'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 问题1：系统开发生命周期。
- en: 'Q2: The primary objective of the systems development life cycle is to systematically
    and meticulously pursue the development of information systems. The software development
    life cycle aspires to detail the inputs, outputs, and steps involved in creating
    and maintaining software systems.'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 问题2：系统开发生命周期的主要目标是系统地、细致地追求信息系统的开发。软件开发生命周期旨在详细描述创建和维护软件系统所涉及的输入、输出和步骤。
- en: 'Q3: In 1953, Paul Niquette.'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 问题3：1953年，保罗·尼凯特。
- en: 'Q4: Herbert D. Benington, in 1956.'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 问题4：赫伯特·D·贝宁顿，1956年。
- en: 'Q5: Thomas E. Bell and T.A. Thayer, in 1976.'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 问题5：托马斯·E·贝尔和T.A.·塞耶，1976年。
- en: 'Q6: Request, plan, design and build, testing, deployment, post-deployment.'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 问题6：请求、规划、设计和构建、测试、部署、部署后。
- en: 'Q7: Patrick Debois, in 2007.'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 问题7：帕特里克·德博瓦，2007年。
- en: 'Q8: Ghent, Belgium, in October 2009.'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 问题8：比利时根特，2009年10月。
- en: 'Q9: 1960.'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 问题9：1960年。
- en: 'Q10: 1960.'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 问题10：1960年。
- en: Chapter 3
  id: totrans-458
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三章
- en: 'Q1: At its core, ITIL is a framework for managing an organization’s IT infrastructure
    in order to achieve strategic goals, generate business value, and ensure a baseline
    of competence.'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 问题1：本质上，ITIL是一个管理组织IT基础设施的框架，旨在实现战略目标、创造商业价值并确保能力的基准。
- en: 'Q2: Waterfall.'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 问题2：瀑布模型。
- en: 'Q3: The initialization phase, the iteration step, and the project control list.'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 问题3：初始化阶段、迭代步骤和项目控制清单。
- en: 'Q4: Time and development in the V-model progress from left to right, and there
    is no way to rewind the process.'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 问题4：在V模型中，时间和开发进度从左到右推进，无法倒回过程。
- en: 'Q5: By continuously monitoring risks and inspecting the intermediate product,
    the spiral model significantly reduces the likelihood of failure in large software
    projects.'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 问题5：通过持续监控风险和检查中间产品，螺旋模型显著减少了大型软件项目失败的可能性。
- en: 'Q6: Time, resources, effort.'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 问题6：时间、资源、努力。
- en: 'Q7: Fail often and early.'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 问题7：经常且尽早地失败。
- en: 'Q8: The DevOps release management strategy combines communication, automation,
    and analysis.'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 问题8：DevOps发布管理策略结合了沟通、自动化和分析。
- en: 'Q9: Never!'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 问题9：永远不会！
- en: 'Q10: Every phase.'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 问题10：每个阶段。
- en: Chapter 4
  id: totrans-469
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四章
- en: 'Q1: Continuous release refers to the collection of automated and manual processes
    used to guarantee that customers have access to a stable and safe build of a company’s
    software product. At its core, **Continuous Deployment** (**CD**) is a unified
    release process that incorporates automated build, test, and deployment steps
    with the objective of streamlining the operations involved with pushing new software
    into production.'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 问题1：持续发布是指用于确保客户能够访问公司软件产品的稳定和安全版本的自动化和手动流程的集合。其核心是**持续部署**（**CD**），这是一种统一的发布流程，结合了自动化构建、测试和部署步骤，旨在简化将新软件推向生产环境的操作。
- en: 'Q2: After implementing audit trails, anyone who is interested can find out
    how much time was spent for a recent modification to go live, why it was necessary,
    who gave their approval for it, and whether or not all of the checkmarks in the
    preceding phases were marked off.'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 问题2：在实施审计追踪后，任何感兴趣的人都可以了解最近的修改上线花费了多少时间，为什么它是必要的，谁批准了它，以及前述阶段中的所有检查项是否都已完成。
- en: 'Q3: Automated testing is appropriate at any time.'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 问题3：自动化测试在任何时候都适用。
- en: 'Q4: Don’t utilize the change approval process as roadblocks to slow down innovation,
    but rather as part of a process to speed up the delivery of new features to your
    customers.'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 不要将变更审批流程作为阻碍创新的障碍，而应作为加速新功能交付给客户的过程的一部分。'
- en: 'Q5: The duties and responsibilities of a release pipeline are to ensure that
    product enhancements are quickly and safely delivered to end users, beginning
    with changes to source code that are driven through development, testing, and
    release.'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 发布流水线的职责和责任是确保产品增强功能快速而安全地交付给最终用户，从源代码的更改开始，经过开发、测试和发布。'
- en: 'Q6: The tools and procedures used to move applications from development, to
    QA, and onto production can also be applied to failing over and recovering from
    disasters or service interruptions.'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: 用于将应用程序从开发、到QA、再到生产的工具和流程，也可以用于灾难恢复和服务中断的故障转移。'
- en: 'Q7: Service management tools enable seamless integration between CD pipelines
    and change management systems by utilizing APIs to automatically generate change
    tickets and notify the relevant parties involved.'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: 服务管理工具通过利用API自动生成变更票据并通知相关方，从而实现CD流水线与变更管理系统的无缝集成。'
- en: 'Q8: Lead time for changes, change failure rate, deployment frequency, mean
    time to recovery.'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 变更的交付时间、变更失败率、部署频率、平均恢复时间。'
- en: 'Q9: Record your CI/CD pipeline results in a release log and aggregate them
    into your release management issue tracking products, source control management,
    and related tooling.'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 在发布日志中记录你的CI/CD流水线结果，并将其汇总到你的发布管理问题追踪产品、源代码管理和相关工具中。'
- en: 'Q10: Lead time for changes.'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 变更的交付时间。'
- en: Chapter 5
  id: totrans-480
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第5章
- en: 'Q1: Flow/systems thinking, amplify feedback loops, and a culture of continual
    experimentation and learning.'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 流程/系统思维、强化反馈循环，以及持续实验和学习的文化。'
- en: 'Q2: Taking a shift-left approach entails beginning the testing phase of the
    process as early as possible in the cycle, rather than delaying it until the very
    end.'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 采取左移（shift-left）的方法意味着在流程的尽早阶段就开始测试，而不是推迟到最后阶段才进行测试。'
- en: 'Q3: Rapid feedback loops enable you to more quickly construct secure, feature-rich
    systems that customers love. Without timely feedback, a gap is created between
    cause and effect, causing errors to go unnoticed until the resources required
    to correct them have increased.'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 快速反馈循环使你能够更快地构建安全、功能丰富且客户喜爱的系统。如果没有及时的反馈，就会在原因和结果之间产生差距，导致错误未被察觉，直到纠正错误所需的资源增加。'
- en: 'Q4: Organizations that eliminate silos improve the transparency of their end-to-end
    operations.'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 消除孤岛的组织能够提高端到端操作的透明度。'
- en: 'Q5: DevSecOps-centric tooling expands on existing DevOps methods such as CI/CD,
    automated testing practices, system monitoring, and streamlined configuration
    management, by seamlessly incorporating security-focused tools and techniques.'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 以DevSecOps为中心的工具扩展了现有的DevOps方法，如CI/CD、自动化测试实践、系统监控和精简配置管理，通过无缝整合以安全为重点的工具和技术。'
- en: 'Q6: The concept of DevOps can be understood as a cultural paradigm rather than
    the mere existence of isolated individuals or teams engaged in tool development
    or collaboration within their respective domains.'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: DevOps的概念可以理解为一种文化范式，而不仅仅是存在孤立的个人或团队在各自领域内进行工具开发或协作。'
- en: 'Q7: Promote self-service with the use of tight integrations of data systems,
    CI/CD-based kiosks, and support from operations specialists to automate routine
    business processes.'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: 通过紧密集成数据系统、基于CI/CD的自助服务亭和运营专家的支持，推动自助服务以自动化日常业务流程。'
- en: 'Q8: DevOps teams operate in shorter, more regular cycles. Because less effort
    will have been needed since the last development cycle, the risks of a release
    are significantly reduced.'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: DevOps团队在更短、更规律的周期中运作。由于上一个开发周期所需的努力较少，因此发布的风险大大降低。'
- en: 'Q9: The primary objective of DevOps is to enhance customer satisfaction and
    expedite delivery.'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: DevOps的主要目标是提高客户满意度并加快交付。'
- en: 'Q10: Businesses need effortless integration and execution across diverse tools,
    including in-house, proprietary tools to provide a comprehensive solution, beginning
    with client inception to receiving product feedback.'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 企业需要跨多种工具的轻松集成和执行，包括内部专有工具，以提供从客户创始到产品反馈的全面解决方案。'
- en: Chapter 6
  id: totrans-491
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第6章
- en: 'Q1: Yes, such as generating reports for the business unit, turning off unused
    infrastructure during off-peak hours and starting them again before the next workday,
    refreshing development databases with data from production, and performing automated
    penetration tests.'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 是的，例如为业务部门生成报告，在非高峰时段关闭未使用的基础设施，并在下一个工作日前重新启动它们，用生产数据刷新开发数据库，进行自动化渗透测试等。'
- en: 'Q2: Teams need a unified set of technologies to use in order to work collaboratively
    and efficiently on projects.'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 团队需要统一的一组技术，以便在项目中协作高效地工作。'
- en: 'Q3: This makes the task of identifying and resolving bugs and defects in your
    code significantly more efficient, reducing the time required from many hours
    to just a few minutes.'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 这使得识别和解决代码中的 bug 和缺陷的任务更加高效，减少了从几小时到仅需几分钟的时间。'
- en: 'Q4: As fresh code changes are submitted, a continuous integration server oversees
    everything and acts as the arbitrator. Each time a developer commits their work
    in the repository, the CI server will automatically run a suite of tests and record
    the outcomes.'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 随着新的代码更改的提交，持续集成服务器会监督一切并充当裁判。每当开发人员在代码库中提交工作时，CI 服务器会自动运行一组测试并记录结果。'
- en: 'Q5: With continuous delivery, there is a manual approval step that is enforced
    before new code changes are permitted to be deployed into production environments.
    With continuous deployment, automated testing fulfills this role so that no manual
    human intervention is necessary.'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 在持续交付中，有一个手动审批步骤，要求在允许将新代码更改部署到生产环境之前执行此步骤。而在持续部署中，自动化测试履行了这一角色，因此无需人工干预。'
- en: 'Q6: Commit, test, build, stage, deploy.'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: 提交、测试、构建、暂存、部署。'
- en: 'Q7: GitOps is a specialized domain within the broader field of DevOps, which
    centers around the use of Git repositories for the purpose of effectively managing
    infrastructure state and application deployments.'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: GitOps 是 DevOps 更广泛领域中的一个专门领域，它侧重于使用 Git 仓库有效地管理基础设施状态和应用程序部署。'
- en: 'Q8: Using carefully curated automated testing strategies, continuous testing
    ensures that software development teams get real-time feedback, allowing them
    to rapidly eliminate as many potential risks and flaws as soon as possible, spanning
    the entire software development life cycle.'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 使用精心策划的自动化测试策略，持续测试确保软件开发团队能够实时获得反馈，使他们能够迅速消除尽可能多的潜在风险和缺陷，贯穿整个软件开发生命周期。'
- en: 'Q9: Developers even benefit from automated testing plugins that install directly
    into a developer’s local **Integrated Development Environment** (**IDE**), such
    as Eclipse, Microsoft Visual Studio, and PyCharm.'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 开发人员甚至受益于直接安装在开发人员本地**集成开发环境**（**IDE**）中的自动化测试插件，例如 Eclipse、Microsoft Visual
    Studio 和 PyCharm。'
- en: 'Q10: By exposing the latest version of an application to a small percentage
    of consumers in the production environment, you are extending the testing phase
    all the way to the end of the software delivery life cycle.'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 通过将应用程序的最新版本暴露给生产环境中少数消费者，你将测试阶段延伸到了软件交付生命周期的最后阶段。'
- en: Chapter 7
  id: totrans-502
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第7章
- en: 'Q1: A workflow is a CI/CD pipeline format used in GitHub Actions to automate
    workflows, including testing, building, and deploying applications.'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 工作流是 GitHub Actions 中用于自动化工作流的 CI/CD 管道格式，包括测试、构建和部署应用程序。'
- en: 'Q2: ClickOps is the term used to describe the process of manually provisioning
    cloud resources using the provider’s native web console. As the name suggests,
    this process involves inputting all the necessary information using a keyboard
    and mouse.'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: ClickOps 是用来描述通过提供商的原生 Web 控制台手动配置云资源的过程。顾名思义，这个过程需要使用键盘和鼠标输入所有必要的信息。'
- en: 'Q3: An AWS access key is associated with an AWS IAM user, along with the IAM
    permissions needed to programmatically provision resources in an AWS account.'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: AWS 访问密钥与 AWS IAM 用户相关联，并附带在 AWS 账户中以编程方式配置资源所需的 IAM 权限。'
- en: 'Q4: AWS IAM users must be granted the necessary roles that permit them the
    ability to provision resources in AWS.'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: AWS IAM 用户必须被授予必要的角色，以便他们能够在 AWS 中配置资源。'
- en: 'Q5: A fork is a copy of a GitHub repository that shares code and visibility
    settings with the original repository.'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: Fork 是 GitHub 仓库的一个副本，它与原始仓库共享代码和可见性设置。'
- en: 'Q6: A security group regulates the flow of ingress and egress network traffic
    between the resources it is linked with.'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: 安全组调节着它所关联资源之间的入站和出站网络流量。'
- en: 'Q7: An Amazon ECS cluster is a cohesive collection of tasks or services that
    are specifically built to oversee and execute Docker containers. These containers
    function on a set of managed EC2 instances.'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: Amazon ECS 集群是一个紧密集成的任务或服务集合，专门用于管理和执行 Docker 容器。这些容器运行在一组受管的 EC2 实例上。'
- en: 'Q8: Container image repositories serve as a central repository for all associated
    files, facilitating simpler management and distribution of Docker containers and
    allowing for more stringent version control.'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 容器镜像仓库作为所有相关文件的中央仓库，简化了 Docker 容器的管理和分发，并允许进行更严格的版本控制。'
- en: 'Q9: An environment variable is an object in memory that is assigned a value
    externally from an application, usually via the operating system or a microservice,
    and consists of a paired name and value.'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 环境变量是内存中的一个对象，其值通常由操作系统或微服务从应用程序外部赋值，包含一个配对的名称和值。'
- en: 'Q10: A README file provides details and usage instructions on the contents
    of a directory or repository of computer software.'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: README 文件提供了计算机软件目录或仓库内容的详细信息和使用说明。'
- en: Chapter 8
  id: totrans-513
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第8章
- en: 'Q1: Insufficient Flow Control Mechanisms, Inadequate Identity and Access Management,
    Dependency Chain Abuse, Poisoned Pipeline Execution, Insufficient Pipeline-Based
    Access Controls, Insufficient Credential, Insecure System Configuration, Ungoverned
    Usage of 3rd Party Services, Improper Artifact Integrity Validation, Insufficient
    Logging and Visibility.'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 不足的流控机制、不充分的身份和访问管理、依赖链滥用、中毒的管道执行、不足的基于管道的访问控制、不充分的凭证、不安全的系统配置、未受管理的第三方服务使用、不当的工件完整性验证、不充分的日志记录和可见性。'
- en: 'Q2: The central pattern library governance model, the CI/CD-as-a-service governance
    model, the centrally managed infrastructure governance model.'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 中央模式库治理模型、CI/CD 作为服务治理模型、集中管理基础设施治理模型。'
- en: 'Q3: Value stream mapping creates a visual representation of your CI/CD processes
    and systems, offering a comprehensive understanding of your complete CI/CD pipeline.'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 价值流映射创建了你的CI/CD流程和系统的可视化表示，提供了对整个CI/CD管道的全面理解。'
- en: 'Q4: Gitflow, GitHub flow, trunk-based development, GitLab Flow'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: Gitflow、GitHub 流程、主干开发、GitLab 流程'
- en: 'Q5: Scaled trunk development can be partitioned into short-lived feature and
    bug-fix branches.'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 扩展的主干开发可以分为短期存在的功能和修复分支。'
- en: 'Q6: GitLab Flow'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: GitLab 流程'
- en: 'Q7: Deployment is a transition of software from one controlled environment
    to another. On the other hand, releases are a curated collection of software changes
    that are intended for end users to experience.'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: 部署是将软件从一个受控环境迁移到另一个环境的过程。另一方面，发布是软件变更的精心挑选集合，旨在让最终用户体验。'
- en: 'Q8: An artifact store ensures that artifacts are indivisible and separate from
    any other release, devoid of any form of intermingling or collateral interference.
    A configuration store is a repository that houses various values that provide
    consistency across a variety of build/release configurations.'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 工件存储确保工件是不可分割的，并且与任何其他发布分开，避免任何形式的混合或干扰。配置存储是一个存放不同值的仓库，这些值在各种构建/发布配置中提供一致性。'
- en: 'Q9: These cumbersome methods increase the production system’s exposure to risk
    and hence increase the failure rates of changes because they slow down the delivery
    process and cause the developers to release larger batches of work less frequently.'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 这些繁琐的方法增加了生产系统的风险暴露，因此增加了变更失败的概率，因为它们减缓了交付过程，导致开发者更少频繁地发布更大的工作批次。'
- en: 'Q10: This helps your team study the entire change process, looking for bottlenecks,
    and identifying potential solutions.'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 这有助于团队研究整个变更过程，寻找瓶颈，并识别潜在解决方案。'
- en: Chapter 9
  id: totrans-524
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第9章
- en: 'Q1: Scope, time, and cost.'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 范围、时间和成本。'
- en: 'Q2: When you relax the standard of quality, not only will it harm the product’s
    image and overall reliability but doing so will also come back to haunt you in
    the form of additional costs down the line, particularly during the maintenance
    phase.'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 当你放宽质量标准时，不仅会损害产品的形象和整体可靠性，还会在后期的维护阶段给你带来额外的成本负担，尤其是在维护阶段。'
- en: 'Q3: This approach aims to enhance productivity and efficiency by leveraging
    the strengths and expertise of both individuals. By working in tandem, programmers
    can achieve the same benefits as traditional solo programming in a reduced time
    frame.'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 这种方法通过利用个人双方的优势和专长，旨在提高生产力和效率。通过协同工作，程序员可以在更短的时间框架内获得与传统单独编程相同的好处。'
- en: 'Q4: Elite performing teams first overcome the people challenges behind a DevOps
    transformation.'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 精英表现团队首先克服的是在DevOps转型背后的人际挑战。'
- en: 'Q5: Time.'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 时间。'
- en: 'Q6: Culture, automation, lean, measurement, sharing.'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: 文化、自动化、精益、衡量、分享。'
- en: 'Q7: Scrum and Kanban.'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: Scrum 和 Kanban。'
- en: 'Q8: Efficiency and waste reduction.'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 效率和减少浪费。'
- en: 'Q9: Individuals across all levels of the organizational hierarchy, including
    developers, systems administrators, security specialists, and executives alike.'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 涉及所有层级的组织成员，包括开发人员、系统管理员、安全专家和高层管理人员。'
- en: 'Q10: It is due to the distinct market requirements, industry considerations,
    resource constraints, and varying levels of willingness to embrace change exhibited
    by different businesses and constituents.'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 这是由于不同企业和相关方在市场需求、行业考量、资源限制和接受变革的意愿方面存在显著差异。'
- en: Chapter 10
  id: totrans-535
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第10章
- en: 'Q1: The unwavering backing and active involvement of the leadership within
    the organization.'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 组织内领导层的坚定支持和积极参与。'
- en: 'Q2: Theoretical knowledge.'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 理论知识。'
- en: 'Q3: Empowerment, ethics, trust, and patience.'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 授权、伦理、信任和耐心。'
- en: 'Q4: Autonomy, ownership, and shared responsibility.'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 自主性、拥有权和共同责任。'
- en: 'Q5: Soft skills.'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 软技能。'
- en: 'Q6: Every step of an application’s life cycle, from planning and design to
    testing and deployment.'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: 应用程序生命周期的每一步，从规划和设计到测试和部署。'
- en: 'Q7: Steer the team clear of engaging in blame-oriented politics and instead
    focus on collaborative efforts aimed at effective problem-solving and enhancing
    processes.'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: 引导团队避免参与指责型政治，而应专注于协作努力，旨在有效地解决问题并改进流程。'
- en: 'Q8: Feedback loops are an introspective evaluation of the functioning of teams,
    systems, and users, measured by both qualitative and quantitative analysis.'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 反馈回路是对团队、系统和用户运作的自我评估，既通过定性也通过定量分析来衡量。'
- en: 'Q9: Feedback from consumers.'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 来自消费者的反馈。'
- en: 'Q10: The process of carefully enhancing the current workflow to better meet
    the needs of its end users.'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 仔细改进当前工作流程，以更好地满足最终用户需求的过程。'
- en: Chapter 11
  id: totrans-546
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第11章
- en: 'Q1: A change management strategy is a deliberate approach that empowers leaders
    to effectively navigate a company through change while reducing disturbance and
    the potential for unforeseen outcomes.'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 变更管理策略是一种有意识的方法，旨在帮助领导者有效地引导公司通过变革，同时减少干扰和潜在的不可预见结果。'
- en: 'Q2: A comprehensive analysis of the rationale behind the change, anticipated
    results and effects, necessary time and resources, and any additional factors
    that necessitate evaluation.'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 对变革背后的原因、预期结果和影响、所需的时间和资源以及需要评估的其他因素进行全面分析。'
- en: 'Q3: A written record that monitors the individuals who initiated a particular
    modification, the date and time of the request, the current state of the change
    request, its level of importance, and details regarding its resolution.'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 一份书面记录，用于跟踪提出特定修改的人员、请求的日期和时间、变更请求的当前状态、其重要性级别以及其解决方案的详细信息。'
- en: 'Q4: Taking a methodical approach with your software release checklist lays
    the groundwork for a software release that is error-free, efficient, and seamless.'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: 采取有条理的方法，通过您的软件发布检查清单为无误、有效和无缝的软件发布奠定基础。'
- en: 'Q5: Good leadership.'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q5: 良好的领导力。'
- en: 'Q6: DevOps, at its core, revolves around the elimination of obstacles and the
    optimization of the process for delivering value to customers. In the arena of
    problem-solving, the significance lies not in the individual tools employed but
    rather in the identification and alleviation of pain points.'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q6: DevOps的核心是消除障碍并优化交付价值给客户的流程。在解决问题的领域中，重要性不在于使用的工具，而在于识别并缓解痛点。'
- en: 'Q7: Non-DevOps metrics, frivolous metrics, and contentious metrics.'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q7: 非DevOps指标、无关指标和有争议的指标。'
- en: 'Q8: Map out microservices, Configure the infrastructure, Define and split the
    team, Define the tech stack for each microservice, Set up sprints, Development
    and testing, Deployment.'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q8: 绘制微服务架构，配置基础设施，定义并拆分团队，确定每个微服务的技术栈，设置冲刺，开发和测试，部署。'
- en: 'Q9: No.'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q9: 不。'
- en: 'Q10: You require the customer’s feedback in order to create products that they
    actually want in the first place.'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q10: 您需要客户的反馈，以便首先创造他们真正想要的产品。'
- en: Glossary of terms
  id: totrans-557
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 术语表
- en: In this section, you will find a glossary of terms used throughout this book.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将找到本书中使用的术语表。
- en: A
  id: totrans-559
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A
- en: '[*Agent*](B21803_Appendix.xhtml#_idTextAnchor222): A program deployed on designated
    physical servers to manage the execution of diverse operations within the server.'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*代理程序*](B21803_Appendix.xhtml#_idTextAnchor222)：部署在指定物理服务器上的程序，用于管理服务器内不同操作的执行。'
- en: '**Agile**: Agile is a software development technique that focuses on flexibility,
    adaptability, and customer satisfaction through iterative and collaborative methods.
    DevOps uses Agile approaches, such as Scrum or Kanban, to create software in brief
    cycles, facilitating constant feedback, swift iterations, and early value delivery.'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷**：敏捷是一种软件开发技术，专注于通过迭代和协作方法实现灵活性、适应性和客户满意度。DevOps使用敏捷方法，如Scrum或Kanban，在短周期内开发软件，促进持续反馈、快速迭代和早期价值交付。'
- en: '**Agile Manifesto**: The explicit declaration of values and principles that
    provide guidance for a software development process that is iterative and focused
    on the needs of the users.'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷宣言**：明确声明的价值观和原则，为一个迭代的软件开发过程提供指导，该过程关注用户需求。'
- en: '**Agile organization**: A dynamic company that can quickly and effectively
    respond and adapt to anticipated and unforeseen opportunities and challenges.'
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷组织**：一个能够快速有效应对和适应预期及突发机会和挑战的动态公司。'
- en: '**Agile project management**: Agile software design and development is an iterative
    and incremental approach where developers collaborate directly with users, utilizing
    the necessary knowledge to initiate planning and execution.'
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷项目管理**：敏捷软件设计与开发是一种迭代和增量的方式，开发人员与用户直接协作，利用必要的知识启动规划和执行。'
- en: '**Agile software development**: Agile is a software development approach and
    attitude that emphasizes user feedback, software quality, and the flexibility
    to adapt to changes and new product needs in a timely manner.'
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷软件开发**：敏捷是一种软件开发方法和态度，强调用户反馈、软件质量，以及及时适应变化和新产品需求的灵活性。'
- en: '**AIOps**: This is the practice of enhancing and standardizing information
    technology operations through the application of AI and ML algorithms. This includes
    activities such as capacity planning, incident management, and monitoring.'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AIOps**：通过应用人工智能（AI）和机器学习（ML）算法，增强和标准化信息技术运维的实践。这包括容量规划、事件管理和监控等活动。'
- en: '**AWS**: This is a subsidiary of Amazon Inc that provides adaptable and expandable
    cloud computing services and **Application Programming Interfaces** (**APIs**)
    to individuals, enterprises, and governmental organizations. These services operate
    on a pricing system that is based on usage, meaning that customers just pay for
    the amount they actually use. Customers commonly use this in combination with
    autoscaling, a process that allows the customer to distribute supplemental computing
    power during periods of elevated application requests, and subsequently reduce
    resource allocation to minimize costs during cycles of minimal usage. These cloud-based
    services provided by AWS incorporate a variety of capabilities, such as networking,
    computing, storage, middleware, and IoT.'
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS**：这是亚马逊公司旗下的子公司，提供可扩展的云计算服务和**应用程序接口**（**API**）给个人、企业和政府组织。这些服务基于按使用量计费的定价系统，意味着客户只需为实际使用的部分付费。客户通常与自动扩展功能结合使用，该功能允许客户在应用请求量增加时分配额外的计算能力，并在需求较低时减少资源分配，从而在低使用周期中最大限度降低成本。AWS提供的这些基于云的服务包含多种功能，例如网络、计算、存储、中间件和物联网（IoT）。'
- en: '**Anomaly detection**: Anomaly identification, also known as outlier analysis,
    is a data mining technique used to find data points that are outside or depart
    from the normal range, established baseline, or predicted trend within a dataset.
    The identification procedure is crucial as abnormalities such as this typically
    serve as indicators of atypical activity, such as potential fraudulent activities,
    security breaches, or cybersecurity attacks.'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**异常检测**：异常识别，也称为离群点分析，是一种数据挖掘技术，用于查找数据集中超出或偏离正常范围、既定基准或预测趋势的数据点。这个识别过程至关重要，因为此类异常通常是非典型活动的指标，如潜在的欺诈行为、安全漏洞或网络安全攻击。'
- en: '**Ansible**: This is an automation engine designed for a range of IT operations,
    such as provisioning and configuring cloud infrastructure. Ansible is a freely
    available program that communicates with several software modules over SSH connection,
    PowerShell scripts, or different APIs.'
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ansible**：这是一个用于多种 IT 操作的自动化引擎，如云基础设施的配置和配置管理。Ansible 是一个免费的程序，它通过 SSH 连接、PowerShell
    脚本或不同的 API 与多个软件模块进行通信。'
- en: '**Antifragile**: The concept of “antifragility” was introduced by professor
    Nassim Nicholas Taleb to describe a trait of systems that enables them to improve
    their capability or performance in response to stress, mistakes, flaws, or failures.'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反脆弱**：“反脆弱”这一概念是由纳西姆·尼古拉斯·塔勒布教授提出的，用来描述一种系统特性，使得系统能够在面对压力、错误、缺陷或失败时提高其能力或性能。'
- en: '**API response time**: This is essential for the optimal performance of a piece
    of software, as it directly affects customer experience. Significant delays in
    response to an API call can lead to customer discontent, potentially leading to
    the complete abandonment of the website or app. The effectiveness and scalability
    of an application are directly related to the response time of the API. If the
    API encounters significant response latency, it might become incapable of processing
    hundreds of requests within a confined period of time. This can significantly
    influence the efficiency and scalability of the consumer’s applications.'
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API 响应时间**：这是软件性能优化的关键，因为它直接影响用户体验。API 调用响应的显著延迟可能导致客户不满，进而可能导致网站或应用的完全放弃。应用程序的有效性和可扩展性与
    API 的响应时间直接相关。如果 API 遇到显著的响应延迟，可能无法在短时间内处理成百上千个请求。这会显著影响消费者应用程序的效率和可扩展性。'
- en: '**API versioning**: API versioning is an essential process in software development
    that involves the management of modifications and enhancements to an **Application
    Programming Interface** (**API**) over time, while still ensuring compatibility
    with previous versions. Developers can deliver new features, enhancements, or
    adjustments to an API without causing any disruptions to current clients or applications
    that depend on the API.'
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API 版本控制**：API 版本控制是软件开发中的一个重要过程，涉及管理 API（应用程序编程接口）随时间变化的修改和增强，同时仍确保与先前版本的兼容性。开发人员可以在不干扰当前依赖于该
    API 的客户端或应用程序的情况下，提供新功能、增强功能或调整。'
- en: '**App security**: Application security encompasses the various activities aimed
    at implementing a secure software development life cycle inside development teams.
    The ultimate objective is to enhance security protocols and, hence, identify,
    rectify, and ideally preempt security vulnerabilities within applications. It
    covers the entire life cycle of the application, including requirements analysis,
    design, implementation, verification, and maintenance.'
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用安全**：应用安全涵盖了旨在实施安全软件开发生命周期的各种活动，通常由开发团队执行。最终目标是增强安全协议，从而识别、修复，并理想地预防应用程序中的安全漏洞。它涵盖了应用程序的整个生命周期，包括需求分析、设计、实现、验证和维护。'
- en: '**Application hardening**: Application hardening is the process of enhancing
    the security of an application by minimizing vulnerabilities and restricting unnecessary
    access. The objective is to enhance the security of the application in order to
    protect it from attacks such as injection exploits, DDoS attacks, buffer overflows,
    and other vulnerabilities. Hardening strategies enhance security by implementing
    many layers of protection around applications and data streams, creating a “defense-in-depth”
    approach. This safeguards essential operational principles and confidential data.
    Completely fortified apps solely grant functional access to individuals and systems
    that have a legitimate need for it.'
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用加固**：应用加固是通过最小化漏洞和限制不必要的访问来增强应用程序安全性的过程。其目标是增强应用程序的安全性，防止注入攻击、DDoS 攻击、缓冲区溢出等漏洞的攻击。加固策略通过在应用程序和数据流周围实施多层保护来增强安全性，创建“深度防御”方法。这保护了基本的操作原则和机密数据。完全加固的应用程序只授予有合法需求的个人和系统功能访问权限。'
- en: '**Application infrastructure**: The application infrastructure encompasses
    all the necessary operational and computational resources, including servers,
    storage arrays, and operating systems, that are essential for the efficient design,
    construction, administration, and delivery of an application and its services
    to end users.'
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用基础设施**：应用基础设施涵盖了所有必要的操作和计算资源，包括服务器、存储阵列和操作系统，这些对于有效设计、构建、管理和交付应用程序及其服务给最终用户至关重要。'
- en: '**Application migration**: The process of migrating a software application
    from one computing environment to another is referred to as application migration.
    Among the many possible scenarios is moving an application’s infrastructure from
    one data center to another, or even from a server located on-premises to one hosted
    by a cloud provider.'
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用迁移**：将软件应用从一个计算环境迁移到另一个计算环境的过程称为应用迁移。许多可能的场景包括将应用基础设施从一个数据中心迁移到另一个，或者甚至从一个本地服务器迁移到由云服务提供商托管的服务器。'
- en: '**Application performance monitoring**: Application performance monitoring,
    often known as APM, is a process that is ongoing and monitors the availability
    of applications that are considered to be highly essential. Effectively monitoring
    performance metrics and trends allows for the early detection and resolution of
    performance issues, ensuring an optimal user experience. APM aims to identify
    and resolve intricate application performance issues in order to uphold a desired
    level of service. It is regarded as the conversion of IT metrics into the assessment
    of business value.'
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用性能监控**：应用性能监控，通常称为APM，是一个持续的过程，用于监控被视为高度重要的应用程序的可用性。有效地监控性能指标和趋势可以早期发现并解决性能问题，确保最佳的用户体验。APM旨在识别并解决复杂的应用性能问题，以维持所需的服务水平。它被认为是将IT指标转化为业务价值评估的过程。'
- en: '**Application Programming Interface (API)**: This is a defined set of protocols
    and rules that enable seamless communication and interaction between different
    software applications. It functions as a mediator that enables the exchange of
    information between systems, permitting businesses to exchange their application
    data and features with external developers, suppliers, and internal departments.
    The definitions and protocols within an API facilitate the seamless integration
    of various applications, enhancing efficiency and fostering collaboration and
    innovation.'
  id: totrans-578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序编程接口（API）**：这是一组定义好的协议和规则，能够实现不同软件应用之间的无缝通信和交互。它充当中介，允许系统之间交换信息，使企业能够与外部开发人员、供应商和内部部门交换其应用数据和功能。API中的定义和协议促进了各个应用的无缝集成，提高了效率，促进了协作和创新。'
- en: '**Application Release Automation (ARA)**: ARA is a streamlined process that
    automates the packaging and deployment of applications, including updates, from
    development to production. This is accomplished by the utilization of software
    capabilities such as automated application rollouts, release automation, resources
    for infrastructure management, and application analysis.'
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用发布自动化（ARA）**：ARA是一种简化的流程，自动化地将应用程序的打包和部署，包括更新，从开发到生产。这是通过利用软件功能如自动化应用程序发布、发布自动化、基础设施管理资源和应用程序分析来实现的。'
- en: '**Artifact**: This refers to any material byproducts of software development.
    Software architecture, design, and functionality are defined by artifacts such
    as requirements documents, class diagrams, use cases, and other unified modeling
    language models. Documents such as project plans, business cases, software binaries,
    and risk assessments are also part of the development process.'
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工件**：指软件开发过程中产生的任何物质副产品。软件架构、设计和功能通过工件来定义，如需求文档、类图、用例和其他统一建模语言模型。项目计划、商业案例、软件二进制文件和风险评估等文档也是开发过程的一部分。'
- en: '**Auto Scaling Group (ASG)**: An Auto Scaling group is an AWS feature that
    allows for the consolidation of many EC2 instances into logical groups, simplifying
    infrastructure design and management. The group consists of similar instances
    that can be added or deleted as needed to accommodate workload demands.'
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动扩展组（ASG）**：自动扩展组是AWS的一项功能，它允许将多个EC2实例整合到逻辑组中，简化基础设施设计和管理。该组由相似的实例组成，可以根据工作负载需求增加或删除实例。'
- en: '**Automated deployment**: Deployment automation employs software tools and
    methods to autonomously transfer code modifications across testing, staging, and
    production environments. Automated deployments are initiated by events such as
    a code commit or merge request approval. Configuration management systems streamline
    the tasks of finding, recording, and monitoring alterations in the infrastructure.'
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化部署**：自动化部署使用软件工具和方法，将代码更改自动传送到测试、预发布和生产环境。自动化部署通常由事件触发，例如代码提交或合并请求批准。配置管理系统简化了寻找、记录和监控基础设施变更的任务。'
- en: '**Automation**: This refers to systems that can carry out an activity or procedure
    with little to no oversight from a human operator. Automating repetitive tasks
    allows DevOps activities such as creating workflows, integrating technologies
    used by various stakeholders, and generating immediate feedback. This involves
    integrating technology in order to bring together tools from different domains
    and break down the silos that exist between them.'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：这是指能够在几乎没有人工操作监督的情况下执行某个活动或程序的系统。通过自动化重复性任务，DevOps 活动变得更加高效，例如创建工作流、整合不同利益相关方使用的技术，以及生成即时反馈。这涉及将技术整合，打破不同领域工具之间的孤岛。'
- en: '**Autonomy**: The capacity to make adjustments using the resources that are
    immediately accessible, without the requirement of deferring to something or someone
    that is higher up in the managerial hierarchy.'
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自治**：指能够利用手头的资源进行调整，而无需依赖管理层次中更高层级的人或事物。'
- en: '**Autoscaling**: Autoscaling is a cloud computing technique that changes the
    amount of computing power in a server farm based on how busy the farm is. This
    is usually shown by the number of active servers. For instance, the number of
    servers that run behind a web app might change instantly based on how many people
    are using the site at the same time. Because these metrics can change a lot throughout
    the day and servers cost money to run even when they’re not being used, there
    is often a reason to run “just enough” servers to handle the current load while
    also being ready for sudden, large spikes in activity. When this happens, autoscaling
    can help because it can lower the number of active servers when activity is low
    and add new servers when activity is high.'
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动伸缩**：自动伸缩是一种云计算技术，根据服务器群集的繁忙程度来调整计算能力。通常通过活跃服务器的数量来显示。例如，支持一个网页应用程序的服务器数量可能会根据同时使用该网站的用户数量立即发生变化。由于这些指标会在一天内频繁变化，而且即便服务器没有使用，运行服务器也会产生费用，因此通常需要“刚好足够”的服务器来应对当前负载，同时也要为突发的流量激增做好准备。此时，自动伸缩能够帮助通过减少低活跃度时的服务器数量和在高活跃度时增加服务器来实现这一目标。'
- en: '**AWS CLI**: This is a tool that enables you to interact with Amazon Web Services
    by issuing commands in your terminal or shell. The AWS CLI enables the execution
    of instructions that provide the same functionality as the browser-based AWS Management
    Console, directly from a terminal application, with minimal configuration.'
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS CLI**：这是一个工具，允许你通过在终端或命令行中发出命令与 Amazon Web Services 进行交互。AWS CLI 使得你可以直接在终端应用程序中执行与浏览器基础的
    AWS 管理控制台相同的功能，且只需最小配置。'
- en: B
  id: totrans-587
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B
- en: '**Backend**: The backend of an application refers to the software’s fundamental
    architecture that cannot be directly accessed by the actual user. The backend
    is responsible for processing data that it receives from the frontend and performs
    specific tasks, such as performing calculations with an algorithm or retrieving
    and saving data in a database.'
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后台**：应用程序的后台指的是软件的基本架构，用户无法直接访问。后台负责处理从前端接收到的数据，并执行特定任务，例如用算法进行计算，或从数据库中检索和保存数据。'
- en: '**Backup**: This is the process of replicating essential data to generate a
    duplicate copy that can be utilized for the purpose of restoring data in case
    of loss or damage. The outcome of this backup procedure is an archive containing
    the files.'
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份**：这是复制重要数据的过程，以生成一个可以在数据丢失或损坏时用于恢复数据的副本。该备份过程的结果是包含文件的存档。'
- en: '**Behavior-Driven Development (BDD)**: **Behavior-Driven Development** (**BDD**)
    is an iterative software development approach that emphasizes collaboration between
    developers and business stakeholders. It involves defining user stories, which
    serve as the basis for developing the application. BDD utilizes a human-readable
    **Domain-Specific Language** (**DSL**) to facilitate communication and understanding.'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行为驱动开发（BDD）**：**行为驱动开发**（**BDD**）是一种迭代的软件开发方法，强调开发人员与业务利益相关者之间的协作。它包括定义用户故事，用户故事作为开发应用程序的基础。BDD利用人类可读的**领域特定语言**（**DSL**）促进沟通和理解。'
- en: '**Big Bang**: The Big Bang approach lacks the process-oriented characteristics
    of other release management models; no advance preparation is needed. Software
    development is the primary focus of this strategy, which allows programmers to
    bypass the planning phase and move directly into code production.'
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大爆炸**：大爆炸方法缺乏其他发布管理模型中的面向过程特性；不需要提前准备。软件开发是该策略的主要关注点，允许程序员绕过规划阶段，直接进入代码生产阶段。'
- en: '**Black-box testing**: Black-box testing is a software testing method that
    assesses the functioning of an application without inspecting its internal structures
    or operations. This testing method is applicable to all levels of software testing,
    including unit, integration, system, and acceptance.'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**黑盒测试**：黑盒测试是一种软件测试方法，它评估应用程序的功能，而不检查其内部结构或操作。该测试方法适用于所有级别的软件测试，包括单元测试、集成测试、系统测试和验收测试。'
- en: '**Blue-green deployment**: A deployment strategy involving the coexistence
    of two identical environments: one that is production-ready and another that is
    new. The traffic is seamlessly transitioned from blue to green, enabling effortless
    rollback in case of any complications.'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**蓝绿部署**：一种部署策略，涉及两个相同环境的共存：一个是生产就绪环境，另一个是新的环境。流量从蓝色环境无缝切换到绿色环境，从而在出现任何问题时能够轻松回滚。'
- en: '**Bottleneck**: Anything that restricts the overall capacity of a process or
    system.'
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**瓶颈**：任何限制过程或系统整体能力的因素。'
- en: '**Branching**: Creating copies of a file in source control to allow multiple
    developers to modify the same code simultaneously.'
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分支**：在源代码管理中创建文件的副本，以便多个开发人员能够同时修改相同的代码。'
- en: '**Bucket**: A bucket is a fundamental component of Amazon **Simple Storage
    Service** (**S3**), designed for the purpose of storing diverse objects, mostly
    consisting of different forms of data and the accompanying metadata that provides
    a description of the data.'
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**桶**：桶是亚马逊**简单存储服务**（**S3**）的一个基本组件，旨在存储各种对象，主要包括不同形式的数据及其附带的元数据，后者提供数据的描述。'
- en: '**Build**: A build can mean either the final product of the software development
    process or the steps used to transform source code into an executable computer
    program. Typically, builds are generated at specific milestones in the development
    process or when the code is considered complete and available for execution, whether
    for testing purposes or official release.'
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：构建可以指软件开发过程的最终产品，或者指将源代码转换为可执行计算机程序的步骤。通常，构建会在开发过程中的特定里程碑时生成，或者在代码被认为完成并可供执行时生成，无论是用于测试还是正式发布。'
- en: '**Build agent**: A build agent is a software component that receives commands
    from the CI server and initiates the execution of the actual build operations.
    An agent can be installed either on the same computer as the server or on a separate
    computer system. The latter option is favored in order to optimize server performance.
    An agent has the capability to operate on either the same **Operating System**
    (**OS**) as the CI server or on a different OS.'
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建代理**：构建代理是一个软件组件，接收来自CI服务器的命令并启动实际构建操作的执行。代理可以安装在与服务器相同的计算机上，也可以安装在独立的计算机系统上。后者通常是首选，以优化服务器性能。代理可以在与CI服务器相同的**操作系统**（**OS**）上运行，也可以在不同的操作系统上运行。'
- en: '**Build artifact repository**: A centralized repository for all binaries utilized
    throughout the build process. An artifact repository facilitates the management
    of dependencies and build processes, enhances security and consistency among teams,
    and enables the feasibility and scalability of implementing automated deployments.'
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建工件库**：一个集中式的存储库，用于存放整个构建过程中使用的所有二进制文件。工件库有助于管理依赖关系和构建过程，提高安全性和团队之间的一致性，并促进自动化部署的可行性和可扩展性。'
- en: '**Build automation**: Build automation refers to the process of automating
    the construction of a software build, which involves tasks such as compiling computer
    source code into binary code, packaging the binary code, and conducting automated
    testing.'
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建自动化**：构建自动化是指自动化构建软件的过程，包括将计算机源代码编译成二进制代码、打包二进制代码和进行自动化测试等任务。'
- en: '**Business Analytics (BA)**: Business analytics encompasses the expertise,
    technology, and methodologies used to systematically analyze and examine previous
    business performance in order to obtain valuable understanding and inform future
    business strategies. Business analytics is a discipline that aims to generate
    fresh insights and enhance comprehension of business performance via the utilization
    of data and statistical techniques.'
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**商业分析（BA）**：商业分析涵盖了用于系统地分析和审查过往商业表现的专业知识、技术和方法。商业分析是一种旨在通过利用数据和统计技术，生成新的见解并增强对商业表现的理解的学科。'
- en: '**Business Intelligence (BI)**: Business intelligence refers to the methods
    and technologies employed by companies to analyze and manage business data. Business
    intelligence technologies encompass a range of essential functions, such as reporting,
    online analytical processing, predictive analytics, data mining, complex event
    processing, dashboard development, business performance management, and other
    similar activities.'
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**商业智能（BI）**：商业智能是指公司用于分析和管理商业数据的方法和技术。商业智能技术包括一系列核心功能，如报告、在线分析处理、预测分析、数据挖掘、复杂事件处理、仪表盘开发、商业绩效管理等类似活动。'
- en: C
  id: totrans-603
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C
- en: '**Cache**: Cache refers to a storage area that is utilized to temporarily store
    data. This data is then accessed by servers, applications, and web browsers in
    order to enhance the speed at which content is loaded. Almost all machines, whether
    they are software or hardware, will typically have and utilize some form of cache,
    which can be found in various locations.'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存**：缓存是指用于临时存储数据的存储区域。这些数据随后被服务器、应用程序和网页浏览器访问，以提高内容加载速度。几乎所有的机器，无论是软件还是硬件，都会使用某种形式的缓存，缓存通常分布在多个位置。'
- en: '**Cadence**: In Agile project management, cadence refers to the duration of
    a sprint, iteration, or release, measured in days or weeks. A cadence refers to
    a consistent sequence of events and activities that take place at regular intervals
    and can be anticipated with certainty. Cadence in DevOps release management establishes
    a structured framework for a team, ensuring clarity and comprehension regarding
    their tasks and deadlines within a value stream.'
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节奏**：在敏捷项目管理中，节奏指的是冲刺、迭代或发布的持续时间，通常以天或周为单位。节奏是指按规律间隔进行的事件和活动的连续序列，可以预测和确定其发生时间。在DevOps发布管理中，节奏为团队建立了结构化的框架，确保对任务和截止日期有清晰的理解，并确保在价值流中的工作进度。'
- en: '**CALMS model**: The core principles of DevOps are culture, automation, lean
    practices, measurement, and sharing. The framework serves as a tool to evaluate
    an organization’s preparedness for implementing a DevOps methodology.'
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CALMS模型**：DevOps的核心原则包括文化、自动化、精益实践、度量和共享。这个框架作为评估组织实施DevOps方法论准备情况的工具。'
- en: '**Canary deployment**: Canary deployment is a deployment technique that involves
    a gradual release of a new version of an application to a group of users or servers.
    This approach allows for the testing of the new version’s performance and reliability
    before a complete rollout is implemented.'
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**金丝雀部署**：金丝雀部署是一种逐步发布新版本应用程序的部署技术，通常先发布给一部分用户或服务器。这种方法允许在全面上线之前，测试新版本的性能和可靠性。'
- en: '**Capacity test**: A stress test is employed to ascertain the upper limit of
    users that a computer, server, or program can sustain before experiencing failure.'
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容量测试**：压力测试用于确定计算机、服务器或程序在发生故障之前能够承载的最大用户数。'
- en: '**Certificate Authority (CA)**: A certificate authority is a reputable institution
    responsible for issuing and invalidating digital certificates, as well as verifying
    the authenticity of websites and other online entities. The process involves issuing
    digital certificates to online businesses, which contain digital credentials and
    cryptographic keys for encrypting and safeguarding data during transmission. These
    digital certificates serve to verify domain ownership, authenticate identities,
    and foster confidence among entities when they interact online. Consequently,
    they enhance the security of the internet and assume a pivotal function in the
    realm of digital security.'
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Certificate Authority (CA)**：证书颁发机构是一个负责任的机构，负责颁发和撤销数字证书，并验证网站及其他在线实体的真实性。这个过程包括为在线企业颁发数字证书，其中包含加密凭证和密钥，以加密和保护数据在传输过程中的安全。这些数字证书用于验证域名所有权、认证身份，并在实体进行在线互动时增强彼此间的信任。因此，它们增强了互联网安全性，并在数字安全领域发挥着关键作用。'
- en: '**Chaos engineering**: This involves deliberately injecting flaws and disruptions
    into a system to evaluate its resilience and identify any weaknesses. This aids
    in guaranteeing that systems are capable of managing unforeseen malfunctions during
    the production process.'
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Chaos engineering**：这是一种故意向系统中注入故障和干扰，以评估其韧性并识别任何弱点的实践。这有助于确保系统能够在生产过程中处理突发故障。'
- en: '**ChatOps**: This is the practice of using chat apps, chatbots, and interactive
    communication tools to make DevOps tasks more organized and effective.'
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ChatOps**：这是利用聊天应用、聊天机器人和互动通信工具，使 DevOps 任务更加有组织和高效的实践。'
- en: '**Clean room**: The term “clean room” refers to an engineered space that keeps
    the concentration of airborne particulates very low. It has active cleansing,
    good isolation, and good contamination control. These types of rooms are usually
    required for industrial production for all nanoscale processes, including semiconductor
    manufacturing, as well as for scientific research. Dust and other airborne organisms,
    such as vaporized particles, are to be kept away from a clean room in order to
    protect the materials being handled inside it.'
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Clean room**：“洁净室”是指一种工程化空间，保持空气中颗粒物浓度极低。它具有主动清洁、良好的隔离性和良好的污染控制。此类房间通常用于工业生产中的所有纳米级工艺，包括半导体制造，以及科学研究。为了保护房间内操作的材料，必须保持洁净室内无尘和其他空气中的有机物，如蒸发粒子。'
- en: '**Cloud computing**: This is a widely used IT strategy that incorporates virtual
    servers via the internet for the purpose of gathering, processing, and storing
    data, running applications, and managing resources. It is an alternative to utilizing
    dedicated servers or personal PCs for that specific objective.'
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cloud computing**：这是一种广泛使用的 IT 策略，通过互联网利用虚拟服务器来收集、处理和存储数据、运行应用程序以及管理资源。它是使用专用服务器或个人电脑进行该特定目的的替代方案。'
- en: '**CI/CD**: An abbreviation for continuous integration/continuous delivery,
    this forms the basis of the modern DevOps methodology. CI guarantees that the
    latest code is regularly added to the central code repository many times a day
    in order to successfully pass automated unit tests and generate new software builds.
    Assuming the tests are successful, CD guarantees that the new version of the software
    will be deployed to the staging and production environments without any interruption
    in service. The CI/CD workflow guarantees the early detection and resolution of
    any defects, ensuring that the product remains consistently available.'
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CI/CD**：持续集成/持续交付（CI/CD）的缩写，构成了现代 DevOps 方法论的基础。CI 确保最新的代码被定期添加到中央代码库，每天多次进行自动化单元测试并生成新的软件构建。如果测试成功，CD
    确保新版本的软件将在不间断服务的情况下部署到预生产和生产环境。CI/CD 工作流确保及早发现和解决任何缺陷，从而保证产品持续可用。'
- en: '**Cluster**: Clustering allows for load balancing, autoscaling, and high availability
    by treating a collection of networked instances (virtual machines, bare-metal
    servers, etc.) as one entity.'
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cluster**：集群通过将多个网络实例（如虚拟机、裸金属服务器等）视为一个实体来实现负载均衡、自动伸缩和高可用性。'
- en: '**Commit**: Committing involves pushing the source code into a Git repository,
    resulting in the code being stored and version controlled.'
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Commit**：提交是指将源代码推送到 Git 仓库，导致代码被存储并进行版本控制。'
- en: '**Compliance level**: Within the context of reaching predefined performance
    and reliability targets, the term “compliance level” refers to the degree of conformance
    observed. The degree to which the system or service is in accordance with the
    standards, benchmarks, or objectives that have been defined is evaluated using
    this method. When conducting an assessment of compliance levels, it is necessary
    to compare the actual performance to the targets that have been set, which may
    include the availability, reaction time, or mistake rates. The efficacy and efficiency
    of an organization’s systems can be evaluated with its assistance, as well as
    the identification of areas that could be improved, and the guarantee that the
    intended levels of performance and dependability are persistently met.'
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性水平**：在达到预定义的性能和可靠性目标的背景下，“合规性水平”指的是观察到的符合程度。通过此方法评估系统或服务与已定义的标准、基准或目标的一致程度。在进行合规性评估时，需要将实际表现与已设定的目标进行比较，目标可能包括可用性、反应时间或错误率。通过它可以评估一个组织系统的有效性和效率，并识别可以改进的领域，同时保证所期望的性能和可靠性水平持续达成。'
- en: '**Configuration drift**: The process by which software and hardware settings
    become incompatible with the master version as a result of changes made manually
    or on an ad hoc basis, such as hotfixes that are not committed back to version
    control. Configuration drift is, in many cases, a significant contributor to the
    technical debt load of a development team.'
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置漂移**：软件和硬件设置因手动或临时性修改（例如未提交回版本控制的热修复）而与主版本不兼容的过程。配置漂移在许多情况下是开发团队技术负担的重要来源。'
- en: '**Configuration management**: A method consisting of the process of defining
    and maintaining consistent settings for a system. Additionally, these solutions
    include SysAdmin tools for the automation of IT infrastructure, such as Ansible,
    Puppet, and other similar programs.'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置管理**：一种方法，包括定义和维护系统一致设置的过程。此外，这些解决方案还包括用于自动化 IT 基础设施的 SysAdmin 工具，如 Ansible、Puppet
    和其他类似的程序。'
- en: '**Constraint**: In the context of a project, the constraints are the restrictions
    that the project is required to operate within. The time, money, quality, scope,
    resources, and risks that are associated with a project are the six primary limitations.
    Managing these constraints requires managers to strike a balance in order to guarantee
    the effective completion of a project.'
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约束**：在项目的背景下，约束是指项目必须在其内进行操作的限制。时间、金钱、质量、范围、资源和风险是与项目相关的六个主要限制。管理这些约束要求管理者在各方面找到平衡，以确保项目的有效完成。'
- en: '**Constraints (Theory of)**: A theoretical framework for determining which
    constraints are most inhibiting progress toward a goal and then devising a plan
    to remove or significantly improve upon those constraints.'
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约束（理论）**：一种理论框架，用于确定哪些约束最阻碍朝着目标的进展，并制定计划去消除或显著改进这些约束。'
- en: '**Container**: A container is a self-contained software unit that includes
    application code, libraries, and dependencies. It is designed to be portable and
    can be executed on several platforms, such as desktop computers, traditional IT
    systems, or cloud environments.'
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器**：容器是一个自包含的软件单元，包含应用程序代码、库和依赖项。它被设计为可移植的，并可以在多个平台上执行，例如桌面计算机、传统的 IT 系统或云环境。'
- en: '**Containerization**: Containerization in software engineering refers to the
    practice of implementing operating system-level virtualization or application-level
    virtualization across various network resources. This enables software applications
    to operate within isolated user spaces known as containers, irrespective of the
    environment being cloud-based or non-cloud-based, and independent of the specific
    type, service provider, or platform.'
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器化**：在软件工程中，容器化指的是在各种网络资源上实施操作系统级虚拟化或应用程序级虚拟化的做法。这使得软件应用程序可以在被称为容器的独立用户空间中运行，无论环境是基于云的还是非基于云的，也无关特定类型、服务提供商或平台。'
- en: '**Container orchestration**: Container orchestration involves automating various
    operational duties needed to operate and supervise containers in a system. This
    includes tasks such as container provisioning, deployment, scaling, management,
    load balancing, and networking.'
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器编排**：容器编排涉及自动化系统中运行和管理容器所需的各种操作任务。这包括容器配置、部署、扩展、管理、负载均衡和网络等任务。'
- en: '**Continuous delivery**: A software engineering strategy that emphasizes the
    use of CI, automated testing, and automated deployment to enable rapid, reliable,
    and repeatable software development and deployment with little or no human involvement.'
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续交付**：一种软件工程策略，强调使用持续集成、自动化测试和自动化部署，使软件开发和部署能够快速、可靠且可重复进行，且几乎不需要人工干预。'
- en: '**Continuous deployment**: An efficient software development practice that
    ensures every code change is subjected to the entire pipeline and is seamlessly
    deployed into production, leading to frequent and automated production deployments.
    It performs all the functions of continuous delivery, but the entire process is
    completely automated, with no human involvement whatsoever.'
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续部署**：一种高效的软件开发实践，确保每次代码更改都会经过完整的管道流程，并无缝地部署到生产环境中，导致频繁且自动化的生产部署。它执行持续交付的所有功能，但整个过程完全自动化，没有任何人工干预。'
- en: '**Continuous development**: Software development approaches that use continuous
    development and Agile share many similarities. Instead of making massive, all-at-once
    improvements to software, incremental ones are produced on a continuous basis,
    allowing for code to be released to users as soon as it is complete and tested.
    Software development, testing, and releasing updates to production environments
    can all be streamlined and automated using continuous development.'
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续开发**：采用持续开发和敏捷方法的软件开发方式有很多相似之处。与一次性进行大规模改进不同，持续开发方法通过不断的小规模改进，允许在代码完成并经过测试后，立即发布给用户。软件开发、测试和更新生产环境的发布都可以通过持续开发进行简化和自动化。'
- en: '**Continuous integration**: A method of developing software that involves rebuilding
    a branch of source code whenever code is committed to the source control repository.
    The process is commonly expanded to encompass the distribution, installation,
    and testing of applications in production environments.'
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续集成**：一种软件开发方法，当代码提交到源代码控制仓库时，涉及重新构建源代码的某个分支。这个过程通常扩展到涵盖生产环境中应用程序的分发、安装和测试。'
- en: '**Continuous intelligence**: Continuous intelligence is a strategic approach
    that integrates real-time analytics into a company’s operations, analyzing both
    current and past data to recommend appropriate actions in response to occurrences.
    In order to facilitate decision-making and assistance, it utilizes several technologies,
    such as augmented analytics, event stream processing, business rule management,
    and machine learning.'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续智能**：持续智能是一种战略方法，将实时分析整合到公司运营中，通过分析当前和过去的数据，建议应对事件的适当行动。为了促进决策和辅助，它利用多种技术，如增强分析、事件流处理、业务规则管理和机器学习。'
- en: '**Continuous quality**: A key concept that emphasizes the importance of maintaining
    high quality throughout the entire software development life cycle, from defining
    requirements to developing code, testing, and operations. Continuous quality also
    places significant emphasis on orchestrating the application code pipeline. When
    code is manually moved across environments, there is a multitude of chances of
    jeopardizing the quality of a product or software application.'
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续质量**：一个关键概念，强调在整个软件开发生命周期中保持高质量的重要性，从定义需求到开发代码、测试和运营。持续质量还特别重视协调应用程序代码管道。当代码在环境之间手动迁移时，存在许多可能会危及产品或软件应用质量的风险。'
- en: '**Continuous security**: Continuous security refers to the act of incorporating
    security procedures into the software delivery pipeline in order to detect and
    resolve security weaknesses at every stage of the software development life cycle.'
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续安全**：持续安全指的是在软件交付管道中嵌入安全程序，以便在软件开发生命周期的每个阶段发现并解决安全漏洞。'
- en: '**Continuous testing**: Automated tests are performed without human intervention
    in all environments of the software delivery pipeline to promptly assess the quality
    of a code build.'
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续测试**：在软件交付管道的所有环境中执行自动化测试，以便迅速评估代码构建的质量，且无需人工干预。'
- en: '**Cron job**: The term refers to a regularly scheduled operation that will
    execute a specific script on a server at a specific time.'
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cron作业**：这个术语指的是定期调度的操作，在特定时间在服务器上执行特定的脚本。'
- en: '**CRUD**: In the realm of computer programming, the fundamental activities
    of persistent storage are commonly referred to as CRUD, which stands for create,
    read, update, and delete. The user’s text is a reference to a source or citation.
    CRUD is also occasionally employed to denote user interface principles that streamline
    the process of accessing, querying, and modifying data through computer-generated
    forms and reports.'
  id: totrans-634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CRUD**：在计算机编程领域，持久化存储的基本操作通常被称为CRUD，代表创建（create）、读取（read）、更新（update）和删除（delete）。用户的文本是对某个来源或引用的指代。CRUD也偶尔用于表示简化访问、查询和通过计算机生成表单和报告修改数据的用户界面原则。'
- en: '**Culture**: Culture refers to the collective set of ideas, values, beliefs,
    practices, and behaviors that are commonly held and followed by the employees
    inside a company. It refers to a collective sense of accountability inside a DevOps
    setting.'
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文化**：文化指的是公司内部员工普遍持有并遵循的思想、价值观、信仰、实践和行为的集合。它也指在DevOps环境中对集体责任感的体现。'
- en: '**Cybersecurity**: Cybersecurity encompasses the use of technology, measures,
    and practices to prevent cyberattacks or reduce their consequences. Cybersecurity
    strives to safeguard the systems, applications, computing devices, sensitive data,
    and financial assets of people and businesses against both basic and disruptive
    computer viruses, as well as intricate and expensive ransomware attacks, and any
    other forms of threats that fall within this spectrum.'
  id: totrans-636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络安全**：网络安全包括使用技术、措施和实践来防止网络攻击或减少其后果。网络安全致力于保护个人和企业的系统、应用程序、计算设备、敏感数据以及金融资产，防范基础的和破坏性的计算机病毒，以及复杂且高成本的勒索软件攻击，和其他任何属于这一范围的威胁。'
- en: D
  id: totrans-637
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D
- en: '**Database**: A database is a meticulously arranged and methodically organized
    assemblage of data that is stored within a computer system. Databases commonly
    utilize interconnected tables to hold information, with each entry including pertinent
    data in designated fields. DBMS is responsible for managing the relationships
    between tables, as well as performing tasks such as adding and updating entries
    and displaying data in response to queries.'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库**：数据库是一个精心排列和有条理地组织的数据集合，存储在计算机系统中。数据库通常利用相互连接的表格来存储信息，每个条目包含特定字段中的相关数据。数据库管理系统（DBMS）负责管理表之间的关系，并执行添加、更新条目及根据查询显示数据等任务。'
- en: '**Database management**: Database administration encompasses the activities
    involved in creating, executing, and sustaining a well-organized collection of
    digital data, commonly referred to as a database. The main objective of database
    administration is to effectively and securely store, arrange, retrieve, and alter
    data to facilitate diverse applications, processes, and decision-making on behalf
    of an organization.'
  id: totrans-639
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库管理**：数据库管理包括创建、执行和维护一个组织良好的数字数据集合，通常称为数据库。数据库管理的主要目标是有效且安全地存储、整理、检索和修改数据，以支持组织内各种应用、流程和决策。'
- en: '**Defense in Depth (DiD)**: An organization’s network, web properties, and
    resources can be better protected with the **Defense in Depth** (**DiD**) cybersecurity
    strategy, which employs a combination of different security technologies and procedures.
    Security solutions at physical, technical, and administrative control layers are
    essential to layered security, which is why the two terms are sometimes used interchangeably.
    This approach ensures that attackers are unable to access secured networks or
    on-premise resources.'
  id: totrans-640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**深度防御（DiD）**：通过采用**深度防御**（**DiD**）网络安全策略，结合不同的安全技术和流程，可以更好地保护组织的网络、网站资产和资源。物理、技术和管理控制层的安全解决方案是分层安全的关键，因此这两个术语有时会互换使用。这种方法确保攻击者无法访问受保护的网络或本地资源。'
- en: '**Definition of done**: This is a shared understanding in software development
    regarding the specific criteria that must be met in order for a task to be considered
    complete.'
  id: totrans-641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完成定义**：这是软件开发中关于完成任务所需满足的具体标准的共识。'
- en: '**Dev**: This refers to an individual involved in software development projects.'
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Dev**：指的是参与软件开发项目的个人。'
- en: '**DevSecOps**: This is the practice of incorporating security operations and
    procedures into the DevOps workflow, enabling the automated execution of critical
    security tasks. The objective is to include security into the workflow at the
    earliest stage possible to mitigate vulnerabilities and potential risks.'
  id: totrans-643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevSecOps**：这是将安全操作和流程融入DevOps工作流的实践，能够自动执行关键的安全任务。其目标是在工作流的最早阶段将安全性纳入其中，以减少漏洞和潜在的风险。'
- en: '**Deployment**: This is the act of propagating updated software to stakeholders.
    In DevOps arrangements, deployment is fully automated, guaranteeing prompt delivery
    of updates to users once they have been produced and tested.'
  id: totrans-644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署**：这是将更新的软件传递给利益相关者的行为。在DevOps环境下，部署是完全自动化的，确保一旦更新被生产和测试完成，就能够及时交付给用户。'
- en: '**Deployment pipeline**: A deployment pipeline is an automated representation
    of the process by which software is moved from version control to the end users.'
  id: totrans-645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署管道**：部署管道是一个自动化的过程，表示软件从版本控制到最终用户的迁移过程。'
- en: '**DevOps**: This is a paradigm shift in the IT culture, focusing on the rapid
    delivery of IT services through the application of Agile and lean principles within
    a system-oriented framework. DevOps prioritizes humans and their shared morals
    and values, aiming to improve collaboration between operations and development
    teams. DevOps solutions utilize contemporary technology, especially automation
    tools, to leverage an incredibly programmable and dynamic infrastructure throughout
    every phase of development.'
  id: totrans-646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps**：这是信息技术文化中的一个范式转变，侧重于通过在系统导向框架内应用敏捷和精益原则，快速交付IT服务。DevOps优先考虑人类及其共同的道德和价值观，旨在改善运营和开发团队之间的协作。DevOps解决方案利用现代技术，特别是自动化工具，在开发的每个阶段都能利用一个高度可编程和动态的基础设施。'
- en: '**DevOps transformation**: This is a crucial procedure that involves integrating
    and executing the latest DevOps principles and methods within a company. It involves
    dismantling the barriers between development and operations teams and facilitating
    effortless cooperation, automated testing, and uninterrupted delivery of software
    products.'
  id: totrans-647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps转型**：这是一个关键过程，涉及在公司内部整合和执行最新的DevOps原则和方法。它包括拆除开发和运营团队之间的障碍，促进轻松的合作、自动化测试和持续的软件产品交付。'
- en: In order to effectively implement a DevOps transformation, a business needs
    to experience a substantial culture change, overhaul current processes, and embrace
    state-of-the-art tools and technology that facilitate automation and a continuous
    delivery pipeline. Various methodologies and practices, such as cloud-native development
    and infrastructure as code, have the potential to significantly transform a business’s
    operations.
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了有效地实施DevOps转型，企业需要经历重大文化变革，彻底改革现有流程，并采用促进自动化和持续交付管道的先进工具和技术。各种方法和实践，如云原生开发和基础设施即代码，有可能显著改变企业的运营。
- en: '**Digital transformation**: Digital transformation is the adoption of a customer-centric,
    technology-oriented strategy that encompasses all facets of a company, including
    its business models, customer interactions, and operational procedures. It employs
    artificial intelligence, automation, hybrid cloud, and other technological advances
    to utilize data and facilitate sophisticated workflows, expedite and enhance decision-making,
    and promptly respond to market changes. Ultimately, it transforms consumer expectations
    and generates fresh business prospects.'
  id: totrans-649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字化转型**：数字化转型是采纳以客户为中心、技术导向的战略，涵盖公司各个方面，包括业务模型、客户互动和运营流程。它运用人工智能、自动化、混合云和其他技术进步，利用数据并促进复杂的工作流，加速并增强决策制定，快速响应市场变化。最终，它改变了消费者的期望并创造了新的商业机会。'
- en: '**Docker**: This is an open source platform for producing, propagating, and
    operating software containers. It offers a versatile framework for building cloud
    infrastructure and allows for the best possible utilization of cloud resources,
    serving as the cornerstone of contemporary cloud computing.'
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker**：这是一个开源平台，用于创建、传播和操作软件容器。它提供了一个多功能框架，用于构建云基础设施，并允许最佳利用云资源，成为现代云计算的基石。'
- en: Docker streamlines the process of developing, testing, and deploying applications
    by enabling software developers to bundle their apps in a format known as a container
    that encapsulates the runtime, libraries, system tools, configuration files, dependencies,
    and scripts required for the application to operate.
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Docker 通过让软件开发人员将他们的应用程序打包成一种被称为容器的格式来简化应用程序的开发、测试和部署过程。该容器封装了运行时、库、系统工具、配置文件、依赖项和脚本等应用程序运行所需的内容。
- en: '**Dockerfile**: This is both a file format and a comprehensive set of machine-readable
    instructions that automate the process of producing a container image. It provides
    a clear and concise description of all the commands needed in the process, enabling
    streamlined configuration and administration of Docker container creation and
    deployment.'
  id: totrans-652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Dockerfile**：这既是一种文件格式，也是一个全面的机器可读指令集，用于自动化生成容器镜像的过程。它清晰简洁地描述了生成过程中的所有命令，便于简化
    Docker 容器的创建和部署配置与管理。'
- en: '**Docker Swarm**: This is a container orchestration framework developed by
    the Docker organization itself. It is a comprehensive tool that enables the clustering
    and scheduling of Docker containers, allowing for the simultaneous execution of
    a substantial number of containers at once, usually in the form of microservices.
    Nevertheless, it does not possess the same degree of functionality as Kubernetes
    and has been deemed obsolete.'
  id: totrans-653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker Swarm**：这是由 Docker 组织自己开发的一个容器编排框架。它是一个全面的工具，可以实现 Docker 容器的集群和调度，允许同时执行大量容器，通常以微服务的形式。然而，它的功能不及
    Kubernetes，且已被认为过时。'
- en: E
  id: totrans-654
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: E
- en: '**EC2**: The crown jewel of Amazon Web Services, Elastic Compute Cloud provides
    numerous virtual servers for the creation and launch of cloud-based applications.'
  id: totrans-655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EC2**：亚马逊网络服务（AWS）的核心产品 Elastic Compute Cloud 提供了大量虚拟服务器，用于创建和启动基于云的应用程序。'
- en: '**Egress**: Egress refers to the process by which data leaves a private network
    and enters the wider internet or another publicly accessible network. Particularly
    in cloud-based environments, where regulated data transfer is critical to efficiency
    and safety, this process is fundamental to network operations.'
  id: totrans-656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Egress**：Egress 指的是数据从私有网络离开，进入更广泛的互联网或其他公开可访问的网络的过程。尤其在基于云的环境中，受监管的数据传输对效率和安全至关重要，这一过程对网络操作至关重要。'
- en: '**EKS**: EKS, short for Amazon Elastic Kubernetes Service, is a managed service
    provided by Amazon. It enables users to easily deploy and operate Kubernetes on
    AWS infrastructure, eliminating the need for manual cluster configuration.'
  id: totrans-657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EKS**：EKS，全称为 Amazon Elastic Kubernetes Service，是亚马逊提供的一项托管服务。它使用户能够轻松地在
    AWS 基础设施上部署和操作 Kubernetes，免去手动配置集群的需要。'
- en: '**Elasticity**: Elasticity, within the scope of DevOps, pertains to the capacity
    to flexibly adjust computing resources in response to varying levels of demand.
    It entails utilizing cloud infrastructure or containerization technologies to
    dynamically allocate and release computing resources in real time, guaranteeing
    the ideal price per performance in response to fluctuating workloads.'
  id: totrans-658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Elasticity**：在 DevOps 范畴内，Elasticity 指的是根据需求波动灵活调整计算资源的能力。它涉及利用云基础设施或容器化技术，实时动态分配和释放计算资源，确保在响应波动工作负载时实现最佳的性价比。'
- en: '**Environment**: An application’s environment consists of all the resources,
    operating systems, libraries, application programming interfaces, frameworks,
    utilities, and other components that are required for properly operating the software
    at different points in its life cycle.'
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Environment**：一个应用程序的环境包含了所有资源、操作系统、库、应用程序接口、框架、实用工具和其他必要的组件，确保软件在不同生命周期阶段的正常运行。'
- en: '**Enterprise app distribution**: An enterprise app distribution platform facilitates
    the secure deployment and administration of policy-enabled mobile applications
    via various distribution channels, such as direct user links, an enterprise web
    portal, a proprietary app store, or mobile device management and enterprise mobility
    management systems.'
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业应用分发**：企业应用分发平台通过各种分发渠道（如直接用户链接、企业门户网站、专有应用商店或移动设备管理与企业移动管理系统）来促进受政策启用的移动应用程序的安全部署和管理。'
- en: '**Enterprise application store**: An enterprise application store is an online
    platform that showcases software specifically designed for targeted end users.
    This portal is typically established for employees and provides access to various
    software applications such as cloud services, licensing, and mobile apps. The
    availability of software options is contingent upon the authorization granted
    by the organization, encompassing both economical monthly subscriptions and expensive
    software licenses. The UI of the enterprise app store is often user-friendly and
    intuitive to users, resembling popular app shops such as Apple’s App Store and
    the Google Play Store.'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业应用商店**：企业应用商店是一个展示专门为目标终端用户设计的软件的在线平台。该平台通常为员工建立，提供访问各种软件应用程序的途径，如云服务、许可和移动应用。软件选项的可用性取决于组织授权的程度，包括经济型月度订阅和高价软件许可。企业应用商店的用户界面通常非常友好、直观，类似于苹果的App
    Store和Google Play Store等流行的应用商店。'
- en: '**Enterprise Application Integration (EAI)**: Enterprise application integration
    is a response to the problem of insufficient connectivity across disparate enterprise
    applications. It involves the development of technologies that facilitate the
    seamless exchange of data between enterprise applications, bypassing the need
    for extensive modifications to database setups or the apps themselves. This results
    in a more efficient workflow and improved data accessibility.'
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业应用集成（EAI）**：企业应用集成是为解决不同企业应用之间连接不足的问题而提出的方案。它涉及开发能够促进企业应用之间数据无缝交换的技术，从而避免对数据库设置或应用程序本身进行大量修改。这种方式能够提高工作流程效率，并改善数据的可访问性。'
- en: '**Error budget**: An error budget refers to a predetermined allocation or threshold
    for permissible errors or failures inside a certain system or process. It denotes
    the capacity to withstand errors, glitches, or periods of inactivity that may
    arise prior to compromising the user experience or the general dependability of
    the system. By establishing an error budget, teams may effectively allocate their
    efforts, strike a balance between innovation and stability, and make well-informed
    decisions regarding resource allocation in order to decrease errors and enhance
    the general performance of the entire system.'
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误预算**：错误预算指的是在特定系统或流程中，预定的允许错误或故障的分配或阈值。它表示在不影响用户体验或系统整体可靠性的前提下，系统能够容忍的错误、故障或停机期。通过设定错误预算，团队能够有效地分配精力，在创新和稳定性之间找到平衡，并就资源分配做出明智决策，从而减少错误并提升整个系统的性能。'
- en: '**Error log**: An error log is a document that records any errors that happen
    during the execution of an application, operating system, or server. The document
    includes details regarding the occurrence, timing, severity, and potentially the
    underlying cause. Examining the error log and error messages is the most straightforward
    method to ascertain the cause of an application downtime or performance problem.'
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误日志**：错误日志是记录应用程序、操作系统或服务器在运行过程中发生的任何错误的文档。文档中包含有关事件发生的时间、严重性以及潜在原因的详细信息。检查错误日志和错误消息是确定应用程序停机或性能问题原因的最直接方法。'
- en: '**Event-driven architecture**: Event-driven architecture is a software architecture
    model in which the system generates events or notifications and is designed to
    respond to, ingest, and identify other events.'
  id: totrans-665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件驱动架构**：事件驱动架构是一种软件架构模型，其中系统生成事件或通知，并设计为响应、接收和识别其他事件。'
- en: '**Event log**: An event log is a sequentially organized record of occurrences
    taking place within an organizational structure or process, commonly employed
    for the objectives of identifying and resolving issues as well as conducting thorough
    examinations. The content can encompass a range of events, including errors, warnings,
    informative messages, and user activities. Every event is usually marked with
    a date and contains supplementary details, such as the event’s origin, its level
    of seriousness, and any pertinent data linked to the event.'
  id: totrans-666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件日志**：事件日志是按顺序组织的记录，记录组织结构或流程中发生的各类事件，通常用于识别和解决问题以及进行全面检查。日志内容可以包括各种事件，如错误、警告、信息性消息和用户活动。每个事件通常都会标注日期，并包含补充信息，如事件的来源、严重性级别以及与事件相关的任何数据。'
- en: '**Evolutionary prototype development**: Evolutionary prototype development,
    also referred to as breadboard prototyping, stands apart from other prototyping
    strategies. The primary objective of utilizing evolutionary prototyping is to
    construct a highly resilient model using a systematic process and consistently
    enhancing it. This approach is based on the idea that the evolutionary prototype
    serves as the foundation of the newly implemented system, allowing for future
    enhancements and additional requirements to be incorporated gradually over time.'
  id: totrans-667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exploratory testing**: Exploratory testing is a software testing method that
    involves simultaneous activities of learning, test design, and execution. The
    approach emphasizes exploration and depends on the tester’s expertise to identify
    faults that may not be adequately addressed by other testing methods. With exploratory
    testing, testers analyze the system without following predetermined test cases
    or having prior knowledge of the system. Instead of adhering to a rigid testing
    protocol, they immediately engage in testing and make impromptu judgments regarding
    what to test in real time.'
  id: totrans-668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: F
  id: totrans-669
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Fail fast**: Fail fast is a strategic approach that involves attempting something,
    promptly recognizing its failure, receiving prompt feedback, adapting accordingly,
    and making another attempt.'
  id: totrans-670
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fargate**: Amazon Fargate allows users to run Docker containers on managed
    infrastructure, such as **Elastic Container Service** (**ECS**), without the need
    for administration of the underlying server resources. You can set it up in accordance
    with the serverless computing pricing model; instead of configuring clusters by
    hand, you just pay for the resources used.'
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fight fires**: In the field of computer science, firefighting involves allocating
    resources to solve an unforeseen issue. The word indicates bug hunting rather
    than feature integration. Firefighting may involve adding engineers to fix problems
    with code discovered near a product’s release deadlines during software development.'
  id: totrans-672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plenty of businesses are ready for firefighting situations, but recurring emergencies
    indicate poor planning or inefficiency and wasted resources that could be used
    elsewhere. Comprehensive **Disaster Recovery Planning** (**DRP**) anticipates
    and perhaps prevents catastrophes, minimizing firefighting.
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Flow**: Flow refers to the movement of individuals or objects as they progress
    through a series of steps or stages in a process. The *first way* of the DevOps
    is to enhance the efficiency of the flow within systems.'
  id: totrans-674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FluentD**: FluentD is a Ruby-based open source program used to collect and
    analyze data. The system enables data entry from a diverse range of tools, such
    as Elasticsearch, and offers data output to a broad array of dashboards that may
    be configured with numerous plugins.'
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Full stack developer**: A full stack developer is an adept professional who
    possesses the skills to construct both the user-facing frontend and the server-side
    backend of a website. The frontend, which encompasses the user interface and interaction
    components of a website, and the backend, which involves the underlying data storage
    and processing mechanisms, necessitate distinct sets of skills. Given that full
    stack developers are responsible for all stages of the development process, they
    are required to possess proficiency in both areas.'
  id: totrans-676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Full stack observability**: This refers to the continual surveillance of
    the real-time performance of every single element within a technology stack that
    is distributed throughout an IT environment. Essentially, it entails obtaining
    an in-depth awareness of your cloud-based applications, services, infrastructure,
    on-premises servers, Kubernetes clusters, and other associated elements.'
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Full stack observability technologies leverage telemetry data, spanning metrics,
    logs, and traces, obtained from a company’s whole IT infrastructure. This enables
    comprehensive analysis of application and infrastructure performance, maintenance,
    and related activity. Simultaneously, they assist firms in comprehending the correlation
    and relationships among their IT components.
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Functional testing**: Functional testing is a form of software testing that
    verifies the software system’s compliance with the functional requirements and
    specifications. Functional tests aim to assess the functionality of each component
    of the software program by supplying suitable input and checking the results against
    the specified functional criteria.'
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: G
  id: totrans-680
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Gemba**: Gemba is a Japanese term that refers to “the actual location” or
    “the authentic spot.” In the context of business, it frequently refers to the
    location where value is generated.'
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Git**: Git is a popular distributed VCS that is extensively utilized in software
    development and DevOps methodologies. It enables the collaboration of several
    developers in project development, facilitates the tracking of source code modifications,
    and effectively manages repositories of source code. Git offers functionalities
    such as branching, merging, and resolving conflicts, facilitating fluid collaboration
    and controlled versioning among distributed teams.'
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitHub**: GitHub is a widely used web-based platform that hosts code and
    incorporates more capabilities on top of the standard Git features. GitHub is
    frequently the central location for the development of most open source and proprietary
    software projects.'
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitLab**: GitLab is an open source web-based Git interface that is specifically
    designed for optimal performance in DevOps environments. This is achieved by its
    integrated support for CI/CD technologies, such as GitLab CI.'
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.gitlab-ci.yml`. A runner is a small, efficient agent that handles CI jobs
    by utilizing the coordinator API of GitLab CI/CD. It executes the job and then
    reports the outcome back to the GitLab server instance. Administrators can create
    runners and view them in the GitLab user interface. Runners can be tailored exclusively
    for particular projects or made accessible across all projects.'
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.gitlab-ci.yml`。Runner是一个小巧高效的代理，利用GitLab CI/CD的协调员API处理CI任务。它执行任务并将结果报告回GitLab服务器实例。管理员可以创建runner，并在GitLab用户界面中查看它们。Runner可以专门为特定项目定制，或者在所有项目中使用。'
- en: '**GitOps**: This is a DevOps approach that utilizes Git repositories as the
    main source for infrastructure and application definitions, guaranteeing precision
    and uniformity. Modifications to the infrastructure and application configurations
    can be easily implemented using Git commits, which allow for version control,
    automated deployments, and streamlined rollbacks in the event of an issue.'
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitOps**：这是一种DevOps方法，利用Git仓库作为基础设施和应用定义的主要来源，确保精确性和一致性。通过Git提交，可以轻松地实现基础设施和应用配置的修改，从而实现版本控制、自动化部署以及在出现问题时的快速回滚。'
- en: '**GitOps operator**: This is a Kubernetes operator that automates and supervises
    the deployment of applications and resources. It achieves this by means of changes
    made to a Git repository, which it polls continuously for differences between
    the declared state and the actual state.'
  id: totrans-687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitOps操作符**：这是一个Kubernetes操作符，用于自动化和监督应用程序及资源的部署。它通过对Git仓库进行更改来实现这一点，并持续监视声明状态和实际状态之间的差异。'
- en: '**Governance**: IT governance encompasses a collection of directives and procedures
    that are put in place to guarantee that all IT operations inside an organization
    are aligned with its business objectives. These IT operations encompass the organization
    of IT teams, the acquisition of IT assets, and the implementation of IT infrastructures.'
  id: totrans-688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Governance**：IT治理包含一系列指令和程序，旨在确保组织内部所有IT操作与其业务目标对齐。这些IT操作包括IT团队的组织、IT资产的采购以及IT基础设施的实施。'
- en: H
  id: totrans-689
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H
- en: '**Helm**: This serves as a Kubernetes application manager. This method simplifies
    the administration of microservices for large-scale operations by leveraging user-friendly
    machine-readable specification files that ensure the smooth operation of complex
    container orchestration and infrastructure development.'
  id: totrans-690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Helm**：这是一个Kubernetes应用程序管理工具。通过利用易于用户读取的机器可读规范文件，Helm简化了大规模操作中微服务的管理，确保复杂容器编排和基础设施开发的顺利进行。'
- en: '**Helm Chart**: This is an efficient Kubernetes tool that simplifies the deployment
    and management of containerized applications. Helm Charts leverage user-friendly
    machine-readable specification files that ensure the smooth operation of complex
    container orchestration and infrastructure development within Kubernetes.'
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Helm Chart**：这是一个高效的Kubernetes工具，简化了容器化应用的部署和管理。Helm Charts利用易于用户读取的机器可读规范文件，确保在Kubernetes中复杂的容器编排和基础设施开发的顺利运行。'
- en: '**HTTP**: The Hypertext Transfer Protocol, also known as HTTP, is the fundamental
    technology that underpins the World Wide Web. It is utilized to render web pages
    by means of hyperlinks. Functioning atop the network protocol stack’s other layers,
    HTTP is an application-layer protocol that facilitates the transmission of data
    between networked devices. An example of an HTTP flow would be a client machine
    sending a request and a server machine sending a response.'
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTP**：超文本传输协议（HTTP）是支撑万维网的基础技术。它通过超链接渲染网页。HTTP作为应用层协议，位于网络协议栈的其他层之上，促进了网络设备之间数据的传输。一个HTTP流的例子是客户端机器发送请求，服务器机器发送响应。'
- en: '**HTTP requests**: A client initiates an HTTP request to a server’s host in
    order to retrieve a necessary resource for constructing the content. Clients utilize
    a **Uniform Resource Locator** (**URL**) containing the data they need to request
    server resources when making a request.'
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTP请求**：客户端发起HTTP请求到服务器的主机，以检索构建内容所需的资源。在发出请求时，客户端使用包含所需数据的**统一资源定位符**（**URL**）来请求服务器资源。'
- en: '**HTTPS**: HTTPS is a more secure iteration of the HTTP protocol that uses
    encryption to safeguard web traffic. It enhances security by implementing TLS
    (previously SSL) to encrypt and authenticate data transmitted between a web server
    and the client’s web browser. Initially, SSL was primarily employed by websites
    to safeguard login credentials and financial data from unauthorized interception.
    However, it is now widely utilized by the majority of web servers to encrypt all
    communication and ensure the integrity of each web page throughout transit, preventing
    any unauthorized modifications or corruption.'
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I
  id: totrans-695
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Idempotence**: Idempotency in data pipelines refers to the ability to execute
    the same operation multiple times without changing the result beyond the initial
    application. This property ensures consistency and reliability, especially in
    distributed systems.'
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Image**: An image in Docker refers to a fixed and unchangeable representation
    of a container; this quality is commonly referred to as *immutability*. A Docker
    image includes the necessary instructions for generating a functional Docker container
    for use as both standalone and microservice-based application architectures.'
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additionally, the term can apply to a system image, otherwise referred to as
    a hard drive snapshot, which is an image of a computer system in its current state
    that can be stored and applied to a hard drive at any given time.
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Incident management**: Incident management involves promptly addressing and
    resolving events or disruptions to services within a company. Within the context
    of DevOps, the primary objective of incident management procedures is to minimize
    the duration of system unavailability, expedite the restoration of services, and
    extract valuable insights from incidents in order to proactively mitigate their
    recurrence. Incident management often includes the processes of identifying, prioritizing,
    resolving, and analyzing incidents.'
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure as Code (IaC)**: **Infrastructure as Code** (**IaC**) is the
    practice of utilizing coding to provision and manage IT infrastructure. The incorporation
    of code as the governing framework of IT infrastructure involves the utilization
    of software development techniques such as CI, continuous delivery, and version
    control. IaC relies on three essential components for its operation: resource
    pooling, software-defined intelligence, and an exclusive application programming
    interface.'
  id: totrans-700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure as a Service (IaaS)**: IaaS, an abbreviation for infrastructure
    as a service, is an IT management framework in which computer resources and necessary
    technologies are delivered as a service to facilitate the operation of different
    platforms and applications.'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure management**: Within an IT organization, infrastructure encompasses
    essential components such as hardware, software, and other systems required to
    provide IT services in compliance with **Service-Level Agreements** (**SLAs**).
    IT infrastructure management includes the oversight of IT guidelines, regulations,
    hardware, data, personnel, and external relationships, such as vendors or security
    personnel, to ensure the seamless and effective operation of IT services.'
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure monitoring**: Infrastructure monitoring encompasses the gathering
    and examination of data from diverse infrastructure elements, including servers,
    networks, and applications, in order to verify their performance, accessibility,
    and dependability. DevOps teams employ monitoring technologies and methodologies
    to acquire insight into the state of infrastructure, identify problems, and take
    proactive measures to mitigate possible bottlenecks or outages.'
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure resilience**: Infrastructure resilience refers to the capacity
    of an infrastructure to maintain its operations and promptly recover from interruptions
    or disasters, with the aim of minimizing any adverse effects on end users.'
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ingress**: Ingress refers to the process by which information enters a private
    network from another, usually public, network. Cloud computing relies heavily
    on proper ingress management, which is essential to preserving the integrity and
    security of the network.'
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ingress controller**: This refers to an API object that controls how services
    in a cluster can be accessed from outside sources, usually using HTTP. Load balancing,
    SSL termination, and name-based virtual hosting are all services that an ingress
    controller might offer.'
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance**: To put it simply, an instance is a virtual machine that your
    application runs on. A more general definition would be a collection of interdependent
    components required to execute an application, such as a Docker container.'
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration testing**: Integration testing is a phase in the software development
    life cycle where the entire application or a group of several software modules
    are brought together and tested as a whole. Integration testing is performed to
    assess whether an entire system or component adheres to specific functional requirements,
    and it takes place subsequent to unit testing and prior to system testing. Modules
    that have previously been subjected to unit testing are then used as inputs for
    integration testing. These modules are then grouped into bigger aggregates, and
    tests that are established in an integration test plan are applied to those aggregates.
    Finally, the integrated system that is suitable for system testing represents
    the output of integration testing.'
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issue tracking**: Issue tracking is a systematic procedure that enables developers
    and quality assurance professionals to monitor the progression of emerging issues
    and new features from their discovery to their resolution.'
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IT infrastructure**: An enterprise’s IT infrastructure, sometimes referred
    to as information technology infrastructure, encompasses the complete set of hardware,
    software, and network resources required to provide IT services within the firm.
    IT infrastructure serves as a means to provide services or resources either internally
    within a business or externally to its consumers. Software application developers
    utilize IT infrastructure to facilitate their development approach, while various
    companies employ it to enhance efficiency and generate value by embracing technology.'
  id: totrans-710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Iterations**: Iterations refer to a singular development cycle, usually lasting
    for a duration of one to two weeks.'
  id: totrans-711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: J
  id: totrans-712
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Jenkins**: Jenkins is a popular open source automation server that is extensively
    utilized in the field of DevOps for the purpose of constructing, testing, and
    deploying software applications. The platform offers a resilient framework for
    continuous integration and delivery workflows, enabling teams to automate build
    processes, execute tests, and release software with dependability. Jenkins provides
    extensive flexibility through a wide-ranging plugin ecosystem, proving it to be
    exceptionally flexible in various DevOps scenarios.'
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Jenkins job**: Jenkins jobs play a crucial role in automating many tasks
    across the software development life cycle. These discrete actions or procedures
    optimize essential steps, such as building, testing, and rolling out software
    applications. Jenkins enables the customization of processes by utilizing several
    job types, thereby assuring flexibility to meet individual project needs. These
    tasks exemplify the significance of continuous integration and delivery by enabling
    teams to streamline and enhance their development processes for greater efficiency
    and dependability.'
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**JVM heap**: The Java heap memory is an essential element of the **Java Virtual
    Machine** (**JVM**) that is in charge of dynamically distributing and overseeing
    objects while the program is running. The Java application utilizes the runtime
    data area as a storage and retrieval space for objects. When the application starts,
    the JVM reserves a specific amount of memory for the heap, which can be modified
    using command-line parameters.'
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**JVM threads**: A Java thread is the sequence of instructions followed by
    a program during execution. All operations executed in Java are performed within
    threads. Every application in the JVM ecosystem inherently includes threads, with
    a minimum of one, even if not expressly invoked. The code execution begins with
    the main procedure, which is executed in the primary application thread. Indeed,
    all the threads generated in the code are actually instantiated by the Java Virtual
    Machine itself and then supervised by it.'
  id: totrans-716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: K
  id: totrans-717
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Kaizen**: Kaizen is a Japanese business approach that focuses on the perpetual
    improvement of workplace practices and efficient operations. The objective is
    for the business to identify methods of enhancing all aspects of a value stream
    in order to produce superior outcomes for their customers.'
  id: totrans-718
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kanban**: This is a method of visual management that helps project managers
    supervise and regulate the flow of work within a development project for maximum
    efficiency and observability.'
  id: totrans-719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kanban board**: This is a visual tool employed in lean manufacturing projects
    to visually represent work, limit the number of simultaneous tasks being worked
    on, and enhance velocity or workflow. It can aid both Agile and DevOps teams in
    efficiently managing their daily tasks. Kanban boards utilize cards, columns,
    and continuous improvement to aid services and technology teams in efficiently
    fulfilling their responsibilities and strategically regulating a manageable workload.'
  id: totrans-720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kata**: This denotes the cultural education or the notion of conforming to
    the “correct” method in Japanese culture. It is a methodical approach to accomplishing
    objectives and confronting obstacles that can be implemented across an entire
    organization.'
  id: totrans-721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes**: Kubernetes, originally created by Google developers, is an
    open source framework that simplifies the automated deployment, management, scalability,
    and execution of containers. Kubernetes is renowned for its capacity to scale
    and adapt, enabling the swift migration of workloads across on-premises, hybrid,
    or public cloud infrastructure.'
  id: totrans-722
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes CronJobs**: Kubernetes CronJobs are a specific sort of resource
    in a Kubernetes cluster that allows for the scheduling and automation of repetitive
    operations or batch jobs. Kubernetes CronJobs enable the scheduling of containerized
    jobs or Pods at specific times, using a cron expression to determine the schedule,
    similar to conventional cron jobs in Linux operating systems. These jobs have
    the capability to carry out a range of operations, including data backups, regular
    maintenance, and data processing, with the assurance that they will be completed
    consistently and according to a prearranged time frame.'
  id: totrans-723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes CustomResourceDefinition (CRD):** Custom resources are extensions
    to the Kubernetes API that may or may not be offered by the standard configuration
    of Kubernetes. This signifies a modification to an individual Kubernetes Deployment.
    Kubernetes is now more modular, though, as many of its core functions are built
    using custom resources.'
  id: totrans-724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes operator**: A Kubernetes operator is a specialized program that
    automates tasks for managing an application within the Kubernetes environment.
    Operators serve as automatic system administrators. Users are able to enhance
    the functionalities of Kubernetes APIs by organizing a customized procedure that
    oversees instances of an application. Their responsibility is to uphold the intended
    condition of an application as defined by the Custom Resources Definitions (CRD).
    The program can be scaled, updated, or restarted.'
  id: totrans-725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes PersistentVolume (PV)**: A **PersistentVolume** (**PV**) is an
    enduring entity that specifies discrete storage capabilities of a cluster and
    has a lifespan that exceeds that of a Pod or node. PVs possess a distinct life
    cycle compared to Pods and serve as an additional resource within the cluster.
    Consequently, a Kubernetes administrator has the ability to preconfigure storage
    independently from the applications they are running. To allocate storage for
    Pods, a PersistentVolumeClaim object is required.'
  id: totrans-726
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes PersistentVolumeClaim (PVC)**: A **PersistentVolumeClaim** (**PVC**)
    serves as a formal request for storage allocation within a Kubernetes cluster.
    When a user generates a PVC with defined storage criteria, a control loop in the
    control plane actively searches for a corresponding PersistentVolume and establishes
    a binding between them.'
  id: totrans-727
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes Pod**: In Kubernetes, a Pod is the most basic deployable object.
    A Kubernetes Pod is a collection of one or more containers that execute instances
    of an application. Nodes are worker machines that host Pods and provide a well-configured
    environment for containers to execute with optimal efficiency. This encompasses
    the supplying dependencies and resources, such as the storage of data in volumes
    that are shared across containers, the allocation of internal IP addresses to
    facilitate communication between containers, and the configuration of container
    execution, including specifications such as port usage and container image version.'
  id: totrans-728
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes QoS**: This refers to a criterion in Kubernetes that determines
    how Pods are scheduled and managed in the overall system. **Quality of Service**
    (**QoS**) distributes resources among different applications according to their
    distinct resource requirements. Kubernetes goes beyond the scope of container
    orchestration to include the administration of an application’s resources and
    the scheduling of its execution. It allows developers to establish requests and
    limits for your applications, including CPU and memory resources.'
  id: totrans-729
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes replica**: Kubernetes replicas are duplicate instances that enable
    automatic recovery for Pods. Like many other processes and services, Pods are
    susceptible to failure, faults, evictions, and termination. For example, Pods
    can experience failure and be subsequently removed when there is a sudden decrease
    in system resources and an increase in node pressure.'
  id: totrans-730
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes workloads**: Kubernetes workloads serve as the fundamental components
    that define the configuration, deployment, and management of applications and
    services within a Kubernetes cluster. These workloads determine essential aspects
    of an application’s behavior, including the number of instances (Pods) to execute,
    how they should adjust in size based on demand, and how they communicate with
    each other and other services. In essence, Kubernetes workloads act as a framework
    for coordinating containerized applications, guaranteeing their reliable and efficient
    execution in compliance with specified requirements.'
  id: totrans-731
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: L
  id: totrans-732
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Lead time**: Lead time refers to the duration required to transform work
    in progress into a completed state inside a manufacturing facility. In the context
    of software development, this concept is symbolized by the act of transferring
    modifications made to the code into the production environment.'
  id: totrans-733
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lean**: Lean is a production strategy that prioritizes waste reduction and
    process improvement to enhance the delivery of value to customers.'
  id: totrans-734
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lean IT**: Lean IT refers to the application of lean principles in the creation
    and operation of IT products and services.'
  id: totrans-735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Legacy application**: A vital information system that plays a crucial role
    in daily operations, even though it may rely on older technologies. One of the
    primary obstacles for information systems professionals is replacing outdated
    applications and systems with new and advanced technologies. When organizations
    update or modify their technologies, it is crucial to guarantee compatibility
    with existing systems and data formats that are still being utilized.'
  id: totrans-736
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log file**: A log file is a type of data file that retains various information,
    such as events, processes, messages, and additional data from software, OSs, or
    machines. They offer valuable insights into user actions and play a crucial role
    in monitoring IT environments. You can determine whether things are functioning
    correctly and identify any potential system or network breaches.'
  id: totrans-737
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log rotation**: Log rotation automates the management of log file size, preventing
    storage space from being filled and system performance from being slowed down.
    One way to update the log file is by renaming the current file and replacing it
    with a new one to store the latest information. This is typically done on a regular
    basis, either daily or weekly.'
  id: totrans-738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: M
  id: totrans-739
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Managed detection and response**: MDR assists enterprises in risk management
    through continuous monitoring conducted by a proficient cybersecurity team, utilizing
    advanced threat intelligence resources and techniques. Efficiently prioritizing,
    investigating, and responding to incidents enhances operations and safeguards
    precious data from both established and emergent risks.'
  id: totrans-740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mean Time Between Failures (MTBF)**: Mean time between failures is a metric
    utilized to assess the dependability of an application, computer system, or infrastructure
    component. It is determined by computing the arithmetic mean (average) time duration
    between occurrences of system failures.'
  id: totrans-741
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mean Time to Recovery (MTTR)**: The **Mean Time to Recovery** (**MTTR**)
    refers to the average duration it takes for an application, computer system, or
    infrastructure component to recover from an interruption or disaster incident.
    Instances of these kinds of instruments vary from self-replicating Kubernetes
    Pods to failover power supply systems. Typically, the recovery time for such recovery
    efforts is swift, usually measured in seconds.'
  id: totrans-742
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microservices**: Microservices are an illustration of the service-oriented
    strategy for software design, specifically the tactics involved with dividing
    a monolithic application into a collection of loosely connected services that
    handle specific operational duties. These services communicate with detailed granularity
    using economical protocols and APIs that offer adaptable and extensible product
    capabilities.'
  id: totrans-743
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microservices architecture**: Microservices architecture is the methodology
    of creating software as a network of separate, self-contained services that interact
    with one another and may be geographically diverse.'
  id: totrans-744
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mobile application**: A mobile application, also known as an app, is a specific
    sort of software developed to operate on a mobile device, such as a smartphone
    or tablet computer. Mobile applications often offer consumers comparable services
    to those found on personal computers. Apps are often compact, standalone software
    modules with minimal functionality.'
  id: totrans-745
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mobile application management**: **Mobile Application Management** (**MAM**)
    refers to the software and services that handle the distribution and oversight
    of both privately created and publicly available mobile applications used in corporate
    environments. This includes both company-issued and “bring your own” mobile operating
    systems, such as those found on smartphones and tablet computers.'
  id: totrans-746
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Model-based testing**: Model-based testing is a method of testing software
    where test cases are generated from a model that specifies the functionality of
    the **System Under Test** (**SUT**). Visual models can serve as representations
    of the intended functionality of a SUT, as well as representations of testing
    methodologies and a testing environment. Through the utilization of the model
    instructions, it is possible to automatically generate tests, including mock test
    data and automated tests.'
  id: totrans-747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monolithic architecture**: Monolithic architecture refers to a conventional
    software design where the program is constructed as a single, self-contained entity
    that operates independently from other applications. The term “monolith” is commonly
    associated with something immense and pervasive, which accurately reflects the
    nature of monolithic architecture in software engineering. Monolithic architecture
    refers to a unified and extensive computing network that incorporates all business
    considerations into a single code base. To modify this type of application, it
    is necessary to update the complete stack by consulting the entire code base to
    construct and deliver a revised edition of the server-side interface and backend
    infrastructure. This results in improvements becoming sporadic and requiring a
    significant amount of time and capital to complete.'
  id: totrans-748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Muda**: Muda is a Japanese term that signifies the state of being futile,
    ineffective, or wasteful. Muda is classified as one of the three categories of
    waste in the context of lean process engineering.'
  id: totrans-749
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-cloud architecture**: Multi-cloud architecture refers to an IT infrastructure
    strategy that encompasses the use of numerous public or private clouds, or a combination
    of both, together with on-premises infrastructure. By implementing a multi-cloud
    architecture, enterprises can strategically allocate important workloads, apps,
    and data among many cloud service providers. Organizations can choose service
    providers depending on several factors, such as their geographical coverage, performance
    capabilities, security controls, and pricing structures, thanks to this freedom
    of movement. The outcome is a streamlined cloud infrastructure that utilizes the
    distinct benefits of each provider to cater to specific scenarios, alleviate shortcomings,
    and accomplish organizational goals.'
  id: totrans-750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mura**: Mura is a Japanese term that refers to the state of being uneven,
    inconsistent, or lacking homogeneity. It is classified as one of the three categories
    of waste in the context of lean process engineering.'
  id: totrans-751
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Muri**: Muri is a Japanese term that signifies the state of being irrational,
    unattainable, or exceeding one’s capability due to extreme difficulty. It is classified
    as one of the three categories of waste in the context of lean process engineering.'
  id: totrans-752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: N
  id: totrans-753
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Network**: A computer network is a complex arrangement of interconnected
    computing equipment designed to facilitate the transmission and exchange of information.
    Computing devices encompass a wide range of equipment, ranging from handheld devices
    to supercomputers. These devices are interconnected using physical mediums such
    as fiber optics, although they are capable of establishing wireless transmissions
    to accomplish this.'
  id: totrans-754
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network bottleneck**: A network bottleneck is a condition in a computer network
    where the data flow is greatly obstructed or diminished because of a particular
    link or component in the network that has insufficient capacity or processing
    power. This limitation might lead to a slowness of data transfer and a reduction
    in overall network efficiency.'
  id: totrans-755
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Node**: A Kubernetes cluster contains physical or virtual computers called
    nodes. Its purpose is to serve as a host for Pods, which are responsible for running
    Docker containers.'
  id: totrans-756
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A node could also refer to any computer or similar equipment that is linked
    together within a network and is capable of transmitting, receiving, or distributing
    data. Laptops, file servers, printing devices, and network routers are all examples
    of nodes inside a local network.
  id: totrans-757
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Node pool**: This is a group of cluster nodes in Kubernetes that have identical
    specifications and are capable of being managed and controlled as a single unit.'
  id: totrans-758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Non-functional testing**: Non-functional testing is a form of software testing
    that validates the non-functional characteristics of a software program. Its purpose
    is to evaluate the preparedness of a system based on multiple factors that are
    not addressed by functional testing. Checking the system’s scalability, efficiency,
    usability, reliability, and performance are all examples of non-functional testing.'
  id: totrans-759
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NoOps**: NoOps refers to an IT environment in which the tasks involved in
    managing, optimizing, and securing IT services and applications are automated,
    abstracted, or delegated to individuals outside of a conventional central operations
    unit. The term “NoOps” lacks a precise definition, resulting in diverse interpretations
    among suppliers, analysts, and clients. It is used to characterize different levels
    of automation, the specific IT components it can be implemented with, and the
    allocation of IT operations responsibilities.'
  id: totrans-760
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: O
  id: totrans-761
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Observability**: Observability refers to the capacity to obtain a comprehensive
    understanding of the functioning and interaction of sophisticated distributed
    systems. It comprises the activities of monitoring, logging, and tracing in order
    to get insight into the performance of applications and infrastructure.'
  id: totrans-762
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OpenShift**: OpenShift, created by Red Hat, is a high-quality commercialized
    container orchestration solution for Kubernetes that operates in on-premises cloud
    infrastructures.'
  id: totrans-763
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open source**: Open source refers to a software distribution model in which
    the copyright holders provide users with access to the application’s source code
    and the rights to read, modify, and distribute it to anybody for any purpose.'
  id: totrans-764
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OpenTelemetry**: OpenTelemetry is a project that offers a comprehensive set
    of tools and resources for collecting telemetry data from applications and services.
    It aims to simplify the process and ensure compatibility across different systems.
    Having access to telemetry data is essential for monitoring and observing modern
    distributed systems. Utilizing OpenTelemetry allows developers to receive a thorough
    analysis of application behavior and performance. This promotes adept monitoring,
    problem-solving, and performance optimization.'
  id: totrans-765
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operational intelligence**: Operational intelligence refers to the utilization
    of data analytic methods on real-time data that is produced or gathered within
    the information technology environment of an organization. Operational intelligence
    aims to collect data from various parts of the IT infrastructure, analyze it immediately
    as it is generated or gathered, and offer it to IT operators in a standardized
    format. This allows them to quickly take action and make decisions according to
    the findings.'
  id: totrans-766
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ops**: Ops, in the context of DevOps, refers to any professionals who are
    involved in the day-to-day duties that are required to deploy and manage IT infrastructure
    and services conjointly.'
  id: totrans-767
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Orchestration**: This is the procedure for streamlining operations associated
    with information technology. This includes tasks such as the administration of
    containers and infrastructure configuration. Essentially, it is a procedure that
    includes executing predetermined tasks using pre-crafted automation scripts, facilitated
    by user-friendly applications such as Terraform, specifically designed for configuration
    management.'
  id: totrans-768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P
  id: totrans-769
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Pair programming**: Pair Programming is an approach to software development
    wherein two developers collaborate on a feature, allowing them to simultaneously
    assess each other’s code during the writing process, with the aim of enhancing
    the overall quality of the code.'
  id: totrans-770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Patch and pray**: The patch-and-pray technique refers to a software development
    and cybersecurity tactic that entails superficially addressing existing defects
    or vulnerabilities and relying on the hope that these actions would correct an
    issue or mitigate attacks in the future. It is a typical approach for firms without
    the necessary resources to be more proactive in their software development efforts
    or security measures.'
  id: totrans-771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pipeline**: Combines automation, tools, and techniques across the software
    development life cycle to optimize the means of creating and delivering software
    to consumers. Importantly, there is no universally applicable method for constructing
    a DevOps pipeline, as they frequently differ in structure and execution across
    different organizations. However, automation, CI/CD, automated testing, reporting,
    and monitoring are common components of most DevOps pipelines.'
  id: totrans-772
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Platform as a Service (PaaS)**: **Platform as a Service** (**PaaS**) offers
    developers a comprehensive set of languages, libraries, services, and tools to
    create and launch applications in the cloud, without the need to be concerned
    about the underlying operating system architecture and related infrastructure.'
  id: totrans-773
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Playbook**: A playbook in Ansible serves as a set of instructions for deploying
    infrastructure, providing comprehensive guidance on running a sequence of commands
    to accomplish certain tasks.'
  id: totrans-774
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predictive analytics**: Predictive analytics refers to a collection of techniques
    and technology that enable the analysis of both present and past data in order
    to create accurate forecasts about future occurrences. Predictive analytics encompasses
    a diverse range of mathematical modeling and computer science methodologies, all
    aimed at utilizing previous events to estimate the probability or chance of a
    future event.'
  id: totrans-775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product owner**: A **Product Owner** (**PO**) is a crucial component of an
    Agile team whose job is to make sure the team’s deliverables meet the needs of
    stakeholders and customers as much as possible and to maximize the team’s value
    delivery. As a key liaison between the company and its technological and business
    strategists, the PO acts as the principal spokesperson for the team’s clients
    and is an integral part of the broader product management function. Because of
    this, the team is able to evolve the solution in a way that satisfies all of the
    stakeholders in the most amenable way possible.'
  id: totrans-776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Production**: The ultimate phase in a deployment pipeline wherein the product
    will be consumed by the audience for which it was designed.'
  id: totrans-777
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Provisioning**: Provisioning refers to the procedure of setting up and implementing
    an IT system resource, whether it is done on-site or in a cloud environment. In
    the realm of enterprise computing, the phrase is frequently linked to **Virtual
    Machines** (**VMs**) and instances of cloud resources.'
  id: totrans-778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Public Key Infrastructure** (**PKI**) describes a cryptographic framework
    that facilitates the use of TLS certificates. Assuming the two parties have trust
    in an independent organization called a certificate authority, PKI allows one
    party to confirm the identity of another using certificates. This digital proof
    identity validates the legitimacy of internet sites and assets on protected networks,
    while guaranteeing the security of network connections.'
  id: totrans-779
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R
  id: totrans-780
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Real-time dashboard**: Real-time dashboards are a category of graphical user
    interfaces that present performance indicators or key metrics pertaining to a
    business function, process, or objective in a manner that is straightforward and
    immediate to comprehend. Real-time interfaces furnish IT operators and other personnel
    with the most recent data pertaining to a wide range of company performance, security,
    and operational metrics.'
  id: totrans-781
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regression testing**: Regression testing is a form of software testing that
    is performed following a code update in order to verify that the change has not
    created any new defects. The addition of new code can potentially introduce conflicting
    logic with the pre-existing code, resulting in a variety of problems. Typically,
    QA teams maintain a set of regression test cases for critical features, which
    they repeatedly run whenever there are code modifications. This practice aims
    to optimize testing efficiency and minimize the amount of time spent testing.'
  id: totrans-782
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Release**: A software release is a procedure for introducing a new iteration
    or enhancement of a software product to the intended demographic. This procedure
    includes the development and dissemination of the definitive revision of the software,
    which may encompass correcting issues, introducing new functionalities, refining
    existing features, or enhancing overall performance. The software release process
    is a crucial component of the software development life cycle, guaranteeing that
    the product fulfills customer requirements and is prepared for implementation
    in the real world.'
  id: totrans-783
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Release management**: Release management includes the systematic coordination,
    organization, and regulation of a software build as it progresses through various
    phases and environments. This comprehensive process involves the meticulous planning,
    scheduling, testing, and deployment of software releases, as per the software
    development life cycle.'
  id: totrans-784
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Release orchestration**: Release orchestration is a process that helps to
    coordinate and automate the various steps in a pipeline that culminate in an application’s
    release, including the transfer of value to the customer. This includes the span
    of time that code is committed into version control to the time that it gets deployed
    for consumption in a production environment. Some of the duties that release orchestration
    manages include notifying technical and business stakeholders if and when problems
    arise and maintaining a record of all actions taken for each release.'
  id: totrans-785
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rollback**: Rollback refers to the process of restoring a database or program
    to a previously defined state, either automatically or manually. A rollback usually
    occurs in response to a deployment failure or a problem with a new software release.'
  id: totrans-786
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rolling release**: A rolling release, often referred to as a rolling update,
    is a type of software development model. Software improvements are developed in
    ongoing, incremental steps rather than in discrete version releases. Users can
    upgrade the program at any moment to get the most recent version, and they are
    encouraged to do so often.'
  id: totrans-787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rolling update**: A rolling update is a seamless process of updating an application
    without any interruptions, completed instance by instance. It utilizes the Kubernetes
    container orchestration platform to guarantee continuous application availability
    and enhance the overall user experience throughout the entire process.'
  id: totrans-788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Runbook**: A runbook serves as a comprehensive guide, providing comprehensive
    instructions and details for performing routine operations within a business.
    Its purpose is to ensure that these tasks are executed consistently and efficiently.'
  id: totrans-789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S
  id: totrans-790
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**S3**: Amazon **Simple Storage Service** (**S3**) is a storage service offered
    by AWS that allows you to securely store various types of files, including photos,
    audio, and videos. It provides enhanced scalability and security for your data.
    Users can easily store and access data from anywhere on the internet, at any moment.
    It enables features such as high availability, strong security, and easy integration
    with other AWS services.'
  id: totrans-791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SSL certificate**: A digital certificate is used to authenticate websites
    and ensure their security. SSL, or Secure Sockets Layer, is a network protocol
    that establishes an encrypted link that protects traffic between a client and
    a web browser. Put simply, the SSL certificate guarantees internet security by
    thwarting any potential interception, reading, or alteration of transmitted information
    by malicious third parties.'
  id: totrans-792
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SSL/TLS handshake**: The SSL/TLS handshake is responsible for establishing
    a secure and encrypted communication channel between the user’s browser and the
    web server, ensuring the security of user data and transactions by preventing
    unauthorized access or tampering.'
  id: totrans-793
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scrum**: Scrum is an Agile framework that enables the completion of complex
    projects through an iterative, time-sensitive, and gradual approach.'
  id: totrans-794
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security intelligence**: Security intelligence involves the continuous monitoring
    and analysis of data from users, applications, and infrastructure to assess and
    manage IT security risks in an organization. The aim is to offer practical and
    thorough insights that minimize risk and operational burden for organizations
    of all sizes.'
  id: totrans-795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Self-service deployment**: Self-service deployments grant users the capability
    to not only initiate business processes but also terminate and restart those operations.
    Many self-service applications also offer job progress monitoring, allowing users
    to track their work. In order to accomplish this, end users may utilize web-based
    applications that feature user-friendly interfaces or the same business productivity
    tools that they employ on a daily basis.'
  id: totrans-796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business consumers expect and prefer self-service automation like never before
    in order to obtain the information they require when they require it. This simultaneously
    improves user experience and customer satisfaction while decreasing the IT department’s
    workload.
  id: totrans-797
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Serverless computing**: Serverless computing is a cloud computing architecture
    that allows developers to concentrate on coding without the requirement of server
    management. The cloud provider assumes responsibility for all aspects of server
    administration, including scaling and maintenance.'
  id: totrans-798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Serverless framework**: The serverless framework is an open source framework
    that streamlines the deployment and administration of serverless applications.
    It provides support for numerous cloud service providers and simplifies the operation
    of serverless architecture by hiding its inherent complexity.'
  id: totrans-799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Serverless monitoring**: Serverless monitoring enables businesses to observe,
    enhance, and optimize their serverless applications. Serverless monitoring necessitates
    monitoring that is specifically tailored for the **Event-Driven Architecture**
    (**EDA**) of such a system. Serverless monitoring systems collect data from all
    components of your serverless infrastructure, consolidate resource utilization
    statistics, and offer logs and analytics. They enable the observation of serverless
    function activity, tracking of resource utilization, and establishment of automatic
    alerts for actionable analysis.'
  id: totrans-800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service-Level Agreement (SLA)**: A **Service-Level Agreement** (**SLA**)
    is a contractual commitment between a service provider and a client or customer,
    ensuring certain quality assurances for factors such as availability, accountability,
    and other important criteria. Failure to comply with certain requirements outlined
    in the agreement will result in punitive actions against the service provider,
    typically in the form of a monetary penalty, such as a reimbursement, reduction,
    or credit.'
  id: totrans-801
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service-Level Indicators (SLIs)**: A **Service-Level Indicator** (**SLI**)
    is a precise metric used by firms to quantify and evaluate a particular component
    of the services provided to their clients. SLIs are a subset of SLOs, which are
    components of SLAs that affect the overall reliability of a service. SLIs can
    assist enterprises in identifying persistent network and application problems,
    hence enabling more effective remediation efforts.'
  id: totrans-802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SLIs are commonly quantified as percentages, where 0% represents poor performance
    and 100% represents flawless performance. SLIs serve as the fundamental building
    blocks for SLOs, which are the specific goals that a company strives to accomplish.
    SLOs will decide the SLIs that are emphasized.
  id: totrans-803
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Service-Level Objectives (SLOs)**: SLOs enable DevOps and **Site Reliability
    Engineering** (**SRE**) teams to effectively measure and evaluate the maintenance
    and adherence to their SLAs by utilizing SLIs. The SLO framework regulates the
    manner in which these teams deliberate on the dependability of a system or required
    modifications.'
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SLO is a crucial component of an SLA, which is a contract between a service
    provider and a client. The SLA ensures that the client’s technology will consistently
    maintain a specified standard or level of service over a period of time. In the
    event that the service provider does not match the specified criteria, they will
    be required to pay a penalty. SLO management refers to the process of maintaining
    and measuring an SLA.
  id: totrans-805
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Service-Oriented Architecture (SOA)**: **Service-Oriented Architecture**
    (**SOA**) is an architectural paradigm in software engineering that emphasizes
    modular services rather than a monolithic design. Consequently, it is also utilized
    in the context of software design, where application components serve other components
    across a network using a protocol for communicating. A service refers to a distinct
    and self-contained piece of functionality that is capable of being used remotely
    and controlled or modified autonomously.'
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shift left**: Shift left refers to the strategy of doing testing, quality
    assurance, and performance evaluation at an earlier stage in the development process.
    Shift-left testing not only verifies software functionality but also ensures compliance
    with customer requirements. This allows developers and stakeholders to identify
    enhancements that could improve customer experience and functionality. Implementing
    these modifications at an early stage of the development process minimizes the
    expenses associated with implementing them after the code has been released.'
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Site Reliability Engineering (SRE)**: SRE is a software engineering methodology
    created by Google to guarantee the dependable and efficient functioning of intricate
    systems at a massive scale. Its objective is to close the divide between conventional
    software development and IT operations by incorporating methodologies from both
    fields.'
  id: totrans-808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software development**: This is the methodical process used to create and
    maintain applications, infrastructure, or other components of an information system’s
    architecture. It involves creating, specifying, designing, programming, documenting,
    testing, and resolving bugs. Program development involves the creation and upkeep
    of source code. However, it also includes all the steps involved in bringing the
    intended program from conception to its final form. Planning and structuring the
    entire procedure is common, and there are several steps that go into making software,
    including research, prototyping, revising, fixing, and maintaining.'
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software deployment**: Software deployment encompasses the entirety of the
    necessary procedures, processes, and actions involved in making a software system
    or upgrade accessible to its intended users. The majority of IT firms and software
    developers utilize a mixture of human and automated procedures to implement software
    upgrades, patches, and brand-new applications. Software deployment could consist
    of several processes, such as product release, configuration, deployment, testing,
    and evaluating performance.'
  id: totrans-810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software testing**: Software testing is a process used to verify whether
    the software product aligns with the specified criteria and to guarantee that
    the software product is free of defects. It entails the execution of software
    or system elements using either manual or automated methods to assess one or more
    desired properties. The primary objective of software testing is to detect and
    pinpoint flaws, discrepancies, or omissions in relation to the specified requirements.'
  id: totrans-811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source control**: Source control, also referred to as version control, entails
    the systematic monitoring and administration of modifications made to source code.
    Source control systems are software tools designed to facilitate the management
    of source code modifications by development teams. With the rapid advancement
    of development environments, VCSs have become essential tools for software teams
    to enhance their productivity and efficiency. They are particularly advantageous
    for DevOps teams as they aid in minimizing development time and enhancing the
    rate of successful deployments.'
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint**: A sprint is a predefined time frame within which a development
    team is allocated to do a predetermined amount of work. Sprints typically have
    a duration of approximately two weeks, although they can vary in length from one
    week to one month.'
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The primary benefit of the brief duration of a sprint is that it compels developers
    to concentrate on implementing tiny, gradual modifications rather than extensive,
    sweeping alterations. Consequently, a much-reduced amount of debugging is necessary,
    resulting in clients of the program enjoying a more seamless experience with the
    product.
  id: totrans-814
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Software Quality Assurance (SQA)**: Software quality assurance (SQA) is the
    systematic process of overseeing and evaluating all software engineering activities,
    techniques, and deliverables to guarantee adherence to established benchmarks.
    It may involve assuring compliance with established standards or models, such
    as ISO/IEC 9126 (since replaced by ISO 25010), SPICE, or CMMI.'
  id: totrans-815
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It consists of guidelines and practices that managers, administrators, or engineers
    can apply to evaluate and audit software-related activities and products to ensure
    that they adhere to standards-based quality requirements.
  id: totrans-816
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Staging environment**: A staging environment is employed to evaluate the
    latest iteration of your program prior to its deployment in the actual production
    environment. The purpose of staging is to duplicate the actual production environment
    as closely as possible, in order to maximize the opportunity to identify and address
    any software issues prior to software release.'
  id: totrans-817
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Structured logging**: Structured logging refers to the systematic recording
    of errors and access events in a standardized and logical manner, allowing for
    effortless studying, searching, and analysis by any application or interested
    party. JSON is the most prevalent format for structured logging since it serves
    as the accepted message format for inter-system and intra-application message
    parsing.'
  id: totrans-818
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**System Under Test (SUT)**: SUT denotes a system that is undergoing testing
    to ensure its proper functioning. From a unit-testing standpoint, the system under
    test encompasses all the classes in a test that are not predefined code elements,
    such as proxies or mocks. Each individual component can be customized with its
    own configuration, consisting of a unique name and version. This allows for scalability
    in conducting a multitude of tests, enabling higher levels of precision based
    on the quality and quantity of the system being tested.'
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: T
  id: totrans-820
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Technical debt**: Technical debt refers to the implicit expenses that arise
    in software development or other IT domains when opting for a quick yet restrictive
    solution instead of a superior method that may require more time for implementation.
    Similar to financial debt, if technical debt is not paid off, it can accrue “interest,”
    which can make it more difficult to execute improvements.'
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unresolved technical debt leads to a rise in software volatility and the expense
    of future modifications. Just like financial debt, technical debt is not inherently
    negative and can be necessary for advancing initiatives. Conversely, several experts
    argue that the use of the “technical debt” metaphor downplays the consequences,
    leading to inadequate prioritization of the essential tasks required to rectify
    it.
  id: totrans-822
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Technology stack**: A technological stack encompasses the complete set of
    hardware and software components required for the creation and operation of a
    single application, integration, or mobile app. Software engineers have the option
    to utilize a preconfigured technology stack as the foundation for creating a new
    application, or they can create a technology stack by selecting and integrating
    software that fulfills their specific needs.'
  id: totrans-823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Telemetry**: Telemetry is an automated process that gathers, conveys, and
    quantifies data from distant sources by utilizing sensors and other instruments
    for data collection. It employs communication technologies to transmit the data
    to a central location. Afterward, the data is examined to supervise and manage
    the remote system. Telemetry data is utilized to enhance customer satisfaction
    and oversee security, application health, reliability, and performance.'
  id: totrans-824
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Terraform**: Terraform is an important infrastructure orchestration application
    developed by HashiCorp. Terraform simplifies the process of deploying and managing
    infrastructure by utilizing declarative manifests. These manifests are capable
    of being stored and versioned as code, ensuring consistency and a seamless DevOps
    workflow.'
  id: totrans-825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Terraform Cloud**: Terraform Cloud is a practical SaaS solution offered by
    HashiCorp. It allows for easy collaboration in managing infrastructure, provides
    version control for infrastructure code, and offers an intuitive user interface
    for effectively managing Terraform architectures.'
  id: totrans-826
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Terraform module**: This is a collection of standardized configuration files
    that are arranged within a specified directory. Terraform modules act as encapsulations
    for groups of resources that are designed for specific purposes, thereby reducing
    the necessity to write lengthy code for identical infrastructure components. Terraform
    modules are a means of expanding your current Terraform configuration by incorporating
    pre-existing sections of reusable code. This reduces the need to write new code
    for similar infrastructure components.'
  id: totrans-827
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`terraform plan` command, you will consistently receive a summary at the conclusion.
    This summary provides information on the quantity of resources that will be created,
    updated, or deleted.'
  id: totrans-828
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`terraform.tfstate`, and it resides in the directory where Terraform was executed.
    It is generated subsequent to executing the `terraform` `apply` command.'
  id: totrans-829
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The file contains JSON-formatted mappings of the resources that were specified
    in the configuration and the ones that currently exist in your infrastructure.
    When Terraform is executed, it utilizes this mapping to compare the existing infrastructure
    with the code and perform any necessary modifications.
  id: totrans-830
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Test automation**: This involves the use of specialized software, separate
    from the program being tested, to control the execution of tests and compare the
    actual outcomes with what was expected.'
  id: totrans-831
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test-driven development**: Test-driven development is a software development
    methodology that involves converting software requirements into test cases prior
    to completely developing the product. It emphasizes continuously testing the software
    against all the test cases throughout the development process. This is in contrast
    to the sequential approach where software is produced first and test cases are
    created after.'
  id: totrans-832
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test environment**: A test environment refers to a specially curated server
    infrastructure that facilitates the execution of the test cases that a development
    team has constructed. The test environment incorporates more than simply configuring
    a server for test execution. It also includes the setup and arrangement of both
    hardware and network components.'
  id: totrans-833
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Theory of Contraints**: The **Theory of Constraints** (**TOC**) is an
    approach to management that perceives any controllable system as being restricted
    in its ability to achieve more of its objectives due to a minimal amount of constraints.
    Within TOC, there is consistently a minimum of one constraint. TOC employs a focusing
    process to discover this constraint and subsequently reorganize the remaining
    aspects of the business accordingly. TOC applies the widely used phrase “a chain
    is only as strong as its weakest link.” Consequently, organizations and processes
    are susceptible to failure or disruption due to the presence of a “weak” individual
    or component, which has the potential to impair or negatively impact the whole
    outcome.'
  id: totrans-834
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Three Pillars of Observability**: Logs, metrics, and traces are the three
    fundamental components of observability. These three data outputs offer distinct
    perspectives on the overall health and functioning of systems in cloud and microservices
    architecture.'
  id: totrans-835
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logs are records of system events and issues that can be stored in various formats,
    including plain text, binary, or structured with metadata.
  id: totrans-836
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Metrics**: Refers to quantifiable indicators that assess the performance
    and efficiency of a system, including factors such as CPU utilization, response
    time, and error frequency.'
  id: totrans-837
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Traces**: These are visual depictions of individual requests or transactions
    that pass through a system, enabling the identification of bottlenecks, dependencies,
    and underlying causes of problems.'
  id: totrans-838
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By integrating and examining logs, metrics, and traces together, a comprehensive
    perspective of systems can be obtained, facilitating the identification of issues
    that impede business goals.
  id: totrans-839
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The Three Ways**: The Three Ways refers to a collection of principles created
    by Gene Kim, an acclaimed CTO, author, and scholar, with the aim of precisely
    defining the essence of DevOps:'
  id: totrans-840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The First Way**: Enhancing the efficiency of the workflow, spanning from
    business processes, through development stages, to operational activities, and
    ultimately benefiting the client.'
  id: totrans-841
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Second Way**: Enhancing the quantity of feedback loops inside your workflow
    and augmenting the speed at which you receive input.'
  id: totrans-842
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Third Way**: Cultivating and promoting a culture that actively encourages
    continuous experimentation and learning.'
  id: totrans-843
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Throw it over the wall**: “Throw it over the wall” is an idiomatic expression
    used to describe the act of finishing one’s portion of an assignment and then
    transferring it to the next team or group. The origin of the idiom can be traced
    back to the domain of business and project management. It represents the act of
    assigning a task or assignment to someone without giving them detailed information
    or guidance. The term “wall” in this context symbolizes a metaphorical obstacle
    that separates several departments or teams inside an organization. It is frequently
    used in situations where there is an apparent deficiency in collaboration, exchange
    of knowledge, or transparency in the delegation process.'
  id: totrans-844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Time to value**: Time to value refers to the duration it takes for a business
    to achieve tangible benefits from a certain feature.'
  id: totrans-845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TLS certificate**: This is an electronic certificate that facilitates systems
    on a network to verify the identity of another computer system and establish a
    secure network connection using the Secure Sockets Layer (Transport Layer Security)
    protocol.'
  id: totrans-846
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Toolchain**: A toolchain refers to the utilization of a comprehensive collection
    of specialized tools to automate a complete process from start to finish, for
    instance, the process of automating code testing, release, and deployment.'
  id: totrans-847
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: U
  id: totrans-848
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Unit test**: A unit test is a code segment that validates the correctness
    of a smaller, self-contained segment of application code, usually a function or
    procedure. The purpose of the unit test is to verify that the code block executes
    as intended, in accordance with the developer’s conceptual reasoning. The unit
    test can only interact with the code segment through inputs and recorded output,
    which can be either true or false.'
  id: totrans-849
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unit testing**: Unit testing is the procedure in which the smallest working
    piece of code is examined and evaluated. Software testing is crucial for ensuring
    the quality of code and is an essential component of software development. Writing
    software as small, functional units and creating a corresponding unit test for
    each code unit is considered a best practice in software development. Initially,
    you can express unit tests in the form of executable code. Subsequently, execute
    the aforementioned test code automatically whenever modifications are made to
    the software code. By employing this method, in the event of a test failure, you
    can promptly identify the specific section of the code that contains the defect
    or mistake. Unit testing promotes the use of modular design patterns and enhances
    both the breadth and caliber of test coverage. Automated unit testing facilitates
    the allocation of more time for development by you or your engineers.'
  id: totrans-850
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Uptime**: Uptime is the period of time that a computer system, service, or
    appliance is functioning and accessible for use. It quantifies the duration during
    which the system operates without any notable disruptions or outages. Uptime is
    commonly quantified as a percentage and is utilized to evaluate the dependability
    and efficiency of a system. Greater uptime signifies a system that is more dependable
    and accessible, whereas lower uptime implies a greater probability of service
    interruptions. Uptime is an essential measure for assessing **Service-Level Agreements**
    (**SLAs**) and ensuring an acceptable customer experience.'
  id: totrans-851
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User acceptance testing**: **User Acceptance Testing** (**UAT**) is a sort
    of testing conducted by the end user or customer to validate and approve the software’s
    functionality prior to transitioning it to the production environment. User acceptance
    testing is conducted during the last step of the testing process, following the
    completion of functional, integration, and system testing.'
  id: totrans-852
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: V
  id: totrans-853
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Value (business)**: Business value refers to the measurable and quantifiable
    benefits that result from a business venture, which can be either tangible or
    intangible, or a combination of both. The meaning of value transcends the notion
    of a firm’s value past its economic worth, encompassing additional forms of value,
    such as employee value, customer value, vendor value, managerial value, and social
    value. Several of these types of value are not directly quantified in the context
    of money.'
  id: totrans-854
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Value stream**: The value stream includes all the steps involved in delivering
    value to the customer, starting from the request itself and continuing until the
    customer realizes that value. Typically aligning with the processes of the company,
    the value stream originates with the first idea, progresses through different
    stages of development, and continues until delivery and support. The customer
    always occupies a position at the center of a value stream, from start to finish.'
  id: totrans-855
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Value stream management**: This refers to a set of practices that focus on
    improving the operational effectiveness and efficiency of development teams toward
    delivering outstanding customer experiences. **Value Stream Management** (**VSM**)
    places its greatest emphasis on expediting the delivery of superior quality, features,
    and updates, ensuring that customers realize the value of those improvements.
    VSM has its roots in lean manufacturing and its association with the Toyota Production
    System. This methodical approach is crafted to expedite the time it takes to achieve
    value and produce superior products. By bridging the gap between the C-suite,
    Agile, and DevOps teams, VSM helps software development organizations align their
    efforts to satisfy customers.'
  id: totrans-856
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Value stream mapping**: Value stream mapping, a lean management practice,
    analyzes both the present and future states of a development process taking a
    product or service from initial conception to final delivery to the customer.
    A value stream map is a visual tool that clearly presents the essential steps
    in a particular process and provides unambiguous measurements of the time and
    volume involved at each stage. The purpose of this is to illustrate the movement
    of materials and information throughout the process in the hopes of identifying
    areas that can be improved.'
  id: totrans-857
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Velocity**: Velocity is a measure of how much product backlog is completed
    by a development team in a sprint. Therefore, it can be utilized to forecast future
    accomplishments or determine the completion time of a particular task. It is crucial
    to note that velocity is a metric that gauges the rate at which value is generated,
    rather than serving as an indicator of your team’s performance.'
  id: totrans-858
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version control**: This refers to the organized tracking and management of
    changes made to source code. VCSs are software tools specifically created to simplify
    the management of source code alterations made by teams of programmers. Due to
    the fast progress of development conditions, VCSs have evolved into essential
    instruments for software teams to increase their efficiency and productivity.
    They are especially beneficial for DevOps teams because they help reduce development
    time and improve the success rate of deliveries.'
  id: totrans-859
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtualization**: This is a procedure that enables the optimal utilization
    of physical computer hardware and serves as the basis for cloud computing. Virtualization
    employs software to establish a layer of abstraction over computer hardware, enabling
    the division of the physical components of a single computer, such as processors,
    memory, and storage, into several **Virtual Machines** (**VMs**). Each virtual
    machine operates independently with its own unique operating system and exists
    as an independent entity, while consuming only a portion of the computer’s physical
    hardware.'
  id: totrans-860
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual Machine (VM)**: This is a computerized emulation that is capable
    of executing nearly identical operations as a physical computer, such as running
    programs and operating systems. Virtual machines exist on a physical system and
    harness computational capacity via software called a hypervisor. The hypervisor
    centralizes the tangible resources of the machine itself into a collective pool,
    which can be independently assigned and shared as needed, enabling multiple virtual
    machines to function on just a single physical machine.'
  id: totrans-861
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: W
  id: totrans-862
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Waste**: Waste refers to the components of any activity that do not contribute
    value from the customer’s point of view. Waste can manifest as improper use of
    time, excessive use of materials, and unproductive use of human capital. However,
    it could also be linked to the mismatched deployment of skill sets and insufficient
    planning.'
  id: totrans-863
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Waterfall**: The waterfall model is a method of organizing development operations
    into a series of successive phases. Each phase builds upon the deliverables of
    the previous one and involves specialized duties. This method is characteristic
    of specific domains within the field of engineering design. In the realm of software
    development, the waterfall technique is known for its limited iteration and flexibility.
    Progress follows a linear path, moving downward through many stages, including
    conception, initiation, analysis, design, construction, testing, deployment, and
    maintenance. The waterfall model represents the original **Software Development
    Life Cycle** (**SDLC**) approach adopted for software development.'
  id: totrans-864
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web application security**: Web security encompasses a wide range of security
    measures designed to safeguard your users, devices, and network from cyberattacks
    originating from the internet, such as malware and phishing attempts. These attacks
    have the potential to cause breaches and data loss. Implementing a combination
    of firewall inspection, **Intrusion Prevention System** (**IPS**) scanning, sandboxing,
    URL filtering, and other security and access restrictions helps mitigate the security
    risk to your company caused by users inadvertently accessing harmful files and
    websites.'
  id: totrans-865
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Webhooks**: A webhook is a callback function that enables lightweight, event-driven
    interaction among two APIs using the HTTP protocol. Webhooks serve as a means
    for web applications to receive minimal data from other applications. However,
    they can also be employed to initiate automated workflows in DevOps and GitOps
    configurations.'
  id: totrans-866
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**White-box testing**: The goal of white-box testing is to improve the design,
    performance, and security of software by validating the flow of inputs and outputs
    and studying its fundamental architecture and code. When compared to white-box
    testing, black-box testing involves conducting tests from the perspective of an
    outsider or a customer. Conversely, white-box testing in software engineering
    is grounded in the underlying mechanisms of an application and focuses on internal
    testing.'
  id: totrans-867
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.github/workflows` directory (folder) within a repository, and it can have
    numerous workflows, each capable of executing a distinct set of tasks. For instance,
    you can establish a distinct workflow to construct and evaluate pull requests,
    and another workflow to deploy an application whenever a release is generated.'
  id: totrans-868
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Work in Progress (WIP)**: WIP stands for work in progress, which denotes
    the specific items in the product backlog that a team is currently working on
    but has not yet finished. Put simply, the job is currently “in development.” Although
    this may appear to be simple, WIP has a significant impact not just on the ongoing
    sprint but also on subsequent sprints, backlogs, and the general performance and
    mental health of the team.'
  id: totrans-869
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Y
  id: totrans-870
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**YAML**: YAML is a flexible and easily understandable data serialization language
    that is frequently employed for composing configuration files. YAML is fundamentally
    meant to prioritize simplicity and readability. The language employs a streamlined
    and simplistic syntax, depending on indentation, key-value pairs, and instinctive
    norms. This methodology enables developers and users to articulate intricate data
    structures in a manner that mimics ordinary language and is readily understandable
    at first glance. The versatility of YAML makes it a highly adaptable solution
    for a wide range of applications. YAML is a versatile tool that may be used in
    different areas, such as configuration management, data exchange, and automation.
    It provides a user-friendly and organized way of representing and handling data.'
  id: totrans-871
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
