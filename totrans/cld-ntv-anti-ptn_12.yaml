- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Migrating from Legacy Systems to Cloud Native Solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’re going to dive into how cloud migrations can go off the
    rails, and more importantly, how to steer clear of those traps. We’ll break down
    the most common mistakes that lead to cloud adoption failures, like jumping in
    without a solid strategy, lack of buy-in from key stakeholders, and trying to
    force outdated on-prem security practices into the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s what we’ll cover:'
  prefs: []
  type: TYPE_NORMAL
- en: How to craft a clear migration strategy that aligns with your business goals,
    so you’re not just moving workloads but actually adding value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The critical role of stakeholder engagement throughout the cloud journey, ensuring
    everyone is on the same page and committed to success.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why on-prem security practices don’t translate to the cloud, and how to shift
    to cloud native security models that fit today’s dynamic environments.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to identify and close skill gaps, making sure your team is equipped for
    a smooth and efficient transition.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you’ll have a roadmap for avoiding the pitfalls
    that can sabotage cloud migrations and be better prepared for a seamless move
    to the cloud. ￼
  prefs: []
  type: TYPE_NORMAL
- en: Planning for an effective migration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the biggest reasons cloud migrations hit roadblocks or fail entirely
    is the lack of a clear strategy and proper planning. Too many businesses dive
    in headfirst without considering the full scope, leading to confusion, unexpected
    costs, and inefficiencies. A successful migration requires careful thought and
    alignment with business goals right from the start.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we’ll start by discussing why a solid migration plan is essential
    to keep things on track. We’ll explore how setting clear priorities for applications,
    choosing the right cloud platform, and deciding on a treatment approach—whether
    it’s lift-and-shift or a complete re-architecture—can make all the difference.
    By understanding these foundational elements, we can approach migration with clarity,
    focus, and a stronger chance of success.
  prefs: []
  type: TYPE_NORMAL
- en: 'Jumping in Without a Plan: Why planning is important'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A common mistake seen time and again is treating cloud migration like a quick
    fix for aging infrastructure. Teams often rush the process, assuming they can
    just move applications or whole servers to the cloud without much thought. This
    lack of planning leads to:'
  prefs: []
  type: TYPE_NORMAL
- en: Applications are not being optimized for the cloud environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Misaligned workloads with the right cloud services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unanticipated costs due to poor resource scaling.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unrealized return on investment due to not leveraging cloud native services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Failure to address compliance and security requirements early on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each of these can be a root cause of increased operational costs, delays in
    migration and cloud adoption and even degraded performance of workload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Without proper planning, we can find ourselves in a tangled mess, a patchwork
    cloud setup that’s inefficient, expensive, and prone to failure. It’s the classic
    case of “*act in haste, repent* *at leisure*.”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing a Clear Migration Strategy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The key to a successful cloud migration starts with a rock-solid strategy. Shifting
    to the cloud isn’t just about moving workloads; it’s a major shift that needs
    careful planning and a clear direction. Without a strong plan, the process can
    quickly spiral into unexpected costs, delays, and unnecessary complexity. This
    section dives into what it takes to build a migration strategy that aligns with
    business goals and keeps your team focused. From assessing your current setup
    to choosing the right cloud model, we’ll cover the foundational steps that set
    you up for a smooth, future-ready migration
  prefs: []
  type: TYPE_NORMAL
- en: Assessing Your Current Environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before anything else, get a handle on what you’re working with. Identify critical
    applications, dependencies, and integrations. Figure out what can be retired and
    what needs significant reworking. Don’t forget to look at network dependencies
    and latency needs too.
  prefs: []
  type: TYPE_NORMAL
- en: 'To properly assess our current environment, we will need to leverage cloud
    migration assessment tools from the cloud provider of choice or a third party.
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: AWS Migration Evaluator can help us break down the on-prem infrastructure by
    mapping workloads, dependencies, and integrations. It’ll give a detailed cost
    analysis and show us how things might look in the AWS environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Similarly, Azure Migrate can map out the dependencies and network interactions,
    showing what’s cloud-ready and where potential latency issues might crop up.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Cloud’s Migrate for Compute Engine works in much the same way, giving
    insights into VMs, apps, and the infrastructure, making sure we have a clear path
    for each workload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using one of these tools provides a detailed breakdown of critical applications,
    how they interact, and any network or latency requirements. This kind of visibility
    allows us to make more informed decisions about what can be retired, reworked,
    or kept as-is, helping avoid the common pitfalls that often cause migrations to
    fail.
  prefs: []
  type: TYPE_NORMAL
- en: 'In each of the above cases the output should provide you with a useful list
    of assets to be migrated and the resources they may require. Below shows a sample
    of this data, not limited nor an exhaustive list:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **HostName** | **CPU Cores** | **OS** | **OS.Version** | **RAM Total** |'
  prefs: []
  type: TYPE_TB
- en: '| app-server01.local | 4 | Windows Server 2019 | 1809 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| linux-db01.local | 4 | Ubuntu 20.04 | Focal Fossa | 16384 |'
  prefs: []
  type: TYPE_TB
- en: '| mssql-db01.local | 8 | Windows Server 2016 | 1607 | 32768 |'
  prefs: []
  type: TYPE_TB
- en: '| app-server02.local | 2 | Windows Server 2019 | 1809 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| backup-server.local | 4 | Windows Server 2012 R2 | 9600 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| web-server01.local | 2 | RHEL 8 | Ootpa | 4096 |'
  prefs: []
  type: TYPE_TB
- en: '| dev-server.local | 4 | Windows 10 Pro | 21H1 | 16384 |'
  prefs: []
  type: TYPE_TB
- en: '| linux-app01.local | 2 | CentOS 7 | Core | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| storage-server.local | 16 | Windows Server 2019 | 1809 | 65536 |'
  prefs: []
  type: TYPE_TB
- en: '| dns-server.local | 1 | Ubuntu 18.04 | Bionic Beaver | 2048 |'
  prefs: []
  type: TYPE_TB
- en: '| mail-server.local | 4 | Windows Server 2016 | 1607 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| log-server.local | 8 | Ubuntu 22.04 | Jammy Jellyfish | 16384 |'
  prefs: []
  type: TYPE_TB
- en: Table 12.1 - Migration Assessment Data
  prefs: []
  type: TYPE_NORMAL
- en: 'Prioritizing Applications: Using a Lighthouse'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We don’t have to move everything all at once. The smart move is to prioritize
    applications based on their business impact, how easy they are to migrate, and
    what will gain the most from the cloud. We start with the low-hanging fruit, those
    simpler applications, and as we get more comfortable, we take on the more complex
    ones. We sometimes refer to this concept as a “*Lighthouse*”.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a lighthouse
  prefs: []
  type: TYPE_NORMAL
- en: A lighthouse application is your first step in proving the value of cloud adoption.
    It’s a smaller, low-risk app that sets the tone for everything else. When picking
    one, go for something important enough to show real impact, but not so complex
    that it bogs down your team. The perfect lighthouse app is easy to migrate, clearly
    benefits from cloud native features like auto-scaling or serverless and gives
    you a quick win to build momentum. It’s all about starting smart, setting the
    foundation for larger, more complex moves later on.
  prefs: []
  type: TYPE_NORMAL
- en: Not every workload needs the same approach, and grouping them by size, “small,”
    “medium,” and “large”—helps us streamline planning and resource allocation. T-shirt
    sizing gives us a quick, practical way to categorize workloads based on complexity
    and migration effort.
  prefs: []
  type: TYPE_NORMAL
- en: Small Workloads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are simple, low-impact applications that can be easily lifted and shifted.
    Ideal for early migrations, they require minimal changes and can help build momentum
    quickly.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Medium Workloads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications here might need some re-platforming or tweaking to perform optimally
    in the cloud. They tend to have specific latency or integration requirements and
    benefit from a bit more planning.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Large Workloads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Large, mission-critical applications usually require significant re-architecture
    to fully leverage cloud benefits. Their migrations are phased in and involve detailed
    planning to ensure alignment with business needs.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: By sizing workloads upfront, we gain clarity on resources, timelines, and dependencies,
    allowing us to focus on quick wins while preparing for more complex migrations
    in a manageable way.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging tools like AWS Application Discovery Service or Azure Migrate’s
    Assessment, we can automate the process of figuring out which workloads are ready
    for the cloud and which will need more work. These tools give us a clear view
    of where to start and what to save for later.
  prefs: []
  type: TYPE_NORMAL
- en: This phased approach helps us reduce risk, keeps the team from getting overwhelmed,
    and lets us build momentum as we go. Starting with easier migrations ensures smoother
    transitions and sets us up for long-term success when it’s time to tackle the
    more critical applications.
  prefs: []
  type: TYPE_NORMAL
- en: Defining Your Cloud Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before we dive into the migration, one of the most important decisions we need
    to make is which cloud model fits our needs: *single cloud*, *multi-cloud*, or
    *hybrid*. Each has its own strengths and trade-offs, so it’s crucial we choose
    wisely, based on what we’re trying to achieve with each workload.'
  prefs: []
  type: TYPE_NORMAL
- en: Single Cloud
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If we stick with a single cloud provider, whether that’s AWS, Azure, or GCP,
    it keeps things simple. Managing one environment makes things easier for the team,
    as we only have to focus on one set of tools, APIs, and services. For less complex
    or internal applications, this approach often provides all the reliability and
    performance we need.
  prefs: []
  type: TYPE_NORMAL
- en: However, we have to consider the risks of vendor lock-in and the potential impact
    of outages. If our entire operation is reliant on one provider, any downtime they
    experience could hit us hard. That’s the trade-off, simplicity versus flexibility
    and risk mitigation.
  prefs: []
  type: TYPE_NORMAL
- en: Global Infrastructure of Cloud Service Providers
  prefs: []
  type: TYPE_NORMAL
- en: As we decide on our cloud model, it’s important to evaluate the global infrastructure
    of the **Cloud Service Provider** (**CSP**) we’re considering. This includes understanding
    how many points of presence they have and their capacity to ensure high availability.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a single cloud provider doesn’t mean sacrificing high availability,
    as most CSPs offer multiple availability zones and regions that can be leveraged
    for redundancy and failover.
  prefs: []
  type: TYPE_NORMAL
- en: For more on how to approach high availability, refer to [*Chapter 11*](B22364_11.xhtml#_idTextAnchor292),
    where we dive deeper into this topic.
  prefs: []
  type: TYPE_NORMAL
- en: Multi-Cloud
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When it comes to mission-critical applications, multi-cloud strategies give
    us that extra layer of resilience. By spreading our workloads across multiple
    cloud providers, we reduce the risk of being affected by a single point of failure.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we might run our main application on AWS while having a secondary
    backup on Azure, ready to take over if needed. This way, if one provider goes
    down, our operations don’t. Multi-cloud can also help us navigate compliance requirements
    across different regions or industries. However, we need to be prepared for the
    added complexity, managing different tools, APIs, and configurations across multiple
    platforms. It requires our team to be well-versed in all the platforms we use,
    and we need to keep up with updates and changes across the board.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid Cloud
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A hybrid approach allows us to combine the best of both worlds, mixing on-prem
    infrastructure with cloud resources, or even blending multiple cloud providers.
    This is especially useful if we can’t fully move to the cloud because of legacy
    applications, data residency laws, or strict regulatory requirements.
  prefs: []
  type: TYPE_NORMAL
- en: In a hybrid setup, we might keep sensitive data on-prem while moving less critical
    workloads to the cloud. Tools like AWS Outposts, Azure Arc, and Google Anthos
    make it easier for us to bridge the gap between on-prem and cloud environments.
    The challenge, though, is ensuring everything works seamlessly across both environments,
    especially when it comes to networking, security, and maintaining consistent data.
  prefs: []
  type: TYPE_NORMAL
- en: A hybrid cloud could also be represented as a transitory phase when migrating
    between two cloud service providers or on premise to the cloud. It’s very common
    that these sorts of migrations can take months to years, depending on size or
    complexity.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, the model we choose needs to reflect both the technical and business
    goals we’re aiming for. Mission-critical apps may call for the redundancy and
    availability of multi-cloud, while simpler applications could sit comfortably
    in a single cloud. And if we’ve got legacy systems or specific compliance requirements
    to consider, a hybrid model might be our best bet. Ultimately, the choice we make
    has to align with both our operational capabilities and our long-term objectives.
  prefs: []
  type: TYPE_NORMAL
- en: Using a Treatment Plan for Migration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The first question to ask here is, “What is a treatment plan?” in the context
    of Cloud Native migrations. In short, a Treatment Plan is a framework or model
    to help organizations make important decisions about how to migrate each workload.
    It can be seen as a decision making tool to categorise and prioritizr workloads
    to determine the best approach for migrating infrastructure, applications and
    data to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: When we’re making decisions about workloads, it’s crucial to use the right framework,
    whether it’s AWS’s 7 Rs, Azure’s Cloud Adoption Framework, or GCP’s 6 Rs. These
    help us stay aligned with our goals and make sure we’re taking the best approach
    for each app.
  prefs: []
  type: TYPE_NORMAL
- en: 'Whilst the differing CSP’s have different names for their Treatment Plans,
    they all revolve around the same basic principals, below:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rehost (Lift and Shift)**: Move workloads to the cloud with minimal changes.
    This is our go-to when time is tight or we need to keep things simple, and it’s
    an option across AWS, Azure, and GCP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Replatform**: Make small tweaks to optimize for the cloud without a full
    overhaul. We might use AWS Elastic Beanstalk, Azure App Services, or GCP App Engine
    to give our apps a better platform while keeping things familiar.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Repurchase (SaaS)**: Swap out on-prem software for SaaS solutions where it
    makes sense. Think Microsoft 365 or GCP’s Workspace, less management, more efficiency,
    and someone else is handling the heavy lifting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Refactor**: When we need to redesign an app to make it truly cloud native,
    we turn to tools like AWS Lambda, Azure Functions, or Google Cloud Functions for
    serverless, or break things down into microservices with Kubernetes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Retire**: This is about cutting loose the apps we no longer need. Whether
    it’s to reduce complexity or save costs, shutting down obsolete systems is key
    to keeping our cloud environment lean.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Retain**: Sometimes it’s best to keep certain apps on-prem, especially if
    they’re not cloud-ready or compliance demands it. We can manage that through hybrid
    solutions like AWS Outposts, Azure Arc, or Google Anthos.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Relocate**: Move workloads between clouds as needed. Flexibility is everything,
    and shifting between providers lets us optimize for performance, cost, or compliance
    as the business evolves.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: We also briefly touched on the 7 R’s, specifically lift and shift, in [*Chapter
    7*](B22364_07.xhtml#_idTextAnchor198), section 1.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing Your Cloud Platform
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whether we’re looking at AWS, Azure, GCP, or a mix of them, it’s essential that
    the platform fits our business and technical requirements. Each cloud provider
    has its strengths, so understanding what we need is crucial to avoid mismatches
    that could limit performance or drive-up costs. The following are some of the
    considerations to take before choosing your cloud platform.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluating Services and Features
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We need to start by reviewing the core services each provider offers, particularly
    in areas critical to our business. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: AWS is known for its extensive and mature ecosystem, especially in areas like
    compute (EC2), serverless (Lambda), and data lakes (S3).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure, on the other hand, might be the better choice if we’re already in the
    Microsoft ecosystem due to its seamless integration with tools like Active Directory,
    Office 365, and Windows Server.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCP often excels with its AI/ML capabilities, Kubernetes (GKE), and Big Data
    solutions like BigQuery.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deciding which provider suits our needs involves assessing how well these core
    services line up with our current and future workloads.
  prefs: []
  type: TYPE_NORMAL
- en: Cost Considerations
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: While cloud providers are typically pay-as-you-go, pricing models differ significantly
    between platforms. We need to evaluate not just the upfront cost of services,
    but also the long-term financial impact based on scalability, storage, and data
    transfer fees. AWS, Azure, and GCP each have unique pricing structures for things
    like compute, networking, and storage tiers.
  prefs: []
  type: TYPE_NORMAL
- en: In a multi-cloud scenario, pricing gets even more complex. We’ll need to factor
    in the cost of data egress between providers, making sure any data transfers between
    platforms don’t lead to unexpected charges.
  prefs: []
  type: TYPE_NORMAL
- en: It’s also worth noting that a hybrid-cloud strategy could incur varying costs
    as well from direction connectivity from private data center into the CSP or VPN
    costs and extra data transfer costs.
  prefs: []
  type: TYPE_NORMAL
- en: Pricing Tools
  prefs: []
  type: TYPE_NORMAL
- en: Tools like AWS Pricing Calculator, Azure Pricing Calculator, or Google Cloud
    Pricing Calculator will help us estimate these costs based on our usage patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Compliance and Security
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If compliance is a major factor, ( e.g. GDPR, HIPAA, PCI-DSS, etc) we need to
    ensure that the platform we choose has the necessary certifications and data residency
    options. AWS, Azure, and GCP all have strong security and compliance offerings,
    but the depth and regional availability of these services can vary.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, if we’re working with sensitive data in Europe, AWS and Azure
    offer specific regions with stronger GDPR alignment. Google Cloud might be more
    appealing if we’re heavily focused on AI/ML workloads with privacy requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: As discussed in [*Chapter 6*](B22364_06.xhtml#_idTextAnchor165), compliance
    and certification is a shared responsibility between the cloud service provider
    and yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Multi-Cloud and Hybrid Cloud Strategies
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If we’re planning to adopt a multi-cloud strategy, we’ll need to carefully evaluate
    interoperability. How easily can services between AWS, Azure, and GCP work together?
    We’ll need to decide whether to standardize using cloud-agnostic tools like Terraform
    for infrastructure-as-code or Kubernetes for container orchestration. This ensures
    we’re not locked into any one platform, giving us the flexibility to migrate workloads
    or scale operations between clouds.
  prefs: []
  type: TYPE_NORMAL
- en: For hybrid cloud setups, solutions like AWS Outposts, Azure Stack, and Google
    Anthos allow us to extend the cloud into our on-prem data centers, enabling us
    to manage workloads across environments seamlessly. Choosing one over the other
    depends on how we want to manage the connection between on-prem and cloud, and
    the specific workloads we’re running.
  prefs: []
  type: TYPE_NORMAL
- en: Latency and Regional Presence
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Another key factor in our decision-making process is the geographic footprint
    of the cloud provider. If low latency is critical for user experience, we’ll want
    to select a platform with a strong regional presence near our customer base. AWS
    has the most extensive global infrastructure, but Azure and GCP also offer robust
    coverage. We’ll need to analyze the available regions and availability zones for
    each provider and determine how well they align with our geographic needs.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, choosing the right cloud platform comes down to understanding both
    the technical requirements and the broader business goals. Whether we’re going
    all-in on one provider or spreading workloads across multiple cloud providers,
    each decision should be backed by an in-depth evaluation of services, costs, compliance,
    and scalability options. ￼
  prefs: []
  type: TYPE_NORMAL
- en: Setting Clear Timelines and Milestones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When planning out a cloud migration, setting realistic timelines and clear milestones
    is the backbone of keeping things on track and ensuring no steps get overlooked.
    Here’s how we can break it down, adding the technical depth needed to keep this
    process tight and predictable.
  prefs: []
  type: TYPE_NORMAL
- en: Assessment Phase (Discovery and Planning)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Before we move a single workload, we need to allocate enough time for a deep
    assessment of our current environment. This means running discovery tools like
    AWS Migration Evaluator, Azure Migrate, or Google Cloud Migrate to map out all
    our dependencies, app connectivity, and performance metrics. These tools give
    us the full picture of what we’re dealing with, no surprises later.
  prefs: []
  type: TYPE_NORMAL
- en: If we review our table from the section “Assessing Your Current Environment”
    we see that this sets our clear requirements to ensure we can start to plan out
    our Instance Types or requirements.
  prefs: []
  type: TYPE_NORMAL
- en: '| **HostName** | **CPU Cores** | **OS** | **OS.Version** | **RAM Total** |'
  prefs: []
  type: TYPE_TB
- en: '| app-server01.local | 4 | Windows Server 2019 | 1809 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| linux-db01.local | 4 | Ubuntu 20.04 | Focal Fossa | 16384 |'
  prefs: []
  type: TYPE_TB
- en: '| mssql-db01.local | 8 | Windows Server 2016 | 1607 | 32768 |'
  prefs: []
  type: TYPE_TB
- en: '| app-server02.local | 2 | Windows Server 2019 | 1809 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| backup-server.local | 4 | Windows Server 2012 R2 | 9600 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| web-server01.local | 2 | RHEL 8 | Ootpa | 4096 |'
  prefs: []
  type: TYPE_TB
- en: '| dev-server.local | 4 | Windows 10 Pro | 21H1 | 16384 |'
  prefs: []
  type: TYPE_TB
- en: '| linux-app01.local | 2 | CentOS 7 | Core | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| storage-server.local | 16 | Windows Server 2019 | 1809 | 65536 |'
  prefs: []
  type: TYPE_TB
- en: '| dns-server.local | 1 | Ubuntu 18.04 | Bionic Beaver | 2048 |'
  prefs: []
  type: TYPE_TB
- en: '| mail-server.local | 4 | Windows Server 2016 | 1607 | 8192 |'
  prefs: []
  type: TYPE_TB
- en: '| log-server.local | 8 | Ubuntu 22.04 | Jammy Jellyfish | 16384 |'
  prefs: []
  type: TYPE_TB
- en: Table 12.2 - Migration Assessment Data
  prefs: []
  type: TYPE_NORMAL
- en: At this stage, technical audits are crucial. We’ll identify network configurations,
    databases, security policies, and storage setups that could be impacted by the
    migration. Setting a milestone for completing this discovery phase ensures that
    we have all the critical data in hand before making any decisions. Think of it
    like setting a two-week window to run the migration assessment and holding a review
    session with the key stakeholders when the data’s in.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Concept (PoC) / Pilot Testing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: After we finish assessing, we can’t just jump headfirst into the full migration.
    We need a **Proof of Concept** (**PoC**) or pilot test. Here, we’ll take a non-critical
    app or two and run the migration process as a trial. For instance, we might lift
    and shift a small app using AWS Application Migration Service or try refactoring
    a component using Kubernetes on Azure or GCP.
  prefs: []
  type: TYPE_NORMAL
- en: The key milestone here is completing the PoC successfully. This shows us whether
    the tools and processes we’ve chosen will work at scale. Depending on the complexity
    of the app we’re testing, we’re likely looking at a 2 – 4-week timeline. Check-ins
    are important here to track how well the migration works and resolve any issues
    before scaling it up.
  prefs: []
  type: TYPE_NORMAL
- en: Full-Scale Migration
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Once the PoC is signed off and running smoothly, we move into a full-scale migration.
    This is where things get technical fast. We’ll have checkpoints like making sure
    our IAM roles, network settings, and security groups are properly configured before
    we start moving anything. This is where tools like AWS Database Migration Service,
    Azure Database Migration, or GCP’s Data Transfer come into play to handle database
    migrations seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: At this stage, our milestones should involve migrating in batches. We’re not
    dumping everything into the cloud at once. Instead, we’ll set targets, say, migrating
    20% of our apps over 4–6 weeks, then reassess, review performance, and fine-tune
    before pushing forward.
  prefs: []
  type: TYPE_NORMAL
- en: Optimization and Fine-Tuning
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The job doesn’t end when the apps are in the cloud. This phase is about reviewing
    performance, right-sizing our resources, and implementing auto-scaling to meet
    demand efficiently. Monitoring tools like CloudWatch (AWS), Azure Monitor, or
    GCP Operations Suite are key here to track performance and identify any inefficiencies
    in our setup.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll set milestones for this stage to ensure our cloud architecture is optimized
    for both performance and cost. That means regular performance reviews and keeping
    an eye on resource utilization so we can adjust as needed. A post-migration review
    with all stakeholders lets us evaluate what worked, what didn’t, and how we can
    streamline future migrations.
  prefs: []
  type: TYPE_NORMAL
- en: Regular Stakeholder Check-Ins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Throughout the entire process, regular check-ins with stakeholders, both technical
    and non-technical, are essential. We’ll schedule weekly or bi-weekly updates to
    ensure everything aligns with the broader business goals, and technical teams
    are hitting their key milestones. Detailed migration runbooks, architecture diagrams,
    and regular progress updates keep everyone on the same page and allow us to make
    adjustments if needed.
  prefs: []
  type: TYPE_NORMAL
- en: By setting clear milestones for each phase, assessment, PoC, migration, and
    optimization, we stay organized, prevent issues before they become bigger problems,
    and make sure the whole process moves according to plan. Regular check-ins with
    stakeholders mean no one’s left in the dark, and we can adjust timelines or processes
    to ensure a smooth migration from start to finish.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud migration without strategy is asking for trouble. A solid, thought-out
    plan ensures you don’t just throw everything into the cloud and hope for the best.
    Prioritize your applications, use frameworks like the AWS 7 Rs, and pick the right
    cloud model to set yourself up for success. With a clear plan, you’ll avoid unnecessary
    delays, inefficiencies, and the costly mistakes that come with diving-in unprepared.
  prefs: []
  type: TYPE_NORMAL
- en: Another part of the strategy is ensuring stakeholders across the business are
    all informed as to the migration activities. We cover this in more detail in the
    next section
  prefs: []
  type: TYPE_NORMAL
- en: Minimum Stakeholder Commitment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When it comes to cloud adoption, there’s a common misconception that it’s a
    purely technical exercise, something the IT team can handle on their own. The
    reality, though, is far from that. Cloud migration isn’t just another tech project,
    it’s a fundamental shift in how the business operates. And for it to be successful,
    it requires full engagement from stakeholders at every level, from C-suite executives
    to department heads and technical leads.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B22364_05.xhtml#_idTextAnchor136)covers the shift in culture
    in more detail.'
  prefs: []
  type: TYPE_NORMAL
- en: But what we often see is minimum stakeholder commitment, a hands-off approach
    where decision-makers are only engaged when problems arise. They might be present
    at the start, offering high-level support, but then fade into the background,
    assuming the technical team will handle everything. This disconnect leads to delays,
    misaligned objectives, budget overruns, and in worst cases, migration failure.
    If stakeholders aren’t actively involved from the beginning, the whole project
    can lose direction, and before you know it, the migration has veered off course.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s break down why this is an anti-pattern and how stakeholders should take
    ownership of cloud adoption.
  prefs: []
  type: TYPE_NORMAL
- en: 'Understanding the Anti-Pattern: Minimum Stakeholder Commitment'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s important to understand what can go wrong as much as what can go right
    in these situation. Below we review some key call outs with minimum stakeholder
    commitment
  prefs: []
  type: TYPE_NORMAL
- en: The Problem with Passive Stakeholder Involvement
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here’s the thing, if stakeholders aren’t fully engaged, it creates all kinds
    of headaches. The IT team may be focused on operational efficiencies or cost savings,
    while the business side might be looking at scalability or customer experience.
    Without regular involvement from stakeholders, these objectives can end up clashing.
  prefs: []
  type: TYPE_NORMAL
- en: When key decision-makers aren’t involved, delays start creeping in. Decisions
    about workload prioritization, resource allocation, or changes in migration scope
    end up stalled. This is because no one is actively steering the ship.
  prefs: []
  type: TYPE_NORMAL
- en: What happens then? The project drags on, and nobody feels a sense of ownership
    when challenges arise. This lack of responsibility causes a vicious cycle of slow
    responses and poor accountability. ￼
  prefs: []
  type: TYPE_NORMAL
- en: Reactive Instead of Proactive Approaches
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Minimal stakeholder involvement leads to a reactive approach, where decisions
    are made only when something breaks.
  prefs: []
  type: TYPE_NORMAL
- en: The result? You end up with rushed “*lift-and-shift*” migrations, where workloads
    are moved to the cloud without being optimized for it. This is a missed opportunity,
    and you end up paying more for a cloud environment that’s no better than the one
    you left behind.
  prefs: []
  type: TYPE_NORMAL
- en: Without proactive planning, migration efforts are often focused on short-term
    gains, like moving workloads to avoid hardware refresh costs or meeting a regulatory
    deadline. But this misses the bigger picture, optimization, scalability, and long-term
    cloud benefits. We lose out on the full potential of cloud native features, and
    our cloud setup ends up as inefficient and costly as the one we left behind.
  prefs: []
  type: TYPE_NORMAL
- en: These two approaches have been common practice in a lot of failed migrations,
    causing increased costs, delays and businesses reverting back to legacy technology
    due to lack of direction.
  prefs: []
  type: TYPE_NORMAL
- en: How Stakeholders Should Engage in Cloud Adoption
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For cloud migration to truly succeed, it’s not enough for stakeholders to just
    be on the sidelines. Active, ongoing involvement is key. Here’s how stakeholders
    can play a critical role in driving the success of cloud adoption from the very
    start.
  prefs: []
  type: TYPE_NORMAL
- en: Who are “Stakeholders”
  prefs: []
  type: TYPE_NORMAL
- en: In a cloud migration, stakeholders are individuals or groups with a vested interest
    in the migration’s success. These could be Executive leadership team, IT management
    and architects, application owners or developers, operations teams, finance teams
    or end users. This list is niether exhaustive or final, anyone can be a stakeholder
    if they interface with the applcation, data or infrastrcture.
  prefs: []
  type: TYPE_NORMAL
- en: Clear and Regular Communication Channels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Stakeholders need to be in the loop from the start. We’re talking about setting
    up regular meetings where both the technical and business sides come together
    to discuss progress, challenges, and upcoming decisions. By doing this, everyone
    stays aligned, and we avoid the siloed communication that slows projects down.
  prefs: []
  type: TYPE_NORMAL
- en: 'Try the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steering Committees**: Create a steering committee with representatives from
    technical and business teams. This way, decisions are made collaboratively, ensuring
    the migration aligns with both operational goals and business objectives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Check-ins**: Weekly or bi-weekly check-ins help keep the migration moving.
    These shouldn’t be just status updates but a chance to adjust strategy if needed
    and address potential roadblocks before they become bigger problems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Define Business Goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cloud adoption needs to be seen as a business transformation, not just a technical
    migration. Stakeholders should define clear, measurable business goals tied to
    the migration, whether that’s improving agility, cutting costs, or enabling faster
    product rollouts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Stakeholders need to own these business goals, ensuring that they are revisited
    regularly throughout the migration process to confirm the project is still on
    track. Some practical steps may include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Align Goals**: Make sure the cloud migration ties directly into broader business
    objectives, like improving customer experience or streamlining operations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KPIs**: Establish measurable KPIs for success, whether that’s reduced downtime,
    faster deployments, or cost savings. These metrics should guide decisions throughout
    the migration process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resource Allocation and Prioritization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Resource allocation is where stakeholders really need to roll up their sleeves.
    Delays and budget issues often arise because there isn’t enough oversight on where
    resources are going. Stakeholders need to be involved in prioritizing workloads,
    ensuring that critical applications get the attention they need. Key steps here
    may include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Budget Oversight**: Stakeholders should actively manage the migration budget,
    ensuring that financial resources are allocated appropriately, especially for
    critical workloads and cloud optimization post-migration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workload Prioritization**: Involve stakeholders in decisions about which
    workloads to migrate first. This helps the technical team focus on high-impact
    applications that will deliver immediate value to the business.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regular Review and Flexibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Cloud migration isn’t a straight line, it’s iterative. Stakeholders need to
    review progress regularly and be ready to make adjustments as needed. This isn’t
    a “set it and forget it” situation. There will be challenges, and stakeholders
    need to stay engaged to make course corrections quickly. Practical Steps that
    can help here are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quarterly Strategy Reviews**: In addition to regular check-ins, stakeholders
    should hold quarterly reviews to assess whether the migration is hitting the intended
    business outcomes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Post-Migration Optimization**: The work doesn’t stop once the migration is
    done. Stakeholders should stay involved during post-migration optimization to
    ensure the cloud setup is fine-tuned for performance and cost efficiency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With this kind of engagement, we can finally align cloud projects with real
    business goals, bringing the agility and innovation we missed in the old, hands-off
    way of doing things.
  prefs: []
  type: TYPE_NORMAL
- en: Technical Considerations for Stakeholders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When it comes to stakeholder involvement there are some considerations to be
    made at the stakeholder level.
  prefs: []
  type: TYPE_NORMAL
- en: Use Cloud Native Governance Tools
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Governance is critical in a cloud environment. Stakeholders should push for
    the use of cloud native tools to enforce policies, manage multiple accounts, and
    ensure security and compliance are always in check. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Control Tower or Azure Blueprints**: Tools that help manage accounts
    and apply governance policies across environments, ensuring we’re always compliant
    and secure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GCP Organization Policies**: This ensures centralized control over resources,
    making governance easier across multi-cloud setups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set Security and Compliance Benchmarks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Cloud migration brings new security challenges, and stakeholders need to be
    on top of this. Security features like IAM, encryption, and logging should be
    implemented from day one, and compliance benchmarks need to be part of the migration
    plan. Think about applying:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regular Compliance Audits**: Ensure the cloud environment is compliant with
    industry standards by running regular audits.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security Reviews**: Security should be baked into the migration process,
    not an afterthought. Stakeholders should ensure security reviews happen at every
    stage of the migration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No matter what approach you take, active stakeholder commitment is essential
    for success.
  prefs: []
  type: TYPE_NORMAL
- en: Minimal stakeholder involvement is a recipe for delays, budget overruns, and
    missed opportunities. For cloud migration to succeed, stakeholders must be engaged
    from start to finish, ensuring that decisions are aligned with business goals,
    resources are allocated effectively, and adjustments are made as necessary. By
    staying involved and proactive, stakeholders ensure that cloud adoption delivers
    its full value and sets the business up for long-term success.
  prefs: []
  type: TYPE_NORMAL
- en: If the stakeholders are not involved and informed, it’s very easy to slip into
    replicating on premise concepts into the cloud due to lack of directon or minimal
    rushed direction.
  prefs: []
  type: TYPE_NORMAL
- en: Replicating On-Prem Security Controls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the biggest mistakes organizations make during cloud migration is trying
    to transplant their old on-prem security controls into the cloud. It might feel
    like a safe move, after all, those controls worked fine in your old environment,
    so why reinvent the wheel?
  prefs: []
  type: TYPE_NORMAL
- en: But the reality is, that the cloud operates in a completely different way, and
    dragging those traditional controls along for the ride can cause more harm than
    good. Not only does it create security gaps, but it also adds operational overhead
    that slows your team down and eats up resources.
  prefs: []
  type: TYPE_NORMAL
- en: On-prem security models are based on static environments, hard network perimeters,
    and tools that need manual configuration. But cloud environments are dynamic,
    constantly shifting as resources spin up and down to meet demand. Security has
    to be as flexible and scalable as the cloud itself, and that’s where cloud native
    tools come in. Sticking to what’s familiar might feel like the safe bet, but it’s
    an anti-pattern that can cost you in terms of security, efficiency, and operational
    complexity.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s dive into why replicating on-prem security controls is such a bad idea
    and explore how to adapt your security strategy to leverage the full power of
    cloud native solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Understanding the Anti-Pattern: Replicating On-Prem Security Controls'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When moving to the cloud, it’s easy to fall back on what we know, using the
    same security controls we’ve relied on for years in on-prem environments. But
    the reality is that what works in a traditional setup doesn’t fit in a cloud-first
    world. Trying to replicate those old controls in the cloud usually leads to inefficiencies,
    vulnerabilities, and operational headaches. Instead of enhancing security, we
    end up with a patchwork of outdated controls that don’t fully leverage the cloud’s
    strengths.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we’ll unpack why this approach falls short and explore the
    real value of shifting to cloud native security practices.
  prefs: []
  type: TYPE_NORMAL
- en: The Problem with On-Prem Security in the Cloud
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In traditional on-prem security, the assumption was simple, once you’re inside
    the network, you’re trusted. Everything behind the perimeter was considered safe.
    But in the cloud, that model doesn’t hold up. With workloads spread across regions
    and resources scaling up and down on demand, the old way of thinking quickly falls
    apart. This is where **Zero Trust** steps in.
  prefs: []
  type: TYPE_NORMAL
- en: In a cloud environment, we can’t trust users, devices, or applications simply
    because of their network location. Zero Trust flips that assumption on its head,
    requiring verification every time, whether it’s users, devices, or workloads.
    Everything has to prove it’s secure before it gets access. This shift to a Zero
    Trust model is essential for embracing true cloud native security.
  prefs: []
  type: TYPE_NORMAL
- en: 'Key Pillars of Zero Trust include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identity verification**: Always confirm who or what is requesting access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Least privilege access**: Limit access to only what’s absolutely necessary
    for each user or service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous monitoring**: Track activity in real time to detect threats and
    mitigate risks as they arise.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Micro-segmentation**: Break down your network into smaller segments to isolate
    resources and limit the attack surface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Device security**: Ensure that all devices meet strict security standards
    before granting access. ￼'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By adopting these core principles, we move away from the outdated idea that
    anything inside the network perimeter is automatically safe. Zero Trust ensures
    that every component within your cloud environment is continuously verified, offering
    stronger protection against internal threats, misconfigurations, and breaches
    that might otherwise slip through in a traditional on-prem setup. It’s the mindset
    shift we need to stay secure in an increasingly complex cloud landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Trying to apply traditional security controls in the cloud often means missing
    out on the flexibility and scalability that the cloud offers. Legacy tools can’t
    keep up with the pace of change in cloud environments and often require manual
    adjustments that slow operations down. Worse, they can leave your cloud infrastructure
    exposed if they don’t integrate well with cloud native services.
  prefs: []
  type: TYPE_NORMAL
- en: For example, while on-prem environments rely heavily on firewalls to block unauthorized
    traffic, cloud environments demand more granular security controls. This is where
    Identity and Access Management (IAM) comes in. In the cloud, it’s not just about
    keeping bad traffic out; it’s about ensuring that only the right users, services,
    and applications have access to the resources they need—nothing more, nothing
    less. Relying solely on traditional network-based security tools can leave dangerous
    gaps in access management.
  prefs: []
  type: TYPE_NORMAL
- en: The Shared Responsibility Model, often overlooked and misunderstood
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the most important things to understand when moving to the cloud is the
    shared responsibility model. In a traditional on-prem environment, you control
    everything, from the physical hardware to the applications running on it. But
    in the cloud, the security responsibilities are split between you and your cloud
    provider. The provider takes care of the infrastructure, like the physical security
    of data centers and the network between them, but you’re responsible for securing
    what you build on top, your applications, data, and identity management.
  prefs: []
  type: TYPE_NORMAL
- en: Failing to grasp this distinction often leads to weak security configurations.
    For instance, thinking that your cloud provider will handle encryption or access
    controls for you can result in data breaches or unauthorized access. On-prem security
    models don’t account for this shared responsibility, and organizations that try
    to copy them directly into the cloud often end up with serious gaps in their security
    posture.
  prefs: []
  type: TYPE_NORMAL
- en: How to Shift from On-Prem to Cloud Native Security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Replicating on-prem security in the cloud just doesn’t cut it. To get the most
    out of cloud infrastructure, we need to shift gears and adopt cloud native approaches.
    In this section, we’ll break down exactly how we can move away from those outdated
    security models and start taking full advantage of cloud-native tools and practices.
  prefs: []
  type: TYPE_NORMAL
- en: Consider the below tips when reviewing your implemention of Cloud Native Security
  prefs: []
  type: TYPE_NORMAL
- en: '**Embrace Identity-Based Security Models**: In the cloud, security revolves
    around identity, whether it’s a user, an application, or a service. **IAM** (**Identity
    and Access Management**) is your first line of defense. By assigning specific
    roles and permissions to every user and resource, you can control who has access
    to what, and under what conditions. Practical steps that you could consider here
    are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adopt the Principle of Least Privilege**: Make sure that users and services
    only have the permissions they absolutely need. In AWS, this means defining fine-grained
    IAM policies. In Azure and GCP, similar identity-based controls allow you to manage
    access at a granular level.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implement Multi-Factor Authentication (MFA)**: MFA should be mandatory for
    all access to sensitive resources. This extra layer of security ensures that even
    if credentials are compromised, attackers can’t gain access without the secondary
    factor.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regular Audits**: Keep an eye on permissions. Cloud environments change rapidly,
    and roles that made sense last month may be too permissive today. Regular audits
    help you stay on top of who has access to what.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: For more information on this review [*Chapter 6*](B22364_06.xhtml#_idTextAnchor165)
    and the usage of temporary credentials
  prefs: []
  type: TYPE_NORMAL
- en: '**Use Cloud Native Security Tools**: Rather than forcing on-prem security tools
    to work in the cloud, take advantage of the cloud native tools that are built
    for this environment. Every major cloud provider offers a suite of security services
    that are designed to monitor, protect, and scale your infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following tools can help you implement a good foundation of cloud native
    security.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**AWS Shield & AWS WAF**: Protect your applications from DDoS attacks and other
    malicious traffic using AWS Shield and **AWS Web Application Firewall (WAF)**.
    Azure and GCP offer similar services, like Azure DDoS Protection and GCP Cloud
    Armor.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Centralized Security Dashboards**: Use centralized platforms like Azure Security
    Center or Google Cloud Security Command Center to gain a full view of your security
    posture and quickly identify any vulnerabilities or misconfigurations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated Threat Detection**: Tools like AWS GuardDuty, Azure Advanced Threat
    Protection, and Google Cloud Security Scanner continuously monitor for suspicious
    activity and can alert you to potential threats before they escalate.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automate Security Management and Monitoring**: Cloud environments are constantly
    evolving, which makes manual security management impractical. Fortunately, the
    cloud gives us the following tools to automate many aspects of security monitoring
    and incident response, reducing operational overhead and ensuring a faster response
    to potential threats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CloudTrail/CloudWatch**: In AWS, use CloudTrail and CloudWatch to log and
    monitor all activity in your cloud environment. Similarly, Azure Monitor and GCP’s
    Operations Suite provide real-time cloud native insights and alerts.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automate Responses to Threats**: Configure automatic workflows for threat
    responses. For example, if AWS GuardDuty flags suspicious activity, you can automatically
    revoke credentials or trigger a security group change to block unauthorized access.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security Audits and Compliance**: Schedule regular, automated security audits
    with tools like AWS Config, Azure Policy, and GCP Policy Intelligence. This ensures
    that your environment stays compliant with security policies and industry regulations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Minimize Operational Overhead with Cloud Native Solutions**: Sticking to
    on-prem security tools not only limits your security capabilities but also introduces
    significant operational overhead. Manually configuring firewalls, managing static
    IPs, or constantly adjusting VPN settings in a cloud environment is time-consuming
    and prone to error. Cloud native solutions reduce the need for manual intervention,
    automating much of the security management process. Keep the below in mind as
    you plan your migration:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Manual Configurations**: Replace manual firewall and VPN setups with
    dynamic, identity-based access controls. This reduces the need for constant updates
    and monitoring.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Centralized Governance**: Use cloud native governance tools like AWS Control
    Tower, Azure Blueprints, or Google Cloud Organization Policies to manage policies
    across multiple accounts, enforce best practices, and automate compliance.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automate Incident Response**: With cloud native automation tools, you can
    eliminate much of the manual work involved in responding to security incidents.
    Automatically revoke compromised credentials, adjust firewall rules, or launch
    backup instances as needed—without the need for human intervention.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In summary, you need to embrace Cloud Native security to eliminate legacy overhead.
    Replicating on-prem security controls in the cloud is not just inefficient, it’s
    risky. Legacy tools and manual processes can’t keep up with the fast-paced, dynamic
    nature of cloud environments, leading to security gaps and operational inefficiencies.
  prefs: []
  type: TYPE_NORMAL
- en: By embracing cloud native security models, automating key processes, and leveraging
    the full suite of tools offered by AWS, Azure, or GCP, you can build a security
    posture that’s stronger, more scalable, and more efficient than ever before.
  prefs: []
  type: TYPE_NORMAL
- en: 'The bottom line is this: cloud security is not just a copy-paste job. It requires
    a fundamental shift in thinking. With the right approach, stakeholders and technical
    teams can transition smoothly from outdated, labor-intensive security models to
    a cloud native environment that maximizes both security and operational efficiency.'
  prefs: []
  type: TYPE_NORMAL
- en: In our last section of this chapter we’ll review how important education and
    knowledge transfer is to a succesful migration.
  prefs: []
  type: TYPE_NORMAL
- en: Underestimating Skill Gaps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When moving to the cloud, one of the most critical and often overlooked factors
    is the skill gap within teams. Many organizations jump into cloud adoption with
    the belief that their existing technical teams will seamlessly adapt to the new
    environment. But cloud infrastructure operates on different principles compared
    to traditional IT, and assuming the same skill set will carry over is a recipe
    for delays, inefficiencies, and sometimes failure. Underestimating the skill gap
    can lead to issues like misconfigurations, missed opportunities to optimize, or,
    worst of all, security vulnerabilities that go unnoticed until it’s too late.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud migration isn’t just a technical shift, it’s a mindset shift. Without
    proper training, support, and a realistic understanding of the skill sets needed,
    organizations often find themselves struggling to take full advantage of cloud
    capabilities. Let’s dig deeper into this anti-pattern and explore practical strategies
    to close the skill gap effectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Understanding the Anti-Pattern: Underestimating Skill Gaps'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When it comes to cloud adoption, many businesses assume that if someone is proficient
    in traditional IT or data center management, they’ll naturally be able to handle
    cloud operations too. However different CSPs operate on completely different paradigms.
  prefs: []
  type: TYPE_NORMAL
- en: Terms like infrastructure as code, serverless, and container orchestration aren’t
    just buzzwords; they require a deep understanding of new tools and approaches.
    Without the right skills, cloud migrations can quickly get off track. Let’s break
    down this section a little more by focussing on tradition skills vs cloud skills
    and then the impact on cloud adoption.
  prefs: []
  type: TYPE_NORMAL
- en: Traditional Skillsets vs. Cloud Skillsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In traditional on-prem environments, managing infrastructure meant physically
    deploying hardware, installing software, and managing everything manually. Cloud
    environments, on the other hand, require mastery over automation, dynamic scaling,
    and a deep understanding of cloud native services. Concepts like elasticity, auto-scaling,
    and security models are often new to many technical teams, and without focused
    training, gaps quickly emerge.
  prefs: []
  type: TYPE_NORMAL
- en: Impact on Cloud Adoption
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Failing to address skill gaps doesn’t just result in slower migration timelines;
    it can have a direct impact on the success of cloud adoption. Teams lacking the
    necessary skills might replicate old on-prem processes that aren’t optimized for
    the cloud, leading to inefficient workflows and misconfigurations. Even worse,
    poor security practices can open vulnerabilities that compromise the integrity
    of the entire cloud environment.
  prefs: []
  type: TYPE_NORMAL
- en: How to Close the Skill Gap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Acknowledging that there’s a skill gap is the first step, but that’s not enough.
    You need a solid plan to close it. Here is how we do it.
  prefs: []
  type: TYPE_NORMAL
- en: Invest in Cloud Training and Certifications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The quickest way to close the skill gap is through structured training and certifications.
    Each major cloud provider offers a range of certifications that are designed to
    equip teams with the knowledge needed to handle cloud architecture, operations,
    and security. AWS, Azure, and GCP all have learning paths tailored to different
    roles, from architects to developers to DevOps engineers.
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify Key Training Areas**: Don’t just send your teams to generic cloud
    training. Identify the specific areas where your team needs upskilling. Is it
    around automation? Security? Container management? Focus on what will give your
    organization the most value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encourage Certification**: Push for formal cloud certifications. AWS Certified
    Solutions Architect, Azure Administrator, and Google Cloud Engineer certifications
    provide teams with both foundational and advanced knowledge. Not only do they
    validate skills, but they also keep your teams on top of cloud best practices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous Learning**: Cloud platforms evolve quickly. Make learning an ongoing
    process, encouraging teams to regularly engage with webinars, hands-on labs, and
    new certification exams.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Foster a Culture of Cross-Functional Collaboration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Underestimating skill gaps often come from isolating technical teams into silos.
    Cloud operations thrive when teams—developers, operations, and security—work together
    toward a common goal. Creating a culture of cross-functional collaboration not
    only closes skill gaps but also ensures smoother cloud operations overall. Consider
    the following.
  prefs: []
  type: TYPE_NORMAL
- en: '**Cross-Training**: Encourage cross-functional training where developers learn
    about infrastructure, and operations learn more about code and automation. This
    helps create a DevOps or even DevSecOps mindset within the team.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaborative Projects**: Run projects where cross-functional teams come
    together to solve real-world problems. For example, building a cloud-based application
    from scratch could involve development, security, and operations all working in
    unison. This fosters teamwork while upskilling in real time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mentorship Programs**: Pair senior engineers familiar with cloud environments
    with those who are still getting up to speed. Mentorship accelerates learning
    while promoting collaboration across departments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Balancing Technical and Soft Skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s not just about the technical know-how. Teams also need the ability to communicate,
    collaborate, and problem-solve in a cloud environment. Cloud adoption is a company-wide
    initiative, not just a technical project, and it requires business and technical
    teams to work closely together. Bridging skill gaps often involves fostering better
    communication between these groups. The following guidance is essential to ensuring
    balancing technical and soft skills
  prefs: []
  type: TYPE_NORMAL
- en: Develop Cloud Fluency Across the Organization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Cloud adoption affects everyone in the organization, not just the IT department.
    To make the most out of cloud migration, stakeholders across the business need
    to have a basic understanding of cloud principles. Whether it’s finance tracking
    cloud costs, security managing compliance, or legal navigating cloud contracts,
    cloud fluency across all departments is key. Keep the following in mind:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stakeholder Workshops**: Set up cloud fundamentals workshops for non-technical
    teams. Help them understand how cloud affects their roles and why cloud is critical
    for the business.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud-Specific KPIs**: Define cloud-specific key performance indicators (KPIs)
    for different departments. This helps ensure that all business units understand
    the impact and benefits of cloud adoption and keeps everyone aligned on the goals
    of the migration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Establish Clear Ownership and Responsibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the biggest contributors to skill gaps is the lack of clear ownership
    in cloud projects. When roles and responsibilities are vague, people fall back
    on what they know, which can result in technical debt and operational inefficiencies.
    Establish clear ownership of cloud initiatives to ensure accountability and expertise
    grow where needed. In order to achieve clear ownership;
  prefs: []
  type: TYPE_NORMAL
- en: '**Define Roles**: Clearly define who is responsible for what during cloud migration.
    Whether it’s the infrastructure, security, or deployment, assign clear ownership
    so nothing falls through the cracks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create Cloud Champions**: Appoint cloud champions within the organization—people
    who will own specific areas of cloud expertise and drive best practices across
    teams.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Closing the Knowledge Gap is Key to Cloud Success
  prefs: []
  type: TYPE_NORMAL
- en: Underestimating skill gaps in cloud adoption is a common anti-pattern, but it’s
    also one of the most fixable. By investing in targeted cloud training, fostering
    a collaborative culture, and building cloud fluency across the organization, you
    can bridge these gaps and ensure a smooth migration. Cloud adoption is more than
    just technology, it’s about building a team with the skills and mindset to succeed
    in a rapidly evolving environment.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud migration is far more than just moving workloads, it is a complete transformation
    that requires careful planning, strong stakeholder engagement, and a shift to
    modern, cloud native practices. In this chapter, we tackled some of the most common
    anti-patterns that can hinder progress, from inadequate planning and weak stakeholder
    involvement to outdated security practices carried over from on-prem environments.
  prefs: []
  type: TYPE_NORMAL
- en: Using frameworks like AWS’s 7 Rs or equivalent options from Azure and GCP, we
    can make smarter decisions about each workload, ensuring that every step aligns
    with both technical and business objectives. By prioritizing applications strategically
    and choosing the right cloud model—whether single cloud, multi-cloud, or hybrid—we
    can reduce risks and create a migration roadmap that delivers real value. Addressing
    skill gaps is also critical, as it equips teams to embrace the tools and methodologies
    needed to succeed in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: This isn’t just about migrating systems; it’s about laying the groundwork for
    agility, scalability, and innovation. With a clear strategy, collaborative teamwork,
    and modernized approaches, we’re well-positioned to not just move to the cloud,
    but thrive there.
  prefs: []
  type: TYPE_NORMAL
