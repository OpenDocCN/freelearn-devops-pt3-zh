- en: '*Chapter 22*: Organizing Your Teams'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you’ll learn about the best practices for structuring your
    repositories and teams into organizations and enterprises to foster collaboration
    and facilitate administration.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: GitHub scopes and namespaces
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structuring GitHub teams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Role-based access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom roles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outside collaborators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitHub scopes and namespaces
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The main entities in GitHub are repositories. A repository can be created for
    a user or an organization. The URL of the repository will be in the following
    format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For GitHub Enterprise Server, you must replace `https://github.com` with the
    URL of your server. A user and organization name on a platform must be unique
    since they provide a namespace. The name of a repository must be unique in that
    namespace.
  prefs: []
  type: TYPE_NORMAL
- en: GitHub enterprises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In GitHub, an enterprise is a container for multiple organizations. Enterprises
    are not namespaces – the organization names must still be unique. Enterprises
    have a URL slug that is used to refer to the enterprise. The URL to your enterprise
    will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If you own an organization that is paid by invoice, then you can upgrade to
    an enterprise under **Settings** | **Billing and plans**. Otherwise, you must
    contact GitHub sales.
  prefs: []
  type: TYPE_NORMAL
- en: 'A GitHub enterprise has three roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Owner**: Has full administrative rights to the enterprise but not to organizations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Members**: Members or outside collaborators with access to at least one organization'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Billing Managers**: Can only view and manage billing information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are some settings you can configure at the enterprise level for all organizations,
    such as **SAML authentication**, **SSH Certificate Authorities**, or an **IP allow
    list**. There are also some enterprise-level webhooks and you can access the audit
    log for the entire enterprise. Audit log streaming to cloud storage, Splunk, or
    Azure Event Hubs is only available at the enterprise level, but most of the settings
    are around **billing** and **licensing**.
  prefs: []
  type: TYPE_NORMAL
- en: You can also set policies for many of the settings that can be configured at
    the organization level. If a policy has been set, the owner of the organization
    cannot change the settings. If a policy hasn’t been defined, the setting can be
    configured by the owners of the organizations.
  prefs: []
  type: TYPE_NORMAL
- en: GitHub organizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The main way to manage your repositories and teams is by using organizations.
    They can also exist without an enterprise, and you can move them between different
    enterprises. Organizations are not meant to be given out as a self-service for
    your teams to organize themselves. Some companies have more than 2,000 organizations
    – and this is a big problem, especially for managing integrations. GitHub Apps,
    for example, can only be configured at the organization level – not at the enterprise
    level. If you want to configure integration with your Jira instance, then you
    must do this for all organizations. You cannot configure this at the enterprise
    level.
  prefs: []
  type: TYPE_NORMAL
- en: One organization should be enough for most customers. If your company has different
    legal entities that must be separate, then this might be a reason to have multiple
    organizations. Another reason would be if you want to separate open and inner
    source. However, you should not have one organization for all departments or divisions.
    It is better to use teams for that.
  prefs: []
  type: TYPE_NORMAL
- en: 'An organization has the following roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Owner**: Has full access to teams, settings, and repositories'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Members**: Can see members and non-secret teams, as well as create repositories'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outside Collaborators**: These are not members of the organization but they
    have access to one or more repositories'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizations have projects, packages, teams, and repositories. You can configure
    many settings for repositories. If you don’t configure these settings at the organization
    level, these settings can be set at the repository level.
  prefs: []
  type: TYPE_NORMAL
- en: The main way to structure your organization is by using teams. We’ll look at
    these in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Structuring GitHub teams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Teams are not just the more convenient way to grant permissions to repositories
    that allow faster on- and off-boarding. They can also be used to share knowledge
    and notify certain groups of changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Teams have discussions, and you can see their repositories and projects. Teams
    can have one of the following two visibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visible**: A visible team can be seen and mentioned by every member of this
    organization'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secret**: A secret team can only be seen by its members and may not be nested'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A team exists in the namespace of an organization. This means that the name
    of the team must be unique inside the organization. You can mention a team or
    add it as a code owner using the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: You can use teams to reflect your company or group’s structure with cascading
    access permissions and mentions by nesting them. You can do this by specifying
    a parent team when creating a new team. This makes the new team a child team.
    Child teams can also be parent teams – this way, you can create a deep hierarchy.
    Teams inherit permissions and notifications from their parent teams, but not the
    other way around.
  prefs: []
  type: TYPE_NORMAL
- en: 'By nesting teams, you can create the structure of your company. You could create
    a team for all employees, each division, each department, and each product team
    (**vertical teams**). You can also use teams for **horizontal teams** – interest
    groups such as communities of practices (see *Figure 22.1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 22.1 – Structuring your organizations using teams'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_22_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 22.1 – Structuring your organizations using teams
  prefs: []
  type: TYPE_NORMAL
- en: This allows you to share knowledge and ownership across your value stream teams.
    You can also nest horizontal teams if this fits your community structure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nested teams can be expanded in the **Teams** tab of an organization (see *Figure
    22.2*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 22.2 – Nested teams in the Teams tab of an organization'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_22_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 22.2 – Nested teams in the Teams tab of an organization
  prefs: []
  type: TYPE_NORMAL
- en: 'Teams have pages for discussions. Organization members can create and participate
    in discussions with the team, but the team can also have private discussions that
    are not visible to the rest of the organization (see *Figure 22.3*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 22.3 – Team pages with discussion'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_22_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 22.3 – Team pages with discussion
  prefs: []
  type: TYPE_NORMAL
- en: Teams can be mentioned and assigned as reviewers and code owners. It is a very
    powerful tool for structuring your organization simplistically. But try to keep
    it simple and use names that people can easily understand. You don’t want to build
    a bureaucratic monster! Keep it simple.
  prefs: []
  type: TYPE_NORMAL
- en: Role-based access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the repository level, you can grant role-based access to teams or individual
    people. You can use one of the following default roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Read**: Read and clone repositories. Open and comment on issues and pull
    requests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Triage**: Read permissions, plus manage issues and pull requests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Write**: Triage permissions, plus read, clone, and push to repositories.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maintain**: Write permissions, plus manage issues, pull requests, and configure
    some repository settings.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Admin**: Full access to repositories, including sensitive and destructive
    actions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the **read** role can do more than just read! It can open and comment
    on issues and pull requests. **Triage** and **maintain** are typical roles in
    open source projects. They are not so commonly used in enterprise scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: You can set a base permission for an organization to read, write, or admin.
    This will grant all members the corresponding permission to all repositories.
    Outside collaborators do not inherit the base permission (see [https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/setting-base-permissions-for-an-organization](https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/setting-base-permissions-for-an-organization)
    for more information).
  prefs: []
  type: TYPE_NORMAL
- en: Custom roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can define custom roles in the organization settings under **Repository
    roles** (/settings/roles). Click **Create a role** and specify a name and description
    for the new role. Then, select a default role to inherit the permissions from
    and add permissions to it (see *Figure 22.4*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 22.4 – Creating custom roles in GitHub'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_22_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 22.4 – Creating custom roles in GitHub
  prefs: []
  type: TYPE_NORMAL
- en: The permissions are categorized. So, if you type `security` in the search box,
    the list will show you all the available permission related to security.
  prefs: []
  type: TYPE_NORMAL
- en: 'Permissions are available in the following categories:'
  prefs: []
  type: TYPE_NORMAL
- en: Discussions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Issue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pull request
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that not everything is configurable. For example, there are no specific
    permissions for GitHub Packages at the time of writing.
  prefs: []
  type: TYPE_NORMAL
- en: If a person is given different levels of access, the higher permissions always
    override the lower ones. If a person has been given multiple roles, a warning
    will appear on GitHub next to the person with **Mixed roles**.
  prefs: []
  type: TYPE_NORMAL
- en: 'And again: try not to go too crazy with custom roles. Keep it as simple as
    possible.'
  prefs: []
  type: TYPE_NORMAL
- en: Outside collaborators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An **outside collaborator** is a person who is not a member of your organization
    but has access to one or more of your organization’s repositories.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Adding an outside collaborator to a private repository will consume one of your
    paid licenses!
  prefs: []
  type: TYPE_NORMAL
- en: Outside collaborators are not **members** of your organization. They don’t see
    internal repositories and they do not inherit base permissions.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can’t invite outside collaborators at the organization level – you can
    only invite members to your organization and then convert them into outside collaborators,
    (see *Figure 22.5*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 22.5 – Converting members into outside collaborators'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17827_22_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 22.5 – Converting members into outside collaborators
  prefs: []
  type: TYPE_NORMAL
- en: As a repository administrator, if you **Add people** under **Settings** | **Collaborators
    and teams**, if they already belong to the organization, they will be automatically
    added as members. If not, they will be added as outside collaborators.
  prefs: []
  type: TYPE_NORMAL
- en: Outside collaborators are a great way to easily collaborate with partners and
    customers without requiring them to be part of your organization. But keep in
    mind that this does not work if you use **Enterprise Managed Users**. And if you
    have **SAML Single Sign On** enabled, outside collaborators will bypass that.
    That’s why organization owners can prevent repository administrators from inviting
    outside collaborators to repositories in the settings of the organization.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned about the best practices for structuring organizations,
    repositories, and teams in your enterprise. We talked about nesting teams, using
    teams for interest groups, role-based access, and outside collaborators.
  prefs: []
  type: TYPE_NORMAL
- en: In the last chapter, we’ll put all the pieces of this book together and guide
    you through the process of using GitHub to transform your enterprise and use it
    to accelerate DevOps in your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please refer to the following links and further GitHub documentation to learn
    more about the topics that were covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*About teams*: [https://docs.github.com/en/organizations/organizing-members-into-teams/about-teams](https://docs.github.com/en/organizations/organizing-members-into-teams/about-teams)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Base permissions*: [https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/setting-base-permissions-for-an-organization](https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/setting-base-permissions-for-an-organization)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Custom roles*: [https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization](mailto:https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Outside collaborators*: [https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization](https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Managing access to your repository*: [https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository#inviting-a-team-or-person](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository#inviting-a-team-or-person)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
