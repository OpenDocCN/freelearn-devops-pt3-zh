- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Achieving Continuous Integration and Delivery with Mobile DevOps
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过移动 DevOps 实现持续集成与交付
- en: In continuous delivery, code changes in mobile apps are automatically built,
    tested, and released. With Mobile DevOps, software developers, testers, release
    managers, and DevOps engineers work together to improve mobile app development
    speed and quality. Mobile app delivery can be continuously delivered when these
    practices are combined.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在持续交付中，移动应用中的代码更改会自动进行构建、测试和发布。借助移动 DevOps，软件开发人员、测试人员、发布经理和 DevOps 工程师携手合作，以提升移动应用开发的速度和质量。当这些实践结合时，移动应用的交付可以实现持续交付。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论以下主题：
- en: Factors to consider when selecting a CI/CD provider
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择 CI/CD 提供商时需要考虑的因素
- en: Choosing a CI/CD provider
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择 CI/CD 提供商
- en: Implementing a CI/CD pipeline for mobile apps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动应用实施 CI/CD 流水线
- en: Setting up the build and unit tests for mobile apps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动应用设置构建和单元测试
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: CI/CD for mobile apps is a process that enables the organization to quickly
    and efficiently release and update their mobile applications. It also allows teams
    to quickly test and release their mobile applications, ensuring the code is stable,
    secure, and up to date. Furthermore, it allows teams to quickly address any bugs
    or issues found in their mobile applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的 CI/CD 是一个能够让组织快速高效地发布和更新其移动应用的过程。它还允许团队快速测试和发布他们的移动应用，确保代码的稳定性、安全性和最新性。此外，它还允许团队快速解决在移动应用中发现的任何漏洞或问题。
- en: In the rapidly evolving world of mobile app development, **Continuous Integration**
    (**CI**) and **Continuous Deployment** (**CD**) have emerged as vital practices
    to streamline the development process, improve code quality, and enable rapid,
    iterative releases. This chapter will explore the significance of CI/CD in mobile
    app development, illustrating its benefits and providing real-world examples to
    demonstrate its impact on the mobile development life cycle.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在快速发展的移动应用开发领域，**持续集成**（**CI**）和**持续部署**（**CD**）已成为优化开发流程、提高代码质量和实现快速迭代发布的关键实践。本章将探讨
    CI/CD 在移动应用开发中的重要性，阐明其好处，并通过实际案例展示它对移动开发生命周期的影响。
- en: 'As mentioned in [*Chapter 3*](B18113_03.xhtml#_idTextAnchor083), *Mobile DevOps
    Fundamentals*, we will discuss the steps to implement CI and CD in Mobile DevOps,
    but first, let’s discuss how to choose a CI/CD provider for your mobile app that
    is also suited to your team’s scale and business:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如在[*第 3 章*](B18113_03.xhtml#_idTextAnchor083)《移动 DevOps 基础》中提到的，我们将讨论如何在移动 DevOps
    中实施 CI 和 CD 的步骤，但首先，让我们讨论如何选择适合您团队规模和业务需求的移动应用 CI/CD 提供商：
- en: '![Figure 4.1 – The continuous integration workflow](img/Figure_4.01_B18113.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1 – 持续集成工作流程](img/Figure_4.01_B18113.jpg)'
- en: Figure 4.1 – The continuous integration workflow
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – 持续集成工作流程
- en: 'We will begin with the CI part for automating the build and test processes,
    which includes doing the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 CI 部分开始，自动化构建和测试过程，内容包括以下内容：
- en: Choosing a CI/CD provider for mobile apps
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动应用选择 CI/CD 提供商
- en: Setting up a CI server for mobile apps
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动应用设置 CI 服务器
- en: Setting up the build and unit tests for mobile apps
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动应用设置构建和单元测试
- en: Before that, let’s discuss how to choose CI/CD for Mobile apps, how to set up
    the CI server with the most popular CI/CD providers in the market, and the pros
    and cons of each.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，让我们讨论如何为移动应用选择 CI/CD，如何与市场上最受欢迎的 CI/CD 提供商一起设置 CI 服务器，以及每个提供商的优缺点。
- en: 'Choosing the right CI/CD provider for your mobile app is extremely important
    to ensure a seamless development, testing, and release process. The following
    are some factors to consider when choosing a CI/CD provider for a mobile app development
    project:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 选择适合您移动应用的 CI/CD 提供商至关重要，以确保开发、测试和发布过程的顺利进行。选择移动应用开发项目的 CI/CD 提供商时需要考虑以下因素：
- en: '**Platform support**: Make sure the CI/CD provider supports the platforms your
    app targets (for example, iOS, Android, React Native, Flutter, and so on). Certain
    providers specialize in one platform, such as Xcode Cloud, while others support
    multiple platforms, such as Bitrise. Consider this factor if your team is building
    multiple mobile apps.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台支持**：确保 CI/CD 提供商支持您的应用所针对的平台（例如，iOS、Android、React Native、Flutter 等）。某些提供商专注于单一平台，例如
    Xcode Cloud，而其他一些提供商支持多个平台，例如 Bitrise。如果您的团队正在构建多个移动应用，请考虑这个因素。'
- en: '**Performance and reliability**: A provider should be able to deliver high
    performance, minimal downtime, and quick build times. For example, CI/CD platforms
    provide us with insights and mentoring features to track our CI/CD performance
    and health status. This will ensure a smooth and efficient development process.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和可靠性**：提供商应能提供高性能、最小的停机时间和快速的构建时间。例如，CI/CD 平台提供了洞察和指导功能，用以跟踪我们的 CI/CD 性能和健康状态。这将确保一个顺畅且高效的开发过程。'
- en: '**Build configuration and environment**: To select the right CI/CD provider
    for your mobile apps, consider the available build configuration and build environment
    options. Look for a provider with flexible build pipelines and customizable environments
    that support your project’s needs. These features can save you time and effort
    while ensuring a streamlined build process and successful project deployment.
    For instance, most companies are building white label apps that require them to
    build the apps with different configurations so that they can reuse the same build
    pipeline with different values.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建配置和环境**：选择适合你移动应用的 CI/CD 提供商时，要考虑可用的构建配置和构建环境选项。寻找具有灵活构建流水线和可定制环境的提供商，以支持你项目的需求。这些功能能够节省时间和精力，同时确保高效的构建过程和成功的项目部署。例如，大多数公司都在构建白标应用，这些应用需要使用不同的配置进行构建，以便能够在不同的值下复用相同的构建流水线。'
- en: '**Scalability**: Scaling and growing your team requires this factor to make
    sure the CI/CD provider can handle the growing complexity, build frequency, and
    the number of developers of your app. Your provider should offer scalable infrastructure
    and resources to meet your growing needs, sometimes providing dedicated machines
    for your teams or changing the machines types and the technical specifications.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：扩展和发展你的团队需要考虑此因素，确保 CI/CD 提供商能够处理日益增长的复杂性、构建频率和应用开发人员的数量。你的提供商应提供可扩展的基础设施和资源，以满足你不断增长的需求，有时还需为你的团队提供专用机器，或者更换机器类型和技术规格。'
- en: '**Integration**: Providers should integrate seamlessly with your existing tools,
    such as version control systems, project management tools, bug tracking tools,
    cloud tools, monitoring tools, or feature flagging tools, to be able to measure
    the success of the whole Mobile DevOps process.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成**：提供商应能与现有工具无缝集成，如版本控制系统、项目管理工具、缺陷跟踪工具、云工具、监控工具或特性标记工具，以便能够衡量整个移动 DevOps
    过程的成功。'
- en: '**Security and compliance**: The provider should adhere to strict security
    standards and offer features such as encryption, access control, and audit logs.
    Ensure the provider supports your app’s compliance with specific regulations,
    especially if it’s a cloud provider and your data and customers’ data will be
    stored in the cloud, such as in e-banking apps.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性和合规性**：提供商应遵循严格的安全标准，并提供加密、访问控制和审计日志等功能。确保提供商支持你的应用符合特定的合规性要求，特别是如果它是云提供商，并且你的数据和客户的数据将存储在云中，例如在电子银行应用中。'
- en: '**Ease of use**: Choose a provider with a user-friendly interface, comprehensive
    documentation, and good support. CI/CD pipelines can be set up, maintained, and
    troubleshooted more easily if you follow these steps; Bitrise and Codemagic, for
    example, provide GUIs for building them.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易用性**：选择一个具有用户友好界面、全面文档和良好支持的提供商。如果你遵循这些步骤，CI/CD 流水线就可以更容易地设置、维护和故障排除；例如，Bitrise
    和 Codemagic 提供了构建流水线的 GUI。'
- en: '**Community and support**: You can easily resolve issues and get answers to
    your questions from a provider with an active community and strong customer support.
    You can find out whether professional services or consulting are available through
    professional forums, support channels, or community forums.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区和支持**：通过一个活跃的社区和强大的客户支持，你可以轻松解决问题并得到答复。你可以通过专业论坛、支持渠道或社区论坛了解是否提供专业服务或咨询。'
- en: '**Pricing**: In my opinion, this factor is important, and even if the CI/CD
    provider has different features when it comes to purchasing a tool, various factors
    affect this decision, so you need to compare the pricing plans of different CI/CD
    providers while taking factors such as the number of builds per month, parallel
    builds, build minutes, and storage into consideration. The best provider will
    offer the most value for your budget without compromising on features.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定价**：在我看来，这个因素非常重要，即使CI/CD提供商在购买工具时有不同的功能，各种因素也会影响这个决策，因此在考虑每月构建次数、并行构建、构建分钟数和存储等因素时，你需要比较不同CI/CD提供商的定价计划。最好的提供商会在不妥协功能的情况下，为你的预算提供最大价值。'
- en: As a result, deciding on a CI/CD provider is ultimately a decision that needs
    to be made by a team based on the business and team needs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，选择CI/CD提供商最终是一个需要团队根据业务和团队需求做出的决定。
- en: An overview of the six most popular CI/CD providers for mobile apps
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 六个最受欢迎的移动应用CI/CD提供商概述
- en: 'Having discussed the factors that need to be considered, let’s explore the
    CI/CD providers available in the mobile CI/CD market. The following are six of
    the most popular mobile CI/CD providers:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了需要考虑的因素后，我们来看看移动CI/CD市场上可用的CI/CD提供商。以下是六个最受欢迎的移动CI/CD提供商：
- en: Bitrise
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bitrise
- en: Codemagic
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Codemagic
- en: GitHub Actions
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub Actions
- en: Xcode Cloud
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xcode Cloud
- en: Visual Studio App Center
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio App Center
- en: Ionic AppFlow
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic AppFlow
- en: To find the best fit for your mobile app project, you need to evaluate each
    provider based on the aforementioned factors.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到最适合你的移动应用项目的提供商，你需要根据前述因素评估每个提供商。
- en: Bitrise
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Bitrise
- en: 'Bitrise ([https://bitrise.io/](https://bitrise.io/)) is a cloud-based CI/CD
    platform specifically designed for mobile application development. It streamlines
    the process of building, testing, and deploying iOS, Android, and cross-platform
    apps, helping developers ensure their applications are reliable and high-quality:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise ([https://bitrise.io/](https://bitrise.io/)) 是一个基于云的CI/CD平台，专门为移动应用开发设计。它简化了构建、测试和部署iOS、Android和跨平台应用的过程，帮助开发者确保他们的应用可靠且高质量：
- en: '![Figure 4.2 – Bitrise home page](img/Figure_4.02_B18113.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – Bitrise主页](img/Figure_4.02_B18113.jpg)'
- en: Figure 4.2 – Bitrise home page
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – Bitrise主页
- en: Bitrise’s mobile-first approach makes it a CI/CD solution for mobile app developers
    and offers specialized features and tools tailored to mobile development workflows.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise的移动优先策略使其成为移动应用开发者的CI/CD解决方案，并提供专门针对移动开发工作流的功能和工具。
- en: 'Bitrise provides seamless integrations with popular version control systems
    such as GitHub, GitLab, self-hosted GitLab, and Bitbucket, as shown in *Figure
    4**.3*, as well as with mobile app development tools such as fastlane, Xcode,
    and Android SDKs:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise与流行的版本控制系统（如GitHub、GitLab、自托管GitLab和Bitbucket）以及移动应用开发工具（如fastlane、Xcode和Android
    SDK）无缝集成，如*图4.3*所示：
- en: '![Figure 4.3 – Bitrise’s version control system](img/Figure_4.03_B18113.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图4.3 – Bitrise的版本控制系统](img/Figure_4.03_B18113.jpg)'
- en: Figure 4.3 – Bitrise’s version control system
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – Bitrise的版本控制系统
- en: 'Bitrise’s visual workflow editor allows developers to easily design and configure
    their CI/CD pipelines without manually editing configuration files, as shown in
    *Figure 4**.4*:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise的可视化工作流编辑器允许开发者轻松设计和配置他们的CI/CD管道，而无需手动编辑配置文件，如*图4.4*所示：
- en: '![Figure 4.4 – Bitrise’s workflow editor](img/Figure_4.04_B18113.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图4.4 – Bitrise的工作流编辑器](img/Figure_4.04_B18113.jpg)'
- en: Figure 4.4 – Bitrise’s workflow editor
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4 – Bitrise的工作流编辑器
- en: 'Bitrise offers a wide range of pre-built and community steps that can be easily
    added to workflows, simplifying the process of setting up common mobile app development
    tasks, as shown in *Figure 4**.5*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise提供了广泛的预构建和社区步骤，可以轻松添加到工作流中，简化了设置常见移动应用开发任务的过程，如*图4.5*所示：
- en: '![Figure 4.5 – Bitrise’s integration steps](img/Figure_4.05_B18113.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图4.5 – Bitrise的集成步骤](img/Figure_4.05_B18113.jpg)'
- en: Figure 4.5 – Bitrise’s integration steps
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.5 – Bitrise的集成步骤
- en: Bitrise supports iOS simulators and Android emulators, simplifying the testing
    of mobile apps on various devices and setups.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise支持iOS模拟器和Android模拟器，简化了在各种设备和环境中测试移动应用的过程。
- en: The platform offers a complimentary (hobby) plan with 90-minute build durations,
    300 monthly credits, and up to 5 simultaneous builds with macOS M1 VMs, making
    it cost-effective for small projects and individual users.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台提供免费的（爱好者）计划，包含90分钟的构建时长、每月300个积分，并支持最多5个同时构建，使用macOS M1虚拟机，使其对小型项目和个人用户具有成本效益。
- en: Upgrading to a premium plan enables more frequent or extended builds for larger
    projects or teams. However, Bitrise’s pricing can become costly for sizable teams
    or projects that need additional build capabilities or features.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 升级到高级计划可以为大型项目或团队提供更频繁或更长时间的构建。然而，Bitrise 的定价可能会对需要额外构建能力或功能的大型团队或项目来说较为昂贵。
- en: By seamlessly integrating with well-known app stores and beta testing services
    such as Google Play, Apple App Store, and TestFlight, Bitrise streamlines the
    release process.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 通过与知名应用商店和测试服务（如 Google Play、Apple App Store 和 TestFlight）的无缝集成，Bitrise 简化了发布流程。
- en: Developers can leverage Bitrise Insights to pinpoint and address bottlenecks,
    enhance build processes, and use credits more effectively.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以利用 Bitrise Insights 来识别并解决瓶颈，优化构建流程，并更有效地使用积分。
- en: Data and configuration settings can be stored securely, ensuring unauthorized
    individuals cannot access them. Using Bitrise’s team management functionality,
    developers can collaborate on projects and control access to specific workflows
    and environments.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 数据和配置设置可以安全存储，确保未经授权的人员无法访问。通过使用 Bitrise 的团队管理功能，开发人员可以在项目中协作并控制对特定工作流和环境的访问。
- en: Example
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let’s look at an example of creating a Bitrise application for Android and configuring
    it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个关于为 Android 创建 Bitrise 应用并进行配置的示例。
- en: The prerequisites
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You will require the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要以下内容：
- en: A Bitrise account ([https://app.bitrise.io/users/sign_up](https://app.bitrise.io/users/sign_up))
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Bitrise 账户 ([https://app.bitrise.io/users/sign_up](https://app.bitrise.io/users/sign_up))
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitHub 账户 ([https://github.com/join](https://github.com/join))
- en: An Android app
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Android 应用
- en: A Google Play Console account or Apple Developer ID to be able to release your
    mobile apps to the relevant app stores afterward
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Google Play Console 账户或 Apple Developer ID，以便将来可以将你的移动应用发布到相关的应用商店
- en: Let’s get started!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Getting started
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: 'Follow these steps:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤操作：
- en: 'To get started with Bitrise for Android, you need to select **Add new app**,
    as shown in *Figure 4**.6*:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始使用 Bitrise for Android，你需要选择 **添加新应用**，如 *图 4.6* 所示：
- en: '![Figure 4.6 – Add new app](img/Figure_4.06_B18113.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 添加新应用](img/Figure_4.06_B18113.jpg)'
- en: Figure 4.6 – Add new app
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 添加新应用
- en: 'Then, select the workspace type to specify whether the app will have private
    or public access, as shown in the following figure:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择工作区类型，以指定应用是否具有私人或公共访问权限，如下图所示：
- en: '![Figure 4.7 – Selecting the app’s privacy](img/Figure_4.07_B18113.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 选择应用的隐私设置](img/Figure_4.07_B18113.jpg)'
- en: Figure 4.7 – Selecting the app’s privacy
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 选择应用的隐私设置
- en: 'The next step is selecting the repository from the provider, such as GitHub,
    as shown in the following figure:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是从提供商（如 GitHub）选择仓库，如下图所示：
- en: '![Figure 4.8 – Selecting a repository](img/Figure_4.08_B18113.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – 选择仓库](img/Figure_4.08_B18113.jpg)'
- en: Figure 4.8 – Selecting a repository
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 选择仓库
- en: 'Then, choose to add an SSH key to be able to access the source code, as shown
    in the following figure:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择添加 SSH 密钥，以便能够访问源代码，如下图所示：
- en: '![Figure 4.9 – Adding an SSH key](img/Figure_4.09_B18113.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 添加 SSH 密钥](img/Figure_4.09_B18113.jpg)'
- en: Figure 4.9 – Adding an SSH key
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 添加 SSH 密钥
- en: 'Select the branch name from the list and choose the **Yes, auto-detect configuration**
    option to let Bitrise automatically detect the application type, as shown in the
    following figure:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择分支名称，并选择 **是，自动检测配置** 选项，让 Bitrise 自动检测应用程序类型，如下图所示：
- en: '![Figure 4.10 – Choosing a branch](img/Figure_4.10_B18113.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 选择分支](img/Figure_4.10_B18113.jpg)'
- en: Figure 4.10 – Choosing a branch
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 选择分支
- en: 'Bitrise will detect that the app is an Android one and will give you the appropriate
    machine type and stack. Now, you can add the app module and variant, as shown
    in the following figure:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bitrise 将检测到该应用为 Android 应用，并会提供适当的机器类型和堆栈。现在，你可以添加应用模块和变体，如下图所示：
- en: '![Figure 4.11 – Selecting the app’s module](img/Figure_4.11_B18113.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – 选择应用模块](img/Figure_4.11_B18113.jpg)'
- en: Figure 4.11 – Selecting the app’s module
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – 选择应用模块
- en: 'This is the project configuration, including the Android stack and all the
    other information:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是项目配置，包括 Android 堆栈和所有其他信息：
- en: '![Figure 4.12 – Confirming the configuration](img/Figure_4.12_B18113.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – 确认配置](img/Figure_4.12_B18113.jpg)'
- en: Figure 4.12 – Confirming the configuration
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – 确认配置
- en: 'The next screen will be **App icon**. Here, you can upload a custom image or
    use the icon from the app''s directory, as shown in the following figure:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一屏幕将是**应用图标**。在这里，你可以上传自定义图像或使用应用程序目录中的图标，如下图所示：
- en: '![Figure 4.13 – App icon](img/Figure_4.13_B18113.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 应用图标](img/Figure_4.13_B18113.jpg)'
- en: Figure 4.13 – App icon
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 应用图标
- en: 'Next, you must register a webhook and trigger the first build, as shown in
    *Figure 4**.14* and *Figure 4**.15*:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你必须注册一个 webhook 并触发第一次构建，如*图 4.14*和*图 4.15*所示：
- en: '![Figure 4.14 – Registering a webhook](img/Figure_4.14_B18113.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 注册 webhook](img/Figure_4.14_B18113.jpg)'
- en: Figure 4.14 – Registering a webhook
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 注册 webhook
- en: '![Figure 4.15 – Running the first build](img/Figure_4.15_B18113.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – 运行第一次构建](img/Figure_4.15_B18113.jpg)'
- en: Figure 4.15 – Running the first build
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – 运行第一次构建
- en: 'The first build will be started. At this point, you can check the build log
    and the build’s details, as shown in the following figure:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次构建将开始。此时，你可以查看构建日志和构建的详细信息，如下图所示：
- en: '![Figure 4.16 – Build log details](img/Figure_4.16_B18113.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16 – 构建日志详情](img/Figure_4.16_B18113.jpg)'
- en: Figure 4.16 – Build log details
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16 – 构建日志详情
- en: 'Once the build has finished, you can check the build’s status to see whether
    it was a success or a failure, as shown in the following figure:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建完成，你可以检查构建的状态，查看它是成功还是失败，如下图所示：
- en: '![Figure 4.17 – Success build on Bitrise](img/Figure_4.17_B18113.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17 – Bitrise 上的成功构建](img/Figure_4.17_B18113.jpg)'
- en: Figure 4.17 – Success build on Bitrise
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – Bitrise 上的成功构建
- en: 'After that, you can click on the **Workflow Editor** button to view or modify
    the CI workflow by adding or removing steps, as shown in the following figure:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，你可以点击**工作流编辑器**按钮，查看或修改 CI 工作流，添加或移除步骤，如下图所示：
- en: '![Figure 4.18 – Android workflow](img/Figure_4.18_B18113.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18 – Android 工作流](img/Figure_4.18_B18113.jpg)'
- en: Figure 4.18 – Android workflow
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – Android 工作流
- en: 'From the **Workflow Editor** area, you can configure the trigger map or when
    you run the workflow based on Gitflow, such as running on every pull request,
    a new tag, or when pushing new code, as shown in the following figure:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**工作流编辑器**区域，你可以配置触发映射，或根据 Gitflow 运行工作流时的条件，例如在每次拉取请求、新标签或推送新代码时运行，具体如下图所示：
- en: '![Figure 4.19 – How to trigger the build on Bitrise](img/Figure_4.19_B18113.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.19 – 如何在 Bitrise 上触发构建](img/Figure_4.19_B18113.jpg)'
- en: Figure 4.19 – How to trigger the build on Bitrise
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19 – 如何在 Bitrise 上触发构建
- en: 'Additionally, you can add secret environment variables for any third-party
    tools or services such as a Slack webhook, as shown in *Figure 4**.20* and *Figure
    4**.21*:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，你还可以为任何第三方工具或服务（如 Slack webhook）添加秘密环境变量，如*图 4.20*和*图 4.21*所示：
- en: '![Figure 4.20 – Adding secret environment variables](img/Figure_4.20_B18113.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.20 – 添加秘密环境变量](img/Figure_4.20_B18113.jpg)'
- en: Figure 4.20 – Adding secret environment variables
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20 – 添加秘密环境变量
- en: '![Figure 4.21 – Adding a Slack webhook](img/Figure_4.21_B18113.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.21 – 添加 Slack webhook](img/Figure_4.21_B18113.jpg)'
- en: Figure 4.21 – Adding a Slack webhook
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21 – 添加 Slack webhook
- en: 'You can also change the stack and machine types, as shown in the following
    figure:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以更改堆栈和机器类型，如下图所示：
- en: "![Figure 4.22 – Changing the stack and machine\uFEFF types](img/Figure_4.22_B18113.jpg)"
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.22 – 更改堆栈和机器类型](img/Figure_4.22_B18113.jpg)'
- en: Figure 4.22 – Changing the stack and machine types
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22 – 更改堆栈和机器类型
- en: 'If you have any unit or UI tests in the workflow, you can access the test results,
    which are automatically generated, in the **Test Reports** add-on, as shown in
    the following figure:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果工作流中包含任何单元测试或 UI 测试，你可以在**测试报告**插件中访问自动生成的测试结果，如下图所示：
- en: '![Figure 4.23 – The Test Reports add-on](img/Figure_4.23_B18113.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.23 – 测试报告插件](img/Figure_4.23_B18113.jpg)'
- en: Figure 4.23 – The Test Reports add-on
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23 – 测试报告插件
- en: 'Bitrise also has a `bitrise.yml` file that saves all of the configurations
    you did in a `yml` file; you can save it with the source code or on the Bitrise
    website. Here’s a link to an example of a `bitrise.yml`file: [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/bitrise.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/bitrise.yml).'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Bitrise 还具有一个 `bitrise.yml` 文件，用于保存你在 `yml` 文件中的所有配置；你可以将其与源代码一起保存，或者保存在 Bitrise
    网站上。以下是一个 `bitrise.yml` 文件的示例链接：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/bitrise.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/bitrise.yml)。
- en: Note
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Other apps, such as iOS, macOS, Flutter, React Native, Ionic, and Cordova, use
    the same process, but the steps vary depending on the type.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 其他应用程序，如 iOS、macOS、Flutter、React Native、Ionic 和 Cordova，使用相同的流程，但步骤会根据类型有所不同。
- en: Codemagic
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Codemagic
- en: Codemagic ([https://codemagic.io/start/](https://codemagic.io/start/)) is a
    fully cloud-hosted and managed CI/CD solution specifically designed for mobile
    app development, emphasizing cross-platform projects.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Codemagic ([https://codemagic.io/start/](https://codemagic.io/start/)) 是一个完全托管在云端的
    CI/CD 解决方案，专为移动应用开发设计，特别强调跨平台项目。
- en: 'The platform streamlines the process of constructing, examining, and releasing
    iOS, Android, and cross-platform apps, empowering developers to produce high-quality
    mobile applications efficiently. This analysis will cover the advantages, disadvantages,
    and features of Codemagic, as well as how Codemagic measures up against other
    CI/CD alternatives in the market:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台简化了构建、检查和发布 iOS、Android 以及跨平台应用程序的过程，使开发者能够高效地生产高质量的移动应用程序。本分析将涵盖 Codemagic
    的优点、缺点和功能，并比较 Codemagic 与市场上其他 CI/CD 解决方案的表现：
- en: '![Figure 4.24 – Codemagic home page](img/Figure_4.24_B18113.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.24 – Codemagic 首页](img/Figure_4.24_B18113.jpg)'
- en: Figure 4.24 – Codemagic home page
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.24 – Codemagic 首页
- en: Developers can easily configure Flutter builds via the user interface or the
    highly customizable `codemagic.yaml` file, allowing for app creation on Android,
    iOS, web, and desktop platforms.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者可以通过用户界面或高度可定制的`codemagic.yaml`文件轻松配置 Flutter 构建，从而在 Android、iOS、Web 和桌面平台上创建应用程序。
- en: Codemagic seamlessly integrates with well-known version control systems such
    as GitHub, GitLab, and Bitbucket and is compatible with various app stores, beta
    testing services, and notification tools.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Codemagic 无缝集成了 GitHub、GitLab 和 Bitbucket 等知名版本控制系统，并兼容各种应用商店、beta 测试服务和通知工具。
- en: The platform’s uncomplicated setup procedure allows developers to swiftly establish
    their CI/CD pipelines without requiring in-depth technical knowledge.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台简单的设置过程使开发者能够快速建立他们的 CI/CD 管道，而无需深入的技术知识。
- en: With Codemagic, developers can design custom workflows using either YAML configuration
    files or the web-based configuration editor, granting flexibility and authority
    over the CI/CD process.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Codemagic，开发者可以使用 YAML 配置文件或基于 Web 的配置编辑器设计自定义工作流，赋予 CI/CD 过程更多灵活性和控制权。
- en: The platform offers a generous free tier, including 500 build minutes per month,
    a 120-minute build timeout, and macOS M1 virtual machines, making it suitable
    for smaller projects and individual developers, but you need to enable billing
    to have the full features.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台提供慷慨的免费套餐，包括每月 500 分钟的构建时间、120 分钟的构建超时限制和 macOS M1 虚拟机，适合小型项目和个人开发者，但需要启用计费才能使用完整功能。
- en: Codemagic provides dedicated support for Flutter projects, automatically detecting
    project settings and applying optimizations for building and testing Flutter apps.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: Codemagic 提供专门支持 Flutter 项目的功能，自动检测项目设置并应用构建和测试 Flutter 应用程序的优化。
- en: The platform supports iOS simulators and Android emulators, enabling developers
    to assess their mobile applications on various devices and configurations.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台支持 iOS 模拟器和 Android 模拟器，使开发者能够在各种设备和配置上评估他们的移动应用程序。
- en: Codemagic integrates with popular app stores such as Google Play and Apple App
    Store, as well as beta testing services such as TestFlight, simplifying the deployment
    process.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Codemagic 与 Google Play 和 Apple App Store 等流行的应用商店以及 TestFlight 等 beta 测试服务集成，简化了部署流程。
- en: Sensitive data and configuration settings can be securely stored, ensuring they
    are not disclosed in logs or accessed by unauthorized users.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 敏感数据和配置设置可以安全存储，确保不会在日志中泄露或被未经授权的用户访问。
- en: Codemagic also includes unlimited team seats and an access management feature
    that facilitates project collaboration and allows developers to regulate access
    to specific workflows and environments.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Codemagic 还包括无限的团队席位和访问管理功能，方便项目协作，并允许开发者控制对特定工作流和环境的访问。
- en: Example
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: In this example, we’ll build and test a Flutter application using Codemagic
    and configure it according to our needs.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用 Codemagic 构建和测试一个 Flutter 应用程序，并根据我们的需求进行配置。
- en: The prerequisites
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You will need the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要以下内容：
- en: A Codemagic account ([https://codemagic.io/signup](https://codemagic.io/signup))
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Codemagic 账户 ([https://codemagic.io/signup](https://codemagic.io/signup))
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 账户 ([https://github.com/join](https://github.com/join))
- en: The Flutter app
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flutter 应用程序
- en: A Google Play Console account or Apple Developer ID to be able to release your
    mobile apps to the relevant app stores afterward
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Google Play Console 账户或 Apple Developer ID，以便之后将你的移动应用发布到相关的应用商店
- en: Let’s get started!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Getting started
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: 'Follow these steps:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'After creating your account, you can start setting up your first app on Codemagic
    by selecting the repository and the project type, as shown in the following figure:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建账户后，你可以开始在 Codemagic 上设置你的第一个应用程序，方法是选择仓库和项目类型，如下图所示：
- en: '![Figure 4.25 – Choosing the repository and project type](img/Figure_4.25_B18113.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.25 – 选择仓库和项目类型](img/Figure_4.25_B18113.jpg)'
- en: Figure 4.25 – Choosing the repository and project type
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.25 – 选择仓库和项目类型
- en: 'Next, from the **Workflow Editor** area, select your preferred configuration
    such as iOS, Android, or both from your Flutter app, as well as your machine type,
    as shown in *Figure 4**.26* and *Figure 4**.27*:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 **工作流编辑区**，选择你偏好的配置，例如来自你的 Flutter 应用的 iOS、Android 或两者，以及你的机器类型，如 *图 4.26*
    和 *图 4.27* 所示：
- en: '![Figure 4.26 – Codemagic’s Workflow Editor area](img/Figure_4.26_B18113.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.26 – Codemagic 的工作流编辑区](img/Figure_4.26_B18113.jpg)'
- en: Figure 4.26 – Codemagic’s Workflow Editor area
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.26 – Codemagic 的工作流编辑区
- en: '![Figure 4.27 – Machine types on Codemagic](img/Figure_4.27_B18113.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.27 – Codemagic 上的机器类型](img/Figure_4.27_B18113.jpg)'
- en: Figure 4.27 – Machine types on Codemagic
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.27 – Codemagic 上的机器类型
- en: 'Then, you can configure the build triggers or make the build fail if the tests
    fail, as shown in *Figure 4**.28* and *Figure 4**.29*:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以配置构建触发器，或者在测试失败时让构建失败，如 *图 4.28* 和 *图 4.29* 所示：
- en: '![Figure 4.28 – Build trigger](img/Figure_4.28_B18113.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.28 – 构建触发器](img/Figure_4.28_B18113.jpg)'
- en: Figure 4.28 – Build trigger
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.28 – 构建触发器
- en: '![Figure 4.29 – Configuring the tests](img/Figure_4.29_B18113.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.29 – 配置测试](img/Figure_4.29_B18113.jpg)'
- en: Figure 4.29 – Configuring the tests
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.29 – 配置测试
- en: 'Next, you can configure the Android Flutter configuration, including **Flutter
    version**, **Project path**, and **Android build format**, as shown in the following
    figure:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你可以配置 Android 的 Flutter 配置，包括 **Flutter 版本**、**项目路径** 和 **Android 构建格式**，如下图所示：
- en: '![Figure 4.30 – Specifying the Flutter configuration](img/Figure_4.30_B18113.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.30 – 指定 Flutter 配置](img/Figure_4.30_B18113.jpg)'
- en: Figure 4.30 – Specifying the Flutter configuration
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.30 – 指定 Flutter 配置
- en: 'After that, you can set up notifications and select whether you need to send
    emails or Slack notifications, as shown in the following figure:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以设置通知，并选择是否需要发送电子邮件或 Slack 通知，如下图所示：
- en: '![Figure 4.31 – Configuring notifications](img/Figure_4.31_B18113.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.31 – 配置通知](img/Figure_4.31_B18113.jpg)'
- en: Figure 4.31 – Configuring notifications
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.31 – 配置通知
- en: 'Now, you can trigger your first build by selecting the workflow’s name and
    the branch’s name, as shown in the following figure:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以通过选择工作流名称和分支名称来触发第一次构建，如下图所示：
- en: '![Figure 4.32 – Starting a new build](img/Figure_4.32_B18113.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.32 – 启动新构建](img/Figure_4.32_B18113.jpg)'
- en: Figure 4.32 – Starting a new build
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.32 – 启动新构建
- en: 'Now, you can check the build log and its status, as shown in *Figure 4**.33*
    and *Figure 4**.34*:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以查看构建日志及其状态，如 *图 4.33* 和 *图 4.34* 所示：
- en: '![Figure 4.33 – Build view](img/Figure_4.33_B18113.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.33 – 构建视图](img/Figure_4.33_B18113.jpg)'
- en: Figure 4.33 – Build view
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.33 – 构建视图
- en: '![Figure 4.34 – Successful build](img/Figure_4.34_B18113.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.34 – 构建成功](img/Figure_4.34_B18113.jpg)'
- en: Figure 4.34 – Successful build
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.34 – 构建成功
- en: 'With Codemagic, similar to Bitrise, you can save the `.yaml` file on the Codemagic
    website via the `codemagic.yml` file, as shown in *Figure 4**.35* and *Figure
    4**.36*:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Codemagic，类似于 Bitrise，你可以通过 `codemagic.yml` 文件将 `.yaml` 文件保存在 Codemagic 网站上，如
    *图 4.35* 和 *图 4.36* 所示：
- en: '![Figure 4.35 – Changing the settings to codemagic.yaml from the Workflow Editor
    area](img/Figure_4.35_B18113.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.35 – 从工作流编辑区将设置更改为 codemagic.yaml](img/Figure_4.35_B18113.jpg)'
- en: Figure 4.35 – Changing the settings to codemagic.yaml from the Workflow Editor
    area
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.35 – 从工作流编辑区将设置更改为 codemagic.yaml
- en: '![Figure 4.36 – YAML file](img/Figure_4.36_B18113.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.36 – YAML 文件](img/Figure_4.36_B18113.jpg)'
- en: Figure 4.36 – YAML file
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.36 – YAML 文件
- en: 'Here is an example of the YAML file for building Flutter via iOS and Android:
    [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/codemagic.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/codemagic.yml).'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个通过 iOS 和 Android 构建 Flutter 的 YAML 文件示例：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/codemagic.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/codemagic.yml)。
- en: GitHub Actions
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub Actions
- en: 'GitHub Actions ([https://github.com/features/actions](https://github.com/features/actions))
    is an automation platform designed to streamline mobile development by enabling
    CI/CD workflows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions ([https://github.com/features/actions](https://github.com/features/actions))
    是一个自动化平台，旨在通过启用 CI/CD 工作流来简化移动开发：
- en: '![Figure 4.37 – GitHub Actions home page](img/Figure_4.37_B18113.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.37 – GitHub Actions 首页](img/Figure_4.37_B18113.jpg)'
- en: Figure 4.37 – GitHub Actions home page
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.37 – GitHub Actions 首页
- en: As a part of the GitHub ecosystem, GitHub Actions is tightly integrated with
    the platform, making it easy for mobile developers to set up and use their existing
    repositories.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 GitHub 生态系统的一部分，GitHub Actions 与平台紧密集成，使得移动开发者可以轻松设置并使用他们现有的代码库。
- en: 'GitHub Actions allows developers to create custom workflows using simple YAML
    syntax, enabling highly specific and complex automation tasks. While there is
    a GUI available during the CI build to display the steps and connections, it''s
    not currently feasible to construct the workflow using GUI platforms such as Codemagic
    or Bitrise:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 允许开发者使用简单的 YAML 语法创建自定义工作流，从而实现高度特定和复杂的自动化任务。尽管在 CI 构建过程中提供了一个图形用户界面（GUI）来显示步骤和连接，但目前使用
    Codemagic 或 Bitrise 等图形平台构建工作流并不可行：
- en: '![Figure 4.38 – The workflows folder inside the app repository](img/Figure_4.38_B18113.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.38 – 应用程序仓库中的工作流文件夹](img/Figure_4.38_B18113.jpg)'
- en: Figure 4.38 – The workflows folder inside the app repository
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.38 – 应用程序仓库中的工作流文件夹
- en: The GitHub Actions Marketplace offers a wide range of pre-built actions that
    the community contributes, which can be easily incorporated into workflows, saving
    time and effort.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions Marketplace 提供了社区贡献的各种预构建操作，这些操作可以轻松地集成到工作流中，从而节省时间和精力。
- en: 'GitHub Actions supports various platforms, including Windows, macOS, and Linux,
    similar to Codemagic, allowing mobile developers to test and release projects
    on multiple environments such as Flutter apps. You can build and release mobile,
    web, and desktop apps from a single code base:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 支持多种平台，包括 Windows、macOS 和 Linux，类似于 Codemagic，使得移动开发者可以在多个环境（如
    Flutter 应用）上测试和发布项目。您可以从单一代码库构建和发布移动、Web 和桌面应用程序：
- en: '![Figure 4.39 – Machine types in GitHub Actions](img/Figure_4.39_B18113.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.39 – GitHub Actions 中的机器类型](img/Figure_4.39_B18113.jpg)'
- en: Figure 4.39 – Machine types in GitHub Actions
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.39 – GitHub Actions 中的机器类型
- en: Self-hosted runners are available on GitHub, and you can customize the environment
    to run jobs in your GitHub Actions workflow.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 提供自托管的运行器，您可以自定义环境以在 GitHub Actions 工作流中运行任务。
- en: It offers a generous free tier, with 2,000 minutes per month for private repositories
    for individuals and organizations. However, larger projects and teams may quickly
    exceed the allotted minutes and be required to upgrade to a paid plan.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了慷慨的免费额度，对于个人和组织的私有仓库，每月提供 2,000 分钟的使用时间。然而，较大的项目和团队可能很快就会超过分配的分钟数，并需要升级到付费计划。
- en: In addition, GitHub offers features such as Codespace, a cloud developer environment
    with flexible compute and preconfigured containers, package storage, GitHub issues
    such as bugs or security issues, and project management, and the new GitHub Copilot
    add-on, which gets suggestions for whole lines or entire functions inside your
    editor.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，GitHub 提供了一些功能，如 Codespace，它是一个具有灵活计算和预配置容器的云开发环境，包存储，GitHub 问题（如错误或安全问题）和项目管理，以及新的
    GitHub Copilot 插件，可以在编辑器中提供整行或整个函数的建议。
- en: Setting up GitHub Actions may require a steep learning curve for users unfamiliar
    with YAML or CI/CD concepts. As GitHub Actions is part of the GitHub ecosystem,
    migrating to a different version control platform may prove challenging.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉 YAML 或 CI/CD 概念的用户来说，设置 GitHub Actions 可能需要一定的学习曲线。由于 GitHub Actions 是
    GitHub 生态系统的一部分，迁移到其他版本控制平台可能会遇到挑战。
- en: While the Marketplace offers many pre-built actions, GitHub Actions may not
    have native support for some third-party services, requiring users to create custom
    actions or find alternative solutions.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Marketplace 提供了许多预构建的操作，GitHub Actions 可能不支持某些第三方服务，用户需要创建自定义操作或寻找替代解决方案。
- en: GitHub Actions supports many triggers, including push and pull requests, issue
    creation, and scheduled events. This feature lets developers simultaneously test
    their code on multiple versions of programming languages, platforms, and configurations.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 支持多种触发器，包括推送、拉取请求、问题创建和计划事件。这个功能让开发人员可以同时在多个版本的编程语言、平台和配置上测试代码。
- en: Caching is another feature offered by GitHub Actions. It allows you to cache
    dependencies, speed up build times, and reduce resource usage. GitHub Actions
    stores build artifacts and logs, making it easy to access and share results with
    team members.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存是 GitHub Actions 提供的另一个功能。它允许你缓存依赖项，加速构建时间，减少资源使用。GitHub Actions 存储构建工件和日志，使得访问和与团队成员共享结果变得更容易。
- en: In addition to providing security, GitHub includes features such as code scanning,
    secret scanning, dependency review with dependabot alerts, and preventing sensitive
    data or configuration settings from being exposed in logs or shared with unauthorized
    individuals.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供安全性，GitHub 还包括代码扫描、秘密扫描、依赖项审查（带有 dependabot 警报），以及防止敏感数据或配置设置在日志中泄露或与未授权人员共享的功能。
- en: Example
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let’s look at an example of setting up GitHub Actions for an Android app to
    build and run unit and lint tests.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个为 Android 应用设置 GitHub Actions 的例子，以便构建并运行单元测试和 lint 测试。
- en: 'The prerequisites:'
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件：
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitHub 账户（[https://github.com/join](https://github.com/join)）
- en: An Android app
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Android 应用
- en: A Google Play Console account or Apple Developer ID to be able to release your
    mobile apps to the relevant app stores afterward
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要一个 Google Play 控制台帐户或 Apple Developer ID，才能将你的移动应用发布到相关的应用商店。
- en: Let’s get started!
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Getting started
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: 'Let’s get started:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: 'If you already have an Android application, you can click on the **Actions**
    button to start using GitHub Actions, as shown in the following figure:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你已经有一个 Android 应用，可以点击**Actions**按钮开始使用 GitHub Actions，如下图所示：
- en: '![Figure 4.40 – Getting started with GitHub Actions](img/Figure_4.40_B18113.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.40 – 开始使用 GitHub Actions](img/Figure_4.40_B18113.jpg)'
- en: Figure 4.40 – Getting started with GitHub Actions
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.40 – 开始使用 GitHub Actions
- en: 'Click on `Android` to find a template for this, as shown in the following figure:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Android`找到这个模板，如下图所示：
- en: '![Figure 4.41 – The default gradle.yaml file](img/Figure_4.41_B18113.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.41 – 默认的 gradle.yaml 文件](img/Figure_4.41_B18113.jpg)'
- en: Figure 4.41 – The default gradle.yaml file
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.41 – 默认的 gradle.yaml 文件
- en: 'Trigger the build after committing the change. GitHub Actions will start a
    new build. At this point, you can check the log, as shown in *Figure 4**.42* and
    *Figure 4**.43*:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提交更改后触发构建。GitHub Actions 将启动新的构建。此时，你可以查看日志，如*图 4.42*和*图 4.43*所示：
- en: '![Figure 4.42 – The build log view](img/Figure_4.42_B18113.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.42 – 构建日志视图](img/Figure_4.42_B18113.jpg)'
- en: Figure 4.42 – The build log view
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.42 – 构建日志视图
- en: '![Figure 4.43 – Successful build](img/Figure_4.43_B18113.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.43 – 构建成功](img/Figure_4.43_B18113.jpg)'
- en: Figure 4.43 – Successful build
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.43 – 构建成功
- en: 'Here is an example of a GitHub Actions Android CI YAML file: [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/android.yml).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 GitHub Actions Android CI YAML 文件示例：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/android.yml)。
- en: Example
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: 'For our next example, we will set up GitHub Actions for an iOS app so that
    we can build the app and run the necessary unit tests:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个例子中，我们将为 iOS 应用设置 GitHub Actions，以便我们可以构建该应用并运行必要的单元测试：
- en: '![Figure 4.44 – Getting started with the iOS app](img/Figure_4.44_B18113.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.44 – 开始使用 iOS 应用](img/Figure_4.44_B18113.jpg)'
- en: Figure 4.44 – Getting started with the iOS app
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.44 – 开始使用 iOS 应用
- en: 'Here is an example of the YAML file for the iOS app: [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/iOS.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/iOS.yml).'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 iOS 应用的 YAML 文件示例：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/iOS.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-4/.github/workflows/iOS.yml)。
- en: Note
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can remove the Install CocoaPods step if your app doesn’t include a podfile.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用不包含 podfile，可以删除安装 CocoaPods 步骤。
- en: Xcode Cloud
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Xcode Cloud
- en: 'Xcode Cloud ([https://developer.apple.com/xcode-cloud/](https://developer.apple.com/xcode-cloud/))
    is a CI/CD service built by Apple and integrated directly into the Xcode development
    environment. It is designed to streamline the process of building, testing, and
    deploying iOS, macOS, watchOS, and tvOS applications:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud ([https://developer.apple.com/xcode-cloud/](https://developer.apple.com/xcode-cloud/))
    是苹果构建的 CI/CD 服务，直接集成到 Xcode 开发环境中。它旨在简化 iOS、macOS、watchOS 和 tvOS 应用的构建、测试和部署过程：
- en: '![Figure 4.45 – Xcode Cloud home page](img/Figure_4.45_B18113.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.45 – Xcode Cloud 首页](img/Figure_4.45_B18113.jpg)'
- en: Figure 4.45 – Xcode Cloud home page
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.45 – Xcode Cloud 首页
- en: Xcode Cloud is fully integrated with the Xcode development environment, providing
    a seamless experience for Apple developers.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 完全集成到 Xcode 开发环境中，为苹果开发者提供无缝的体验。
- en: The integration with Xcode means that setting up a CI/CD pipeline is straightforward,
    with minimal configuration required.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Xcode 的集成意味着设置 CI/CD 流程非常简单，几乎不需要配置。
- en: To use Xcode Cloud, you must have Apple Developer Program membership.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Xcode Cloud，您必须拥有 Apple Developer Program 会员资格。
- en: There is a free version of Xcode Cloud, but it only comes with 25 compute hours
    per month. Xcode Cloud is optimized for building and testing Apple platform applications,
    ensuring optimal performance and compatibility. It supports parallel testing across
    multiple devices and configurations, speeding up the testing process and improving
    overall efficiency.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 提供免费版，但每月仅包含 25 小时的计算时间。Xcode Cloud 为构建和测试苹果平台应用进行了优化，确保最佳性能和兼容性。它支持在多个设备和配置之间并行测试，加速测试过程，提高整体效率。
- en: As an Apple service, Xcode Cloud is designed to protect source code and build
    artifacts throughout the CI/CD process. Xcode Cloud is specifically designed for
    Apple platforms and so is unsuitable for Android or other non-Apple application
    development.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 作为苹果的服务，Xcode Cloud 旨在保护源代码和构建工件，贯穿整个 CI/CD 过程。Xcode Cloud 专门为苹果平台设计，因此不适用于
    Android 或其他非苹果平台的应用开发。
- en: Xcode Cloud’s tight integration with Xcode may limit the level of customization
    available compared to more general-purpose CI/CD solutions.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 与 Xcode 的紧密集成可能会限制其与更通用的 CI/CD 解决方案相比可用的自定义程度。
- en: As Xcode Cloud is integrated with Xcode, developers who prefer other development
    environments may find it less appealing.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Xcode Cloud 集成了 Xcode，开发者如果偏好其他开发环境，可能会觉得它不太吸引人。
- en: Features
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特性
- en: Xcode Cloud provides automated code diagnostics, allowing you to identify issues
    and get recommendations for improvement.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 提供自动化的代码诊断功能，帮助您识别问题并提供改进建议。
- en: Xcode Cloud integrates with App Store Connect, streamlining the process of distributing
    applications to testers and submitting them to the App Store. It supports collaboration,
    allowing team members to collaborate on projects, share results, and coordinate
    their efforts.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 与 App Store Connect 集成，简化了将应用分发给测试人员并提交到 App Store 的过程。它支持团队协作，允许团队成员共同参与项目，分享结果并协调工作。
- en: Example
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let’s look at an example of using Xcode Cloud to build, test, and archive an
    iOS application.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个使用 Xcode Cloud 构建、测试和归档 iOS 应用的示例。
- en: 'The prerequisites:'
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件：
- en: 'You must have the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要具备以下条件：
- en: An Apple Developer ID to be able to release your mobile apps to the App Store
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Apple Developer ID，用于发布您的移动应用到 App Store
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitHub 账户 ([https://github.com/join](https://github.com/join))
- en: An iOS app
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 iOS 应用
- en: Let’s get started!
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Getting started
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门
- en: 'Follow these steps:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'To get started with Xcode Cloud, open the iOS app in Xcode and click **Report
    Navigator** in the left-hand side menu, then click **Get Started with Xcode Cloud**.
    After that, you must select a product, which is the app that you want to build:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始使用 Xcode Cloud，请在 Xcode 中打开 iOS 应用，点击左侧菜单中的 **报告导航器**，然后点击 **开始使用 Xcode Cloud**。之后，您必须选择一个产品，即您要构建的应用：
- en: '![Figure 4.46 – Xcode Cloud inside the Xcode IDE](img/Figure_4.46_B18113.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.46 – Xcode Cloud 在 Xcode IDE 内部](img/Figure_4.46_B18113.jpg)'
- en: Figure 4.46 – Xcode Cloud inside the Xcode IDE
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.46 – Xcode Cloud 在 Xcode IDE 内部
- en: 'At this point, the **Workflow Editor** area will open. Here, you can modify
    the steps as you wish, as shown in *Figure 4**.47* and *Figure 4**.48*:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，**工作流编辑器**区域将打开。在这里，您可以根据需要修改步骤，如 *图 4.47* 和 *图 4.48* 所示：
- en: '![Figure 4.47 – The Workflow Editor area](img/Figure_4.47_B18113.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.47 – 工作流编辑器区域](img/Figure_4.47_B18113.jpg)'
- en: Figure 4.47 – The Workflow Editor area
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.47 – 工作流程编辑区域
- en: '![Figure 4.48 – Editing the workflow](img/Figure_4.48_B18113.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.48 – 编辑工作流程](img/Figure_4.48_B18113.jpg)'
- en: Figure 4.48 – Editing the workflow
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.48 – 编辑工作流程
- en: 'You can add different steps such as **Build**, **Test**, **Analyze**, and **Archive**
    for your iOS app, as shown in the following figure:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以为您的 iOS 应用添加不同的步骤，如**构建**、**测试**、**分析**和**存档**，如下图所示：
- en: "![Figure 4.49 – Adding different steps, such as Test \uFEFFand Analyze](img/Figure_4.49_B18113.jpg)"
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: "![图 4.49 – 添加不同步骤，如测试 \uFEFF和 分析](img/Figure_4.49_B18113.jpg)"
- en: Figure 4.49 – Adding different steps, such as Test and Analyze
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.49 – 添加不同步骤，如测试和分析
- en: 'Next, you need to connect Xcode Cloud to your GitHub repositories so that you
    can access your source code and install the Xcode Cloud app, as shown in *Figure
    4**.50*, *Figure 4**.51*, and *Figure 4**.52*:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要将 Xcode Cloud 连接到 GitHub 存储库，以便访问您的源代码并安装 Xcode Cloud 应用，如 *图 4**.50*、*图
    4**.51* 和 *图 4**.52* 所示：
- en: '![Figure 4.50 – Granting access to your source code](img/Figure_4.50_B18113.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.50 – 授予访问源代码的权限](img/Figure_4.50_B18113.jpg)'
- en: Figure 4.50 – Granting access to your source code
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.50 – 授予访问源代码的权限
- en: '![Figure 4.51 – Connecting Xcode Cloud with GitHub](img/Figure_4.51_B18113.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.51 – 将 Xcode Cloud 与 GitHub 连接](img/Figure_4.51_B18113.jpg)'
- en: Figure 4.51 – Connecting Xcode Cloud with GitHub
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.51 – 将 Xcode Cloud 与 GitHub 连接
- en: '![Figure 4.52 – Installing the Xcode Cloud app](img/Figure_4.52_B18113.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.52 – 安装 Xcode Cloud 应用](img/Figure_4.52_B18113.jpg)'
- en: Figure 4.52 – Installing the Xcode Cloud app
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.52 – 安装 Xcode Cloud 应用
- en: 'Select your repository for the Xcode Cloud app, as shown in the following figure:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的存储库用于 Xcode Cloud 应用，如下图所示：
- en: '![Figure 4.53 – Selecting a repository](img/Figure_4.53_B18113.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.53 – 选择存储库](img/Figure_4.53_B18113.jpg)'
- en: Figure 4.53 – Selecting a repository
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.53 – 选择存储库
- en: 'Next, from Xcode Cloud, you can create an app record via App Store Connect
    to be able to release the app to the App Store if you don’t have an existing one,
    as shown in the following figure:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您可以通过 App Store Connect 从 Xcode Cloud 创建一个应用记录，以便发布应用到 App Store（如果您没有现有的），如下图所示：
- en: '![Figure 4.54 – Create App on App Store Connect](img/Figure_4.54_B18113.jpg)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.54 – 在 App Store Connect 上创建应用](img/Figure_4.54_B18113.jpg)'
- en: Figure 4.54 – Create App on App Store Connect
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.54 – 在 App Store Connect 上创建应用
- en: 'Now, you can start the build by selecting the branch name and clicking the
    **Start Build** button, as shown in the following figure:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以通过选择分支名称并单击 **开始构建** 按钮来启动构建，如下图所示：
- en: '![Figure 4.55 – Starting the build](img/Figure_4.55_B18113.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.55 – 开始构建](img/Figure_4.55_B18113.jpg)'
- en: Figure 4.55 – Starting the build
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.55 – 开始构建
- en: 'You can now view the build log via the Xcode IDE, as shown in the following
    figure:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以通过 Xcode IDE 查看构建日志，如下图所示：
- en: '![Figure 4.56 – Build view](img/Figure_4.56_B18113.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.56 – 构建视图](img/Figure_4.56_B18113.jpg)'
- en: Figure 4.56 – Build view
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.56 – 构建视图
- en: 'Once the build has finished, you can check its status to see whether it’s completed
    successfully or not:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建完成，您可以检查其状态，查看是否成功完成：
- en: '![Figure 4.57 – Successful build](img/Figure_4.57_B18113.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.57 – 成功构建](img/Figure_4.57_B18113.jpg)'
- en: Figure 4.57 – Successful build
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.57 – 成功构建
- en: 'Additionally, you can check the test results in the logs and test artifacts,
    as shown in *Figure 4**.58* and *Figure 4**.59*:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另外，您可以查看日志和测试工件中的测试结果，如*图 4**.58* 和 *图 4**.59* 所示：
- en: "![Figure 4.58 – The Test \uFEFF- iOS view](img/Figure_4.58_B18113.jpg)"
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: "![图 4.58 – 测试 \uFEFF- iOS 视图](img/Figure_4.58_B18113.jpg)"
- en: Figure 4.58 – The Test - iOS view
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.58 – 测试 - iOS 视图
- en: "![Figure 4.59 – The Archive \uFEFF- iOS view](img/Figure_4.59_B18113.jpg)"
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: "![图 4.59 – 存档 \uFEFF- iOS 视图](img/Figure_4.59_B18113.jpg)"
- en: Figure 4.59 – The Archive - iOS view
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.59 – 存档 - iOS 视图
- en: Note
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: 'There is no YAML file for the workflow with Xcode Cloud. However, you can modify
    or access the workflows from the Xcode IDE or App Store Connect, as shown in the
    following figure:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode Cloud 的工作流程中没有 YAML 文件。但是，您可以从 Xcode IDE 或 App Store Connect 修改或访问工作流程，如下图所示：
- en: '![](img/Figure_4.60_B18113.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.60_B18113.jpg)'
- en: Figure 4.60 – Xcode Cloud on App Store Connect
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.60 – Xcode Cloud 在 App Store Connect 上
- en: Visual Studio App Center
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio App Center
- en: Visual Studio App Center ([https://appcenter.ms/](https://appcenter.ms/)) is
    a cloud-based CI/CD platform developed by Microsoft, specifically designed for
    mobile app development.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio App Center（[https://appcenter.ms/](https://appcenter.ms/)）是由微软开发的专为移动应用开发设计的基于云的
    CI/CD 平台。
- en: 'It supports iOS, Android, React Native, and Xamarin projects, streamlining
    the process of building, testing, distributing, and monitoring mobile applications.
    This section will discuss the pros, cons, and features of Visual Studio App Center,
    as well as how it compares to other CI/CD solutions on the market:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持 iOS、Android、React Native 和 Xamarin 项目，简化了构建、测试、分发和监控移动应用的过程。本节将讨论 Visual
    Studio App Center 的优缺点和功能，以及它与市场上其他 CI/CD 解决方案的比较：
- en: '![Figure 4.61 – App Center home page](img/Figure_4.61_B18113.jpg)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.61 – App Center 首页](img/Figure_4.61_B18113.jpg)'
- en: Figure 4.61 – App Center home page
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.61 – App Center 首页
- en: The platform boasts a user-friendly setup process, allowing developers to establish
    their CI/CD pipelines quickly. You can integrate with widely used version control
    systems such as GitHub, Bitbucket, and Azure Repos, along with connections to
    app stores and beta testing services.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 该平台拥有用户友好的设置过程，使开发者能够快速建立 CI/CD 管道。你可以与广泛使用的版本控制系统（如 GitHub、Bitbucket 和 Azure
    Repos）集成，并连接应用商店和 Beta 测试服务。
- en: App Center enables automated testing on devices in the cloud, assisting developers
    in verifying compatibility and performance across multiple target platforms. Although
    its pricing may be costly for larger teams or projects that need increased build
    capacity or features, its streamlined setup process compensates for this drawback.
    However, it might lack the customization options other CI/CD platforms offer.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: App Center 使得在云端设备上进行自动化测试成为可能，帮助开发者验证在多个目标平台间的兼容性和性能。尽管对于需要更多构建能力或功能的大型团队或项目来说，其定价可能较高，但其简化的设置过程弥补了这一缺点。然而，它可能缺乏其他
    CI/CD 平台提供的自定义选项。
- en: As App Center focuses on mobile app development, it may not be the ideal choice
    for non-mobile or web development projects. The platform simplifies the process
    of building and signing iOS and Android apps, ensuring consistency throughout
    releases. It facilitates testing on various real devices in the cloud, guaranteeing
    compatibility and performance across target platforms.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 App Center 专注于移动应用开发，因此它可能不是非移动或 Web 开发项目的理想选择。该平台简化了构建和签名 iOS 和 Android
    应用的过程，确保发布过程中的一致性。它支持在云端的各种真实设备上进行测试，保证在目标平台间的兼容性和性能。
- en: App Center streamlines the distribution of applications to beta testers, app
    stores, or enterprise environments, with support for **over-the-air** (**OTA**)
    updates. In addition, it offers crash reporting and analytics features, enabling
    developers to monitor app performance and detect issues in real time. Lastly,
    the platform manages and sends push notifications to users, supporting segmentation
    and targeting.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: App Center 简化了将应用分发给 Beta 测试者、应用商店或企业环境的过程，并支持 **空中下载** (**OTA**) 更新。此外，它提供崩溃报告和分析功能，使开发者能够实时监控应用性能并检测问题。最后，该平台还管理并推送通知给用户，支持细分和定向推送。
- en: Example
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let’s learn how to set up Visual Studio App Center for an Android app.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何为 Android 应用设置 Visual Studio App Center。
- en: The prerequisites
  id: totrans-309
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You will need the following:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要以下内容：
- en: An App Center account ([https://appcenter.ms/create-account](https://appcenter.ms/create-account))
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 App Center 账户 ([https://appcenter.ms/create-account](https://appcenter.ms/create-account))
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitHub 账户 ([https://github.com/join](https://github.com/join))
- en: An Android app
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Android 应用
- en: A Google Play Console account or Apple Developer ID to be able to release your
    mobile apps to the relevant app stores afterward
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Google Play Console 账户或 Apple Developer ID，以便稍后将你的移动应用发布到相关的应用商店
- en: Let’s get started!
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: Getting started
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: 'Follow these steps:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'After creating an App Center account, the next step is to add a new app by
    selecting the app type and then connecting the source code provider, as displayed
    in *Figure 4**.62* and *Figure 4**.63*:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 App Center 账户后，下一步是通过选择应用类型并连接源代码提供商来添加新应用，如 *图 4.62* 和 *图 4.63* 所示：
- en: '![Figure 4.62 – Add new app](img/Figure_4.62_B18113.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.62 – 添加新应用](img/Figure_4.62_B18113.jpg)'
- en: Figure 4.62 – Add new app
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.62 – 添加新应用
- en: '![Figure 4.63 – Connecting the source code service](img/Figure_4.63_B18113.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.63 – 连接源代码服务](img/Figure_4.63_B18113.jpg)'
- en: Figure 4.63 – Connecting the source code service
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.63 – 连接源代码服务
- en: 'Next, select the app module, variant, and the other configuration options,
    then click the **Save & Build** button to start a new build, as shown in *Figure
    4**.64* and *Figure 4**.65*:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择应用模块、变体和其他配置选项，然后点击 **保存并构建** 按钮以启动新的构建，如 *图 4.64* 和 *图 4.65* 所示：
- en: '![Figure 4.64 – Configuring the build](img/Figure_4.64_B18113.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.64 – 配置构建](img/Figure_4.64_B18113.jpg)'
- en: Figure 4.64 – Configuring the build
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.64 – 配置构建
- en: '![Figure 4.65 – Running the build](img/Figure_4.65_B18113.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.65 – 运行构建](img/Figure_4.65_B18113.jpg)'
- en: Figure 4.65 – Running the build
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.65 – 运行构建
- en: Note
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: There is no YAML file for the workflow with App Center; you can only modify
    or access the workflows from the website.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 App Center 的工作流没有 YAML 文件；你只能从网站修改或访问工作流。
- en: Ionic AppFlow
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ionic AppFlow
- en: 'Ionic AppFlow ([https://ionic.io/appflow](https://ionic.io/appflow)) is a cloud-based
    CI/CD platform specifically designed for mobile app development using the Ionic
    framework. It streamlines the process of building, testing, and deploying iOS,
    Android, and **progressive web app** (**PWA**) applications built with Ionic,
    helping developers deliver high-quality applications efficiently:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic AppFlow ([https://ionic.io/appflow](https://ionic.io/appflow)) 是一个基于云的
    CI/CD 平台，专门为使用 Ionic 框架进行移动应用开发而设计。它简化了构建、测试和部署基于 Ionic 构建的 iOS、Android 和 **渐进式
    Web 应用** (**PWA**) 的过程，帮助开发人员高效地交付高质量的应用：
- en: '![Figure 4.66 – AppFlow home page](img/Figure_4.66_B18113.jpg)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.66 – AppFlow 首页](img/Figure_4.66_B18113.jpg)'
- en: Figure 4.66 – AppFlow home page
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.66 – AppFlow 首页
- en: Designed for Ionic framework projects, Ionic AppFlow delivers specialized features
    and enhancements for building and deploying Ionic apps. The platform streamlines
    the setup process, enabling developers to efficiently configure their CI/CD pipelines
    without in-depth technical expertise. Live updates are supported, allowing for
    direct deployment of changes and bug fixes to users’ devices without app store
    reviews.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic AppFlow 专为 Ionic 框架项目设计，提供了专门的功能和增强功能，用于构建和部署 Ionic 应用。该平台简化了设置过程，使开发人员能够高效地配置
    CI/CD 管道，而无需深入的技术专长。支持实时更新，允许将更改和 bug 修复直接部署到用户设备，而无需通过应用商店审核。
- en: Ionic AppFlow seamlessly integrates with popular version control systems such
    as GitHub, GitLab, and Bitbucket, as well as app stores, beta testing services,
    and notification tools. It also automates the build process for iOS and Android,
    simplifying mobile app deployment.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic AppFlow 无缝集成了流行的版本控制系统，如 GitHub、GitLab 和 Bitbucket，以及应用商店、测试服务和通知工具。它还自动化了
    iOS 和 Android 的构建过程，简化了移动应用的部署。
- en: However, Ionic AppFlow’s focus on the Ionic framework might not be suitable
    for non-Ionic or non-mobile app development projects. Its pricing can be costly
    for larger teams or projects that require extra build capacity or features compared
    to alternative CI/CD solutions. While it streamlines the setup, Ionic AppFlow
    may lack customization options of other CI/CD platforms.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Ionic AppFlow 对 Ionic 框架的专注可能不适合非 Ionic 或非移动应用开发项目。与其他 CI/CD 解决方案相比，它的定价对于需要额外构建能力或功能的大型团队或项目来说可能较为昂贵。虽然它简化了设置过程，但
    Ionic AppFlow 可能缺少其他 CI/CD 平台的定制选项。
- en: Developers who favor other mobile app development frameworks might find Ionic
    AppFlow less appealing due to its specific focus on Ionic projects. Nevertheless,
    it offers dedicated support and is optimized for building and deploying Ionic
    apps.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 喜欢其他移动应用开发框架的开发人员，可能会觉得 Ionic AppFlow 对于非 Ionic 项目的专注性较低，从而不那么吸引人。尽管如此，它仍提供专门的支持，并且经过优化，适合构建和部署
    Ionic 应用。
- en: Ionic AppFlow automatically generates iOS and Android builds for distribution
    through app stores or internal testing and deploys updates and bug fixes directly
    to users’ devices without necessitating app store downloads.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic AppFlow 自动生成 iOS 和 Android 构建版本，供通过应用商店或内部测试进行分发，并直接将更新和 bug 修复部署到用户设备，而无需应用商店下载。
- en: Example
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let’s learn how to set up Ionic AppFlow for an Ionic app.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来学习如何为 Ionic 应用设置 Ionic AppFlow。
- en: The prerequisites
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You must have the following:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须具备以下条件：
- en: An AppFlow account ([https://ionic.io/signup?source=appflow&product=appflow](https://ionic.io/signup?source=appflow&product=appflow))
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 AppFlow 账户 ([https://ionic.io/signup?source=appflow&product=appflow](https://ionic.io/signup?source=appflow&product=appflow))
- en: A GitHub account ([https://github.com/join](https://github.com/join))
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitHub 账户 ([https://github.com/join](https://github.com/join))
- en: An Ionic app
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Ionic 应用
- en: A Google Play Console account or Apple Developer ID to be able to release your
    mobile apps to the relevant app stores afterward
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Google Play 控制台账户或 Apple 开发者 ID，以便将来能够将你的移动应用发布到相关应用商店
- en: Let’s get started!
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: Getting started
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: 'Follow these steps:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'After creating your account, you can start creating a new app or import an
    existing one into AppFlow, as shown in the following figure:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建账户后，你可以开始创建一个新应用或将现有应用导入 AppFlow，如下图所示：
- en: '![Figure 4.67 – Adding a new app or importing an existing Ionic app](img/Figure_4.67_B18113.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.67 – 添加新应用或导入现有的Ionic应用](img/Figure_4.67_B18113.jpg)'
- en: Figure 4.67 – Adding a new app or importing an existing Ionic app
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.67 – 添加新应用或导入现有的Ionic应用
- en: 'Next, click on **Create your first build**, as shown in the following figure:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**创建你的第一个构建**，如下面的图所示：
- en: '![Figure 4.68 – Create your first build](img/Figure_4.68_B18113.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.68 – 创建你的第一个构建](img/Figure_4.68_B18113.jpg)'
- en: Figure 4.68 – Create your first build
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.68 – 创建你的第一个构建
- en: 'Next, choose the app type, such as Android, then select the stack and build
    type. Then, click the **Build** button, as shown in the following figure:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择应用类型，例如Android，然后选择堆栈和构建类型。然后，点击**构建**按钮，如下面的图所示：
- en: f
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: f
- en: '![Figure 4.69 – Choosing the app to build](img/Figure_4.69_B18113.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.69 – 选择要构建的应用](img/Figure_4.69_B18113.jpg)'
- en: Figure 4.69 – Choosing the app to build
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.69 – 选择要构建的应用
- en: 'Once the build has started, you can view the build’s log view and build’s status,
    as shown in the following figure:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建开始，你可以查看构建的日志视图和构建状态，如下面的图所示：
- en: '![Figure 4.70 – Build log view](img/Figure_4.70_B18113.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.70 – 构建日志视图](img/Figure_4.70_B18113.jpg)'
- en: Figure 4.70 – Build log view
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.70 – 构建日志视图
- en: Now that we have discussed the different CI/CD providers for mobile apps and
    how they work, we can create a workflow to build, test, and release mobile apps.
    You now better understand Mobile DevOps and which CI/CD provider is suitable for
    your apps, business, team, and, as we mentioned earlier, your budget.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经讨论了针对移动应用的不同CI/CD提供商及其工作原理，我们可以创建一个工作流来构建、测试和发布移动应用。现在你对移动DevOps和哪种CI/CD提供商适合你的应用、业务、团队以及前面提到的预算有了更好的理解。
- en: Note
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In addition, there are different CI/CD providers on the market, but they are
    not mobile-focused, such as CircleCI, GitLab, Azure Pipelines (DevOps), and Jenkins.
    A company may choose one of them if the rest of the teams use it for the backend
    and web applications.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，市场上还有不同的CI/CD提供商，但它们并非专注于移动端，例如CircleCI、GitLab、Azure Pipelines（DevOps）和Jenkins。如果其他团队已经在后端和Web应用程序中使用其中的某一个，某公司可能会选择其中之一。
- en: In the previous examples, we covered the test steps that are integrated into
    the workflow or pipeline quickly because, in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App Testing Strategy*, we will dive deep into testing,
    from designing the testing strategy to running a different type of testing in
    the CI/CD pipeline. As we move on to [*Chapter 6*](B18113_06.xhtml#_idTextAnchor210),
    *Mobile App Release Management*, we will complete the CI/CD cycle and learn more
    about app releases.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们快速覆盖了集成到工作流或管道中的测试步骤，因为在[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施健全的移动应用测试策略*中，我们将深入探讨测试，从设计测试策略到在CI/CD管道中运行不同类型的测试。当我们继续学习[*第6章*](B18113_06.xhtml#_idTextAnchor210)，*移动应用发布管理*时，我们将完成CI/CD周期，并进一步了解应用发布的内容。
- en: Summary
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: CI/CD for mobile apps is a process that enables organizations to quickly and
    efficiently release and update their mobile applications, ensuring that the code
    is stable, secure, and up to date.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的CI/CD是一种可以帮助组织快速高效地发布和更新其移动应用程序的过程，确保代码稳定、安全并且是最新的。
- en: Choosing the right CI/CD provider for a mobile app development project is crucial
    for ensuring a seamless development, testing, and release process. We explored
    the most popular CI/CD providers on the mobile CI/CD market, including Bitrise,
    Codemagic, GitHub Actions, Xcode Cloud, Visual Studio App Center, and Ionic AppFlow.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 选择合适的CI/CD提供商对于确保无缝的开发、测试和发布过程至关重要。我们探讨了移动CI/CD市场上最流行的CI/CD提供商，包括Bitrise、Codemagic、GitHub
    Actions、Xcode Cloud、Visual Studio App Center和Ionic AppFlow。
- en: Each provider offers unique features, pricing plans, and levels of support,
    and it is essential to choose a provider that meets the team’s specific needs.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 每个服务提供商提供独特的功能、定价方案和支持级别，选择一个满足团队特定需求的提供商是至关重要的。
- en: One of the critical factors to consider is platform support, ensuring that the
    selected provider supports the platforms that the app targets. For example, some
    providers specialize in one platform, such as Xcode Cloud, while others support
    multiple platforms, such as Bitrise. Organizations should also consider performance
    and reliability, build configuration and environment, scalability, integration,
    security, ease of use, community and support, and pricing.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 需要考虑的一个关键因素是平台支持，确保所选的提供商支持应用程序所针对的平台。例如，一些提供商专注于单一平台，如 Xcode Cloud，而其他提供商则支持多个平台，如
    Bitrise。组织还应考虑性能和可靠性、构建配置与环境、可扩展性、集成、安全性、易用性、社区支持以及定价。
- en: We also discussed implementing CI and provided detailed steps for setting up
    different CI servers for mobile apps, including setting up the necessary build
    and unit tests.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了实施 CI 并提供了详细步骤，介绍了为移动应用设置不同 CI 服务器的过程，包括设置必要的构建和单元测试。
- en: In the next few chapters, we will continue our journey toward implementing full
    CI/CD with test automation, release management, and DevSecOps.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，我们将继续迈向实现完整 CI/CD，包括测试自动化、发布管理和 DevSecOps。
