["```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\nmodern-devops\n$ cd modern-devops/ch11\n```", "```\n$ cd ~/modern-devops/blog-app\n```", "```\n.\n├── frontend\n│   ├── Dockerfile\n│   ├── app.py\n│   ├── app.test.py\n│   ├── requirements.txt\n│   ├── static\n│   └── templates\n├── posts\n│   ├── Dockerfile\n│   ├── app.py\n│   ├── app.test.py\n│   └── requirements.txt\n├── ratings ...\n├── reviews ...\n└── users ...\n```", "```\n$ cd posts\n```", "```\nFROM python:3.7-alpine\nENV FLASK_APP=app.py\nENV FLASK_RUN_HOST=0.0.0.0\nRUN apk add --no-cache gcc musl-dev linux-headers\nCOPY requirements.txt requirements.txt\nRUN pip install -r requirements.txt\nEXPOSE 5000\nCOPY . .\nRUN python app.test.py\nCMD [\"flask\", \"run\"]\n```", "```\n$ docker build --progress=plain -t posts .\n#4 [1/6] FROM docker.io/library/python:3.7-alpine\n#5 [internal] load build context\n#6 [2/6] RUN apk add --no-cache gcc musl-dev linux-headers\n#7 [3/6] COPY requirements.txt requirements.txt\n#8 [4/6] RUN pip install -r requirements.txt\n#9 [5/6] COPY . .\n#10 [6/6] RUN python app.test.py\n#10 0.676 -------------------------------------------------\n#10 0.676 Ran 8 tests in 0.026s\n#11 exporting to image\n#11 naming to docker.io/library/posts done\n```", "```\n$ git clone https://github.com/<GitHub_Username>/mdo-posts.git\n```", "```\n$ cd mdo-posts\n$ cp ~/modern-devops/blog-app/posts/* .\n```", "```\n$ mkdir -p .github/workflows\n```", "```\nname: Build and Test App\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - name: Login to Docker Hub\n      id: login\n      run: docker login -u ${{ secrets.DOCKER_USER  }} -p ${{ secrets.DOCKER_PASSWORD }}\n    - name: Build the Docker image\n      id: build\n      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER  }}/\nmdo-posts:$(git rev-parse --short \"$GITHUB_SHA\")\n    - name: Push the Docker image\n      id: push\n      run: docker push ${{ secrets.DOCKER_USER  }}/mdo-posts:$(git rev-parse --short \n\"$GITHUB_SHA\")\n```", "```\nDOCKER_USER=<Your Docker Hub username>\nDOCKER_PASSWORD=<Your Docker Hub password>\n```", "```\n$ mv build.yml .github/workflows/\n```", "```\n$ git add --all\n$ git commit -m 'Initial commit'\n$ git push\n```", "```\n@app.route('/posts', methods=['POST'])\ndef create_post():\n    ...\n    return jsonify({'pos': str(inserted_post.inserted_id)}), 201\n```", "```\n$ git add --all\n$ git commit -m 'Updated create_post'\n$ git push\n```", "```\n@app.route('/posts', methods=['POST'])\ndef create_post():\n    ...\n    return jsonify({'post': str(inserted_post.inserted_id)}), 201\n```", "```\n$ git add --all\n$ git commit -m 'Updated create_post'\n$ git push\n```", "```\n$ gcloud services enable container.googleapis.com\n```", "```\n$ gcloud container clusters create cluster-1 --num-nodes 2 \\\n--enable-autoscaling --min-nodes 1 --max-nodes 5 --zone us-central1-a\n```", "```\n$ git clone https://github.com/PacktPublishing/Modern-DevOps-Practices-2e.git \\\nmodern-devops\n$ cd modern-devops/ch11/jenkins/jenkins-controller\n```", "```\njenkins:\n  remotingSecurity:\n   enabled: true\n  securityRealm:\n    local:\n      allowsSignup: false\n      users:\n       - id: ${JENKINS_ADMIN_ID}\n         password: ${JENKINS_ADMIN_PASSWORD}\n  authorizationStrategy:\n    globalMatrix:\n      permissions:\n        - \"Overall/Administer:admin\"\n        - \"Overall/Read:authenticated\"\n```", "```\njenkins:\n  systemMessage: \"Welcome to Jenkins!\"\n  numExecutors: 0\n```", "```\njenkins\n  clouds:\n  - kubernetes:\n      serverUrl: \"https://<kubernetes_control_plane_ip>\"\n      jenkinsUrl: \"http://jenkins-service:8080\"\n      jenkinsTunnel: \"jenkins-service:50000\"\n      skipTlsVerify: false\n      useJenkinsProxy: false\n      maxRequestsPerHost: 32\n      name: \"kubernetes\"\n      readTimeout: 15\n      podLabels:\n        - key: jenkins\n          value: agent\n...\n```", "```\n$ kubectl cluster-info | grep \"control plane\"\nKubernetes control plane is running at https://35.224.6.58\n```", "```\n$ sed -i 's/<kubernetes_control_plane_ip>/actual_ip/g' casc.yaml\n```", "```\n  - kubernetes:\n...\n      templates:\n      - name: \"jenkins-agent\"\n        label: \"jenkins-agent\"\n        hostNetwork: false\n        nodeUsageMode: \"NORMAL\"\n        serviceAccount: \"jenkins\"\n        imagePullSecrets:\n          - name: regcred\n        yamlMergeStrategy: \"override\"\n        containers:\n\t   ...\n```", "```\n\t   ...\n        containers:\n        - name: jnlp\n          image: \"<your_dockerhub_user>/jenkins-jnlp-kaniko\"\n          workingDir: \"/home/jenkins/agent\"\n          command: \"\"\n          args: \"\"\n          livenessProbe:\n            failureThreshold: 1\n            initialDelaySeconds: 2\n            periodSeconds: 3\n            successThreshold: 4\n            timeoutSeconds: 5\n        volumes:\n          - secretVolume:\n              mountPath: /kaniko/.docker\n              secretName: regcred\n```", "```\n$ sed -i 's/<your_dockerhub_user>/actual_dockerhub_user/g' casc.yaml\n```", "```\nFROM jenkins/jenkins\nENV CASC_JENKINS_CONFIG /usr/local/casc.yaml\nENV JAVA_OPTS -Djenkins.install.runSetupWizard=false\nCOPY casc.yaml /usr/local/casc.yaml\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/plugins.txt\n```", "```\n$ docker build -t <your_dockerhub_user>/jenkins-controller-kaniko .\n```", "```\n$ docker login\n$ docker push <your_dockerhub_user>/jenkins-controller-kaniko\n```", "```\n$ cd ~/modern-devops/ch11/jenkins/jenkins-agent\n```", "```\nFROM gcr.io/kaniko-project/executor:v1.13.0 as kaniko\nFROM jenkins/inbound-agent\nCOPY --from=kaniko /kaniko /kaniko\nWORKDIR /kaniko\nUSER root\n```", "```\n$ docker build -t <your_dockerhub_user>/jenkins-jnlp-kaniko .\n$ docker push <your_dockerhub_user>/jenkins-jnlp-kaniko\n```", "```\n$ cd ~/modern-devops/ch11/jenkins/jenkins-controller\n```", "```\n$ kubectl apply -f jenkins-sa-crb.yaml\n```", "```\n$ kubectl apply -f jenkins-pvc.yaml\n```", "```\n$ kubectl create secret docker-registry regcred --docker-username=<username> \\\n--docker-password=<password> --docker-server=https://index.docker.io/v1/\n```", "```\n$ sed -i 's/<your_dockerhub_user>/actual_dockerhub_user/g' jenkins-deployment.yaml\n```", "```\n$ kubectl apply -f jenkins-deployment.yaml\n```", "```\n$ kubectl apply -f jenkins-svc.yaml\n```", "```\n$ kubectl get svc jenkins-service\nNAME             EXTERNAL-IP               PORT(S)\njenkins-service  LOAD_BALANCER_EXTERNAL_IP 8080,50000\n```", "```\nIMAGE_ID=$1 && \\\nIMAGE_TAG=$2 && \\\nexport DOCKER_CONFIG=/kaniko/.dockerconfig && \\\n/kaniko/executor \\\n  --context $(pwd) \\\n  --dockerfile $(pwd)/Dockerfile \\\n  --destination $IMAGE_ID:$IMAGE_TAG \\\n  --force\n```", "```\n$ cp ~/modern-devops/ch11/jenkins/jenkins-agent/build.sh ~/mdo-posts/\n```"]