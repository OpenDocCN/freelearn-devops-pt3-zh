- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: What Does Receiving Support from Leadership and Stakeholders Look Like?
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从领导层和利益相关者那里获得支持是什么样子的？
- en: Establishing a robust DevOps culture necessitates the unwavering backing and
    active involvement of the leadership within the organization. If these individuals
    do not wholeheartedly support and commit to the DevOps initiative, there’s a significant
    chance that it will fail. Undoubtedly, the formation of a culture centered around
    collaboration and communication is contingent upon effective leadership. Leaders
    play a pivotal role in fostering an environment where barriers are eliminated
    and cross-team collaboration is actively encouraged. The leaders of the organization
    are required to fulfill the role of DevOps evangelists, actively advocating for
    the principles and advantages of DevOps. They must effectively communicate the
    rationale behind the implementation of DevOps release management and the potential
    benefits it holds for all stakeholders involved.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 建立一个强大的 DevOps 文化需要组织中领导层的坚定支持和积极参与。如果这些人没有全心全意支持并投入到 DevOps 项目中，项目很可能会失败。毫无疑问，以协作和沟通为核心的文化的形成依赖于有效的领导力。领导者在创造一个消除障碍、积极鼓励跨团队协作的环境中起着至关重要的作用。组织的领导者需要充当
    DevOps 的布道者，积极倡导 DevOps 的原则和优势。他们必须有效地传达实施 DevOps 发布管理的理由以及它对所有利益相关者的潜在好处。
- en: Simultaneously, leadership needs to exercise caution when attempting to implement
    DevOps solely based on theoretical knowledge acquired from literature. DevOps
    is a dynamic and iterative process that undergoes continuous growth and evolution.
    For leadership to develop the appropriate culture, they must hold cognizance of
    the extensive nurturing and perseverance that is required. Neither the DevOps
    methodology nor any one DevOps team is identical to any other; rather, it is an
    organization-specific, solution-driven methodology. Leaders should pave the way
    for autonomous teams to thrive by providing them with the tools they need to succeed
    and by recognizing when to back off and letting them execute their work as respected
    professionals.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，领导层在尝试仅仅基于从文献中获得的理论知识实施 DevOps 时需要保持谨慎。DevOps 是一个动态的、迭代的过程，经历着持续的增长和演变。为了让领导层能够培养出合适的文化，他们必须意识到这需要大量的培养和毅力。DevOps
    方法论或任何一个 DevOps 团队都不是完全相同的；相反，它是一个针对特定组织、以解决方案为驱动的方法论。领导者应当为自主团队的蓬勃发展铺平道路，提供他们成功所需的工具，并认识到何时应当退后一步，允许团队作为受尊敬的专业人士执行他们的工作。
- en: 'In this chapter, you will learn about the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下内容：
- en: Making investments in people and technology that are deftly aligned
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在人员和技术上的投资要精巧对接
- en: Why empowerment, ethics, trust, and patience are highly valued
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么授权、道德、信任和耐心被高度重视
- en: Offering the team autonomy, ownership, and shared responsibility
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供团队自主权、所有权和共同责任
- en: Making customer feedback the center of every strategy
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使客户反馈成为每个战略的核心
- en: Making investments in people and technology that are deftly aligned
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在人员和技术上的投资要精巧对接
- en: It is critical for all business units, including the boardroom and the CEO,
    to have a strong strategic alignment when it comes to investments in technology,
    personnel, and decision-making. Achieving a successful DevOps transformation requires
    that you establish **key performance indicators** (**KPIs**) to adequately measure
    success and foster a more open and honest company. Using data to objectively back
    up your decisions is the best way to promote a company culture where empowerment,
    ethics, trust, and patience are all highly valued. As a leader in your organization,
    you must offer your team autonomy, ownership, and shared responsibility. In addition,
    you must understand the significance of putting the client first in all of your
    solutions-oriented initiatives and actively seek out ways to incorporate customer
    feedback into each decision. All aspects of the organization’s culture, leadership,
    and procedures should adhere to these principles.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术、人员和决策投资方面，所有业务单元，包括董事会和CEO，必须具有强大的战略一致性。实现成功的DevOps转型需要建立**关键绩效指标**（**KPIs**）来充分衡量成功，并促进更加开放和诚实的公司文化。利用数据客观地支持你的决策是推动公司文化发展的最佳方式，这种文化中权力下放、伦理、信任和耐心都受到高度重视。作为组织中的领导者，你必须为团队提供自主权、责任感和共享的责任。同时，你必须理解在所有面向解决方案的倡议中将客户放在首位的重要性，并积极寻找将客户反馈融入每个决策的方式。组织文化、领导力和流程的所有方面都应遵循这些原则。
- en: When embarking on a DevOps transformation, changes should be pushed from the
    top, and they should begin at the bottom. Without support from the top down, cultural
    change is impossible to achieve. However, until change is carried out at the smallest
    possible denominator, it does not propagate across an entire enterprise. Through
    the implementation of DevOps at the team level, teams can demonstrate what is
    possible, identify impediments, and overcome them while the problems are still
    modest and can be managed in a prefatory state. Instead of a single massive implementation,
    effective transformations are more often characterized by a journey of ongoing
    progress.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行DevOps转型时，变革应从高层推动，同时也应从基层开始。没有自上而下的支持，文化变革是不可能实现的。然而，直到变革在最小的可能层面得到实施，它才会在整个企业中扩展。通过在团队层面实施DevOps，团队能够展示可能性，识别障碍并克服它们，同时在问题仍然较小且可以在初始阶段管理时解决它们。有效的转型往往不是通过一次性的大规模实施来完成，而是通过持续进步的过程来实现。
- en: In any DevOps transformation, it is the DevOps team that lays the groundwork
    for everything else to follow while the organizational leadership acts as their
    tailwinds. Every group’s potential to develop and release outstanding software
    is directly proportional to how well they work together as a team. All team members
    must arrive prepared to work together and communicate well. To this end, it is
    paramount that all individuals involved, including developers, testers, operations
    professionals, and security specialists, embrace a mindset that prioritizes collaboration
    to achieve shared objectives.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何DevOps转型中，正是DevOps团队为一切后续工作奠定了基础，而组织领导层则充当他们的助力。每个小组在开发和发布卓越软件的潜力与他们作为团队协作的效果成正比。所有团队成员必须准备好共同工作并进行良好的沟通。为此，所有参与者，包括开发人员、测试人员、运维人员和安全专家，必须树立一种优先考虑协作以实现共同目标的心态。
- en: While cutting-edge technology is certainly not the only factor that is necessary
    for effective teamwork and a flourishing DevOps transformation, it is a necessary
    one. For example, DevOps release managers need tools such as Atlassian Jira to
    enable end-to-end issue tracking or tools such as SigNoz for comprehensive application
    monitoring. To ensure that a CI/CD operation is successful, all team members must
    have access to resources that maximize their contributions to the delivery process.
    Concurrently, teammates require resources such as Slack to enable intuitive communication
    with one another, synergizing their work environment.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前沿技术显然不是有效团队合作和成功的DevOps转型所需的唯一因素，但它是必要的。例如，DevOps发布经理需要像Atlassian Jira这样的工具来实现端到端的问题追踪，或者像SigNoz这样的工具来进行全面的应用监控。为了确保CI/CD操作的成功，所有团队成员必须能够访问能够最大化其对交付过程贡献的资源。同时，团队成员还需要像Slack这样的资源，以便进行直观的沟通，协同工作环境。
- en: An important factor to consider when putting together tools and technologies
    is to guarantee that the implemented systems provide a significant level of automation.
    In the absence of comprehensive automation, team members are required to carry
    out a multitude of manual and repetitive processes. This can impede the efficiency
    of operations, introduce mistakes, and result in discrepancies among deployment
    environments. A notable example is the security tool called Snyk. It conducts
    automatic vulnerability tests on various aspects such as your code, open source
    dependencies, container images, **Infrastructure as Code** (**IaC**) configurations,
    and cloud environments. Snyk also provides valuable context, prioritization, and
    remediation options. Automation facilitates the standardization of operations
    and enables team members to allocate their efforts toward improvement and innovation,
    resulting in enhanced software quality, expedited delivery, and elevated levels
    of career fulfillment.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在组建工具和技术时，需要考虑的一个重要因素是确保实施的系统能够提供显著的自动化水平。如果缺乏全面的自动化，团队成员将不得不执行大量的手动和重复性操作。这可能会妨碍操作效率，引入错误，并导致部署环境之间的差异。一个值得注意的例子是名为Snyk的安全工具。它会对你的代码、开源依赖、容器镜像、**基础设施即代码**（**IaC**）配置和云环境等多个方面进行自动化漏洞测试。Snyk还提供有价值的上下文、优先级和修复选项。自动化促进了操作的标准化，并使团队成员能够将精力集中在改进和创新上，从而提高软件质量、加快交付速度，并提升职业满足感。
- en: A leading indicator of success is the ability of business executives at all
    levels to fully understand the importance of technology and the people who are
    leveraging it. The wisest CEOs know that the choices they make about investing
    in people and technology have a significant impact on the prosperity of their
    customers and their business models, both existing now and in the future. This
    isn’t an easy feat, considering how often new technology stacks and tools hit
    the market and how that change can impact the members of your team. Simply put,
    the most successful executives offer a fully holistic business perspective across
    people, processes, information, and technology.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的一个领先指标是各级商业高管能够充分理解技术及其应用者的重要性。最睿智的CEO们知道，他们在投资人力和技术方面所做的选择，都会对客户的繁荣以及现有和未来的商业模式产生重大影响。考虑到新技术堆栈和工具频繁进入市场，并且这种变化可能对团队成员产生影响，这可不是一项轻松的任务。简而言之，最成功的高管提供了一个全方位的商业视角，涵盖了人员、流程、信息和技术。
- en: Now that we’ve discussed the importance of aligning your organization effectively,
    let’s turn our attention to the profoundly important duty of empowering your team.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了有效对齐组织的重要性，那么接下来我们来关注一个极为重要的责任——赋能你的团队。
- en: "Why empowerment, ethics, trust, and patience are \Lhighly valued"
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么赋能、伦理、信任和耐心是高度重视的
- en: A strong culture is promoted by leadership in every successful firm that prioritizes
    DevOps release management. These cultures revolve around values such as accountability,
    continuous learning, teamwork, and experimentation. The culture exerts a powerful
    influence and typically determines which personnel are hired and which teams they
    get placed on. There is a prevailing cultural trend in the DevOps world that promotes
    the idea of achieving significant organizational influence through meaningful
    work. In these cases, failure is not regarded as a loss, but rather as a progression
    toward discovering the correct solution.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个优先考虑DevOps发布管理的成功公司，都会由领导力推动强大的企业文化。这些文化围绕着责任感、持续学习、团队合作和实验等价值观展开。文化具有强大的影响力，通常决定了哪些人员被招聘以及他们被分配到哪些团队。在DevOps领域，存在着一种文化趋势，推动通过有意义的工作实现组织内的重大影响力。在这些情况下，失败不被视为损失，而是向发现正确解决方案的进程迈进。
- en: Notably, the DevOps culture is characterized by a significant presence of patience,
    trust, ethics, and empowerment, while simultaneously having limited tolerance
    for waste, inefficient decision-making, and bureaucracy. A fundamental virtue
    that all leaders must invoke is the cultivation of receptiveness and admiration
    toward novel ideas, regardless of their seemingly unconventional nature.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，DevOps文化的特点是显著的耐心、信任、伦理和赋能，同时对浪费、低效决策和官僚主义的容忍度较低。所有领导者必须秉持的一个基本美德是培养对新想法的开放性和尊重，无论这些想法看起来多么不拘一格。
- en: Communication in a DevOps environment
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在DevOps环境中的沟通
- en: The key to successful communication in a DevOps environment is mutual respect
    and trust among team members across all levels. This necessitates honoring both
    complementary and contrasting personality traits. Everyone deserves to be trusted
    and respected, regardless of their cultural background, personal experiences,
    learning style, problem-solving abilities, education, or employment history. Your
    fellow teammates will gradually gain trust in one another as they work together,
    in a mutually supportive and encouraging atmosphere, though it will take some
    time.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps环境中，成功沟通的关键是团队成员之间在各个层次上的相互尊重和信任。这要求尊重互补和对立的个性特征。每个人都应得到信任和尊重，无论他们的文化背景、个人经历、学习方式、解决问题的能力、教育或工作经历如何。当团队成员在互相支持和鼓励的氛围中一起工作时，他们会逐渐建立信任，尽管这需要一些时间。
- en: Auspiciously, team members have the opportunity to develop respect and confidence
    in one another through education and training initiatives. They can learn to listen
    to one another with greater consideration and to overcome interpersonal disputes
    by practicing mindfulness, for instance. To be sure, employees need to feel respected
    and valued by leadership in their workplace. Staff members are less inclined to
    treat one another with dignity if they see that their supervisors do not reciprocate.
    No team can thrive in an atmosphere that constantly places blame or fails to acknowledge
    team members’ contributions. There has to be an ethos of mutual respect and trust
    embedded into the institutional fabric at all levels of an organization.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，团队成员通过教育和培训计划有机会相互建立尊重和信任。他们可以学习更加体谅地倾听彼此，并通过练习正念来克服人际争执。例如，员工需要感到在工作场所中受到领导的尊重和重视。如果员工看到上级没有给予同样的尊重，他们就不太可能相互以尊严对待。没有团队能够在不断指责或未能认可成员贡献的氛围中茁壮成长。必须在组织的各个层面融入相互尊重和信任的文化。
- en: As part of the DevOps engineering culture, teams must take control of tasks
    that were previously handled by other departments. Having the authority to put
    changes into production requires engineering teams to ensure that testing, risk
    management, and escalation methods are in place by implementing controls into
    their processes. From the very beginning, control must be a part of the process
    and leadership must support it. Automation is a huge boon, but the digitization
    of mundane, time-consuming activities is just one part of the puzzle. The goal
    is to rethink the implementation of controls in such a way that they occur naturally
    within the process, unprompted by outside forces, thus eliminating bottlenecks,
    bureaucracy, and ivory towers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作为DevOps工程文化的一部分，团队必须掌控之前由其他部门处理的任务。拥有将变更推向生产环境的权限要求工程团队确保通过在流程中实施控制措施来保证测试、风险管理和升级方法的到位。从一开始，控制就必须是流程的一部分，领导层必须支持这一点。自动化是一个巨大的福音，但数字化日常繁琐、耗时的活动只是拼图的一部分。目标是重新思考控制的实施方式，使其在流程中自然发生，而不是依赖外部力量的推动，从而消除瓶颈、官僚主义和象牙塔。
- en: Companies have long relied on audit-based control frameworks to build trust,
    with the goals of enhancing quality, assurance, security, compliance, and risk
    reduction through the use of checklists and audits. The DevOps release management
    methodology is different; automation plays a crucial role in DevOps cultures by
    facilitating the adoption, acceptance, and integration of automated processes
    in both business and technical domains. Within these firms, automation is not
    perceived as a risk, but rather as a strategic optimization approach that offers
    opportunities for advancement and professional growth. Leadership can trust product
    teams to be mindful of organization-wide concepts and standards through the use
    of automated control functions. Earning trust takes time, but it typically happens
    swiftly when teams work together and show success with modest pilots before expanding.
    With this level of confidence, product teams will be able to make the right changes
    for the company without jeopardizing its security or the ability to get along
    with one another.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 公司长期以来依赖基于审计的控制框架来建立信任，目标是通过使用检查表和审计来提升质量、保证、安全、合规性和风险降低。DevOps发布管理方法则有所不同；自动化在DevOps文化中发挥着至关重要的作用，帮助促进自动化流程在商业和技术领域的采用、接受和整合。在这些公司中，自动化并不被视为风险，而是作为一种战略优化方法，为职业发展和提升提供了机会。领导层可以信任产品团队通过使用自动化控制功能来关注组织范围的概念和标准。建立信任需要时间，但当团队合作并通过小规模试点展示成功后，通常会迅速实现。有了这种信任，产品团队将能够在不危及公司安全或彼此和谐的情况下，做出正确的改变。
- en: Understanding why building trust is the key to your success
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解为什么建立信任是成功的关键
- en: Modifying the culture of a business is a difficult task, which may explain why
    it is more convenient to prioritize automation and monitoring activities initially.
    One of the most insurmountable challenges of implementing DevOps is altering company
    culture. You must collaborate with individuals who might require adjustments to
    deeply ingrained habits that have been developed over extended periods, maybe
    spanning several decades. Perhaps it is those practices that got them to where
    they are now and have earned them respect. It will require a considerable amount
    of time to establish a new organizational culture centered around autonomy and
    empowerment by altering habits. Truly, it’s highly unlikely that you will be able
    to predict the exact duration or completion date in advance.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 改变企业文化是一项艰巨的任务，这也许可以解释为什么最初优先考虑自动化和监控活动会更为方便。实施DevOps的最大挑战之一就是改变公司文化。你必须与那些可能需要调整根深蒂固的习惯的人合作，这些习惯经过了很长时间的培养，可能跨越了几十年。或许正是这些习惯使他们取得了如今的成就，并赢得了尊重。建立一个以自主和赋能为核心的新组织文化，需要花费大量时间，尤其是通过改变习惯来实现这一点。事实上，几乎不可能预测确切的时间或完成日期。
- en: 'Fortunately, most individuals in a professional setting prefer to operate independently.
    They appreciate the ability to make independent choices. They have a strong desire
    to enhance their skills and find meaning in their work. So, the question is: How
    can we achieve that? What steps can you take to ensure that your company’s culture
    is in sync with the demands of contemporary businesses? Trust plays an essential
    part in facilitating your DevOps transformation.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，大多数专业环境中的个体倾向于独立工作。他们欣赏能够做出独立选择的能力。他们有强烈的愿望提升自己的技能，并在工作中找到意义。那么，问题是：我们如何实现这一目标？你可以采取哪些步骤来确保公司文化与当代企业的需求保持一致？信任在促进你的DevOps转型中扮演着至关重要的角色。
- en: 'In this section, we will discuss the results that you will yield from a lack
    of trust within your organization. Patrick Lencioni identifies a lack of trust
    as the fundamental cause of numerous organizational problems in his book *The
    Five Dysfunctions of* *a Team*:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论缺乏信任会给你的组织带来的结果。帕特里克·兰乔尼在他的书《*团队的五大功能障碍*》中指出，缺乏信任是众多组织问题的根本原因：
- en: '![Figure 10.1: The Five Dysfunctions of a Team, by Patrick Lencioni](img/B21803_10_1.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1：团队的五大功能障碍，帕特里克·兰乔尼著](img/B21803_10_1.jpg)'
- en: 'Figure 10.1: The Five Dysfunctions of a Team, by Patrick Lencioni'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1：团队的五大功能障碍，帕特里克·兰乔尼著
- en: For example, at *Bold Ventures LLC*, a company without trust, individuals tend
    to steer clear of confrontations. Employees avoid engaging in challenging discussions
    and decision-making, likely due to a fear of speaking up. Consequently, individuals
    who were not actively involved in the decision-making process may not fully commit
    to the agreed-upon goals. Phrases such as *they decided*, instead of *we decided*,
    are often used to highlight the absence of active involvement in the decision-making
    process. Coworkers evade responsibility for matters they are not dedicated to,
    because *it was their choice*, not *it was our choice*. Ultimately, employees
    may not prioritize the organization’s performance if they are not involved in
    the decision-making process or the subsequent actions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在*Bold Ventures LLC*公司，一个缺乏信任的公司中，个人往往会避免面对冲突。员工避免参与具有挑战性的讨论和决策，可能是因为害怕发声。因此，未积极参与决策过程的个人可能不会全力以赴地投入到商定的目标中。像*他们决定*而不是*我们决定*这样的说法，常常被用来强调在决策过程中缺乏积极参与。因为*这是他们的选择*，而不是*这是我们的选择*，同事们避免为自己不专注的事务负责。最终，如果员工没有参与决策过程或后续的行动，他们可能不会把公司业绩放在首位。
- en: Organizations that operate without trust end up wasting valuable resources.
    Despite hiring intelligent individuals and offering competitive salaries, *Bold
    Ventures LLC* struggled to fully utilize its entire workforce. Deployments were
    incredibly simple and quick in the previous examples since the team had completely
    automated their CI/CD pipeline. Despite the significant gains in efficiency brought
    about by the high level of automation, the company culture had forbidden them
    from implementing any modifications to the production systems unless they went
    through a formal approval process.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 没有信任的组织最终会浪费宝贵的资源。尽管聘用了聪明的员工并提供了具有竞争力的薪资，*Bold Ventures LLC*仍然难以充分发挥整个劳动力的潜力。在前面的例子中，由于团队已完全自动化了他们的CI/CD流水线，因此部署非常简单且迅速。尽管高水平的自动化带来了显著的效率提升，但公司文化却禁止他们对生产系统进行任何修改，除非通过正式的审批流程。
- en: You can’t put a price on trust. Whenever we do or do not experience it, we are
    aware of its presence, or lack thereof. Dr. Duane C. Tway published a seminal
    piece on the subject in 1993 titled *A Construct of Trust*. In it, Dr. Tway defined
    trust as “*The state of readiness for unguarded interaction with someone* *or
    something.*”
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你无法为信任定价。无论我们是否体验到信任，我们都会意识到它的存在或缺失。杜安·C·特威博士在1993年发表了一篇关于这一主题的开创性文章，标题为《信任的构建》。在文章中，特威博士将信任定义为“*与某人*或*某物*进行无防备互动的准备状态。”
- en: 'According to Dr. Tway, there are only *three* main components that are used
    to “construct” trust:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 根据特威博士的观点，构建信任只有*三个*主要组件：
- en: '**The capacity for trust** is determined by the cumulative impact of your previous
    experiences on your current readiness and ability to take risks in trusting others.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信任的能力**由你之前的经验对你当前准备和能力的累积影响所决定，这些能力使你能够在信任他人时承担风险。'
- en: '**The perception of competence** refers to your assessment of your own and
    your colleagues’ capability to effectively accomplish the necessary tasks in the
    present circumstances.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**能力的感知**指的是你对自己和同事在当前情况下有效完成必要任务的能力的评估。'
- en: '**The perception of intentions** refers to your ability to perceive if actions,
    words, direction, mission, and decisions are driven by reasons that benefit both
    parties involved, rather than being driven by motives that just serve oneself.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**意图的感知**指的是你能否感知到行动、言语、方向、使命和决策是否由有利于双方的原因驱动，而不是单纯为自己服务的动机驱动。'
- en: 'While trust is subjective to each person, a culture of trust pertains to the
    entire business. DevOps release management presents an excellent opportunity to
    examine Dr. Tway’s concept of trust and pinpoint incremental yet significant chances
    to progressively enhance the trust between the development, operations, and other
    teams in your business. To achieve this, your company culture must encompass the
    following traits:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然信任对每个人来说都是主观的，但信任文化则关乎整个企业。DevOps发布管理为检验特威博士的信任概念提供了一个绝佳的机会，可以发现逐步提升开发、运维及公司其他团队间信任的微小却重要的机会。要实现这一点，贵公司的文化必须具备以下特征：
- en: Engage in clear and straightforward communication
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行清晰直接的沟通
- en: Enhance interpersonal engagement
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强人际互动
- en: Commit to fulfilling obligations
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 承诺履行义务
- en: Emphasize the importance of active listening over excessive talking
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强调主动倾听的重要性，而非过度讲话
- en: Share knowledge regularly
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期分享知识
- en: Encourage participation and feedback
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 鼓励参与和反馈
- en: Acknowledge mistakes
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 承认错误
- en: Honoring each other’s successes
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尊重彼此的成功
- en: Successful DevOps transformations necessitate a deep understanding of culture
    and the establishment of a trust-based organizational structure. Look for other
    ways to foster a culture at your organization that is characterized by *the state
    of readiness for unguarded interaction with someone or something.* Strive to implement
    ways to enhance trust, competence, and intentions by initiating an open and transparent
    conversation with your development and operations teams. By doing so, you might
    be surprised at how quickly you can begin the process of building a meaningful
    and trusting work environment.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的DevOps转型需要深入理解文化，并建立基于信任的组织结构。寻找其他方法，在你的组织中培养一种*准备好与某人或某物进行无防备互动的状态*的文化。努力通过与开发和运维团队开展开放透明的对话，增强信任、能力和意图。通过这样做，你可能会惊讶地发现，自己能够多么迅速地开始建立一个有意义和可信赖的工作环境。
- en: Leaders of DevOps establishments require soft skills
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps组织的领导者需要软技能
- en: In many leadership roles, the importance of people management skills is often
    underestimated or disregarded. In certain instances, an observable phenomenon
    arises within the context of startup companies, wherein the selection of a chief
    technology officer or an engineering lead position is predicated solely upon the
    individual’s seniority or technical prowess, with little consideration given to
    their aptitude for personnel management or their inclination toward assuming such
    a role. Frequently, the individual assuming the leadership position within a DevOps
    team is appointed based on their prior achievements in software development. However,
    it is not uncommon for these individuals to possess insufficient proficiency in
    the essential non-technical disposition encompassing effective communication,
    conflict resolution, and collaborative teamwork.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多领导职位中，人际管理技能常常被低估或忽视。在某些情况下，初创公司中会出现这样一种现象：选择首席技术官或工程负责人时，往往仅根据个人的资历或技术能力来做决定，而很少考虑到他们的人员管理能力或是否愿意承担此类角色。经常会出现这样的情况，DevOps团队的领导者是根据他们在软件开发中的成就来任命的。然而，这些人往往在必要的非技术性素质上存在不足，包括有效的沟通、冲突解决和协作能力。
- en: Naturally, in the ranks of DevOps leadership, possessing soft skills is of paramount
    importance. These skills comprise various abilities, such as critical thinking
    and project management, coupled with enough emotional intelligence. The possession
    of these skills enables DevOps leaders to effectively inspire, motivate, and retain
    a team composed of intelligent engineers. To effectively lead a team, a leader
    must be able to discern the strengths and weaknesses of their team members. Additionally,
    a leader must exhibit active listening skills and possess the capacity to influence
    others. By doing so, a leader can create an environment that nurtures the growth
    and development of their team members, thereby enabling them to achieve success.
    In the context of this position, a notable challenge lies in the requirement for
    an optimal combination of technical proficiency and interpersonal aptitude, necessitating
    a delicate equilibrium between the two.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，在DevOps领导层中，拥有软技能至关重要。这些技能包括批判性思维、项目管理等多种能力，并结合足够的情商。这些技能使DevOps领导者能够有效地激励、激发和留住由智能工程师组成的团队。为了有效领导团队，领导者必须能够辨识团队成员的优点和不足。此外，领导者还必须展现出主动倾听的能力，并具备影响他人的能力。通过这样做，领导者可以创造一个培养团队成员成长与发展的环境，从而帮助他们取得成功。在这个职位的背景下，一个显著的挑战是技术能力和人际交往能力的最佳组合，这需要在两者之间找到微妙的平衡。
- en: Regrettably, the emphasis on soft skills has not been given due importance in
    training and career advancement for most software engineers. Historically, these
    skills were considered optional rather than fundamental prerequisites for the
    respective positions. Over time, the prevailing emphasis has been placed on the
    acquisition and mastery of technical skills within software engineering firms,
    neglecting these key communication skills. Consequently, other critical aspects
    that offer the potential to elevate a software engineer to a higher echelon have
    been senselessly neglected. Specifically, the focus has often been diverted away
    from the cultivation of soft skills, which are instrumental in fostering leadership
    capabilities. Nevertheless, the issue is more complex than it seems as many employers
    assert that most college graduates do not acquire these essential soft skills
    during their academic tenure. Fortunately, in the contemporary times that we live
    in, there has been a shift in the perception of soft skills within the context
    of hiring new engineering talent and their significance within organizations.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，软技能在大多数软件工程师的培训和职业晋升中并未得到应有的重视。历史上，这些技能曾被视为可选的，而非各自职位的基本前提。随着时间的推移，软件工程公司更多地强调技术技能的获取和掌握，忽视了这些关键的沟通技能。因此，其他一些能够将软件工程师提升到更高层次的关键方面也被无意义地忽视了。具体来说，焦点常常被偏离了软技能的培养，而这些技能在培养领导能力方面起着重要作用。然而，这个问题比看起来更为复杂，因为许多雇主宣称，大多数大学毕业生在学术期间并未获得这些必备的软技能。幸运的是，在我们所处的现代社会中，关于软技能的认知已经发生了变化，尤其是在招聘新工程人才及其在组织中的重要性方面。
- en: Now that we have placed a spotlight on the importance of key soft skills that
    all DevOps leaders should possess, let’s build on this further. In the next section,
    we will explore the value of giving team members a sense of personal ownership
    over their work. This involves a careful balance of holding your team accountable,
    but also giving them liberty, letting them be accountable to themselves.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经将焦点放在了所有 DevOps 领导者应具备的关键软技能上，接下来我们进一步探讨。在下一部分中，我们将探讨赋予团队成员对工作有个人责任感的价值。这需要在让团队负责的同时，也给予他们自由，让他们对自己负责。
- en: "Offering the team autonomy, ownership, \Land shared responsibility"
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供团队自主权、责任感和共同责任
- en: DevOps leaders can empower their teams by promoting ownership and fostering
    teamwork. However, it is crucial to recognize the importance of understanding
    and maintaining the appropriate degree of intensity for each project. To prevent
    burnout and animosity, leaders must possess a comprehensive operational awareness
    of the actual working conditions, their context, and the strategic approach required.
    A leader must possess the knowledge of when to strategically utilize intense sprints
    and when to exercise restraint and reallocate resources. In other words, a leader
    must make intelligent decisions on the utilization of available resources with
    empathy in mind.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 领导者可以通过促进团队的责任感和培养团队合作来赋能团队。然而，关键是要认识到理解和维持每个项目适当的强度程度的重要性。为了防止精疲力尽和敌意，领导者必须具备对实际工作条件、背景以及所需战略方法的全面运营意识。领导者必须知道何时战略性地利用高强度的冲刺，何时应当克制并重新分配资源。换句话说，领导者必须在使用现有资源时做出明智的决策，并考虑到同理心。
- en: Instilling a sense of autonomy, ownership, and empowerment within the DevOps
    team is one of the most critical elements that a leader can do to establish an
    atmosphere that is characterized by trust, respect, and empathy. The members of
    the team should be able to conduct their work with sufficient autonomy so that
    they can complete their tasks as effectively and efficiently as possible. Even
    though this does not imply that they are free to do anything they choose, it does
    imply that they can determine what it will take to provide software that complies
    with the overall objectives of the project.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 团队中培养自主性、责任感和赋能感是领导者能够为建立一个充满信任、尊重和同理心的氛围所做的最关键的工作之一。团队成员应该能够在充分的自主权下开展工作，以便能够尽可能高效和有效地完成任务。尽管这并不意味着他们可以随心所欲地做任何事情，但它意味着他们可以决定如何提供符合项目整体目标的软件。
- en: In an ideal DevOps establishment, every member of the team is involved in every
    step of an application’s life cycle, from planning and design to testing and deployment.
    Everyone is concerned about the results and knows that they stand to gain from
    the application’s efficient and rapid delivery. For example, development should
    not dump their release onto the shoulders of operations personnel and then walk
    away. Strategically, the key to success is giving the team the freedom and responsibility
    to find out how to deliver their applications effectively, while simultaneously
    avoiding complex approval processes that might bog down operations.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的 DevOps 组织中，团队的每个成员都参与到应用程序生命周期的每个步骤，从规划和设计到测试和部署。每个人都关心结果，并且知道他们将从应用程序的高效和快速交付中受益。例如，开发人员不应将发布工作推给运维人员，然后就此袖手旁观。从战略上讲，成功的关键是赋予团队自由和责任，让他们找到如何有效交付应用程序的方法，同时避免复杂的审批流程，避免拖慢运维进程。
- en: As a DevOps team progresses in its journey toward autonomy and assumes more
    ownership over its projects, the team members should gradually develop a heightened
    sense of collective accountability for the overall operation. In the contemporary
    landscape of software engineering, leadership must eliminate the existence of
    isolated silos between the boundaries of development and operations. Instead,
    a profound understanding must be fostered, acknowledging the interdependence of
    these domains and their shared commitment to achieving optimal results. To achieve
    this, it is paramount that the entire team has a deep understanding and appreciation
    of the customer requirements. In the same vein, they must also possess a comprehensive
    understanding of the technical elements that are required for successful development.
    This mutual appreciation and understanding between all parties involved is crucial
    for the overall success of any project or endeavor.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 DevOps 团队在迈向自主性并承担更多项目责任的过程中，团队成员应逐渐培养对整体运作的高度集体责任感。在当代软件工程的背景下，领导层必须消除开发和运维之间的孤岛现象。相反，必须培养一种深刻的理解，承认这些领域的相互依赖性及其共同致力于实现最佳结果的承诺。为了实现这一点，整个团队必须深刻理解并欣赏客户需求。与此同时，他们还必须全面了解成功开发所需的技术元素。这种各方之间的相互欣赏和理解对于任何项目或事业的成功至关重要。
- en: To foster a collective sense of responsibility, leadership needs to steer the
    team clear of engaging in blame-oriented politics and instead focus on collaborative
    efforts aimed at effective problem-solving and enhancing processes. In the framework
    of collaborative work, team members must acknowledge the intricate web of interdependencies
    that exist among their respective roles and tasks. It is crucial to comprehend
    that any misstep or error committed during their work has the potential to reverberate
    across the entire team, impacting every individual involved. Simultaneously, it
    is fundamental to foster an environment that promotes the investigation of novel
    procedures and technologies, as well as questioning the prevailing methodologies,
    without succumbing to the fear of failure. When individuals collectively assume
    the risks associated with a particular endeavor, they concurrently assume the
    responsibility for ensuring optimal outcomes while avoiding animosity.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了培养集体责任感，领导层需要引导团队远离指责导向的政治，而应专注于以协作努力为基础的有效问题解决和流程优化。在协作工作的框架下，团队成员必须意识到他们各自角色和任务之间错综复杂的相互依赖关系。至关重要的是，要理解在工作中任何失误或错误都可能波及整个团队，影响每个相关人员。同时，必须营造一种氛围，鼓励探索新流程和技术，质疑现有的方法论，而不是因失败的恐惧而退缩。当每个人共同承担某个特定任务的风险时，他们也同时承担了确保最佳结果的责任，同时避免敌对情绪。
- en: Now that we have emphasized the importance of promoting a culture of autonomy,
    ownership, and empowerment within your DevOps team, let’s amplify this theme even
    further. In the next section, we’ll discuss how to place customer feedback at
    the center of every move that your team makes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经强调了在 DevOps 团队中推动自主性、责任感和授权文化的重要性，那么接下来让我们进一步强调这个主题。在下一部分中，我们将讨论如何将客户反馈置于团队每一个行动的核心。
- en: Making customer feedback the center of every strategy
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将客户反馈作为每个策略的核心
- en: Feedback loops play a crucial role in facilitating modern delivery. To establish
    a connection between consumers and DevOps release management, it is prudent that
    you prioritize user delivery requirements by enhancing and reducing the duration
    of your feedback loops. Every DevOps process should strive for expedited response
    times and uninterrupted release cycles that are driven by user demands and usage
    patterns. The utilization of feedback loops will enhance your data-driven decision-making
    process, enabling the achievement of unprecedented levels of accuracy and swift
    adaptation to a wider range of events, factors, and requirements. In the context
    of such new feedback-loop-empowered analytics, those who are courageous and inquisitive
    will be the ones to lead the creation of value.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈循环在促进现代交付方面起着至关重要的作用。为了建立消费者与DevOps发布管理之间的连接，您应该优先考虑用户交付需求，通过增强并缩短反馈循环的时长来优化这一过程。每个DevOps流程都应力求实现更快速的响应时间和不间断的发布周期，这些都应由用户需求和使用模式驱动。利用反馈循环将增强您的数据驱动决策过程，使您能够在准确性和快速适应更广泛的事件、因素及需求方面达到前所未有的水平。在这种新的反馈循环驱动的分析背景下，勇于探索和好奇的人将成为创造价值的领导者。
- en: What is a feedback loop?
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是反馈循环？
- en: A fundamental tenet of systems thinking and an integral component of your company’s
    success requires comprehending and correctly applying DevOps feedback loops. As
    a leader and DevOps specialist, your main goal should be to make the connection
    between development and IT processes as friction-free as possible. However, understanding
    the impact that feedback loops have on your company’s process is the first step
    to cultivating a positive working relationship among these two business groups.
    Nevertheless, one of the most frequently used terms in the field of DevOps, *feedback
    loops*, is a concept that is sometimes misunderstood. What is a feedback loop
    and how does it function?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 系统思维的一个基本原则以及贵公司成功的关键组成部分是理解并正确应用DevOps反馈循环。作为领导者和DevOps专家，您的主要目标应是尽可能减少开发和IT流程之间的摩擦。然而，理解反馈循环对公司流程的影响是促进这两个业务组之间积极合作的第一步。尽管如此，在DevOps领域中，*反馈循环*是一个常被误解的概念。什么是反馈循环，它是如何运作的？
- en: 'According to the American Heritage Dictionary, *feedback* can be described
    as “*The return of a portion of the output of a process or system to the input,
    especially when used to maintain performance or to control a system or process.*”
    (The American Heritage Dictionary entry: feedback.) On the other hand, a *loop*
    is described as “*Something having a shape, order, or path of motion that is circular
    or curved over on itself.*” (The American Heritage Dictionary entry: loop.) Therefore,
    a feedback loop is defined as “*The section of a control system that allows for
    feedback and self-correction and that adjusts its operation according to differences
    between the actual and the desired or optimal output.*” (The American Heritage
    Dictionary entry: feedback loop.) It is this definition that is derived from the
    combination of the two concepts. Simply put, feedback loops are an introspective
    evaluation of the functioning of teams, systems, and users, measured by both qualitative
    and quantitative analysis.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 根据《美国遗产词典》，*反馈*可以描述为“*将部分输出返回到过程或系统的输入，尤其是用来保持性能或控制系统或过程的作用。*”（《美国遗产词典》条目：反馈）。另一方面，*循环*被描述为“*某物具有形状、顺序或运动路径，并且是圆形或弯曲回自身的。*”（《美国遗产词典》条目：循环）。因此，反馈循环被定义为“*控制系统中允许反馈和自我修正的部分，并根据实际输出和期望或最佳输出之间的差异调整其操作。*”（《美国遗产词典》条目：反馈循环）。这个定义是通过结合这两个概念得出的。简单来说，反馈循环是对团队、系统和用户功能的自我评估，衡量标准包括定性和定量分析。
- en: Industry insiders and IT gurus concur that *feedback loops* help maintain focus
    on priorities and project goals, ensuring that the development process remains
    on track and doesn’t lose sight of its objectives. Connecting the two DevOps business
    segments mentioned previously is the sole purpose of this framework. Implementing
    a process where changes in one unit trigger changes in another unit, which in
    turn triggers changes in the first unit, is essentially what this accomplishes.
    Because of this, a business may quickly and accurately make the required adjustments
    in a data-driven manner. When it comes to information technology, the utilization
    of a feedback loop to gather data and establish a continuous flow of information
    will yield meaningful growth on a massive scale.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 行业内部人士和 IT 大咖一致认为，*反馈循环*有助于保持对优先事项和项目目标的关注，确保开发过程保持正轨，不偏离目标。将之前提到的两个 DevOps
    业务领域联系起来，就是这个框架的唯一目的。实现一个流程，其中一个单元的变化触发另一个单元的变化，进而又触发第一个单元的变化，实际上就是这个目标的实现。正因如此，企业可以快速而准确地以数据驱动的方式做出所需的调整。在信息技术领域，利用反馈循环收集数据并建立持续的信息流将带来大规模的有意义增长。
- en: 'You can divide your customer feedback loop into four distinct components:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将客户反馈循环分为四个不同的组件：
- en: Gathering feedback from customers
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集客户反馈
- en: Analyzing the data from customer feedback
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析客户反馈数据
- en: Applying the feedback and using it as a starting point for testing
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用反馈并以此为测试的起点
- en: Retaining customer relationships and gathering follow-up feedback
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持客户关系并收集后续反馈
- en: One compelling rationale for implementing DevOps feedback loops is to effectively
    bridge the divide that often exists between the functionality of software and
    the expectations of customers. Given this context, a feedback loop might be defined
    as a systematic approach to maximizing the effectiveness of change. Next, we’ll
    discuss practical techniques that you can use to collect customer feedback so
    that you can begin incorporating it into your decision-making process.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 实施 DevOps 反馈循环的一个重要理由是有效地弥合软件功能与客户期望之间常常存在的鸿沟。在这种背景下，反馈循环可以定义为最大化变更效果的系统化方法。接下来，我们将讨论一些实际的技巧，帮助你收集客户反馈，并将其纳入决策过程。
- en: Collecting customer feedback the DevOps way
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以 DevOps 方式收集客户反馈
- en: The convergence of customer support and DevOps has become a pivotal change in
    thinking, requiring a novel approach to leadership in customer support due to
    its distinct complexities. This is to say, the merger of customer support and
    DevOps is the catalyst for extraordinary outcomes. The focus is no longer solely
    on the rapid development and deployment of a product, but rather on guaranteeing
    its ongoing optimal performance and delivering exceptional client experiences.
    It is not solely about fixing problems; it is about taking proactive measures
    to guarantee that the customer experience stays great, especially in the face
    of rapid technological advancements.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 客户支持与 DevOps 的融合已经成为思维方式的一个关键变化，由于其独特的复杂性，这要求在客户支持领导力方面采用全新的方法。换句话说，客户支持与 DevOps
    的融合是卓越成果的催化剂。重点不再单纯是产品的快速开发和部署，而是确保其持续的最佳性能并提供卓越的客户体验。这不仅仅是解决问题，更是采取主动措施，确保客户体验始终保持出色，尤其是在快速发展的技术面前。
- en: Historically, customer support has been perceived, among other things, as an
    emergency response, intervening to address problems after they have occurred.
    Nevertheless, the emergence of DevOps release management has radically altered
    this relationship. Now, the role includes actively guaranteeing availability,
    stability, communication, and performance. It involves anticipating problems and
    obstacles before they occur and adapting seamlessly to the ever-changing environment
    of contemporary enterprises. Customers want seamless omnichannel experiences that
    allow them to engage with a company’s website, chatbot, live chat, interactive
    voice response, live voice agent, email, SMS, embedded within the applications
    themselves, or other communication channels and potentially all of them. Customers
    want a smooth and uninterrupted experience in which every communication channel
    possesses knowledge of their circumstances and past interactions, eliminating
    the need for them to reiterate their details and concerns.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: The technological framework necessary to establish connections across isolated
    channels and transfer client data between these channels is quite intricate. As
    an illustration, the **Interactive Voice Response** (**IVR**) channel necessitates
    not just an IVR voice portal, but also VoiceXML apps, speech recognition, text-to-speech,
    and IP telephony. To establish a connection between an IVR system and another
    channel, it is typically necessary to link it with a **customer relationship management**
    (**CRM**) system, **Computer Telephony Integration** (**CTI**) for screen pop
    functionality to a live agent, an eCommerce application, and other relevant components,
    all hosted in the cloud. IVRs, specifically, are often backed by outdated technologies
    that are delicate and prone to breaking. Integrating outdated technologies with
    different communication platforms poses a significant difficulty.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: However, within a DevOps setting, where the integration between development
    and operations is seamless, the nature of customer support undergoes a significant
    transformation. Customer support today plays a crucial role in every stage of
    the product life cycle, including development, deployment, and beyond. DevOps
    and customer support frequently communicate using distinct terminologies. Developers
    discuss the concepts of CI/CD, whereas support teams prioritize **service-level
    agreements** (**SLAs**) and customer happiness. Customer support executives have
    a responsibility to serve as intermediaries, converting technical terminology
    into language that is focused on the needs and preferences of the customers. By
    cultivating a culture of reciprocal awareness, you can guarantee that DevOps choices
    are in harmony with the requirements of customers.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: SLAs
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: A SLA is a contract that outlines the responsibilities and expectations between
    a service provider and a customer. The service provider and service user agree
    on specific aspects of the service, such as quality, availability, and responsibilities.
    The most vital aspect of a SLA is ensuring that the services are delivered to
    the customer according to the terms of the contract.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: To accomplish this, the leadership of customer support in a DevOps context requires
    in-depth technical knowledge in addition to other skills. Having a profound comprehension
    of the human part is essential for this. A culture of trust and collaboration
    is fostered when there is empathy for both the consumers and the members of the
    team. It is about giving people the ability to accept responsibility for their
    actions and come up with creative solutions. This calls for a change in perspective,
    a change in mentality, and a realignment of the best practices that are currently
    in place.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned repeatedly, automation is the cornerstone of efficiency in an environment
    that revolves around DevOps. In addition to applying to development and operations,
    this also applies to customer support. Nevertheless, it is fundamental that it
    be implemented thoughtfully within the context of customer support operations.
    Undeniably, automation is often implemented to handle regular operations and gather
    data, which you will be able to leverage for freeing up your team to concentrate
    on more complicated issues and high-impact activities, such as providing customers
    with individualized and compassionate help. Keep in mind that the human touch
    is quite vital in contemporary society.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Your ability to discover problems before they affect the consumer can be aided
    by the implementation of automated monitoring and alert systems. Customers should
    be provided with self-service choices, regular operations should be automated,
    and incident management should be streamlined. The goal is to anticipate your
    client’s needs and meet them before they even know what they are.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Incorporating customer feedback into your decision-making processes
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Leverage metrics and real-time monitoring to acquire valuable insights into
    the experiences of your customers. **Customer Satisfaction** (**CSAT**), **Mean
    Time to Resolution** (**MTTR**), and **Net Promoter Score** (**NPS**) are examples
    of crucial performance metrics that should be assessed. By employing a data-driven
    methodology, not only can you assess performance, but you can also ensure that
    each decision is supported by concrete outcomes and that crucial indicators direct
    ongoing enhancement.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: When compared to the other approaches that came before it, one of the most significant
    qualities that sets DevOps release management apart and creates a distinct niche
    for itself is its ability to incorporate feedback from consumers in addition to
    other systems integrating them into the value chain, such as the monitoring system.
    The feedback that is gathered helps bridge the gap between the functionality of
    the software and the expectations of the customer. In addition to this, it offers
    helpful insights into how you can increase the product’s build quality and feature
    set, which will conclusively lead to improvements in its usefulness, dependability,
    and ultimately the bottom line.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的其他方法相比，DevOps 发布管理最显著的特点之一是它能够结合消费者的反馈以及将其他系统（如监控系统）整合到价值链中的能力，这使得它在行业中创造了一个独特的定位。收集到的反馈有助于弥合软件功能与客户期望之间的差距。除此之外，它还提供了关于如何提高产品构建质量和功能集的有益见解，这最终将改善其实用性、可靠性，最终提升公司业绩。
- en: Notably, feedback loops are especially vital in the context of continuous testing.
    To properly conduct ongoing testing, it is not sufficient to simply produce automated
    tests. The more crucial aspect is the visibility of the test results and how they
    can be utilized to improve the current process. To accomplish this, it is necessary
    to obtain thorough feedback regarding the performance of your application at different
    phases of the SDLC, beginning from the development phase and extending until the
    post-production phase. Effectively implementing feedback mechanisms is crucial
    for obtaining comprehensive and detailed feedback.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，反馈循环在持续测试的过程中尤其重要。为了正确进行持续测试，仅仅生成自动化测试是不够的。更重要的方面是测试结果的可见性以及如何利用这些结果来改进当前的流程。为此，有必要在软件开发生命周期的不同阶段收集有关应用程序性能的详细反馈，从开发阶段开始，一直到生产后阶段。有效地实施反馈机制对于获取全面和详细的反馈至关重要。
- en: As a result, feedback loops are what separate assumptions about the way a product’s
    end user might utilize it from the process of carefully enhancing the current
    workflow to better meet the needs of its end users. Utilize the abundance of data
    available to you to facilitate significant transformation. Consistently examine
    this data to detect patterns and determine potential opportunities for enhancing
    your products and services. It is not solely about resolving issues – it is about
    enhancing the overall customer experience as well.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，反馈循环使得产品最终用户如何使用它的假设与仔细改进现有工作流程以更好地满足终端用户需求的过程有所区别。利用大量可用的数据来推动重要的转型。持续审视这些数据，寻找模式并确定可能的提升产品和服务的机会。这不仅仅是解决问题，更是关于提升整体客户体验。
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This concludes [*Chapter 10*](B21803_10.xhtml#_idTextAnchor185). At this point,
    you know why empowerment, ethics, trust, and patience are highly valued in a DevOps-centric
    organization. Additionally, you understand the importance of making investments
    in people and technology that are deftly aligned. You also understand the importance
    of offering the team autonomy, ownership, and shared responsibility during your
    company’s DevOps journey. Finally, you know why it is critical to make customer
    feedback the center of every strategy in your business.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束于[*第10章*](B21803_10.xhtml#_idTextAnchor185)。到此为止，你已经理解为什么在以 DevOps 为中心的组织中，授权、伦理、信任和耐心被高度重视。同时，你也明白了在人员和技术上进行精准投资的重要性。你还理解了在公司
    DevOps 旅程中，给予团队自主权、责任感和共同责任的重要性。最后，你知道为什么将客户反馈作为业务战略的核心至关重要。
- en: While there are no universal solutions for every enterprise, executives who
    prioritize DevOps leverage the necessary organizational changes to reassess structure,
    staffing, metrics for success, and the allocation of tasks and responsibilities
    among team members. Even essential verticals such as expertise in business processes,
    business finance, and emerging roles such as automation engineering, site reliability
    engineering, process owners, and product managers become ubiquitous in a highly
    trained DevOps-centric organization. In addition to numerous other substantive
    characteristics that effective leaders cultivate within the organizations under
    their leadership, the traits discussed in this chapter are commonly found in the
    most successful ones. In the realm of executive decision-making, it is paramount
    for each individual in a leadership position to ascertain their objectives and
    subsequently identify the most optimal DevOps strategy to accomplish their goals.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: In the next and final chapter, we will explore how to overcome the most common
    pitfalls that DevOps release managers face today. We will discuss the likely consequences
    of not having a well-thought-out change management process, why it is ill-advised
    to not follow a release checklist, and the 10 most common pitfalls of DevOps release
    management.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of this chapter:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: The establishment of a robust DevOps culture necessitates what?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leadership needs to exercise caution when attempting to implement DevOps solely
    based on what?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What traits are highly valued in any DevOps enterprise?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What do the most successful executives offer at a DevOps-centric establishment?
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What specific skills are often overlooked by technology leaders and engineers
    alike?
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In an ideal DevOps establishment, every member of the team is involved in what?
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To foster a collective sense of responsibility, leadership needs to do what?
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is a feedback loop?
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What kind of feedback should every DevOps leader incorporate into their decision-making?
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Feedback loops are what separate assumptions about the way a product’s end user
    might utilize it from what?
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
