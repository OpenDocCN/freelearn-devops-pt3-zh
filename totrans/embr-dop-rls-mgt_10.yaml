- en: '10'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What Does Receiving Support from Leadership and Stakeholders Look Like?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Establishing a robust DevOps culture necessitates the unwavering backing and
    active involvement of the leadership within the organization. If these individuals
    do not wholeheartedly support and commit to the DevOps initiative, there’s a significant
    chance that it will fail. Undoubtedly, the formation of a culture centered around
    collaboration and communication is contingent upon effective leadership. Leaders
    play a pivotal role in fostering an environment where barriers are eliminated
    and cross-team collaboration is actively encouraged. The leaders of the organization
    are required to fulfill the role of DevOps evangelists, actively advocating for
    the principles and advantages of DevOps. They must effectively communicate the
    rationale behind the implementation of DevOps release management and the potential
    benefits it holds for all stakeholders involved.
  prefs: []
  type: TYPE_NORMAL
- en: Simultaneously, leadership needs to exercise caution when attempting to implement
    DevOps solely based on theoretical knowledge acquired from literature. DevOps
    is a dynamic and iterative process that undergoes continuous growth and evolution.
    For leadership to develop the appropriate culture, they must hold cognizance of
    the extensive nurturing and perseverance that is required. Neither the DevOps
    methodology nor any one DevOps team is identical to any other; rather, it is an
    organization-specific, solution-driven methodology. Leaders should pave the way
    for autonomous teams to thrive by providing them with the tools they need to succeed
    and by recognizing when to back off and letting them execute their work as respected
    professionals.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Making investments in people and technology that are deftly aligned
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why empowerment, ethics, trust, and patience are highly valued
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Offering the team autonomy, ownership, and shared responsibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making customer feedback the center of every strategy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making investments in people and technology that are deftly aligned
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is critical for all business units, including the boardroom and the CEO,
    to have a strong strategic alignment when it comes to investments in technology,
    personnel, and decision-making. Achieving a successful DevOps transformation requires
    that you establish **key performance indicators** (**KPIs**) to adequately measure
    success and foster a more open and honest company. Using data to objectively back
    up your decisions is the best way to promote a company culture where empowerment,
    ethics, trust, and patience are all highly valued. As a leader in your organization,
    you must offer your team autonomy, ownership, and shared responsibility. In addition,
    you must understand the significance of putting the client first in all of your
    solutions-oriented initiatives and actively seek out ways to incorporate customer
    feedback into each decision. All aspects of the organization’s culture, leadership,
    and procedures should adhere to these principles.
  prefs: []
  type: TYPE_NORMAL
- en: When embarking on a DevOps transformation, changes should be pushed from the
    top, and they should begin at the bottom. Without support from the top down, cultural
    change is impossible to achieve. However, until change is carried out at the smallest
    possible denominator, it does not propagate across an entire enterprise. Through
    the implementation of DevOps at the team level, teams can demonstrate what is
    possible, identify impediments, and overcome them while the problems are still
    modest and can be managed in a prefatory state. Instead of a single massive implementation,
    effective transformations are more often characterized by a journey of ongoing
    progress.
  prefs: []
  type: TYPE_NORMAL
- en: In any DevOps transformation, it is the DevOps team that lays the groundwork
    for everything else to follow while the organizational leadership acts as their
    tailwinds. Every group’s potential to develop and release outstanding software
    is directly proportional to how well they work together as a team. All team members
    must arrive prepared to work together and communicate well. To this end, it is
    paramount that all individuals involved, including developers, testers, operations
    professionals, and security specialists, embrace a mindset that prioritizes collaboration
    to achieve shared objectives.
  prefs: []
  type: TYPE_NORMAL
- en: While cutting-edge technology is certainly not the only factor that is necessary
    for effective teamwork and a flourishing DevOps transformation, it is a necessary
    one. For example, DevOps release managers need tools such as Atlassian Jira to
    enable end-to-end issue tracking or tools such as SigNoz for comprehensive application
    monitoring. To ensure that a CI/CD operation is successful, all team members must
    have access to resources that maximize their contributions to the delivery process.
    Concurrently, teammates require resources such as Slack to enable intuitive communication
    with one another, synergizing their work environment.
  prefs: []
  type: TYPE_NORMAL
- en: An important factor to consider when putting together tools and technologies
    is to guarantee that the implemented systems provide a significant level of automation.
    In the absence of comprehensive automation, team members are required to carry
    out a multitude of manual and repetitive processes. This can impede the efficiency
    of operations, introduce mistakes, and result in discrepancies among deployment
    environments. A notable example is the security tool called Snyk. It conducts
    automatic vulnerability tests on various aspects such as your code, open source
    dependencies, container images, **Infrastructure as Code** (**IaC**) configurations,
    and cloud environments. Snyk also provides valuable context, prioritization, and
    remediation options. Automation facilitates the standardization of operations
    and enables team members to allocate their efforts toward improvement and innovation,
    resulting in enhanced software quality, expedited delivery, and elevated levels
    of career fulfillment.
  prefs: []
  type: TYPE_NORMAL
- en: A leading indicator of success is the ability of business executives at all
    levels to fully understand the importance of technology and the people who are
    leveraging it. The wisest CEOs know that the choices they make about investing
    in people and technology have a significant impact on the prosperity of their
    customers and their business models, both existing now and in the future. This
    isn’t an easy feat, considering how often new technology stacks and tools hit
    the market and how that change can impact the members of your team. Simply put,
    the most successful executives offer a fully holistic business perspective across
    people, processes, information, and technology.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve discussed the importance of aligning your organization effectively,
    let’s turn our attention to the profoundly important duty of empowering your team.
  prefs: []
  type: TYPE_NORMAL
- en: "Why empowerment, ethics, trust, and patience are \Lhighly valued"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A strong culture is promoted by leadership in every successful firm that prioritizes
    DevOps release management. These cultures revolve around values such as accountability,
    continuous learning, teamwork, and experimentation. The culture exerts a powerful
    influence and typically determines which personnel are hired and which teams they
    get placed on. There is a prevailing cultural trend in the DevOps world that promotes
    the idea of achieving significant organizational influence through meaningful
    work. In these cases, failure is not regarded as a loss, but rather as a progression
    toward discovering the correct solution.
  prefs: []
  type: TYPE_NORMAL
- en: Notably, the DevOps culture is characterized by a significant presence of patience,
    trust, ethics, and empowerment, while simultaneously having limited tolerance
    for waste, inefficient decision-making, and bureaucracy. A fundamental virtue
    that all leaders must invoke is the cultivation of receptiveness and admiration
    toward novel ideas, regardless of their seemingly unconventional nature.
  prefs: []
  type: TYPE_NORMAL
- en: Communication in a DevOps environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The key to successful communication in a DevOps environment is mutual respect
    and trust among team members across all levels. This necessitates honoring both
    complementary and contrasting personality traits. Everyone deserves to be trusted
    and respected, regardless of their cultural background, personal experiences,
    learning style, problem-solving abilities, education, or employment history. Your
    fellow teammates will gradually gain trust in one another as they work together,
    in a mutually supportive and encouraging atmosphere, though it will take some
    time.
  prefs: []
  type: TYPE_NORMAL
- en: Auspiciously, team members have the opportunity to develop respect and confidence
    in one another through education and training initiatives. They can learn to listen
    to one another with greater consideration and to overcome interpersonal disputes
    by practicing mindfulness, for instance. To be sure, employees need to feel respected
    and valued by leadership in their workplace. Staff members are less inclined to
    treat one another with dignity if they see that their supervisors do not reciprocate.
    No team can thrive in an atmosphere that constantly places blame or fails to acknowledge
    team members’ contributions. There has to be an ethos of mutual respect and trust
    embedded into the institutional fabric at all levels of an organization.
  prefs: []
  type: TYPE_NORMAL
- en: As part of the DevOps engineering culture, teams must take control of tasks
    that were previously handled by other departments. Having the authority to put
    changes into production requires engineering teams to ensure that testing, risk
    management, and escalation methods are in place by implementing controls into
    their processes. From the very beginning, control must be a part of the process
    and leadership must support it. Automation is a huge boon, but the digitization
    of mundane, time-consuming activities is just one part of the puzzle. The goal
    is to rethink the implementation of controls in such a way that they occur naturally
    within the process, unprompted by outside forces, thus eliminating bottlenecks,
    bureaucracy, and ivory towers.
  prefs: []
  type: TYPE_NORMAL
- en: Companies have long relied on audit-based control frameworks to build trust,
    with the goals of enhancing quality, assurance, security, compliance, and risk
    reduction through the use of checklists and audits. The DevOps release management
    methodology is different; automation plays a crucial role in DevOps cultures by
    facilitating the adoption, acceptance, and integration of automated processes
    in both business and technical domains. Within these firms, automation is not
    perceived as a risk, but rather as a strategic optimization approach that offers
    opportunities for advancement and professional growth. Leadership can trust product
    teams to be mindful of organization-wide concepts and standards through the use
    of automated control functions. Earning trust takes time, but it typically happens
    swiftly when teams work together and show success with modest pilots before expanding.
    With this level of confidence, product teams will be able to make the right changes
    for the company without jeopardizing its security or the ability to get along
    with one another.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding why building trust is the key to your success
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Modifying the culture of a business is a difficult task, which may explain why
    it is more convenient to prioritize automation and monitoring activities initially.
    One of the most insurmountable challenges of implementing DevOps is altering company
    culture. You must collaborate with individuals who might require adjustments to
    deeply ingrained habits that have been developed over extended periods, maybe
    spanning several decades. Perhaps it is those practices that got them to where
    they are now and have earned them respect. It will require a considerable amount
    of time to establish a new organizational culture centered around autonomy and
    empowerment by altering habits. Truly, it’s highly unlikely that you will be able
    to predict the exact duration or completion date in advance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fortunately, most individuals in a professional setting prefer to operate independently.
    They appreciate the ability to make independent choices. They have a strong desire
    to enhance their skills and find meaning in their work. So, the question is: How
    can we achieve that? What steps can you take to ensure that your company’s culture
    is in sync with the demands of contemporary businesses? Trust plays an essential
    part in facilitating your DevOps transformation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we will discuss the results that you will yield from a lack
    of trust within your organization. Patrick Lencioni identifies a lack of trust
    as the fundamental cause of numerous organizational problems in his book *The
    Five Dysfunctions of* *a Team*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.1: The Five Dysfunctions of a Team, by Patrick Lencioni](img/B21803_10_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.1: The Five Dysfunctions of a Team, by Patrick Lencioni'
  prefs: []
  type: TYPE_NORMAL
- en: For example, at *Bold Ventures LLC*, a company without trust, individuals tend
    to steer clear of confrontations. Employees avoid engaging in challenging discussions
    and decision-making, likely due to a fear of speaking up. Consequently, individuals
    who were not actively involved in the decision-making process may not fully commit
    to the agreed-upon goals. Phrases such as *they decided*, instead of *we decided*,
    are often used to highlight the absence of active involvement in the decision-making
    process. Coworkers evade responsibility for matters they are not dedicated to,
    because *it was their choice*, not *it was our choice*. Ultimately, employees
    may not prioritize the organization’s performance if they are not involved in
    the decision-making process or the subsequent actions.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations that operate without trust end up wasting valuable resources.
    Despite hiring intelligent individuals and offering competitive salaries, *Bold
    Ventures LLC* struggled to fully utilize its entire workforce. Deployments were
    incredibly simple and quick in the previous examples since the team had completely
    automated their CI/CD pipeline. Despite the significant gains in efficiency brought
    about by the high level of automation, the company culture had forbidden them
    from implementing any modifications to the production systems unless they went
    through a formal approval process.
  prefs: []
  type: TYPE_NORMAL
- en: You can’t put a price on trust. Whenever we do or do not experience it, we are
    aware of its presence, or lack thereof. Dr. Duane C. Tway published a seminal
    piece on the subject in 1993 titled *A Construct of Trust*. In it, Dr. Tway defined
    trust as “*The state of readiness for unguarded interaction with someone* *or
    something.*”
  prefs: []
  type: TYPE_NORMAL
- en: 'According to Dr. Tway, there are only *three* main components that are used
    to “construct” trust:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The capacity for trust** is determined by the cumulative impact of your previous
    experiences on your current readiness and ability to take risks in trusting others.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The perception of competence** refers to your assessment of your own and
    your colleagues’ capability to effectively accomplish the necessary tasks in the
    present circumstances.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The perception of intentions** refers to your ability to perceive if actions,
    words, direction, mission, and decisions are driven by reasons that benefit both
    parties involved, rather than being driven by motives that just serve oneself.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While trust is subjective to each person, a culture of trust pertains to the
    entire business. DevOps release management presents an excellent opportunity to
    examine Dr. Tway’s concept of trust and pinpoint incremental yet significant chances
    to progressively enhance the trust between the development, operations, and other
    teams in your business. To achieve this, your company culture must encompass the
    following traits:'
  prefs: []
  type: TYPE_NORMAL
- en: Engage in clear and straightforward communication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhance interpersonal engagement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Commit to fulfilling obligations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emphasize the importance of active listening over excessive talking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Share knowledge regularly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encourage participation and feedback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acknowledge mistakes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Honoring each other’s successes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Successful DevOps transformations necessitate a deep understanding of culture
    and the establishment of a trust-based organizational structure. Look for other
    ways to foster a culture at your organization that is characterized by *the state
    of readiness for unguarded interaction with someone or something.* Strive to implement
    ways to enhance trust, competence, and intentions by initiating an open and transparent
    conversation with your development and operations teams. By doing so, you might
    be surprised at how quickly you can begin the process of building a meaningful
    and trusting work environment.
  prefs: []
  type: TYPE_NORMAL
- en: Leaders of DevOps establishments require soft skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In many leadership roles, the importance of people management skills is often
    underestimated or disregarded. In certain instances, an observable phenomenon
    arises within the context of startup companies, wherein the selection of a chief
    technology officer or an engineering lead position is predicated solely upon the
    individual’s seniority or technical prowess, with little consideration given to
    their aptitude for personnel management or their inclination toward assuming such
    a role. Frequently, the individual assuming the leadership position within a DevOps
    team is appointed based on their prior achievements in software development. However,
    it is not uncommon for these individuals to possess insufficient proficiency in
    the essential non-technical disposition encompassing effective communication,
    conflict resolution, and collaborative teamwork.
  prefs: []
  type: TYPE_NORMAL
- en: Naturally, in the ranks of DevOps leadership, possessing soft skills is of paramount
    importance. These skills comprise various abilities, such as critical thinking
    and project management, coupled with enough emotional intelligence. The possession
    of these skills enables DevOps leaders to effectively inspire, motivate, and retain
    a team composed of intelligent engineers. To effectively lead a team, a leader
    must be able to discern the strengths and weaknesses of their team members. Additionally,
    a leader must exhibit active listening skills and possess the capacity to influence
    others. By doing so, a leader can create an environment that nurtures the growth
    and development of their team members, thereby enabling them to achieve success.
    In the context of this position, a notable challenge lies in the requirement for
    an optimal combination of technical proficiency and interpersonal aptitude, necessitating
    a delicate equilibrium between the two.
  prefs: []
  type: TYPE_NORMAL
- en: Regrettably, the emphasis on soft skills has not been given due importance in
    training and career advancement for most software engineers. Historically, these
    skills were considered optional rather than fundamental prerequisites for the
    respective positions. Over time, the prevailing emphasis has been placed on the
    acquisition and mastery of technical skills within software engineering firms,
    neglecting these key communication skills. Consequently, other critical aspects
    that offer the potential to elevate a software engineer to a higher echelon have
    been senselessly neglected. Specifically, the focus has often been diverted away
    from the cultivation of soft skills, which are instrumental in fostering leadership
    capabilities. Nevertheless, the issue is more complex than it seems as many employers
    assert that most college graduates do not acquire these essential soft skills
    during their academic tenure. Fortunately, in the contemporary times that we live
    in, there has been a shift in the perception of soft skills within the context
    of hiring new engineering talent and their significance within organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have placed a spotlight on the importance of key soft skills that
    all DevOps leaders should possess, let’s build on this further. In the next section,
    we will explore the value of giving team members a sense of personal ownership
    over their work. This involves a careful balance of holding your team accountable,
    but also giving them liberty, letting them be accountable to themselves.
  prefs: []
  type: TYPE_NORMAL
- en: "Offering the team autonomy, ownership, \Land shared responsibility"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps leaders can empower their teams by promoting ownership and fostering
    teamwork. However, it is crucial to recognize the importance of understanding
    and maintaining the appropriate degree of intensity for each project. To prevent
    burnout and animosity, leaders must possess a comprehensive operational awareness
    of the actual working conditions, their context, and the strategic approach required.
    A leader must possess the knowledge of when to strategically utilize intense sprints
    and when to exercise restraint and reallocate resources. In other words, a leader
    must make intelligent decisions on the utilization of available resources with
    empathy in mind.
  prefs: []
  type: TYPE_NORMAL
- en: Instilling a sense of autonomy, ownership, and empowerment within the DevOps
    team is one of the most critical elements that a leader can do to establish an
    atmosphere that is characterized by trust, respect, and empathy. The members of
    the team should be able to conduct their work with sufficient autonomy so that
    they can complete their tasks as effectively and efficiently as possible. Even
    though this does not imply that they are free to do anything they choose, it does
    imply that they can determine what it will take to provide software that complies
    with the overall objectives of the project.
  prefs: []
  type: TYPE_NORMAL
- en: In an ideal DevOps establishment, every member of the team is involved in every
    step of an application’s life cycle, from planning and design to testing and deployment.
    Everyone is concerned about the results and knows that they stand to gain from
    the application’s efficient and rapid delivery. For example, development should
    not dump their release onto the shoulders of operations personnel and then walk
    away. Strategically, the key to success is giving the team the freedom and responsibility
    to find out how to deliver their applications effectively, while simultaneously
    avoiding complex approval processes that might bog down operations.
  prefs: []
  type: TYPE_NORMAL
- en: As a DevOps team progresses in its journey toward autonomy and assumes more
    ownership over its projects, the team members should gradually develop a heightened
    sense of collective accountability for the overall operation. In the contemporary
    landscape of software engineering, leadership must eliminate the existence of
    isolated silos between the boundaries of development and operations. Instead,
    a profound understanding must be fostered, acknowledging the interdependence of
    these domains and their shared commitment to achieving optimal results. To achieve
    this, it is paramount that the entire team has a deep understanding and appreciation
    of the customer requirements. In the same vein, they must also possess a comprehensive
    understanding of the technical elements that are required for successful development.
    This mutual appreciation and understanding between all parties involved is crucial
    for the overall success of any project or endeavor.
  prefs: []
  type: TYPE_NORMAL
- en: To foster a collective sense of responsibility, leadership needs to steer the
    team clear of engaging in blame-oriented politics and instead focus on collaborative
    efforts aimed at effective problem-solving and enhancing processes. In the framework
    of collaborative work, team members must acknowledge the intricate web of interdependencies
    that exist among their respective roles and tasks. It is crucial to comprehend
    that any misstep or error committed during their work has the potential to reverberate
    across the entire team, impacting every individual involved. Simultaneously, it
    is fundamental to foster an environment that promotes the investigation of novel
    procedures and technologies, as well as questioning the prevailing methodologies,
    without succumbing to the fear of failure. When individuals collectively assume
    the risks associated with a particular endeavor, they concurrently assume the
    responsibility for ensuring optimal outcomes while avoiding animosity.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have emphasized the importance of promoting a culture of autonomy,
    ownership, and empowerment within your DevOps team, let’s amplify this theme even
    further. In the next section, we’ll discuss how to place customer feedback at
    the center of every move that your team makes.
  prefs: []
  type: TYPE_NORMAL
- en: Making customer feedback the center of every strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback loops play a crucial role in facilitating modern delivery. To establish
    a connection between consumers and DevOps release management, it is prudent that
    you prioritize user delivery requirements by enhancing and reducing the duration
    of your feedback loops. Every DevOps process should strive for expedited response
    times and uninterrupted release cycles that are driven by user demands and usage
    patterns. The utilization of feedback loops will enhance your data-driven decision-making
    process, enabling the achievement of unprecedented levels of accuracy and swift
    adaptation to a wider range of events, factors, and requirements. In the context
    of such new feedback-loop-empowered analytics, those who are courageous and inquisitive
    will be the ones to lead the creation of value.
  prefs: []
  type: TYPE_NORMAL
- en: What is a feedback loop?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A fundamental tenet of systems thinking and an integral component of your company’s
    success requires comprehending and correctly applying DevOps feedback loops. As
    a leader and DevOps specialist, your main goal should be to make the connection
    between development and IT processes as friction-free as possible. However, understanding
    the impact that feedback loops have on your company’s process is the first step
    to cultivating a positive working relationship among these two business groups.
    Nevertheless, one of the most frequently used terms in the field of DevOps, *feedback
    loops*, is a concept that is sometimes misunderstood. What is a feedback loop
    and how does it function?
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the American Heritage Dictionary, *feedback* can be described
    as “*The return of a portion of the output of a process or system to the input,
    especially when used to maintain performance or to control a system or process.*”
    (The American Heritage Dictionary entry: feedback.) On the other hand, a *loop*
    is described as “*Something having a shape, order, or path of motion that is circular
    or curved over on itself.*” (The American Heritage Dictionary entry: loop.) Therefore,
    a feedback loop is defined as “*The section of a control system that allows for
    feedback and self-correction and that adjusts its operation according to differences
    between the actual and the desired or optimal output.*” (The American Heritage
    Dictionary entry: feedback loop.) It is this definition that is derived from the
    combination of the two concepts. Simply put, feedback loops are an introspective
    evaluation of the functioning of teams, systems, and users, measured by both qualitative
    and quantitative analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: Industry insiders and IT gurus concur that *feedback loops* help maintain focus
    on priorities and project goals, ensuring that the development process remains
    on track and doesn’t lose sight of its objectives. Connecting the two DevOps business
    segments mentioned previously is the sole purpose of this framework. Implementing
    a process where changes in one unit trigger changes in another unit, which in
    turn triggers changes in the first unit, is essentially what this accomplishes.
    Because of this, a business may quickly and accurately make the required adjustments
    in a data-driven manner. When it comes to information technology, the utilization
    of a feedback loop to gather data and establish a continuous flow of information
    will yield meaningful growth on a massive scale.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can divide your customer feedback loop into four distinct components:'
  prefs: []
  type: TYPE_NORMAL
- en: Gathering feedback from customers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyzing the data from customer feedback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applying the feedback and using it as a starting point for testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retaining customer relationships and gathering follow-up feedback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One compelling rationale for implementing DevOps feedback loops is to effectively
    bridge the divide that often exists between the functionality of software and
    the expectations of customers. Given this context, a feedback loop might be defined
    as a systematic approach to maximizing the effectiveness of change. Next, we’ll
    discuss practical techniques that you can use to collect customer feedback so
    that you can begin incorporating it into your decision-making process.
  prefs: []
  type: TYPE_NORMAL
- en: Collecting customer feedback the DevOps way
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The convergence of customer support and DevOps has become a pivotal change in
    thinking, requiring a novel approach to leadership in customer support due to
    its distinct complexities. This is to say, the merger of customer support and
    DevOps is the catalyst for extraordinary outcomes. The focus is no longer solely
    on the rapid development and deployment of a product, but rather on guaranteeing
    its ongoing optimal performance and delivering exceptional client experiences.
    It is not solely about fixing problems; it is about taking proactive measures
    to guarantee that the customer experience stays great, especially in the face
    of rapid technological advancements.
  prefs: []
  type: TYPE_NORMAL
- en: Historically, customer support has been perceived, among other things, as an
    emergency response, intervening to address problems after they have occurred.
    Nevertheless, the emergence of DevOps release management has radically altered
    this relationship. Now, the role includes actively guaranteeing availability,
    stability, communication, and performance. It involves anticipating problems and
    obstacles before they occur and adapting seamlessly to the ever-changing environment
    of contemporary enterprises. Customers want seamless omnichannel experiences that
    allow them to engage with a company’s website, chatbot, live chat, interactive
    voice response, live voice agent, email, SMS, embedded within the applications
    themselves, or other communication channels and potentially all of them. Customers
    want a smooth and uninterrupted experience in which every communication channel
    possesses knowledge of their circumstances and past interactions, eliminating
    the need for them to reiterate their details and concerns.
  prefs: []
  type: TYPE_NORMAL
- en: The technological framework necessary to establish connections across isolated
    channels and transfer client data between these channels is quite intricate. As
    an illustration, the **Interactive Voice Response** (**IVR**) channel necessitates
    not just an IVR voice portal, but also VoiceXML apps, speech recognition, text-to-speech,
    and IP telephony. To establish a connection between an IVR system and another
    channel, it is typically necessary to link it with a **customer relationship management**
    (**CRM**) system, **Computer Telephony Integration** (**CTI**) for screen pop
    functionality to a live agent, an eCommerce application, and other relevant components,
    all hosted in the cloud. IVRs, specifically, are often backed by outdated technologies
    that are delicate and prone to breaking. Integrating outdated technologies with
    different communication platforms poses a significant difficulty.
  prefs: []
  type: TYPE_NORMAL
- en: However, within a DevOps setting, where the integration between development
    and operations is seamless, the nature of customer support undergoes a significant
    transformation. Customer support today plays a crucial role in every stage of
    the product life cycle, including development, deployment, and beyond. DevOps
    and customer support frequently communicate using distinct terminologies. Developers
    discuss the concepts of CI/CD, whereas support teams prioritize **service-level
    agreements** (**SLAs**) and customer happiness. Customer support executives have
    a responsibility to serve as intermediaries, converting technical terminology
    into language that is focused on the needs and preferences of the customers. By
    cultivating a culture of reciprocal awareness, you can guarantee that DevOps choices
    are in harmony with the requirements of customers.
  prefs: []
  type: TYPE_NORMAL
- en: SLAs
  prefs: []
  type: TYPE_NORMAL
- en: A SLA is a contract that outlines the responsibilities and expectations between
    a service provider and a customer. The service provider and service user agree
    on specific aspects of the service, such as quality, availability, and responsibilities.
    The most vital aspect of a SLA is ensuring that the services are delivered to
    the customer according to the terms of the contract.
  prefs: []
  type: TYPE_NORMAL
- en: To accomplish this, the leadership of customer support in a DevOps context requires
    in-depth technical knowledge in addition to other skills. Having a profound comprehension
    of the human part is essential for this. A culture of trust and collaboration
    is fostered when there is empathy for both the consumers and the members of the
    team. It is about giving people the ability to accept responsibility for their
    actions and come up with creative solutions. This calls for a change in perspective,
    a change in mentality, and a realignment of the best practices that are currently
    in place.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned repeatedly, automation is the cornerstone of efficiency in an environment
    that revolves around DevOps. In addition to applying to development and operations,
    this also applies to customer support. Nevertheless, it is fundamental that it
    be implemented thoughtfully within the context of customer support operations.
    Undeniably, automation is often implemented to handle regular operations and gather
    data, which you will be able to leverage for freeing up your team to concentrate
    on more complicated issues and high-impact activities, such as providing customers
    with individualized and compassionate help. Keep in mind that the human touch
    is quite vital in contemporary society.
  prefs: []
  type: TYPE_NORMAL
- en: Your ability to discover problems before they affect the consumer can be aided
    by the implementation of automated monitoring and alert systems. Customers should
    be provided with self-service choices, regular operations should be automated,
    and incident management should be streamlined. The goal is to anticipate your
    client’s needs and meet them before they even know what they are.
  prefs: []
  type: TYPE_NORMAL
- en: Incorporating customer feedback into your decision-making processes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Leverage metrics and real-time monitoring to acquire valuable insights into
    the experiences of your customers. **Customer Satisfaction** (**CSAT**), **Mean
    Time to Resolution** (**MTTR**), and **Net Promoter Score** (**NPS**) are examples
    of crucial performance metrics that should be assessed. By employing a data-driven
    methodology, not only can you assess performance, but you can also ensure that
    each decision is supported by concrete outcomes and that crucial indicators direct
    ongoing enhancement.
  prefs: []
  type: TYPE_NORMAL
- en: When compared to the other approaches that came before it, one of the most significant
    qualities that sets DevOps release management apart and creates a distinct niche
    for itself is its ability to incorporate feedback from consumers in addition to
    other systems integrating them into the value chain, such as the monitoring system.
    The feedback that is gathered helps bridge the gap between the functionality of
    the software and the expectations of the customer. In addition to this, it offers
    helpful insights into how you can increase the product’s build quality and feature
    set, which will conclusively lead to improvements in its usefulness, dependability,
    and ultimately the bottom line.
  prefs: []
  type: TYPE_NORMAL
- en: Notably, feedback loops are especially vital in the context of continuous testing.
    To properly conduct ongoing testing, it is not sufficient to simply produce automated
    tests. The more crucial aspect is the visibility of the test results and how they
    can be utilized to improve the current process. To accomplish this, it is necessary
    to obtain thorough feedback regarding the performance of your application at different
    phases of the SDLC, beginning from the development phase and extending until the
    post-production phase. Effectively implementing feedback mechanisms is crucial
    for obtaining comprehensive and detailed feedback.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, feedback loops are what separate assumptions about the way a product’s
    end user might utilize it from the process of carefully enhancing the current
    workflow to better meet the needs of its end users. Utilize the abundance of data
    available to you to facilitate significant transformation. Consistently examine
    this data to detect patterns and determine potential opportunities for enhancing
    your products and services. It is not solely about resolving issues – it is about
    enhancing the overall customer experience as well.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This concludes [*Chapter 10*](B21803_10.xhtml#_idTextAnchor185). At this point,
    you know why empowerment, ethics, trust, and patience are highly valued in a DevOps-centric
    organization. Additionally, you understand the importance of making investments
    in people and technology that are deftly aligned. You also understand the importance
    of offering the team autonomy, ownership, and shared responsibility during your
    company’s DevOps journey. Finally, you know why it is critical to make customer
    feedback the center of every strategy in your business.
  prefs: []
  type: TYPE_NORMAL
- en: While there are no universal solutions for every enterprise, executives who
    prioritize DevOps leverage the necessary organizational changes to reassess structure,
    staffing, metrics for success, and the allocation of tasks and responsibilities
    among team members. Even essential verticals such as expertise in business processes,
    business finance, and emerging roles such as automation engineering, site reliability
    engineering, process owners, and product managers become ubiquitous in a highly
    trained DevOps-centric organization. In addition to numerous other substantive
    characteristics that effective leaders cultivate within the organizations under
    their leadership, the traits discussed in this chapter are commonly found in the
    most successful ones. In the realm of executive decision-making, it is paramount
    for each individual in a leadership position to ascertain their objectives and
    subsequently identify the most optimal DevOps strategy to accomplish their goals.
  prefs: []
  type: TYPE_NORMAL
- en: In the next and final chapter, we will explore how to overcome the most common
    pitfalls that DevOps release managers face today. We will discuss the likely consequences
    of not having a well-thought-out change management process, why it is ill-advised
    to not follow a release checklist, and the 10 most common pitfalls of DevOps release
    management.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The establishment of a robust DevOps culture necessitates what?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leadership needs to exercise caution when attempting to implement DevOps solely
    based on what?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What traits are highly valued in any DevOps enterprise?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What do the most successful executives offer at a DevOps-centric establishment?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What specific skills are often overlooked by technology leaders and engineers
    alike?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In an ideal DevOps establishment, every member of the team is involved in what?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To foster a collective sense of responsibility, leadership needs to do what?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is a feedback loop?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What kind of feedback should every DevOps leader incorporate into their decision-making?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Feedback loops are what separate assumptions about the way a product’s end user
    might utilize it from what?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
