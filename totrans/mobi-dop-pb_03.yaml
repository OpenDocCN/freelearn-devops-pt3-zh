- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Mobile DevOps Fundamentals
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mobile DevOps 基础
- en: There is no doubt that Mobile DevOps is quickly becoming a key part of the mobile
    development process, enabling teams and organizations to quickly develop and release
    mobile applications. We will discuss the fundamentals of Mobile DevOps and how
    it can help your team to reach your mobile development goals through the use of
    this process.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 毋庸置疑，Mobile DevOps 正迅速成为移动开发过程中的一个关键部分，使团队和组织能够快速开发和发布移动应用程序。我们将讨论 Mobile DevOps
    的基础，并介绍它如何通过这一过程帮助您的团队实现移动开发目标。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Mobile continuous integration/continuous delivery (CI/CD) fundamentals
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动持续集成/持续交付（CI/CD）基础
- en: Choosing between self-hosted and cloud-based continuous integration/continuous
    delivery (CI/CD
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在自托管和基于云的持续集成/持续交付（CI/CD）之间做出选择
- en: Do we need a Mobile DevOps engineer?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要一名 Mobile DevOps 工程师吗？
- en: Sounds interesting! Let’s begin our journey toward Mobile DevOps.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很有趣！让我们开始向 Mobile DevOps 进军吧。
- en: The importance of Mobile DevOps
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mobile DevOps 的重要性
- en: Businesses are increasingly relying on mobile applications today. DevOps is
    an essential part of the mobile development process because it manages the development
    and release of mobile applications. To streamline the development process and
    improve the quality of mobile apps, CI, **continuous testing** (**CT**), CD, and
    continuous deployment techniques are used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，企业越来越依赖移动应用程序。DevOps 是移动开发过程中的关键部分，因为它管理着移动应用的开发和发布。为了简化开发过程并提高移动应用的质量，采用了
    CI、**持续测试**（**CT**）、CD 和持续部署等技术。
- en: 'It is an approach to developing mobile applications that *emphasizes collaboration*
    between development, quality, product, and operations teams to ensure mobile applications
    are delivered *quickly, frequently, and reliably*, as shown in the following screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种开发移动应用的方式，*强调开发、质量、产品和运维团队之间的协作*，以确保移动应用能够*快速、频繁且可靠地交付*，如下图所示：
- en: '![Figure 3.1 – Mobile DevOps](img/Figure_3.1_B18113.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – Mobile DevOps](img/Figure_3.1_B18113.jpg)'
- en: Figure 3.1 – Mobile DevOps
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – Mobile DevOps
- en: With Mobile DevOps, teams can *collaborate more effectively and efficiently*
    as they *develop and release mobile applications faster* and with fewer errors
    (as much as possible) since they can work together more. This helps *reduce the
    time required to develop a mobile app*, while also ensuring that the app *complies
    with quality, security, and performance* standards at the same time.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Mobile DevOps，团队可以*更有效、更高效地协作*，因为他们可以*更快地开发和发布移动应用程序*，并且错误较少（尽可能地），因为他们可以更多地合作。这有助于*缩短开发移动应用的时间*，同时确保应用程序*符合质量、安全性和性能*标准。
- en: In [*Chapter 1*](B18113_01.xhtml#_idTextAnchor014), *Resolving Challenges in
    Mobile DevOps*, we discussed how traditional mobile app development was often
    *slow, error-prone, and siloed*. It was common for developers to work in isolation,
    handing off their work to the quality team for testing, and then passing it on
    to operations teams for deployment and release. The process was often slow, resulting
    in *critical issues, delays, poor user experiences,* *and dissatisfaction*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 1 章*](B18113_01.xhtml#_idTextAnchor014)，*解决 Mobile DevOps 中的挑战*中，我们讨论了传统的移动应用开发往往是*缓慢、容易出错且孤立的*。开发者通常是单独工作，将工作交给质量团队进行测试，然后再交给运维团队进行部署和发布。这个过程通常很慢，导致了*关键问题、延迟、糟糕的用户体验*和*不满情绪*。
- en: As a result, Mobile DevOps is shifting the way mobile apps are developed and
    maintained. It involves the use of DevOps principles and practices to improve
    the speed, security, and quality of mobile app development.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Mobile DevOps 正在改变移动应用程序的开发和维护方式。它涉及运用 DevOps 原则和实践来提升移动应用开发的速度、安全性和质量。
- en: 'Many advantages of Mobile DevOps can be summarized as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Mobile DevOps 的许多优势可以总结如下：
- en: Faster development cycles
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快的开发周期
- en: Improved collaboration between different teams
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同团队之间的协作改善
- en: Better QA practices
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的质量保证实践
- en: Efficient deployment process
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的部署过程
- en: Quick response to customer feedback
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速响应客户反馈
- en: Cost savings through automation
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过自动化节省成本
- en: Reduced deployment time
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署时间减少
- en: Ensuring applications are secure and compliant
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保应用程序安全并符合规定
- en: The Mobile DevOps process has proven invaluable to organizations seeking to
    maximize their mobile development efforts.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Mobile DevOps 过程对寻求最大化移动开发努力的组织来说，已被证明是极为宝贵的。
- en: Let’s deep-dive and learn more about Mobile DevOps fundamentals.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨并了解更多关于移动DevOps的基础知识。
- en: Mobile CI/CD fundamentals
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动CI/CD基础
- en: If you are familiar with the fundamentals of DevOps for web apps, backend services,
    or other types of apps, you already know the concepts of **CI/CD**. In mobile,
    it’s the same but with specific tasks that are required to build, test, and release
    the mobile apps.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你熟悉Web应用、后台服务或其他类型应用的DevOps基础知识，你已经了解了**CI/CD**的概念。在移动端也是一样，只是需要一些特定的任务来构建、测试和发布移动应用。
- en: But before jumping to the CI/CD part, I’d like to give you an idea about the
    preparation stage, which is the planning stage or phase.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入CI/CD部分之前，我想先给你介绍一下准备阶段，也就是规划阶段。
- en: Continuous planning
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续规划
- en: As a team, we should agree together about the process that we will use to implement
    Mobile DevOps and CI/CD. The **continuous planning stage** involves gathering
    requirements from stakeholders, creating a project plan, and determining the necessary
    resources. This is an important step in ensuring that the app meets the needs
    of the users and aligns with the overall business objectives.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个团队，我们应该就实施移动DevOps和CI/CD的过程达成一致。**持续规划阶段**涉及从利益相关者收集需求、创建项目计划并确定必要的资源。这是确保应用满足用户需求并与整体业务目标一致的重要步骤。
- en: Also, we need to clearly define what you want to achieve with your mobile CI/CD
    strategy. This may include improving the speed and quality of your releases, increasing
    collaboration between team members, or reducing the risk of errors.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还需要清楚地定义你希望通过移动CI/CD策略实现的目标。这可能包括提高发布的速度和质量、增加团队成员之间的合作，或减少错误的风险。
- en: 'One of the frameworks that can be used to improve DevOps practices is **CALMS**
    ([https://www.atlassian.com/devops/frameworks/calms-framework](https://www.atlassian.com/devops/frameworks/calms-framework)),
    as shown in *Figure 3**.2*. It can be applied to Mobile DevOps as well, to optimize
    the process of developing, testing, and releasing mobile apps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用来改善DevOps实践的框架之一是**CALMS**（[https://www.atlassian.com/devops/frameworks/calms-framework](https://www.atlassian.com/devops/frameworks/calms-framework)），如*图3.2*所示。它也可以应用于移动DevOps，优化开发、测试和发布移动应用的过程：
- en: '![Figure 3.2 – CALMS framework](img/Figure_3.2_B18113.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2 – CALMS框架](img/Figure_3.2_B18113.jpg)'
- en: Figure 3.2 – CALMS framework
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – CALMS框架
- en: 'CALMS can be used to achieve the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: CALMS可以用来实现以下目标：
- en: Teams can identify and resolve issues more quickly and deliver higher-quality
    apps by working together and sharing knowledge and resources
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队可以通过协作和共享知识与资源，更快地识别和解决问题，从而交付更高质量的应用。
- en: Collaboration and communication can boost team morale and productivity, resulting
    in greater efficiency and productivity
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合作与沟通能够提升团队士气和生产力，进而提高效率和生产力。
- en: Team members can avoid misunderstandings and errors by keeping everyone informed
    about project goals and progress
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过确保每个成员了解项目目标和进展，团队可以避免误解和错误。
- en: Communication and collaboration between team members can facilitate faster decision-making,
    resulting in more efficient project progress
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队成员之间的沟通与合作可以促进更快的决策，进而提高项目进展的效率。
- en: 'There are five main components of CALMS, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: CALMS有五个主要组成部分，如下所示：
- en: '**Culture**: Essentially, this refers to the values and beliefs of the team,
    as well as the overall work environment and dynamics of the team. Every team needs
    a positive culture to succeed.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文化**：本质上，这指的是团队的价值观和信念，以及团队的整体工作环境和动态。每个团队都需要积极的文化才能取得成功。'
- en: '**Automation**: Automating workflows reduces the need for manual intervention
    and minimizes the chance of error by using tools and processes.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：自动化工作流减少了手动干预的需求，并通过使用工具和流程最小化错误的机会。'
- en: '**Lean**: Throughout the development process, the lean approach seeks to maximize
    value and minimize waste. As part of this process, unnecessary steps are identified
    and eliminated, workflows are streamlined, and processes are continuously improved.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**精益**：在整个开发过程中，精益方法旨在最大化价值并最小化浪费。作为这一过程的一部分，需要识别并消除不必要的步骤，简化工作流程，并持续改进过程。'
- en: '**Measurement**: Identifying areas for improvement requires collecting and
    analyzing data. The metrics can include lead and cycle times, as well as defect
    rates.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**衡量**：识别改进领域需要收集和分析数据。指标可以包括交付时间和周期时间，以及缺陷率。'
- en: '**Sharing**: Collaboration and efficiency are improved when knowledge and resources
    are shared within and across departments. Regular team meetings, pair programming,
    and code reviews can all contribute to this.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享**：当知识和资源在部门内外共享时，协作和效率会得到提升。定期的团队会议、结对编程和代码审查都可以促进这一点。'
- en: Now that we’ve determined what your mobile CI/CD strategy should achieve, let’s
    learn more about the CI/CD process.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了您的移动 CI/CD 策略应该实现的目标，让我们进一步了解 CI/CD 流程。
- en: DevOps culture is a critical component of building a capable engineering team
    for organizations. It contributes greatly to signaling a company’s quality to
    in-demand engineers with a wide range of job options.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 文化是为组织构建有能力的工程团队的关键组成部分。它在向需求旺盛且具有广泛职业选择的工程师展示公司质量方面起着重要作用。
- en: Continuous integration
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续集成
- en: '**Continuous integration** (**CI**) makes incremental code changes regularly
    and reliably. CI enables *automated build and test procedures* to make code updates
    reliable before they are *merged* into the repository or specially merged to the
    main or the master branch, and we must always do that to keep the main or master
    branch green at all times without conflicts or errors because it’s the main source
    for our business. If we need to release a new version, this is the baseline, as
    shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续集成**（**CI**）定期且可靠地进行增量代码更改。CI 使得*自动化构建和测试过程*得以实施，从而在代码更新合并到代码库或特别合并到主分支或主分支之前，使得更新可靠，我们必须始终执行此操作，以保持主分支始终无冲突或错误，因为它是我们业务的主要来源。如果需要发布新版本，这是基准，如下所示的屏幕截图所示：'
- en: '![Figure 3.3 – The CI process](img/Figure_3.3_B18113.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – CI 流程](img/Figure_3.3_B18113.jpg)'
- en: Figure 3.3 – The CI process
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – CI 流程
- en: 'The process of CI for mobile apps mainly comprises the following steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的 CI 流程主要包括以下步骤：
- en: Cloning the source code from the repository
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从代码库克隆源代码
- en: Building the app binaries
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建应用二进制文件
- en: Running different test types such as unit tests, integration tests, UI tests,
    and so on
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行不同类型的测试，如单元测试、集成测试、UI 测试等
- en: Creating and deploying the artifacts (`.aab` or `.ipa`) based on the app type
    that can be later used in the distribution
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据应用类型创建并部署工件（`.aab` 或 `.ipa`），这些工件稍后可用于分发。
- en: Continuous testing
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续测试
- en: The practice of **continuous testing** (**CT**) involves testing software as
    part of the development process instead of waiting until the end of the cycle
    to test it. A high-quality app is especially important for mobile apps, which
    are often used by many users and use a large amount of data.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续测试**（**CT**）的实践是将测试作为开发过程的一部分，而不是等到周期结束后再进行测试。高质量的应用程序对移动应用尤为重要，因为它们通常由许多用户使用，并且消耗大量数据。'
- en: 'Mobile apps can be continuously tested in different ways, such as the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用可以通过多种方式进行持续测试，例如：
- en: Decide on a clear mobile testing strategy before you begin testing.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开始测试之前，确定一个清晰的移动测试策略。
- en: Throughout the development process, ensure that tests are applied in the initial
    phase and progressively.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在整个开发过程中，确保在初始阶段就开始应用测试，并逐步进行。
- en: Follow an automated testing process that involves the use of different testing
    tools to execute tests such as unit, integration, UI, and so on on the app without
    the need for human intervention. This is especially useful for running a large
    number of tests in a consistent and timely manner.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循自动化测试流程，使用不同的测试工具执行测试，如单元测试、集成测试、UI 测试等，而无需人工干预。这对于以一致且及时的方式运行大量测试尤其有用。
- en: Tests can be run on a wide variety of devices and operating systems using cloud-based
    testing without having to own or maintain the devices. By testing your app across
    a variety of devices, you can ensure that it works properly.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过基于云的测试，在各种设备和操作系统上运行测试，无需拥有或维护设备。通过在多种设备上测试应用，您可以确保其正常工作。
- en: Make sure you test the UI on a real mobile device, not just on an emulator or
    simulator.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在真实的移动设备上测试 UI，而不仅仅是在仿真器或模拟器上。
- en: Perform sufficient performance, stress, and security testing.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行足够的性能、压力和安全性测试。
- en: Conduct tests to assess app interoperability, battery consumption, and **fault**
    **tolerance** (**FT**).
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行测试以评估应用程序的互操作性、电池消耗和**容错性**（**FT**）。
- en: In [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App Testing Strategy*, we will deep-dive into mobile testing strategies, tools,
    and frameworks.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施强大的移动应用测试策略*中，我们将深入探讨移动测试策略、工具和框架。
- en: Continuous Delivery
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续交付
- en: 'Once this process is finished without errors, the code can be quickly and easily
    deployed through the **Continuous Delivery** (**CD**) process; otherwise, if there
    is any error, the process will be stopped and the error reported back to the developer
    to fix it, as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这个过程顺利完成且没有错误，代码就可以通过**持续交付**（**CD**）过程快速且轻松地部署；否则，如果有任何错误，过程将停止，并将错误报告给开发人员修复，如下图所示：
- en: '![Figure 3.4 – The CI/CD process](img/Figure_3.4_B18113.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – CI/CD过程](img/Figure_3.4_B18113.jpg)'
- en: Figure 3.4 – The CI/CD process
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – CI/CD过程
- en: Once the code commits or changes have been merged into the central branch (main,
    master, and so on), CD automatically delivers the builds that pass the CI checks
    to production environments (such as staging), where they will be tested and reviewed
    before being released into production.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦代码提交或变更合并到中央分支（如main、master等），CD会自动将通过CI检查的构建版本交付到生产环境（如预发布环境），在那里进行测试和审查，然后才会发布到生产环境。
- en: '*The goal is to automate development and deployment processes to ensure the
    rapid, reliable, and budget-friendly delivery of* *mobile apps.*'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*目标是自动化开发和部署流程，以确保快速、可靠且符合预算的移动应用交付。*'
- en: 'The process of CI/CD for mobile apps mainly comprises the following steps:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的CI/CD过程主要包括以下几个步骤：
- en: Release the build to the QA teams to do additional checks and tests.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将构建版本发布给QA团队进行额外的检查和测试。
- en: Release the build to the Beta testers if the company or the team is already
    participating in the program.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果公司或团队已经参与该程序，则将构建版本发布给Beta测试人员。
- en: If everything is good, after that, the release manager or anyone responsible
    for the release process can approve the build and release it to the app stores
    or the production environments.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，之后，发布经理或任何负责发布过程的人可以批准该构建并将其发布到应用商店或生产环境中。
- en: Continuous deployment
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续部署
- en: 'Continuous deployment is often part of the CI/CD pipeline, which means that
    the code that is deployed to the repository will automatically be deployed to
    production or, in our cases for the mobile apps, to the App Store. CI/CD pipelines
    are often referred to as the combination of these practices, as shown in the following
    screenshot:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 持续部署通常是CI/CD管道的一部分，这意味着部署到代码库的代码将自动部署到生产环境，或者在我们的移动应用案例中，将被部署到App Store。CI/CD管道通常被称为这些实践的组合，如下图所示：
- en: '![Figure 3.5 – The CI/continuous deployment process](img/Figure_3.5_B18113.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图3.5 – CI/持续部署过程](img/Figure_3.5_B18113.jpg)'
- en: Figure 3.5 – The CI/continuous deployment process
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5 – CI/持续部署过程
- en: The continuous deployment process automates the deployment of your app build,
    preventing human intervention. The only thing that will prevent a new change from
    being deployed into production is a failed build or test. This is used to speed
    up the app production and to get customer feedback faster.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 持续部署过程自动化了应用构建的部署，防止人工干预。唯一会阻止新变更部署到生产环境的情况是构建或测试失败。这种方式用于加速应用生产并更快获得客户反馈。
- en: Continuous monitoring
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续监控
- en: After we release the mobile apps to production, this is not the end of the CI/CD
    life cycle, but we have another stage. **Continuous monitoring** (**CM**) involves
    monitoring the app’s performance and gathering data on user behavior, as shown
    in *Figure 3**.6*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将移动应用发布到生产环境后，这并不是CI/CD生命周期的结束，而是进入了另一个阶段。**持续监控**（**CM**）涉及监控应用的性能并收集用户行为数据，如*图3.6*所示。
- en: 'This helps organizations improve the user experience, identify potential issues,
    and optimize the performance of their mobile applications. The data collected
    can include information on device performance, network conditions, app crashes,
    user behavior, and more. The analysis of this data is typically done using advanced
    analytics tools and techniques to provide insights into the mobile app performance
    and user experience. In [*Chapter 7*](B18113_07.xhtml#_idTextAnchor265), *Establishing
    Mobile App Monitoring, Observability, and Analytics*, we will deep-dive into monitoring
    and analytics tools for mobile apps and learn more about how to use them effectively
    with mobile CI/CD and DevOps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于组织改善用户体验、识别潜在问题，并优化移动应用程序的性能。收集的数据可以包括设备性能、网络状况、应用崩溃、用户行为等信息。通常，使用先进的分析工具和技术来分析这些数据，从而提供有关移动应用性能和用户体验的洞察。在
    [*第 7 章*](B18113_07.xhtml#_idTextAnchor265)，《建立移动应用监控、可观察性和分析》中，我们将深入探讨移动应用的监控和分析工具，并学习如何有效地将它们与移动
    CI/CD 和 DevOps 一起使用：
- en: '![Figure 3.6 – The full process of CI/CD](img/Figure_3.6_B18113.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – CI/CD 的完整过程](img/Figure_3.6_B18113.jpg)'
- en: Figure 3.6 – The full process of CI/CD
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – CI/CD 的完整过程
- en: Effective and specific mobile CI/CD platforms consist of a progression of different
    Mobile DevOps tools used to address a particular business challenge. By connecting
    the mobile developers, quality engineers, and customers, they ensure a profitable
    cycle.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有效且具体的移动 CI/CD 平台由一系列不同的移动 DevOps 工具组成，用于解决特定的业务挑战。通过连接移动开发人员、质量工程师和客户，它们确保了一个有利可图的循环。
- en: It is not easy to build Mobile DevOps processes, as we discovered. Automating
    processes requires continuous experimentation and refinement.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们发现的，建立移动 DevOps 流程并不容易。自动化流程需要持续的实验和完善。
- en: As a result, I highly recommend *starting small and building the Mobile DevOps
    toolchain and CI/CD pipelines incrementally* once you decide to embark on the
    Mobile DevOps journey.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我强烈建议在你决定开始移动 DevOps 之旅后，*从小做起，逐步建立移动 DevOps 工具链和 CI/CD 管道*。
- en: Based on my previous experience, I believe if you try to implement all the processes
    and steps at once, you will fail and be frustrated. Instead, take it slowly and
    build it step by step; success is the sum of small efforts.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我之前的经验，我相信如果你尝试一次性实施所有流程和步骤，你会失败并感到沮丧。相反，应该慢慢来，一步步建立；成功是小小努力的总和。
- en: 'In my opinion, as shown in *Figure 3**.7*, there are three phases to the Mobile
    DevOps journey:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，如*图 3.7*所示，移动 DevOps 之旅分为三个阶段：
- en: '**The beginning phase/the CI phase**: Implement only the minimal CI pipeline
    by cloning the source code, running the static analysis code or lint, and running
    unit tests.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**起始阶段/CI 阶段**：只实现最小化的 CI 管道，通过克隆源代码、运行静态分析代码或 lint，并运行单元测试。'
- en: '**Keeping the promise phase—mobile CI/CD partial pipeline**: Continuously improve
    the pipeline from the first phase by adding a few other steps, such as running
    UI tests on cloud devices, generating UI test reports, and running security or
    performance tests depending on the requirements. This stage can also contain releasing
    the app to the QA teams or the stakeholders and sending notifications to different
    teams about the statuses.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**履行承诺阶段——移动 CI/CD 部分管道**：通过添加其他一些步骤，如在云设备上运行 UI 测试、生成 UI 测试报告，并根据需求运行安全或性能测试，持续改进第一阶段的管道。此阶段还可以包括将应用程序发布给
    QA 团队或相关利益方，并向不同团队发送关于状态的通知。'
- en: '**The sustain phase—fully automated mobile CI/CD pipeline**: Add more steps
    toward the fully mobile CI/CD, such as steps to release the apps to the beta testers
    and the app stores as well as enhance the UI testing to reduce the build time
    by running them in parallel, or add other steps to improve the quality of the
    CI/CD pipeline:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续阶段——完全自动化的移动 CI/CD 管道**：添加更多步骤来实现完全移动 CI/CD，例如将应用程序发布给测试人员和应用商店的步骤，以及通过并行运行
    UI 测试来减少构建时间，或添加其他步骤来提高 CI/CD 管道的质量：'
- en: '![Figure 3.7 – Mobile DevOps implementation phases](img/Figure_3.7_B18113.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – 移动 DevOps 实施阶段](img/Figure_3.7_B18113.jpg)'
- en: Figure 3.7 – Mobile DevOps implementation phases
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 移动 DevOps 实施阶段
- en: Using this approach will always help the team to improve the Mobile DevOps process
    and enhance the performance of the release process. These duties can be the responsibilities
    of the platform engineering team, the internal developer productivity team, or
    the mobile engineering team, depending on the team topologies inside the organization.
    In [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118), *Achieving Continuous Integration
    and Delivery with Mobile DevOps*, we will get started with the implementation
    phase of mobile CI/CD pipelines with different platforms.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法将始终帮助团队改进移动 DevOps 过程，并增强发布过程的性能。这些职责可能由平台工程团队、内部开发者生产力团队或移动工程团队承担，具体取决于组织内部的团队拓扑结构。在
    [*第4章*](B18113_04.xhtml#_idTextAnchor118)，*使用移动 DevOps 实现持续集成和交付*，我们将开始使用不同平台实现移动
    CI/CD 流水线的实施阶段。
- en: Now we’ve discussed the fundamentals of Mobile DevOps and explained each stage
    of the process, let’s explore together the benefits of Mobile DevOps and CI/CD
    for mobile app development.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了移动 DevOps 的基础知识，并解释了流程的每个阶段，让我们一起探讨移动 DevOps 和移动应用开发的好处以及 CI/CD 的好处。
- en: The benefits of CI/CD for mobile app development
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CI/CD 对移动应用开发的好处
- en: 'Having mobile CI/CD has more positive effects than only making an existing
    process a little more efficient for the following reasons:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有移动 CI/CD 比仅仅提高现有流程效率有更多正面影响，原因如下：
- en: It allows developers to focus on writing code and monitoring mobile apps in
    production
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使开发人员能够专注于编写代码并监控生产中的移动应用
- en: A faster deployment time and faster delivery to markets
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快的部署时间和更快的市场交付
- en: All versions of the mobile apps are accessible to QA and product stakeholders
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有版本的移动应用程序都可供 QA 和产品利益相关者访问
- en: The test results, code change logs, and release logs are always available
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试结果、代码更改日志和发布日志始终可用
- en: Enhanced communication and productivity
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升沟通与生产力
- en: Improved employee engagement
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升员工参与度
- en: Customers are more satisfied
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户更加满意
- en: Determine which tools and technologies will be used in your mobile CI/CD pipeline.
    A version control system, build automation tool, testing framework, or deployment
    platform may be included in this list.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 确定移动 CI/CD 流水线中将使用的工具和技术。版本控制系统、构建自动化工具、测试框架或部署平台可能包含在此列表中。
- en: The tools and infrastructure of Mobile DevOps
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移动 DevOps 的工具和基础设施
- en: 'As we discussed before, Mobile DevOps is a set of practices, tools, and infrastructure
    aimed at streamlining the development and release of mobile applications. It enables
    continuous integration, testing, delivery, and monitoring, ensuring that developers
    can rapidly iterate, deploy, and maintain high-quality mobile apps. The key components
    of Mobile DevOps infrastructure are set out here:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，移动 DevOps 是一组旨在简化移动应用开发和发布的实践、工具和基础设施。它实现了持续集成、测试、交付和监控，确保开发人员能够快速迭代、部署和维护高质量的移动应用。移动
    DevOps 基础设施的关键组成部分如下所述：
- en: A version control management system, such as GitHub, allows teams to track changes
    to their code bases and collaborate on them. In [*Chapter 9*](B18113_09.xhtml#_idTextAnchor342),
    *Mobile DevOps Best Practices*, we will learn more about the different types of
    Git repositories such as monorepos, and how to use them.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制管理系统，如 GitHub，允许团队跟踪其代码库的更改并进行协作。在 [*第9章*](B18113_09.xhtml#_idTextAnchor342)，*移动
    DevOps 最佳实践*，我们将更多地了解诸如单体仓库之类的不同 Git 仓库类型，以及如何使用它们。
- en: Tools that automate the build and test processes, such as Gradle, Gradle Enterprise
    for Android, or Fastlane for iOS, allow developers to focus on writing code instead
    of building and testing. In [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118)*,
    Achieving Continuous Integration and Delivery with Mobile DevOps*, we will learn
    more about the different build tools for mobile apps in practice and also how
    to use caching to speed up the build time with those tools.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化构建和测试过程的工具，如 Gradle、面向 Android 的 Gradle Enterprise 或 iOS 的 Fastlane，允许开发人员专注于编写代码而不是构建和测试。在
    [*第4章*](B18113_04.xhtml#_idTextAnchor118)，*使用移动 DevOps 实现持续集成和交付*，我们将更多地了解实践中移动应用程序的不同构建工具，以及如何使用缓存来加速这些工具的构建时间。
- en: '**Labs for testing apps on a wide range of physical devices**: These labs are
    often hosted in the cloud, allowing teams to test apps on a range of devices.
    In [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App Testing Strategy*, we will learn the best practices when using cloud devices
    to accelerate the testing processes.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于在各种物理设备上测试应用的实验室**：这些实验室通常托管在云端，允许团队在多个设备上测试应用程序。在[*第5章*](B18113_05.xhtml#_idTextAnchor138)中，*实现强大的移动应用测试策略*一章，我们将了解使用云设备加速测试过程的最佳实践。'
- en: Infrastructure for deploying and managing backend services for mobile apps is
    provided by cloud platforms such as **Amazon Web Services** (**AWS**), **Google**
    **Cloud Platform** (**GCP**), or Azure. In [*Chapter 9*](B18113_09.xhtml#_idTextAnchor342),
    *Mobile DevOps Best Practices*, we will learn more about how to use cloud services
    with mobile apps.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于部署和管理移动应用后端服务的基础设施由云平台提供，如**Amazon Web Services**（**AWS**）、**Google Cloud
    Platform**（**GCP**）或 Azure。在[*第9章*](B18113_09.xhtml#_idTextAnchor342)中，*移动 DevOps
    最佳实践*一章，我们将了解如何将云服务与移动应用结合使用。
- en: Testing tools such as Appium, Espresso, XCUITest, and Detox automate the testing
    of mobile apps across different platforms and devices. In [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App Testing Strategy*, we will learn the difference
    between the testing tools and what is a suitable tool or framework for our team.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试工具如 Appium、Espresso、XCUITest 和 Detox 可以自动化测试不同平台和设备上的移动应用。在[*第5章*](B18113_05.xhtml#_idTextAnchor138)中，*实现强大的移动应用测试策略*一章，我们将学习各种测试工具的差异，以及哪些工具或框架适合我们的团队。
- en: Managing the mobile app distribution process, such as automatically managing
    code signing, certificates, provisioning profiles, and key stores is made easier
    using tools such as fastlane and others. In [*Chapter 6*](B18113_06.xhtml#_idTextAnchor210),
    *Mobile App Release Management*, we will learn how to distribute our apps automatically
    to Beta users or the App Store using different tools such as Firebase App Distribution,
    fastlane, TestFlight, and more.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 fastlane 等工具，管理移动应用分发过程，如自动管理代码签名、证书、配置文件和密钥库，变得更加简单。在[*第6章*](B18113_06.xhtml#_idTextAnchor210)中，*移动应用发布管理*一章，我们将学习如何使用不同的工具（如
    Firebase App Distribution、fastlane、TestFlight 等）自动将应用分发给 Beta 用户或 App Store。
- en: In my opinion, mobile CI/CD pipelines are like LEGO toys—you’re always working
    with different tools, configurations, and dependencies. All you need to do is
    decide how you want your pipeline to look.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，移动 CI/CD 流水线就像乐高玩具——你总是在使用不同的工具、配置和依赖。你所需要做的就是决定你的流水线应该是什么样子的。
- en: When you play with LEGO, you can feel like an architect. You can create different
    results by building different shapes and structures.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当你玩乐高积木时，你会感觉自己像个建筑师。你可以通过构建不同的形状和结构来创造不同的结果。
- en: The idea behind building a mobile CI/CD pipeline for your specific needs and
    requirements is knowing how to use the pieces correctly. There is no set-in-stone
    template required for building a mobile CI/CD pipeline. Instead, you should always
    implement the steps that fit your needs.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 构建适合自己需求的移动 CI/CD 流水线的核心思想是知道如何正确使用各个组件。构建移动 CI/CD 流水线没有固定的模板，关键是始终实施适合自己需求的步骤。
- en: Through Mobile DevOps, developers, testers, product managers, and release management
    teams can work together more effectively.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 通过移动 DevOps，开发人员、测试人员、产品经理和发布管理团队可以更加高效地协同工作。
- en: DevOps and CI/CD are based on the philosophy of rapid development, testing,
    and release, which allows technology to be iterated quickly.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 和 CI/CD 基于快速开发、测试和发布的理念，这使得技术能够快速迭代。
- en: It is a philosophy that closely aligns with the needs of companies, from start-ups
    to enterprises. They need to be able to deliver products to market quickly and
    constantly improve their quality in order to gain a competitive edge.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种紧密契合公司需求的理念，从初创公司到大型企业都可以受益。企业需要能够快速将产品推向市场，并不断提高质量，以获得竞争优势。
- en: Developing a mobile CI/CD strategy is an essential part of ensuring the successful
    delivery of mobile applications. It involves creating a process that automates
    the development, testing, and deployment of applications, helping to ensure the
    applications are of high quality and are released quickly.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 制定移动 CI/CD 策略是确保成功交付移动应用的关键部分。它涉及创建一个自动化开发、测试和部署应用的过程，帮助确保应用具有高质量并能快速发布。
- en: As a result, the team or the organization should choose which Mobile DevOps
    and CI/CD platforms are suitable for the business and **return on investment**
    (**ROI**). Let’s compare the options between self-hosted and cloud-based CI/CD
    to know which option or choice is a suitable fit for our organization.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，团队或组织应该选择适合业务和**投资回报率**（**ROI**）的移动 DevOps 和 CI/CD 平台。让我们比较自托管和基于云的 CI/CD
    选项，以了解哪种选项或选择最适合我们的组织。
- en: Choosing between self-hosted and cloud-based CI/CD
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择自托管和基于云的 CI/CD 之间的区别
- en: With **self-hosted CI/CD**, organizations retain full control over their environment
    and data. As a bonus, this approach can be more cost-effective in the long run
    since organizations can avoid cloud service costs by using existing infrastructure.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**自托管 CI/CD**，组织可以完全控制其环境和数据。作为额外的好处，从长远来看，这种方式可能更具成本效益，因为组织可以通过利用现有基础设施避免云服务的费用。
- en: For instance, if the team already uses CI/CD platforms for web apps and APIs
    and backend services, it needs to incorporate the mobile part.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果团队已经为 Web 应用、API 和后端服务使用了 CI/CD 平台，它就需要将移动部分集成进去。
- en: This requires educating the DevOps team about the mobile apps requirements to
    be able to add the mobile part to the existing CI/CD platform, such as provisioning
    the required hardware and software as well as implementing the processes and the
    prerequisites that are necessary to support mobile release processes to app stores,
    such as signing apps, uploading certificates, provisioning profiles, and creating
    key stores.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要教育 DevOps 团队了解移动应用的要求，以便能够将移动部分添加到现有的 CI/CD 平台中，例如配置所需的硬件和软件，并实现支持移动发布流程所必需的流程和前提条件，以便将应用发布到应用商店，如应用签名、上传证书、配置配置文件以及创建密钥库。
- en: Additionally, setting up a self-hosted CI/CD solution can be *time-consuming*
    and may require *specialized expertise*. Additionally, teams will need to take
    on the responsibility of *maintaining and updating their environment and infrastructure*,
    which can be a burden on resources.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，设置自托管的 CI/CD 解决方案可能*非常耗时*，并且可能需要*专业知识*。此外，团队还需要承担*维护和更新其环境和基础设施*的责任，这可能对资源造成负担。
- en: 'On the other hand, **cloud-based CI/CD** solutions have several advantages
    over self-hosted solutions, such as the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**基于云的 CI/CD** 解决方案相较于自托管解决方案有几个优势，具体包括：
- en: '*The process of setting up and maintaining them is generally easier*, and they
    are more scalable. As cloud-based services can be *accessed remotely*, they are
    also more accessible. In addition, they can be more *flexible* since they can
    *easily be integrated with other tools and services*. Cloud-based CI/CD eliminates
    the need for on-site infrastructure by providing off-site hosting. By allowing
    CI/CD to be used immediately, cloud-based CI/CD can *both reduce costs and time*
    spent on setup.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*设置和维护它们的过程通常更容易*，并且它们具有更好的可扩展性。由于基于云的服务可以*远程访问*，它们也更加便捷。此外，它们可以更加*灵活*，因为它们可以*轻松地与其他工具和服务集成*。基于云的
    CI/CD 通过提供异地托管，消除了对现场基础设施的需求。通过允许立即使用 CI/CD，基于云的 CI/CD 可以*减少成本和设置时间*。'
- en: CI/CD in the cloud is also scalable, allowing for easy expansion or reduction
    of resources.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云中的 CI/CD 还具有可扩展性，可以轻松扩展或缩减资源。
- en: In addition to its benefits, cloud-based CI/CD also has some drawbacks. The
    lack of control over data can pose a security concern. Furthermore, cloud-based
    services can quickly add up in costs, especially if organizations need to use
    multiple services because it’s required to have monitoring on the cost of machines
    and builds.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 除了其好处，基于云的 CI/CD 也有一些缺点。对数据缺乏控制可能带来安全隐患。此外，基于云的服务费用可能迅速增加，特别是当组织需要使用多个服务时，因为必须监控机器和构建的费用。
- en: 'It’s important to note that it also depends on the specific needs and requirements
    of the project, as well as the size and resources of the organization. As shown
    in the following screenshot, self-hosted CI/CD can be time-consuming but it’s
    more customizable; on the other hand, cloud CI/CD can help developers to save
    time by managing required tasks such as updating the infrastructure or stacks:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，这还取决于项目的具体需求和要求，以及组织的规模和资源。如以下屏幕截图所示，自托管 CI/CD 可能耗时，但它更具可定制性；另一方面，云 CI/CD
    可以通过管理必要的任务（如更新基础设施或技术栈）帮助开发者节省时间：
- en: '![Figure 3.8 – Self-hosted versus cloud-hosted (PaaS) CI/CD](img/Figure_3.8_B18113.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8 – 自托管与云托管（PaaS）CI/CD](img/Figure_3.8_B18113.jpg)'
- en: Figure 3.8 – Self-hosted versus cloud-hosted (PaaS) CI/CD
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 自托管与云托管（PaaS）CI/CD
- en: A cloud-based CI/CD solution might be the best option for a *small team or start-up*,
    while a larger organization might prefer to have *more control over its environment
    and choose a self-hosted solution*, but it always depends on the team’s expectations
    and needs.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 基于云的 CI/CD 解决方案可能是 *小团队或初创公司* 的最佳选择，而更大的组织可能更倾向于拥有 *更多的环境控制，并选择自托管解决方案*，但最终选择总是取决于团队的期望和需求。
- en: The cloud-based version of CI/CD is often referred to as **CI/CD as a service**.
    CI/CD tools are developed, maintained, and hosted by a dedicated organization
    that offers internet access to customers.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 基于云的 CI/CD 版本通常被称为 **CI/CD 即服务**。CI/CD 工具由专门的组织开发、维护并托管，客户可以通过互联网访问。
- en: In contrast, self-hosted CI/CD means you either build your own CI/CD tool or
    use a third-party CI/CD tool (usually open source) hosted on your infrastructure.
    It can be on-premise servers or IaaS platforms such as AWS, **GCP**, or Microsoft
    Azure.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，自托管的 CI/CD 意味着你要么构建自己的 CI/CD 工具，要么使用第三方 CI/CD 工具（通常是开源的）托管在你的基础设施上。它可以是本地服务器或
    IaaS 平台，如 AWS、**GCP** 或 Microsoft Azure。
- en: 'As a summary, this comparison table outlines the main differences between self-hosted
    and cloud-based CI/CD solutions, including factors such as control, cost, scalability,
    and security. The choice between the two depends on the specific needs and requirements
    of the project and organization:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，这个对比表概述了自托管与基于云的 CI/CD 解决方案之间的主要差异，包括控制、成本、可扩展性和安全等因素。选择哪种方案取决于项目和组织的具体需求：
- en: '| **Criteria** | **Self-Hosted CI/CD** | **Cloud-Based CI/CD** |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| **标准** | **自托管 CI/CD** | **基于云的 CI/CD** |'
- en: '| --- | --- | --- |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Control | Full control over environment and data | Less control over data
    and environment |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 控制 | 对环境和数据有完全的控制 | 对数据和环境的控制较少 |'
- en: '| Cost | More cost-effective in the long run; uses existing infrastructure
    | Costs can add up quickly; requires monitoring of machine and build costs |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 成本 | 从长远来看更具成本效益；利用现有基础设施 | 成本可能迅速累积；需要监控机器和构建成本 |'
- en: '| Setup and maintenance | Time-consuming setup; requires specialized expertise;
    team maintains infrastructure | Easier setup; less maintenance required; hosted
    off-site |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 设置与维护 | 设置耗时；需要专门的技术知识；团队维护基础设施 | 设置更简单；维护需求较少；托管在异地 |'
- en: '| Scalability | Limited by existing infrastructure | Highly scalable; can expand
    or reduce resources easily |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 可扩展性 | 受现有基础设施的限制 | 高度可扩展；可以轻松扩展或减少资源 |'
- en: '| Accessibility | Access limited to an on-premises or internal network | Can
    be accessed remotely; more accessible |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 可访问性 | 仅限于内部或本地网络访问 | 可以远程访问；更易于访问 |'
- en: '| Flexibility and integration | Customizable; may require more manual integration
    with other tools and services | Easier integration with other tools and services;
    more flexible |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 灵活性与集成 | 可定制；可能需要与其他工具和服务进行更多的手动集成 | 更易与其他工具和服务集成；更灵活 |'
- en: '| Security | Higher control over data security | Potential security concerns
    due to less control over data |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 安全性 | 对数据安全有更高的控制 | 由于对数据的控制较少，可能存在安全隐患 |'
- en: '| Suitability | Better for larger organizations with resources to manage the
    environment and data | Better for small teams or start-ups that need immediate
    access and lower upfront investment |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 适用性 | 更适合有资源来管理环境和数据的大型组织 | 更适合需要立即访问和较低前期投资的小团队或初创公司 |'
- en: '| Implementation | Build your own CI/CD tool or use a third-party tool hosted
    on your infrastructure | CI/CD as a service provided by a dedicated organization
    with internet access for customers |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 实施 | 自建 CI/CD 工具或使用托管在你基础设施上的第三方工具 | 由专门的组织提供的 CI/CD 即服务，客户可通过互联网访问 |'
- en: Table 3.1 – Differences between self-hosted and cloud-based CI/CD solutions
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3.1 – 自托管与基于云的 CI/CD 解决方案之间的差异
- en: Mobile-specific CI/CD
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移动特定的 CI/CD
- en: '**Mobile CI/CD PaaS** refers to the use of a cloud-based platform as a service
    to automate the build, test, and deployment of mobile apps. Mobile CI/CD PaaS
    providers offer a range of tools and services to help organizations streamline
    and optimize their mobile app development and release process. Different platforms
    on the market provide us with this type of service, such as **Bitrise** ([https://www.bitrise.io/](https://www.bitrise.io/)),
    **Codemagic** ([https://codemagic.io/](https://codemagic.io/)), or **Xcode Cloud**
    ([https://developer.apple.com/xcode-cloud/](https://developer.apple.com/xcode-cloud/))
    from Apple. All the platforms available in the market will be discussed and examples
    will be shown in [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118), *Achieving Continuous
    Integration and Delivery with* *Mobile DevOps*.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动 CI/CD PaaS** 是指使用基于云的服务平台来自动化移动应用的构建、测试和部署。移动 CI/CD PaaS 提供商提供一系列工具和服务，帮助组织简化和优化其移动应用的开发和发布过程。市场上有不同的平台提供此类服务，例如
    **Bitrise** ([https://www.bitrise.io/](https://www.bitrise.io/))、**Codemagic**
    ([https://codemagic.io/](https://codemagic.io/)) 或 Apple 的 **Xcode Cloud** ([https://developer.apple.com/xcode-cloud/](https://developer.apple.com/xcode-cloud/))。市场上所有这些平台将会在[*第
    4 章*](B18113_04.xhtml#_idTextAnchor118)，《实现移动 DevOps 中的持续集成和交付》中进行讨论并展示实例。'
- en: 'Mobile CI/CD as a service has the following benefits:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 移动 CI/CD 服务有以下几个好处：
- en: These platforms often come with tools for managing code changes and collaborating
    on projects that integrate with version control systems such as GitHub, Bitbucket,
    and GitLab
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些平台通常配备了管理代码变更和协作工具，能够与版本控制系统如 GitHub、Bitbucket 和 GitLab 集成。
- en: Developers can focus on writing code by automating the build and test processes
    with mobile CI/CD as a service
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员可以通过自动化构建和测试过程，专注于编写代码，利用移动 CI/CD 服务。
- en: 'Integration of cloud devices: These platforms offer tools for testing and deploying
    mobile apps across a variety of devices and platforms'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云设备的集成：这些平台提供用于跨各种设备和平台测试和部署移动应用的工具。
- en: 'Identify and resolve issues with mobile apps using monitoring and analytics
    tools: Mobile-CI/CD-as-a-service platforms often provide tools for tracking the
    performance and usage of mobile apps'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用监控和分析工具识别并解决移动应用中的问题：移动 CI/CD 服务平台通常提供跟踪移动应用性能和使用情况的工具。
- en: In comparison to setting up and maintaining an in-house mobile CI/CD infrastructure,
    mobile CI/CD PaaS involves a monthly subscription fee rather than an upfront investment
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与建立和维护内部移动 CI/CD 基础设施相比，移动 CI/CD PaaS 需要的是每月订阅费用，而不是前期投资。
- en: Organizations can adjust their mobile CI/CD capabilities as needed with mobile
    CI/CD-as-a-service scalability
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织可以根据需要调整其移动 CI/CD 能力，利用移动 CI/CD 服务的可扩展性。
- en: For organizations that are new to mobile CI/CD or do not have in-house expertise
    in this field, a mobile CI/CD PaaS can be very valuable
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于那些刚接触移动 CI/CD 或者在此领域缺乏内部专业知识的组织，移动 CI/CD PaaS 可以非常有价值。
- en: It typically frees up IT staff to focus on other tasks by allowing mobile CI/CD-as-a-service
    providers to maintain and update the infrastructure
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它通常通过允许移动 CI/CD 服务提供商维护和更新基础设施，释放 IT 员工去专注于其他任务。
- en: The integrity of the mobile CI/CD process and sensitive data is protected by
    robust security measures offered by many providers of mobile CI/CD as a service
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多提供移动 CI/CD 服务的供应商提供强大的安全措施，保护移动 CI/CD 过程和敏感数据的完整性。
- en: The release processes may also need to be accelerated since mobile requires
    fast machines with high performance to build, test, and release apps. In [*Chapter
    4*](B18113_04.xhtml#_idTextAnchor118), *Achieving Continuous Integration and Delivery
    with Mobile DevOps*, we will deep-dive more and learn about the different mobile
    CI/CD platforms and the pros and cons of each one.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 发布过程可能还需要加速，因为移动应用需要高性能的快速机器来构建、测试和发布应用。在[*第 4 章*](B18113_04.xhtml#_idTextAnchor118)，《实现移动
    DevOps 中的持续集成和交付》中，我们将深入探讨，了解不同的移动 CI/CD 平台及其优缺点。
- en: After discussing the pros and cons of self-hosted and cloud-hosted CI/CD for
    our team, each team should decide for itself which is the best option. It’s time
    to discuss whether we need a Mobile DevOps engineer for our team or whether we
    can manage it by ourselves.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了自托管和云托管 CI/CD 对我们团队的利弊之后，每个团队应该自己决定哪个是最佳选择。现在是时候讨论我们是否需要一个移动 DevOps 工程师，还是可以自己管理。
- en: As we discussed Mobile DevOps and CI/CD fundamentals and learned about self-hosted
    and cloud CI/CD platforms, you may have been thinking, *Do we need a mobile SRE
    or DevOps engineer*? This is an important question, so let’s answer it.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们讨论了移动 DevOps 和 CI/CD 基础知识，并了解了自托管和云 CI/CD 平台，你可能在想，*我们需要一位移动 SRE 或 DevOps
    工程师吗*？这是一个重要的问题，我们来回答一下。
- en: Do we need a Mobile DevOps engineer?
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们需要一位移动 DevOps 工程师吗？
- en: 'The best answer always is that it depends on the team’s objectives, goals,
    scale, skill sets, and experience. You can have different team members responsible
    for the Mobile DevOps stages, but don’t forget that we mentioned previously that
    it’s a team effort and collaboration. However, if the team already has a DevOps
    engineer responsible for the DevOps implementation in general in the company,
    it can also help the mobile team, or involve it in the mobile part by doing the
    following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的答案通常是，这取决于团队的目标、规模、技能和经验。你可以让不同的团队成员负责移动 DevOps 各个阶段，但不要忘记我们之前提到过，这是一项团队合作的工作。然而，如果团队中已经有一位
    DevOps 工程师负责公司的 DevOps 实施工作，那么他也可以帮助移动团队，或通过以下方式参与到移动部分工作中：
- en: Understand DevOps practices for mobile, such as code signing and releasing mobile
    apps.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解移动的 DevOps 实践，例如代码签名和发布移动应用。
- en: Learn the basics of mobile app development. Learn a new programming language,
    such as Kotlin or Swift, and gain experience building mobile apps.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习移动应用开发的基础知识。学习新的编程语言，例如 Kotlin 或 Swift，并积累构建移动应用的经验。
- en: Create, deploy, and manage mobile apps in the cloud as you develop your knowledge
    of cloud computing.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你发展云计算知识的过程中，在云端创建、部署和管理移动应用。
- en: Contribute to open source projects or work on personal projects to get hands-on
    experience working on Mobile DevOps projects.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与开源项目或从事个人项目，获取在移动 DevOps 项目中动手实践的经验。
- en: Keep up to date with the latest trends and best practices in Mobile DevOps.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟上最新的趋势和移动 DevOps 的最佳实践。
- en: On the other hand, experienced mobile developers may be able to take the responsibility
    of implementing Mobile DevOps because they are familiar with the mobile development
    process, most of the challenges, and the need to increase their knowledge of CI/CD
    for mobile applications.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，经验丰富的移动开发者可能能够承担实施移动 DevOps 的责任，因为他们熟悉移动开发过程、大多数挑战，并且有必要提高他们在移动应用 CI/CD
    方面的知识。
- en: There is an opinion that it’s a way of doing things and a process you use at
    work. By understanding these four essential DevOps practices, even solo or indie
    developers can improve their productivity.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种观点认为，这是你在工作中采用的一种做事方式和过程。通过理解这四个基本的 DevOps 实践，即使是独立开发者或独立开发团队也能提高他们的生产力。
- en: But for me, I believe that it can be a combination of both approaches because
    we can have both DevOps engineers and experienced mobile engineers working together
    to assist the mobile teams in achieving their goals and delivering apps more quickly
    and reliably. It is imperative that someone takes care of the infrastructure of
    the servers and someone takes care of the tools and frameworks.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 但就我而言，我认为这可以是两种方法的结合，因为我们可以让 DevOps 工程师和经验丰富的移动工程师一起合作，帮助移动团队更快速、更可靠地实现他们的目标并交付应用。确保有人负责服务器的基础设施，有人负责工具和框架，这一点至关重要。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Mobile DevOps is a crucial practice for the development of high-quality mobile
    apps. It is a powerful process that can help teams develop and deploy mobile applications
    quickly and efficiently. By leveraging automation, testing, and continuous deployment,
    teams can ensure that their applications are stable, secure, and up to date. With
    Mobile DevOps, teams can achieve their mobile development goals more quickly and
    efficiently.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 移动 DevOps 是高质量移动应用开发的关键实践。它是一个强大的过程，能够帮助团队快速高效地开发和部署移动应用。通过利用自动化、测试和持续部署，团队可以确保其应用程序稳定、安全并保持最新。借助移动
    DevOps，团队可以更快速、更高效地实现他们的移动开发目标。
- en: Mobile DevOps also helps to simplify the development process by automating repetitive
    tasks. This allows developers to focus on the creative aspects of development,
    such as creating innovative features without having to worry about mundane tasks.
    Additionally, it ensures that the mobile app follows best practices and is optimized
    for specific platforms and devices. This allows organizations to create high-quality
    mobile applications that are well suited to their users’ needs.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 移动 DevOps 还通过自动化重复性任务简化了开发过程。这使得开发人员可以专注于开发中的创新性方面，例如创建创新功能，而不必担心日常琐事。此外，它确保移动应用遵循最佳实践，并针对特定平台和设备进行了优化。这使得组织能够创建高质量的移动应用，充分满足用户需求。
- en: By using automation, version control, cloud services, monitoring and analytics,
    and security, developers can streamline the development process and improve the
    overall quality of the app. With the help of these practices, mobile app developers
    can deliver better apps faster and with more reliability.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用自动化、版本控制、云服务、监控与分析以及安全措施，开发人员可以简化开发过程，提高应用的整体质量。在这些实践的帮助下，移动应用开发人员可以更快速、更可靠地交付更好的应用。
- en: CI/CD pipeline implementation will be discussed in the next chapter, starting
    with the CI part, exploring different CI providers and the steps that need to
    be followed, and then integrating the CD part to create the automated CI/CD pipeline
    that we will be using for our mobile app development.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 流水线的实现将在下一章讨论，首先从 CI 部分开始，探索不同的 CI 提供商和需要遵循的步骤，然后集成 CD 部分，创建我们将在移动应用开发中使用的自动化
    CI/CD 流水线。
- en: 'Part 2: Implementing the Mobile DevOps Environment'
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2部分：实现移动 DevOps 环境
- en: Mobile DevOps relies on automated processes for the continuous integration and
    delivery of mobile apps. This means that code changes are automatically built,
    tested, and deployed to staging and production environments, without the need
    for manual intervention.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 移动 DevOps 依赖于自动化过程来实现移动应用的持续集成和交付。这意味着代码更改会自动构建、测试，并部署到预发布和生产环境，无需人工干预。
- en: 'This part has the following chapters:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 4*](B18113_04.xhtml#_idTextAnchor118)*, Achieving Continuous Integration
    and Delivery with Mobile DevOps*'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B18113_04.xhtml#_idTextAnchor118)*，通过移动 DevOps 实现持续集成与交付*'
- en: '[*Chapter 5*](B18113_05.xhtml#_idTextAnchor138)*, Implementing a Robust Mobile
    App Testing Strategy*'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B18113_05.xhtml#_idTextAnchor138)*，实施强大的移动应用测试策略*'
- en: '[*Chapter 6*](B18113_06.xhtml#_idTextAnchor210)*, Mobile App Release Management*'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B18113_06.xhtml#_idTextAnchor210)*，移动应用发布管理*'
