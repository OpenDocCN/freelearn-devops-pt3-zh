["```\nJob1:\n  stage: A\nJob2:\n  stage: A\nJob3:\n  stage: B\nJob4:\n  stage: B\n```", "```\nJob1:\n  stage: A\nJob2:\n  stage: A\nJob3:\n  stage: B\n  needs: [\"Job1\"]\nJob4:\n  stage: B\n```", "```\nmy-multiarch-ci-job:\n  stage: build\n  image: multiarch/crossbuild\n  script:\n    - make helloworld\n  parallel:\n    matrix:\n      - ARCH: x86\n        CROSS_TRIPLE: \" \"\n      - ARCH: arch64\n        CROSS_TRIPLE: \"arch64-linux-gnu\"\n      - ARCH: powerpc\n        CROSS_TRIPLE: \"powerpcle-linux-gnu\"\n  tags:\n    - $ARCH\n```", "```\nMyCIJob:\n  cache:\n    paths:\n      - theDirectoryToSave/*\n      - myFileToSave.js\n```", "```\nMyCIJob:\n  cache:\n    key: cache1\n    paths:\n      - theDirectoryToSave/*\n      - myFileToSave.js\n```", "```\nMyCIJob:\n  cache:\n    key: cache1\n    policy: pull\n    paths:\n      - theDirectoryToSave/*\n      - myFileToSave.js\n```", "```\nMyArtifactJob:\n  artifacts:\n    paths:\n      - theDirectoryToSave/*\n      - myFileToSave.js\n```", "```\nMyArtifactJob:\n  artifacts:\n    when: 'on_success'\n    paths:\n      - theDirectoryToSave/*\n      - myFileToSave.js\n```", "```\nMyBuildJob:\n  image: nodejs:latest\n  script:\n    - npm install\n    - npm build\n  artifacts:\n    when: 'on_success'\n    paths:\n      - node_modules/*\n      - dist/*\n```", "```\nMyDependentJob:\n  image: docker:latest\n  dependencies:\n    - MyBuildJob\n  script:\n    - docker build\n```", "```\n.job_definition: &job_definition\n  image: node:latest\n  services:\n    - postgres\njobOne:\n  <<: *job_definition\n  script:\n    - npm build\njobTwo:\n  <<: *job_definition\n  script:\n    - npm test\n```", "```\njobOne:\n  image: node:latest\n  services:\n    - postgres\n  script:\n    - npm build\njobTwo:\n  image: node:latest\n  services:\n    - postgres\n  script:\n    - npm test\n```", "```\n.rule_definition:\n  rules:\n    - if: $CI_PIPELINE_SOURCE ==\"push\"\n.job_definition:\n  extends: .rule_definition\n  image: node:latest\n  services:\n    - postgres\njobOne:\n  extends: .job_definition\n  script:\n    - npm build\njobTwo:\n  extends: .job_definition\n  script:\n    - npm test\n```", "```\njobOne:\n  image: node:latest\n  services:\n    - postgres\n  script:\n    - npm build\n  rules:\n    - if: $CI_PIPELINE_SOURCE ==\"push\"\njobTwo:\n  image: node:latest\n  services:\n    - postgres\n  script:\n    - npm test\n  rules:\n    - if: $CI_PIPELINE_SOURCE ==\"push\"\n```", "```\n.build-node:\n  stage: deploy\n  before_script:\n    - npm install\n  script:\n    - npm build\n```", "```\ninclude:\n  - local: Build.gitlab-ci.yml\nBuild-My-App:\n  stage: build\n  script:\n    - !reference [.build-node, script]\n    - echo \"Application is Built\"\n```", "```\nBuild-My-App:\n  stage: build\n  script:\n    - npm build\n    - echo \"Application is Built\"\n```", "```\n\"Build Application\":\n  stage: build\n  script:\n    - code here\n\"Build Container\":\n  stage: build\n  script:\n    - code here\n\"Deploy Container\":\n  stage: deploy\n  script:\n    - code here\n\"Deploy Production\":\n  stage: deploy\n  script:\n    - code here\n```", "```\n\"Build Application\":\n  stage: build\n  script:\n    - code here\n\"Build Container\":\n  stage: build\n  script:\n    - code here\n```", "```\n\"Deploy Container\":\n  stage: deploy\n  script:\n    - code here\n\"Deploy Production\":\n  stage: deploy\n  script:\n    - code here\n```", "```\ninclude: \"Build.gitlab-ci.yml\"\ninclude: \"Deploy.gitlab-ci.yml\"\n```", "```\n.npm-build:\n  stage: build\n  variables:\n    NPM_CLI_OPTS: \"\"\n  before_script:\n    - npm install\n  script:\n    - npm rebuild $NPM_CLI_OPTS\n```", "```\ninclude: Templates.gitlab-ci.yml\nMy-NPM-Job:\n  extends: .npm-build\n  variables:\n    NPM_CLI_OPTS: '--global'\n```", "```\n    include:\n    ```", "```\n      - project: \"my-group/my-project\"\n    ```", "```\n        ref: my-branch\n    ```", "```\n        file: 'Templates.gitlab-ci.yml\n    ```", "```\n    include:\n    ```", "```\n      - remote: 'https://www.google.com/Templates.gitlab-ci.yml'\n    ```", "```\n    include:\n    ```", "```\n      - template: 'Templates.gitlab-ci.yml'\n    ```", "```\nMy-Child-CI-Job:\n    stage: build\n    trigger:\n      include:\n        - project: \"my-group/my-project\"\n          ref: my-branch\n          file: 'Build.gitlab-ci.yml'\n```", "```\nFROM alpine:3.12.0\nRUN apk update && apk add –no-cache nodejs npm && mkdir ~/.npm && chmod -R g=u ~/.npm\nUSER 1001\nCMD [\"echo\", \"This is a purpose built container. It is meant to be used in a pipeline and not executed.\"]\n```"]