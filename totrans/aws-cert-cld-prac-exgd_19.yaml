- en: '[*Chapter 15*](B17124_15_Final_SK_ePub.xhtml#_idTextAnchor375): Billing and
    Pricing'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many companies looking to move to the cloud have heard of the cost benefits
    associated with shifting from a CAPEX model of investment in IT to an OPEX model.
    CAPEX refers to capital expenditure for the procurement of long-term assets such
    as infrastructure equipment, vehicles, and buildings. A company that purchases
    such assets will own those assets, but this tends to tie up capital that could
    otherwise have been spent on other resources that directly benefit the business.
    Consider a company having access to spare capital to invest in research and development
    of their products and services, as opposed to simply purchasing IT infrastructure
    equipment.
  prefs: []
  type: TYPE_NORMAL
- en: OPEX refers to operating expenditure and is an ongoing cost for running a product,
    business, or system. In the context of cloud computing, OPEX is the ongoing cost
    of leasing resources from the cloud provider, such as running a fleet of web servers,
    where the business is charged on a pay-as-you-go model. The idea that you do not
    need to tie up vast amounts of capital in expensive hardware equipment (which
    depreciates rapidly), or expensive software licenses for your on-premises infrastructure,
    is a critical factor for your company's financies.
  prefs: []
  type: TYPE_NORMAL
- en: However, simply shifting to the cloud is not necessarily going to save you money.
    The solutions you design to host your applications in the cloud need to be cost-optimized
    and architected to ensure you get the best value for your dollar. The good news
    is that with a cloud provider such as AWS, the solutions you design can be highly
    cost-effective. For one thing, you can ensure that you only pay for services when
    you consume them. In addition, each service offering has various options to minimize
    costs that you can configure, based on your access patterns and core business
    requirements.
  prefs: []
  type: TYPE_NORMAL
- en: One thing to be careful about is that you should not consider cost optimization
    in isolation. Minimizing cost is important for the business, but so is ensuring
    application availability, reliability, and scalability.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we look at the fundamentals of cost optimization and the key
    components of AWS billing and pricing. We discuss key principles and look at various
    tools to help you gain insight and manage your costs effectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'The topics covered in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: An overview of billing and pricing on AWS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding AWS cost optimization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning about AWS Billing and Cost Management tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning how to use the AWS pricing and TCO calculators â€“ pricing calculator
    and migration calculator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete the exercises in this chapter, you will need to log in to your AWS
    account as the IAM user **Alice**.
  prefs: []
  type: TYPE_NORMAL
- en: An overview of billing and pricing on AWS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AWS charges you based on three core components, which are the amount of *computing*,
    *storage*, and *outbound data transfers* you perform. There are some deviations
    to this, but these are the primary cost drivers. With compute, this could represent
    the number of hours that your **On-Demand Instance** is in the running state or
    the number of Lambda executions you perform. With storage, you are charged per
    GB. In both cases, you are charged for any data transferred out of the Region
    or AWS. The data transfer out rate is dependent on the service and the Region
    from which the data originates.
  prefs: []
  type: TYPE_NORMAL
- en: 'A couple of key points to note here are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For data transfer within a Region:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If an **internet gateway** is used to send data to an AWS public service (Amazon
    S3, DynamoDB, and so on) in the same Region, then there are no data transfer charges.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If a **NAT gateway** is used to access those public services in the same Region,
    then there is a data processing charge, calculated at a per-GB rate.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Data transfers between workloads within the same **Availability Zone** are free.
    For certain services, such as EC2, data transfers across Availability Zones will
    incur a data transfer charge.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For data transfers across Regions, there is always a data transfer charge.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You are not charged for data transferred into AWS, for example, from your on-premises
    data center.
  prefs: []
  type: TYPE_NORMAL
- en: Let's examine some key principles of pricing on AWS and the strategies you should
    adopt when moving your workloads to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding AWS cost optimization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Depending on your workloads and specific business requirements, you have access
    to a wide range of service options and tools to help you optimize for costs, ensuring
    that you monitor and control your spending. Choosing the right combination of
    services and deploying the correct resource configurations will help you run a
    tight ship. Here are some key concepts to bear in mind when architecting solutions
    for the cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Choose the right pricing model**: You can use On-Demand Instances when you
    know that you only need the compute resources for a limited amount of time and
    for a specific short-term project. From a reliability point of view, you need
    to ensure that there are no interruptions to the service, but you are not going
    to be using the resources 24/7, 365 days a year. In this case, an on-demand pricing
    model works well. Alternatively, you can invest in **reserved capacity**, which
    can save up to 72% over equivalent on-demand capacity price, but only if you need
    the resources 24/7, and for a much longer duration, for example, a year. You can
    also consider using **Spot EC2 instances** for applications that are fault-tolerant,
    scalable, or flexible, and where your application can tolerate interruptions.
    Spot instances can save you up to a 90% discount off on-demand prices and there
    is no upfront commitment. Finally, consider opting for the **compute Savings Plans**
    to reduce EC2, Fargate, and Lambda costs. EC2 Savings Plans can deliver savings
    of up to 72% on your AWS compute usage. Here, you make a commitment to a certain
    amount of compute usage, and you are automatically charged at the discounted savings
    plan prices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Match capacity with demand**: AWS offers several tools to help you identify
    usage patterns. AWS Cost Explorer resource optimization (discussed later in this
    chapter) can help you identify instances that are idle or have low utilization.
    You can save money by either reducing the capacity provisioned or if possible,
    stopping the instances during periods when they are not in use. You can use **AWS
    Instance Scheduler**, which is a CloudFormation template offered by AWS that can
    help reduce costs by configuring start and stop schedules for your Amazon EC2
    and Amazon RDS instances. This is like the exercise you completed in [*Chapter
    12*](B17124_12_Final_SK_ePub.xhtml#_idTextAnchor296), *Automation and Deployment
    on AWS*, where you configured Amazon CloudWatch Events and Lambda to automatically
    start and stop EC2 instances at scheduled times. Another service that can be stopped
    when not in use is Amazon RDS. In the case of Amazon Redshift, you can pause the
    service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RequestCount` value of less than 100 over the past 7 days, which could be
    ideal candidates to terminate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Amazon S3 analytics will not provide recommendations for transitions to the
    One Zone-IA or S3 Glacier storage classes.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In this section, we examined some core concepts to ensure that the workloads
    you deploy in the cloud are cost-optimized. In the next section, we will look
    at various tools and services that will help you monitor, control, and manage
    your costs effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Learning about AWS billing and cost management tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll look at several AWS billing and cost management tools,
    enabling you to visualize your usage and spend across your AWS accounts as well
    as implementing better cost control strategies. We'll start by looking at the
    Cost Explorer service.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Cost Explorer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AWS Cost Explorer enables you to monitor and visualize your costs via dashboards
    and reports. You can access 12 months of usage and spending data as well as forecasting
    what your future costs will be for the next 12 months. You need to enable the
    Cost Explorer service and, once enabled, the current month's reporting data is
    accessible after 24 hours. Additional data from previous months will start to
    appear after a few more days.
  prefs: []
  type: TYPE_NORMAL
- en: 'The AWS Cost Explorer home page displays a snapshot of your spending. Here,
    you will find **Current month costs** as well as **Forecasted month end costs**,
    as per the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.1 â€“ Cost Explorer home page'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_01.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.1 â€“ Cost Explorer home page
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS Cost Explorer offers several types of reports. For example, in the following
    screenshot, you will see a *monthly cost by service* report for one of my AWS
    accounts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.2 â€“ Cost Explorer â€“ monthly cost by service report'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_02.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.2 â€“ Cost Explorer â€“ monthly cost by service report
  prefs: []
  type: TYPE_NORMAL
- en: The report shows the last 6 months of spending broken down by service, comprising
    EC2 instances, Amazon RDS, and storage archives in Amazon Glacier.
  prefs: []
  type: TYPE_NORMAL
- en: Additional features of Cost Explorer include granularly filtering your data
    to understand daily and hourly cost patterns and by resource types.
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS Cost Explorer also provides various recommendations where you can save
    some money. For example, from the left-hand menu of the AWS Cost Explorer console,
    you can select **Recommendations**, under the **Reservations** category, to see
    where Cost Explorer suggests purchasing EC2 **Reserved Instances** (**RI**) for
    your existing on-demand workloads as per the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.3 â€“ Cost Explorer RI recommendations'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_03.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.3 â€“ Cost Explorer RI recommendations
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, purchasing RI for the two on-demand instances I have running
    would potentially save me 33% off my final costs.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Cost Explorer can also be used to send you EC2 *rightsizing recommendations*
    to help you examine your historical usage patterns and identify resources that
    are being underutilized. AWS Cost Explorer will be able to identify idle instances
    and allow you to take action to terminate or resize your underutilized resources.
  prefs: []
  type: TYPE_NORMAL
- en: Another report you can view within Cost Explorer is the **RI utilization report**.
    The RI utilization report enables you to identify the savings made from using
    RI over on-demand options for Amazon EC2, Amazon Redshift, Amazon RDS, and so
    on. The RI report also provides details of how much you may have overspent because
    you are underutilizing your RI.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, AWS Cost Explorer comes with a security feature to help you detect
    anomalies in your spending patterns, and the root causes, and can be configured
    to send you alerts using Amazon SNS.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you have learned about the AWS Cost Explorer tool, which enables
    you to visualize and manage your costs and allows you to create custom reports
    to identify usage patterns and trends.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we discuss how cost allocation tags can help you identify
    which services and resources you are consuming and spending on.
  prefs: []
  type: TYPE_NORMAL
- en: Cost allocation tags
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Previously we have discussed how important tagging your resources is. It allows
    you to not only identify your resources, but you can also automate and run management
    tasks against your resources using these tags as a form of identification. Additionally,
    you can also use tagging to help you identify which resources are costing you
    money and by using cost allocation tags, you can track usage by different projects,
    departments, business units, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Tags consist of a *key* and a *value*, and for every resource, you can have
    up to 50 key-value tags. In addition, the tag key must be unique, and each key
    can only have one value. You need to first activate cost allocation tags, which
    AWS will then use to help you analyze your costs using those tags. There are two
    types of cost allocation tags:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS-generated tags**: These are created and defined by AWS and the AWS Marketplace.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User-defined tags**: These can be created and defined by you based on your
    business cost management and naming conventions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Activating the tags can be done from the billing management console and each
    *tag key* will need to be activated individually. Once activated, AWS will generate
    **comma-separated values** (**CSV**) file reports with your usage and costs grouped
    by your active tags.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's look at the cost and usage report.
  prefs: []
  type: TYPE_NORMAL
- en: Cost and usage report
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AWS offers a cost and usage report tool that provides a very detailed breakdown
    of the resources you use and the associated costs. The report includes usage amounts
    and units consumed, rates, costs, and product attributes. Reports are published
    to an Amazon S3 bucket of your choice, and the reports can be configured to provide
    a breakdown of your costs by hour, day, or month. These reports are made available
    in your S3 bucket in CSV format, which you can then import into Microsoft Excel
    or other spreadsheet tools.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, you can also integrate the reports for use with Amazon Athena,
    Redshift, and QuickSight, as well as setting the compression type to GZIP, ZIP,
    or Parquet.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's examine the AWS Budgets service.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Budgets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AWS Budgets enables you to understand how money is being spent on the workloads
    you deploy in the cloud. You can use AWS Budgets to track your cost and usage
    across different types of projects you may be running in your organization. You
    may have different departments requiring different cloud services and, based on
    their requirements, specify monthly budgets for their spending.
  prefs: []
  type: TYPE_NORMAL
- en: 'If your budgets exceed the threshold (whether actual or forecasted), you can
    define specific actions to take on your AWS account. At present, you can define
    three types of actions:'
  prefs: []
  type: TYPE_NORMAL
- en: An **Identity and Access Management** (**IAM**) policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service Control Policies** (**SCPs**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Target running instances (EC2 or RDS)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, you could specify an IAM policy that denies the ability to launch
    new EC2 instances if the monthly budget for EC2 has been exceeded. You can then
    apply this policy to the IAM user, group, or role used to launch instances.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Budgets actions can be executed automatically when the threshold has been
    exceeded or can be configured for manual approval if required.
  prefs: []
  type: TYPE_NORMAL
- en: With AWS Budgets, you can also set up alerts using Amazon SNS to be notified
    (or perform some event-driven action) if the actual or forecast spending is likely
    to cross the budgeted threshold values. You can also configure variable target
    amounts, so that the budgeted amount increases by a certain percentage over a
    period because consumption is likely to increase.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Budgets can also be used to ensure that you stay within specified quotas
    and limits, including staying under a specific AWS Free Tier offering.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several types of budgets you can create, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cost budgets**: Define specific amounts you are willing to spend.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Usage budgets**: Define how much you want to use a specific service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RI utilization budgets**: Specify a utilization threshold and be alerted
    if you use less than the threshold value. This enables you to identify those RI
    resources that may be underutilized and reconsider whether those reservations
    are required.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RI coverage budgets**: Identify how much of your instance usage is covered
    by the reservation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Saving plan utilization budgets**: Identify when your usage of savings plans
    falls below utilization threshold values, enabling you to identify under-utilized
    savings plans.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Saving plan coverage budgets**: Identify how much of your instance usage
    is covered by saving plans.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we looked at AWS Budgets, which can be used to ensure you do
    not overspend on the resources you deploy on AWS.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we move on to look at some AWS pricing and cost calculators.
  prefs: []
  type: TYPE_NORMAL
- en: Learning how to use the AWS pricing and TCO calculators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AWS offers calculators to help you estimate costs associated with setting up
    and deploying resources on AWS. Two key calculators are the **AWS Pricing Calculator**
    and **Migration Evaluator** (previously known as the TCO Calculator).
  prefs: []
  type: TYPE_NORMAL
- en: The AWS Pricing Calculator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The AWS Pricing Calculator is a tool used to calculate the estimated monthly
    costs of deploying and configuring AWS services and resources. You can use the
    AWS Pricing Calculator to work out estimated monthly charges for your projects
    and applications that you wish to deploy on AWS. You can view prices per service
    or per group of services to analyze your proposed architecture costs.
  prefs: []
  type: TYPE_NORMAL
- en: You can then send the estimate's unique link to other team members, finance,
    and your clients to help analyze the potential cost of the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see how the AWS Pricing Calculator works, let''s take an example of a simple
    application solution comprising elastic load balancers, EC2 instances, and Amazon
    RDS databases. Refer to the following architectural diagram for the proposed design:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.4 â€“ AWS Pricing Calculator example â€“ application architecture'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_04.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.4 â€“ AWS Pricing Calculator example â€“ application architecture
  prefs: []
  type: TYPE_NORMAL
- en: 'In the preceding architecture, the core resources deployed are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A VPC in the **US-East-1** Region, with six subnets, spread across two Availability
    Zones.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An internet gateway to allow traffic into and out of the VPC.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An **Application Load Balancer** (**ALB**) to allow users on the internet to
    access the web application running on the **app s****ervers**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two EC2 instances, one in each Availability Zone, within private subnets. An
    **Auto Scaling group** designed to scale out/in as required. For this example,
    we will keep the instance fleet size to two EC2 instances, replacing any failed
    EC2 instances if required.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Amazon RDS database running the MySQL engine, configured with **Multi-AZ**
    to offer high availability and resilience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining the estimated costs for provisioning these resources also requires
    you to be aware of the type and amount of traffic that will be transferred in
    and out. These details are going to be derived from setting a test environment
    and monitoring your workloads or perhaps from previous deployments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To simplify this example, let''s assume that your architecture is provisioned
    as per the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 15.1 â€“ AWS Pricing Calculator example architecture'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Table_15.1.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Table 15.1 â€“ AWS Pricing Calculator example architecture
  prefs: []
  type: TYPE_NORMAL
- en: To determine the estimated monthly costs for the set of resources as detailed
    in the preceding table, you can use the AWS Pricing Calculator available at [https://calculator.aws/](https://calculator.aws/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the AWS Pricing Calculator, you will need to select the various services
    and provide resource configuration information as per the example shown in the
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.5 â€“ AWS Pricing Calculator â€“ EC2 instance specifications'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_05.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.5 â€“ AWS Pricing Calculator â€“ EC2 instance specifications
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have provided all the various configuration items as well as an indicative
    quantity of data transferred in and out, you will be provided with an estimate
    table, like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 15.2 â€“ AWS Pricing Calculator â€“ estimated costs'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Table_15.2_a.jpg)![Table 15.2 â€“ AWS Pricing Calculator â€“ estimated costs'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Table_15.2_b.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Table 15.2 â€“ AWS Pricing Calculator â€“ estimated costs
  prefs: []
  type: TYPE_NORMAL
- en: Note that the aforementioned costs are just estimates and to keep the example
    simple, don't cover minute configuration details for your resources. For example,
    no backup storage is included with Amazon RDS and no routing policies are defined
    for Route 53\. In addition, the prices exclude taxes.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's look at a brief overview of Migration Evaluator.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Migration Evaluator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many companies looking to move to the cloud will need to understand the cost
    implication of migration projects required to complete the shift from their on-premises
    environments. As well as designing the technical steps required to perform the
    migration, companies need to perform estimated cost analysis and the potential
    savings likely to be gained by moving to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: AWS Migration Evaluator removes the guesswork in planning any migration project
    to AWS. Your organization can work with the Migration Evaluator team to help capture
    millions of real-time data points related to your IT environment and review recommendations
    for the right sizing and right costing of workloads on AWS. With the Migration
    Evaluator service, you can use **AWS Application Discovery Service**, the **TSO
    Logic agentless collector**, or third-party tools to discover and gain insights
    into your current compute, storage, and total cost of ownership. The agentless
    collector tool can analyze your on-premises resources requiring just read-only
    access to your VMware, Hyper-V, Windows, Linux, Active Directory, and SQL Server
    infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Migration Evaluator then provides extensive analysis and matches your existing
    workloads with appropriate AWS resources, such as the correct EC2 instance types,
    storage platform and database services, and so on, that can be provisioned in
    the cloud for your applications' workloads. The service can also help perform
    *what-if* analysis such as identifying cost savings by selecting different purchase
    options for your EC2 instances as well as incorporating elasticity features to
    eliminate waste by provisioning resources only when there is demand.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, Migration Evaluator helps companies build business case reports
    and illustrate the cost benefits of moving to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we looked at two types of AWS calculators to help identify
    costs associated with hosting workloads and applications in the cloud as well
    as performing total cost of ownership analysis with a view to helping customers
    make the right migration decisions.
  prefs: []
  type: TYPE_NORMAL
- en: In the upcoming exercise for this chapter, we look at how to work with AWS Budgets.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 15.1 â€“ setting up cost budgets on AWS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this exercise, you will create a total monthly cost budget for your workloads.
    This will allow you to monitor your spending and avoid unintentional cost overruns:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the AWS Management Console using the credentials of the IAM user *Alice*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for `AWS Budgets` from the top search bar on the console screen, and
    navigate to the AWS Budgets console page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the right-hand pane, click on the **Create a budget** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, from the list of **Budget types**, select **Cost budget â€“ Recommended**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Next** button in the bottom-right corner of the page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Set budget amount** pane, configure the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the period to **Monthly**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Recurring budget**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the start month of your choice.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Fixed** option under **Choose how to budget**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, enter your budget amount. I have set mine to $20 as per the following
    screenshot:![Figure 15.6 â€“ AWS Budgets â€“ setting up monthly cost budgets
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_15_06.jpg)'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 15.6 â€“ AWS Budgets â€“ setting up monthly cost budgets
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Scroll further down to review your **Budget scoping** pane. Here, you will see
    whether your monthly cost budget is reasonable based on historic costs. As you
    will note from the following screenshot, for my AWS account, the budget of $20
    is acceptable because, since February 2021, I have been spending less than $15,
    which is within my budget:![Figure 15.7 â€“ AWS Budgets â€“ budget scoping
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_15_07.jpg)'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 15.7 â€“ AWS Budgets â€“ budget scoping
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, provide a name for your budget and click **Next**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you can configure an alerts threshold, where you can be notified if you
    cross the threshold. Click on the **Add an alert threshold** button.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Set alert threshold**, specify a threshold of 80% of the budgeted amount
    and set the trigger to **Actual** as per the following screenshot:![Figure 15.8
    â€“ Setting alert threshold
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B17124_15_08.jpg)'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 15.8 â€“ Setting alert threshold
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, under **Email recipients**, specify an email address to send the alerts
    to.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also set Amazon SNS alerts and Amazon Chatbot alerts.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Next** button in the bottom-right corner of the page.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also define **Actions** to take when the threshold is crossed, for which
    you will need to configure appropriate IAM roles. For now, just click on the **Next**
    button.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Review your settings and click the **Create budget** button in the bottom right-hand
    corner of the page.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your cost budget will be created, and you will be able to view it in the **Overview**
    console as per the following screenshot:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 15.9 â€“ AWS Budgets â€“ Overview console'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17124_15_09.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.9 â€“ AWS Budgets â€“ Overview console
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that you can set up five additional alerts for your budgets, such as the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: When current monthly costs exceed the budgeted amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When current monthly costs exceed 80% of the budgeted amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When forecasted monthly costs exceed the budgeted amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section exercise, you learned how to create monthly cost budgets for
    your AWS account. Setting custom budgets can alert you if you are crossing specific
    threshold values or even forecasted costs in the future.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we provide a summary of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Businesses across the globe of all sizes can benefit from moving their applications
    and workloads to the cloud and gain a competitive advantage from the vast array
    of services on offer by AWS. AWS enables customers to build highly available,
    fault-tolerant, scalable, and resilient cloud solutions. AWS offers some of the
    latest and greatest cutting-edge technologies to help you design and build robust
    application solutions. Without AWS, the cost of provisioning the vast pool of
    services and resources alone would make it impossible for many companies, including
    start-ups, to innovate.
  prefs: []
  type: TYPE_NORMAL
- en: One of the prime drivers of cloud adoption is the fact that companies can save
    on capital expenses and opt for a variable expense model for all their IT investments.
    This allows businesses to channel more of the previous capital into improving
    their products and services. However, careful planning and monitoring are required.
    It is all too easy to spin the instances and other resources and incur unnecessary
    costs, especially where you may have overprovisioned the infrastructure required
    to support your applications. This clearly defeats one of the primary reasons
    for moving to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you learned about the principles of cost optimization, and
    the approaches you can take to ensure you consume the right services at the right
    price. You learned how to provision resources when you need them most and not
    have idle resources simply sitting around gathering dust. Different pricing options
    for different workload types enable you to make sensible decisions about your
    investment. In addition, AWS offers a number of different management and monitoring
    tools to help you stay well informed about your spending. Using Cost Explorer,
    cost and usage reports, and AWS Budgets, you can run a tight ship if you implement
    best practices and plan your solutions carefully.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we also reviewed a couple of cost calculators that help you estimate
    the investment required for implementing solutions on AWS and how migrating your
    workloads to the cloud could save you money using Migration Evaluator.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we offer two complete exam-style practice questions to
    help you gauge your understanding of the syllabus for the AWS Certified Cloud
    Practitioner exam and help you prepare for the certification.
  prefs: []
  type: TYPE_NORMAL
- en: Passing the AWS Certified Cloud Practitioner exam will help you progress your
    career in cloud computing. This exam guide has been designed to help you not only
    achieve exam success, but also gain valuable hands-on experience in architecting,
    building, and managing real-world cloud solutions. With a vast array of exercises
    in this study guide, we hope you are now feeling much more confident in tackling
    real-world business use cases.
  prefs: []
  type: TYPE_NORMAL
- en: I would like to take this opportunity to thank you for your time in going through
    this material and I hope you have gained valuable knowledge and some hands-on
    experience in designing cloud solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which AWS service enables you to specify a monthly cost amount for your AWS
    account and send out an alert if the actual or forecast spending is likely to
    cross the budgeted threshold values?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Budgets
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Cost Explorer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Config
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Pricing Calculator
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which AWS service enables you to access 12 months of usage and spending data
    as well as forecasting what your future costs will be for the next 12 months?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Cost Explorer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Billing alarms
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Config
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS annual report
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The finance department would like to get a report on the total monthly spending
    for all AWS resources broken down by business unit/project name. The purpose of
    which is to understand how much each business unit/project costs. Which feature
    of the AWS Billing and Cost Management services enables you to achieve this requirement?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Cost allocation tags
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cost and usage report
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Budgets
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS CloudWatch
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which AWS service can analyze your monthly compute usage and offer recommendations
    for purchasing EC2 **RI** for your existing on-demand workloads?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS CloudTrail
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Budgets
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Cost Explorer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Migration Evaluator
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You are planning on architecting and building a three-tier application solution,
    comprising EC2 instances, load balancers, the Auto Scaling service, and a backend
    database. Which AWS service can you use to produce an estimated monthly cost for
    your proposal?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Cost Explorer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Pricing Calculator
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS Cost Optimization Analyzer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS SNS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
