- en: '14'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Avoiding Pitfalls and Diving into the Future
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The DevOps movement has evolved and changed in many ways since the Flickr talk
    at the 2009 Velocity Conference. New advances in technology, such as containers
    and Kubernetes, have changed many of the core practices. New ways of doing things
    such as **site reliability engineering** (**SRE**) have changed the roles people
    play.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will examine how to start incorporating the principles and
    practices discussed throughout the book so that you can successfully move toward
    a DevOps transformation or move to SAFe®.
  prefs: []
  type: TYPE_NORMAL
- en: We will look at some emerging trends that may play a major role in the evolution
    of DevOps. We will look at XOps, which seeks to incorporate more parts of the
    organizations into the collaborative approach seen in DevOps and DevSecOps. We
    will also have a look at an alternative view to the standard linear value stream.
  prefs: []
  type: TYPE_NORMAL
- en: We will also examine new technologies that have emerged that promise to change
    how we work. With AI for IT Operations, also called AIOps, we will examine the
    growing role **Artificial** **Intelligence** (**AI**) and **Machine Learning (ML**)
    play in predicting problems and vulnerabilities. We will look at the merge between
    version control and **Continuous Integration/Continuous Deployment** (**CI/CD**)
    when we examine GitOps.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will look at common questions that may come up with some answers.
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding pitfalls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the journey toward a DevOps approach, it only makes sense that not everyone
    will follow the same path. Different organizations are at different stages of
    readiness to accept the mindset change needed to allow for a successful DevOps
    journey.
  prefs: []
  type: TYPE_NORMAL
- en: That being said, we will look at a set of steps for starting or restarting a
    DevOps approach based on what we have learned in the previous chapters of this
    book. You will see that there is frequently no direct path from one step to the
    next.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s view the following steps for our DevOps journey:'
  prefs: []
  type: TYPE_NORMAL
- en: Understand the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Start small
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Start automating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure, learn, and pivot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lets start on our journey now.
  prefs: []
  type: TYPE_NORMAL
- en: Understand the system
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whether we are starting fresh or restarting after stumbling, we need to take
    a step from the Improvement Kata from Lean thinking and evaluate where we are.
    This evaluation should be a holistic look at the existing processes, the people
    behind the processes, and if tools are enabling processes.
  prefs: []
  type: TYPE_NORMAL
- en: 'One way of looking at all these facets is to do a value stream mapping, as
    first discussed in [*Chapter 7*](B18756_07.xhtml#_idTextAnchor163), *Mapping Your
    Value Streams*. As we originally spoke about in that chapter, performing a value
    stream mapping workshop allows you to discover the following things:'
  prefs: []
  type: TYPE_NORMAL
- en: The process steps in your workflow from beginning to end
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The people that perform those process steps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Possible areas for improvement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The value stream mapping workshop also gives the perspective of looking at the
    scope of the entire effort of development in a broader perspective of a system.
    This systemic view is not just a series of process steps and improvements, but
    also how tools work in this process, or can work in the process if they’re not
    incorporated.
  prefs: []
  type: TYPE_NORMAL
- en: 'A value stream mapping workshop produces two value streams: the current value
    stream and an *ideal* value stream that contains enhancements and improvements
    to lower cycle time and lead time and increases **Percent Complete and Accurate**
    (**%C&A**). Record these enhancements so that the people in the value stream will
    work on them as part of **continuous** **learning** (**CL**).'
  prefs: []
  type: TYPE_NORMAL
- en: Start small
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After the value stream mapping workshop, look at the list of improvements and
    enhancements from the *ideal* value stream. From the list of enhancements, the
    people in the value stream should select what they consider the most important
    enhancement to work on.
  prefs: []
  type: TYPE_NORMAL
- en: Allowing only one enhancement at a time promotes focus. We’ve seen this in [*Chapter
    4*](B18756_04.xhtml#_idTextAnchor086), *Leveraging* *Lean Flow to Keep the Work
    Moving*, where working in small batch sizes avoids the problems that multitasking
    can bring in preventing work from completing.
  prefs: []
  type: TYPE_NORMAL
- en: One such enhancement may be to decrease cycle and lead time in developing your
    products by increasing flow. The practices in [*Chapter 4*](B18756_04.xhtml#_idTextAnchor086)—such
    as small batch sizes, monitoring queues, and limiting WIP—can also help with this
    step. Following these practices may lead to increased agility that gets better
    with a DevOps approach.
  prefs: []
  type: TYPE_NORMAL
- en: Another area of improvement the people of the value stream can look at is the
    use of their tooling. The first foundational tool to consider is version control.
    The teams in the value stream should evaluate putting all their files in a version
    control system. If they are already using version control, they should ensure
    that they are using a common version control system and that everyone has the
    necessary access.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to selecting a version control system, the people of the value stream
    should select a branching model that outlines how they will branch from the trunk
    and when to merge changes back to the main branch or trunk.
  prefs: []
  type: TYPE_NORMAL
- en: Start automating
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A key step toward improving the value stream is establishing a CI/CD pipeline.
    If the organization has not established a CI/CD pipeline, it may establish one
    that comes included with many version control systems. Other organizations may
    want to have the flexibility that comes from installing a separate CI/CD pipeline
    tool. Either approach works, as the most important thing is the creation of such
    a pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: The CI/CD pipeline can then be triggered from version control when a commit
    occurs. Add the necessary actions that occur after the commit, one action at a
    time. These actions may start with building or compiling the changes that come
    from the commit. A completed build can then allow the merge into the higher-level
    branch and possibly save the build artifacts into an artifact repository.
  prefs: []
  type: TYPE_NORMAL
- en: Start automating the testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once the endpoints of the CI/CD pipeline are defined, you can fill other intermediate
    steps of the pipeline with automated testing. You can create tests that will automatically
    run and find problems with functionality and security.
  prefs: []
  type: TYPE_NORMAL
- en: 'Start by creating, one by one, automated tests that comprise the following
    categories:'
  prefs: []
  type: TYPE_NORMAL
- en: Unit testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security testing (**static application security testing** (**SAST**), **dynamic
    application security testing** (**DAST**), and other scans)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development of the automated testing now encourages the creation of multiple
    environments for deployment, such as test, staging, and production. Unit test
    passage can allow for the deployment of a test environment for the other levels
    of testing.
  prefs: []
  type: TYPE_NORMAL
- en: Create environments, deployments, and monitoring
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The establishment of testing allows us to establish the different pre-production
    environments, all of them equivalent as far as practicality will allow.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing a new pre-production environment also allows us to introduce monitoring
    for these pre-production environments. Monitoring can start on the test environment
    until we have high enough confidence to deploy the monitoring on staging environments,
    and ultimately on production itself.
  prefs: []
  type: TYPE_NORMAL
- en: Constructing the pre-production environments allows us to establish the tooling
    to do the construction. Configuration management tooling and **Infrastructure-as-Code**
    (**IaC**) can be added to define and configure the environments. Establishing
    standard configurations allow capabilities such as rollback to occur.
  prefs: []
  type: TYPE_NORMAL
- en: Measure, learn, and pivot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At every step, we should evaluate whether each additional step we add is working
    to bring us closer to the ideal future state value stream. Make adjustments as
    needed. These tiny course corrections allow for CL.
  prefs: []
  type: TYPE_NORMAL
- en: There may be questions about whether the timing is right to pivot. The justification
    is always to avoid the *sunk cost* fallacy, where people hold on, avoiding change
    even in the face of overwhelming evidence that change should happen.
  prefs: []
  type: TYPE_NORMAL
- en: 'One final note: an apocryphal story holds that John F. Kennedy noted that the
    Chinese term for *crisis* was made up of the Chinese words for *danger* and *opportunity*.
    While it is true that the first part of the Chinese term for *crisis* on its own
    equals *danger*, the second part of the term on its own translates to *point of
    change* or *turning point*.'
  prefs: []
  type: TYPE_NORMAL
- en: Adopting SAFe or adopting DevOps is a lot like watching the characters that
    make up a *crisis*. Watching the *danger* and watching the *turning points* will
    keep us away from the *crisis*.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, we’ve talked about the evolution of DevOps from its beginnings
    in 2009 to the present day. Let’s now talk about trends that are starting to emerge.
  prefs: []
  type: TYPE_NORMAL
- en: Emerging trends in DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the themes that contributed to the success of the DevOps movement was
    the collaboration between two separate functions of an organization, Development
    and Operations, to achieve the greater goal of releasing products frequently but
    also allowing stability in the production environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the movement grew, its success encouraged more imaginative efforts at collaboration
    to encourage other aspects besides increased deployment frequency and stability.
    Some of the reimagined efforts we will examine include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: XOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Revolution model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Platform engineering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s begin our exploration into the potential future of DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: XOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The success of the DevOps movement has encouraged the inclusion of other parts
    of the organization with Development and Operations to allow for speed of other
    qualities in addition to development frequency and stability. Notable movements
    include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**DevSecOps**: The incorporation of security throughout the stages of the pipeline
    to ensure that security is not left behind. Currently, many people consider the
    practices that are performed in a DevSecOps approach are fully absorbed in the
    DevOps movement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**BizDevOps**: Hailed as DevOps 2.0 this movement adds collaboration between
    business teams, developers, and operations personnel for the added goal of maximizing
    business revenue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, other engineering disciplines have found success in employing the
    same practices first promoted in DevOps. These DevOps-based movements for adjacent
    disciplines include **DataOps** and **ModelOps**.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at how a DevOps approach works in these engineering disciplines.
  prefs: []
  type: TYPE_NORMAL
- en: DataOps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DataOps is the incorporation of Agile development principles, DevOps practices,
    and Lean thinking into the field of data analysis and data analytics.
  prefs: []
  type: TYPE_NORMAL
- en: 'Data analysis follows a process flow similar to product development. The following
    steps are part of a typical process for data analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: Specification of the requirements for the data by those directing the analysis
    or by customers
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Collection of the data
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Processing data using statistical software or spreadsheets
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Data cleaning to remove duplicates or errors
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Exploratory data** **analysis** (**EDA**)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Data modeling to find relationships
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating outputs by using a data product application
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reporting
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As the volume of data increases exponentially, new methods are called into
    service to allow insights to be quickly obtained. The following methods used resemble
    the steps seen in DevOps for product development:'
  prefs: []
  type: TYPE_NORMAL
- en: The establishment of a data pipeline that allows for the processing of data
    into reports and analytics using the data analysis process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Verification of the data flowing through the data pipeline through **Statistical
    Process** **Controls** (**SPC**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding automated testing to ensure the data is correct in the data cleaning,
    data analysis, and data modeling stages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measurement of the data flow through the data pipeline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Separation of data into development, test, and production environments to ensure
    the correct function of automation for the data pipeline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collaboration between data scientists, analysts, data engineers, IT, and quality
    assurance/governance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to easily find relationships based on voluminous amounts of data
    provides a competitive advantage. Using DataOps practices and principles may allow
    those creating insights from data to achieve greater deployment rates of reliable
    and error-free data analytics.
  prefs: []
  type: TYPE_NORMAL
- en: ModelOps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the largest trends in technology today is AI. This growing trend sets
    up ML and decision models that leverage large amounts of data to progressively
    improve performance. The development of these ML models can give a competitive
    advantage to any organization looking to understand more about their customers
    and how their products can help.
  prefs: []
  type: TYPE_NORMAL
- en: Developing effective models now goes through a development cycle, similar to
    the **software development life cycle** (**SDLC**) process. In December 2018,
    Waldemar Hummer and Vinod Muthusamy of IBM Research AI proposed the initial concept
    of ModelOps, where AI workflows were made more reusable, platform-independent,
    and composable using techniques derived from the DevOps approach.
  prefs: []
  type: TYPE_NORMAL
- en: 'The model life cycle covers how to create, train, deploy, monitor, and, based
    on feedback from the data, retrain the AI model for an enterprise. The following
    diagram demonstrates the path of the model life cycle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.1 – ModelOps life cycle (By Jforgo1 – Own work, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=99598780)](img/B18756_14_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.1 – ModelOps life cycle (By Jforgo1 – Own work, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=99598780)
  prefs: []
  type: TYPE_NORMAL
- en: Because of the similarities between the model life cycle and the SDLC, the desired
    behaviors of deploying changes rapidly, monitoring their effects on the environment,
    and learning to improve allow for AI models developed using ModelOps to align
    with AI applications created using DevOps and have both rely on data analytics
    developed using DataOps.
  prefs: []
  type: TYPE_NORMAL
- en: The Revolution model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The concept of value streams for software development takes as a model the traditional
    SDLC process. This process, a remnant from Waterfall development, assumes that
    development happens in a step-by-step linear motion from one activity to the next.
    As products become more complex and DevOps expands the areas of responsibility,
    does a linear one-way progression of activities make sense?
  prefs: []
  type: TYPE_NORMAL
- en: Emily Freeman, Head of Community Engagement at **Amazon Web Services** (**AWS**)
    and the author of *DevOps for Dummies*, has proposed a different way of looking
    at the development process. Instead of a straight-line approach, she outlines
    a model where priorities move forward and back, along circles of activity. She
    calls this model **Revolution**. Let’s take a closer look.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeman outlines the following five software development roles as concentric
    circles radiating out:'
  prefs: []
  type: TYPE_NORMAL
- en: Operating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Architecting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Intersecting those circles are six qualities that engineers must consider in
    each activity. These qualities, listed here, are drawn as spokes against the concentric
    circles:'
  prefs: []
  type: TYPE_NORMAL
- en: Testability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reliability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scalability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With the parts in place, let’s present the following diagram of the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.2 – Revolution model](img/B18756_14_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.2 – Revolution model
  prefs: []
  type: TYPE_NORMAL
- en: To ensure the six qualities are adequately met, an engineer or team member would
    jump from one role (or circle) to the next, starting from the outside in. Roles
    are meant to be temporarily adopted by the engineer for some period of time until
    they are not needed at the moment. In an incident management scenario that Freeman
    illustrates in a keynote ([https://www.youtube.com/watch?v=rNBXfgWcy5Q](https://www.youtube.com/watch?v=rNBXfgWcy5Q)),
    the team has members assume roles in operating, developing, and deploying to investigate
    whether adequate reliability, observability, flexibility, scalability, and testability
    occur.
  prefs: []
  type: TYPE_NORMAL
- en: Platform engineering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The vast amount of tooling and technology involved in cloud-native environments
    has accelerated in the past few years. The level of knowledge needed to set up
    and maintain test, staging, and production environments on which products reside
    has overwhelmed those responsible for their operation.
  prefs: []
  type: TYPE_NORMAL
- en: Historically, DevOps started with the inclusion of Operations in an Agile development
    process so that stability and development speed are equally maintained. Over time,
    Operations has embraced using an Agile development mindset to solve reliability
    problems of large systems with SRE. Charity Majors, the CTO of honeycomb.io, a
    leading company in the development of a monitoring and observability platform,
    writes in a blog article ([https://www.honeycomb.io/blog/future-ops-platform-engineering](https://www.honeycomb.io/blog/future-ops-platform-engineering))
    that the next step is to look at the environments that are the responsibility
    of Operations as products themselves that can be developed using an Agile development
    mindset.
  prefs: []
  type: TYPE_NORMAL
- en: Platform engineering, as defined by Luca Galante of Humanitec ([https://platformengineering.org/blog/what-is-platform-engineering](https://platformengineering.org/blog/what-is-platform-engineering)),
    designs toolchains and workflows to allow self-service capabilities using this
    Agile development mindset. The product developed through platform engineering
    is an **Internal Developer Platform** (**IDP**), an abstraction of the technology
    used in operational environments for developers to build their products and solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Developers will use the following five components of an IDP to establish the
    capabilities required by their product or solution:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Application Configuration Management (ACM)**: This includes the automatic
    creation of manifest files used by configuration management tools to deploy application
    changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure Orchestration**: This establishes integration between the
    CI pipeline with the environments for deployment, including possible cluster creation/updates,
    IAC, and image registries'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Environment Management**: This integrates the ACM of the IDP with the underlying
    infrastructure of the environments to allow developers to create fully provisioned
    environments when needed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deployment Management**: This sets up the CD pipeline'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Role-Based Access Control (RBAC)**: This allows granular access to the environment
    and its resources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have seen trends emerge as people look at applying changes to processes,
    but DevOps will continue to change as technology changes. Let’s look at trends
    in DevOps that are driven by advances in technology.
  prefs: []
  type: TYPE_NORMAL
- en: New technologies in DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps today has expanded beyond what was originally envisioned in 2009, in
    part due to advances in technology that encouraged deployment into cloud-native
    environments. Advances today promise to add new capabilities never imagined.
  prefs: []
  type: TYPE_NORMAL
- en: 'The technologies we will examine for changing DevOps come from both refinements
    in deploying to cloud-native environments and applications on exciting new technology.
    We will take a look at these technology-based DevOps trends: **AIOps** and **GitOps**.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start out by looking to the future with AIOps.
  prefs: []
  type: TYPE_NORMAL
- en: AIOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We discussed in the previous section the rise of the use of AI to create applications
    that can learn from the large amounts of data presented to AI models. One area
    that can benefit from improved insights based on large amounts of data may be
    product development that uses a DevOps approach and collects the data through
    full-stack telemetry. This is different from our previous discussions of DataOps
    or ModelOps because this time, we are applying ML and data visualization to our
    actual development process.
  prefs: []
  type: TYPE_NORMAL
- en: 'AI for IT Operations (or AIOps) looks to enhance traditional practices we previously
    identified in the CI, CD, and Release on Demand stages of the CD pipeline to incorporate
    tools that are based on ML to process the amount of data that comes from our full-stack
    telemetry. Incorporation of AIOps tools may assist in making sense of the following
    areas of the IT environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Systems**: Testing, staging, and production environments may be a complex
    mix of cloud-native and on-premise resources. Cloud resources may come from one
    or more vendors. The resources may be a mix of physical computing servers (“bare-metal”)
    or use a form of virtualization such as **virtual machines** (**VMs**) or containers.
    This large mix of resources ensures the environment is stable and reliable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data**: Full-stack telemetry creates mountains of data. Some of this data
    may be key to making crucial decisions, while some may not. How can we determine
    when the amount of data is voluminous?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tools**: To acquire full-stack telemetry, a wide variety of tools may be
    employed to collect the data and manage the systems. These tools may not operate
    with one another or may be limited in functionality, creating silos of data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To answer this challenge, tools incorporating ML may adopt the following types
    of AI algorithms:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data selection**: This analyzes data to remove redundant and non-relevant
    information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pattern discovery**: This examines the data to determine relationships'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inference**: This looks at the insights to identify root causes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration**: This enables automation of notifications to teams of problems
    discovered'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automation**: This looks to automate a response to recurring problems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These tools have applications in terms of identifying security vulnerabilities,
    finding root causes of production failures, or even identifying trends that may
    predict impending problems in your production environments. As the technology
    improves, the promise of the viability of AIOps to be a more standard part of
    DevOps and IT operations grows.
  prefs: []
  type: TYPE_NORMAL
- en: GitOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As acceptance of CI/CD pipelines grew, many wondered how to establish these
    pipelines to deploy features into cloud-native testing, staging, and production
    environments. In 2017, Weaveworks coined the term *GitOps*, suggesting a CI/CD
    approach that is triggered from a commit in Git, a popular version control program.
  prefs: []
  type: TYPE_NORMAL
- en: GitOps starts with version control. There are separate repositories for the
    application and the environment configuration. The application repository will
    contain the code for the product, including how to build the product as a container
    in a Dockerfile. The environment repository will contain configuration files and
    scripts for a CI/CD pipeline tool, as well as deployment records for the environments.
  prefs: []
  type: TYPE_NORMAL
- en: Deployments in GitOps can either be push-based or pull-based. A push-based deployment
    uses the customary CI/CD pipeline tools to move from CI to CD. Pull-based deployment
    employs an operator that observes changes to the environment repository. When
    those changes occur, the operator deploys the changes to the environment according
    to the environment repository changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the progression from the Git repository to the
    CI pipeline to the operator and deployment pipeline:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.3 – GitOps pull-based deployment](img/B18756_14_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.3 – GitOps pull-based deployment
  prefs: []
  type: TYPE_NORMAL
- en: GitOps has had a tremendous following with those looking to set up deployment
    using Kubernetes, a technology that packages Docker containers to set up clusters
    of microservices. As Kubernetes becomes more popular, GitOps has become an established
    practice to continuously deploy Kubernetes clusters to cloud-based environments.
  prefs: []
  type: TYPE_NORMAL
- en: Frequently asked questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We now take a look at some questions that may come up, even after reading the
    earlier parts of this book.
  prefs: []
  type: TYPE_NORMAL
- en: What is DevOps?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: DevOps is a technical movement for developing and maintaining products. It incorporates
    Lean thinking and Agile development principles and practices to extend focus beyond
    development to the deployment, release, and maintenance of new products and their
    features. DevOps promotes the use of automation and tooling to allow frequent
    testing for proper functionality and security and allow for consistent deployments
    and releases. As products move to release, DevOps models operational practices
    done by developers and operations personnel that allow for rapid recovery should
    problems appear in production environments in a mission-based generative culture.
  prefs: []
  type: TYPE_NORMAL
- en: What is the Scaled Agile Framework®?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Scaled Agile Framework, or SAFe, is a set of values, principles, and practices
    developed by Scaled Agile, Inc. SAFe is primarily adopted by medium and large-size
    organizations working to introduce Lean and Agile ways of working for teams of
    teams and portfolios in enterprises. As Scaled Agile, Inc. defines it:'
  prefs: []
  type: TYPE_NORMAL
- en: SAFe for Lean Enterprises is the world’s leading framework for business agility.
    SAFe integrates the power of Lean, Agile, and DevOps into a comprehensive operating
    system that helps enterprises thrive in the digital age by delivering innovative
    products and services faster, more predictably, and with higher quality. — © Scaled
    Agile, Inc.
  prefs: []
  type: TYPE_NORMAL
- en: Do I need to adopt SAFe to move to DevOps?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No. We look at SAFe while talking about DevOps because a key perspective of
    working in SAFe is the focus on creating and organizing value streams for its
    team of teams, known as an **Agile Release Train** (**ART**). SAFe also focuses
    on process and automation through its CD pipeline. Both of these are in line with
    successful DevOps approaches.
  prefs: []
  type: TYPE_NORMAL
- en: Adopting the SAFe is best suited when your value stream can be accomplished
    by a team of 5-12 regular-sized teams and this *team of teams* is working together
    on a single product or solution. This is known as the *Essential* *SAFe* configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Is DevOps only for those companies that develop for cloud environments?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While many of the recent technical strides in DevOps were developed to help
    those develop, test, deploy, release, and maintain on cloud environments, DevOps
    as a technical movement is agnostic to whichever technology your product is based
    on.
  prefs: []
  type: TYPE_NORMAL
- en: DevOps principles and practices have been successful in organizations that develop
    and maintain products on cloud, embedded hardware, mainframe, and physical server
    environments. Practices such as the adoption of Lean thinking, value stream management,
    and SRE do not rely on the technology used by the end product.
  prefs: []
  type: TYPE_NORMAL
- en: What’s the best tool for doing ___________?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A common question is to ask what the most preferred tool is to perform a specific
    function such as CI/CD, automated testing, configuration management, or security
    testing. I always refrain from picking an individual tool for several reasons.
  prefs: []
  type: TYPE_NORMAL
- en: The primary reason is that every industry and organization is different. A tool
    that works for one industry or organization may not work for a different industry
    or organization.
  prefs: []
  type: TYPE_NORMAL
- en: Another reason is that technology moves onward, releasing new tools that may
    now be considered “best.”
  prefs: []
  type: TYPE_NORMAL
- en: How does DevSecOps fit into DevOps?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Earlier in this chapter, we saw how DevSecOps was one of the first models of
    XOps where what eventually happened was the incorporation of a security mindset
    and practices into the broader definition of DevOps. With DevSecOps, we are adding
    security as a focus in addition to the desired foci of development speed and operational
    stability in *vanilla* DevOps. In this book, we outlined several places where
    including security practices move us from DevOps to DevSecOps.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 6*](B18756_06.xhtml#_idTextAnchor138), *Recovering from Production
    Failures*, we saw that Chaos Engineering could be used to simulate disasters such
    as a security vulnerability and evaluate potential responses to such security
    failures.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 10*](B18756_10.xhtml#_idTextAnchor221), *Continuous Exploration
    and Finding New Features*, we discovered that security was one of the primary
    considerations when trying to create new features for products. This consideration
    is handled by the system architect, often consulting with the organization’s security
    team.
  prefs: []
  type: TYPE_NORMAL
- en: We extended security further in [*Chapter 11*](B18756_11.xhtml#_idTextAnchor244),
    *Continuous Integration of Solution Development*, and [*Chapter 12*](B18756_12.xhtml#_idTextAnchor268),
    *Continuous Deployment to Production*, where we looked at adding security testing
    in various forms to detect potential vulnerabilities. During CI, we performed
    threat modeling to identify any potential attack vectors.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, in [*Chapter 13*](B18756_13.xhtml#_idTextAnchor292), *Releasing on
    Demand to Realize Value*, we looked at continuous security monitoring and continuous
    security practices in the production environment to remain vigilant and fix environments
    when vulnerabilities do get exploited.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we looked to the future. We first saw the emerging trends
    happening to DevOps from the product development side. New advances incorporating
    AI and data engineering have added new components to products under development.
    Development of artifacts such as AI models and data pipelines shows great benefits
    using a DevOps approach in new fields such as DataOps and ModelOps. We also examined
    a new look at software development and maintenance that may influence DevOps and
    value stream management.
  prefs: []
  type: TYPE_NORMAL
- en: Changes in technology have changed DevOps as well. We looked at incorporating
    AIOps products that include AI for analyzing the data collected in testing and
    maintenance to find vulnerabilities and potential failures. We explored the GitOps
    movement that unites version control with CD.
  prefs: []
  type: TYPE_NORMAL
- en: We then moved from the future of DevOps to making DevOps part of your organization’s
    future. We looked at adopting DevOps practices, including mapping your value stream
    and iteratively employing automation in different areas of your development process.
    We then finished with some questions you may have and their answers.
  prefs: []
  type: TYPE_NORMAL
- en: We have explored the different aspects of DevOps, from looking at the motivations
    of people to understanding the processes at play and examining the tools that
    can help achieve higher levels of performance. All three aspects are adopted in
    the SAFe so that teams of teams can perform together as a value stream to develop,
    deploy, and maintain products that provide value to the customer. It is our hope
    that this exploration helps guide your thoughts as you continue your DevOps journey.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For more information, refer to the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Blog article talking about XOps and its various components: [https://www.expressanalytics.com/blog/everything-you-need-to-know-about-xops/](https://www.expressanalytics.com/blog/everything-you-need-to-know-about-xops/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Description of XOps, its main components, and its popularity: [https://datakitchen.io/gartner-top-trends-in-data-and-analytics-for-2021-xops/](https://datakitchen.io/gartner-top-trends-in-data-and-analytics-for-2021-xops/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Guidance article from Scaled Agile, Inc. that details how to work with DataOps
    in your value stream: [https://www.scaledagileframework.com/an-agile-approach-to-big-data-in-safe/](https://www.scaledagileframework.com/an-agile-approach-to-big-data-in-safe/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An initial whitepaper from Waldemar Hummer and Vinod Muthusamy of IBM Research
    AI detailing their ModelOps process: [https://s3.us.cloud-object-storage.appdomain.cloud/res-files/3842-plday18-hummer.pdf](https://s3.us.cloud-object-storage.appdomain.cloud/res-files/3842-plday18-hummer.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An essential guide to ModelOps, created by ModelOp.com: [https://www.modelop.com/wp-content/uploads/2020/05/ModelOps_Essential_Guide.pdf](https://www.modelop.com/wp-content/uploads/2020/05/ModelOps_Essential_Guide.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Guidance article from Scaled Agile, Inc. on working with ModelOps on your value
    stream: [https://www.scaledagileframework.com/succeeding-with-ai-in-safe/](https://www.scaledagileframework.com/succeeding-with-ai-in-safe/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The official documentation for Emily Freeman’s Revolution model: [https://github.com/revolution-model](https://github.com/revolution-model)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Keynote address that features Emily Freeman discussing the Revolution model:
    [https://www.youtube.com/watch?v=rNBXfgWcy5Q](https://www.youtube.com/watch?v=rNBXfgWcy5Q)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Blog article from Charity Majors, CTO of honeycomb.io, introducing platform
    engineering: [https://www.honeycomb.io/blog/future-ops-platform-engineering](https://www.honeycomb.io/blog/future-ops-platform-engineering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article from Luca Galante of Humanitec, describing platform engineering: [https://platformengineering.org/blog/what-is-platform-engineering](https://platformengineering.org/blog/what-is-platform-engineering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Definition of an IDP and its components: [https://internaldeveloperplatform.org](https://internaldeveloperplatform.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Blog article from Moogsoft, a DevOps tool vendor, detailing the uses of AIOps:
    [https://www.moogsoft.com/resources/aiops/guide/everything-aiops/](https://www.moogsoft.com/resources/aiops/guide/everything-aiops/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A primer on GitOps: [https://www.gitops.tech](https://www.gitops.tech)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A blog article from Warren Marusiak of Atlassian, outlining an approach to
    adopting DevOps: [https://community.atlassian.com/t5/DevOps-articles/How-to-do-DevOps/ba-p/2137695](https://community.atlassian.com/t5/DevOps-articles/How-to-do-DevOps/ba-p/2137695)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article from Scaled Agile, Inc. defining the Scaled Agile Framework: [https://www.scaledagileframework.com/safe-for-lean-enterprises/](https://www.scaledagileframework.com/safe-for-lean-enterprises/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessment Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section contains answers to questions from all chapters.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18756_01.xhtml#_idTextAnchor014) – Introducing SAFe® and DevOps'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18756_02.xhtml#_idTextAnchor040) – Culture of Shared Responsibility'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18756_03.xhtml#_idTextAnchor066) – Automation for Efficiency
    and Quality'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18756_04.xhtml#_idTextAnchor086) – Leveraging Lean Flow to Keep
    the Work Moving'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18756_05.xhtml#_idTextAnchor114) – Measuring the Process and
    Solution'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18756_06.xhtml#_idTextAnchor138) – Recovering from Production
    Failures'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18756_07.xhtml#_idTextAnchor163) – Mapping your Value Streams'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18756_08.xhtml#_idTextAnchor183) – Measuring Value Stream Performance'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18756_09.xhtml#_idTextAnchor207) – Moving to the Future with
    Continuous Learning'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18756_10.xhtml#_idTextAnchor221) – Continuous Exploration and
    Finding New Features'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B18756_11.xhtml#_idTextAnchor244) – Continuous Integration of
    Solution Development'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18756_12.xhtml#_idTextAnchor268) – Continuous Deployment to
    Production'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B, C, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18756_13.xhtml#_idTextAnchor292) – Releasing on Demand to Realize
    Value'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B, D, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, E
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
