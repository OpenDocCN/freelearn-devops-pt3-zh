["```\nand(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))\n```", "```\n    $(variableName)\n    ```", "```\n    4.1($Rev:.rr)\n    ```", "```\ntrigger:\n- main\npool:\n  name: Azure Pipelines \n  vmImage: windows-2019\nsteps:\n-  task: DotNetCoreCLI@2 \n   displayName: 'dotnet build' \n   inputs:\n       projects: '**/*.csproj'\n- task: DotNetCoreCLI@2 \n   displayName: 'dotnet test' \n   inputs:\n       command: test\n       projects: '**/*.csproj'\n```", "```\ntrigger:\n- main\npool:\n    name: Azure Pipelines \n    vmImage: windows-2019\njobs:\n- job: job1\n  displayName: A pretty name for job1 \n  steps:\n  - task: DotNetCoreCLI@2\n     ...\n- job: job2\n  displayName: My second job \n  pool:\n      name: Azure Pipelines \n      vmImage: ubuntu-18.04\n      ...\n```", "```\njobs:\n- job: compile \n  steps:\n  ...\n- job: test \n  dependsOn: compile \n  steps:\n  ...\n- job: build_schema \n  dependsOn: compile \n  steps:\n  ..\n- job: report \n  dependsOn:\n  - test\n  - build_schema\n  condition: or(succeeded('test'), succeeded('build_schema')) \n  steps:\n  ..\n```", "```\nvariables: \n  name: value\n  anotherName: otherValue\n```", "```\nvariables: \n  name: value\n  anotherName: otherValue \n  group: myVariableGroup\n```", "```\nsteps:\n- publish: folder/to/publish \n  artifact: artifactName\n```", "```\n    .\\remove.cmd\n    ```", "```\nstages:\n   - build\n   - test\nbuild:\n      stage: build\n      script: dotnet build **/*.csproj\ntest:\n      stage: test\n      script: dotnet test **/*.csproj\n```", "```\npipeline {\n        agent any \n        stages {\n              stage('build') {\n              agent any\n                    steps {\n                          dotnet build **/*.csproj\n                    }\n              }\n              stage('test') { \n                    agent any \n                    steps {\n                          dotnet test **/*.csproj\n                    }\n              }\n       }\n}\n```", "```\n    trigger:\n    - main\n    pool:\n      vmImage: ubuntu-latest\n    variables:\n      buildConfiguration: 'Release'\n    steps:\n    - script: dotnet build --configuration $(buildConfiguration)\n      displayName: 'dotnet build $(buildConfiguration)'\n    ```"]