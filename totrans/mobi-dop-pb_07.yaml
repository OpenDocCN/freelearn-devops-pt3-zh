- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Establishing Mobile App Monitoring, Observability, and Analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapter, we learned how to successfully release mobile apps
    to the relevant app stores. However, this is not the last stage in the CI/CD process.
    The next stage is to continuously support our customers and trace app usage, performance,
    crashes, and more. This is where monitoring observability, and analytics for mobile
    apps, come into play. In this chapter, we will cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: What is monitoring?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is observability?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The benefits of implementing monitoring and observability for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The differences between monitoring and observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is analytics?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factors to consider in monitoring and observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steps to implement monitoring and observability for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring, observability, and analytics tools for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Key metrics for mobile app monitoring, analytics, and observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing continuous monitoring for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile apps are complex because they interact with various external systems,
    such as servers, APIs, and databases. This complexity can make it challenging
    to identify and diagnose issues when they occur. Monitoring, observability, and
    analytics can provide real-time feedback on app performance, user behavior, and
    system interactions. This information can help developers identify potential issues
    before they impact users and develop effective solutions when issues do occur.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, to improve your app ratings, user engagement, and revenue, you
    should establish monitoring and observability practices to identify and address
    any issues before they negatively affect your users. Ensuring your mobile app
    performs optimally is essential, providing a seamless user experience.
  prefs: []
  type: TYPE_NORMAL
- en: But first, let’s learn more about monitoring, observability, and analytics.
  prefs: []
  type: TYPE_NORMAL
- en: What is monitoring?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Monitoring for mobile apps refers to *continually tracking and analyzing the
    performance, reliability, and overall stability of mobile applications to ensure
    a seamless user experience*. It involves collecting data on app crashes, errors,
    freezes, and other performance issues, which helps developers identify and resolve
    any problems that might negatively impact the user experience.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of monitoring is to identify and resolve any issues that may affect
    the quality of the user experience, such as crashes or slow load times.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram focuses on different key components in monitoring, such
    as app crashes, error tracking, and app performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1 – Monitoring components](img/Figure_07.01_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.1 – Monitoring components
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure optimal application performance and user satisfaction, development
    teams must prioritize addressing these key components. By analyzing and solving
    potential issues, teams can guarantee a superior user experience. Let’s delve
    into each component to fully grasp their significance:'
  prefs: []
  type: TYPE_NORMAL
- en: '**App crash reporting**: This involves identifying and collecting crash information,
    including app crash frequency, affected devices, and the specific circumstances
    leading to a crash. This data facilitates understanding and fixing the root cause.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*“Monitor the symptoms of the crashes, not the* *crashes only*.*”*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tracking errors**: This includes API errors, network errors, or code exceptions
    that occur during the app’s runtime. This information can be used to resolve and
    diagnose problems in the app’s code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**App performance monitoring**: This measures how responsive an app is, how
    long it takes to load, and other performance metrics to ensure a smooth user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is observability?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Observability for mobile apps refers to *the ability to gain insights into the
    internal state of an application by analyzing its external outputs, such as logs,
    metrics, and traces*. It enables developers or the release team to monitor, understand,
    and troubleshoot the app’s behavior and performance.
  prefs: []
  type: TYPE_NORMAL
- en: “*Observability is the ability to see what is happening in the production of
    user devices with our* *app binary.*”
  prefs: []
  type: TYPE_NORMAL
- en: Observability is crucial for maintaining a high-quality user experience and
    ensuring the app’s reliability and stability.
  prefs: []
  type: TYPE_NORMAL
- en: 'Observability focuses on different key aspects, as shown in *Figure 7**.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2 – Observability components](img/Figure_07.02_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.2 – Observability components
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see, the goal of observability is to gain insights into how a system
    operates, detect issues, and troubleshoot problems effectively. Observability
    focuses on several key aspects, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Logs**: During an app’s runtime, logs contain information about user actions,
    system events, and error messages. Analyzing logs can help developers identify
    patterns, diagnose problems, and better understand the app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Metrics**: Metrics track the app’s health, identifying bottlenecks and optimizing
    its performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Traces**: Traces provide a detailed view of individual requests or transactions
    as they flow through the app’s components, such as network calls, API interactions,
    and database queries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing monitoring and observability for mobile apps offers numerous benefits
    that enhance the app’s performance, user experience, and overall success. Let’s
    look at some of the key advantages.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits of implementing monitoring and observability for mobile apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several benefits to implementing monitoring and observability for
    mobile apps. Some of them are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring and observability enable you to identify and resolve performance
    bottlenecks in your app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tracking app performance and user behavior continuously can help you make data-driven
    decisions to improve the user experience, ultimately leading to higher retention
    and satisfaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can detect and diagnose issues quickly with monitoring and observability
    and resolve them before they negatively impact your users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can proactively address potential issues with observability by understanding
    your app’s behavior better before they become critical
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*“Once we have observability in our app, we can alert when things become strange
    and still seem* *to work.”*'
  prefs: []
  type: TYPE_NORMAL
- en: Your app’s performance data can be analyzed to optimize resource usage, leading
    to cost savings and increased efficiency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The differences between monitoring and observability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Monitoring and observability are complementary practices that, when used together,
    help teams build and maintain high-quality mobile apps. As shown in *Figure 7**.3*,
    monitoring focuses on actively tracking performance and responding to known issues,
    while observability emphasizes a deeper understanding of app behavior to identify
    trends, diagnose unknown issues, and optimize performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3 – Monitoring versus observability](img/Figure_07.03_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.3 – Monitoring versus observability
  prefs: []
  type: TYPE_NORMAL
- en: A monitoring system is reactive, while an observability system is proactive.
    By combining both practices, teams can create a comprehensive strategy for maintaining
    and improving their mobile applications.
  prefs: []
  type: TYPE_NORMAL
- en: What is analytics?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In mobile app analytics, the data about app usage, user behavior, and performance
    is collected, measured, analyzed, and interpreted. Developers, marketers, and
    product managers can use mobile app analytics to optimize app performance, enhance
    user engagement, and increase customer loyalty. Analyzing user preferences and
    pain points enables data-driven decision-making and continuous improvement.
  prefs: []
  type: TYPE_NORMAL
- en: Analytics helps you understand how your users’ behavior and app can be optimized
    to reach your business goals.
  prefs: []
  type: TYPE_NORMAL
- en: 'Analytics focuses on different key aspects, as shown in *Figure 7**.4*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.4 – Analytics components](img/Figure_07.04_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.4 – Analytics components
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see, analytics encompasses various key aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: '**User acquisition and attribution**: Tracking the sources of new users, such
    as organic search, paid ads, or referrals, helps determine the effectiveness of
    marketing campaigns and identifies the most valuable channels for user acquisition'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User engagement**: Monitoring how users interact with the app, including
    session duration, session frequency, screens visited, and in-app actions performed,
    provides insights into user preferences and helps identify areas for improvement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User retention and churn**: Analyzing user retention rates and churn patterns
    helps you understand the factors that contribute to user satisfaction or dissatisfaction
    and enables developers to implement changes that promote long-term user loyalty'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User segmentation**: Grouping users based on demographics, behavior, and
    preferences allows personalized marketing campaigns, targeted promotions, and
    tailored user experiences'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**In-app purchases and revenue**: Tracking in-app purchases, subscription revenue,
    and advertising revenue helps evaluate the app’s monetization strategies and identify
    opportunities for optimization and growth'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factors to consider in monitoring and observability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To establish a monitoring and observability strategy for mobile apps, we need
    to consider the following factors:'
  prefs: []
  type: TYPE_NORMAL
- en: Define the key objectives and goals of your monitoring and observability strategy.
    This determines the metrics to track, such as app performance, user engagement,
    and error rates, thus reducing downtime, ensuring compliance with regulations,
    or improving user experience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider the app’s purpose and user expectations to determine the right metrics.
    For example, if the app is a game, you should track user engagement, such as time
    spent playing the game, the number of levels completed, and social sharing. On
    the other hand, if the app is a productivity tool, you should track app performance,
    such as response time, load time, and error rates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining the tools and technologies required to achieve these goals is also
    essential. Once the goals have been defined, the next step is to implement the
    monitoring and observability tools. Several tools are available for monitoring
    and observability, including APM, log management, and analytics tools. Choosing
    the right tools that align with your goals and requirements is essential.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify the key metrics and KPIs that need to be monitored, such as system
    performance, resource utilization, error rates, and response times. Ensure that
    these metrics are relevant, actionable, and can be used to track progress toward
    your objectives.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collecting data is only the first step. It is crucial to analyze the data that’s
    been collected and take action based on the insights gained. You can use the data
    to identify performance bottlenecks, resolve issues, and optimize app performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determine which data sources are necessary to collect the required metrics.
    This can include logs, application traces, and system or network metrics.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the appropriate tools and techniques for analyzing and visualizing your
    data, such as dashboards, anomaly detection, and alerting mechanisms. Ensure these
    tools can provide actionable insights to support decision-making.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up alerting and notification mechanisms to promptly inform relevant stakeholders
    of issues or potential problems. Configure the alert thresholds and escalation
    policies to balance false alarms and missed issues. Alert developers to app crashes
    and errors in real time, along with detailed information about the cause of the
    issue.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement in-app feedback. Feedback and suggestions can be provided directly
    within the app, which can help developers identify improvements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure your monitoring and observability strategy is well integrated with other
    tools in your infrastructure, such as incident management or CI/CD.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide training and documentation for your team members to ensure they can
    effectively use the monitoring and observability tools and understand the data
    that’s been collected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steps to implement monitoring and observability for mobile apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s look at the steps for implementing monitoring and observability:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select suitable tools for your app based on your requirements, budget, and
    platform support. Some popular choices include the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Monitoring tools**: Firebase Crashlytics, Bugsnag, Sentry, Embrace, and Instabug'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Analytics tools**: Firebase Analytics, Amplitude, Mixpanel, and Google Analytics
    for Mobile'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Observability tools**: Datadog and NewRelic'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mobile performance** **tools**: Emerge'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Incident management**: PagerDuty, Incident.io, and Grafana Incident'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For the chosen tools, follow the official documentation to set up the SDKs in
    your mobile app. This typically involves adding dependencies to your build or
    dependency files and initializing the SDKs in your app code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the monitoring tools to capture crashes, non-fatal errors, and performance
    issues. You can also set up custom events, tags, or user properties to provide
    more context for debugging.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Define events and user properties that you want to track while considering aspects
    such as user engagement, conversion, and retention with the analytics tools.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implement event tracking by adding code to your app to log the defined events
    and user properties at relevant points. For example, you can log an event when
    a user completes a purchase or reaches a specific app screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Regularly monitor the dashboard of your chosen monitoring tool to identify crashes,
    performance bottlenecks, and other issues.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up alerts and notifications to stay informed about critical issues that
    need immediate attention. This can also be integrated with ChatOps if you send
    these alerts as Slack messages to the Microsoft team or even as SMSs or calls
    in the case of critical issues.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the dashboard of your chosen analytics tool to analyze user behavior, such
    as the number of active users, session duration, and user retention.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create custom reports or use built-in reports to identify trends, patterns,
    and areas for improvement.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Utilize analytics insights to design and implement A/B tests to optimize your
    app’s user experience, engagement, and conversion rates.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Analyze the results of A/B tests and make data-driven decisions to improve your
    app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we are familiar with how to get started with monitoring and observability
    for mobile apps, let’s discuss the monitoring, observability, and analytics tools
    for mobile apps in the market and the differences between them.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring, observability, and analytics tools for mobile apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developers can use tools to monitor app performance, receive real-time notifications,
    and integrate with alerting tools through SDKs. Let’s take a look at them together.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring and observability tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As mentioned previously, monitoring and observability tools should be integrated
    with the incident management tools so that it is possible to handle on-call management
    or responses to incidents.
  prefs: []
  type: TYPE_NORMAL
- en: Observability tools are essential for mobile app development and maintenance.
    They provide valuable data and metrics that help identify bottlenecks, improve
    app stability, and enhance the user experience. Popular options include monitoring
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s discuss different tools that can help us with this.
  prefs: []
  type: TYPE_NORMAL
- en: Firebase Crashlytics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Firebase Crashlytics** ([https://firebase.google.com/products/crashlytics](https://firebase.google.com/products/crashlytics))
    is an excellent crash reporting tool for mobile app developers that offers *real-time
    crash reporting, detailed diagnostics, and seamless integration with other Firebase
    tools*. Its intuitive dashboard and accurate crash reporting make it a reliable
    choice for developers looking to improve their app’s stability.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Firebase Crashlytics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time crash reporting**: It monitors your app and automatically captures
    crash data, providing up-to-date information on any issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed crash diagnostics**: It dives into the details of each crash and
    provides rich diagnostics such as stack traces, device information, and user data
    to help you pinpoint the problem.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Crash analytics**: It offers insightful analytics for identifying trends,
    detecting common issues, and prioritizing bug fixes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration with Firebase**: Being part of the Firebase suite, Crashlytics
    works seamlessly with other Firebase tools, streamlining your app development
    workflow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cross-platform support**: It works with Android and iOS apps, making it a
    versatile choice for mobile app developers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can easily add the Crashlytics SDK to your Android app by going to https://firebase.google.com/docs/crashlytics/get-started?platform=android#add-sdk;
    you can follow the same steps for iOS, Flutter, and Unity apps.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you can export your Crashlytics data into BigQuery ([https://firebase.google.com/docs/crashlytics/bigquery-export](https://firebase.google.com/docs/crashlytics/bigquery-export))
    for further analysis. You can analyze the data using BigQuery SQL, export it to
    another cloud provider, and use Google Data Studio to visualize and create custom
    dashboards.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you can analyze any issues from Firebase Crashlytics with App
    Quality Insights inside Android Studio ([https://developer.android.com/studio/debug/app-quality-insights](https://developer.android.com/studio/debug/app-quality-insights)).
  prefs: []
  type: TYPE_NORMAL
- en: Xcode Organizer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Xcode Organizer** ([https://developer.apple.com/documentation/xcode/analyzing-the-performance-of-your-shipping-app](https://developer.apple.com/documentation/xcode/analyzing-the-performance-of-your-shipping-app))
    is a tool for optimizing mobile app performance within the Apple ecosystem. Its
    ability to provide detailed performance data, real-time monitoring, and user-centric
    analysis makes it an invaluable resource for developers striving to deliver exceptional
    user experiences.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Xcode Organizer helps you manage various aspects of your iOS, macOS, watchOS,
    and tvOS app development projects. It provides features to organize, archive,
    and distribute your apps, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.5 – Opening Xcode Organizer from the Window menu](img/Figure_07.05_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.5 – Opening Xcode Organizer from the Window menu
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check the crashes and the different metrics that are related to specific
    versions, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.6 – The main screen of Xcode Organizer](img/Figure_07.06_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.6 – The main screen of Xcode Organizer
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Xcode Organizer:'
  prefs: []
  type: TYPE_NORMAL
- en: '**In-depth performance insights**: This tool provides a wealth of performance
    metrics for your app, from CPU and memory usage to network activity. It allows
    you to gain a deep understanding of your app’s inner workings.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time monitoring**: You can watch how your app performs in real time
    as users interact with it. This feature is particularly useful for identifying
    performance issues and crashes that may be impacting the user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User-focused analysis**: One of Xcode Organizer’s standout features is its
    ability to analyze performance data based on different user interactions. This
    is invaluable for making targeted improvements that enhance the most common user
    scenarios.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Comparative analytics**: You can measure your app’s performance across different
    versions or builds. This helps you track the impact of changes you’ve made and
    identify areas that require attention.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is worth noting, however, that this tool is only compatible with apps developed
    for iOS, macOS, watchOS, and tvOS within the Apple ecosystem. Developers working
    on cross-platform apps may find this tool less useful.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to keep in mind that the interface and characteristics of Xcode
    could vary with new updates. To stay informed, it’s good practice to refer to
    the Xcode documentation ([https://developer.apple.com/documentation/xcode](https://developer.apple.com/documentation/xcode))
    or relevant resources for the latest information.
  prefs: []
  type: TYPE_NORMAL
- en: Firebase Performance Monitoring
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Firebase Performance Monitoring** ([https://firebase.google.com/products/performance](https://firebase.google.com/products/performance))
    is a tool designed to help you analyze and optimize your app’s performance to
    deliver a smooth user experience. It is a good choice for mobile app developers
    seeking to analyze and optimize their performance. With real-time performance
    monitoring, customizable metrics, and seamless integration with other Firebase
    tools, it’s a powerful tool for ensuring a smooth user experience.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Firebase Performance Monitoring:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time performance monitoring**: It automatically tracks your app’s performance
    metrics in real time, giving you valuable insights into how your app is running'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customizable metrics**: It can create custom metrics tailored to your app’s
    specific needs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed performance data**: It analyzes granular data on latency, rendering,
    network usage, and more to pinpoint performance bottlenecks and optimize your
    app'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cross-platform support**: It works seamlessly with Android and iOS apps,
    making it a versatile choice for mobile app developers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration with Firebase**: It acts as part of the Firebase suite, which
    means Performance Monitoring integrates effortlessly with other Firebase tools,
    streamlining your app development process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance Data Dashboard**: Performance data is presented in a user-friendly
    dashboard, making it easy for you to analyze metrics and optimize your app'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can easily add the Performance Monitoring SDK in your Android, Flutter,
    or iOS apps by following the steps at [https://firebase.google.com/docs/perf-mon](https://firebase.google.com/docs/perf-mon).
  prefs: []
  type: TYPE_NORMAL
- en: 'Firebase automatically collects data for several common processes in your app
    when you add the Performance Monitoring SDK, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: App startup time for Apple and Android apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Screen rendering for Apple and Android apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network requests for all types of apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an example of some information that’s been collected from Performance
    Monitoring: `https://firebase.google.com/support/privacy?authuser=0&hl=en#performance-monitoring-collected-info`.'
  prefs: []
  type: TYPE_NORMAL
- en: Instabug
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Instabug** ([https://www.instabug.com/](https://www.instabug.com/)) is a
    powerful, all-in-one platform for mobile app developers looking for comprehensive
    bug reporting, crash reporting, and performance monitoring tools. Its easy integration,
    intuitive dashboard, and wide range of features make it an excellent choice for
    those looking to improve their app’s stability and user experience, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.7 – The Release view](img/Figure_07.07_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.7 – The Release view
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Instabug:'
  prefs: []
  type: TYPE_NORMAL
- en: '**In-app bug reporting**: It allows users to report bugs directly within your
    app, complete with annotated screenshots, making it easy to collect valuable feedback:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.8 – The Bug Reporting view](img/Figure_07.08_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.8 – The Bug Reporting view
  prefs: []
  type: TYPE_NORMAL
- en: '**Crash reporting**: It helps in getting real-time crash reports with detailed
    information such as stack traces and user data, enabling you to identify and fix
    issues quickly:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.9 – The Crashes view](img/Figure_07.09_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.9 – The Crashes view
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance monitoring**: Instabug helps keep an eye on your app’s performance
    via its monitoring tools, which track key metrics such as app launch time, network
    requests, and UI responsiveness:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.10 – The Bug Reporting detailed view](img/Figure_07.10_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.10 – The Bug Reporting detailed view
  prefs: []
  type: TYPE_NORMAL
- en: '**In-app surveys**: This survey collects user feedback effortlessly with customizable
    in-app surveys, helping you make data-driven decisions to improve your app:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.11 – Create a test survey](img/Figure_07.11_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.11 – Create a test survey
  prefs: []
  type: TYPE_NORMAL
- en: '**Integrations**: Instabug integrates with popular project management, communication,
    and issue-tracking tools such as Jira, Slack, and GitHub, streamlining your development
    workflow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cross-platform support**: Instabug works seamlessly with Android, Flutter,
    React Native, Xamarin, Cordova, and iOS apps, catering to various developers:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.12 – Instabug’s supported platforms](img/Figure_07.12_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.12 – Instabug’s supported platforms
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, Instabug provides a sandbox ([https://demo-dashboard.instabug.com/demo](https://demo-dashboard.instabug.com/demo))
    so that you can tour the product and learn more about its features.
  prefs: []
  type: TYPE_NORMAL
- en: However, note that Instabug’s free tier has some limitations, and you may need
    to upgrade to a paid plan to access advanced features and higher usage limits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the documentation for adding the SDK to your iOS app: [https://docs.instabug.com/docs/ios-integration](https://docs.instabug.com/docs/ios-integration).'
  prefs: []
  type: TYPE_NORMAL
- en: Embrace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Embrace** ([https://embrace.io/](https://embrace.io/)) is a powerful mobile
    app performance management platform that offers comprehensive performance monitoring,
    crash reporting, and user session tracking, as shown in the following screenshot.
    Its unique replay functionality and detailed insights make it an excellent choice
    for developers looking to optimize their app’s performance and user experience.
    However, the lack of a free tier and the initial learning curve may be drawbacks
    for some users:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.13 – ANR Summary](img/Figure_07.13_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.13 – ANR Summary
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Embrace:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance monitoring**: Embrace provides detailed insights into your app’s
    performance, covering key metrics such as app startup time, network requests,
    and user interface responsiveness'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Crash reporting**: You can get real-time crash reports with rich information,
    such as stack traces, device data, and user actions, to help you quickly identify
    and fix issues:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.14 – Crash Summary](img/Figure_07.14_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.14 – Crash Summary
  prefs: []
  type: TYPE_NORMAL
- en: '**User session tracking**: Embrace enables you to monitor individual user sessions,
    giving you a complete picture of the user experience, including interactions and
    issues encountered:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.15 – User Timeline](img/Figure_07.15_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.15 – User Timeline
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the documentation for adding the SDK to your Android app: [https://embrace.io/docs/android/integration/integration-steps/](https://embrace.io/docs/android/integration/integration-steps/).'
  prefs: []
  type: TYPE_NORMAL
- en: Sentry
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Sentry** for mobile apps ([https://sentry.io/for/mobile/](https://sentry.io/for/mobile/))
    is a powerful error monitoring and reporting solution that simplifies debugging.
    Its easy integration, real-time error tracking, and intuitive dashboard make it
    a valuable tool for catching and fixing issues quickly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.16 – The Projects view](img/Figure_07.16_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.16 – The Projects view
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Sentry:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time error monitoring**: Sentry helps in automatically tracking and
    capturing errors in your app, providing up-to-date information on any issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed error diagnostics**: Sentry helps in getting in-depth diagnostics
    such as stack traces, device information, and user data to help you pinpoint the
    root cause of errors:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.17 – The Issues detailed view](img/Figure_07.17_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.17 – The Issues detailed view
  prefs: []
  type: TYPE_NORMAL
- en: '**Issue grouping**: Sentry intelligently groups similar errors, making identifying
    trends and prioritizing fixes easier:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.18 – The Issues view](img/Figure_07.18_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.18 – The Issues view
  prefs: []
  type: TYPE_NORMAL
- en: '**Integrations**: Sentry integrates with popular project management, communication,
    and issue-tracking tools such as Jira, Slack, GitHub, and more to streamline your
    development workflow:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.19 – The integration view](img/Figure_07.19_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.19 – The integration view
  prefs: []
  type: TYPE_NORMAL
- en: '**Cross-platform support**: Sentry works with Android, Flutter, React Native,
    and iOS apps, making it a versatile choice for developers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time error tracking**: Sentry’s real-time error monitoring allows you
    to catch and fix issues quickly, ensuring a smoother user experience'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intuitive dashboard**: Sentry’s user-friendly dashboard makes monitoring
    errors and analyzing data easy, helping you stay on top of your app’s stability'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here’s the documentation for adding the SDK to your Flutter app: [https://docs.sentry.io/platforms/flutter/](https://docs.sentry.io/platforms/flutter/).
    Sentry also provides customers with a sandbox environment ([https://try.sentry-demo.com/organizations/noted-baboon/issues/](https://try.sentry-demo.com/organizations/noted-baboon/issues/))
    so that they can explore the product with demo apps.'
  prefs: []
  type: TYPE_NORMAL
- en: Google Play Console vitals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Google Play Console vitals** ([https://developer.android.com/topic/performance/vitals](https://developer.android.com/topic/performance/vitals))
    is a tool for Android app developers looking to monitor and optimize their app’s
    performance with ease. Its seamless integration, data-driven insights, and free
    availability make it an excellent choice for tracking app stability, battery usage,
    and rendering performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.20 – Android vitals overview](img/Figure_07.20_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.20 – Android vitals overview
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Android vitals:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Android vitals dashboard**: Google Play Console vitals offers a user-friendly
    dashboard that provides an overview of your app’s performance metrics, such as
    the crash rate, **App Not Responding** (**ANR**) rate, and more'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stability monitoring**: You can track crashes and ANRs in real time to identify
    and resolve issues that impact your app’s stability'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rendering performance**: You can monitor your app’s rendering performance,
    including slow rendering and frozen frames, to ensure a smooth user experience'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Battery usage**: You can keep an eye on excessive wakeups and wake locks
    to optimize your app’s battery usage and minimize the drain on users’ devices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User feedback**: You can access user reviews and ratings to gain insights
    into your app’s performance and areas for improvement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that Google Play Console vitals is only available for Android apps. Hence,
    iOS app developers should consider alternative performance monitoring solutions.
    Android Studio’s latest version now supports Android vitals without the need for
    any additional SDKs or configuration ([https://developer.android.com/studio/preview/features#aqi-android-vitals](https://developer.android.com/studio/preview/features#aqi-android-vitals)).
  prefs: []
  type: TYPE_NORMAL
- en: Datadog
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Datadog** for mobile apps ([https://www.datadoghq.com/dg/real-user-monitoring/mobile-rum/](https://www.datadoghq.com/dg/real-user-monitoring/mobile-rum/))
    is a robust monitoring and analytics platform that offers performance monitoring,
    detailed error reporting, and powerful analytics. Its flexibility and cross-platform
    support make it an excellent choice for developers looking for one platform for
    their mobile app monitoring needs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Datadog:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time performance monitoring**: You can monitor your mobile app’s performance
    in real time, including key metrics such as network requests, errors, and latency'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed error reporting**: Datadog provides detailed information about errors
    and crashes, including stack traces, device information, and user actions, to
    help you quickly identify and resolve issues:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: "![Figure 7.21 – The track\uFEFFing errors and crashes view](img/Figure_07.21_B18113.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 7.21 – The tracking errors and crashes view
  prefs: []
  type: TYPE_NORMAL
- en: '**Customizable dashboards**: Datadog creates personalized dashboards to visualize
    and analyze your app’s performance data in the way that makes the most sense for
    your team:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.22 – The Dashboards view](img/Figure_07.22_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.22 – The Dashboards view
  prefs: []
  type: TYPE_NORMAL
- en: '**Log management** ([https://docs.datadoghq.com/logs/log_collection/android/?tab=kotlin](https://docs.datadoghq.com/logs/log_collection/android/?tab=kotlin)):
    It automatically collects and analyzes log data from your app to detect anomalies
    and troubleshoot issues:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.23 – Adding a new log](img/Figure_07.23_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.23 – Adding a new log
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows how to add the SDK dependency to the Gradle
    file for your Android app so that you can instrument the performance of your app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.24 – Adding a new Android log](img/Figure_07.24_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.24 – Adding a new Android log
  prefs: []
  type: TYPE_NORMAL
- en: '**Integrations**: Datadog integrates with a wide range of other tools and platforms,
    allowing you to centralize your data and streamline your development workflow,
    as shown in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.25 - The Integrations view](img/Figure_07.25_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.25 - The Integrations view
  prefs: []
  type: TYPE_NORMAL
- en: '**RUM and Session Replay** ([https://docs.datadoghq.com/real_user_monitoring/](https://docs.datadoghq.com/real_user_monitoring/)):
    Datadog provides real-time visibility into the activity and experience of individual
    users so that you get the following benefits:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep track of the performance of your mobile application screens, user actions,
    network requests, and frontend code
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Track ongoing bugs and issues over time and versions:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.26 – The UX Monitoring view](img/Figure_07.26_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.26 – The UX Monitoring view
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.27 – Setting up real user monitoring for Android](img/Figure_07.27_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.27 – Setting up real user monitoring for Android
  prefs: []
  type: TYPE_NORMAL
- en: 'You can set up real user monitoring for your application by adding the SDK
    to the app’s dependencies, as demonstrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.28 – Setting up real user monitoring](img/Figure_07.28_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.28 – Setting up real user monitoring
  prefs: []
  type: TYPE_NORMAL
- en: 'Identify the countries, devices, and operating systems in which your application
    is used, monitor individual users’ journeys, and analyze how users interact with
    your application (most frequently visited pages, clicks, interactions, and feature
    usage):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.29 – Setting up real user monitoring for iOS](img/Figure_07.29_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.29 – Setting up real user monitoring for iOS
  prefs: []
  type: TYPE_NORMAL
- en: Get all the information regarding a user session to troubleshoot an issue (session
    duration, interactions, resources loaded, and errors)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New Relic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**New Relic** for mobile apps ([https://newrelic.com/platform/mobile-monitoring](https://newrelic.com/platform/mobile-monitoring))
    is a performance monitoring and analytics solution that provides monitoring, detailed
    crash reporting, and advanced analytics capabilities. Its customizability and
    cross-platform functionality for Android, iOS, React Native, Capacitor, Cordova,
    and Flutter make it an excellent choice for developers looking to optimize their
    app’s performance and user experience. However, its complexity and lack of a free
    tier may be drawbacks for some users.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of New Relic:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time performance monitoring**: New Relic provides real-time monitoring
    of key performance metrics, such as app load time, network requests, and error
    rates'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Crash reporting**: You can get detailed information on crashes, including
    stack traces, device information, and user actions, to help you quickly identify
    and resolve issues'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customizable dashboards**: You can create personalized dashboards to visualize
    and analyze your app’s performance data in a way that suits your team’s needs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User interaction tracking**: You can monitor user interactions within your
    app to gain insights into the user experience and identify areas for improvement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integrations**: New Relic integrates with popular tools and platforms, allowing
    you to centralize your data and streamline your development workflow, as shown
    in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.30 – Setting a up mobile app on New Relic](img/Figure_07.30_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.30 – Setting a up mobile app on New Relic
  prefs: []
  type: TYPE_NORMAL
- en: 'You can get started by choosing which platform you wish to use, such as Android,
    then continue with the rest of the configuration, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.31 – Setting up an Android app on New Relic](img/Figure_07.31_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.31 – Setting up an Android app on New Relic
  prefs: []
  type: TYPE_NORMAL
- en: 'After that, you can add the SDK to the Gradle file, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.32 – Android build configuration](img/Figure_07.32_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.32 – Android build configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve finished the configuration, you will see a dashboard that displays
    an overview of the Android app, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.33 – Android app overview](img/Figure_07.33_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.33 – Android app overview
  prefs: []
  type: TYPE_NORMAL
- en: You can find different examples of how to set up New Relic for Android ([https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-android/get-started/introduction-new-relic-mobile-android/](https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-android/get-started/introduction-new-relic-mobile-android/)),
    iOS ([https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/](https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/)),
    Flutter ([https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-flutter/monitor-your-flutter-application/](https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-flutter/monitor-your-flutter-application/))
    and React Native ([https://docs.newrelic.com/docs/mobile-monitoring/new-relic-monitoring-react-native/monitor-your-react-native-application/](https://docs.newrelic.com/docs/mobile-monitoring/new-relic-monitoring-react-native/monitor-your-react-native-application/)).
  prefs: []
  type: TYPE_NORMAL
- en: Emerge
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Emerge ([https://www.emergetools.com/](https://www.emergetools.com/)) is an
    innovative mobile app optimization platform designed to help developers reduce
    app size and improve overall performance.
  prefs: []
  type: TYPE_NORMAL
- en: Its focus on *app size reduction*, *resource optimization*, and *code analysis*
    makes it a recommended choice for mobile developers looking to minimize their
    app footprint and enhance the user experience.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the key features of Emerge:'
  prefs: []
  type: TYPE_NORMAL
- en: '**App size reduction**: Emerge analyzes your mobile app to identify areas for
    optimization, enabling you to reduce your app’s size without compromising functionality:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.34 – iOS app dashboard](img/Figure_07.34_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.34 – iOS app dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, you can use Emerge to analyze the app size of, for example, iOS
    apps, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.35 – iOS app size analysis](img/Figure_07.35_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.35 – iOS app size analysis
  prefs: []
  type: TYPE_NORMAL
- en: '**Resource optimization**: Emerge helps optimize your app’s images, fonts,
    and other resources to minimize their impact on app size and performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code analysis**: You can get insights into your app’s code base, identify
    unused code, and discover opportunities for refactoring and optimization:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.36 – IOS size analysis X-Ray](img/Figure_07.36_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.36 – IOS size analysis X-Ray
  prefs: []
  type: TYPE_NORMAL
- en: '**Snapshot Testing (beta)**: You can create snapshots for every upload. These
    snapshots are automatically compared to pull requests so that you can see what
    has changed, what has been added, or what has been removed, as shown in the following
    screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 7.37 – The Snapshot Testing view](img/Figure_07.37_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.37 – The Snapshot Testing view
  prefs: []
  type: TYPE_NORMAL
- en: '**CI integration**: With GitHub Actions and Codemagic, you can configure automated
    comparisons (PR comments/status checks) to appear in your VCS, making it easy
    for everyone in your organization to be aware of your performance metrics. More
    details can be found here: [https://docs.emergetools.com/docs/integrate-into-ci](https://docs.emergetools.com/docs/integrate-into-ci).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automatic alerting**: With Slack Alerts ([https://docs.emergetools.com/docs/slack](https://docs.emergetools.com/docs/slack)),
    for example, you can receive an alert to a channel when an uploaded build triggers
    a configurable threshold.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incident management
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Incident management tools for mobile apps play a crucial role in ensuring the
    smooth operation and stability of your app by helping you detect, analyze, and
    respond to incidents, such as crashes, performance issues, and other technical
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at some popular incident management tools that are commonly used
    for mobile app development.
  prefs: []
  type: TYPE_NORMAL
- en: Incident.io
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Incident.io ([https://incident.io/](https://incident.io/)) is a powerful incident
    management platform that’s designed to help teams effectively handle incidents
    and improve system resilience. Its centralized incident tracking, improved communication,
    automation features, and postmortem analysis capabilities make it an excellent
    choice for teams looking to streamline their incident response process.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Incident.io:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Incident tracking**: Centralizes all incident-related information, making
    it easy to track and manage incidents from a single platform'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communication**: Facilitates team communication and collaboration during
    incidents with built-in chat features and integration with popular communication
    tools'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automation**: Automates the incident response process by triggering predefined
    actions, such as alerting responders, creating tickets, and updating stakeholders'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Postmortem analysis**: Conducts post-incident reviews with comprehensive
    reports, helping your team learn from incidents and improve system resilience'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration**: Integrates with popular monitoring and ticketing tools, streamlining
    your incident management workflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PagerDuty
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**PagerDuty** ([https://www.pagerduty.com/](https://www.pagerduty.com/)) is
    an incident management platform designed to help teams effectively handle incidents
    and improve system reliability. Its comprehensive incident tracking, flexible
    alerting, improved communication, automation features, and postmortem analysis
    capabilities make it an excellent choice for teams looking to streamline their
    incident response processes.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of PagerDuty:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Incident tracking**: Centralizes all incident-related information, making
    it easy to track and manage incidents from a single platform'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alerting and escalation**: Configures alerting rules and escalation policies
    to ensure the right team members are notified and engaged during incidents'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communication**: Facilitates team communication and collaboration during
    incidents with built-in chat features and integration with popular communication
    tools'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automation**: Automates the incident response process with predefined actions,
    such as alerting responders, creating tickets, and updating stakeholders'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Postmortem analysis**: Conducts post-incident reviews with comprehensive
    reports, helping your team learn from incidents and improve system resilience'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration**: Integrates with popular monitoring, alerting, and ticketing
    tools, streamlining your incident management workflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally, we can optimize a mobile app’s performance using profiling tools
    by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify the performance issue**: Determine what specific aspect of the app’s
    performance needs to be improved, such as startup time, frame rate, or memory
    usage.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose a profiling tool**: Select a tool appropriate for the platform and
    the type of performance issue being addressed. Some common profiling tools for
    mobile apps include XCode Instruments (iOS) ([https://developer.apple.com/documentation/xcode](https://developer.apple.com/documentation/xcode)),
    Android Profiler ([https://developer.android.com/studio/profile/android-profiler](https://developer.android.com/studio/profile/android-profiler)),
    and Flutter Profiler ([https://docs.flutter.dev/perf/ui-performance](https://docs.flutter.dev/perf/ui-performance)).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Run the profiling tool**: Use the profiling tool to gather data on the app’s
    performance. This may involve running the app on a device or emulator and performing
    specific actions or scenarios to simulate real-world usage.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Analyze the results**: Review the data collected by the profiling tool to
    identify any issues or bottlenecks in the app’s performance.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Optimize the app**: Use the insights gained from the profiling tool to optimize
    the app’s performance by fixing any identified issues or improving the efficiency
    of the app’s code and resources.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Analytics tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Analytics tools for mobile apps play a crucial role in helping the team make
    data-driven decisions, enhance user experiences, and achieve business goals.
  prefs: []
  type: TYPE_NORMAL
- en: By providing valuable metrics and user insights, these tools empower developers
    and marketers to optimize their apps continuously and stay competitive in the
    dynamic mobile app landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at some popular analytics tools that are used for mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: Google Analytics for Mobile Apps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Google Analytics for Mobile Apps** ([https://developers.google.com/analytics/solutions/mobile](https://developers.google.com/analytics/solutions/mobile))is
    like having a personal investigator for your app. This powerful tool helps you
    gather valuable information about how users interact with your app. Whether you''re
    running a game, a productivity app, or anything in between, this tool provides
    insights that can help you make better decisions.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Google Analytics for Mobile Apps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**User base analysis and demographics**: Find out how many users your app has,
    what their characteristics are, and where they come from'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User action analysis**: Gain insights into user behavior and interactions
    within your app'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**In-app purchase revenue measurement**: Track and analyze monetization and
    payment metrics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customized reports**: Create reports that can benefit your business'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Visual user journey navigation**: Enhance the user experience through graphical
    path analysis'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User group behavior analysis**: Gain deeper insights through data segmentation
    and analysis'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Leverage Google Analytics data**: Utilize Google Analytics data across Google
    products'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-platform support**: Google Analytics provides analytics data for Android,
    iOS, and Flutter mobile applications'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can learn how to add the SDK to your Android, iOS, Flutter, and Unity apps
    at [https://firebase.google.com/docs/analytics](https://firebase.google.com/docs/analytics).
  prefs: []
  type: TYPE_NORMAL
- en: Amplitude
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Amplitude** ([https://amplitude.com/](https://amplitude.com/)) is a powerful
    product analytics platform that provides in-depth insights into user behavior,
    helping teams make data-driven decisions to optimize their products. Its ease
    of use, scalability, and integration capabilities make it an excellent choice
    for businesses looking to drive product growth:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.38 – The Amplitude home page](img/Figure_07.38_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.38 – The Amplitude home page
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.40 – Adding a new mobile app to Amplitude](img/Figure_07.39_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.40 – Adding a new mobile app to Amplitude
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the key features of Amplitude:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Behavioral analytics**: Tracks user actions within your product, helping
    you understand user behavior patterns and identify areas for improvement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Funnels and cohorts**: Analyzes user conversion funnels and cohort retention
    to measure the success of your product features and marketing efforts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time analytics**: Monitors your product’s performance in real time,
    allowing you to respond quickly to any issues or changes in user behavior'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customizable dashboards**: Creates personalized dashboards to visualize and
    analyze the data that matters most to your team'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A/B testing and experimentation**: Runs experiments and A/B tests to optimize
    your product’s user experience and measure the impact of changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mixpanel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Mixpanel** ([https://mixpanel.com/](https://mixpanel.com/)) is a product
    analytics platform that provides in-depth insights into user behavior, helping
    teams make data-driven decisions to optimize their products. Its ease of use,
    scalability, and integration capabilities make it an excellent choice for businesses
    looking to drive product growth:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.40 – Adding a new mobile app to Mixpanel](img/Figure_07.40_B18113.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.40 – Adding a new mobile app to Mixpanel
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the features of Mixpanel:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Behavioral analytics**: Tracks user actions within your product, allowing
    you to understand user behavior patterns and identify areas for improvement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Funnels and cohorts**: Analyzes user conversion funnels and cohort retention
    to measure the success of your product features and marketing efforts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time analytics**: Monitors your product’s performance in real time,
    enabling you to respond quickly to any issues or changes in user behavior'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customizable dashboards**: Creates personalized dashboards to visualize and
    analyze the data that matters most to your team'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A/B testing and experimentation**: Runs experiments and A/B tests to optimize
    your product’s user experience and measure the impact of changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we’ve explored the different monitoring, observability, incident management,
    and analytics tools, let’s outline the key metrics that we usually consider when
    using them.
  prefs: []
  type: TYPE_NORMAL
- en: Key metrics for mobile app monitoring, analytics, and observability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we’ll look at a few key metrics for mobile app monitoring,
    analytics, and observability that you should consider for these purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Some of the key monitoring metrics are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**App load time**: The time it takes for your app to initialize and become
    ready for user interaction upon launch. Faster load times lead to a better user
    experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**API response time**: The time it takes for your app to receive a response
    from backend services or third-party APIs. Long response times can make your app
    feel slow or unresponsive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Frame rate**: The number of frames per second rendered by your app. A low
    frame rate can indicate performance issues, causing a poor user experience, especially
    in animation-heavy or game apps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Observability metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Some of the metrics for observability are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Error rate**: The percentage of app requests that result in errors, such
    as failed API calls or backend issues. A high error rate can affect your app’s
    performance and reliability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Latency**: The time it takes for a request to travel from the user’s device
    to the server and back. High latency can make your app feel slow and unresponsive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Throughput**: The number of requests your app can handle per unit of time.
    Monitoring throughput can help identify bottlenecks and scalability issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analytics metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Analytics metrics for mobile apps refer to the data and measurements that provide
    insights into user behavior, app performance, and overall success. By leveraging
    analytics tools and platforms, app developers and marketers can track, analyze,
    and interpret these metrics to optimize user experiences, enhance app functionality,
    and drive user engagement and retention.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some key analytics metrics for mobile apps include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Daily active users** (**DAU**): This represents the number of unique users
    who interact with your app daily. DAU is a crucial metric that gauges the level
    of user engagement with your app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monthly active users** (**MAU**): MAU refers to the number of unique users
    who interact with your app monthly. This metric provides insights into the overall
    reach and popularity of your app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Session duration**: This is the average time users spend in your app during
    a single session. Longer session durations indicate higher user engagement and
    satisfaction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Session interval**: This metric shows the average time between user sessions,
    revealing how frequently users return to your app. Shorter intervals typically
    indicate strong user retention.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Retention rate**: The retention rate represents the percentage of users who
    come back to your app after a specific period, such as days or weeks. A higher
    retention rate signifies positive, long-term user engagement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Churn rate**: The churn rate indicates the percentage of users who discontinue
    using your app within a defined time. A high churn rate can highlight issues related
    to user satisfaction or app functionality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User lifetime value** (**LTV**): LTV estimates the revenue generated by a
    user throughout their entire engagement with your app. Understanding LTV helps
    you gauge the value of acquiring and retaining users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conversion rate**: The conversion rate measures the percentage of users who
    complete a specific desired action, such as making a purchase, signing up, or
    subscribing. Higher conversion rates indicate better app performance and user
    satisfaction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Funnel analysis**: Funnel analysis visualizes the user flow through various
    steps or events in your app, helping you identify drop-off points and opportunities
    for optimization in the user journey.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Custom events**: Custom events track specific user interactions or milestones
    within your app, providing valuable insights into user behavior and app usage
    patterns. These events can be tailored to suit your app’s unique objectives and
    requirements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing continuous monitoring for mobile apps is crucial to ensure their
    performance and overall quality. Continuous monitoring involves regularly tracking
    and analyzing the app’s behavior, usage, and performance metrics, allowing developers
    to identify and address issues promptly.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s look at the recommended practices regarding how to implement continuous
    monitoring for mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing continuous monitoring for mobile apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Continuous monitoring** involves collecting and analyzing data about a mobile
    app’s performance, usage, and security to identify and address any issues or potential
    improvements. Let’s take a look at some of its benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Improved reliability**: Continuous monitoring can help identify and fix issues
    before they impact users, improving the app’s reliability and reducing the risk
    of downtime'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Better performance**: By collecting data on the app’s performance, teams
    can identify and address bottlenecks or other performance issues, leading to a
    better user experience'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced security**: Continuous monitoring can help identify and address
    security vulnerabilities or other risks, improving the overall security of the
    app'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Faster resolution of issues**: By continuously collecting data on the app’s
    performance, teams can quickly identify and address issues as they arise, reducing
    the time it takes to resolve problems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Monitoring and observability are essential for mobile app development. Developers
    can collect and analyze data by establishing effective practices and using the
    right tools to ensure their app performs optimally and provides a seamless user
    experience. Monitoring allows developers to collect data on app performance, user
    behavior, and system interactions to identify potential issues before they impact
    users.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the key learning points about monitoring and observability in mobile
    app development:'
  prefs: []
  type: TYPE_NORMAL
- en: The benefits of implementing monitoring and observability for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factors to consider in monitoring and observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The steps to implement monitoring and observability for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring, observability, and analytics tools for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Key metrics for mobile app monitoring, analytics, and observability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing continuous monitoring for mobile apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we move forward in our mobile DevOps journey, we will look closer at how
    security is injected into our CI/CD and mobile DevOps life cycles, which is a
    crucial step to add to our mobile DevOps life cycle. In the next chapter, we will
    discuss the importance of security for mobile apps and how we can inject automated
    security testing into the mobile DevOps and CI/CD pipelines.
  prefs: []
  type: TYPE_NORMAL
