- en: <st c="0">12</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">12</st>
- en: <st c="3">Looking Ahead with Copilots, ChatOps, and AI-Infused Applications</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3">展望未来：与Copilot、ChatOps以及AI赋能应用一起前行</st>
- en: <st c="69">We are currently living in times wherein building applications augmented
    with</st> **<st c="148">a</st>****<st c="149">rtificial intelligence</st>** <st
    c="171">(</st>**<st c="173">AI</st>**<st c="175">) has</st> <st c="181">become
    very straightforward.</st> <st c="211">The ability to plug in</st> **<st c="234">l</st>****<st
    c="235">arge</st>** **<st c="240">l</st>****<st c="241">anguage</st>** **<st c="249">m</st>****<st
    c="250">odels</st>** <st c="255">(</st>**<st c="257">LLMs</st>**<st c="261">)
    to</st> <st c="266">our applications and enrich them with AI is unlocking new
    options and allowing organizations to innovate and redefine their business processes.</st>
    <st c="411">This chapter will close this book by talking about the AI-infused
    low-code/no-code development approach.</st> <st c="516">With the introduction
    of LLMs, such as OpenAI’s</st> **<st c="564">Generative Pre-trained Transformer</st>**
    <st c="598">(</st>**<st c="600">GPT</st>**<st c="603">) models, we</st> <st c="617">have
    seen a massive shift in the tools that help makers and developers be more productive
    with their work and achieve outcomes faster.</st> <st c="752">Microsoft Copilot
    is infusing AI into every Microsoft product, which helps makers and developers
    build even more apps with the no-code approach by using natural language to describe
    the desired state.</st> <st c="953">We will dive into Copilot for Power Platform
    and how Copilot can be used across Power Platform products.</st> <st c="1058">We
    will look at the capabilities of AI Builder and understand how to extend Power
    Platform’s capabilities with the Azure OpenAI models through the use of custom
    connectors.</st> <st c="1231">The chapter will finish with a discussion of ChatOps.</st>
    <st c="1285">We will look at how it can enrich existing DevOps processes and how
    we can use Copilot Studio to help us implement ChatOps in</st> <st c="1411">the
    organization.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="69">我们目前正处于一个时代，在这个时代，构建增强型应用程序变得非常简单，应用**<st c="148">人</st>** **<st
    c="149">工智能</st>**（**<st c="173">AI</st>**）已经成为一种常态。</st> <st c="211">将**<st c="234">大</st>**
    **<st c="235">型</st>** **<st c="240">语言</st>** **<st c="249">模型</st>**（**<st c="257">LLMs</st>**）接入我们的应用程序，并为其赋能AI，正在开启新的选择，并使得组织能够创新并重新定义其业务流程。</st>
    <st c="411">本章将通过讨论AI赋能的低代码/零代码开发方法结束本书。</st> <st c="516">随着LLM的引入，如OpenAI的**<st
    c="564">生成预训练转换器</st>**（**<st c="600">GPT</st>**）模型，我们已经见证了在帮助创作者和开发者更高效完成工作并更快实现结果的工具上的巨大变化。</st>
    <st c="752">Microsoft Copilot正在将AI注入每一款Microsoft产品，帮助创作者和开发者通过使用自然语言描述所需状态，利用零代码方法构建更多应用程序。</st>
    <st c="953">我们将深入探讨Power Platform中的Copilot，以及Copilot如何在Power Platform产品中得到应用。</st>
    <st c="1058">我们将查看AI Builder的功能，并了解如何通过使用自定义连接器，利用Azure OpenAI模型扩展Power Platform的能力。</st>
    <st c="1231">本章将以讨论ChatOps作为结尾。</st> <st c="1285">我们将探讨它如何丰富现有的DevOps流程，以及如何使用Copilot
    Studio来帮助我们在组织中实施ChatOps。</st>
- en: <st c="1428">We will cover the following</st> <st c="1457">main topics:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1428">我们将涵盖以下</st> <st c="1457">主要话题：</st>
- en: <st c="1469">The era of AI and the rise</st> <st c="1497">of GPTs</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1469">AI时代与</st> <st c="1497">GPT的崛起</st>
- en: <st c="1504">Microsoft Copilot and Copilot in</st> <st c="1538">Power Platform</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1504">Microsoft Copilot与Power Platform中的Copilot</st>
- en: <st c="1552">Copilot usage from the perspective of</st> <st c="1591">a maker</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1552">从创作者的角度看Copilot的使用</st>
- en: <st c="1598">Extending business solutions with AI Builder and</st> <st c="1648">Azure
    OpenAI</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1598">通过AI Builder和</st> <st c="1648">Azure OpenAI</st>扩展业务解决方案
- en: <st c="1660">ChatOps and</st> <st c="1673">Copilot Studio</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1660">ChatOps与</st> <st c="1673">Copilot Studio</st>
- en: <st c="1687">Technical requirements</st>
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1687">技术要求</st>
- en: <st c="1710">To follow along this chapter, we recommend having these requirements</st>
    <st c="1780">in place:</st>
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1710">要跟随本章内容，我们建议提前准备以下要求：</st> <st c="1780">以便更好地进行学习：</st>
- en: '**<st c="1789">A Power Platform subscription</st>**<st c="1819">: We can sign
    up for a Power Platform development plan (</st>[<st c="1876">https://powerapps.microsoft.com/en-us/developerplan/</st>](https://powerapps.microsoft.com/en-us/developerplan/)<st
    c="1929">), if we already have a Microsoft Entra ID work account, or we can join
    the Microsoft 365 developer</st> <st c="2030">program (</st>[<st c="2039">https://developer.microsoft.com/en-us/microsoft-365/dev-program</st>](https://developer.microsoft.com/en-us/microsoft-365/dev-program)<st
    c="2103">).</st>'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1789">Power Platform 订阅</st>**<st c="1819">：我们可以注册 Power Platform
    开发计划（</st>[<st c="1876">https://powerapps.microsoft.com/en-us/developerplan/</st>](https://powerapps.microsoft.com/en-us/developerplan/)<st
    c="1929">），如果我们已经拥有 Microsoft Entra ID 工作帐户，或者我们可以加入 Microsoft 365 开发者</st> <st
    c="2030">计划（</st>[<st c="2039">https://developer.microsoft.com/en-us/microsoft-365/dev-program</st>](https://developer.microsoft.com/en-us/microsoft-365/dev-program)<st
    c="2103">）。</st>'
- en: '**<st c="2106">An Azure subscription</st>**<st c="2128">: We can provision
    a free Azure account following the guidance at</st> [<st c="2195">https://azure.microsoft.com/en-us/free</st>](https://azure.microsoft.com/en-us/free)<st
    c="2233">. Once provisioned, the Azure portal can be accessed</st> <st c="2286">at</st>
    [<st c="2289">https://portal.azure.com/</st>](https://portal.azure.com/)<st c="2314">.</st>'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2106">Azure 订阅</st>**<st c="2128">：我们可以按照以下指南申请一个免费的 Azure 账户</st>
    [<st c="2195">https://azure.microsoft.com/en-us/free</st>](https://azure.microsoft.com/en-us/free)<st
    c="2233">。一旦创建，Azure 门户可以通过以下链接访问</st> <st c="2286">： </st> [<st c="2289">https://portal.azure.com/</st>](https://portal.azure.com/)<st
    c="2314">。</st>'
- en: '**<st c="2315">An Azure DevOps Services organization</st>**<st c="2353">: We
    can create a DevOps organization any time for</st> <st c="2405">free (</st>[<st
    c="2411">https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates</st>](https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates)<st
    c="2494">).</st>'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2315">Azure DevOps 服务组织</st>**<st c="2353">：我们可以随时创建一个 DevOps 组织，免费使用（</st>[<st
    c="2411">https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates</st>](https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates)<st
    c="2494">）。</st>'
- en: '**<st c="2497">A GitHub handle and a repository</st>**<st c="2530">: As an
    alternative to creating a DevOps organization, we can sign up for a free account
    (</st>[<st c="2621">https://github.com/signup</st>](https://github.com/signup)<st
    c="2647">).</st> <st c="2651">For access to GitHub Enterprise Cloud we can obtain
    a 30-day</st> <st c="2712">trial (</st>[<st c="2719">https://docs.github.com/en/enterprise-cloud@latest/admin/overview/setting-up-a-trial-of-github-enterprise-cloud</st>](mailto:https://docs.github.com/en/enterprise-cloud@latest/admin/overview/setting-up-a-trial-of-github-enterprise-cloud)<st
    c="2831">).</st>'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2497">GitHub 用户名和一个代码仓库</st>**<st c="2530">：作为创建 DevOps 组织的替代方案，我们可以注册一个免费账户（</st>[<st
    c="2621">https://github.com/signup</st>](https://github.com/signup)<st c="2647">）。</st>
    <st c="2651">要访问 GitHub 企业云，我们可以获得一个 30 天的试用版（</st>[<st c="2719">https://docs.github.com/en/enterprise-cloud@latest/admin/overview/setting-up-a-trial-of-github-enterprise-cloud</st>](mailto:https://docs.github.com/en/enterprise-cloud@latest/admin/overview/setting-up-a-trial-of-github-enterprise-cloud)<st
    c="2831">）。</st>'
- en: '**<st c="2834">A Microsoft 365 or Teams license</st>**<st c="2867">: To get
    access to Teams, a Microsoft 365 trial license or Teams license is required.</st>
    <st c="2954">We can use Teams</st> <st c="2971">exploratory (</st>[<st c="2984">https://learn.microsoft.com/en-us/microsoftteams/teams-exploratory</st>](https://learn.microsoft.com/en-us/microsoftteams/teams-exploratory)<st
    c="3051">).</st>'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2834">Microsoft 365 或 Teams 许可证</st>**<st c="2867">：要访问 Teams，需要一个
    Microsoft 365 试用许可证或 Teams 许可证。</st> <st c="2954">我们可以使用 Teams</st> <st c="2971">试用版（</st>[<st
    c="2984">https://learn.microsoft.com/en-us/microsoftteams/teams-exploratory</st>](https://learn.microsoft.com/en-us/microsoftteams/teams-exploratory)<st
    c="3051">）。</st>'
- en: '**<st c="3054">Visual Studio Code</st>**<st c="3073">: You could use another
    IDE or text editing tool of</st> <st c="3126">choice instead.</st>'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3054">Visual Studio Code</st>**<st c="3073">：你可以选择使用其他的IDE或文本编辑工具。</st>'
- en: <st c="3141">The era of AI and the rise of GPTs</st>
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3141">人工智能时代与 GPT 的崛起</st>
- en: <st c="3176">This section will</st> <st c="3194">provide a helicopter view of
    how we came to this point in time where innovation with AI has almost become a
    commodity.</st> <st c="3314">We will explore the GPTs that have shaken the world
    and made a huge impact on society and global industries.</st> <st c="3423">Now,
    app makers can even use these</st> <st c="3458">GPT models in business solutions
    across Power Platform services, but we will come to that later.</st> <st c="3555">Let’s
    first start at</st> <st c="3576">the beginning.</st>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3176">本节将</st> <st c="3194">提供一个宏观视角，回顾我们如何走到今天，在这个阶段，AI 创新几乎已经成为一种商品。</st>
    <st c="3314">我们将探索那些震撼世界并对社会和全球产业产生巨大影响的 GPTs。</st> <st c="3423">现在，应用程序开发者甚至可以在
    Power Platform 服务中使用这些</st> <st c="3458">GPT 模型来提供商业解决方案，但我们稍后会详细讨论。</st> <st
    c="3555">让我们首先从</st> <st c="3576">开始讲起。</st>
- en: <st c="3590">GPTs have been on the market for some time already.</st> <st c="3643">They
    have disrupted the market and brought some fear to people, but they have also
    brought new ideas for innovation.</st> <st c="3760">Since everyone can access
    these models, anyone can innovate and build inspiring solutions using AI.</st>
    <st c="3860">This means that the competitive advantage when using AI that’s built
    using publicly available LLMs has decreased.</st> <st c="3974">This pushes companies
    to be innovative with ideas on how to use this new technology in their business
    processes.</st> <st c="4087">However, like with any project, in AI infused projects
    too, how fast we can bring a reliable and secure solution to the market is very
    important.</st> <st c="4233">Here is where innovation and development should follow
    DevSecOps processes that allow organizations to bring reliable solutions to</st>
    <st c="4364">the market.</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3590">GPT 已经在市场上存在了一段时间。</st> <st c="3643">它们已经颠覆了市场，带给人们一些恐惧，但也带来了创新的新思路。</st>
    <st c="3760">由于每个人都可以访问这些模型，任何人都可以利用 AI 创新并构建鼓舞人心的解决方案。</st> <st c="3860">这意味着，使用公开可获得的大型语言模型（LLM）构建的
    AI 的竞争优势已经下降。</st> <st c="3974">这促使公司在如何将这项新技术应用于商业流程方面进行创新。</st> <st c="4087">然而，就像任何项目一样，在
    AI 融入的项目中，如何快速将一个可靠且安全的解决方案推向市场也非常重要。</st> <st c="4233">在这里，创新和开发应该遵循 DevSecOps
    流程，这些流程允许组织将可靠的解决方案带入</st> <st c="4364">市场。</st>
- en: <st c="4375">In order to understand the current situation, we need to go back</st>
    <st c="4441">in time.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4375">为了理解当前的情况，我们需要回顾</st> <st c="4441">过去。</st>
- en: <st c="4449">Introduction to AI</st>
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="4449">人工智能简介</st>
- en: <st c="4468">AI is an intelligent</st> <st c="4490">computer system that uses
    mathematical algorithms and statistical models to simulate human thinking when
    analyzing data in order to</st> <st c="4622">make decisions.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4468">人工智能是一个智能</st> <st c="4490">计算机系统，它利用数学算法和统计模型来模拟人类思维，在分析数据时做出决策。</st>
- en: <st c="4637">In 1955, computer scientist John McCarthy came up with the term
    AI.</st> <st c="4706">This term describes the concept of machines that can exhibit
    human-like intelligence.</st> <st c="4792">However, the origins of AI date even
    further back.</st> <st c="4843">In 1940, Alan Turing created a machine learning
    algorithm that was</st> <st c="4909">used to crack the Enigma code.</st> <st c="4941">This
    led to the creation of the</st> **<st c="4973">Turing test</st>** <st c="4984">later
    in 1950\.</st> <st c="5000">This test is used to determine whether a machine can
    mimic human intelligence under specific conditions.</st> <st c="5105">After so
    many years, AI experts now debate whether the Turing test is still relevant due
    to the advancements in AI models and natural</st> <st c="5239">language understanding.</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4637">1955年，计算机科学家约翰·麦卡锡提出了“人工智能”（AI）这一术语。</st> <st c="4706">这个术语描述了能够展示类似人类智慧的机器的概念。</st>
    <st c="4792">然而，人工智能的起源甚至可以追溯得更早。</st> <st c="4843">1940年，艾伦·图灵创造了一种机器学习算法，</st>
    <st c="4909">该算法被用于破解恩尼格码密码。</st> <st c="4941">这导致了</st> **<st c="4973">图灵测试</st>**
    <st c="4984">的产生，后者出现在1950年。</st> <st c="5000">这个测试用于判断机器在特定条件下是否能够模仿人类智能。</st>
    <st c="5105">经过这么多年，AI 专家们现在辩论图灵测试是否仍然相关，因为 AI 模型和自然</st> <st c="5239">语言理解的进展。</st>
- en: <st c="5262">Described in a simple way, behind artificial intelligence is a
    computer science and engineering fields that create various algorithms that power
    these AI systems.</st> <st c="5426">Algorithms are described as a set of rules
    and programmed instructions that an AI system follows to process and analyze data.</st>
    <st c="5552">These algorithms can be used for things such as sentiment analysis,
    object detection, and more.</st> <st c="5648">AI models follow algorithms and
    have been taught on a large dataset with representative data in order to make
    use of these algorithms and solve specific tasks</st> <st c="5807">or problems.</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5262">简单来说，人工智能背后是计算机科学和工程领域，它们创造出各种算法，驱动这些AI系统的运行。</st> <st c="5426">算法被描述为AI系统按照一定规则和程序化指令处理和分析数据的一系列步骤。</st>
    <st c="5552">这些算法可用于情感分析、物体检测等任务。</st> <st c="5648">AI模型遵循算法，并通过在大规模、具有代表性的数据集上进行训练，以便利用这些算法来解决特定的任务</st>
    <st c="5807">或问题。</st>
- en: <st c="5819">Once an AI model is trained on representative data, it understands
    the relationships in data, which allows it to apply the learning with new, unknown
    data.</st> <st c="5976">A well-known practice for such an approach to training
    AI is</st> <st c="6037">in</st> **<st c="6040">machine learning</st>**<st c="6056">.
    More data and diverse data that we use to train it, the better the trained model
    will be.</st> <st c="6148">For example, training object detection model with more
    images of an object and providing exact information about each picture, will lead
    to better results of</st> <st c="6306">such model.</st>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5819">一旦AI模型在具有代表性的数据上训练完成，它就能理解数据中的关系，从而能够将所学应用于新的、未知的数据。</st> <st c="5976">这种训练AI的常见做法是</st>
    <st c="6037">在</st> **<st c="6040">机器学习</st>**<st c="6056">中进行的。我们用于训练的更多数据和多样化的数据，训练出的模型效果就会更好。</st>
    <st c="6148">例如，用更多的物体图片训练物体检测模型，并提供每张图片的准确描述信息，将导致该模型的更好效果。</st>
- en: <st c="6317">AI enables computer systems to perform task that find its use in
    many applications.</st> <st c="6402">Through</st> **<st c="6410">n</st>****<st
    c="6411">atural</st>** **<st c="6418">l</st>****<st c="6419">anguage</st>** **<st
    c="6427">p</st>****<st c="6428">rocessing</st>** <st c="6437">(</st>**<st c="6439">NLP</st>**<st
    c="6442">), a subfield of machine learning, systems can</st> <st c="6490">now
    understand human language and perform operations such as language detection, language
    translation, and sentiment analysis over a text.</st> <st c="6629">Expanding this
    with voice, Microsoft claims that they reached human parity in conversational
    speech recognition back in 2016\.</st> <st c="6755">By adding computer vision,
    machines are even able, with the support of AI, to understand</st> <st c="6844">visual
    objects.</st>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6317">AI使计算机系统能够执行在许多应用中都有用的任务。</st> <st c="6402">通过</st> **<st c="6410">自然</st>**
    **<st c="6411">语言</st>** **<st c="6418">处理</st>** **<st c="6419">（NLP）</st>**<st
    c="6427">，这是机器学习的一个子领域，系统现在可以理解人类语言，并执行诸如语言检测、语言翻译和情感分析等操作。</st> <st c="6490">通过扩展到语音，微软声称他们在2016年达到了人类对话语音识别的水平。</st>
    <st c="6755">通过加入计算机视觉，借助AI的支持，机器甚至能够理解</st> <st c="6844">视觉物体。</st>
- en: <st c="6859">There are also other subsets of machine</st> <st c="6899">learning,
    such as</st> **<st c="6918">reinforcement learning</st>** <st c="6940">and, going
    even</st> <st c="6956">further,</st> **<st c="6966">neural networks</st>**<st
    c="6981">. Neural networks are a model which is inspired by the way human brains
    function.</st> <st c="7063">Neural networks consist of neurons, which are interconnected
    nodes that are grouped in layers.</st> <st c="7158">Neurons receive an input,
    which is used in the computational function to determine to which neuron in the
    next layer the data will be sent.</st> <st c="7298">Neural</st> <st c="7304">networks
    can be used for very complex</st> <st c="7343">data relationships.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6859">机器学习还有其他子集，如</st> **<st c="6918">强化学习</st>** <st c="6940">以及更进一步的</st>
    **<st c="6966">神经网络</st>**<st c="6981">。神经网络是一种受人类大脑功能启发的模型。</st> <st c="7063">神经网络由神经元组成，神经元是相互连接的节点，按层次分组。</st>
    <st c="7158">神经元接收输入，这些输入用于计算函数，以确定数据将被发送到下一层哪个神经元。</st> <st c="7298">神经网络可以用于非常复杂的</st>
    <st c="7304">数据关系。</st>
- en: <st c="7362">One might ask why we are talking about all of these models.</st>
    <st c="7423">Well, this is where GPT</st> <st c="7447">comes in.</st>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7362">人们可能会问，为什么我们要讨论这些模型。</st> <st c="7423">嗯，这就是GPT的作用所在。</st> <st
    c="7447">它来了。</st>
- en: <st c="7456">GPTs</st>
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="7456">GPT</st>
- en: <st c="7461">AI advancements in the</st> <st c="7485">last few years have brought
    us generative AI.</st> <st c="7531">Generative AI</st> <st c="7544">is a type
    of AI that uses LLMs.</st> <st c="7577">Generative AIs are capable of responding
    to prompts by generating new content with text, image, speech, or even video.</st>
    <st c="7696">There are many LLMs available; however, one of the most recognizable
    is GPT due to the popularity of</st> <st c="7797">OpenAI’s</st> **<st c="7806">ChatGPT</st>**<st
    c="7813">. It is always fascinating to see how much time certain technology needs
    to reach 100 million monthly average users.</st> <st c="7930">It only took</st>
    <st c="7943">ChatGPT two months to reach 100 million monthly average users.</st>
    <st c="8006">This also shows how new innovative solutions are reducing the time
    needed to hit this</st> <st c="8092">big milestone.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7461">AI在</st> <st c="7485">过去几年中的进展带来了生成式AI。</st> <st c="7531">生成式AI</st>
    <st c="7544">是一种使用LLM的AI类型。</st> <st c="7577">生成式AI能够通过生成文本、图像、语音，甚至视频来响应提示并生成新内容。</st>
    <st c="7696">有许多LLM可用；然而，其中最具代表性的是GPT，得益于</st> <st c="7797">OpenAI的</st> **<st
    c="7806">ChatGPT</st>**<st c="7813">的流行。看到某些技术需要多长时间才能达到1亿月均活跃用户，总是令人着迷。</st>
    <st c="7930">ChatGPT只用了</st> <st c="7943">两个月就达到了1亿月均活跃用户。</st> <st c="8006">这也表明，新的创新解决方案正在缩短达到这一</st>
    <st c="8092">重大里程碑所需的时间。</st>
- en: <st c="8106">GPTs are part of LLMs or text-generation models that are capable
    of producing new content (hence,</st> *<st c="8205">generative</st>*<st c="8215">),
    have been trained on a large dataset (hence,</st> *<st c="8264">pre-trained</st>*<st
    c="8275">), and use neural networks to process the input request and provide output
    (</st><st c="8352">hence,</st> *<st c="8360">transformer</st>*<st c="8371">).</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8106">GPT是LLM或文本生成模型的一部分，能够生成新内容（因此，</st> *<st c="8205">生成式</st>*<st
    c="8215">），已在大量数据集上进行训练（因此，</st> *<st c="8264">预训练</st>*<st c="8275">），并使用神经网络处理输入请求并提供输出（因此，</st><st
    c="8352">变压器</st>*<st c="8360">）。</st>
- en: <st c="8374">As mentioned earlier, many LLMs are available, including those
    that are made available to open source communities.</st> <st c="8490">Currently,
    the most well-known and popular GPTs include OpenAI’s GPTs.</st> <st c="8561">OpenAI
    has also other models available that serve their own purposes.</st> <st c="8631">With
    each new version of a given GPT, we can see it become more sophisticated and knowledgeable.</st>
    <st c="8728">In May 2024, OpenAI</st> <st c="8748">introduced</st> **<st c="8759">GPT-4o</st>**<st
    c="8765">, also</st> <st c="8771">known as</st> **<st c="8781">omni</st>**<st
    c="8785">, which is a multimodal model that accepts both text and images as inputs
    and can produce text as output.</st> <st c="8891">During the announcement, OpenAI
    highlighted how the new GPT-4o model is able to interact with the users through
    audio, visual, and text.</st> <st c="9028">OpenAI also presented a new model that
    is able</st> <st c="9075">to turn text into a</st> <st c="9095">video, called</st>
    **<st c="9109">OpenAI Sora</st>**<st c="9120">, in</st> <st c="9125">February
    2024.</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8374">如前所述，许多LLM可用，其中包括已向开源社区开放的模型。</st> <st c="8490">目前，最著名和流行的GPT包括OpenAI的GPT。</st>
    <st c="8561">OpenAI还提供了其他模型，这些模型用于各自的特定目的。</st> <st c="8631">随着每个新版本的发布，我们可以看到GPT变得更加复杂和智能。</st>
    <st c="8728">2024年5月，OpenAI</st> <st c="8748">推出了</st> **<st c="8759">GPT-4o</st>**<st
    c="8765">，也被称为</st> **<st c="8781">omni</st>**<st c="8785">，这是一个多模态模型，接受文本和图像作为输入，并可以生成文本作为输出。</st>
    <st c="8891">在发布会上，OpenAI强调了新的GPT-4o模型如何通过音频、视觉和文本与用户进行交互。</st> <st c="9028">OpenAI还展示了一种新模型，它能够</st>
    <st c="9075">将文本转化为</st> <st c="9095">视频，名为</st> **<st c="9109">OpenAI Sora</st>**<st
    c="9120">，并于</st> <st c="9125">2024年2月发布。</st>
- en: <st c="9139">Other models that are currently already available include</st>
    <st c="9198">the following:</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9139">当前已经可用的其他模型包括</st> <st c="9198">以下几种：</st>
- en: '**<st c="9212">GPT-4 Turbo</st>**<st c="9224">,</st> **<st c="9226">GPT-4</st>**<st
    c="9231">, and</st> **<st c="9237">GPT-3.5 Turbo</st>** <st c="9250">are</st>
    <st c="9254">models that</st> <st c="9266">can</st> <st c="9271">understand instructions
    in natural language and generate outputs in natural language</st> <st c="9356">or
    code</st>'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="9212">GPT-4 Turbo</st>**<st c="9224">、**<st c="9226">GPT-4</st>**<st
    c="9231">和</st> **<st c="9237">GPT-3.5 Turbo</st>** <st c="9250">是</st> <st c="9254">可以</st>
    <st c="9266">理解自然语言指令并生成自然语言</st> <st c="9271">或代码的模型</st>'
- en: '**<st c="9363">DALL-E</st>** <st c="9370">(text to image) is</st> <st c="9389">a
    model for generating images with a provided natural</st> <st c="9444">language
    instruction</st>'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="9363">DALL-E</st>** <st c="9370">(文本到图像) 是</st> <st c="9389">用于根据提供的自然语言指令生成图像的模型</st>'
- en: '**<st c="9464">Whisper</st>** <st c="9472">is a model</st> <st c="9484">that
    converts audio</st> <st c="9504">into text</st>'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="9464">Whisper</st>** <st c="9472">是一个模型</st> <st c="9484">用于将音频转换成文本</st>'
- en: <st c="9513">Although LLMs have paved the way for generative AI, we also see
    the emergence of small language models.</st> <st c="9618">These are much smaller
    in size due to small training data sizes but are capable of running locally on
    devices, which opens the door to new innovation ideas</st> <st c="9774">for organizations.</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9513">虽然LLM为生成AI铺平了道路，但我们也看到了小型语言模型的出现。</st> <st c="9618">由于训练数据规模较小，这些模型体积较小，但能够在设备上本地运行，这为组织带来了新的创新思路。</st>
    <st c="9774">。</st>
- en: <st c="9792">AI models require components such as data, AI algorithms or models,
    and extensive computational capacity for their operation.</st> <st c="9919">Microsoft
    has formed a partnership with OpenAI and opened up Microsoft Azure Cloud for OpenAI
    to leverage computational power for the research and development of new models.</st>
    <st c="10093">In return, the partnership specifies that OpenAI GPT models are
    exclusively available on Microsoft platforms.</st> <st c="10203">They are available
    for consumption as part of the Azure OpenAI service.</st> <st c="10275">This allows
    customers who are either already using Azure or would like to do so to use a secure
    and compliant platform to build secure enterprise applications utilizing AI capabilities.</st>
    <st c="10461">The partnership enables Microsoft to integrate OpenAI LLMs into
    their own products and build new functionalities that help boost user productivity.</st>
    <st c="10609">A good example of such a product is GitHub Copilot, which</st> <st
    c="10667">acts like an AI pair programmer.</st> <st c="10700">It helps developers
    understand and produce code while using IDEs such as Visual Studio, Visual Studio
    Code, JetBrains IDEs, and Neovim.</st> <st c="10836">Another example of such collaboration
    is the various copilots for Microsoft</st> <st c="10912">products and services,
    which integrate into various tools and enrich the user experience by helping users
    achieve results faster and</st> <st c="11045">more effectively.</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9792">AI模型需要数据、AI算法或模型以及大量的计算能力来运行。</st> <st c="9919">微软与OpenAI合作，并开放Microsoft
    Azure Cloud供OpenAI利用其计算能力进行新模型的研发。</st> <st c="10093">作为回报，合作规定OpenAI GPT模型独家在Microsoft平台上提供。</st>
    <st c="10203">它们可以作为Azure OpenAI服务的一部分提供使用。</st> <st c="10275">这使得已经在使用Azure或希望使用Azure的客户可以利用安全合规的平台构建利用AI能力的安全企业应用。</st>
    <st c="10461">这项合作使得Microsoft能够将OpenAI LLM集成到其自己的产品中，并构建新功能以提升用户生产力。</st> <st
    c="10609">这样一个产品的良好示例是GitHub Copilot，它</st> <st c="10667">就像一个AI的编程伴侣。</st> <st
    c="10700">它帮助开发人员在使用诸如Visual Studio、Visual Studio Code、JetBrains IDEs和Neovim等IDE时理解和生成代码。</st>
    <st c="10836">这种合作的另一个例子是为Microsoft</st> <st c="10912">产品和服务提供各种副驾驶的集成，这些副驾驶集成到各种工具中，通过帮助用户更快地实现结果，从而丰富用户体验。</st>
    <st c="11045">更有效地。</st>
- en: <st c="11062">Responsible AI</st>
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="11062">负责任的AI</st>
- en: <st c="11077">With the advancements</st> <st c="11099">in AI, concerns about
    its potential misuse have become valid.</st> <st c="11162">Therefore, the responsible
    use of AI is imperative.</st> <st c="11214">Microsoft, as well as other companies,
    communities, and individuals, has recognized this and has begun taking an active
    share to advocate for the need for responsible use.</st> <st c="11386">Microsoft
    has made significant investments internally to make sure its AI systems are designed
    with responsibility</st> <st c="11501">in mind.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11077">随着AI的进步，对其潜在误用的担忧变得合理。</st> <st c="11099">因此，负责任地使用AI至关重要。</st>
    <st c="11162">微软以及其他公司、社区和个人已经意识到这一点，并开始积极倡导负责任使用的必要性。</st> <st c="11214">微软在内部进行了重大投资，以确保其AI系统设计具有责任感。</st>
- en: <st c="11509">Microsoft has made</st> <st c="11528">its</st> **<st c="11533">responsible
    AI standard</st>**<st c="11556">, which lays down practical guidance on how to
    ensure organizations use AI responsibly.</st> <st c="11644">It is defined by six
    responsible AI principles that will guide</st> <st c="11706">AI development</st>
    <st c="11722">and use:</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11509">微软已制定</st> <st c="11528">其</st> **<st c="11533">负责任AI标准</st>**<st
    c="11556">，该标准为确保组织负责任使用AI提供了实际指导。</st> <st c="11644">它由六项负责任的AI原则定义，将指导</st>
    <st c="11706">AI的开发</st> <st c="11722">和使用：</st>
- en: '**<st c="11730">Fairness</st>**<st c="11739">: AI systems should treat all
    people equally, without bias</st> <st c="11799">or discrimination</st>'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11730">公平性</st>**<st c="11739">: AI系统应当平等对待所有人，不带偏见</st> <st c="11799">或歧视</st>'
- en: '**<st c="11816">Reliability and safety</st>**<st c="11839">: AI systems should
    perform reliably and prioritize safety in order to prevent</st> <st c="11919">undesired
    consequences</st>'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11816">可靠性和安全性</st>**<st c="11839">: AI系统应当可靠运行，并优先考虑安全，以防止</st> <st
    c="11919">不良后果</st>'
- en: '**<st c="11941">Privacy and security</st>**<st c="11962">: AI systems should
    be secure and maintain privacy by protecting</st> <st c="12028">user data</st>'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11941">隐私和安全</st>**<st c="11962">: AI系统应当确保安全并通过保护</st> <st c="12028">用户数据</st>'
- en: '**<st c="12037">Inclusiveness</st>**<st c="12051">: AI systems should engage
    a wide range of users and be inclusive by considering</st> <st c="12133">diverse
    perspectives</st>'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12037">包容性</st>**<st c="12051">: AI系统应当吸引广泛的用户，并通过考虑</st> <st c="12133">多元化的视角</st>'
- en: '**<st c="12153">Transparency</st>**<st c="12166">: AI decisions and processes
    should be understandable, with clear explanations in order to</st> <st c="12258">improve
    trust</st>'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12153">透明度</st>**<st c="12166">: AI决策和过程应该是可以理解的，并提供清晰的解释以便</st> <st
    c="12258">提高信任</st>'
- en: '**<st c="12271">Accountability</st>**<st c="12286">: Developers</st> <st c="12300">and
    organizations should be held accountable for the developed</st> <st c="12363">AI
    systems</st>'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12271">问责制</st>**<st c="12286">: 开发者</st> <st c="12300">和组织应对所开发的</st>
    <st c="12363">AI系统负责</st>'
- en: <st c="12373">Apart from the responsible AI principles, we should ensure that
    AI systems are developed in a compliant and governed way in order to be compliant
    with local regulatory requirements.</st> <st c="12556">Microsoft also went a step
    further and implemented a five-point blueprint that focuses on governing AI.</st>
    <st c="12660">These are the principles that make sure that AI is used responsibly
    and in compliance with government AI safety standards.</st> <st c="12783">They
    also ensure that we maintain control over AI systems so they can be</st> <st c="12856">used
    safely.</st>
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12373">除了负责任的AI原则之外，我们还应确保AI系统的开发符合合规性并遵循治理方式，以确保符合当地的监管要求。</st> <st
    c="12556">微软更进一步，实施了一个五点蓝图，专注于治理AI。</st> <st c="12660">这些原则确保AI的使用符合政府的AI安全标准，并且是负责任的。</st>
    <st c="12783">它们还确保我们保持对AI系统的控制，以便AI可以</st> <st c="12856">安全使用。</st>
- en: <st c="12868">Microsoft has integrated</st> <st c="12893">responsible AI practices
    not just into the copilots but also into other tools and the culture of people.</st>
    <st c="12999">They have done this to promote the safe and responsible use</st>
    <st c="13059">of AI.</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12868">微软已将</st> <st c="12893">负责任的AI实践不仅融入了协助工具，还融入了其他工具和人们的文化中。</st>
    <st c="12999">他们这样做是为了促进AI的安全和负责任使用。</st> <st c="13059">AI的使用。</st>
- en: <st c="13065">Microsoft Copilots and Copilots in Power Platform</st>
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="13065">微软协助工具与Power Platform中的协助工具</st>
- en: <st c="13115">Microsoft has placed copilots</st> <st c="13145">in many Microsoft
    products for enabling different scenarios.</st> <st c="13207">This section will
    start with explaining what a copilot is, then go through explaining what some
    of the available copilots are and how they can be used.</st> <st c="13359">We
    will then focus on understanding the capabilities of copilots in</st> <st c="13427">Power
    Platform.</st>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13115">微软已在多个微软产品中嵌入了协助工具</st> <st c="13145">以支持不同的场景。</st> <st c="13207">本节将首先解释什么是协助工具，然后介绍一些可用的协助工具及其如何使用。</st>
    <st c="13359">接着，我们将重点了解协助工具在</st> <st c="13427">Power Platform中的能力。</st>
- en: <st c="13442">Microsoft uses the term copilot to describe an AI assistant that
    is capable of retrieving information and performing specific tasks such as summarization
    and content generation.</st> <st c="13621">Copilots utilize LLMs, such as OpenAI’s
    GPT model, to respond to user prompts.</st> <st c="13700">Not all copilots behave
    the same way.</st> <st c="13738">Some copilots are more generic, such as Microsoft
    Copilot, while others are product-specific, such as</st> **<st c="13840">Copilots
    for Microsoft 365</st>** <st c="13866">or</st> **<st c="13870">Copilot for Power
    Platform</st>**<st c="13896">. These</st> <st c="13904">copilots operate within
    the context of a specific</st> <st c="13954">product and are aware of the data
    and operations that are available in the</st> <st c="14029">specific product.</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13442">Microsoft使用“copilot”一词来描述能够检索信息并执行特定任务（如摘要和内容生成）的AI助手。</st> <st
    c="13621">Copilot利用LLM，例如OpenAI的GPT模型，来响应用户的提示。</st> <st c="13700">并非所有Copilot的行为都相同。</st>
    <st c="13738">一些Copilot较为通用，例如Microsoft Copilot，而其他则是特定产品的，例如</st> **<st c="13840">Microsoft
    365的Copilot</st>** <st c="13866">或</st> **<st c="13870">Power Platform的Copilot</st>**<st
    c="13896">。这些</st> <st c="13904">Copilot在特定产品的上下文中运作，并且能够了解该产品中的数据和操作。</st>
- en: <st c="14046">All these copilots share a common conversational chat experience
    with users.</st> <st c="14124">However, when we look at the copilots, we can see
    that some copilots are integrated into the product itself and that their main
    task is to support users to be more productive while using a specific product,
    such as copilots in Power Platform.</st> <st c="14367">Other copilots are also
    product-specific, such as Copilot for Microsoft 365 or Copilot for Sales, and
    they come with a standard set of functionalities that includes a copilot component,
    but they can also be extensible with the support of Copilot Studio.</st> <st c="14621">The
    last group of copilots would be custom copilots, which a user can build by themself
    on either Copilot Studio or using Azure AI services and</st> <st c="14765">expose
    through different channels for</st> <st c="14803">user consumption.</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14046">所有这些Copilot都共享与用户的共同对话式聊天体验。</st> <st c="14124">然而，当我们查看这些Copilot时，我们可以看到一些Copilot是集成到产品本身中的，它们的主要任务是支持用户在使用特定产品时提高生产力，例如Power
    Platform中的Copilot。</st> <st c="14367">其他Copilot也是特定于产品的，例如Microsoft 365的Copilot或Sales的Copilot，它们具有一组标准功能，包括Copilot组件，但也可以通过Copilot
    Studio的支持进行扩展。</st> <st c="14621">最后一类Copilot是自定义Copilot，用户可以在Copilot Studio或使用Azure
    AI服务上自行构建，并通过不同渠道向</st> <st c="14765">用户提供。</st>
- en: <st c="14820">Examples of copilots include</st> <st c="14850">the following:</st>
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14820">Copilot的示例包括</st> <st c="14850">以下内容：</st>
- en: '**<st c="14864">Microsoft Copilot</st>**<st c="14882">: This uses</st> <st
    c="14894">OpenAI LLMs to provide responses to a user’s prompt in a chat-like experience.</st>
    <st c="14974">It can search for a result across the web and can summarize responses
    to a specific question while providing links to relevant</st> <st c="15101">content
    sources.</st>'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="14864">Microsoft Copilot</st>**<st c="14882">：这款工具使用</st> <st c="14894">OpenAI
    LLMs来为用户的提示提供类似聊天的响应体验。</st> <st c="14974">它可以在网络上搜索结果，并能总结针对特定问题的回答，同时提供相关</st>
    <st c="15101">内容来源的链接。</st>'
- en: '**<st c="15117">Copilot for Microsoft 365</st>**<st c="15143">: This</st> <st
    c="15151">generates responses anchored in organizational data that a user has
    access to.</st> <st c="15230">It utilizes Microsoft Graph and LLMs and is integrated
    within Microsoft 365 suite (Word, Excel, Teams, and so on) and aims to improve</st>
    <st c="15364">personal productivity.</st>'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="15117">Microsoft 365的Copilot</st>**<st c="15143">：这个工具</st> <st c="15151">生成基于用户有权限访问的组织数据的响应。</st>
    <st c="15230">它利用Microsoft Graph和LLMs，并集成于Microsoft 365套件（Word、Excel、Teams等）中，旨在提升</st>
    <st c="15364">个人生产力。</st>'
- en: '**<st c="15386">GitHub Copilot</st>**<st c="15401">: This is an</st> <st c="15415">AI
    pair programmer or code completion tool that helps developers during the SDLC.</st>
    <st c="15497">It is grounded around coding-related topics, so it can provide code
    suggestions, explain code, build unit tests,</st> <st c="15610">and more.</st>'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="15386">GitHub Copilot</st>**<st c="15401">：这是一款</st> <st c="15415">AI配对程序员或代码补全工具，帮助开发人员在软件开发生命周期（SDLC）中。</st>
    <st c="15497">它主要围绕编码相关话题，因此可以提供代码建议、解释代码、构建单元测试、</st> <st c="15610">等等。</st>'
- en: <st c="15619">Copilots in Power Platform</st>
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="15619">Power Platform中的Copilot</st>
- en: <st c="15646">AI in Power</st> <st c="15659">Platform has been present for a
    few years now.</st> <st c="15706">In 2019, AI Builder</st> <st c="15725">was introduced
    in Power Platform, which helped incorporate AI models into the business process
    and enrich apps and flows.</st> <st c="15848">In 2021, a capability to turn natural
    language prompts to Power Fx functions was introduced in Power Apps.</st> <st
    c="15955">Since then, new AI capabilities have come to Power Platform</st> <st
    c="16015">each year.</st>
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15646">AI在Power</st> <st c="15659">平台中已经存在了几年。</st> <st c="15706">2019年，AI
    Builder</st> <st c="15725">被引入Power平台，帮助将AI模型融入到业务流程中，并丰富了应用和流程。</st> <st c="15848">2021年，Power
    Apps中推出了将自然语言提示转换为Power Fx函数的功能。</st> <st c="15955">从那时起，新的AI功能每年都不断加入到Power平台中。</st>
    <st c="16015">每年都有新的进展。</st>
- en: <st c="16025">Enabling copilots in Power Platform brings the platform closer
    to no-code development with assistance from AI.</st> <st c="16137">This means
    that no matter whether we are pro-developers, low-code app makers, or people who
    are just learning to work with Power Platform, copilots in Power Platform will
    provide us with the ability to use natural language in order to generate meaningful
    business-oriented solutions.</st> <st c="16421">This helps makers and organizations
    save time and</st> <st c="16471">boost productivity.</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16025">在Power平台中启用copilot功能将平台带入了无代码开发的领域，并且得到了AI的辅助。</st> <st c="16137">这意味着，无论我们是专业开发者、低代码应用开发者，还是刚开始学习使用Power平台的人，Power平台中的copilot都能提供通过自然语言生成有意义的面向业务的解决方案的能力。</st>
    <st c="16421">这有助于开发者和组织节省时间并</st> <st c="16471">提高生产力。</st>
- en: <st c="16490">Each product in the Power Platform family includes its own copilot.</st>
    <st c="16559">These copilots act as AI assistants that hold product-specific capabilities
    that can be used as a maker or as a user of the business solution built on</st>
    <st c="16710">Power Platform.</st>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16490">Power平台家族中的每个产品都包括其专属的copilot。</st> <st c="16559">这些copilot作为AI助手，具备产品特定的功能，可以作为开发者或业务解决方案用户使用，</st>
    <st c="16710">并在Power平台上构建。</st>
- en: <st c="16725">Copilots are integrated into the product and always share the
    product’s main screen, which makes it</st> <st c="16826">convenient</st> <st c="16836">for
    makers or users to be more productive while working on the solution as it does
    not require them to leave the context of</st> <st c="16961">the work:</st>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16725">Copilot已集成到产品中，并始终共享产品的主屏幕，这使得</st> <st c="16826">开发者或用户在解决方案工作时更加高效，因为它不需要他们离开当前工作</st>
    <st c="16836">的上下文。</st> <st c="16961">工作环境：</st>
- en: '**<st c="16970">Copilot in Power Apps</st>**<st c="16992">: This enables</st>
    <st c="17007">makers to build new or edit existing applications by using natural
    language descriptions and write or understand the Power Fx functions.</st> <st
    c="17145">As a user, we can use the copilot component in the app that allows us
    to get answers about the data used in</st> <st c="17253">the application.</st>'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="16970">Power Apps中的Copilot</st>**<st c="16992">：这使得</st> <st c="17007">开发者可以通过自然语言描述来构建新的应用或编辑现有应用，并编写或理解Power
    Fx函数。</st> <st c="17145">作为用户，我们可以在应用中使用copilot组件，帮助我们获取有关应用中数据的答案。</st>'
- en: '**<st c="17269">Copilot in Power Automate</st>**<st c="17295">: Using</st>
    <st c="17304">this, makers can create new flows with the needed connectors to
    support problem descriptions in natural language.</st> <st c="17418">We can also
    alter existing flows and get inspiration for business processes.</st> <st c="17495">Soon,
    we will be able to build AI flows where LLMs will create dynamic automation flows
    and, utilizing multimodal models through voice record instructions, build Power
    Automate desktop flows.</st> <st c="17687">Users are able to get insights into
    the processes and flows analyzed by Power Automate</st> <st c="17774">Process
    Mining.</st>'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17269">Power Automate中的Copilot</st>**<st c="17295">：使用这个功能，开发者可以创建新的流程，并通过自然语言描述所需的连接器。</st>
    <st c="17304">我们还可以修改现有的流程，并为业务流程获得灵感。</st> <st c="17418">很快，我们将能够构建AI流程，LLMs将创建动态的自动化流程，并通过语音记录指令利用多模态模型，构建Power
    Automate桌面流程。</st> <st c="17495">用户能够深入了解由Power Automate Process Mining分析的流程。</st>'
- en: '**<st c="17789">Copilot in Copilot Studio</st>**<st c="17815">: Makers</st>
    <st c="17824">can create new custom copilots with a conversational builder, as
    well as create and alter topics using</st> <st c="17928">natural language.</st>'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17789">Copilot Studio中的Copilot</st>**<st c="17815">：开发者</st> <st c="17824">可以通过对话式构建器创建新的自定义copilot，还可以使用</st>
    <st c="17928">自然语言创建和修改主题。</st>'
- en: '**<st c="17945">Copilot in Power Pages</st>**<st c="17968">: This</st> <st
    c="17975">facilitates the creation of external websites and pages, allowing us
    to add forms, text content, and AI-generated code using a natural language chat
    interface.</st> <st c="18136">Users can leverage a custom copilot chat experience
    and a GenAI-enriched search experience reasoned over</st> <st c="18241">search
    results.</st>'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="17945">Power Pages 中的 Copilot</st>**<st c="17968">：此功能</st> <st c="17975">促进了外部网站和页面的创建，允许我们通过自然语言聊天界面添加表单、文本内容和
    AI 生成的代码。</st> <st c="18136">用户可以利用定制的 Copilot 聊天体验和通过生成式 AI 丰富的搜索体验进行推理，</st>
    <st c="18241">从搜索结果中获取信息。</st>'
- en: '**<st c="18256">Copilot for Power BI</st>**<st c="18277">: This</st> <st c="18284">helps
    build report pages across cloud services and Power BI Desktop.</st> <st c="18354">As
    users, we can get answers to questions about the data in the model, get a summarization
    of the reports,</st> <st c="18461">and more.</st>'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="18256">Power BI 的 Copilot</st>**<st c="18277">：此功能</st> <st c="18284">有助于构建跨云服务和
    Power BI Desktop 的报告页面。</st> <st c="18354">作为用户，我们可以获取有关模型中数据的问题答案，获取报告摘要，</st>
    <st c="18461">以及更多内容。</st>'
- en: <st c="18470">Copilots in Power Platform – preview capabilities</st>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18470">Power Platform 中的 Copilot – 预览功能</st>
- en: <st c="18520">It is important to note that some of the copilots’ capabilities
    in Power Platform are in preview.</st> <st c="18619">These are not meant for production
    use.</st> <st c="18659">In order to access them, we might need to have our environment</st>
    <st c="18722">set to</st> **<st c="18729">early release cycle</st>** <st c="18748">(</st>[<st
    c="18750">https://learn.microsoft.com/en-gb/power-platform/admin/early-release</st>](https://learn.microsoft.com/en-gb/power-platform/admin/early-release)<st
    c="18818">).</st> <st c="18822">We can use sandbox environments using a</st> **<st
    c="18862">preview URL</st>** <st c="18873">(Power Apps:</st> [<st c="18887">https://make.preview.powerapps.com/</st>](https://make.preview.powerapps.com/)<st
    c="18922">) or by enabling</st> **<st c="18940">Try the new data experience</st>**
    <st c="18967">in the Power Apps</st> <st c="18986">home screen.</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18520">需要注意的是，Power Platform 中的一些 Copilot 功能仍处于预览阶段。</st> <st c="18619">这些功能不适用于生产环境。</st>
    <st c="18659">为了访问这些功能，我们可能需要将环境</st> <st c="18722">设置为</st> **<st c="18729">提前发布周期</st>**
    <st c="18748">(</st>[<st c="18750">https://learn.microsoft.com/en-gb/power-platform/admin/early-release</st>](https://learn.microsoft.com/en-gb/power-platform/admin/early-release)<st
    c="18818">)。</st> <st c="18822">我们可以使用沙盒环境，并通过</st> **<st c="18862">预览 URL</st>**
    <st c="18873">(Power Apps:</st> [<st c="18887">https://make.preview.powerapps.com/</st>](https://make.preview.powerapps.com/)<st
    c="18922">) 或通过启用</st> **<st c="18940">体验新的数据体验</st>** <st c="18967">在 Power Apps</st>
    <st c="18986">主页屏幕中。</st>
- en: <st c="18998">Some of the</st> <st c="19011">copilots’ configuration settings
    can be turned on or</st> <st c="19064">off in</st> **<st c="19071">Power Platform
    admin center</st>** <st c="19098">|</st> **<st c="19101">Settings</st>**<st c="19109">.
    Under</st> **<st c="19117">Tenant settings</st>**<st c="19132">, we can find configuration
    settings that we can enable or disable based on the organi</st><st c="19218">zation’s
    policy, as can be seen in</st> *<st c="19254">Figure 12</st>**<st c="19263">.1</st>*<st
    c="19265">:</st>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18998">一些</st> <st c="19011">Copilot 的配置设置可以在</st> **<st c="19071">Power
    Platform 管理中心</st>** <st c="19098">|</st> **<st c="19101">设置</st>**<st c="19109">中打开或</st>
    <st c="19117">关闭</st>**<st c="19117">租户设置</st>**<st c="19132">，我们可以根据组织的政策找到可以启用或禁用的配置设置，正如在</st>
    *<st c="19254">图 12</st>**<st c="19263">.1</st>*<st c="19265">中所示：</st>
- en: '![](img/B22208_12_1.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_1.jpg)'
- en: <st c="19954">Figure 12.1 – Enabling or disabling copilots in Power Platform</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19954">图 12.1 – 在 Power Platform 中启用或禁用 Copilot</st>
- en: <st c="20016">Some of these</st> <st c="20030">settings</st> <st c="20040">include
    capabilities such as enabling data collection, an ability for users to send feedback,
    and abilities to enable or disable copilot preview features in</st> <st c="20197">Power
    Apps.</st>
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20016">这些</st> <st c="20030">设置</st> <st c="20040">包括启用数据收集、用户发送反馈的能力，以及在</st>
    <st c="20197">Power Apps</st> <st c="20040">中启用或禁用 Copilot 预览功能的能力。</st>
- en: <st c="20208">Copilots’ usage from the perspective of a maker</st>
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="20208">从创建者角度看 Copilot 的使用</st>
- en: <st c="20256">In this section, we</st> <st c="20277">will take a look at how
    copilots in Power Platform can be used to generate Power Apps canvas applications
    with data tables on Dataverse and supported by flows in Power Automate.</st> <st
    c="20455">This demonstrates how AI is helping app makers get additional support
    during the low-code development with copilots and shift toward a</st> <st c="20590">no-code
    approach.</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20256">在本节中，我们</st> <st c="20277">将了解如何在Power Platform中使用助手生成带有数据表的Power
    Apps画布应用，并通过Power Automate中的流进行支持。</st> <st c="20455">这展示了AI如何帮助应用开发者在低代码开发过程中获得额外支持，并转向</st>
    <st c="20590">无代码方法。</st>
- en: <st c="20607">One of the benefits that using copilots in Power Platform provides
    is that such an approach enables makers to build prototypes of solutions much
    faster.</st> <st c="20761">This is because prototypes do not need to have all
    the functionalities of an application up and running, but are there to provide
    a look and feel of the idea.</st> <st c="20920">With the help of copilots in the
    Power Platform app, makers can build mockups of an application or flow using natural
    language descriptions and quickly validate the feasibility of the idea for a business
    application.</st> <st c="21137">For each step of the provided suggestions, we
    can revert the changes made by Copilot by clicking the</st> **<st c="21238">Undo</st>**
    <st c="21242">button.</st> <st c="21251">This makes it easy to test ideas and
    revert back in case we are not satisfied with the</st> <st c="21338">suggested
    work.</st>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20607">在Power Platform中使用助手的好处之一是，这种方法使开发者能够更快速地构建解决方案原型。</st> <st c="20761">这是因为原型不需要具备应用的所有功能，只需要提供概念的外观和感觉。</st>
    <st c="20920">借助Power Platform应用中的助手，开发者可以使用自然语言描述构建应用或流的模型，并快速验证业务应用构思的可行性。</st>
    <st c="21137">对于助手提供的每个建议步骤，我们可以通过点击**<st c="21238">撤销</st>** <st c="21242">按钮撤回助手所做的更改。</st>
    <st c="21251">这使得测试想法变得更加容易，并且在不满意建议的工作时可以快速恢复。</st>
- en: <st c="21353">Copilots in Power Platform all have the same user experience.</st>
    <st c="21416">On the home screen of the service, we can find a big text input
    component, which allows us to add descriptions of what we would like to do.</st>
    <st c="21556">Prompts that we write to the copilot should be clear and specific,
    as this will help it return more relevant results for the ask.</st> <st c="21686">In
    order to achieve better results using copilots, we should provide more details
    on the context of the ask or, if needed, provide some examples of how something
    should</st> <st c="21855">be achieved:</st>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21353">Power Platform中的助手具有相同的用户体验。</st> <st c="21416">在该服务的首页，我们可以找到一个大型文本输入组件，允许我们添加想要执行的操作描述。</st>
    <st c="21556">我们写给助手的提示应该清晰且具体，因为这将帮助助手返回更相关的结果。</st> <st c="21686">为了使用助手获得更好的结果，我们应提供更多关于请求的上下文，或者在需要时，提供一些如何实现某个功能的示例：</st>
- en: '![](img/B22208_12_2.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_2.jpg)'
- en: <st c="23342">Figure 12.2 – Copilot in Power Platform on the home page</st>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23342">图12.2 – Power Platform首页上的助手</st>
- en: <st c="23398">On the Power Apps home screen (</st>[<st c="23430">https://make.powerapps.com/</st>](https://make.powerapps.com/)<st
    c="23458">), we are going to start by describing the idea of an application that
    we would like to build.</st> <st c="23554">Since more or less any business application
    relies on data, Copilot will go ahead and start creating a data schema in Dataverse
    as our data source to manage data.</st> <st c="23717">During this step, copilot
    extracts the context</st> <st c="23764">of our prompt and, based on the inputs,
    starts creating an</st> <st c="23823">entity-relationship diagram.</st>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23398">在Power Apps首页（</st>[<st c="23430">https://make.powerapps.com/</st>](https://make.powerapps.com/)<st
    c="23458">）上，我们将首先描述我们希望构建的应用程序的构思。</st> <st c="23554">由于几乎所有的业务应用都依赖于数据，助手将开始在Dataverse中创建一个数据架构，作为我们的数据源来管理数据。</st>
    <st c="23717">在这个步骤中，助手会提取我们提示的上下文</st> <st c="23764">并根据输入开始创建一个</st> <st c="23823">实体关系图。</st>
- en: <st c="23851">We can use prompt suggestions to alter a data schema, add more
    tables, configure the relationship between them, add more test data in the tables,
    and more.</st> <st c="24008">The</st> **<st c="24012">View prompts</st>** <st
    c="24024">button acts as a prompt guide and gives us suggestions of what copilot
    can do.</st> <st c="24104">This includes the abilities to create tables and relationships,
    alter tables and columns, and serve as inspiration, with suggestions based on
    the current data</st> <st c="24263">schema design:</st>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23851">我们可以使用提示建议来更改数据架构、添加更多表格、配置它们之间的关系、向表格中添加更多测试数据等等。</st> <st c="24008">此时，</st>
    **<st c="24012">查看提示</st>** <st c="24024">按钮作为提示指南，提供了Copilot可以执行的操作建议。</st> <st
    c="24104">这些操作包括创建表格和关系、修改表格和列，并作为灵感提供基于当前数据</st> <st c="24263">架构设计的建议：</st>
- en: '![](img/B22208_12_3.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_3.jpg)'
- en: <st c="25279">Figure 12.3 – Rich data model creation</st>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25279">图12.3 – 丰富数据模型创建</st>
- en: <st c="25317">Once we click</st> **<st c="25332">Save and open app</st>**<st
    c="25349">, Copilot will use this data schema to create a sample application</st>
    <st c="25415">with separate screens that have forms to perform operations over
    tables, as well as a separate welcome screen that can serve as a navigation</st>
    <st c="25557">between screens.</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25317">一旦我们点击</st> **<st c="25332">保存并打开应用</st>**<st c="25349">，Copilot将使用此数据架构创建一个示例应用</st>
    <st c="25415">，该应用具有多个屏幕，包含表单用于操作表格，同时也有一个独立的欢迎屏幕，可作为屏幕之间的导航</st> <st c="25557">。</st>
- en: <st c="25573">In Power Apps Studio, we can utilize copilot to ask questions
    on how we can achieve things in Power Apps.</st> <st c="25680">This utilizes Bing
    Search to find relevant content and provide us with guidance.</st> <st c="25761">For
    example, we can ask a question such as “</st>*<st c="25805">How can I add a picture
    to an image component</st>*<st c="25851">?” and it will produce the response relevant
    to the question.</st> <st c="25913">In this case, that would be step-by-step guidance
    on how to achieve this with a relevant link to the documentation explaining the
    process.</st> <st c="26052">We can ask it to add some specific components, such
    as a button or text label to the screen, but at this point, we might still need
    to do some tasks manually, as it is not yet able to complete</st> <st c="26245">all
    tasks.</st>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25573">在Power Apps Studio中，我们可以利用Copilot提问，了解如何在Power Apps中实现某些功能。</st>
    <st c="25680">它利用Bing搜索来查找相关内容，并为我们提供指导。</st> <st c="25761">例如，我们可以提问“</st>*<st
    c="25805">如何将图片添加到图像组件</st>*<st c="25851">？”它会提供与问题相关的回答。</st> <st c="25913">在这种情况下，它会提供逐步的指导，教你如何实现此操作，并提供相关的文档链接，解释整个过程。</st>
    <st c="26052">我们可以要求它向屏幕添加特定的组件，如按钮或文本标签，但此时我们可能仍然需要手动完成一些任务，因为它尚不能完成</st> <st
    c="26245">所有任务。</st>
- en: <st c="26255">Building Power Fx formulas can be challenging sometimes, especially
    for someone who is working with Power Platform for the first time.</st> <st c="26391">Similar
    to the capabilities of GitHub Copilot, to support developers, now we are able
    to use comments in a natural language to generate Power Fx formulas.</st> <st
    c="26546">It also works the other way around, helping understand what a formula
    does by clicking a copilot icon next to the formula box and selecting</st> **<st
    c="26686">Explain</st>** **<st c="26694">this formula</st>**<st c="26706">:</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="26255">构建Power Fx公式有时会很具挑战性，特别是对于第一次使用Power Platform的人。</st> <st c="26391">类似于GitHub
    Copilot的功能，为了支持开发人员，现在我们可以使用自然语言的注释来生成Power Fx公式。</st> <st c="26546">它也可以反向工作，帮助理解公式的作用，只需点击公式框旁的Copilot图标，然后选择</st>
    **<st c="26686">解释</st>** **<st c="26694">此公式</st>**<st c="26706">：</st>
- en: '![](img/B22208_12_4.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_4.jpg)'
- en: <st c="27811">Figure 12.4 – Using copilot to provide Power Fx formula suggestions</st>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27811">图12.4 – 使用Copilot提供Power Fx公式建议</st>
- en: <st c="27878">As developers, we can</st> <st c="27901">also get a view of the
    code in the Power Apps Studio directly.</st> <st c="27964">By selecting the three
    dots next to a screen or a component (or right-clicking), we can now see a</st>
    **<st c="28062">View code (preview)</st>** <st c="28081">option, which shows a
    code in YAML format for the selected part.</st> <st c="28147">This allows us to
    copy the code and discuss it with other developers, make changes in the code directly,
    or even use copy/paste to place only this part in another screen</st> <st c="28317">or
    application.</st>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27878">作为开发人员，我们还可以直接在 Power Apps Studio 中查看代码。</st> <st c="27901">通过选择屏幕或组件旁边的三个点（或右键单击），我们现在可以看到一个</st>
    **<st c="28062">查看代码（预览）</st>** <st c="28081">选项，显示所选部分的 YAML 格式代码。</st> <st c="28147">这使我们可以复制代码并与其他开发人员讨论，直接修改代码，甚至使用复制/粘贴将此部分放入另一个屏幕</st>
    <st c="28317">或应用程序中。</st>
- en: <st c="28332">If we switch gears to Power Automate, copilot allows us to complete
    similar tasks there.</st> <st c="28422">That means using natural language to describe
    the flow we would like to create and perform changes to existing flows, such as
    adding actions to the flow, configuring the parameters of actions,</st> <st c="28615">and
    more.</st>
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="28332">如果我们转向 Power Automate，Copilot 也可以帮助我们完成类似的任务。</st> <st c="28422">这意味着使用自然语言描述我们希望创建的流程，并对现有流程进行修改，例如向流程中添加操作、配置操作的参数，</st>
    <st c="28615">等等。</st>
- en: <st c="28624">With the advancements in AI, soon, we will be able to build AI
    flows, where AI will determine how to build an automation plan with all the conditions
    needed to fulfill requirements.</st> <st c="28807">We will also soon be able to
    use voice to record instructions for building a Power Automate</st> <st c="28899">Desktop
    flow.</st>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="28624">随着人工智能的进步，我们很快就能构建 AI 流程，AI 将决定如何构建一个自动化计划，并满足实现要求所需的所有条件。</st>
    <st c="28807">我们也很快能够使用语音记录构建 Power Automate</st> <st c="28899">桌面流程的指令。</st>
- en: '![](img/B22208_12_5.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_5.jpg)'
- en: <st c="29699">Figure 12.5 – Copilot in Power Automate</st>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29699">图 12.5 – Power Automate 中的 Copilot</st>
- en: <st c="29738">We have to keep in mind that at this time, some of the copilot
    features are still in preview.</st> <st c="29833">From a DevOps</st> <st c="29847">perspective,
    we can see one main problem currently, and that is that the ability to use the
    same building approach is not enabled from the</st> <st c="29986">solution’s level.</st>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29738">我们必须记住，目前一些 Copilot 功能仍处于预览阶段。</st> <st c="29833">从 DevOps</st>
    <st c="29847">的角度来看，我们当前能看到一个主要问题，那就是在</st> <st c="29986">解决方案级别上，并未启用使用相同构建方法的能力。</st>
- en: <st c="30003">We mentioned in</st> [*<st c="30020">Chapter 4</st>*](B22208_04.xhtml#_idTextAnchor074)
    <st c="30029">that we should be starting off building our Power Platform components
    from within solution explorer.</st> <st c="30131">There we use an existing solution
    or create a new one, since solutions enable us to move applications between environments
    and manage dependencies required by our solution components.</st> <st c="30315">The
    current approach of development with the copilots is starting from the designer
    experience instead of from the solution explorer.</st> <st c="30449">This way,
    all components that we create through copilot’s initial designer experience will
    be added to the</st> **<st c="30556">Default Solution</st>** <st c="30572">and
    be unmanaged.</st> <st c="30591">Currently, a copilot-first approach for building
    business applications does not support starting from the solution, which leaves
    us only with the option of adding existing components to a new solution and making
    sure all required dependencies are added to the solution.</st> <st c="30861">However,
    if we would like to start with the manual creation of custom copilot, we can first
    create a solution and, from there, create new components (such as a Power Apps
    application).</st> <st c="31046">We</st> <st c="31048">hope that the copilot experience
    for the initial creation of apps and other components will also be enabled through
    the</st> <st c="31169">solution approach.</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30003">我们在</st> [*<st c="30020">第 4 章</st>*](B22208_04.xhtml#_idTextAnchor074)
    <st c="30029">中提到，我们应该从解决方案资源管理器内部开始构建我们的 Power 平台组件。</st> <st c="30131">在那里，我们可以使用现有的解决方案或创建新的解决方案，因为解决方案使我们能够在不同环境之间移动应用程序并管理解决方案组件所需的依赖项。</st>
    <st c="30315">当前的开发方法是从设计体验开始，而不是从解决方案资源管理器开始。</st> <st c="30449">这种方式，通过 copilot
    的初始设计体验创建的所有组件都将添加到</st> **<st c="30556">默认解决方案</st>** <st c="30572">并处于未管理状态。</st>
    <st c="30591">目前，用于构建业务应用程序的 copilot-first 方法不支持从解决方案开始，这使我们只能选择将现有组件添加到新解决方案，并确保将所有必需的依赖项添加到解决方案。</st>
    <st c="30861">但是，如果我们希望从手动创建 custom copilot 开始，我们可以首先创建一个解决方案，然后从那里创建新组件（如 Power
    Apps 应用程序）。</st> <st c="31046">我们</st> <st c="31048">希望 copilot 在初始创建应用程序和其他组件方面的体验也可以通过</st>
    <st c="31169">解决方案方法启用。</st>
- en: <st c="31187">Extending business solutions with AI Builder and Azure OpenAI</st>
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="31187">通过 AI Builder 和 Azure OpenAI 扩展业务解决方案</st>
- en: <st c="31249">Now that we have seen how AI is helping us build Power Platform
    components, we will look for ways to infuse AI capabilities into our applications
    and flows.</st> <st c="31407">This section will go through the AI Builder capabilities
    and how it compares to Azure OpenAI.</st> <st c="31501">We will take a look at
    how to set up a custom connector to connect to Azure OpenAI, where we will use
    our Azure OpenAI model of choice to enrich the user experience or improve our
    business process in</st> <st c="31701">Power Platform.</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31249">现在，我们已经看到 AI 如何帮助我们构建 Power 平台组件，接下来，我们将寻找将 AI 能力融入我们的应用程序和流程中的方法。</st>
    <st c="31407">本节将介绍 AI Builder 的能力，并比较它与 Azure OpenAI 的区别。</st> <st c="31501">我们将看看如何设置自定义连接器以连接到
    Azure OpenAI，在这里，我们将使用我们选择的 Azure OpenAI 模型来丰富用户体验或改进我们在 Power 平台中的业务流程。</st>
    <st c="31701">Power 平台。</st>
- en: <st c="31716">Introducing AI Builder</st>
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="31716">介绍 AI Builder</st>
- en: <st c="31739">AI Builder is a Power</st> <st c="31762">Platform service that
    allows makers to utilize different AI models and prompts inside their solutions
    without requiring coding or special data science knowledge.</st> <st c="31924">It
    allows organizations to improve their business processes by adding additional
    AI capabilities, which can help automate manual and repetitive tasks and help
    achieve</st> <st c="32091">better outcomes.</st>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31739">AI Builder 是一个 Power</st> <st c="31762">平台服务，允许制作者在其解决方案内使用不同的
    AI 模型和提示，无需编码或特殊的数据科学知识。</st> <st c="31924">它允许组织通过添加额外的 AI 能力来改善其业务流程，这可以帮助自动化手动和重复的任务，并帮助实现更好的结果。</st>
- en: <st c="32107">It can be integrated into Power Apps applications through a Power
    Fx formula or by using AI Builder components.</st> <st c="32220">AI Builder can
    also be used in Power Automate workflows by using AI Builder actions.</st> <st
    c="32305">We also have the option to use its capabilities in plugins within</st>
    <st c="32371">Copilot Studio.</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32107">它可以通过 Power Fx 公式或使用 AI Builder 组件集成到 Power Apps 应用程序中。</st> <st
    c="32220">通过使用 AI Builder 动作，AI Builder 还可以在 Power Automate 工作流中使用。</st> <st c="32305">我们还可以选择在</st>
    <st c="32371">Copilot Studio 内的插件中使用其功能。</st>
- en: <st c="32386">AI models</st>
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="32386">AI 模型</st>
- en: <st c="32396">AI Builder</st> <st c="32407">comes with a</st> <st c="32421">set
    of pre-built models that are commonly used in many business processes.</st> <st
    c="32496">When we require more custom-built models specific to our data, we can
    build custom models and train them on a</st> <st c="32606">custom dataset.</st>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32396">AI Builder</st> <st c="32407">提供了一套预构建的模型，这些模型在许多业务流程中得到了广泛应用。</st>
    <st c="32496">当我们需要更符合数据特定需求的自定义模型时，可以创建自定义模型，并在</st> <st c="32606">自定义数据集上进行训练。</st>
- en: <st c="32621">AI models can be grouped together based on the type of data that
    they use.</st> <st c="32697">These groups can hold both pre-built and</st> <st
    c="32738">custom models:</st>
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32621">AI 模型可以根据它们使用的数据类型进行分组。</st> <st c="32697">这些组可以同时包含预构建模型和</st>
    <st c="32738">自定义模型：</st>
- en: '**<st c="32752">Document processing</st>**<st c="32772">: This group contains
    models such as invoice processing, text recognition, document processing as a
    custom model, and a business</st> <st c="32902">card reader</st>'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="32752">文档处理</st>**<st c="32772">：该组包含发票处理、文本识别、作为自定义模型的文档处理以及一个</st>
    <st c="32902">名片识别器</st>'
- en: '**<st c="32913">Text processing</st>**<st c="32929">: Here, we can find models
    that are used for text processing, such as key phrase extraction, sentiment analysis,
    language detection, and</st> <st c="33067">category classification</st>'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="32913">文本处理</st>**<st c="32929">：在这里，我们可以找到用于文本处理的模型，如关键词提取、情感分析、语言检测和</st>
    <st c="33067">类别分类</st>'
- en: '**<st c="33090">Image processing</st>**<st c="33107">: Models that extract
    information from images, such as image description to generate descriptions of
    an image or object detection in images, are</st> <st c="33253">found here</st>'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="33090">图像处理</st>**<st c="33107">：提取图像信息的模型，例如图像描述生成图像或物体检测的模型，</st>
    <st c="33253">都可以在此找到</st>'
- en: '**<st c="33263">Structured data processing</st>**<st c="33290">: Only one custom
    model so far can make forecasts and predict outcomes</st> <st c="33362">using
    data</st>'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="33263">结构化数据处理</st>**<st c="33290">：目前只有一个自定义模型能够使用数据进行预测并预测结果</st>
    <st c="33362">。</st>'
- en: <st c="33372">Each model has its own specifics and requirements in order to
    get the best result.</st> <st c="33456">To learn more about each specific model,
    we recommend going through the</st> <st c="33528">documentation:</st> [<st c="33543">https://learn.microsoft.com/en-us/ai-builder/model-types</st>](https://learn.microsoft.com/en-us/ai-builder/model-types)<st
    c="33599">.</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33372">每个模型都有其自身的特点和要求，以获得最佳结果。</st> <st c="33456">要了解更多关于每个具体模型的信息，我们建议阅读以下</st>
    <st c="33528">文档：</st> [<st c="33543">https://learn.microsoft.com/en-us/ai-builder/model-types</st>](https://learn.microsoft.com/en-us/ai-builder/model-types)<st
    c="33599">。</st>
- en: <st c="33600">With pre-built models, we do not require any special configuration
    – they are ready to be used out of the box and do not require any training.</st>
    <st c="33744">We can use the component or connector action, point it to the data,
    and receive an output.</st> <st c="33835">When using a custom model, we are building
    a model that is specific to a line of business.</st> <st c="33926">It has to be
    trained first with the historical data in order to be able to complete specific
    tasks.</st> <st c="34026">For document processing, we</st> <st c="34053">would</st>
    <st c="34060">require at least five examples that use the same layout in order
    to train a</st> <st c="34136">model accurately.</st>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33600">使用预构建模型时，我们无需进行任何特殊配置——它们是即开即用的，不需要任何训练。</st> <st c="33744">我们可以使用组件或连接器操作，将其指向数据并接收输出。</st>
    <st c="33835">在使用自定义模型时，我们构建的是一个特定于某个业务领域的模型。</st> <st c="33926">它必须先使用历史数据进行训练，才能完成特定任务。</st>
    <st c="34026">对于文档处理，我们</st> <st c="34053">需要</st> <st c="34060">至少五个具有相同布局的示例，才能准确训练一个</st>
    <st c="34136">模型。</st>
- en: <st c="34153">AI prompts</st>
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="34153">AI 提示</st>
- en: <st c="34164">AI prompts allow</st> <st c="34181">makers to build prompts that
    will instruct an LLM on the</st> <st c="34238">kind of task it has to perform.</st>
    <st c="34271">The more precise the instruction is, the better the outcome of the
    task will be.</st> <st c="34352">AI Builder has pre-built prompts that build these
    instructions to GPT faster, such as tasks around text summarization, text classification,
    sentiment analysis, drafting a reply, and more.</st> <st c="34540">However, just
    as before with AI models, makers have the opportunity to create custom AI prompts.</st>
    <st c="34637">With the</st> <st c="34645">help of</st> **<st c="34654">prompt
    engineering</st>**<st c="34672">, we can provide instructions that will guide
    a GPT model to the needed outcome.</st> <st c="34753">It is important to know
    that the quality of instructions will have a direct impact on the output.</st>
    <st c="34851">AI prompts allow us to provide input variables and Dataverse data,
    which creates prompts that are highly dynamic and related to our</st> <st c="34983">business
    process.</st>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: AI 提示使得开发者可以构建指令，告诉大语言模型（LLM）需要执行的任务。指令越精准，任务的结果就会越好。AI Builder 提供了预构建的提示，可以更快速地将这些指令应用于
    GPT，例如文本摘要、文本分类、情感分析、草拟回复等任务。然而，就像以前使用 AI 模型一样，开发者仍然有机会创建自定义 AI 提示。在**提示工程**的帮助下，我们可以提供指导
    GPT 模型达到预期结果的指令。需要注意的是，指令的质量会直接影响输出结果。AI 提示允许我们提供输入变量和 Dataverse 数据，从而创建高度动态并与我们业务流程相关的提示。
- en: <st c="35000">AI Builder currently uses GPT-3.5-Turbo or GPT-4 (in preview)
    for AI prompts.</st> <st c="35079">These are powered by</st> <st c="35100">Azure
    OpenAI.</st>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: AI Builder 目前使用 GPT-3.5-Turbo 或 GPT-4（预览版）进行 AI 提示的处理。这些都是由 Azure OpenAI 提供支持的。
- en: <st c="35113">As creating a prompt is important and as there are other parameters
    that define how the model will behave, such as model selection and temperature
    settings, it’s a good idea to learn more about building AI prompts</st> <st c="35328">at</st>
    [<st c="35331">https://learn.microsoft.com/en-us/ai-builder/create-a-custom-prompt</st>](https://learn.microsoft.com/en-us/ai-builder/create-a-custom-prompt)<st
    c="35398">.</st>
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 创建提示非常重要，而且还有其他参数决定了模型的行为，例如模型选择和温度设置，因此了解如何构建 AI 提示是一个好主意，可以通过以下链接了解更多：[https://learn.microsoft.com/en-us/ai-builder/create-a-custom-prompt](https://learn.microsoft.com/en-us/ai-builder/create-a-custom-prompt)。
- en: <st c="35399">As a safety precaution, we recommend implementing human inspection
    of the response before using the</st> <st c="35500">response in an important business
    process, where a</st> <st c="35551">wrong or irrelevant response could bring harm
    or have</st> <st c="35605">negative implications.</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安全起见，我们建议在将响应用于重要的业务流程之前，先对其进行人工检查，**以防**错误或无关的响应带来危害或负面影响。
- en: <st c="35627">Using AI models and AI prompts</st>
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 AI 模型和 AI 提示
- en: <st c="35658">We can start</st> <st c="35672">creating</st> <st c="35680">AI
    models or AI prompts from</st> <st c="35710">the</st> **<st c="35714">AI hub</st>**<st
    c="35720">:</st>
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从**AI Hub**开始创建 AI 模型或 AI 提示：
- en: <st c="35722">In Power Apps or Power Automate, we can find the AI hub in the
    left navigation menu.</st> <st c="35807">In case we do not see it there yet, we
    can find it under</st> **<st c="35864">More</st>** <st c="35868">and pin it to
    the left navigation bar from there or by going to</st> **<st c="35933">More</st>**
    <st c="35937">|</st> **<st c="35940">Discover all</st>**<st c="35952">, where
    we will find</st> **<st c="35973">AI hub</st>** <st c="35979">and can pin it to
    the left</st> <st c="36007">navigation menu.</st>
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Power Apps 或 Power Automate 中，我们可以在左侧导航菜单中找到 AI Hub。如果暂时找不到，可以在**更多**中找到并将其固定到左侧导航栏，或者通过访问**更多**
    | **发现所有**，在其中找到**AI Hub**并将其固定到左侧导航菜单。
- en: <st c="36023">Once we are in</st> **<st c="36039">AI hub</st>**<st c="36045">,
    we can start building AI prompts and models.</st> <st c="36092">There, we can
    also find a document automation solution that combines the RPA process and AI
    to extract information from various documents and proceed with the document</st>
    <st c="36260">processing workflow.</st>
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="36023">一旦进入</st> **<st c="36039">AI中心</st>**<st c="36045">，我们可以开始构建AI提示和模型。</st>
    <st c="36092">在那里，我们还可以找到一个文档自动化解决方案，结合RPA流程和AI，从各种文档中提取信息，并继续执行文档</st> <st c="36260">处理工作流。</st>
- en: <st c="36280">Starting with AI prompts – in</st> **<st c="36311">AI hub</st>**<st
    c="36317">, select</st> **<st c="36326">Prompts</st>**<st c="36333">. There, we
    will see a list of all pre-built prompts and the option of creating a custom prompt</st>
    <st c="36429">with GPT.</st>
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="36280">从AI提示开始 – 在</st> **<st c="36311">AI中心</st>**<st c="36317">，选择</st>
    **<st c="36326">提示</st>**<st c="36333">。在这里，我们将看到所有预构建提示的列表，并有选项创建自定义提示</st> <st
    c="36429">与GPT。</st>
- en: <st c="36438">AI prompts are made of the</st> **<st c="36466">Prompt</st>**<st
    c="36472">, which should be precise and clear, and</st> **<st c="36513">Prompt
    settings</st>**<st c="36528">. We can configure multiple input variables and add
    them to the prompt to make it highly dynamic.</st> <st c="36626">We can use data
    from Dataverse to additionally ground the GPT model with the knowledge source.</st>
    <st c="36721">Outputs can be text or JSON and the latter option could sometimes
    be more suitable, as we have more control over the presentation layer.</st> <st
    c="36858">In</st> **<st c="36861">Settings</st>**<st c="36869">, we can select
    the model and temperature we’d like</st> <st c="36921">to use.</st>
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="36438">AI提示由</st> **<st c="36466">提示</st>**<st c="36472">组成，应该准确清晰，还有</st>
    **<st c="36513">提示设置</st>**<st c="36528">。我们可以配置多个输入变量并将其添加到提示中，使其高度动态。</st> <st
    c="36626">我们可以使用Dataverse中的数据，进一步为GPT模型提供知识来源。</st> <st c="36721">输出可以是文本或JSON，有时后者可能更合适，因为我们对展示层有更多控制。</st>
    <st c="36858">在</st> **<st c="36861">设置</st>**<st c="36869">中，我们可以选择我们想要使用的模型和温度设置。</st>
    <st c="36921">来使用。</st>
- en: <st c="36928">Now that we have created an AI prompt, we can add it to our application
    or flow.</st> <st c="37010">When we are developing our canvas app inside Power
    Apps Studio, we can find AI prompts or AI models in the</st> **<st c="37117">Data</st>**
    <st c="37121">section.</st>
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="36928">现在我们已经创建了AI提示，可以将其添加到我们的应用程序或流程中。</st> <st c="37010">在Power Apps
    Studio中开发画布应用时，我们可以在</st> **<st c="37117">数据</st>** <st c="37121">部分找到AI提示或AI模型。</st>
- en: <st c="37130">In the left navigation bar, click on</st> **<st c="37168">Data</st>**
    <st c="37172">|</st> **<st c="37175">Add data</st>**<st c="37183">, which opens
    an option to select a data source.</st> <st c="37232">There, we can use the search
    bar to find our AI prompt or model and add</st> <st c="37304">them</st> <st c="37308">to</st>
    <st c="37312">our application:</st>
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="37130">在左侧导航栏中，点击</st> **<st c="37168">数据</st>** <st c="37172">|</st>
    **<st c="37175">添加数据</st>**<st c="37183">，这会打开一个选项以选择数据源。</st> <st c="37232">在这里，我们可以使用搜索栏找到我们的AI提示或模型并将其添加</st>
    <st c="37304">到</st> <st c="37308">我们的应用程序中：</st>
- en: '![](img/B22208_12_6.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_6.jpg)'
- en: <st c="37553">Figure 12.6 – Adding an AI prompt to the canvas app</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37553">图12.6 – 将AI提示添加到画布应用程序中</st>
- en: <st c="37604">In order to use the AI prompt or AI model, we will trigger it
    from the Power</st> <st c="37682">Fx function:</st>
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="37604">为了使用AI提示或AI模型，我们将通过Power</st> <st c="37682">Fx函数来触发它：</st>
- en: '[PRE0]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="37812">In the preceding code, we can see an example of the Power Fx function
    that stores the response of the AI prompt as a variable, which can then later
    be consumed in the application based on our business process.</st> <st c="38023">In
    Power Apps, we can find AI Builder components that are focused on specific AI
    models and can be implemented in the application through the component to enable
    some additional capabilities, such as a receipt and form processor, object detection,</st>
    <st c="38271">and more.</st>
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37812">在前面的代码中，我们可以看到一个Power Fx函数的示例，它将AI提示的响应存储为一个变量，之后可以根据我们的业务流程在应用程序中使用该变量。</st>
    <st c="38023">在Power Apps中，我们可以找到专注于特定AI模型的AI Builder组件，并可以通过组件将其实现到应用程序中，以启用一些额外的功能，如收据和表单处理器、物体检测等。</st>
- en: <st c="38280">Adding AI prompts and AI models in Power Automate is as easy as
    adding any other action in</st> <st c="38372">the workflow:</st>
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38280">在Power Automate中添加AI提示和AI模型与添加任何其他操作一样简单，只需在</st> <st c="38372">工作流中进行添加：</st>
- en: <st c="38385">In the Power Automate designer, when working on our workflow,
    click</st> **<st c="38454">Add an action</st>** <st c="38467">in the place where
    we would like to add</st> <st c="38508">AI capability.</st>
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="38385">在 Power Automate 设计器中，工作在我们的工作流时，点击</st> **<st c="38454">添加操作</st>**
    <st c="38467">在我们希望添加 AI 能力的地方。</st>
- en: <st c="38522">Search for</st> **<st c="38534">AI Builder</st>** <st c="38544">and
    select a model or prompt type from</st> <st c="38584">the list.</st>
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="38522">搜索</st> **<st c="38534">AI Builder</st>** <st c="38544">并从列表中选择一个模型或提示类型。</st>
- en: <st c="38593">We first select the model type and, in the next step, we can link
    a connector action to our model</st> <st c="38692">or prompt.</st>
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="38593">首先选择模型类型，然后在下一步中，可以将一个连接器操作链接到我们的模型</st> <st c="38692">或提示。</st>
- en: <st c="38702">Related to the preceding example, where we used a custom AI prompt,
    we can find our custom AI prompt by using the Power Automate action:</st> **<st
    c="38840">AI Builder</st>** <st c="38850">|</st> **<st c="38853">Create text with
    GPT using</st>** **<st c="38880">a prompt</st>**<st c="38888">.</st>
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="38702">与前面提到的示例相关，我们使用了自定义 AI 提示，我们可以通过以下 Power Automate 操作找到我们的自定义 AI
    提示：</st> **<st c="38840">AI Builder</st>** <st c="38850">|</st> **<st c="38853">使用
    GPT 创建文本，使用</st>** **<st c="38880">提示</st>**<st c="38888">。</st>
- en: <st c="38889">We authenticate to a connector and, under</st> **<st c="38932">Parameters</st>**
    <st c="38942">|</st> **<st c="38945">Prompt</st>**<st c="38951">, select our prompt
    from</st> <st c="38976">the list.</st>
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="38889">我们对连接器进行身份验证，并在</st> **<st c="38932">参数</st>** <st c="38942">|</st>
    **<st c="38945">提示</st>**<st c="38951">中，从列表中选择我们的提示。</st>
- en: <st c="38985">We provide any inputs if needed and continue building</st> <st
    c="39040">our flow.</st>
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="38985">我们提供必要的输入，并继续构建</st> <st c="39040">我们的工作流。</st>
- en: <st c="39049">In any subsequent</st> <st c="39068">action, we</st> <st c="39079">will
    be able to use the output from the previous actions, which is the same for AI
    Builder actions.</st> <st c="39179">As an example, in</st> *<st c="39197">Figure
    12</st>**<st c="39206">.7</st>*<st c="39208">, we are using outputs from the generated
    complaint response, built by GenAI, in the</st> **<st c="39293">Approvals</st>**
    <st c="39302">action, to allow reviewers to review whether the generated complaint
    reply is appropriat</st><st c="39391">e or not.</st> <st c="39402">If it is, we
    send the complaint message to</st> <st c="39445">the customer:</st>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="39049">在任何后续</st> <st c="39068">操作中，我们</st> <st c="39079">将能够使用前一操作的输出，这对于
    AI Builder 操作也是相同的。</st> <st c="39179">举个例子，在</st> *<st c="39197">图 12</st>**<st
    c="39206">.7</st>*<st c="39208">中，我们正在使用由 GenAI 构建的生成的投诉回复的输出，在</st> **<st c="39293">审批</st>**
    <st c="39302">操作中，允许审核人员审查生成的投诉回复是否恰当。</st> <st c="39391">如果是，我们将投诉消息发送给</st>
    <st c="39445">客户：</st>
- en: '![](img/B22208_12_7.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_7.jpg)'
- en: <st c="40301">Figure 12.7 – Integrating AI Builder with Power Automate</st>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40301">图 12.7 – 将 AI Builder 与 Power Automate 集成</st>
- en: <st c="40357">Important notes</st>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40357">重要说明</st>
- en: <st c="40373">From the perspective of</st> <st c="40397">using</st> <st c="40404">solutions
    for packaging our business applications, we need to keep in mind that AI models
    and prompts are not considered as app dependency.</st> <st c="40544">We will need
    to manually add AI prompts and models to our solution to accompany the app</st>
    <st c="40632">or flow.</st>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40373">从</st> <st c="40397">使用</st> <st c="40404">打包我们业务应用程序的解决方案的角度来看，我们需要记住
    AI 模型和提示不被视为应用程序的依赖项。</st> <st c="40544">我们需要手动将 AI 提示和模型添加到我们的解决方案中，以便与应用程序</st>
    <st c="40632">或工作流配合使用。</st>
- en: <st c="40640">Also, AI models and prompts use AI Builder credits.</st> <st c="40693">Different
    model types consume different amounts of credits, so make sure to review the licensing
    guide (</st>[<st c="40797">https://go.microsoft.com/fwlink/?linkid=2085130</st>](https://go.microsoft.com/fwlink/?linkid=2085130)<st
    c="40845">) to better understand the credit utilization for</st> <st c="40896">your
    project.</st>
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40640">此外，AI 模型和提示使用 AI Builder 学分。</st> <st c="40693">不同的模型类型消耗不同数量的学分，因此请确保查看许可指南（</st>[<st
    c="40797">https://go.microsoft.com/fwlink/?linkid=2085130</st>](https://go.microsoft.com/fwlink/?linkid=2085130)<st
    c="40845">）以更好地了解您的项目的学分使用情况。</st>
- en: <st c="40909">AI Builder ALM</st>
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="40909">AI Builder ALM</st>
- en: <st c="40924">Whenever we</st> <st c="40937">create a custom AI model or AI
    prompt that we would like to reuse across environments, we can apply the same
    principles of application life cycle management that we have already covered in
    the previous chapters with other Power</st> <st c="41165">Platform components.</st>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40924">每当我们</st> <st c="40937">创建一个定制的AI模型或AI提示，我们希望在不同环境中重复使用时，我们可以应用已经在前几章中介绍过的应用生命周期管理原则，与其他Power</st>
    <st c="41165">Platform组件一样。</st>
- en: <st c="41185">Since an AI model or prompt cannot be created from within solution
    explorer, a custom AI model or AI prompt first needs to be created using AI Builder,
    where we can train the AI model with our collection of data or build a custom
    AI prompt.</st> <st c="41427">We recommend following an environment strategy and
    developing a custom model in a development or sandbox environment and from there
    deploying it to other target environments.</st> <st c="41602">Once the model has
    been trained, we need to publish it so that we can add it to</st> <st c="41682">the
    solution.</st>
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41185">由于无法从解决方案资源管理器中创建AI模型或提示，首先需要使用AI Builder创建一个定制的AI模型或AI提示，在那里我们可以使用我们的数据集训练AI模型或构建定制的AI提示。</st>
    <st c="41427">我们建议遵循环境策略，在开发或沙盒环境中开发定制模型，然后将其部署到其他目标环境。</st> <st c="41602">一旦模型训练完成，我们需要发布它，以便将其添加到</st>
    <st c="41682">解决方案中。</st>
- en: <st c="41695">Since the model is not considered an application or flow dependency,
    we need to manually add the custom AI model or AI prompt along with the app or
    flow that will be using it.</st> <st c="41872">At this stage, we are ready to
    add existing models to solutions.</st> <st c="41937">We need to be aware that
    when a model is added to the solution, only the model executable is added to the
    solution and not the data that was used for training.</st> <st c="42097">This
    is why when we use models such as document processing, object detection, or entity
    extraction, the modification of models in the target environment won’t be possible,
    as the data is not transferred to the target environment.</st> <st c="42327">In
    such cases and if modifications are needed, a new model should be created in the</st>
    <st c="42411">target environment.</st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41695">由于该模型不被视为应用程序或流程依赖项，我们需要手动添加定制的AI模型或AI提示以及将要使用它的应用程序或流程。</st>
    <st c="41872">在此阶段，我们准备将现有模型添加到解决方案中。</st> <st c="41937">我们需要意识到，当模型添加到解决方案时，只会添加模型可执行文件，而不会添加用于训练的数据。</st>
    <st c="42097">这就是为什么当我们使用文档处理、对象检测或实体提取等模型时，在目标环境中无法修改模型，因为数据没有传输到目标环境。</st> <st
    c="42327">在这种情况下，如果需要进行修改，应该在</st> <st c="42411">目标环境中创建一个新模型。</st>
- en: <st c="42430">As part of the ALM for AI Builder, we should also consider implementing
    a</st> **<st c="42505">continuous improvement process</st>** <st c="42535">to
    improve our models.</st> <st c="42559">So far, we can automate this approach with</st>
    <st c="42601">the</st> <st c="42606">out-of-the-box capabilities only for custom
    document processing models.</st> <st c="42678">However, we should implement a
    feedback loop that at least informs owners of AI models or prompts about the relevancy
    and appropriateness of the model by using different metrics to measure that.</st>
    <st c="42873">One of these can be the model confidence score.</st> <st c="42921">However,
    we can also incorporate a manual review process, as we have seen in an example
    earlier.</st> <st c="43018">In order to achieve continuous improvement for a custom
    document processing model, we can implement a Power Automate flow that uses the</st>
    **<st c="43154">Save file to AI Builder feedback loop</st>** <st c="43191">AI
    Builder action whenever the total confidence score of an existing AI model is
    below a certain threshold.</st> <st c="43300">A detailed description of this process
    is documented</st> <st c="43353">here:</st> [<st c="43359">https://learn.microsoft.com/en-us/ai-builder/feedback-loop</st>](https://learn.microsoft.com/en-us/ai-builder/feedback-loop)<st
    c="43417">.</st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="42430">作为 AI Builder 的 ALM 部分，我们还应该考虑实施一个</st> **<st c="42505">持续改进过程</st>**
    <st c="42535">以改进我们的模型。</st> <st c="42559">到目前为止，我们可以仅通过现成功能为自定义文档处理模型自动化此方法。</st>
    <st c="42601">但是，我们应该实施一个反馈循环，至少通过使用不同的度量标准来衡量模型的相关性和适用性，从而通知 AI 模型或提示的所有者。</st>
    <st c="42873">其中之一可以是模型置信度评分。</st> <st c="42921">然而，我们也可以结合人工审查过程，正如我们在之前的示例中所看到的。</st>
    <st c="43018">为了实现自定义文档处理模型的持续改进，我们可以实施一个 Power Automate 流程，在现有 AI 模型的总置信度评分低于某个阈值时，使用</st>
    **<st c="43154">保存文件到 AI Builder 反馈循环</st>** <st c="43191">的 AI Builder 操作。</st>
    <st c="43300">此过程的详细描述已记录在</st> <st c="43353">此处：</st> [<st c="43359">https://learn.microsoft.com/en-us/ai-builder/feedback-loop</st>](https://learn.microsoft.com/en-us/ai-builder/feedback-loop)<st
    c="43417">。</st>
- en: <st c="43418">Once we are ready with our solution, we can use the CI/CD pipelines
    that we have configured in the previous chapters to export the solution and have
    the source code added to a repository.</st> <st c="43607">After that, we can follow
    the DevOps process and, once ready, we can use our import pipeline to import the
    models to the target environment.</st> <st c="43748">After that, models and prompts
    can be used in applications and flows.</st> <st c="43818">In case we are using
    managed pipelines or pipelines for all, we only need to make sure that we have
    AI Builder components</st> <st c="43939">added to</st> <st c="43949">the solution.</st>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43418">当我们准备好解决方案后，可以使用我们在前几章中配置的 CI/CD 流水线来导出解决方案，并将源代码添加到一个代码库中。</st>
    <st c="43607">之后，我们可以遵循 DevOps 流程，并在准备好后，使用我们的导入流水线将模型导入目标环境。</st> <st c="43748">之后，模型和提示可以在应用程序和流程中使用。</st>
    <st c="43818">如果我们使用的是托管流水线或全局流水线，我们只需确保已将 AI Builder 组件</st> <st c="43939">添加到</st>
    <st c="43949">解决方案中。</st>
- en: <st c="43962">Introducing Azure OpenAI</st>
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="43962">介绍 Azure OpenAI</st>
- en: <st c="43987">Sometimes, makers and</st> <st c="44009">organizations would like
    to use the latest version of GPT models or have maybe already built models on
    Azure OpenAI, where they have grounded models around their company data.</st>
    <st c="44186">They might want to reuse the work that they have already done on
    Azure OpenAI for other applications, or maybe the included version of the GPT
    model in Power Platform is the one they wish to use.</st> <st c="44382">Luckily,
    Power Platform is a very extensible platform and supports such cases</st> <st
    c="44460">as well.</st>
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43987">有时，开发者和</st> <st c="44009">组织可能希望使用最新版本的 GPT 模型，或者他们可能已经在 Azure
    OpenAI 上构建了模型，围绕公司数据构建了模型。</st> <st c="44186">他们可能希望重用已经在 Azure OpenAI 上完成的工作，以便应用于其他应用程序，或者也许
    Power Platform 中包含的 GPT 模型版本正是他们希望使用的版本。</st> <st c="44382">幸运的是，Power Platform
    是一个非常可扩展的平台，支持此类情况</st> <st c="44460">。</st>
- en: <st c="44468">As we have already mentioned in</st> [*<st c="44501">Chapter 9</st>*](B22208_09.xhtml#_idTextAnchor149)<st
    c="44510">, Power Platform supports many pro-dev integration scenarios between
    Azure and Power Platform.</st> <st c="44605">Building fusion development teams
    would help us to bring relevant engineers to the project.</st> <st c="44697">We
    can then distribute tasks to data scientists, AI architects, or similar roles
    that would make sure that the models are designed and fine-tuned in Azure OpenAI.</st>
    <st c="44860">Developers or more seasoned app makers will make sure that custom
    connectors are integrated with Azure OpenAI.</st> <st c="44971">And lastly, app
    makers will use custom connectors as part of the business application or flow,
    to produce the outcome for which they</st> <st c="45104">are built.</st>
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="44468">正如我们在</st> [*<st c="44501">第9章</st>*](B22208_09.xhtml#_idTextAnchor149)<st
    c="44510">中提到的，Power Platform 支持 Azure 与 Power Platform 之间的多种专业开发集成场景。</st> <st
    c="44605">构建融合开发团队将有助于我们将相关工程师带入项目。</st> <st c="44697">然后，我们可以将任务分配给数据科学家、AI 架构师或类似角色，确保模型在
    Azure OpenAI 中被设计和微调。</st> <st c="44860">开发人员或经验更丰富的应用开发者将确保自定义连接器与 Azure OpenAI
    集成。</st> <st c="44971">最后，应用开发者将把自定义连接器作为业务应用或流程的一部分，来产生它们</st> <st c="45104">被构建的结果。</st>
- en: <st c="45114">The Azure OpenAI service is a PaaS service that brings OpenAI
    models to the Azure cloud platform.</st> <st c="45213">Models are exposed through
    a REST API endpoint through which we can consume these LLMs while benefiting from
    the security, scalability, and reliability of the Azure platform.</st> <st c="45388">These
    models support different tasks that span across NLP, computer vision, speech,</st>
    <st c="45472">and more.</st>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="45114">Azure OpenAI 服务是一个 PaaS 服务，将 OpenAI 模型带到 Azure 云平台。</st> <st c="45213">这些模型通过
    REST API 端点进行暴露，借此我们可以使用这些 LLM，同时受益于 Azure 平台的安全性、可扩展性和可靠性。</st> <st c="45388">这些模型支持跨越
    NLP、计算机视觉、语音等不同任务。</st> <st c="45472">以及更多。</st>
- en: <st c="45481">Azure OpenAI is designed for data scientists and AI engineers,
    who need more control over the models, by enabling them to fine-tune the models,
    generate embeddings, apply content filters, and more.</st> <st c="45680">Additionally,
    in AI Builder, we can use GPT-4 over text with AI prompts.</st> <st c="45753">Azure
    OpenAI provides other LLM models and if we take a look at the Azure AI service
    in general, we can see that there are also other LLM models as well as SLM models
    available that we can utilize.</st> <st c="45951">This way, we can go beyond text
    and get the support of multimodality if needed, such as with the latest GPT-4o
    or other models such as Whisper or GPT-4 Turbo with Vision.</st> <st c="46122">With
    all the advancements in AI, as well as optimizing hardware and AI operations,
    it is just a matter of time until Power Platform becomes richer with additional
    LLM models that will also support multimodality out of</st> <st c="46340">the
    box.</st>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="45481">Azure OpenAI 旨在为数据科学家和 AI 工程师设计，帮助他们更好地控制模型，允许他们微调模型、生成嵌入、应用内容过滤器等。</st>
    <st c="45680">此外，在 AI Builder 中，我们可以使用 GPT-4 通过 AI 提示进行文本处理。</st> <st c="45753">Azure
    OpenAI 提供了其他 LLM 模型，如果我们整体查看 Azure AI 服务，可以发现还有其他 LLM 模型以及 SLM 模型可供使用。</st> <st
    c="45951">通过这种方式，我们可以超越文本，必要时获得多模态支持，比如最新的 GPT-4o 或其他模型，如 Whisper 或带有视觉功能的 GPT-4
    Turbo。</st> <st c="46122">随着 AI 的不断进步以及硬件和 AI 操作的优化，Power Platform 很快将会通过额外的 LLM
    模型变得更加丰富，并且这些模型将开箱即用地支持多模态。</st>
- en: <st c="46348">Integrating Azure OpenAI with Power Platform</st>
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="46348">将 Azure OpenAI 与 Power Platform 集成</st>
- en: <st c="46393">Azure OpenAI</st> <st c="46407">provides a UI experience, called</st>
    **<st c="46440">Azure OpenAI Studio</st>**<st c="46459">, through</st> <st c="46469">which</st>
    <st c="46474">users can build, test, and manage their Azure OpenAI deployments.</st>
    <st c="46541">To start using it, Azure OpenAI service can be provisioned manually
    using Azure portal, using Azure CLI, or using infrastructure as code approach
    that we have already familiarized ourselves with in the</st> <st c="46743">previous
    chapter.</st>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46393">Azure OpenAI</st> <st c="46407">提供了一种名为</st> **<st c="46440">Azure
    OpenAI Studio</st>**<st c="46459">的用户界面体验，通过它</st> <st c="46469">用户可以构建、测试并管理他们的
    Azure OpenAI 部署。</st> <st c="46541">要开始使用它，可以通过 Azure 门户手动配置 Azure OpenAI 服务，也可以使用
    Azure CLI 或我们在</st> <st c="46743">上一章中已经熟悉的基础设施即代码的方法。</st>
- en: <st c="46760">To better understand the process of creating Azure OpenAI resources
    and model deployment, we recommend going through this documentation</st> <st c="46897">article:</st>
    [<st c="46906">https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource</st>](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource)<st
    c="46987">.</st>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: <st c="46988">The Azure OpenAI model can be grounded around the organizational
    data, keeping the data secure within the organizational Azure subscription.</st>
    <st c="47130">Our new Azure OpenAI service can now be used in custom-developed
    applications using REST API and SDKs.</st> <st c="47233">In Power Platform, it
    can be integrated</st> <st c="47273">using connectors.</st>
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: <st c="47290">Access to Azure OpenAI services</st>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: <st c="47322">Before provisioning Azure OpenAI service in our Azure subscription
    for the first time, we must submit an application to have access to Azure OpenAI
    services granted.</st> <st c="47489">This can be done using a form that is accessible</st>
    <st c="47538">at</st> [<st c="47541">https://aka.ms/oai/access</st>](https://aka.ms/oai/access)<st
    c="47566">.</st>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: <st c="47567">We have already seen examples of building custom connectors in</st>
    [*<st c="47631">Chapter 9</st>*](B22208_09.xhtml#_idTextAnchor149)<st c="47640">.
    However, we will provide specifics that should be considered when connecting to
    the Azure OpenAI se</st><st c="47741">rvice.</st> <st c="47749">We can find all
    the required information within Azure</st> <st c="47803">OpenAI Studio:</st>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_8.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
- en: <st c="48216">Figure 12.8 – The Azure OpenAI chat playground</st>
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: <st c="48262">Here are</st> <st c="48272">the steps:</st>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: <st c="48282">In Power Apps</st> <st c="48296">or</st> <st c="48299">Power Automate,
    select</st> **<st c="48323">Custom connectors</st>** <st c="48340">in the left
    navigation bar and click on</st> **<st c="48381">New custom connector</st>** <st
    c="48401">|</st> **<st c="48404">Create</st>** **<st c="48411">from blank</st>**<st
    c="48421">.</st>
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="48422">Among other data, we need to provide</st> `<st c="48527"><name>.openai.azure.com</st>`
    <st c="48550">format, as shown in</st> *<st c="48571">Figure 12</st>**<st c="48580">.8</st>*<st
    c="48582">.</st>
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="48583">Within the</st> **<st c="48595">Security</st>** <st c="48603">tab,
    we specify</st> **<st c="48620">API Key</st>** <st c="48627">as the authentication
    type, which is added in the</st> **<st c="48678">Header</st>** <st c="48684">location.</st>
    <st c="48695">This key is what we will provide at the creation of the connection
    in Power Platform.</st> <st c="48781">It can be found next to the endpoint URL,
    as seen in</st> *<st c="48834">Figure 12</st>**<st c="48843">.8</st>*<st c="48845">,
    or in the Azure portal by going to</st> **<st c="48882">Azure OpenAI resource</st>**
    <st c="48903">|</st> **<st c="48906">Resource Management</st>** <st c="48925">|</st>
    **<st c="48928">Keys</st>** **<st c="48933">and Endpoints</st>**<st c="48946">.</st>
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="48583">在</st> **<st c="48595">安全</st>** <st c="48603">选项卡中，我们指定</st>
    **<st c="48620">API 密钥</st>** <st c="48627">作为认证类型，它会添加到</st> **<st c="48678">头部</st>**
    <st c="48684">位置。</st> <st c="48695">这个密钥是我们在 Power Platform 中创建连接时提供的。</st> <st
    c="48781">它可以在端点 URL 旁边找到，如</st> *<st c="48834">图 12</st>**<st c="48843">.8</st>*<st
    c="48845">所示，或者通过进入 Azure 门户，在</st> **<st c="48882">Azure OpenAI 资源</st>** <st
    c="48903">|</st> **<st c="48906">资源管理</st>** <st c="48925">|</st> **<st c="48928">密钥</st>**
    **<st c="48933">和端点</st>**<st c="48946">中找到。</st>
- en: <st c="48947">In the</st> **<st c="48955">Definition</st>** <st c="48965">tab,
    click</st> **<st c="48977">New action</st>** <st c="48987">to define the chat
    completion API operation.</st> <st c="49033">In the</st> **<st c="49040">Request</st>**
    <st c="49047">part, we can use</st> **<st c="49065">Import from sample</st>**
    <st c="49083">to create an HTTP POST request.</st> <st c="49116">Under</st> **<st
    c="49122">URL</st>**<st c="49125">, we provide the complete endpoint URL, which
    can also be found in</st> **<st c="49192">Azure OpenAI Chat playground</st>**
    <st c="49220">|</st> **<st c="49223">View code</st>**<st c="49232">, as can be
    seen in</st> *<st c="49252">Figure 12</st>**<st c="49261">.8</st>*<st c="49263">.
    The chat completions API also requires a body with a message that contains content
    for a system and user roles.</st> <st c="49377">We can include a sample payload
    with a message from Azure OpenAI Chat Playground to facilitate adding</st> <st
    c="49479">the parameters.</st>
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="48947">在</st> **<st c="48955">定义</st>** <st c="48965">选项卡中，点击</st> **<st
    c="48977">新建操作</st>** <st c="48987">来定义聊天完成 API 操作。</st> <st c="49033">在</st>
    **<st c="49040">请求</st>** <st c="49047">部分，我们可以使用</st> **<st c="49065">从示例导入</st>**
    <st c="49083">来创建 HTTP POST 请求。</st> <st c="49116">在</st> **<st c="49122">URL</st>**<st
    c="49125">部分，我们提供完整的端点 URL，该 URL 也可以在</st> **<st c="49192">Azure OpenAI 聊天游乐场</st>**
    <st c="49220">|</st> **<st c="49223">查看代码</st>**<st c="49232">中找到，如</st> *<st
    c="49252">图 12</st>**<st c="49261">.8</st>*<st c="49263">所示。聊天完成 API 还需要一个包含系统和用户角色内容的消息体。</st>
    <st c="49377">我们可以包含来自 Azure OpenAI 聊天游乐场的示例有效载荷，以方便添加</st> <st c="49479">参数。</st>
- en: <st c="49494">Actions can be further customized in the</st> **<st c="49536">Definition</st>**
    <st c="49546">tab to make sure that we are providing the required information
    for</st> <st c="49615">the model.</st>
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="49494">操作可以在</st> **<st c="49536">定义</st>** <st c="49546">选项卡中进一步自定义，以确保我们为</st>
    <st c="49615">模型提供了所需的信息。</st>
- en: <st c="49625">Once we are satisfied, we can proceed to the</st> **<st c="49671">Test</st>**
    <st c="49675">tab, where we will create a connection by providing the API key
    for Azure OpenAI service.</st> <st c="49766">After that, we can test</st> <st
    c="49790">the connector.</st>
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="49625">一旦我们满意，就可以继续到</st> **<st c="49671">测试</st>** <st c="49675">选项卡，在这里我们将通过提供
    Azure OpenAI 服务的 API 密钥来创建连接。</st> <st c="49766">之后，我们可以测试</st> <st c="49790">连接器。</st>
- en: <st c="49804">Once we have a working connector, we can utilize it in our Power
    Platform solutions in the same way as with any</st> <st c="49917">other connector.</st>
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="49804">一旦我们有了一个有效的连接器，就可以像使用任何</st> <st c="49917">其他连接器一样，在我们的 Power
    Platform 解决方案中使用它。</st>
- en: <st c="49933">Microsoft has</st> <st c="49947">recently</st> <st c="49957">published
    a premium</st> **<st c="49977">Azure OpenAI connector</st>** <st c="49999">(in
    preview) for</st> <st c="50016">Azure Logic Apps and it also lights up in Power
    Platform.</st> <st c="50075">We can expect that at some point, it will be announced
    as a generally available connector for Azure OpenAI.</st> <st c="50183">Azure
    OpenAI connector simplifies building connections between Azure OpenAI service
    and Power Platform solutions, allowing makers to utilize the chat completion operation
    against their Azure OpenAI GPT models.</st> <st c="50393">However, since the connector
    is in preview, we would recommend still building and using custom connectors that
    connect to</st> <st c="50515">Azure OpenAI:</st>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="49933">微软最近发布了一个高级版</st> **<st c="49977">Azure OpenAI 连接器</st>** <st
    c="49999">(预览版)，适用于</st> <st c="50016">Azure Logic Apps，并且它在 Power Platform 中也能使用。</st>
    <st c="50075">我们预计，在某个时刻，它会作为 Azure OpenAI 的正式发布连接器进行宣布。</st> <st c="50183">Azure
    OpenAI 连接器简化了 Azure OpenAI 服务与 Power Platform 解决方案之间的连接，允许开发者利用聊天补全操作与他们的 Azure
    OpenAI GPT 模型交互。</st> <st c="50393">然而，由于该连接器仍处于预览阶段，我们建议仍然构建并使用连接到</st> <st c="50515">Azure
    OpenAI 的自定义连接器：</st>
- en: '![](img/B22208_12_9.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_9.jpg)'
- en: <st c="50813">Figure 12.9 – Creating connections to Azure OpenAI</st>
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50813">图 12.9 – 创建与 Azure OpenAI 的连接</st>
- en: <st c="50863">Once the connector is announced and becomes generally available,
    we can use it in the same way as any other connector, as we have seen with AI
    Builder in the</st> <st c="51022">previous example.</st>
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50863">一旦连接器正式发布并广泛可用，我们可以像使用任何其他连接器一样使用它，正如我们在</st> <st c="51022">前面的例子中所看到的。</st>
- en: <st c="51039">It is also good to</st> <st c="51059">remember</st> <st c="51067">the
    possibility of using</st> **<st c="51093">connection references</st>** <st c="51114">in
    our</st> <st c="51122">solutions, as mentioned in</st> [*<st c="51149">Chapter
    10</st>*](B22208_10.xhtml#_idTextAnchor172)<st c="51159">. Using the deployment
    settings file (as seen in the following snippet) allows us to move our solution
    more effectively</st> <st c="51279">between environments:</st>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="51039">此外，</st> <st c="51059">记得</st> <st c="51067">使用</st> **<st c="51093">连接引用</st>**
    <st c="51114">在我们的</st> <st c="51122">解决方案中，如</st> [*<st c="51149">第10章</st>*](B22208_10.xhtml#_idTextAnchor172)<st
    c="51159">中所提到的那样。通过使用部署设置文件（如下片段所示），可以更有效地将我们的解决方案在环境之间迁移：</st>
- en: '[PRE1]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="51504">With that, we have seen how easy it is to build AI models and
    plug them into existing business solutions in order to improve our business processes.</st>
    <st c="51654">Using AI Builder or even Azure OpenAI can support many</st> <st
    c="51709">business processes:</st>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="51504">通过这一点，我们已经看到，构建 AI 模型并将其集成到现有的商业解决方案中以改善我们的业务流程是多么容易。</st> <st
    c="51654">使用 AI Builder 或者甚至是 Azure OpenAI 可以支持许多</st> <st c="51709">业务流程：</st>
- en: <st c="51728">Automating expense reports by extracting information from attached
    invoices</st> <st c="51805">and documents</st>
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="51728">通过提取附带发票</st> <st c="51805">和文档中的信息自动生成费用报告</st>
- en: <st c="51818">Extracting sentiment from the product reviews to respond to</st>
    <st c="51879">them accordingly</st>
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="51818">从产品评论中提取情感，以便做出相应的</st> <st c="51879">回应</st>
- en: <st c="51895">Writing replies to</st> <st c="51915">customer complaints</st>
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="51895">回复</st> <st c="51915">客户投诉</st>
- en: <st c="51934">Summarizing the content</st> <st c="51959">of meetings</st>
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="51934">总结会议内容</st> <st c="51959">要点</st>
- en: <st c="51970">Building transcripts of customer calls with</st> <st c="52015">speech-to-text
    operations</st>
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="51970">利用语音转文本操作构建客户电话的文字记录</st>
- en: <st c="52040">Translating documents to</st> <st c="52066">various languages</st>
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="52040">将文档翻译成</st> <st c="52066">各种语言</st>
- en: <st c="52083">Identifying</st> <st c="52096">fraudulent transactions</st>
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="52083">识别</st> <st c="52096">欺诈交易</st>
- en: <st c="52119">We will now switch gears</st> <st c="52145">and</st> <st c="52149">move
    from the specifics of AI Builder and Azure Open AI toward custom copilots or virtual
    AI assistants and how they can support our</st> <st c="52282">DevOps process.</st>
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52119">现在我们将切换话题</st> <st c="52145">，</st> <st c="52149">从 AI Builder
    和 Azure Open AI 的具体内容转向自定义 Copilot 或虚拟 AI 助手，以及它们如何支持我们的</st> <st c="52282">DevOps
    流程。</st>
- en: <st c="52297">ChatOps and Copilot Studio</st>
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="52297">ChatOps 和 Copilot Studio</st>
- en: <st c="52324">We have already looked into various copilots that are embedded
    in the product.</st> <st c="52404">Now it is time to look at how we can create
    a custom copilot.</st> <st c="52466">This section will focus on a tool that enables
    us to build custom</st> <st c="52532">copilots:</st> **<st c="52542">Copilot Studio</st>**<st
    c="52556">. From there, we will learn</st> <st c="52584">about</st> **<st c="52590">ChatOps</st>**
    <st c="52597">and, through an example, look at how we can use Copilot Studio to
    build an assistant that will help us with implementing ChatOps practice.</st>
    <st c="52737">We will also look at PAC CLI commands that we can use to support
    ALM for</st> <st c="52810">Copilot Studio.</st>
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52324">我们已经查看了嵌入产品中的各种副驾驶。</st> <st c="52404">现在是时候看看我们如何创建一个自定义副驾驶了。</st>
    <st c="52466">本节将重点介绍一个工具，帮助我们构建自定义副驾驶：</st> **<st c="52542">Copilot Studio</st>**<st
    c="52556">。从这里，我们将学习</st> <st c="52584">关于</st> **<st c="52590">ChatOps</st>**
    <st c="52597">的内容，并通过一个示例，看看如何利用Copilot Studio构建一个帮助我们实现ChatOps实践的助手。</st> <st
    c="52737">我们还将查看可以支持ALM的PAC CLI命令，用于</st> <st c="52810">Copilot Studio。</st>
- en: <st c="52825">A closer look at Copilot Studio</st>
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="52825">深入了解Copilot Studio</st>
- en: <st c="52857">We briefly introduced</st> <st c="52880">Copilot Studio at the
    beginning of the book.</st> <st c="52925">Let us refresh what it is.</st> <st
    c="52952">Copilot Studio is a low-code tool for managing custom copilots.</st>
    <st c="53016">It has evolved from a product, previously known</st> <st c="53064">as</st>
    **<st c="53067">Power Virtual Agents</st>** <st c="53087">(</st>**<st c="53089">PVA</st>**<st
    c="53092">), that was used to build chatbots.</st> <st c="53129">With the introduction
    of generative AI and the emergence of copilots, Microsoft expanded the functional
    capabilities of PVA and renamed the product to Copilot Studio.</st> <st c="53296">This
    change resonates well, considering that this tool is not only for building chatbots
    but also a product that can extend existing copilots with additional custom capabilities.</st>
    <st c="53475">Copilot Studio now allows anyone to build custom copilots with generative</st>
    <st c="53549">AI capabilities.</st>
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52857">我们在本书的开头简要介绍了</st> <st c="52880">Copilot Studio。</st> <st c="52925">让我们回顾一下它是什么。</st>
    <st c="52952">Copilot Studio是一个低代码工具，用于管理自定义副驾驶。</st> <st c="53016">它源自以前称为</st>
    <st c="53064">**<st c="53067">Power Virtual Agents</st>**</st> <st c="53087">（**<st
    c="53089">PVA</st>**<st c="53092">）的产品，该产品用于构建聊天机器人。</st> <st c="53129">随着生成式AI的引入以及副驾驶的出现，微软扩展了PVA的功能，并将产品更名为Copilot
    Studio。</st> <st c="53296">这一变化恰到好处，因为这个工具不仅用于构建聊天机器人，还可以扩展现有的副驾驶，加入更多的自定义功能。</st>
    <st c="53475">Copilot Studio现在允许任何人利用生成式AI能力构建自定义副驾驶。</st>
- en: <st c="53565">Custom copilots act as AI assistants that can handle different
    kinds of requests, from performing specific operations that are supported by business
    process to simply answering questions utilizing the GPT model that is grounded
    around the business data.</st> <st c="53820">Due to their generative AI capabilities,
    they are more than just chatbots, although we often refer to them as bots.</st>
    <st c="53936">Organizations can build different internal or external bots that
    will support internal teams, work with customers, help drive internal processes,
    and more.</st> <st c="54092">Given the fact that it is a low-code tool, it enables
    organizations’ rapid development of copilots that meet business requirements and
    contribute</st> <st c="54238">to ROI.</st>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="53565">自定义副驾驶充当AI助手，可以处理各种请求，从执行由业务流程支持的特定操作，到仅仅使用基于业务数据的GPT模型回答问题。</st>
    <st c="53820">由于其生成式AI能力，它们不仅仅是聊天机器人，尽管我们通常称它们为机器人。</st> <st c="53936">组织可以构建不同的内部或外部机器人，支持内部团队，与客户合作，帮助推动内部流程，等等。</st>
    <st c="54092">考虑到它是一个低代码工具，它使得组织能够快速开发符合业务需求并有助于提高投资回报率（ROI）的副驾驶。</st> <st c="54238">。</st>
- en: <st c="54245">Copilot Studio comes with a set of predefined and system topics.</st>
    <st c="54311">It also allows us to create our own custom</st> <st c="54354">topics.</st>
    <st c="54362">Topics</st> <st c="54368">are a fundamental building block of copilot.</st>
    <st c="54414">They define a specific part of the conversation between a user and
    a copilot, allowing natural interaction and communication.</st> <st c="54540">Each
    topic includes a trigger, which could be represented as a set of trigger phrases
    and a set of conversation nodes.</st> <st c="54659">These elements together define
    the conversational path that a topic can follow.</st> <st c="54739">Nodes could
    represent a message or a question that the bot will place to a user.</st> <st
    c="54820">Nodes can run an action such as triggering a Power Automate workflow
    or utilizing any of the connectors available in Power Platform.</st> <st c="54953">They
    could also involve topic management capabilities, such as setting up variables,
    checking the conditions of certain values, calling other topics, and more.</st>
    <st c="55113">Building topics allows us to have complete control over the conversation
    between the bot and</st> <st c="55206">the user.</st>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54245">Copilot Studio 提供了一套预定义的系统话题。</st> <st c="54311">它还允许我们创建自己的自定义</st>
    <st c="54354">话题。</st> <st c="54362">话题</st> <st c="54368">是 Copilot 的基础构建块。</st>
    <st c="54414">它们定义了用户与 Copilot 之间对话的特定部分，允许自然的互动与交流。</st> <st c="54540">每个话题包括一个触发器，触发器可以表示为一组触发短语和一组对话节点。</st>
    <st c="54659">这些元素共同定义了话题可以遵循的对话路径。</st> <st c="54739">节点可以表示一个消息或一个问题，机器人将向用户提出该问题。</st>
    <st c="54820">节点可以执行一个动作，例如触发 Power Automate 工作流或利用 Power Platform 中的任何连接器。</st>
    <st c="54953">它们还可以涉及话题管理功能，例如设置变量、检查某些值的条件、调用其他话题等。</st> <st c="55113">创建话题使我们能够完全控制机器人和</st>
    <st c="55206">用户之间的对话。</st>
- en: '![](img/B22208_12_10.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_10.jpg)'
- en: <st c="56164">Figure 12.10 – The Copilot Studio topic authoring experience</st>
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56164">图 12.10 – Copilot Studio 话题创建体验</st>
- en: <st c="56224">From a generative AI</st> <st c="56246">perspective, Copilot Studio
    allows organizations to enhance user productivity and improve conversation flow
    by enabling generative answers and</st> <st c="56389">generative actions.</st>
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56224">从生成式 AI</st> <st c="56246">的角度来看，Copilot Studio 允许组织通过启用生成式答案和</st>
    <st c="56389">生成式动作</st> <st c="56389">来提升用户生产力并改善对话流程。</st>
- en: <st c="56408">Generative answers</st> <st c="56427">is a functionality whereby
    a GPT uses different knowledge sources, such as public websites, internal SharePoint
    sites, various documents, custom data sources, and more, to generate answers to
    questions.</st> <st c="56631">When the generative answers functionality is enabled,
    we can add GPT-powered answers to any custom topic as well as use a fallback system
    topic that triggers whenever no other topics can be matched.</st> <st c="56830">Copilot
    Studio also allows integration with the Azure OpenAI model instead of using the
    embedded GPT model inside Copilot Studio.</st> <st c="56960">In this case, the
    user’s question is sent to Azure OpenAI, where an answer is prepared and sent
    back to Copilot Studio, which then presents this answer to</st> <st c="57115">the
    user.</st>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56408">生成式答案</st> <st c="56427">是一项功能，GPT 使用不同的知识源，如公共网站、内部 SharePoint
    网站、各种文档、自定义数据源等，生成对问题的回答。</st> <st c="56631">当启用生成式答案功能时，我们可以将 GPT 驱动的答案添加到任何自定义话题，并使用一个回退系统话题，在没有其他话题匹配时触发。</st>
    <st c="56830">Copilot Studio 还允许集成 Azure OpenAI 模型，而不是使用嵌入在 Copilot Studio 中的
    GPT 模型。</st> <st c="56960">在这种情况下，用户的问题会被发送到 Azure OpenAI，在那里生成一个答案并返回给 Copilot
    Studio，后者再将该答案展示给</st> <st c="57115">用户。</st>
- en: '**<st c="57124">Generative mode</st>**<st c="57140">, also</st> <st c="57146">previously
    known as</st> **<st c="57167">generative actions</st>**<st c="57185">, allows
    us to build highly dynamic chatbots by connecting various actions (connector actions,
    Power Automate flows, AI Builder prompts, or Bot Framework skills) with our bot,
    together with all custom and system topics, and allow generative AI to determine
    on its own how to respond to a user request by picking the most appropriate action
    or topic to continue</st> <st c="57546">the conversation.</st>'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="57124">生成模式</st>**<st c="57140">，也被称为</st> **<st c="57167">生成式动作</st>**<st
    c="57185">，允许我们通过将各种动作（连接器动作、Power Automate 流程、AI Builder 提示或 Bot Framework 技能）与我们的机器人连接，结合所有自定义和系统话题，并让生成式
    AI 自动决定如何响应用户请求，选择最合适的动作或话题来继续</st> <st c="57546">对话。</st>'
- en: <st c="57563">After we have developed a bot, we can test its functionalities
    directly in Copilot Studio.</st> <st c="57655">Once we are satisfied with the
    work, we can expose custom copilots through different channels.</st> <st c="57750">They
    can be published via Microsoft Teams or custom websites.</st> <st c="57812">We
    can build our own custom application that will implement chat capabilities with
    a custom copilot, publish this on internal SharePoint, or deploy it to various
    other communication channels, such as Facebook Messenger, Twilio, Slack, Direct
    Line API,</st> <st c="58064">and more.</st>
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57563">在开发完机器人之后，我们可以直接在 Copilot Studio 中测试其功能。</st> <st c="57655">一旦我们对其工作结果满意，就可以通过不同的渠道公开自定义的
    Copilot。</st> <st c="57750">它们可以通过 Microsoft Teams 或自定义网站发布。</st> <st c="57812">我们可以构建自己的自定义应用，结合自定义
    Copilot 实现聊天功能，并将其发布到内部 SharePoint 或部署到其他各种沟通渠道，如 Facebook Messenger、Twilio、Slack、Direct
    Line API</st> <st c="58064">等。</st>
- en: <st c="58073">Let’s continue by</st> <st c="58092">learning what ChatOps is
    and then taking a look at how to implement a ChatOps process using</st> <st c="58184">Copilot
    Studio.</st>
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="58073">接下来，我们继续</st> <st c="58092">了解什么是 ChatOps，然后看看如何使用</st> <st c="58184">Copilot
    Studio 实现 ChatOps 过程。</st>
- en: <st c="58199">What is ChatOps</st>
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="58199">什么是 ChatOps</st>
- en: <st c="58215">The term ChatOps is</st> <st c="58236">not new; it’s been with
    us for more than 10 years and was introduced by GitHub.</st> <st c="58316">ChatOps
    has somehow dissolved in today’s DevOps community, as people are not talking about
    it that much.</st> <st c="58421">However, we can see that many DevOps teams have
    implemented parts of ChatOps practices in communication platforms such as Teams
    or Slack.</st> <st c="58559">We can see that even though DevOps communities do
    not talk that much about ChatOps, DevOps engineers do recognize the benefits of
    ChatOps and might have already implemented some ChatOps practices inside their
    team channels without even knowing that these are</st> <st c="58818">ChatOps practices.</st>
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="58215">ChatOps 这个术语</st> <st c="58236">并不新颖；它已经存在超过 10 年，由 GitHub 引入。</st>
    <st c="58316">ChatOps 在今天的 DevOps 社区中有所消散，因为人们不再频繁讨论它。</st> <st c="58421">然而，我们可以看到，许多
    DevOps 团队已经在 Teams 或 Slack 等沟通平台上实现了部分 ChatOps 实践。</st> <st c="58559">尽管 DevOps
    社区没有太多讨论 ChatOps，但我们可以看到 DevOps 工程师确实认识到 ChatOps 的好处，并且可能已经在团队频道中实现了一些 ChatOps
    实践，甚至他们自己都未意识到这些实际上是</st> <st c="58818">ChatOps 实践。</st>
- en: <st c="58836">ChatOps is a practice also known as a</st> *<st c="58875">conversation-driven
    DevOps</st>*<st c="58901">. It uses a chatbot and a communication platform, such
    as Microsoft Teams or Slack, to support developers and IT operations teams by
    automating different DevOps-related tasks.</st> <st c="59077">This would include
    tasks such as creating new issues or work items, provisioning infrastructure,
    creating new a branch in a repository, approving pull requests, deploying applications,</st>
    <st c="59262">and more.</st>
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="58836">ChatOps 是一种也被称为</st> *<st c="58875">以对话为驱动的 DevOps</st>*<st c="58901">的实践。它利用聊天机器人和沟通平台，如
    Microsoft Teams 或 Slack，来通过自动化各种与 DevOps 相关的任务，支持开发人员和 IT 运维团队。</st> <st c="59077">这些任务包括创建新的问题或工作项、提供基础设施、在代码库中创建新分支、批准拉取请求、部署应用程序、</st>
    <st c="59262">等等。</st>
- en: <st c="59271">There are many benefits of ChatOps.</st> <st c="59308">ChatOps
    can increase and improve collaboration and communication between teams, which
    also allows better knowledge sharing and visibility into the DevOps process and
    project.</st> <st c="59483">It allows certain processes to be automated and provided
    to members through a unified communication platform.</st> <st c="59593">As we
    are automating tasks, the operations can be done faster.</st> <st c="59656">Such
    an approach also helps to reduce any potential human error during the process.</st>
    <st c="59740">Team members also have an overview of the history of operations
    that were performed by team members.</st> <st c="59841">It promotes increased
    sharing within the team so that team members can help each other.</st> <st c="59929">Just
    as with DevOps, it is not all about tools and processes here but also about people</st>
    <st c="60017">and culture.</st>
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="59271">ChatOps 有许多好处。</st> <st c="59308">ChatOps 可以增加和改善团队之间的协作和沟通，这也有助于更好的知识共享和对
    DevOps 过程与项目的可视化。</st> <st c="59483">它允许某些过程被自动化，并通过统一的沟通平台提供给成员。</st> <st c="59593">随着我们自动化任务，操作可以更快地完成。</st>
    <st c="59656">这种方法也有助于减少过程中的潜在人为错误。</st> <st c="59740">团队成员还可以查看其他成员执行的操作历史。</st>
    <st c="59841">它促进了团队内部的分享，团队成员可以互相帮助。</st> <st c="59929">就像 DevOps 一样，这里不仅仅是工具和过程，更关乎人</st>
    <st c="60017">和文化。</st>
- en: <st c="60029">ChatOps can</st> <st c="60041">be paired with chatbots to help
    deliver automation capabilities.</st> <st c="60107">With the recent announcements
    around custom copilots with agent capabilities in Copilot Studio, we believe that
    the frequency of cases of using chatbots and custom copilots to support DevOps
    processes and IT operations can</st> <st c="60330">only increase.</st>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60029">ChatOps 可以</st> <st c="60041">与聊天机器人结合，帮助提供自动化功能。</st> <st c="60107">随着近期有关
    Copilot Studio 中具备代理能力的自定义 Copilot 的宣布，我们相信，使用聊天机器人和自定义 Copilot 支持 DevOps 过程和
    IT 运维的案例频率</st> <st c="60330">只会增加。</st>
- en: <st c="60344">A</st> *<st c="60347">custom copilot with agent capabilities</st>*
    <st c="60385">is a new feature in Copilot Studio (it was announced during the
    Microsoft Build 2024 conference and is not yet available) that enables makers
    to create copilots that are triggered by events rather than just user conversation.</st>
    <st c="60612">They can support long-running and complex processes with less human
    interaction.</st> <st c="60693">We could create a custom copilot that would respond
    to a given event in Azure DevOps or GitHub Enterprise and understand the outcomes
    of the event.</st> <st c="60841">An example would be that if a new task has been
    assigned to the engineer, the custom copilot could open a feature branch for that
    engineer and notify the engineer about the planned work.</st> <st c="61028">It
    might also execute a series of actions when a build fails.</st> <st c="61090">Both
    of these examples could be handled completely by utilizing generative AI capabilities
    and registered actions in</st> <st c="61207">Copilot Studio.</st>
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="60344">一个</st> *<st c="60347">具有代理能力的自定义 Copilot</st>* <st c="60385">是
    Copilot Studio 中的一项新功能（该功能在 Microsoft Build 2024 大会期间宣布，目前尚不可用），它使创作者能够创建由事件触发的
    Copilot，而不仅仅是用户对话。</st> <st c="60612">它们可以支持长时间运行和复杂的过程，减少人工干预。</st> <st c="60693">我们可以创建一个自定义
    Copilot，当 Azure DevOps 或 GitHub Enterprise 中发生特定事件时，能够响应该事件并理解事件的结果。</st> <st
    c="60841">例如，如果新任务分配给了工程师，自定义 Copilot 可以为该工程师创建一个特性分支，并通知工程师有关计划工作的情况。</st> <st
    c="61028">当构建失败时，它还可以执行一系列操作。</st> <st c="61090">这两个例子都可以完全通过利用生成式 AI 能力和在</st>
    <st c="61207">Copilot Studio</st> 中注册的操作来处理。</st>
- en: <st c="61222">Let’s expand what could be other use cases for support DevOps
    processes with the capabilities accessible in Copilot Studio</st> <st c="61346">already
    today.</st>
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="61222">让我们扩展一下，探讨支持 DevOps 过程的其他可能用例，利用今天在 Copilot Studio 中可访问的能力。</st>
    <st c="61346">这些能力已经可以使用了。</st>
- en: <st c="61360">Use cases for ChatOps</st>
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="61360">ChatOps 的使用案例</st>
- en: <st c="61382">We can start building</st> <st c="61404">our ChatOps practices
    by covering simple yet</st> <st c="61450">relevant cases.</st>
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="61382">我们可以开始构建</st> <st c="61404">我们的 ChatOps 实践，涵盖简单但</st> <st c="61450">相关的案例。</st>
- en: <st c="61465">The first set of use cases focuses on informing team members about
    a specific activity.</st> <st c="61554">Using a communication platform, such as
    Microsoft Teams, we can start bringing in information from our version control
    system and project management tools.</st> <st c="61710">While DevOps team members
    work on their projects, they might sometimes miss some important changes to the
    project.</st> <st c="61825">This is why we can bring information to their team
    chat room and provide them with curated content, such as information about new
    pull requests, failed pipeline executions, the creation of tasks or new bugs,
    and more.</st> <st c="62043">We should also consider implementing a mechanism
    of notifying team members about</st> <st c="62124">any incident.</st>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="61465">第一组用例侧重于向团队成员通知特定活动。</st> <st c="61554">通过使用通信平台，如 Microsoft Teams，我们可以开始从我们的版本控制系统和项目管理工具中引入信息。</st>
    <st c="61710">当 DevOps 团队成员在进行项目工作时，他们有时可能会错过项目中一些重要的变更。</st> <st c="61825">这就是为什么我们可以将信息带入他们的团队聊天室，并提供筛选过的内容，如有关新拉取请求、失败的流水线执行、任务或新错误创建的信息等。</st>
    <st c="62043">我们还应考虑实施一种机制，通知团队成员有关</st> <st c="62124">任何事件的发生。</st>
- en: <st c="62137">When providing the information to the team chat channel, we should
    make sure that we do not overload them with all the information that is available.</st>
    <st c="62288">We should filter the content and post what is relevant, which is
    something that teams can decide to set.</st> <st c="62393">However, these types
    of activities are informational in nature, informing of an activity.</st> <st
    c="62483">Whenever we would like to perform an action based on this information
    or based on the task, we should look at the other set of activities that can be
    delivered through a bot, or in our case, a</st> <st c="62676">custom copilot.</st>
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="62137">在向团队聊天频道提供信息时，我们应该确保不会让他们接收到过多的所有信息。</st> <st c="62288">我们应当筛选内容，发布相关的信息，这是团队可以决定设置的事情。</st>
    <st c="62393">然而，这些活动本质上是信息性的，旨在告知某项活动。</st> <st c="62483">每当我们想要基于这些信息或任务执行某个操作时，我们应该查看可以通过机器人或在我们案例中的</st>
    <st c="62676">自定义副驾驶</st>来提供的其他活动。</st>
- en: <st c="62691">Here in the second part of activities that we can implement through
    ChatOps, we can place any activities that teams would like to automate.</st> <st
    c="62832">Since custom copilots, through Copilot Studio, can integrate with many
    first-party and third-party tools through connectors, as well as custom connectors,
    the options are limitless.</st> <st c="63014">We can call a connector or an API
    to obtain information that is relevant to the project, such as getting all bugs
    for the project or allowing team members to ask general questions about how to
    do some activities.</st> <st c="63227">We can integrate with tools such as Azure
    DevOps or GitHub to create new issues or bug work items, or we can call Terraform
    or Power Automate flow to provision a new environment through a process that we
    have already discussed in the previous chapter.</st> <st c="63479">We can set
    activities such as pull request approvals and more.</st> <st c="63542">As we can
    see, the options</st> <st c="63569">are</st> <st c="63573">almost limitless.</st>
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="62691">在通过 ChatOps 实现的活动第二部分中，我们可以放置任何团队希望自动化的活动。</st> <st c="62832">由于自定义副驾驶可以通过
    Copilot Studio 与许多第一方和第三方工具进行连接，借助连接器以及自定义连接器，选项几乎是无限的。</st> <st c="63014">我们可以调用连接器或
    API 获取与项目相关的信息，例如获取项目中的所有 bug，或允许团队成员询问如何执行某些活动的常规问题。</st> <st c="63227">我们可以与
    Azure DevOps 或 GitHub 等工具集成，以创建新的问题或 bug 工作项，或者我们可以调用 Terraform 或 Power Automate
    流程，通过我们在前一章中讨论过的流程来配置新的环境。</st> <st c="63479">我们可以设置诸如拉取请求审批等活动。</st> <st c="63542">正如我们所见，选项</st>
    <st c="63569">几乎</st> <st c="63573">是无限的。</st>
- en: <st c="63590">Authorization before the operation</st>
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="63590">操作前的授权</st>
- en: <st c="63625">Chatbots can be shared among all team members of a given project.</st>
    <st c="63692">Using Microsoft Teams and Copilot Studio allows us to utilize Microsoft
    Entra ID as an identity management system.</st> <st c="63807">Connectors and actions
    that we register should authorize users in order to verify whether those users
    have permission to perform a task before launching it.</st> <st c="63964">This
    prevents them from performing some</st> <st c="64004">sensitive actions.</st>
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="63625">聊天机器人可以在给定项目的所有团队成员之间共享。</st> <st c="63692">使用Microsoft Teams和Copilot
    Studio，我们可以利用Microsoft Entra ID作为身份管理系统。</st> <st c="63807">我们注册的连接器和操作应该授权用户，以验证这些用户是否有权限在启动任务之前执行操作。</st>
    <st c="63964">这可以防止他们执行一些</st> <st c="64004">敏感操作。</st>
- en: <st c="64022">Integrating Microsoft Teams with GitHub and Azure DevOps</st>
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="64022">将Microsoft Teams与GitHub和Azure DevOps集成</st>
- en: <st c="64079">Let us take a</st> <st c="64094">look at how we can integrate</st>
    <st c="64123">Microsoft Teams with Azure DevOps</st> <st c="64156">or</st> <st
    c="64160">GitHub so that the changes in our project are reflected in the common
    team channel.</st> <st c="64244">Both of these tools have native integrations
    with Microsoft Teams.</st> <st c="64311">In order to configure notifications from
    Azure DevOps or GitHub to Microsoft Teams, we need to install a connector in Microsoft
    Teams.</st> <st c="64446">In the Microsoft Teams team channel, we right-click
    on a channel and select</st> **<st c="64522">Manage channel</st>**<st c="64536">.
    When we are in channel settings, we can see the</st> **<st c="64586">Connectors</st>**
    <st c="64596">section, where we click</st> **<st c="64621">Edit</st>**<st c="64625">.
    This opens a new screen with all connectors for a specific channel.</st> <st c="64695">Here,
    we can use the search feature to find either Azure DevOps or GitHub Enterprise.</st>
    <st c="64781">We click on</st> **<st c="64793">Configure</st>** <st c="64802">and
    follow the process of setting up</st> <st c="64840">a connector.</st>
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="64079">让我们来看看如何将</st> <st c="64094">Microsoft Teams与Azure DevOps</st>
    <st c="64123">或</st> <st c="64156">GitHub进行集成，以便项目中的更改能反映在公共团队频道中。</st> <st c="64244">这两个工具都与Microsoft
    Teams有原生集成。</st> <st c="64311">为了将Azure DevOps或GitHub的通知配置到Microsoft Teams，我们需要在Microsoft
    Teams中安装一个连接器。</st> <st c="64446">在Microsoft Teams团队频道中，我们右键点击一个频道并选择</st> **<st
    c="64522">管理频道</st>**<st c="64536">。当进入频道设置时，我们可以看到</st> **<st c="64586">连接器</st>**
    <st c="64596">部分，点击</st> **<st c="64621">编辑</st>**<st c="64625">，这会打开一个新屏幕，显示特定频道的所有连接器。</st>
    <st c="64695">在这里，我们可以使用搜索功能找到Azure DevOps或GitHub Enterprise。</st> <st c="64781">点击</st>
    **<st c="64793">配置</st>** <st c="64802">并按照设置连接器的流程进行操作。</st>
- en: '<st c="64852">Currently, for GitHub Enterprise, only the following events are
    supported: issues, pull requests, push, and comments for all these categories.</st>
    <st c="64996">When configuring the GitHub connector, we are also provided with
    very detailed step-by-step guidance on how to configure</st> <st c="65117">the
    webhook:</st>'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="64852">目前，对于GitHub Enterprise，仅支持以下事件：问题、拉取请求、推送以及这些类别的评论。</st> <st c="64996">在配置GitHub连接器时，我们还将获得非常详细的逐步指导，帮助我们配置</st>
    <st c="65117">Webhook：</st>
- en: '![](img/B22208_12_11.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_11.jpg)'
- en: <st c="65370">Figure 12.11 – An example of a GitHub notification in Teams</st>
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="65370">图12.11 - GitHub通知在Teams中的示例</st>
- en: <st c="65429">Azure</st> <st c="65435">DevOps</st> <st c="65443">supports</st>
    <st c="65452">event</st> <st c="65458">notifications about completed builds, pushed
    code, and operations with pull request, releases, and work items.</st> <st c="65569">We
    also have more granular control for these event types, such as only receiving
    information when new work items of the</st> **<st c="65689">Bug</st>** <st c="65692">type
    have been added to the project.</st> <st c="65730">Once we add a connector, the
    wizard will guide us through the process and create service hook subscriptions
    in</st> <st c="65841">Azure DevOps:</st>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="65429">Azure</st> <st c="65435">DevOps</st> <st c="65443">支持</st> <st
    c="65452">有关已完成构建、推送代码和与拉取请求、发布及工作项相关操作的事件通知。</st> <st c="65569">我们还可以对这些事件类型进行更精细的控制，例如仅在项目中添加了新的**<st
    c="65689">Bug</st>** <st c="65692">类型工作项时接收信息。</st> <st c="65730">一旦添加连接器，向导将引导我们完成过程并在</st>
    <st c="65841">Azure DevOps</st> <st c="65841">中创建服务钩子订阅：</st>
- en: '![](img/B22208_12_12.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_12.jpg)'
- en: <st c="66217">Figure 12.12 – Creating service hook subscriptions through the
    connector for Azure DevOps</st>
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="66217">图12.12 - 通过Azure DevOps的连接器创建服务钩子订阅</st>
- en: <st c="66306">In addition to receiving notifications, Azure DevOps integrates
    with MS Teams by allowing us to add tabs to the channel.</st> <st c="66428">These
    tabs can display the Azure DevOps dashboard or</st> <st c="66480">Kanban</st>
    <st c="66488">board, which</st> <st c="66500">provides</st> <st c="66510">us with
    real-time information about the project’s current state.</st> <st c="66575">Team
    members now do not need to change the context and switch tools to get</st> <st
    c="66650">this information.</st>
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="66306">除了接收通知，Azure DevOps 还通过允许我们向频道添加标签来与 MS Teams 集成。</st> <st c="66428">这些标签可以显示
    Azure DevOps 仪表板或</st> <st c="66480">看板</st> <st c="66488">，提供项目当前状态的实时信息。</st>
    <st c="66500">这样，团队成员无需切换上下文和工具，就能获得</st> <st c="66510">这些信息。</st>
- en: <st c="66667">GitHub provides additional capabilities in regards to integration
    with Microsoft Teams.</st> <st c="66756">We can use</st> **<st c="66767">GitHub
    integration for Microsoft Teams</st>**<st c="66805">, which installs a chatbot
    in Microsoft Teams, through which we can also receive notifications about the
    project, open or close issues, comment on pull requests, and more.</st> <st c="66977">The
    installation link can be found</st> <st c="67012">at</st> [<st c="67015">https://teams.github.com/</st>](https://teams.github.com/)<st
    c="67040">.</st>
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="66667">GitHub 提供了与 Microsoft Teams 集成的额外功能。</st> <st c="66756">我们可以使用</st>
    **<st c="66767">GitHub 与 Microsoft Teams 的集成</st>**<st c="66805">，这会在 Microsoft
    Teams 中安装一个聊天机器人，我们也可以通过它接收项目通知、打开或关闭问题、评论拉取请求等。</st> <st c="66977">安装链接可以在</st>
    <st c="67012">以下找到：</st> [<st c="67015">https://teams.github.com/</st>](https://teams.github.com/)<st
    c="67040">。</st>
- en: '![](img/B22208_12_13.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_13.jpg)'
- en: <st c="67560">Figure 12.13 – GitHub and Microsoft Teams integrations through
    the chatbot</st>
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67560">图 12.13 – 通过聊天机器人集成 GitHub 和 Microsoft Teams</st>
- en: <st c="67634">GitHub’s bot already points us in the direction of chatbot-supported
    ChatOps practices.</st> <st c="67723">Let us look at how</st> <st c="67741">we</st>
    <st c="67745">can</st> <st c="67749">build</st> <st c="67754">our own custom copilot
    to support ChatOps with</st> <st c="67802">Copilot Studio.</st>
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67634">GitHub 的机器人已经引导我们进入了支持聊天机器人的 ChatOps 实践。</st> <st c="67723">让我们来看看</st>
    <st c="67741">如何</st> <st c="67745">构建</st> <st c="67749">我们自己的自定义 copilot，以支持
    ChatOps</st> <st c="67802">并使用 Copilot Studio。</st>
- en: <st c="67817">Building ChatOps for Power Platform with Copilot Studio</st>
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="67817">使用 Copilot Studio 为 Power Platform 构建 ChatOps</st>
- en: <st c="67873">We will proceed</st> <st c="67890">by creating a simple ChatOps
    chatbot with Copilot Studio to</st> <st c="67950">demonstrate how Copilot Studio
    can be used to support</st> <st c="68004">DevOps tasks.</st>
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="67873">我们将通过创建一个简单的 ChatOps 聊天机器人，并使用 Copilot Studio</st> <st c="67890">来演示如何利用
    Copilot Studio 支持</st> <st c="67950">DevOps 任务。</st>
- en: <st c="68017">We will head to Copilot Studio at</st> [<st c="68052">https://copilotstudio.microsoft.com/</st>](https://copilotstudio.microsoft.com/)
    <st c="68088">and click on</st> **<st c="68102">Create</st>** <st c="68108">|</st>
    **<st c="68111">New copilot</st>**<st c="68122">:</st>
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="68017">我们将前往 Copilot Studio，网址为</st> [<st c="68052">https://copilotstudio.microsoft.com/</st>](https://copilotstudio.microsoft.com/)
    <st c="68088">并点击</st> **<st c="68102">创建</st>** <st c="68108">|</st> **<st c="68111">新建
    copilot</st>**<st c="68122">：</st>
- en: '![](img/B22208_12_14.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_14.jpg)'
- en: <st c="68864">Figure 12.14 – Creating a new custom copilot</st>
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="68864">图 12.14 – 创建新的自定义 copilot</st>
- en: <st c="68908">If our environment is located in the United States region, we
    will be offered a conversational</st> <st c="69003">creation approach.</st> <st
    c="69023">However, we will click</st> **<st c="69046">Skip to configure</st>**<st
    c="69063">, fill in</st> <st c="69072">the</st> **<st c="69077">Name</st>** <st
    c="69081">and</st> **<st c="69086">Description</st>** <st c="69097">fields for
    our copilot, and click</st> **<st c="69132">Create</st>**<st c="69138">. This
    will provision our copilot with</st> <st c="69177">prebuilt topics.</st>
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="68908">如果我们的环境位于美国地区，我们将提供一个对话式</st> <st c="69003">创建方式。</st> <st c="69023">然而，我们将点击</st>
    **<st c="69046">跳过配置</st>**<st c="69063">，填写</st> <st c="69072">我们的</st> **<st
    c="69077">名称</st>** <st c="69081">和</st> **<st c="69086">描述</st>** <st c="69097">字段，点击</st>
    **<st c="69132">创建</st>**<st c="69138">。这将为我们的 copilot 配置</st> <st c="69177">预构建的主题。</st>
- en: <st c="69193">If we would like to enhance our copilot with generative answers
    that are grounded around our data, we can select the</st> **<st c="69311">Knowledge</st>**
    <st c="69320">tab on top, then click</st> **<st c="69344">Add knowledge</st>**<st
    c="69357">:</st>
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="69193">如果我们希望通过基于我们数据的生成式回答来增强我们的 copilot，可以选择顶部的</st> **<st c="69311">知识</st>**
    <st c="69320">标签，然后点击</st> **<st c="69344">添加知识</st>**<st c="69357">：</st>
- en: '![](img/B22208_12_15.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_15.jpg)'
- en: <st c="70070">Figure 12.15 – Adding knowledge to our copilot</st>
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="70070">图12.15 – 向我们的副驾驶添加知识</st>
- en: <st c="70116">Here, we will use the</st> **<st c="70139">Files</st>** <st c="70144">option</st>
    <st c="70151">to upload any file that contains relevant</st> <st c="70194">information
    that might be useful for our team.</st> <st c="70241">This could be some document
    with general guidance or project-specific documentation.</st> <st c="70326">We
    can upload a file by dragging and dropping it or by using the</st> **<st c="70391">click
    to browse</st>** <st c="70406">option.</st> <st c="70415">This enables our copilot
    to be able to answer questions about this document’s topic.</st> <st c="70500">It
    takes a few minutes for the document to be indexed and ready to use.</st> <st
    c="70572">The documents are stored in Dataverse</st> <st c="70610">file storage.</st>
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="70116">在这里，我们将使用</st> **<st c="70139">文件</st>** <st c="70144">选项</st>
    <st c="70151">上传任何包含相关</st> <st c="70194">信息的文件，这些信息可能对我们的团队有用。</st> <st c="70241">这可以是包含一般指导或项目特定文档的文件。</st>
    <st c="70326">我们可以通过拖放文件或使用</st> **<st c="70391">点击浏览</st>** <st c="70406">选项来上传文件。</st>
    <st c="70415">这样，我们的副驾驶就能回答关于该文档主题的问题。</st> <st c="70500">文档索引并准备好使用需要几分钟时间。</st>
    <st c="70572">这些文档存储在Dataverse</st> <st c="70610">文件存储中。</st>
- en: <st c="70623">Once ready, we can already test this capability using the</st>
    **<st c="70682">Test your</st>** **<st c="70692">copilot</st>** <st c="70699">option.</st>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="70623">一旦准备好，我们就可以使用</st> **<st c="70682">测试你的</st>** **<st c="70692">副驾驶</st>**
    <st c="70699">选项来测试这个功能。</st>
- en: <st c="70707">In the copilot</st> **<st c="70723">Overview</st>** <st c="70731">section,
    go to</st> **<st c="70747">Knowledge</st>** <st c="70756">|</st> **<st c="70759">Allow
    the AI to use its own general knowledge (preview)</st>**<st c="70814">, where
    we can enable or disable general knowledge that the GPT model has.</st> <st c="70889">This
    is the data on which GPT has been trained.</st> <st c="70937">For now, Copilot
    Studio still uses GPT-3.5-Turbo, with a cutoff date of September 2021\.</st> <st
    c="71025">We recommend disabling it for</st> <st c="71055">this case.</st>
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="70707">在副驾驶</st> **<st c="70723">概览</st>** <st c="70731">部分，进入</st> **<st
    c="70747">知识</st>** <st c="70756">|</st> **<st c="70759">允许AI使用其通用知识（预览）</st>**<st
    c="70814">，我们可以启用或禁用GPT模型所拥有的通用知识。</st> <st c="70889">这些是GPT被训练时使用的数据。</st> <st
    c="70937">目前，副驾驶工作室仍使用GPT-3.5-Turbo，截止日期为2021年9月。</st> <st c="71025">我们建议在这种情况下禁用它。</st>
- en: <st c="71065">The next step is to enable some action in our copilot.</st> <st
    c="71121">Whichever scenario we would like to enable, we either need to create
    a topic or add an action to our copilot.</st> <st c="71231">Let’s start with</st>
    <st c="71248">topics first.</st>
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="71065">下一步是启用副驾驶中的某个操作。</st> <st c="71121">无论我们希望启用什么场景，我们都需要创建一个主题或向副驾驶添加一个操作。</st>
    <st c="71231">我们先从</st> <st c="71248">主题开始。</st>
- en: <st c="71261">We select</st> **<st c="71272">Topics</st>** <st c="71278">from
    the top menu.</st> <st c="71298">There, we can see that we have some prebuilt
    topics named</st> **<st c="71356">Lesson 1</st>**<st c="71364">,</st> **<st c="71366">Lesson
    2</st>**<st c="71374">, and</st> **<st c="71380">Lesson 3</st>**<st c="71388">.
    These are prebuilt topics that we do not need, so we can delete or disable them.</st>
    <st c="71471">We can do this by selecting the three dots next to each of them
    and switching the status to disabled or by</st> <st c="71578">clicking</st> **<st
    c="71587">Delete</st>**<st c="71593">.</st>
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="71261">我们从顶部菜单中选择</st> **<st c="71272">主题</st>** <st c="71278">选项。</st>
    <st c="71298">在这里，我们可以看到一些预设的主题，分别命名为</st> **<st c="71356">第一课</st>**<st c="71364">，</st>
    **<st c="71366">第二课</st>**<st c="71374">，和</st> **<st c="71380">第三课</st>**<st
    c="71388">。这些是我们不需要的预设主题，因此我们可以删除或禁用它们。</st> <st c="71471">我们可以通过点击每个主题旁边的三个点，将状态切换为禁用，或者直接</st>
    <st c="71578">点击</st> **<st c="71587">删除</st>**<st c="71593">。</st>
- en: <st c="71594">We will create a new topic by clicking</st> **<st c="71634">Add
    a topic</st>** <st c="71645">|</st> **<st c="71648">From blank</st>**<st c="71658">.
    We could also use Copilot in Copilot Studio and describe what kind of topic we
    need and let Copilot come up with a rough proposal of the conversation flow using
    the provided description.</st> <st c="71847">We are now inside the designer, where
    we can author a topic.</st> <st c="71908">We can specify a few phrases that will
    trigger this topic by clicking</st> **<st c="71978">Edit</st>** <st c="71982">inside</st>
    **<st c="71990">Phrases</st>** <st c="71997">in the</st> **<st c="72005">Trigger</st>**
    <st c="72012">node.</st> <st c="72019">Phrases refer to user utterances, or phrases,
    that will trigger</st> <st c="72083">this topic.</st>
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="71594">我们将通过点击</st> **<st c="71634">添加话题</st>** <st c="71645">|</st>
    **<st c="71648">从空白开始</st>**<st c="71658">来创建一个新话题。我们也可以在 Copilot Studio 中使用 Copilot，描述我们需要什么样的话题，并让
    Copilot 根据提供的描述提出一个大致的对话流程。</st> <st c="71847">现在我们进入了设计器，可以在这里创建话题。</st> <st
    c="71908">我们可以通过点击</st> **<st c="71978">编辑</st>** <st c="71982">在</st> **<st c="71990">短语</st>**
    <st c="71997">的</st> **<st c="72005">触发器</st>** <st c="72012">节点中指定几个短语，这些短语将触发</st>
    <st c="72083">这个话题。</st>
- en: <st c="72094">Once phrases have been</st> <st c="72118">added, we can continue
    by selecting Add node, which</st> <st c="72169">is represented with a plus (</st>**<st
    c="72198">+</st>**<st c="72200">) sign.</st> <st c="72208">Here, we can add conversational
    nodes that control the conversation.</st> <st c="72277">For this example, we will
    go to</st> **<st c="72309">Call an action</st>** <st c="72323">|</st> **<st c="72326">Connector
    (preview)</st>** <st c="72345">and search for</st> **<st c="72361">Azure DevOps</st>**<st
    c="72373">. We can select any action that we would like to add to our copilot
    to support ChatOps.</st> <st c="72461">For example, we will select</st> **<st
    c="72489">Create a work item</st>**<st c="72507">. This adds a connector action
    with all inputs that we have to configure in order for this connector action to</st>
    <st c="72618">work properly:</st>
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="72094">一旦短语被</st> <st c="72118">添加后，我们可以继续选择添加节点，点击</st> **<st c="72198">+</st>**<st
    c="72200">号。</st> <st c="72208">在这里，我们可以添加控制对话的对话节点。</st> <st c="72277">在这个示例中，我们将前往</st>
    **<st c="72309">调用一个动作</st>** <st c="72323">|</st> **<st c="72326">连接器（预览）</st>**
    <st c="72345">并搜索</st> **<st c="72361">Azure DevOps</st>**<st c="72373">。我们可以选择任何我们想要添加到我们的
    Copilot 中，以支持 ChatOps 的动作。</st> <st c="72461">例如，我们将选择</st> **<st c="72489">创建工作项</st>**<st
    c="72507">。这会添加一个连接器动作，并包含我们需要配置的所有输入，以便此连接器动作能够</st> <st c="72618">正常工作：</st>
- en: '![](img/B22208_12_16.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22208_12_16.jpg)'
- en: <st c="73355">Figure 12.16 – Adding an action to a topic</st>
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="73355">图 12.16 – 向话题添加动作</st>
- en: <st c="73397">Instead of manually providing</st> <st c="73427">the values, we
    can create a conversation path</st> <st c="73473">before this connector action
    with a set of questions, where we will be asking user questions and storing responses
    to the variables that will be used as parameters for the connector action.</st>
    <st c="73664">An alternative to this is to utilize generative mode in Copilot
    Studio, register connector actions, and let generative AI figure out which values
    are missing from the context of the user’s question.</st> <st c="73863">Generative
    AI can then provide a set of questions to the user to retrieve missing values
    for the connector action.</st> <st c="73978">Let us use generative mode in Copilot
    Studio and add generative actions.</st> <st c="74051">First, we will need to enable
    generative mode.</st> <st c="74098">We need to go to</st> **<st c="74115">Settings</st>**
    <st c="74123">|</st> **<st c="74126">Generative AI</st>** <st c="74139">|</st>
    **<st c="74142">Generative (preview)</st>**<st c="74162">. Keep in mind that this
    functionality is currently still in preview and should not be used on production
    cases.</st> <st c="74275">It currently only works for copilots</st> <st c="74312">in
    English.</st>
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_17.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
- en: <st c="75830">Figure 12.17 – Enabling generative mode (preview) in custom copilot</st>
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: <st c="75897">Once selected, click</st> **<st c="75919">Save</st>** <st c="75923">above
    this setting.</st> <st c="75944">With this, we allow generative AI to determine
    which action or topic it should call based on the user’s message.</st> <st c="76057">This
    also changes our triggers for</st> <st c="76091">topics.</st> <st c="76100">Instead
    of phrases, they are converted to topic</st> <st c="76148">descriptions.</st>
    <st c="76162">A topic description holds information about what our topic does.</st>
    <st c="76227">An example of a topic description can be seen in</st> *<st c="76276">Figure
    12</st>**<st c="76285">.18</st>*<st c="76288">. This is used by the GPT model
    to determine which action or topic to call.</st> <st c="76364">The better the
    desc</st><st c="76383">ription of the action or topic is, the better the chances
    are that the GPT model will call the right action</st> <st c="76492">or topic:</st>
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_18.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
- en: <st c="76600">Figure 12.18 – Triggering topics in generative mode</st>
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: <st c="76651">We can close the copilot settings by clicking</st> **<st c="76698">X</st>**
    <st c="76699">in the top-right corner of Copilot Studio.</st> <st c="76743">Next,
    we will click</st> **<st c="76763">Actions</st>** <st c="76770">|</st> **<st c="76773">Add
    an action</st>** <st c="76786">in the top menu bar.</st> <st c="76808">Here, we
    can use the search bar to find all available actions for Azure DevOps or GitHub
    connector.</st> <st c="76908">We can select the connector action</st> <st c="76943">that
    we would like to enable, such as</st> **<st c="76981">Create an issue</st>** <st
    c="76996">from</st> <st c="77001">GitHub, and proceed to the</st> <st c="77029">configuration
    options:</st>
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_19.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
- en: <st c="77612">Figure 12.19 – Adding connector actions in Copilot Studio</st>
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: <st c="77669">Each connector action comes with a set of inputs and outputs.</st>
    <st c="77732">We can set input values statically or let generative AI understand
    the context of a user’s message and try to extract the right entities from the
    message and feed them to the input parameters.</st> <st c="77925">For the output,
    we can let AI dynamically generate an output message, or we configure it manually.</st>
    <st c="78024">We will leave the default settings as they are and allow the AI
    to ask us questions for each parameter that is required.</st> <st c="78145">In</st>
    **<st c="78148">Outputs</st>**<st c="78155">, we will configure the default setting
    and let the AI dynamically generate a response.</st> <st c="78243">With this,
    we have now enabled the</st> **<st c="78278">Create new issue</st>** <st c="78294">action
    in our copilot.</st> <st c="78318">We can continue enabling other actions that
    we would like to have in our</st> <st c="78391">ChatOps process.</st>
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: <st c="78407">Lastly, we will create an integration with a Power Automate workflow
    for a more complex process.</st> <st c="78505">Flows can be registered as actions
    in the same way as we have seen earlier.</st> <st c="78581">Alternatively, we
    can build a topic and add a node to call the Power Automate flow.</st> <st c="78665">Since
    we have changed the generative AI settings for our copilot to generative mode,
    we need to provide</st> <st c="78768">precise and clear information about our
    topic.</st> <st c="78816">After</st> <st c="78822">describing the topic, we can
    add a flow by adding a conversation node using the plus sign |</st> **<st c="78914">Call
    an action</st>** <st c="78928">|</st> **<st c="78931">Basic actions</st>** <st
    c="78944">|</st> **<st c="78947">Create a flow</st>**<st c="78960">. This opens
    Power Automate separately with the input trigger and output action, both referring
    to the integration</st> <st c="79075">with copilot:</st>
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_20.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
- en: <st c="79804">Figure 12.20 – Creating a flow for copilot</st>
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: <st c="79846">We can continue this process for building topics and flows, as
    well as connecting to actions that will support our</st> <st c="79962">ChatOps
    process.</st>
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: <st c="79978">Once we are satisfied</st> <st c="80001">with the work and would
    like to deploy it to Microsoft Teams, we will need to publish the bot.</st> <st
    c="80096">In the top right in our copilot, we have the</st> **<st c="80141">Publish</st>**
    <st c="80148">option.</st> <st c="80157">A popup appears where we have to confirm
    the publishing process with</st> **<st c="80226">Publish</st>**<st c="80233">.
    We can head back to</st> **<st c="80255">Copilot Studio copilot</st>** <st c="80277">|</st>
    **<st c="80280">Channels</st>** <st c="80288">|</st> **<st c="80291">Microsoft
    Teams</st>**<st c="80306">. We can click</st> **<st c="80321">Turn on Teams</st>**
    <st c="80334">to enable this bot in Teams.</st> <st c="80364">Here, we have</st>
    **<st c="80378">Availability options</st>**<st c="80398">, which allows us to
    share the copilot in the Teams app store.</st> <st c="80461">Going back to the
    Teams settings, we have the</st> **<st c="80507">Open copilot</st>** <st c="80519">option,
    which opens copilot as an application in Teams.</st> <st c="80576">Our bot</st>
    <st c="80583">is now ready to talk to users and run DevOps operations.</st> <st
    c="80641">If we would like to add the copilot to a Teams channel, we have an ability
    under</st> **<st c="80722">Edit details</st>** <st c="80734">to allow users from
    the same tenant to add this copilot to a team.</st> <st c="80802">However, this
    will enable users to add copilot to any team they are part of.</st> <st c="80879">We
    would recommend looking at the Teams administration options and managing the roll-out
    of the copilot via Teams</st> <st c="80993">from there.</st>
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: <st c="81004">In the following figure, we</st> <st c="81033">can see an example
    of a successful deployment of a custom copilot into Microsoft Teams.</st> <st
    c="81121">We can see how the generative AI capability is able to switch between
    topics, perform operations, and even ask questions to get values for all of the</st>
    <st c="81271">required parameters:</st>
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22208_12_21.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
- en: <st c="82167">Figure 12.21 – Using a custom copilot in Microsoft Teams</st>
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: <st c="82223">ALM for Copilot Studio</st>
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="82246">Copilot</st> <st c="82255">Studio, in the same way as other Power
    Platform products, supports application life cycle management through solutions.</st>
    <st c="82375">We should start</st> <st c="82390">by going to</st> **<st c="82403">Solutions</st>**
    <st c="82413">and clicking</st> **<st c="82426">New solution</st>** <st c="82438">or
    opening an existing one.</st> <st c="82467">Once we are in the solution, we can
    click</st> **<st c="82509">New</st>** <st c="82512">|</st> **<st c="82515">Chatbot</st>**
    <st c="82522">to start working on our custom copilot in Copilot Studio.</st> <st
    c="82581">Using this approach lets us ensure that any potential connectors that
    we might be using and registering inside copilot as an action will be added to
    the solution as a</st> <st c="82748">connection reference.</st>
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: <st c="82769">We can follow the same approach for exporting and importing solutions
    as we have already seen in the previous chapters using Azure DevOps</st> <st c="82908">or
    GitHub.</st>
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: <st c="82918">Since we can utilize different connectors in Copilot Studio, it
    is imperative to have valid DLP policies in place, which will make sure that in
    any given environment only connectors that are allowed by organizational policies
    can</st> <st c="83149">be used.</st>
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: <st c="83157">Apart from the approach mentioned earlier, we can utilize PAC
    CLI specifically for copilot management.</st> <st c="83261">We can use these commands
    and package them into scripts if we would like to maintain ALM only for our</st>
    <st c="83363">custom copilots.</st>
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: <st c="83379">Using the following PAC CLI command, we can export the YAML template
    file of</st> <st c="83457">our copilot:</st>
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="83552">This serves two purposes.</st> <st c="83579">First, we can export
    the entire copilot as code, store it in the repository, and collaborate on it
    through code.</st> <st c="83692">Second, using this approach, we can build templates
    for our organizational copilots.</st> <st c="83777">We can use this approach to
    prepare a template as a wireframe or starting point for how our organization’s
    copilots should look per specific department.</st> <st c="83930">This will include
    some predefined topics as a starting point.</st> <st c="83992">We can then export
    the definition of such copilots as template files and store those files somewhere
    in a central repository.</st> <st c="84118">When someone requests a specific copilot,
    we can create it with these prebuilt topics inside using the template files that
    we have prepared in advance, and share the copilot with the right people.</st>
    <st c="84315">The import process can be done using the following PAC</st> <st
    c="84370">CLI command.</st>
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: <st c="84382">Before we can import the copilot to the target environment, we
    need to make sure that the</st> `<st c="84473">connectionReferences</st>` <st
    c="84493">part is updated correctly to reflect the appropriate value in the target
    environment.</st> <st c="84580">In the created template YAML file, at the bottom
    of the file, we can find connection references, as can be seen in the</st> <st
    c="84699">following snippet:</st>
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="85151">Additionally, we</st> <st c="85169">need to make sure that we
    have the solution ready in the</st> <st c="85226">target environment before launching
    this command.</st> <st c="85276">We can either create a new solution or use an</st>
    <st c="85322">existing one.</st>
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: <st c="85335">Once all of this has been set, we can launch the command</st>
    <st c="85393">for import:</st>
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: <st c="85576">If any error comes up, this will be logged in the</st> `<st c="85627">pac-log.txt</st>`
    <st c="85638">file, as written in</st> <st c="85659">the error.</st>
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: <st c="85669">Now that the copilot has been provisioned, we can share the copilot
    with the group of makers.</st> <st c="85764">If we share the copilot with users
    individually, they get the maker role to co-edit the bot.</st> <st c="85857">If
    we share</st> <st c="85869">it with the security</st> <st c="85889">group, then
    the users in the security group get</st> <st c="85938">use-only permissions.</st>
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: <st c="85959">Summary</st>
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '<st c="85967">In this chapter, we took a helicopter view of AI, as well as
    a hot topic for the last two years: GPTs.</st> <st c="86071">AI has become an
    integral part of our daily tasks.</st> <st c="86122">It is everywhere, in almost
    every application that we use.</st> <st c="86181">Organizations are looking for
    ways to be innovative with AI or simply to improve business processes to be more
    effective.</st> <st c="86303">Either way, it is on us to ensure that we build
    AI solutions in a responsible, ethical, and safe way, as we learned in this chapter.</st>
    <st c="86436">Next, we looked at how Microsoft is building AI assistants, called
    Copilots, into every product so that we can all be more productive while using
    these tools.</st> <st c="86595">We looked specifically into copilot in Power Platform
    and how we, as makers, can benefit from it to quickly set up data schemas, prototype
    applications, flows,</st> <st c="86755">and more.</st>'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: <st c="86764">As organizations are finding ways to innovate with AI, they might
    be faced with the question of which AI services are available for use in Power
    Platform.</st> <st c="86920">The next section focused on understanding AI Builder
    and its components such as AI models and AI prompts.</st> <st c="87026">We looked
    at how we can use them in our applications, as well as apply the ALM process across
    AI Builder components.</st> <st c="87143">However, AI Builder is not the only
    service that can be used to enhance our business applications with AI.</st> <st
    c="87250">Azure OpenAI provides organizations with safe and reliable OpenAI models
    that can be used in any flow or application, as</st> <st c="87371">we learned.</st>
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: <st c="87382">We close the chapter by focusing on custom copilots with Copilot
    Studio and ChatOps.</st> <st c="87468">We introduced Copilot Studio, which enables
    us to build custom copilots or simple chatbots.</st> <st c="87560">With AI infused
    into Copilot Studio, we can build a rich conversational AI experience for internal
    or external audiences in a matter of hours, not months.</st> <st c="87715">Copilot
    Studio is a platform that can support business processes including support around
    ChatOps.</st> <st c="87814">So, at the end of this part, we looked at ChatOps,
    which extends DevOps by providing a conversational experience with a bot that
    is capable of performing DevOps-oriented operations.</st> <st c="87996">Lastly,
    we looked practically at how the ChatOps process can be supported by Copilot Studio
    and what some small specialties are when it comes to ALM for</st> <st c="88149">Copilot
    Studio.</st>
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: <st c="88164">With this, we will close this book.</st> <st c="88201">It has
    been a journey through different stages of the DevOps life cycle, from planning
    the business solutions to building pipelines, managing DevSecOps, taking care
    of the environment life cycle, understanding best practices, and closing with
    AI and ChatOps.</st> <st c="88460">We hope that by now, we have managed to demonstrate
    that Microsoft Power Platform is a robust and mature platform that is extensible
    and ready to empower organizations and individuals to build their applications
    and support their business process with the services and features available in</st>
    <st c="88751">Power Platform.</st>
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: <st c="88766">Further reading</st>
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="88782">Microsoft on responsible AI</st> <st c="88811">practices:</st>
    [<st c="88822">https://www.microsoft.com/en-us/ai/responsible-ai</st>](https://www.microsoft.com/en-us/ai/responsible-ai)
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="88871">Azure OpenAI</st> <st c="88885">Service:</st> [<st c="88894">https://learn.microsoft.com/en-us/azure/ai-services/openai/overview</st>](https://learn.microsoft.com/en-us/azure/ai-services/openai/overview)
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="88961">Copilot Studio</st> <st c="88977">guidance:</st> [<st c="88987">https://learn.microsoft.com/en-us/microsoft-copilot-studio/guidance/</st>](https://learn.microsoft.com/en-us/microsoft-copilot-studio/guidance/)
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="89055">Documentation on GitHub and Microsoft Teams</st> <st c="89100">integrations:</st>
    [<st c="89114">https://github.com/integrations/microsoft-teams/blob/master/Readme.md</st>](https://github.com/integrations/microsoft-teams/blob/master/Readme.md)
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="89183">Details on the Azure DevOps and Microsoft Teams</st> <st c="89232">integration:</st>
    [<st c="89245">https://learn.microsoft.com/en-us/azure/devops/service-hooks/services/teams?view=azure-devops</st>](https://learn.microsoft.com/en-us/azure/devops/service-hooks/services/teams?view=azure-devops)
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="89338">The PAC CLI command for</st> <st c="89363">copilot:</st> [<st
    c="89372">https://learn.microsoft.com/en-us/power-platform/developer/cli/reference/copilot</st>](https://learn.microsoft.com/en-us/power-platform/developer/cli/reference/copilot)
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
