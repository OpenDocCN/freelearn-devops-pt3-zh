["```\n\nterraform {\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {}\n}\n```", "```\n\nresource \"azurerm_kubernetes_cluster\" \"k8squickstart\" {\n  name                = var.name\n  location            = var.location\n  resource_group_name = var.resource_group_name\n  dns_prefix          = \"${var.name}-dns01\"\n  default_node_pool {\n    name       = \"default\"\n    node_count = var.node_count\n    vm_size    = \"Standard_A2_v2\"\n  }\n  identity {\n    type = \"SystemAssigned\"\n  }\n  tags = {\n    Environment = \"Production\"\n  }\n}\n```", "```\n\nvariable \"name\" {\n  type = string\n  default = \"aksenvironment01\"\n}\nvariable \"resource_group_name\" {\n  type = string\n  default = \"devrelasaservice\"\n}\nvariable \"location\" {\n  type = string\n  default = \"eastus\"\n}\nvariable \"node_count\" {\n  type = string\n  default = 3\n}\n```", "```\n\nresource \"azurerm_kubernetes_cluster_node_pool\" \"example\" {\n  name                  = \"internal\"\n  kubernetes_cluster_id = azurerm_kubernetes_cluster.example.id\n  vm_size               = \"Standard_DS2_v2\"\n  node_count            = 1\n  enable_auto_scaling = true\n  tags = {\n    Environment = \"Production\"\n  }\n}\n```", "```\n\n    terraform {\n    ```", "```\n\n      backend \"s3\" {\n    ```", "```\n\n        bucket = \"terraform-state-k8senv\"\n    ```", "```\n\n        key    = \"eks-terraform-workernodes.tfstate\"\n    ```", "```\n\n        region = \"us-east-1\"\n    ```", "```\n\n      }\n    ```", "```\n\n      required_providers {\n    ```", "```\n\n        aws = {\n    ```", "```\n\n          source = \"hashicorp/aws\"\n    ```", "```\n\n        }\n    ```", "```\n\n      }\n    ```", "```\n\n    }\n    ```", "```\n\n    resource \"aws_iam_role\" \"eks-iam-role\" {\n    ```", "```\n\n      name = \"k8squickstart-eks-iam-role\"\n    ```", "```\n\n      path = \"/\"\n    ```", "```\n\n      assume_role_policy = <<EOF\n    ```", "```\n\n    {\n    ```", "```\n\n      \"Version\": \"2012-10-17\",\n    ```", "```\n\n      \"Statement\": [\n    ```", "```\n\n        {\n    ```", "```\n\n          \"Effect\": \"Allow\",\n    ```", "```\n\n          \"Principal\": {\n    ```", "```\n\n            \"Service\": \"eks.amazonaws.com\"\n    ```", "```\n\n          },\n    ```", "```\n\n          \"Action\": \"sts:AssumeRole\"\n    ```", "```\n\n        }\n    ```", "```\n\n      ]\n    ```", "```\n\n    }\n    ```", "```\n\n    EOF\n    ```", "```\n\n    }\n    ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"AmazonEKSClusterPolicy\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"\n        ```", "```\n\n          role       = aws_iam_role.eks-iam-role.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"AmazonEC2ContainerRegistryReadOnly-EKS\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"\n        ```", "```\n\n          role       = aws_iam_role.eks-iam-role.name\n        ```", "```\n\n        }\n        ```", "```\n\n    resource \"aws_eks_cluster\" \"k8squickstart-eks\" {\n    ```", "```\n\n      name = \"k8squickstart-cluster\"\n    ```", "```\n\n      role_arn = aws_iam_role.eks-iam-role.arn\n    ```", "```\n\n      enabled_cluster_log_types = [\"api\", \"audit\", \"scheduler\", \"controllerManager\"]\n    ```", "```\n\n      vpc_config {\n    ```", "```\n\n        subnet_ids = [var.subnet_id_1, var.subnet_id_2]\n    ```", "```\n\n      }\n    ```", "```\n\n      depends_on = [\n    ```", "```\n\n        aws_iam_role.eks-iam-role,\n    ```", "```\n\n      ]\n    ```", "```\n\n    }\n    ```", "```\n\n        resource \"aws_iam_role\" \"workernodes\" {\n        ```", "```\n\n          name = \"eks-node-group-example\"\n        ```", "```\n\n          assume_role_policy = jsonencode({\n        ```", "```\n\n            Statement = [{\n        ```", "```\n\n              Action = \"sts:AssumeRole\"\n        ```", "```\n\n              Effect = \"Allow\"\n        ```", "```\n\n              Principal = {\n        ```", "```\n\n                Service = \"ec2.amazonaws.com\"\n        ```", "```\n\n              }\n        ```", "```\n\n            }]\n        ```", "```\n\n            Version = \"2012-10-17\"\n        ```", "```\n\n          })\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"AmazonEKSWorkerNodePolicy\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"\n        ```", "```\n\n          role       = aws_iam_role.workernodes.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"AmazonEKS_CNI_Policy\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"\n        ```", "```\n\n          role       = aws_iam_role.workernodes.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"EC2InstanceProfileForImageBuilderECRContainerBuilds\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds\"\n        ```", "```\n\n          role       = aws_iam_role.workernodes.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"AmazonEC2ContainerRegistryReadOnly\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"\n        ```", "```\n\n          role       = aws_iam_role.workernodes.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_iam_role_policy_attachment\" \"CloudWatchAgentServerPolicy-eks\" {\n        ```", "```\n\n          policy_arn = \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\n        ```", "```\n\n          role       = aws_iam_role.workernodes.name\n        ```", "```\n\n        }\n        ```", "```\n\n        resource \"aws_eks_node_group\" \"worker-node-group\" {\n        ```", "```\n\n          cluster_name    = aws_eks_cluster.k8squickstart-eks.name\n        ```", "```\n\n          node_group_name = \"k8squickstart-workernodes\"\n        ```", "```\n\n          node_role_arn   = aws_iam_role.workernodes.arn\n        ```", "```\n\n          subnet_ids      = [var.subnet_id_1, var.subnet_id_2]\n        ```", "```\n\n          instance_types = [\"t3.xlarge\"]\n        ```", "```\n\n          scaling_config {\n        ```", "```\n\n            desired_size = 3\n        ```", "```\n\n            max_size     = 4\n        ```", "```\n\n            min_size     = 2\n        ```", "```\n\n          }\n        ```", "```\n\n          depends_on = [\n        ```", "```\n\n            aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy,\n        ```", "```\n\n            aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy,\n        ```", "```\n\n          ]\n        ```", "```\n\n        }\n        ```", "```\n\nvariable \"subnet_id_1\" {\n  type = string\n  default = \"\"\n}\nvariable \"subnet_id_2\" {\n  type = string\n  default = \"\"\n}\n```", "```\n\n    provider \"google\" {\n    ```", "```\n\n      project     = var.project_id\n    ```", "```\n\n      region      = var.region\n    ```", "```\n\n    }\n    ```", "```\n\n    resource \"google_container_cluster\" \"primary\" {\n    ```", "```\n\n      name     = var.cluster_name\n    ```", "```\n\n      location = var.region\n    ```", "```\n\n      remove_default_node_pool = true\n    ```", "```\n\n      initial_node_count       = 1\n    ```", "```\n\n      network    = var.vpc_name\n    ```", "```\n\n      subnetwork = var.subnet_name\n    ```", "```\n\n    }\n    ```", "```\n\n        resource \"google_container_node_pool\" \"nodes\" {\n        ```", "```\n\n          name       = \"${google_container_cluster.primary.name}-node-pool\"\n        ```", "```\n\n          location   = var.region\n        ```", "```\n\n          cluster    = google_container_cluster.primary.name\n        ```", "```\n\n          node_count = var.node_count\n        ```", "```\n\n          node_config {\n        ```", "```\n\n            oauth_scopes = [\n        ```", "```\n\n              \"https://www.googleapis.com/auth/logging.write\",\n        ```", "```\n\n              \"https://www.googleapis.com/auth/monitoring\",\n        ```", "```\n\n            ]\n        ```", "```\n\n            labels = {\n        ```", "```\n\n              env = var.project_id\n        ```", "```\n\n            }\n        ```", "```\n\n            machine_type = \"n1-standard-1\"\n        ```", "```\n\n            tags         = [\"gke-node\", \"${var.project_id}-gke\"]\n        ```", "```\n\n            metadata = {\n        ```", "```\n\n              disable-legacy-endpoints = \"true\"\n        ```", "```\n\n            }\n        ```", "```\n\n          }\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"project_id\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = \"gold-mode-297211\"\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"region\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = \"us-east1\"\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"vpc_name\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = \"default\"\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"subnet_name\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = \"default\"\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"node_count\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = 2\n        ```", "```\n\n        }\n        ```", "```\n\n        variable \"cluster_name\" {\n        ```", "```\n\n          type = string\n        ```", "```\n\n          default = \"gkek8senv\"\n        ```", "```\n\n        }\n        ```"]