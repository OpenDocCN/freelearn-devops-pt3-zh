- en: '16'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Other Salesforce DevOps Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explore an array of tools that complement and enhance the
    Salesforce DevOps landscape. These tools offer different features and cater to
    various aspects of the DevOps cycle, from planning and development to deployment
    and monitoring. Understanding the capabilities and applications of these tools
    will help you select the most suitable ones for your Salesforce implementation.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce DevOps Center
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other commercial tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open source tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have a comprehensive understanding of the
    Salesforce DevOps ecosystem, including insights into how each tool fits into your
    DevOps strategy. You will also be equipped to make informed decisions about which
    tools can best address the specific needs of your Salesforce projects.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce DevOps Center
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Salesforce DevOps ecosystem is vast and continuously evolving, with numerous
    tools emerging to cater to different needs within the development life cycle.
    In this section, we delve into an overview of some prominent tools and platforms
    that integrate with Salesforce, offering enhanced efficiency, collaboration, and
    automation for development teams. First, we will cover a new significant player,
    Salesforce’s own DevOps offering: DevOps Center.'
  prefs: []
  type: TYPE_NORMAL
- en: DevOps Center is a Salesforce solution designed to enhance change and release
    management processes by incorporating DevOps best practices into Salesforce development
    teams, irrespective of their position on the low-code to pro-code spectrum. This
    platform was developed in response to feedback from the Salesforce community seeking
    an alternative to change sets. While change sets remain available, DevOps Center
    is posited as a more advanced and efficient tool for managing changes within Salesforce
    environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'DevOps Center has the following key capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automated change tracking**: DevOps Center eliminates the need for manual
    tracking of changes, such as using spreadsheets or sticky notes, by automatically
    tracking alterations within the development environment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source control integration**: It uses source control repositories, such as
    GitHub, as the **single source of truth** (**SSOT**) for project changes, ensuring
    consistency across all team members’ work'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Branch management**: The platform simplifies branch creation and management,
    facilitating the progression of changes through the release pipeline with a simple
    click-based interface'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tool flexibility**: Developers can use their preferred tools outside of DevOps
    Center and still maintain visibility of changes across the team due to the centralized
    source control system'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Salesforce DX compatibility**: Under the hood, DevOps Center leverages Salesforce
    DX, including compatibility with the Salesforce CLI, Metadata API, and source
    control, without requiring users to be familiar with these tools'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User interface (UI)**: A click-based UI allows users to interact with the
    DevOps process without needing to engage directly with underlying technologies
    such as the Salesforce CLI or GitHub'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With DevOps Center, different types of developers can work together more effectively.
    For instance, a declarative developer can create work items, pull changes, and
    commit them to the source control repository, while a programmatic developer can
    review those changes before promotion. Release managers can deploy changes through
    the release pipeline within DevOps Center or by using the Salesforce CLI, thus
    improving the release management process. See the following diagram for different
    workflows that are supported:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 16.1 – Development flows for DevOps Center](img/B19436_16_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16.1 – Development flows for DevOps Center
  prefs: []
  type: TYPE_NORMAL
- en: The platform also includes features to identify conflicts between work items
    and provides information to help resolve them, which is particularly useful in
    teams with multiple parallel developments. DevOps Center can detect when a development
    environment is out of sync with the SOT and provides tools to synchronize environments,
    reducing the chance of conflicts or errors during deployment.
  prefs: []
  type: TYPE_NORMAL
- en: The platform offers enhanced visibility into the change and release process,
    including an activity history for auditing and error tracking. Features such as
    work items, conflict management, and validation-only deployments can contribute
    to increased productivity and smoother workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Initially, DevOps Center only supports GitHub as the source control system.
    Users of other systems such as Bitbucket may need to switch to GitHub or wait
    for future updates. DevOps Center also currently supports org-based development
    rather than package-based development (2GP), which may not align with the workflows
    of all development teams. Finally, while a number of external integrations are
    planned, at the moment, the number of external systems to which it can be connected
    is limited.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, DevOps Center offers a simple platform for Salesforce development teams
    to manage change and release processes more effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Other commercial tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Commercial tools offer a range of functionalities tailored to Salesforce development
    and operations. These platforms often provide specialized features such as deployment
    management, impact analysis, and automation capabilities. They can be particularly
    beneficial for organizations seeking to streamline their development processes
    and enhance collaboration among team members. In this section, we will examine
    several commercial tools that have made significant contributions to the Salesforce
    DevOps ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Salto
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Salto is a DevOps platform designed to streamline and enhance the development
    and operational processes for Salesforce environments. As a SaaS product, Salto
    manages Salesforce configurations and metadata, aiming to provide a more efficient
    route for handling deployment, version control, and dependency tracking across
    various Salesforce instances.
  prefs: []
  type: TYPE_NORMAL
- en: 'The core capabilities of Salto include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exploration of configurations and metadata**: Salto provides users with tools
    to examine and understand the impact of changes in Salesforce configurations before
    they are made. This is facilitated by a user-friendly interface that abstracts
    the underlying XML data into a more readable format, using Salto’s proprietary
    **Not Another Configuration** **Language** (**NaCI**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deployment management**: Salto allows users to move changes from one Salesforce
    environment to another with ease. The platform supports a pre-deployment validation
    process that identifies potential deployment issues such as missing dependencies,
    aiming to reduce the frequency of failed deployments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automation and continuous integration/continuous deployment (CI/CD)**: Salto
    has introduced CI/CD automation capabilities, enabling users to integrate the
    platform into their existing CI/CD pipelines. This allows for automated testing,
    building, and deployment processes, thereby helping teams implement DevOps best
    practices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version control integration**: Salto integrates with **version control systems**
    (**VCS**) such as Git, generally containing NaCL metadata, allowing users to create
    an audit trail for changes deployed to Salesforce environments. This integration
    also supports compliance with regulatory requirements by maintaining a record
    of changes for auditing purposes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Salto is suitable for various use cases, such as simplifying the deployment
    process across multiple Salesforce sandboxes and production environments or managing
    complex Salesforce environments where interdependencies between configurations
    are common.
  prefs: []
  type: TYPE_NORMAL
- en: It provides a user-friendly interface that abstracts complex XML data into a
    more accessible format. This helps proactive identification of configuration dependencies,
    which helps prevent deployment issues. However, there is a need for users to learn
    Salto’s proprietary NaCl language, which may present a learning curve.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, Salto positions itself as a robust DevOps tool for Salesforce, aiming
    to streamline deployment processes, enhance change intelligence, and improve overall
    efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: Panaya
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Panaya ForeSight is a change intelligence platform designed to assist organizations
    in managing, maintaining, and debugging their Salesforce orgs. The platform offers
    a suite of tools aimed at providing visibility and control over the complex ecosystem
    of a Salesforce environment.
  prefs: []
  type: TYPE_NORMAL
- en: ForeSight equips users with the ability to perform in-depth analysis of their
    Salesforce org’s metadata, which results in a detailed mapping of dependencies
    within the org’s structure. This mapping is important for understanding the interconnections
    between various components, which is essential when planning changes or additions
    to the system. A key feature of ForeSight is its Discovery Chrome Extension, which
    enables users to obtain insights directly from any Salesforce page, helping to
    anticipate the impact on related components such as Apex classes, Process Builders,
    flows, and fields.
  prefs: []
  type: TYPE_NORMAL
- en: ForeSight ExplAIn, an AI-driven extension of the platform, adds another layer
    of intelligence by providing explanations in a human-readable format for customizations
    and automations within Salesforce. This feature assists in troubleshooting errors
    and automatically generates documentation, which can drastically reduce time spent
    on these tasks.
  prefs: []
  type: TYPE_NORMAL
- en: ForeSight is used for a variety of Salesforce management tasks, including release
    planning, reduction of technical debt, **root cause analysis** (**RCA**), and
    optimization of testing efforts. It is particularly useful for organizations that
    are migrating to new Salesforce features or managing the transition from workflow
    rules to flows. The platform enables organizations to plan changes with a clear
    understanding of their impact, automate impact analysis, and efficiently onboard
    new team members by providing them with comprehensive org insights.
  prefs: []
  type: TYPE_NORMAL
- en: One of the primary strengths of Panaya ForeSight is the platform’s ability to
    reduce the manual effort associated with understanding and managing Salesforce
    orgs, thus allowing for more accurate and faster impact analysis. The AI-powered
    documentation and human-friendly explanations enhance the onboarding process for
    new hires and provide a quick reference for org functionalities. By enabling proactive
    management, ForeSight helps organizations shift from a reactive to a strategic
    approach, potentially leading to innovation and optimized workflows.
  prefs: []
  type: TYPE_NORMAL
- en: While the platform offers a comprehensive set of tools for Salesforce org management,
    the degree of its effectiveness can be contingent on the complexity of the org
    and the user’s familiarity with the platform. Additionally, as with any AI-driven
    tool, the quality of the output is dependent on the data input, and the AI’s output
    may not always be exactly what one would be looking for.
  prefs: []
  type: TYPE_NORMAL
- en: Prodly
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prodly aims to streamline the development and operations process, particularly
    for business users such as Salesforce admins and low-code developers. The product
    suite includes tools for environment management, work management integration,
    release automation, and compliance and security controls.
  prefs: []
  type: TYPE_NORMAL
- en: Prodly provides a user-friendly interface within Salesforce to manage various
    development environments, including the ability to spin up scratch orgs without
    the need for command-line tools. This capability leverages Salesforce DX’s features
    but simplifies the process for non-developers. Prodly’s environment management
    also includes a sandbox seeding feature, which allows users to populate environments
    with sample or specific sets of data. This feature supports automated data migration
    between environments, adhering to dependencies and order of insertion, preventing
    duplication, and saving time on manual configuration.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of work management, Prodly integrates with Salesforce’s Agile Accelerator
    and DevOps Center, enabling users to create and manage projects and work items
    and associate them with metadata changes detected by DevOps Center. This integration
    ensures a seamless process for managing both the application life cycle and the
    associated metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Release automation within Prodly allows for the comparison of metadata between
    source and target environments, offering a preview of changes and a guided deployment
    process. This can help prevent deployment errors by providing insights before
    the deployment is executed. Furthermore, Prodly supports metadata deployments
    from org to org or from org to branch and vice versa, accommodating different
    development workflows, including those using source control systems.
  prefs: []
  type: TYPE_NORMAL
- en: Prodly suits organizations using Salesforce where there is a need to empower
    admins and low-code developers with DevOps capabilities. It is particularly useful
    for businesses managing complex applications such as Salesforce CPQ or B2B Commerce,
    where configuration data is as critical as metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Elements.cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Elements.cloud is a DevOps platform designed to enhance the management and documentation
    of Salesforce environments. Its primary capabilities include capturing feedback,
    managing requirements, defining work items such as releases and user stories,
    and linking these to Salesforce metadata for impact analysis. The platform is
    integrated with Salesforce, allowing users to embed process diagrams into Salesforce
    record pages and providing context-sensitive help.
  prefs: []
  type: TYPE_NORMAL
- en: One of the key use cases for Elements.cloud is to streamline the process of
    documenting and analyzing changes within a Salesforce org. By automating the creation
    of metadata dictionaries and synchronizing them nightly with both production and
    sandbox environments, Elements.cloud facilitates a more efficient impact analysis
    process. This capability helps developers and administrators understand the relationships
    and dependencies between Salesforce metadata components, reducing the time and
    effort required for impact analysis by up to 50%.
  prefs: []
  type: TYPE_NORMAL
- en: Elements.cloud’s strengths lie in its ability to provide a visual, hierarchical
    process mapping tool that is version-controlled and can be directly embedded within
    Salesforce. This enhances the user’s ability to validate business process requirements,
    and the platform’s risk assessment features help track the potential impact of
    changes from both a compliance and technical perspective. Additionally, the platform
    automates the documentation of metadata items, supports cleanup by identifying
    low-impact fields, and offers multi-level dependency analysis for in-depth impact
    assessment.
  prefs: []
  type: TYPE_NORMAL
- en: The platform also empowers users to drive process improvement savings by mapping
    out business processes and identifying areas for optimization. By linking process
    steps to user stories or requirements and attaching relevant documentation, Elements.cloud
    promotes an understanding of why certain changes were made, thereby fostering
    institutional knowledge and future-proofing developments.
  prefs: []
  type: TYPE_NORMAL
- en: Opsera
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Opsera is a continuous orchestration platform designed to address issues in
    the DevOps field, particularly the challenges of connecting various tools in the
    delivery assembly line and creating visibility over this assembly line. It aims
    to provide insights into the speed, quality, and security vulnerabilities of product
    deliveries. Opsera combines the management of these tools within a **single pane
    of glass** (**SPOG**), enabling orchestration and visibility for different toolsets
    and processes.
  prefs: []
  type: TYPE_NORMAL
- en: Opsera offers toolchain automation, declarative pipelines, and insights modules.
    The toolchain automation module allows users to manage and deploy the necessary
    tools for application deployment, supporting both SaaS and traditional applications.
    It includes integrations to a variety of tools such as Jenkins, Argo CD, Artifactory,
    and SonarQube, with the flexibility to add others as needed. Opsera operates on
    a SaaS platform, where customers are set up with a single-tenant VPC and a personalized
    portal.
  prefs: []
  type: TYPE_NORMAL
- en: The declarative pipelines module provides a low-code environment where users
    can create workflows for deploying applications, including Salesforce and containerized
    applications designed for Kubernetes. It caters to both low coders and high coders
    by offering task-driven operations, which enable users to push changes directly
    from an organization to a Git branch, facilitating GitOps without requiring command-line
    Git knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Opsera’s insights module delivers comprehensive dashboards with over 100 KPIs
    aligned with **DevOps Research and Assessment** (**DORA**), **Definition of Done**
    (**DoD**), and the **National Institute of Standards and Technology** (**NIST**)
    metrics. It provides visibility into the software delivery life cycle, including
    successful deployments, pipeline statuses, and unit testing metrics. This observability
    extends to Salesforce-specific metrics, offering insights into backups, rollbacks,
    migrations, and Jira lead time.
  prefs: []
  type: TYPE_NORMAL
- en: Opsera’s use cases include the deployment of Salesforce applications, where
    it can handle both code and low-code elements, and the delivery of containerized
    applications to Kubernetes. It supports various environments and can manage the
    movement of applications from sandbox to production. Additionally, it provides
    visibility into application life-cycle management tools through direct integrations,
    API interactions, and command-line steps.
  prefs: []
  type: TYPE_NORMAL
- en: Opsera’s primary strength lies in its ability to bring together disparate tools
    and processes under one orchestration platform, offering a unified approach to
    DevOps. Its SaaS-based approach with a single-tenant VPC ensures security and
    isolation. The platform’s low-code environment is accessible to users with varying
    technical expertise, promoting collaboration between different team members.
  prefs: []
  type: TYPE_NORMAL
- en: Open source tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open source tools play a crucial role in the Salesforce DevOps ecosystem. They
    provide the community with flexible, adaptable, and often no-cost solutions that
    can be customized to fit specific requirements. These tools are developed and
    maintained by a community of users and contributors who work collaboratively to
    improve and update them. In this section, we explore several open source tools
    that have garnered attention for their utility and impact on Salesforce DevOps
    practices.
  prefs: []
  type: TYPE_NORMAL
- en: Happy Soup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Happy Soup is an open source project designed to perform impact and dependency
    analysis within Salesforce environments. The tool is built on JavaScript and Node.js,
    and its source code is publicly available on GitHub for transparency and collaboration.
    It is primarily aimed at Salesforce administrators and developers who need to
    understand the complex web of dependencies that exist within their Salesforce
    orgs.
  prefs: []
  type: TYPE_NORMAL
- en: The core functionalities of Happy Soup include the capability to analyze the
    impact of changes made to a Salesforce org and to understand the dependencies
    across various components. This is particularly useful when modifying elements
    such as custom fields, as it can help identify potential issues that such changes
    might cause across the system.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if a custom field is modified, Happy Soup can quickly identify
    all the components within the org that rely on that field. This includes dependencies
    in report filters, Apex classes, JavaScript controllers in **Lightning Web Components**
    (**LWC**), workflow rules, and more. The tool provides a visual representation
    of these dependencies, making it easier to understand the breadth and depth of
    the potential impact.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use cases for Happy Soup include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Impact analysis**: Before changing a custom field, Happy Soup can be used
    to determine the dependencies and potential risks, allowing for informed decision-making'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dependency analysis**: The tool is useful for independent consultants or
    new team members to quickly understand how specific components or objects are
    used within an unfamiliar Salesforce org'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Page layout optimization**: Happy Soup can export the fields of a page layout
    into an Excel sheet, facilitating discussions with business users regarding the
    relevance and necessity of each field'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Happy Soup is a valuable tool for Salesforce professionals seeking to manage
    the complexities of their org’s metadata dependencies and minimize the risks associated
    with changes to the Salesforce environment.
  prefs: []
  type: TYPE_NORMAL
- en: SFDX-Hardis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SFDX-Hardis is a Salesforce DX plugin designed to enhance the DevOps process
    for Salesforce development teams. It aims to offer a modular, scriptable approach
    to DevOps, encapsulating standard execution sequences or scripts of Salesforce
    DX commands into single, more accessible commands.
  prefs: []
  type: TYPE_NORMAL
- en: SFDX-Hardis serves as both a Salesforce DX plugin and a Visual Studio Code extension,
    providing a user-friendly interface for initiating DevOps tasks. It allows users
    to start new tasks, create fields, and manage branch merging through a guided
    wizard, which abstracts complex command-line interactions into simple UI-driven
    actions. The plugin facilitates operations such as branch creation, sandbox initialization,
    metadata retrieval, and commit preparation. It also includes a Visual Studio Code
    extension that offers a graphical interface for executing commands, aimed at users
    who may not be comfortable with command-line tools.
  prefs: []
  type: TYPE_NORMAL
- en: The plugin is particularly useful for Salesforce development teams that require
    a structured yet flexible approach to managing their DevOps pipelines. It supports
    both scratch orgs and sandboxes, making it suitable for various development workflows.
    Its capabilities extend to automated metadata retrieval, deployment simulations,
    and quality checks, including Apex test coverage validation. SFDX-Hardis can be
    integrated with CI servers such as GitLab, GitHub Actions, and Azure DevOps, thereby
    automating the deployment process upon successful merge requests.
  prefs: []
  type: TYPE_NORMAL
- en: SFDX-Hardis’ integration with popular CI/CD systems and its focus on user experience
    make it a valuable tool for Salesforce development teams looking to adopt or enhance
    their DevOps practices.
  prefs: []
  type: TYPE_NORMAL
- en: DX@Scale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: DX@Scale is a DevOps solution designed for Salesforce implementations. It aims
    to address the complexities and challenges associated with managing large-scale
    Salesforce projects by leveraging Salesforce DX principles and custom tooling.
    The solution is built around several core principles, including modular design,
    automation, and CI/CD practices.
  prefs: []
  type: TYPE_NORMAL
- en: DX@Scale allows for the creation of multiple artifacts, such as unlocked packages
    and source packages, that can be independently developed, tested, and deployed.
    It utilizes scratch org pools to reduce the time needed to provision development
    environments, enabling instantaneous access for developers. The solution implements
    a simplified branch model, with the master branch serving as the production branch,
    and feature branches used for development work. It also includes custom libraries,
    SF PowerScripts, and SF PowerKit, which are open source tools that provide additional
    functionalities such as package versioning, build optimization, and profile reconciliation.
  prefs: []
  type: TYPE_NORMAL
- en: DX@Scale is particularly useful for large-scale Salesforce projects with multiple
    teams and complex deployment requirements. It streamlines the development process
    by allowing for efficient management of dependencies and facilitating the creation
    of smaller, more manageable packages. The solution is also applicable in scenarios
    where rapid environment provisioning is required and where there is a need for
    a fast feedback loop between code changes and deployment validation.
  prefs: []
  type: TYPE_NORMAL
- en: One of the primary strengths of DX@Scale is its ability to deliver deployments
    rapidly, with full builds taking less than 25 minutes and unit tests executing
    between 2 and 5 minutes. Its use of CI/CD pipelines and artifact repositories
    ensures traceability and control over the deployment process.
  prefs: []
  type: TYPE_NORMAL
- en: CumulusCI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CumulusCI is a toolchain developed by Salesforce.org aimed at automating the
    application life cycle for Salesforce projects. It is designed to facilitate the
    development, testing, and deployment of Salesforce applications by providing a
    suite of automation tools that work together to create a cohesive development
    process.
  prefs: []
  type: TYPE_NORMAL
- en: CumulusCI integrates with VCS, utilizing Salesforce DX scratch orgs as the basis
    for all development work. It automates the creation of these scratch orgs, handling
    dependencies, package installations, metadata deployment, org configuration, and
    data seeding. CumulusCI orchestrates these processes through flows and tasks,
    which are composable blocks of automation defined in a project’s repository. Tasks
    are individual operations in a Salesforce org, while flows are sequences of these
    tasks that achieve specific outcomes. These are configurable in YAML and can be
    extended with Python.
  prefs: []
  type: TYPE_NORMAL
- en: CumulusCI is used to build sophisticated environments tailored to various roles
    in the application life cycle, from developers and admins to end users. It supports
    immediate and independent environment creation, ensuring teams can work without
    infrastructure constraints. CumulusCI’s portability means automation is not limited
    to CI servers but extends to local machines and web interfaces such as MetaCI
    and MetaDeploy.
  prefs: []
  type: TYPE_NORMAL
- en: The toolchain increases development velocity by allowing each team member to
    work in their orgs, significantly reducing conflicts and dependencies on shared
    environments. It embeds modern best practices such as source control and Salesforce
    DX into the development workflow. CumulusCI is open source, which aligns with
    Salesforce’s community-driven initiatives and encourages contribution and collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we conclude this chapter, it is clear that the Salesforce DevOps ecosystem
    offers a diverse array of tools that cater to a wide range of development scenarios.
    From Salesforce’s own DevOps Center to third-party offerings and community-driven
    open source projects, the landscape is rich with options that can be tailored
    to fit the unique needs of any organization.
  prefs: []
  type: TYPE_NORMAL
- en: Each tool we have discussed brings its strengths and areas of specialization.
    By selecting the right combination of these tools, a Salesforce team can create
    a DevOps environment that not only streamlines the development and deployment
    processes but also fosters a culture of continuous improvement and collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce DevOps Center, for example, is a powerful Salesforce-native solution
    that integrates seamlessly with the platform, offering automated change tracking
    and source control integration. It is an ideal choice for teams looking for a
    tool that is closely aligned with Salesforce’s own best practices and future developments.
  prefs: []
  type: TYPE_NORMAL
- en: Commercial tools such as Salto, Panaya, Prodly, and Elements.cloud offer a blend
    of features such as impact analysis, deployment management, and process documentation.
    These tools are typically well suited for organizations that require robust support,
    advanced functionalities, and a guided user experience.
  prefs: []
  type: TYPE_NORMAL
- en: Open source tools, including Happy Soup, SFDX-Hardis, DX@Scale, and CumulusCI,
    empower teams with flexibility and the ability to customize their DevOps processes.
    The collaborative nature of open source projects often means these tools are at
    the forefront of innovation, incorporating the latest ideas and techniques from
    the community.
  prefs: []
  type: TYPE_NORMAL
- en: When selecting tools for your Salesforce DevOps toolkit, consider the complexity
    of your org, the size of your development team, and the specific challenges you
    face. For instance, if rapid environment provisioning is a priority, tools such
    as DX@Scale and CumulusCI may be particularly useful. If impact analysis and dependency
    management are critical, then Salto and Panaya could offer the necessary insights.
  prefs: []
  type: TYPE_NORMAL
- en: It is also important to consider the future direction of your DevOps practices.
    As Salesforce continues to evolve, so too will the tools that support it. Keeping
    an eye on emerging technologies and updates to existing tools will help ensure
    your DevOps strategy remains current and effective.
  prefs: []
  type: TYPE_NORMAL
- en: In the end, the goal of any DevOps tool is to support the team in delivering
    high-quality software efficiently and reliably. By carefully evaluating the options
    and understanding how each tool fits within the broader ecosystem, you can create
    a DevOps environment that not only meets today’s demands but is also ready to
    adapt to tomorrow’s challenges.
  prefs: []
  type: TYPE_NORMAL
- en: With the knowledge gained from this chapter, you are well equipped to navigate
    the Salesforce DevOps ecosystem, making informed choices that will drive your
    organization’s success. As the Salesforce platform continues to grow and evolve,
    so will the tools and practices surrounding it, offering new opportunities for
    innovation and excellence in the world of Salesforce DevOps. We will now move
    on to the final chapter of the book, where we summarize our main findings and
    map out where you can go from here.
  prefs: []
  type: TYPE_NORMAL
