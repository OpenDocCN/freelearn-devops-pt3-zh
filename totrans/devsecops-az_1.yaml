- en: <st c="0">1</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Agile, DevOps, and Azure Overview</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="35">DevOps is a modern application development and delivery approach
    that helps organizations release quality software more quickly into production
    with fewer defects!</st> <st c="200">However, the benefits of adopting a DevOps
    approach are not realized in isolation.</st> <st c="283">They are best realized
    in conjunction with other concepts such as Agile planning and</st> <st c="368">cloud
    computing.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="384">Most of this book focuses on DevSecOps, but in this chapter, we
    will begin with an introduction to DevOps for those unfamiliar with the concept.</st>
    <st c="530">We will introduce the working definition of DevOps, which we will
    use for the rest of the book.</st> <st c="626">We will discuss the stages in a
    DevOps workflow and the five core DevOps implementation practices.</st> <st c="725">We
    will also explain the relationship between Agile, DevOps, and cloud computing,
    the security challenges of implementing DevOps, and how organizations can start
    to address</st> <st c="898">those challenges.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="915">By the end of this chapter, you will have a good understanding of</st>
    <st c="982">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="996">What</st> <st c="1002">DevOps is</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1011">The five core practices</st> <st c="1036">of DevOps</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1045">The stages in a</st> <st c="1062">DevOps workflow</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1077">The importance of a collaborative culture</st> <st c="1120">in
    DevOps</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1129">The DevOps anti-types to watch</st> <st c="1161">out for</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1168">The DevOps toolchain (Azure DevOps, GitHub Actions,</st> <st c="1221">and
    GitLab)</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1232">The why</st> <st c="1241">of DevOps</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1250">The relationship between Agile, DevOps, and</st> <st c="1295">cloud
    computing</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1310">These topics will equip you with the essential foundational knowledge
    to understand and contextualize the discussions presented throughout the remainder
    of this book.</st> <st c="1478">Now, let’s dive in and begin</st> <st c="1507">our
    journey!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1519">Technical requirements</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1542">To follow along with the instructions in this chapter, you will
    need</st> <st c="1612">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1626">A PC with an</st> <st c="1640">internet connection</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1659">A valid</st> <st c="1668">email address</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1681">Defining DevOps – Understanding its concepts and practices</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1740">If you ask 10 people</st> <st c="1762">what DevOps is, you will
    probably get 10 different answers, depending on these people’s backgrounds and
    probably the books they have read.</st> <st c="1901">Therefore, it is important
    for us to establish a working definition that we will use for DevOps for the rest
    of this book.</st> <st c="2024">Microsoft’s official definition of DevOps was
    coined by Donavan Brown at a conference in 2018\.</st> <st c="2119">You can still
    find the video on YouTube:</st> [<st c="2160">https://www.youtube.com/watch?v=cbFzojQOjyA</st>](https://www.youtube.com/watch?v=cbFzojQOjyA)<st
    c="2203">. Here is</st> <st c="2213">the definition:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2228">DevOps is the union of people, process, and products to enable
    continuous delivery of value to our end users.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2338">From this definition, we want to highlight a few essential points.</st>
    <st c="2406">To start with, it is essential to understand that DevOps is</st>
    *<st c="2466">not</st>* <st c="2469">a tool, a product, or a job title.</st> <st
    c="2505">Instead, it is a collaborative approach to software development.</st>
    <st c="2570">It is a way of working/thinking, and most of all, it is a change
    of culture (more on this later).</st> <st c="2668">Another key point to note is
    that the primary goal of DevOps is to ensure the speedy and frequent delivery
    of functional software to end users.</st> <st c="2812">If what has been implemented
    does not have this impact, it is likely not DevOps, or it has not been appropriately
    implemented (we will discuss this in more detail in the</st> *<st c="2982">Staying
    clear of DevOps anti-types</st>* <st c="3016">section in this chapter).</st> <st
    c="3043">The last point that we would like to stress is that there are three aspects
    to DevOps.</st> <st c="3130">There is a</st> **<st c="3141">people</st>** <st
    c="3147">aspect, a</st> **<st c="3158">process</st>** <st c="3165">aspect, and
    a</st> **<st c="3180">product</st>** <st c="3187">aspect.</st> <st c="3196">In
    the next section, we will begin by examining the process aspect, but before we
    do that, let’s discuss why organizations are rapidly moving towards a DevOps approach
    for software development</st> <st c="3389">and delivery.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3402">The why of DevOps – Innovation, velocity, and speed</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="3454">While we have</st> <st c="3469">dedicated</st> <st c="3478">significant
    time to discussing the</st> <st c="3513">process, people, and product aspects
    of DevOps, it is equally important to understand the driving factors that lead
    companies to embrace DevOps and the reasons for its growing significance in recent
    years.</st> <st c="3720">DevOps provides unique advantages to companies that other
    software delivery approaches cannot match.</st> <st c="3821">The following points
    are some of the benefits associated with</st> <st c="3883">DevOps adoption:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="3899">Accelerating time to market</st>**<st c="3927">: This refers</st>
    <st c="3942">to the ability to bring new products to market faster.</st> <st c="3997">According
    to research conducted by Puppet, companies that embrace the culture and practices
    of DevOps deploy code 46 times more frequently compared to those that</st> <st
    c="4159">do not.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="4166">Adapting to the market and competition</st>**<st c="4205">:
    This means being able to adapt to changes in the market and competition.</st>
    <st c="4281">For example, Etsy, an online marketplace for handmade and vintage
    goods, uses DevOps practices to deploy code changes 50 times per day.</st> <st
    c="4417">This allows the company to quickly test and launch new features, respond
    to user feedback, and stay ahead</st> <st c="4523">of competitors.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="4538">Maintaining system stability and reliability</st>**<st c="4583">:
    DevOps practices can help organizations maintain system stability and reliability
    by improving communication and collaboration between development and operations
    teams.</st> <st c="4755">For example, Netflix uses a DevOps approach to ensure
    that its streaming service remains available and responsive at all times.</st>
    <st c="4883">The company achieves this by automating its infrastructure deployment
    and using a “chaos monkey” tool to intentionally introduce failures in its systems,
    which helps identify and address weaknesses before they</st> <st c="5093">cause
    problems.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="5108">Improving mean time to recovery</st>**<st c="5140">: By adopting
    DevOps practices, organizations can improve their ability to recover from incidents
    and outages more efficiently.</st> <st c="5269">For instance, Target, a leading
    retail company in the US, reduced its</st> <st c="5338">overall</st> **<st c="5347">mean
    time to recovery (MTTR)</st>** <st c="5375">by 90% after implementing DevOps practices.</st>
    <st c="5420">This allowed the company to minimize the impact of outages and maintain
    high levels of</st> <st c="5507">customer satisfaction.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="5529">With the basics</st> <st c="5545">covered, let’s delve into the
    process used in DevOps to</st> <st c="5601">create</st> <st c="5608">workflows.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5619">Understanding the process aspect of DevOps</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="5662">Whenever DevOps is</st> <st c="5682">discussed, it is tempting
    to make technology or tooling the main focus.</st> <st c="5754">However, without
    well-defined processes in place, any benefits or results achieved from adopting
    DevOps will be limited at best, and it may even create additional challenges</st>
    <st c="5928">and complexities!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5945">In the DevOps methodology, the process aspect refers to the creation
    of an efficient and streamlined workflow for software development, testing, and
    deployment.</st> <st c="6107">The goal is to optimize the development process
    to ensure that software is delivered quickly and reliably to end users while maintaining
    a high level</st> <st c="6257">of quality.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6268">This involves the use of agile development methodologies and</st>
    **<st c="6330">continuous integration and continuous delivery (CI/CD)</st>** <st
    c="6384">practices.</st> <st c="6396">These practices involve automating</st>
    <st c="6431">various aspects of the software development lifecycle, such as code
    testing, building, and deployment.</st> <st c="6534">Generally, when an organization
    adopts a DevOps approach, it must implement five essential practices:</st> **<st
    c="6636">Agile Planning</st>**<st c="6650">,</st> **<st c="6652">Version Control</st>**<st
    c="6667">,</st> **<st c="6669">Continuous Integration</st>** <st c="6691">(</st>**<st
    c="6693">CI</st>**<st c="6695">),</st> **<st c="6699">Continuous Delivery</st>**
    <st c="6718">(</st>**<st c="6720">CD</st>**<st c="6722">), and</st> **<st c="6730">Continuous
    Monitoring</st>** <st c="6751">(see</st> *<st c="6757">Figure 1</st>**<st c="6765">.1</st>*<st
    c="6767">):</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – The five essential practices of DevOps](img/B19710_01_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="6908">Figure 1.1 – The five essential practices of DevOps</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6959">It is worth noting that these are not the only practices in DevOps,
    but they are considered to be crucial ones.</st> <st c="7072">In the next section,
    we will describe these five core practices in</st> <st c="7139">more</st> <st
    c="7144">detail.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7151">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7166">For those keen on exploring</st> <st c="7194">other definitions
    and models related to DevOps, the DevOps</st> **<st c="7254">Competence Model</st>**
    <st c="7270">by</st> <st c="7274">the</st> **<st c="7278">DevOps Agile Skills
    Association</st>** <st c="7309">(</st>**<st c="7311">DASA</st>**<st c="7315">)
    is a valuable resource.</st> <st c="7342">You can find more information about
    it</st> <st c="7381">here:</st> [<st c="7387">https://www.dasa.org/products/guidance-products/team-competence-model/</st>](https://www.dasa.org/products/guidance-products/team-competence-model/)<st
    c="7457">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7458">Understanding the five core practices of DevOps</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="7506">In this section, we will examine the</st> <st c="7543">five fundamental
    practices of DevOps, beginning with</st> <st c="7597">agile planning.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7612">Agile planning</st>** <st c="7627">is a broad</st> <st c="7639">reference
    to techniques used to plan and track our software projects in DevOps.</st> <st
    c="7719">It is a project management approach that involves breaking down a project
    into small, manageable pieces and working on them iteratively.</st> <st c="7856">The
    agile methodology was formally launched in 2001 through the Agile Manifesto, covering
    the main principles of Agile project management.</st> <st c="7995">To get more
    information on the Agile Manifesto, you can go</st> <st c="8054">to</st> [<st
    c="8057">https://agilemanifesto.org/</st>](https://agilemanifesto.org/)<st c="8084">.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8085">The goal is to deliver a functional product incrementally and continuously
    while taking feedback from</st> <st c="8188">the stakeholders.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8205">A simple example of agile planning can be seen in the development
    of a mobile app.</st> <st c="8289">Let’s say a company wants to develop a mobile
    application that can be used to order food from local restaurants.</st> <st c="8402">The
    development team would first identify the key features that the app should have,
    such as a menu, ordering system, payment system, and user profiles.</st> <st c="8555">With
    these requirements in hand, they would then design the architecture of the app.</st>
    <st c="8640">Following this, the team would break down these features into smaller,
    more manageable tasks, such as designing the user interface, creating a database
    to store orders, and integrating the payment system.</st> <st c="8845">The team
    would then prioritize these tasks based on the business value they add and the
    level of effort required to complete them.</st> <st c="8976">Once the tasks are
    prioritized, the team would estimate the time required to complete each task and
    create a sprint plan.</st> <st c="9098">A sprint is a short, time-boxed period
    (usually 1–2 weeks) during which the team works on a set</st> <st c="9194">of
    tasks.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9203">During each sprint, the team would work on the tasks in priority
    order, complete them, and get feedback from stakeholders.</st> <st c="9327">The
    feedback would then be used to make adjustments to the</st> <st c="9385">product
    and the plan for the next sprint.</st> <st c="9428">This process of breaking down
    tasks, prioritizing them, estimating time, and working iteratively with feedback
    is the core of</st> <st c="9554">agile planning.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9569">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9584">To understand the guiding values of agile development, we recommend
    reviewing the twelve principles of agile development that are highlighted</st>
    <st c="9727">here:</st> [<st c="9733">https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/</st>](https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/)<st
    c="9813">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9814">The second practice,</st> **<st c="9836">version control</st>**<st
    c="9851">, allows developers to manage changes to code efficiently, collaborate
    effectively, and keep track of all changes made to the code.</st> *<st c="9983">Figure
    1</st>**<st c="9991">.2</st>* <st c="9993">shows a simple example of how version
    control works in DevOps.</st> <st c="10057">Suppose a team of developers is working
    on a software application.</st> <st c="10124">They create a repository (a central
    location to store code) using</st> <st c="10189">a</st> **<st c="10192">version
    control system</st>** <st c="10214">(</st>**<st c="10216">VCS</st>**<st c="10219">)
    such as Git.</st> <st c="10235">Each developer can clone the repository to their
    local computer, or they might work directly in a controlled development environment,
    eliminating the need to copy code to a local PC.</st> <st c="10418">It is worth
    noting that some companies have strict policies regarding this workflow and do
    not allow code to be</st> <st c="10530">cloned locally.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Version control and branching example](img/B19710_01_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="10648">Figure 1.2 – Version control and branching example</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10698">Let’s say Developer A is assigned to work on feature A; they create
    a new branch in the repository called</st> **<st c="10805">feature A</st>** <st
    c="10814">and start making changes to the code.</st> <st c="10853">Meanwhile,
    Developer B is working on a different feature in the application.</st> <st c="10930">They
    create a new branch called</st> **<st c="10962">feature B</st>** <st c="10971">and
    start making changes to the code.</st> <st c="11010">Both developers can work
    on their features independently without affecting each other’s work.</st> <st
    c="11104">Once they have completed their changes, they can merge their branches
    back into the main branch (also called the</st> **<st c="11217">trunk</st>** <st
    c="11222">branch) in</st> <st c="11233">the repository.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11249">If there are any conflicts</st> <st c="11277">between the changes
    made by the two developers, the VCS will highlight them, and the developers can
    resolve them before merging the branches.</st> <st c="11419">The VCS also keeps
    a record of all changes made to the code, including who made them, when they were
    made, and why they were made.</st> <st c="11550">If there is a problem with the
    new code, the team can use the VCS to roll back to a previous version of the code
    quickly.</st> <st c="11672">This rollback feature is useful if a bug is introduced
    into the code or if the new changes cause</st> <st c="11769">unexpected problems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11789">The third</st> <st c="11800">practice,</st> **<st c="11810">continuous
    integration</st>** <st c="11832">(</st>**<st c="11834">CI</st>**<st c="11836">),
    refers to the ongoing validation of code quality whenever developers contribute
    or modify code.</st> <st c="11936">Suppose a team of developers is working on
    a software project; each time a developer finishes making changes to their code
    and commits those changes to the shared repository, an automatic process is triggered
    on a CI server, such as Jenkins or Travis CI, to build the software, run unit
    tests, and check for code quality issues using various tools.</st> <st c="12285">If
    the build and tests pass successfully, the CI server will notify the team that
    the changes are ready for review and integration.</st> <st c="12417">If any errors
    or issues are detected, the CI server will alert the team, and they can then work
    together to fix the issues before merging the code into the shared repository.</st>
    <st c="12592">This allows the team to catch and fix issues early in the development
    cycle, reducing the risk of bugs and errors in the</st> <st c="12713">final product:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.3 – Sample CI flow](img/B19710_01_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="12833">Figure 1.3 – Sample CI flow</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12860">The fourth practice,</st> **<st c="12882">continuous delivery</st>**
    <st c="12901">(</st>**<st c="12903">CD</st>**<st c="12905">), refers to the ongoing
    testing and deployment of</st> <st c="12957">validated software using an automated
    process.</st> <st c="13004">It allows teams to release new features and bug fixes
    quickly using a continuous process.</st> <st c="13094">The goal of CD is to enable
    development teams to deliver software changes to production quickly and with confidence
    while maintaining a high level of quality</st> <st c="13252">and reliability.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13268">Suppose a team of developers is working on a web application;
    when the team writes code for a new feature, it is committed to a version control
    system and is automatically tested by a series of automated tests, including unit
    tests, integration tests, and acceptance tests.</st> <st c="13543">Once the code
    passes all the tests, it’s automatically deployed to a staging environment where
    it undergoes additional testing and review by the product owner.</st> <st c="13703">If
    everything looks good, the code is then automatically deployed to production,
    where it’s made available to</st> <st c="13813">all users.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13823">The fifth practice</st> <st c="13843">of</st> **<st c="13846">continuous
    monitoring</st>** <st c="13867">involves gathering</st> <st c="13886">feedback
    from users and collecting telemetry data from running applications in real time.</st>
    <st c="13977">The goal is to ensure that software systems are meeting the needs
    of users and delivering value to the organization.</st> <st c="14094">It requires
    gathering continuous insights into the performance and behavior of software systems
    and using that information to make data-driven decisions that improve the overall
    quality and user experience.</st> <st c="14301">To understand this practice better,
    let’s break it down into</st> <st c="14362">two components:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="14377">Gathering feedback from users</st>**<st c="14407">: User feedback
    is an essential component of continuous monitoring because it helps to identify
    issues and areas for improvement in the software system from the user’s perspective.</st>
    <st c="14589">Feedback can be collected through various channels, such as surveys,
    user reviews, and support tickets.</st> <st c="14693">By analyzing this feedback,
    development teams can identify patterns and trends that highlight areas for improvement
    and prioritize these improvements based on their impact on the</st> <st c="14872">user
    experience.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="14888">Collecting telemetry data from running applications</st>**<st
    c="14940">: Telemetry data refers to a broad range of information collected from
    various sources as the software system operates in real time.</st> <st c="15074">These
    sources can include application logs, server metrics, network traffic, user interactions,
    error reports, and more.</st> <st c="15195">Metrics such as response times, error
    rates, and server load, as well as insights into user behavior, can be derived
    from these data.</st> <st c="15329">By collecting and analyzing telemetry data,
    development teams can gain a comprehensive understanding of the software’s performance
    and user interactions.</st> <st c="15483">This data is invaluable for detecting
    anomalies and potential issues before they escalate into</st> <st c="15578">critical
    problems.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="15596">By combining user feedback with telemetry data, development teams
    can gain a comprehensive understanding of how the software system is performing
    and how it is being used.</st> <st c="15769">This information can then be used
    to make data-driven decisions about how to improve the system</st> <st c="15865">and
    prioritize future development efforts.</st> <st c="15908">Overall, the fifth practice
    of continuous monitoring is a crucial part of DevOps that helps to ensure that
    software systems meet the needs of users and deliver value to</st> <st c="16077">the
    organization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16094">Understanding the stages in a DevOps workflow</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="16140">Understanding the</st> <st c="16159">five essential practices
    of DevOps is vital, but how do organizations put them into action?</st> <st c="16251">The
    implementation of DevOps practices involves a set of stages that facilitate the
    constant development, testing, and deployment of software.</st> <st c="16394">These
    stages may differ based on the organization and the type of software being developed,
    but they typically follow the pattern shown in</st> *<st c="16533">Figure 1</st>**<st
    c="16541">.4</st>*<st c="16543">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.4 – Typical stages in a DevOps workflow](img/B19710_01_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="16553">Figure 1.4 – Typical stages in a DevOps workflow</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16601">The first stage is</st> **<st c="16621">Plan</st>**<st c="16625">,
    where the agile planning practice is put into action.</st> <st c="16681">At this
    stage, teams plan and prioritize what needs to be accomplished based on business
    or customer requirements.</st> <st c="16796">This involves creating a project
    plan or roadmap, researching to understand the required architectural changes,
    defining the scope of work (such as feature development or bug fixing), breaking
    down the plan into smaller and assignable tasks, estimating the time required
    for each task, and setting priorities for the tasks that need to be</st> <st c="17135">completed
    first.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17151">The second stage is</st> **<st c="17172">Code</st>**<st c="17176">,
    which involves the actual coding and development of software using the</st> <st
    c="17248">selected programming languages, frameworks, and tools.</st> <st c="17304">It
    is at this stage that version control practices are implemented.</st> <st c="17372">The
    team collaborates to develop the code and commit changes to a version</st> <st
    c="17446">control system.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17461">The third stage is</st> **<st c="17481">Build</st>** <st c="17486">and</st>
    **<st c="17491">Test</st>**<st c="17495">, where continuous integration practices
    are implemented.</st> <st c="17553">In this stage, the code is converted into
    executable software and tested to guarantee that it works as intended and fulfills
    project requirements.</st> <st c="17700">A combination of automated and manual
    tests is employed to detect and resolve any errors, bugs,</st> <st c="17796">or
    defects.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17807">The fourth stage is</st> **<st c="17828">Release</st>** <st c="17835">and</st>
    **<st c="17840">Deploy</st>**<st c="17846">, where the software is packaged and
    released into the production environment.</st> <st c="17925">This is where continuous
    delivery practices are implemented.</st> <st c="17986">This stage involves setting
    up the infrastructure required to run the software and configuring it to work,
    deploying the software into a pre-production environment to run additional validation,
    and deploying validated software</st> <st c="18213">into production.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18229">The fifth stage is</st> **<st c="18249">Operate</st>** <st c="18256">and</st>
    **<st c="18261">Monitor</st>**<st c="18268">, where the software is actively monitored
    and maintained.</st> <st c="18327">The team watches for any issues or incidents
    after deployment, examining the application’s performance, collecting and analyzing
    logs, and ensuring that the software complies with</st> <st c="18507">defined</st>
    **<st c="18515">service level agreements</st>** <st c="18539">(</st>**<st c="18541">SLAs</st>**<st
    c="18545">).</st> <st c="18549">In this stage, continuous monitoring tools and
    practices are used to track the application’s performance, gather usage telemetry
    and performance metrics, and detect any potential issues before impacting users.</st>
    <st c="18759">The gathered information is then used to identify areas for optimization
    or additional features to be added.</st> <st c="18868">A</st> **<st c="18870">self-healing</st>**
    <st c="18883">approach</st> <st c="18891">that leverages automation is increasingly
    popular at this stage.</st> <st c="18957">This approach involves using automation
    to correct any failures or errors without requiring human intervention, such as
    terminating a problematic application instance and deploying a replacement instance
    or triggering failover to a passive instance in the case of unexpected events.</st>
    <st c="19240">Implementing this approach significantly improves system availability
    and reliability and enables faster and more efficient recovery</st> <st c="19373">from
    failures.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19387">These stages form a continuous cycle that empowers teams to continuously
    deliver value to end users while enhancing their software development procedures.</st>
    <st c="19543">Keep in mind that speed is</st> <st c="19570">crucial to a successful
    DevOps workflow!</st> <st c="19611">It is essential that each stage is executed
    quickly and efficiently (we will revisit this aspect when we talk about</st> <st
    c="19727">security integrations).</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19750">Understanding the people aspect of DevOps</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="19792">Simply implementing</st> <st c="19812">DevOps practices in a continuous
    workflow is insufficient to fully unlock its potential; a cultural component is
    also necessary.</st> <st c="19942">Implementing DevOps methodologies delivers
    better results in a culture that promotes communication, collaboration, and shared
    responsibility among the members of development and operations teams.</st> <st
    c="20138">However, for many organizations (particularly larger ones), this proves
    to be the most difficult aspect of embracing DevOps since it involves a change
    in mindset and company culture, which can challenge established policies and procedures
    that have yielded positive results</st> <st c="20412">thus far.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20421">The importance of a collaborative culture</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="20463">To realize the full</st> <st c="20484">potential of DevOps, an
    organization must embrace a collaborative culture!</st> <st c="20559">By this,
    we mean a culture that breaks down team silos and allows developers, operations
    engineers, and other stakeholders to work together to achieve the shared goal
    of continuously delivering high-quality software to customers.</st> <st c="20789">This
    can be achieved by creating cross-functional teams or</st> <st c="20848">vertical
    teams.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20863">Traditionally, large organizations have organized their teams
    in a horizontal structure based on particular skill sets or functional areas such
    as development, testing, or operations (as shown in</st> *<st c="21060">Figure
    1</st>**<st c="21068">.5</st>*<st c="21070">).</st> <st c="21074">Each team concentrates
    on their area of expertise and only handles tasks within that domain.</st> <st
    c="21167">The teams are separated by a boundary (as illustrated in</st> *<st c="21224">Figure
    1</st>**<st c="21232">.6.</st>*<st c="21235">) and are measured using different
    performance metrics, which frequently results</st> <st c="21317">in conflicts.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Team boundaries in software development](img/B19710_01_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="21373">Figure 1.5 – Team boundaries in software development</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21425">On the other hand, DevOps advocates for and flourishes in teams
    that are organized vertically around particular products or services, also known
    as cross-functional teams.</st> <st c="21598">This structure brings together individuals
    from diverse functional areas to collaborate on a common objective of delivering
    a specific product or service.</st> <st c="21753">Each team member possesses a
    wide range of skills and is responsible for contributing to the delivery of that
    product or service.</st> <st c="21883">The teams are also measured using a shared
    set of performance metrics, which encourages team members to leverage each other’s
    skills and expertise to achieve shared goals.</st> <st c="22055">For example,
    a vertical team may be composed of developers, testers, and operations engineers
    collaborating to deliver a specific application or service, as shown in the</st>
    <st c="22225">following figure:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.6 – Vertical team boundaries](img/B19710_01_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="22315">Figure 1.6 – Vertical team boundaries</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22352">It is crucial to note that while the composition of teams is vital,
    the presence of a guiding figure, often a servant-leader type, is equally important.</st>
    <st c="22506">Teams require clear direction and leadership to function optimally.</st>
    <st c="22574">This leader ensures that the team remains aligned with its goals,
    facilitates collaboration, and provides the necessary support to</st> <st c="22705">address
    challenges.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22724">There are other cultural components of DevOps, such as fostering
    a culture of continuous</st> <st c="22813">learning and experimentation, ownership,
    and accountability.</st> <st c="22875">However, we recommend reading</st> *<st
    c="22905">The Phoenix Project</st>* <st c="22924">by Gene Kim for a more detailed
    understanding of</st> <st c="22974">these components.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22991">Staying clear of DevOps anti-types</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="23026">When implementing a</st> <st c="23046">DevOps culture, it is important
    to be aware of potential anti-patterns and anti-types.</st> <st c="23134">These
    are ineffective and sometimes counterproductive approaches that can hinder the
    successful implementation</st> <st c="23245">of DevOps.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23255">For example, in an effort to implement DevOps, a manager or executive
    may create a separate DevOps team, which can further divide development and operations
    teams (</st>*<st c="23420">Figure 1</st>**<st c="23429">.7</st>*<st c="23431">).</st>
    <st c="23435">The only time this separation may make sense is when the team is
    temporary, with a clear mandate to bring the teams</st> <st c="23551">closer together:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.7 – Anti-type pattern 1](img/B19710_01_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="23589">Figure 1.7 – Anti-type pattern 1</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23621">Another common anti-type is when developers or development managers
    assume they can do without operational skills and activities (</st>*<st c="23752">Figure
    1</st>**<st c="23761">.8</st>*<st c="23763">).</st> <st c="23767">This misconception
    is often rooted in a misguided understanding of cloud computing, which assumes
    that the self-service nature of cloud computing makes operational skills obsolete.</st>
    <st c="23948">However, this perspective grossly</st> <st c="23982">underestimates
    the complexities and significance of operational skills and results in avoidable</st>
    <st c="24078">operational mistakes:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.8 – Anti-type pattern 2](img/B19710_01_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="24121">Figure 1.8 – Anti-type pattern 2</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24153">Yet another anti-type is when organizations simply rename their
    operations team as a DevOps or</st> **<st c="24249">site reliability engineering</st>**
    <st c="24277">(</st>**<st c="24279">SRE</st>**<st c="24282">) team without making
    any real change to their</st> <st c="24330">processes or silos (refer to</st>
    *<st c="24359">Figure 1</st>**<st c="24367">.9</st>*<st c="24369">).</st> <st
    c="24373">This approach fails to understand or appreciate the importance of bringing
    individuals of different expertise together to work collaboratively towards</st>
    <st c="24524">shared goals:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.9 – Anti-type pattern 3](img/B19710_01_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="24555">Figure 1.9 – Anti-type pattern 3</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24587">SRE is a discipline that incorporates aspects of software engineering
    and applies them to infrastructure and operations problems.</st> <st c="24718">The
    main goal of an SRE team is to create scalable and highly reliable software systems.</st>
    <st c="24807">While SRE aligns closely with the DevOps philosophy, merely renaming
    an operations team to SRE without adopting its principles or practices can be
    considered an anti-pattern.</st> <st c="24982">It is not just about the title
    but about embracing the</st> <st c="25037">methodologies, practices, and culture
    that both DevOps and SRE</st> <st c="25100">advocate for.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25113">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25128">For a more detailed analysis of DevOps anti-types and patterns,
    please refer to the book</st> *<st c="25218">Team Topologies</st>* <st c="25233">by
    Matthew Skelton and</st> <st c="25257">Manuel Pais.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25269">Understanding the product aspect of DevOps – The toolchain</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="25328">While DevOps itself is not</st> <st c="25356">a tool or product,
    it requires the use of tools to effectively implement its processes and practices.</st>
    <st c="25458">Both open source and commercial tools are available to support the
    necessary processes for every phase of the DevOps workflow discussed earlier in
    this chapter (Plan, Code, Build and Test, Release and Deploy, and Operate</st>
    <st c="25679">and Monitor).</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25692">Common tools</st> <st c="25705">used in the</st> **<st c="25718">planning
    phase</st>** <st c="25732">include</st> **<st c="25741">Trello</st>**<st c="25747">,</st>
    **<st c="25749">JIRA</st>**<st c="25753">,</st> **<st c="25755">Notion</st>**<st
    c="25761">, and</st> **<st c="25767">Asana</st>**<st c="25772">. According to
    the latest Stack Overflow Developer Survey, professional developers prefer JIRA
    (49%), whereas Trello is most used by those learning to</st> <st c="25923">code
    (43%):</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.10 – Common tools used in the planning phase](img/B19710_01_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="26026">Figure 1.10 – Common tools used in the planning phase</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26079">During</st> <st c="26086">the</st> **<st c="26091">code and development
    phase</st>**<st c="26117">, developers use</st> **<st c="26134">integrated development
    environments</st>** <st c="26169">(</st>**<st c="26171">IDEs</st>**<st c="26175">),
    such</st> <st c="26183">as</st> **<st c="26187">Visual Studio Code</st>**<st c="26205">,</st>
    **<st c="26207">Visual Studio</st>**<st c="26220">,</st> **<st c="26222">IntelliJ</st>**<st
    c="26230">,</st> **<st c="26232">Notepad++,</st>** <st c="26242">and</st> **<st
    c="26247">Eclipse</st>**<st c="26254">, for</st> <st c="26260">coding</st> <st
    c="26266">purposes</st> <st c="26276">and</st> <st c="26280">version control tools,
    such</st> <st c="26307">as</st> **<st c="26311">Git</st>** <st c="26314">(self-hosted
    or cloud-hosted),</st> **<st c="26346">Apache Subversion</st>** <st c="26363">(</st>**<st
    c="26365">SVN</st>**<st c="26368">),</st> **<st c="26372">Perforce</st>**<st c="26380">,
    and</st> **<st c="26386">Mercurial</st>**<st c="26395">. It is important</st>
    <st c="26412">to note</st> <st c="26420">that while this list highlights</st>
    <st c="26453">some of the more common tools, it is by no means exhaustive.</st>
    <st c="26514">There are countless other tools available on the market, each with
    its unique features and capabilities.</st> <st c="26619">According to the 2022
    Stack Overflow Developer Survey, professional developers overwhelmingly prefer
    Git as their version control</st> <st c="26749">tool (96%) and Visual Studio Code
    as their</st> <st c="26792">IDE (74%):</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.11 – Common code and development tools](img/B19710_01_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="26922">Figure 1.11 – Common code and development tools</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26969">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26984">The Stack Overflow Developer Survey is an annual survey conducted
    by Stack Overflow, a popular online community for developers.</st> <st c="27113">The
    survey aims to gather insights into the preferences, opinions, and demographics
    of the developer community.</st> <st c="27225">The 2022 edition can be found</st>
    <st c="27255">here:</st> [<st c="27261">https://survey.stackoverflow.co/2022</st>](https://survey.stackoverflow.co/2022)<st
    c="27297">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27298">In the</st> **<st c="27306">build and test phase</st>**<st c="27326">,
    tools</st> <st c="27333">such as</st> **<st c="27342">Jenkins</st>** <st c="27349">(an
    open source automation server),</st> **<st c="27386">Travis CI</st>**<st c="27395">,
    and</st> **<st c="27401">Circle CI</st>** <st c="27410">are widely used for continuous
    integration and to build and test automation.</st> <st c="27488">According to
    a recent survey by Digital.ai, Jenkins is used by 56% of DevOps teams, showing
    its popularity in the industry.</st> <st c="27612">In addition, test tools such
    as</st> **<st c="27644">Selenium</st>**<st c="27652">,</st> **<st c="27654">Junit</st>**
    <st c="27659">(a unit testing tool for Java),</st> **<st c="27692">Nunit</st>**
    <st c="27697">(a unit testing tool for .NET),</st> **<st c="27730">PHPUnit</st>**
    <st c="27737">(a unit testing tool for PHP), and</st> **<st c="27773">Jmeter</st>**
    <st c="27779">(a load testing tool for performance testing) can be integrated
    with build automation servers to facilitate testing procedures.</st> <st c="27908">Container
    build tools such as</st> **<st c="27938">Docker Build</st>** <st c="27950">(a
    tool for building container images from a Dockerfile),</st> **<st c="28009">Podman
    Build</st>** <st c="28021">(a tool for building and managing containers using
    Containerfiles and Dockerfiles),</st> **<st c="28106">Buildah</st>** <st c="28113">(an
    open source tool for creating and modifying container images), and</st> **<st
    c="28185">Kaniko</st>** <st c="28191">(a secure container build tool designed
    for Kubernetes clusters) can also be integrated to streamline container</st> <st
    c="28304">image building.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.12 – Common tools used in the build and test phase](img/B19710_01_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="28395">Figure 1.12 – Common tools used in the build and test phase</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28454">During</st> <st c="28462">the</st> **<st c="28466">release and
    deploy phase</st>**<st c="28490">, developers use various tools</st> <st c="28521">to
    automate deployments.</st> <st c="28546">The following table shows some of the
    tools used in the release and</st> <st c="28614">deploy phase:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '| **<st c="28627">Deployment</st>** |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28638">GoCD</st>** | <st c="28643">An open source continuous delivery
    tool that automates</st> <st c="28699">deployment pipelines</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28719">Octopus Deploy</st>** | <st c="28734">A deployment automation
    and release</st> <st c="28771">management tool</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28786">TeamCity</st>** | <st c="28795">A build management and continuous</st>
    <st c="28830">integration server</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28848">Spinnaker</st>** | <st c="28858">An open source, multi-cloud
    continuous</st> <st c="28898">delivery platform</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28915">ArgoCD</st>** | <st c="28922">A declarative continuous delivery
    tool</st> <st c="28962">for Kubernetes</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28976">Infrastructure</st>** **<st c="28992">as Code</st>** |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="28999">Terraform</st>** | <st c="29009">An open source infrastructure-as-code</st>
    <st c="29048">software tool</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29061">Azure</st>** **<st c="29068">ARM templates</st>** | <st c="29081">A
    deployment tool that allows for the definition of the infrastructure and configuration
    of</st> <st c="29174">Azure resources</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29189">Azure</st>** **<st c="29196">BICEP templates</st>** | <st
    c="29211">An ARM template language replacement for deploying</st> <st c="29263">Azure
    resources</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29278">AWS Cloud</st>** **<st c="29289">Formation templates</st>**
    | <st c="29308">An open source multi-cloud continuous</st> <st c="29347">delivery
    platform</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29364">Container deployment</st>** |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29385">Helm charts</st>** | <st c="29397">A package manager for
    Kubernetes that helps manage</st> <st c="29449">Kubernetes applications</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29472">Kubernetes</st>** **<st c="29484">manifest files</st>** |
    <st c="29498">A YAML or JSON file that defines the desired state of the</st> <st
    c="29557">Kubernetes objects</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29575">Configuration</st>** **<st c="29590">management tools</st>**
    |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29606">Ansible</st>** | <st c="29614">An open source automation
    engine that automates software provisioning, configuration management, and</st>
    <st c="29716">application deployment</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29738">Chef</st>** | <st c="29743">A configuration management tool
    that helps</st> <st c="29787">automate infrastructure</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29810">Puppet</st>** | <st c="29817">An open source tool for managing
    the configuration of Unix, Linux, and Microsoft</st> <st c="29899">Windows servers</st>
    |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="29914">PowerShell Desired State</st>** **<st c="29940">Configuration
    (DSC)</st>** | <st c="29959">A PowerShell extension that enables the configuration
    of</st> <st c="30017">Windows systems</st> |'
  prefs: []
  type: TYPE_TB
- en: <st c="30032">Table 1.1 – Tools used in the release and deploy phase</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30087">During the</st> **<st c="30099">operate and monitor phase</st>**<st
    c="30124">, several tools can be used.</st> <st c="30153">Some are highlighted</st>
    <st c="30173">in the</st> <st c="30181">following table:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '| **<st c="30197">OpenTelemetry</st>** | <st c="30211">An open source observability
    framework for generating and collecting telemetry data from applications</st>
    <st c="30314">and infrastructure</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="30332">Jaeger</st>** | <st c="30339">An open source, distributed
    tracing system for monitoring and troubleshooting</st> <st c="30418">microservices-based
    applications</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="30450">Zipkin</st>** | <st c="30457">An open source, distributed
    tracing system for collecting, analyzing, and visualizing traces of requests through</st>
    <st c="30571">microservice architectures</st> |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="30597">Prometheus</st>** | <st c="30608">An open source monitoring
    system and time-series database for collecting and querying metrics from applications</st>
    <st c="30721">and infrastructure</st> |'
  prefs: []
  type: TYPE_TB
- en: <st c="30739">Table 1.2 – Tools used in the operate and monitor phase</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30795">A tool such as</st> **<st c="30811">Prometheus</st>** <st c="30821">can
    be</st> <st c="30828">used to instrument application code and generate telemetry
    data such as metrics, logs, and traces.</st> <st c="30928">Prometheus,</st> **<st
    c="30940">Grafana</st>**<st c="30947">, and</st> **<st c="30953">ELK stack</st>**
    <st c="30962">(Elasticsearch, Logstash, or Kibana) can be utilized to monitor
    the performance</st> <st c="31043">and</st> <st c="31046">availability of</st>
    <st c="31063">applications and infrastructure, providing insights into potential
    issues and enabling</st> <st c="31150">proactive remediation.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31172">Collaboration and communication tools</st> <st c="31210">such</st>
    <st c="31215">as</st> **<st c="31219">Slack</st>**<st c="31224">,</st> **<st c="31226">Microsoft
    Teams</st>**<st c="31241">,</st> **<st c="31243">Azure Boards</st>**<st c="31255">,
    and</st> **<st c="31261">Atlassian Confluence</st>** <st c="31281">can be used
    to facilitate</st> <st c="31307">communication</st> <st c="31321">and collaboration
    between teams, helping to streamline workflows and</st> <st c="31391">improve
    productivity.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31412">Developers have access to a wide variety of tools for each phase
    that extends beyond the ones we have mentioned.</st> <st c="31526">To understand
    the abundance of tooling options available, we suggest referring to the cloud-native
    landscape map provided by the</st> **<st c="31655">Cloud Native Computing Foundation</st>**
    <st c="31688">(</st>**<st c="31690">CNCF</st>**<st c="31694">) at</st> [<st c="31700">https://landscape.cncf.io/</st>](https://landscape.cncf.io/)<st
    c="31726">. The map (</st>*<st c="31737">Figure 1</st>**<st c="31746">.13</st>*<st
    c="31749">) is</st> <st c="31755">designed to help people navigate the various
    tools, technologies, and platforms that are available in the cloud-native space.</st>
    <st c="31881">It showcases tooling across several categories, such as application
    development, continuous integration and delivery, automation,</st> <st c="32011">and
    configuration.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.13 – A screenshot of the CNCF landscape map](img/B19710_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="32898">Figure 1.13 – A screenshot of the CNCF landscape map</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32950">As teams adopt DevOps practices, they often select multiple tools
    based on preferences rather than considering overall compatibility with the organization’s
    DevOps strategy (unfortunately, many organizations do not have a defined strategy
    for adopting DevOps).</st> <st c="33212">As a result, fragmented toolchains can
    be a common occurrence where different teams and product units use different tools
    that may not integrate or work well together, hindering the ability to scale software
    delivery and leading to governance challenges.</st> <st c="33467">With</st> <st
    c="33472">multiple tools in use, it can be difficult to establish and enforce
    governance and compliance policies related to access control and data privacy.</st>
    <st c="33619">To address these challenges, a platform approach to tooling may</st>
    <st c="33683">be preferred.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33696">The platform approach to DevOps tooling</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="33736">Instead of using</st> <st c="33753">multiple</st> <st c="33763">disjointed
    tools for each stage of the DevOps workflow, some organizations opt for a platform
    strategy that offers a single integrated platform with tools for each phase.</st>
    <st c="33934">This approach can simplify the DevOps tooling landscape, making
    it easier to manage and reducing the need for manual integration between</st>
    <st c="34071">different tools.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34087">Based on industry reports and surveys, here are five of the most
    commonly used and highly regarded commercial DevOps</st> <st c="34205">platform
    offerings:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="34224">GitLab</st>**<st c="34231">: An all-in-one DevOps platform
    that provides a single application for source code management, continuous integration,
    testing,</st> <st c="34360">and deployment.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="34375">Azure DevOps</st>**<st c="34388">: A Microsoft cloud-based
    platform that offers a set of DevOps services for developers to plan, develop,
    test, and</st> <st c="34504">deploy applications.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="34524">GitHub</st>**<st c="34531">: Another Microsoft cloud-based
    platform that offers a set of DevOps services for developers to plan, develop,
    test, and</st> <st c="34653">deploy applications.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="34673">Atlassian</st>**<st c="34683">: Atlassian offers a range of
    tools for DevOps teams, including Jira for issue tracking, Bitbucket for source
    code management, and Bamboo for continuous integration</st> <st c="34849">and
    deployment.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="34864">Amazon Web Services (AWSs) DevOps</st>**<st c="34898">: AWSs
    offers a suite of tools and services for</st> <st c="34947">DevOps, including
    AWS CodePipeline, AWS CodeCommit, and</st> <st c="35003">AWS CodeDeploy.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="35018">Two of these</st> <st c="35032">platforms are Microsoft</st>
    <st c="35056">offerings that bring the tools needed to implement DevOps processes
    together in one place: Azure DevOps</st> <st c="35160">and GitHub.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35171">An overview of the Azure DevOps platform</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**<st c="35212">Azure DevOps</st>** <st c="35225">is a Microsoft</st> <st c="35241">cloud
    platform</st> <st c="35256">with services that help teams implement DevOps processes.</st>
    <st c="35314">To use it, we need to create an Azure DevOps Organization (</st>*<st
    c="35373">Figure 1</st>**<st c="35382">.14</st>*<st c="35385">).</st> <st c="35389">Within
    the organization, we can create separate projects for different software projects
    that we are working on, as shown in</st> *<st c="35514">Figure 1</st>**<st c="35522">.14</st>*<st
    c="35525">. Within each project, we have access to the services that we can use
    to implement DevOps processes, and we can organize teams to work on different
    parts of</st> <st c="35682">the project:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.14 – Azure DevOps Organization hierarchy](img/B19710_01_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="35918">Figure 1.14 – Azure DevOps Organization hierarchy</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35967">The Azure DevOps platform has five core services.</st> <st c="36018">These
    services are connected to key practices in the</st> <st c="36071">development
    process, such</st> <st c="36097">as planning, controlling changes to code, and
    testing.</st> <st c="36152">These are the five core services of</st> <st c="36188">Azure
    DevOps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="36201">Azure Boards</st>** <st c="36214">for planning</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36227">Azure Repos</st>** <st c="36239">for controlling</st> <st c="36256">code
    changes</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36268">Azure Pipelines</st>** <st c="36284">for continuous integration</st>
    <st c="36312">and delivery</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36324">Azure Artifacts</st>** <st c="36340">for</st> <st c="36345">package
    management</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36363">Azure Test Plans</st>** <st c="36380">for exploratory</st>
    <st c="36397">test planning</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 1.15 – Azure DevOps core services](img/B19710_01_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="36492">Figure 1.15 – Azure DevOps core services</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36532">Let’s briefly look at these five services, starting with</st>
    <st c="36590">Azure Boards:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="36603">Azure Boards</st>**<st c="36616">: A tool that</st> <st c="36631">helps
    us to plan, track, and visualize work, similar to JIRA.</st> <st c="36693">It
    can be used with Scrum or Kanban methods and has four different templates from
    which to choose.</st> <st c="36792">It also has interactive boards and reporting
    tools to help us keep track of</st> <st c="36868">our work.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36877">Azure Repos</st>**<st c="36889">: A source control management
    service for managing changes to code.</st> <st c="36958">It works with two types
    of code management: Git and</st> **<st c="37010">team foundation version control</st>**
    <st c="37041">(</st>**<st c="37043">TFVC</st>**<st c="37047">).</st> <st c="37051">It
    is</st> <st c="37057">also integrated with other services in Azure DevOps</st>
    <st c="37109">for traceability.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="37126">Azure Pipelines</st>**<st c="37142">: A tool that helps us
    to automatically build, test, and deploy code.</st> <st c="37213">It can be used
    to implement the process of continuous integration and continuous delivery.</st>
    <st c="37304">It works with many different types of programming languages and
    platforms, including Python, Java, PHP, Ruby, C#, and Go.</st> <st c="37426">We
    can also use it to deploy your code to various types of targets, including on-premises
    servers or</st> <st c="37527">cloud services.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="37542">Azure Artifacts</st>**<st c="37558">: A tool that helps us
    to store, manage, and organize software packages.</st> <st c="37632">We can choose
    and control who we want to share packages with.</st> <st c="37694">It allows us
    to download packages from upstream sources.</st> <st c="37751">It works with different
    types of packages, such as NuGet, NPM, Maven, Universal,</st> <st c="37832">and
    Python.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="37843">Azure Test Plans</st>**<st c="37860">: A cloud-hosted test
    management solution that we can use to plan and track the results of different
    types of tests.</st> <st c="37978">We can use it to plan and track manual</st>
    <st c="38017">tests, user</st> <st c="38028">acceptance tests, exploratory tests,
    and even automated tests.</st> <st c="38092">We can use any supported browser
    to access the tool and run manual tests through an easy-to-use web portal.</st>
    <st c="38200">It supports end-to-end traceability for tracking the progress and
    quality of our requirements and builds and provides us with data and reports to
    improve our</st> <st c="38358">testing processes.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="38376">One good thing about the Azure DevOps platform is that we’re not
    forced to use its services.</st> <st c="38470">We can choose which services we
    want to use for a software project and turn off the ones we</st> <st c="38561">don’t</st>
    <st c="38568">need (</st>*<st c="38574">Figure 1</st>**<st c="38583">.16</st>*<st
    c="38586">).</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.16 – Enable/Disable Azure DevOps services](img/B19710_01_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="39020">Figure 1.16 – Enable/Disable Azure DevOps services</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39070">An overview of the GitHub platform</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="39105">The GitHub platform</st> <st c="39125">provides a variety</st>
    <st c="39144">of product options to accommodate teams and organizations of varying
    sizes.</st> <st c="39221">The options include</st> <st c="39241">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="39255">GitHub Free</st>**<st c="39267">: This is a free, basic version
    that is good for small personal projects or open</st> <st c="39349">source projects.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39365">GitHub Pro</st>**<st c="39376">: This is a paid version that
    has extra features such as advanced protection capabilities, protected branches,
    and code owners.</st> <st c="39505">It’s good for developers who need more</st>
    <st c="39544">advanced tools.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39559">GitHub Team</st>**<st c="39571">: This version includes all
    of the features of GitHub Pro and has team management tools.</st> <st c="39661">It’s
    good for teams that need to collaborate on projects.</st> <st c="39719">If your
    organization has 11 or fewer developers, consider</st> <st c="39777">GitHub Team.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39789">GitHub Enterprise</st>**<st c="39807">: This version is for
    large organizations that need even advanced features such as SAML</st> **<st c="39896">single
    sign-on</st>** <st c="39910">(</st>**<st c="39912">SSO</st>**<st c="39915">),
    data residency compliance, and advanced security capabilities.</st> <st c="39982">It’s
    good for large organizations that need to follow specific security and regulatory
    requirements.</st> <st c="40083">Organizations with 12 or more developers typically
    benefit the most from GitHub Enterprise.</st> <st c="40175">The Enterprise version
    also offers two options: Enterprise server, which is hosted on customer-managed
    infrastructure, and Enterprise cloud, which</st> <st c="40322">is cloud-hosted.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 1.17 – GitHub platform product options](img/B19710_01_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="40493">Figure 1.17 – GitHub platform product options</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="40538">Throughout the</st> <st c="40554">remainder of this book, our
    focus</st> <st c="40588">will be on the GitHub Enterprise Cloud product offering.</st>
    <st c="40645">For us to use GitHub Enterprise Cloud, we need to create a GitHub
    Organization (</st>*<st c="40725">Figure 1</st>**<st c="40734">.18</st>*<st c="40737">).</st>
    <st c="40741">An organization is a shared,</st> **<st c="40770">private</st>**
    <st c="40777">GitHub account where enterprise members can collaborate across many
    projects at once.</st> <st c="40864">Within the organization, we can create</st>
    **<st c="40903">repositories</st>**<st c="40915">, which are like projects in
    Azure DevOps.</st> <st c="40958">It is a good idea to create a separate repository
    for each project that the organization is</st> <st c="41050">working on.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.18 – GitHub Organization hierarchy](img/B19710_01_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="41330">Figure 1.18 – GitHub Organization hierarchy</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="41373">A company can have multiple GitHub organizations.</st> <st c="41424">To
    simplify visibility, management, and billing, it is recommended to create an enterprise
    account to manage all organizations that belong to your company (</st>*<st c="41580">Figure
    1</st>**<st c="41589">.19</st>*<st c="41592">).</st> <st c="41596">Creating an
    enterprise account is optional, but it is free and will not add any additional
    charges for GitHub Enterprise Cloud customers.</st> <st c="41734">Even if a company
    only has one organization, it is still beneficial to create an enterprise account.</st>
    <st c="41835">With an enterprise account, we can manage and enforce</st> <st c="41889">policies
    for all the organizations</st> <st c="41924">owned by our company.</st> <st c="41946">We
    can even choose policies that we want to enforce at the enterprise level while
    allowing organization owners to configure other policies at the</st> <st c="42092">organization
    level.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.19 – GitHub Enterprise Account](img/B19710_01_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="42259">Figure 1.19 – GitHub Enterprise Account</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="42298">The GitHub Enterprise Cloud platform offers a range of services
    that we can use for different stages of the code-to-cloud process.</st> <st c="42430">These
    services include</st> <st c="42453">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="42467">Projects</st>** <st c="42476">for planning, organizing, collaborating,
    and tracking software</st> <st c="42540">development projects.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42561">Codespaces</st>** <st c="42572">for writing code in a cloud-based</st>
    <st c="42607">development environment.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42631">Copilot</st>** <st c="42639">for machine learning-assisted</st>
    <st c="42670">code writing.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42683">Repos</st>** <st c="42689">for managing private and public</st>
    <st c="42722">code repositories.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42740">Actions</st>** <st c="42748">for automating building, testing,
    and deployment</st> <st c="42798">of code.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42806">Packages</st>** <st c="42815">for sharing and discovering reusable</st>
    <st c="42853">code packages.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="42867">Security</st>** <st c="42876">for scanning and detecting security
    issues in</st> <st c="42923">code repositories.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="42941">The following</st> <st c="42955">image shows the layout of the</st>
    <st c="42986">GitHub services:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.20 – GitHub services](img/B19710_01_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="43075">Figure 1.20 – GitHub services</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="43104">Let’s briefly look at these five services, starting with</st>
    <st c="43162">GitHub Projects:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="43178">GitHub Projects</st>**<st c="43194">: A tool that we</st> <st
    c="43212">can use to plan, organize, and keep track of software projects.</st>
    <st c="43276">We can use it to assign tasks, collaborate with others, and add
    extra information to keep track of progress.</st> <st c="43385">It also has the
    capability to report on completed and</st> <st c="43439">outstanding work.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="43456">Codespaces</st>**<st c="43467">: This offers a convenient cloud-based
    development environment where developers can run, test, debug, and push code without
    the need for local machine setup.</st> <st c="43626">Upon creating a codespace,
    developers are automatically provided with an already configured system that includes
    SDKs and runtime for various languages such as Python, Node, Docker, Java, Rust,
    Go, and C++.</st> <st c="43833">The default image can be fully customized to suit
    individual or team needs, allowing for a faster setup time for</st> <st c="43946">each
    repository.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="43962">GitHub Copilot</st>**<st c="43977">: An AI pair programmer
    tool powered by OpenAI Codex, a machine learning model developed by OpenAI (a
    popular AI research and deployment company).</st> <st c="44125">Copilot provides
    code suggestions as developers write code in their IDEs.</st> <st c="44199">It
    can also interpret natural language comments and turn them into code.</st> <st
    c="44272">It supports multiple programming languages as it is trained on all languages
    that appear in public repositories.</st> <st c="44385">Copilot can be used as
    an extension in supported IDEs, such as Visual Studio Code, Visual Studio, Neovim,
    and the JetBrains suite</st> <st c="44515">of IDEs.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="44523">GitHub Repos</st>**<st c="44536">: A source control management
    service for managing changes to code.</st> <st c="44605">Unlike Azure DevOps,
    it</st> *<st c="44629">only</st>* <st c="44633">supports Git, which is a distributed
    source control.</st> <st c="44687">It is also integrated with other services in
    GitHub</st> <st c="44739">for traceability.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="44756">GitHub Actions</st>**<st c="44771">: A tool that helps us to
    automatically build, test, and deploy code.</st> <st c="44842">It can be used
    to implement the process of continuous integration and continuous</st> <st c="44923">delivery.</st>
    <st c="44933">It works</st> <st c="44941">with many different types of programming
    languages and platforms, including Python, Java, PHP, Ruby, C#, and Go.</st> <st
    c="45055">We can also use it to deploy code to various types of targets, including
    on-premises servers or</st> <st c="45151">cloud services.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="45166">GitHub Packages</st>**<st c="45182">: A tool that helps us
    to store, manage, and organize software packages.</st> <st c="45256">We can choose
    and control who we want to share packages with.</st> <st c="45318">It allows us
    to download packages from upstream sources.</st> <st c="45375">It works with different
    types of packages, such as NuGet, NPM, Maven, Universal,</st> <st c="45456">and
    Python.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="45467">GitHub Advanced Security</st>**<st c="45492">: This provides
    a range of tools to secure code in our repositories.</st> <st c="45562">It scans
    for vulnerable dependencies and allows us to automatically raise pull requests
    to fix them.</st> <st c="45663">It detects security vulnerabilities and coding
    errors in new or modified code.</st> <st c="45742">It can also identify any tokens
    or credentials accidentally committed to a repository.</st> <st c="45829">We will
    discuss this service in detail in the later</st> <st c="45880">chapters of</st>
    <st c="45893">this book.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="45903">Let’s have a</st> <st c="45916">quick look at another DevOps</st>
    <st c="45946">platform: GitLab.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="45963">An overview of the GitLab platform</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="45998">GitLab is a web-based</st> <st c="46020">Git repository management</st>
    <st c="46046">tool that provides an end-to-end DevOps solution.</st> <st c="46097">Similar
    to other DevOps platforms, GitLab also has core services that support various
    stages of the DevOps workflow.</st> <st c="46214">These services are</st> <st
    c="46233">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="46247">GitLab Issues</st>**<st c="46261">: It is an Agile</st> <st
    c="46278">project management tool that helps teams to plan and organize their
    work using either Scrum or Kanban methodologies.</st> <st c="46396">With GitLab
    Boards, teams can easily track their progress, visualize their work, and collaborate
    with</st> <st c="46498">team members.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="46511">GitLab Repository</st>**<st c="46529">: GitLab is primarily
    known for its version control system.</st> <st c="46590">It provides a centralized
    platform for teams to store, manage, and collaborate on their codebase using Git.</st>
    <st c="46698">Teams can use GitLab Repository with either Git or Mercurial, and
    they can easily import their codebase from</st> <st c="46807">other repositories.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="46826">GitLab CI/CD</st>**<st c="46839">: GitLab’s CI/CD tool allows
    teams to automate their software delivery processes.</st> <st c="46922">GitLab
    CI/CD enables teams to build, test, and deploy their applications across various
    environments in a secure and</st> <st c="47039">efficient manner.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="47056">GitLab Container Registry</st>**<st c="47082">: GitLab Container
    Registry is a built-in container registry that enables teams to store, manage,
    and deploy their Docker images.</st> <st c="47213">Teams can use GitLab Container
    Registry to create and manage their images and then deploy them to their</st>
    <st c="47317">preferred platform.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="47336">GitLab Monitor</st>**<st c="47351">: GitLab Monitor is a monitoring
    tool that provides real-time visibility into the performance of applications and
    infrastructure.</st> <st c="47482">Teams can use GitLab Monitor to monitor the
    health of their applications and infrastructure, detect issues, and resolve</st>
    <st c="47602">them quickly.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="47615">GitLab is also highly configurable and customizable.</st> <st
    c="47669">Teams can easily customize the platform to fit their needs and preferences.</st>
    <st c="47745">GitLab supports various integrations and has a vast ecosystem</st>
    <st c="47806">of third-party extensions</st> <st c="47832">and plugins that teams
    can use to extend</st> <st c="47874">their functionalities.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="47896">Azure services for the DevOps workflow</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="47935">Microsoft Azure</st> <st c="47951">offers a wide</st> <st c="47965">range
    of tools and services that can integrate well into a DevOps workflow.</st> <st
    c="48042">A broad range of tools and services for secret management, configuration
    management, load testing, chaos engineering, and app hosting/deployment, as well
    as comprehensive monitoring and</st> <st c="48228">observability capabilities.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.21 – Azure Cloud-native services for DevOps](img/B19710_01_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="48702">Figure 1.21 – Azure Cloud-native services for DevOps</st>
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="48754">Figure 1</st>**<st c="48763">.21</st>* <st c="48766">highlights
    some of the tools that can be used in the different stages of the DevOps workflow.</st>
    <st c="48861">Let us review some of these services and how they</st> <st c="48911">fit
    in:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="48918">We have various services to host</st> <st c="48952">our applications:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="48969">Build phase</st>**<st c="48981">:</st>'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**<st c="48983">Azure Key Vault</st>**<st c="48998">: This offers secure secret
    management, allowing developers to store and retrieve sensitive information such
    as API keys, passwords,</st> <st c="49132">and certificates.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49149">Azure App Configuration</st>**<st c="49173">: This enables
    centralized configuration management, providing a way to store and retrieve application
    settings across</st> <st c="49293">multiple environments.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49315">Test phase</st>**<st c="49326">:</st>'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**<st c="49328">Azure Load Testing</st>**<st c="49346">: This allows for the
    stress testing and performance testing of applications by simulating user traffic
    and analyzing system behavior</st> <st c="49481">under load.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49492">Azure Chaos Studio</st>**<st c="49511">: This facilitates chaos
    engineering experiments by introducing</st> <st c="49576">controlled</st> <st
    c="49587">disruptions and failures to test</st> <st c="49620">system resiliency.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49638">Release phase</st>**<st c="49652">: Azure offers several computing
    options for app hosting</st> <st c="49710">and deployment:</st>'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**<st c="49725">Virtual machines (VMs) and VM scale sets</st>**<st c="49766">:
    These offer flexibility to deploy and manage virtual machines for</st> <st c="49835">hosting
    applications.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49856">App Services</st>**<st c="49869">: This provides a platform
    to host web and API applications without worrying about</st> <st c="49953">infrastructure
    management.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="49979">Function Apps</st>**<st c="49993">: This enables the development
    of serverless functions to execute code</st> <st c="50065">on demand.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="50075">Container Services</st>**<st c="50094">: This supports containerized
    application deployments with options such as Azure Container Instances for lightweight
    workloads or Azure Kubernetes Service for orchestrating and scaling</st> <st c="50280">containerized
    applications.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="50307">Operate and</st>** **<st c="50320">monitor phases</st>**<st
    c="50334">:</st>'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**<st c="50336">Azure Monitor</st>**<st c="50349">: This offers comprehensive
    monitoring and diagnostics for applications and infrastructure, allowing teams
    to gain insights into system performance</st> <st c="50498">and health.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="50509">Application Insights</st>**<st c="50530">: This provides real-time
    application performance monitoring and logging, allowing developers to detect
    and diagnose</st> <st c="50648">issues quickly.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="50663">Managed Grafana for observability</st>**<st c="50697">: This
    integrates Grafana, a popular open source observability platform, with Azure services,
    enabling advanced data visualization and analysis for monitoring</st> <st c="50857">and
    troubleshooting.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="50877">Keep in mind that the examples mentioned here are just a few,
    and we will encounter more services as we progress.</st> <st c="50992">Throughout
    this book, we will explore various Azure services that support DevOps practices
    and enhance the software development process, particularly those related to security</st>
    <st c="51168">use cases.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="51178">For now, just note that DevOps and cloud computing go hand in
    hand, as both are designed to enable faster software development and deployment.</st>
    <st c="51322">The cloud provides a scalable and flexible infrastructure that can
    support the demands of modern software development and services that enhance the
    process, and DevOps provides a framework for efficiently managing and deploying
    software in</st> <st c="51562">the cloud.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="51572">Now that we have</st> <st c="51590">explored the</st> <st c="51602">fundamental
    concepts of Agile, DevOps, and cloud computing, let us examine how these three
    elements come together to enable modern software</st> <st c="51743">development
    practices.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="51765">Agile, DevOps, and the Cloud – A perfect trio</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="51811">Adopting a DevOps</st> <st c="51829">approach</st> <st c="51839">does
    not</st> <st c="51847">yield benefits in isolation but rather in conjunction with
    other concepts, such as Agile planning and cloud computing.</st> <st c="51967">Agile
    is a way of managing a project that focuses on being flexible and responsive to
    change.</st> <st c="52061">cloud computing refers to using web-based computing
    services instead of physical servers and software.</st> <st c="52164">Together,
    Agile, DevOps, and Cloud can help organizations work more effectively</st> <st
    c="52244">and efficiently.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="52260">Some organizations may use only one or two of these concepts,
    but the best results come from combining all three.</st> <st c="52375">It is possible
    to adopt an Agile approach to software development without practicing DevOps;
    it is also possible to implement DevOps practices but not with cloud computing,
    and it is, sadly, common for many organizations to adopt cloud computing without
    implementing DevOps practices.</st> <st c="52660">For cloud-native applications
    and new software, the synergy of all three—Agile, DevOps, and Cloud—often yields
    the best outcomes, as illustrated in the</st> <st c="52812">following diagram:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.22 – Agile, DevOps, and Cloud](img/B19710_01_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="52878">Figure 1.22 – Agile, DevOps, and Cloud</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="52916">We put it this way: Agile is</st> *<st c="52946">what</st>* <st
    c="52950">we should be doing; DevOps is</st> *<st c="52981">how</st>* <st c="52984">we
    should be doing it; cloud computing is</st> *<st c="53027">where</st>* <st c="53032">we
    should be</st> <st c="53046">doing it.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="53055">However, it is</st> <st c="53071">essential</st> <st c="53080">to
    recognize that there are exceptions to this general rule.</st> <st c="53142">Combining</st>
    <st c="53151">Agile, DevOps, and cloud computing for certain applications can
    present a different set of challenges and dynamics.</st> <st c="53268">While the
    integration of these three elements can be highly beneficial for many applications,
    it is not a guaranteed formula for success in every scenario.</st> <st c="53424">As
    the saying goes, not everything that glitters is gold, and not every combination
    of DevOps and cloud will yield</st> <st c="53539">golden results.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="53554">Let us move on from our discussions for now.</st> <st c="53600">In
    the next sections, we will set up the required cloud accounts necessary to follow
    along with the hands-on exercises covered in the rest of</st> <st c="53742">this
    book.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="53752">Hands-on Exercise 1 – Creating an Azure subscription</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="53805">Let’s start with</st> <st c="53822">creating</st> <st c="53832">a
    subscription:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="53847">Open a web browser and go</st> <st c="53874">to</st> [<st c="53877">https://signup.azure.com</st>](https://signup.azure.com)<st
    c="53901">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="53902">Click on</st> **<st c="53912">Sign in</st>**<st c="53919">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="53920">Enter your profile information, verify your identity, and agree
    to the terms</st> <st c="53998">and conditions.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54013">Click on</st> **<st c="54023">Next</st>** <st c="54027">and provide
    your credit card information (note that your credit card will not be charged until
    you switch your subscription from the free trial to a</st> <st c="54177">paid
    subscription).</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54196">Click on</st> **<st c="54206">Sign up</st>**<st c="54213">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54214">Hands-On Exercise 2 – Creating an Azure DevOps organization (linked
    to your Azure AD tenant)</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="54307">Next, we’ll create</st> <st c="54326">a</st> <st c="54329">new
    organization:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="54346">Open a web browser and go to</st> [<st c="54376">https://portal.azure.com</st>](https://portal.azure.com)
    <st c="54400">(the</st> <st c="54406">Azure portal).</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54420">In the Azure portal, in the search area at the top, search for
    and select</st> **<st c="54495">Azure DevOps</st>**<st c="54507">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54508">Click on the</st> **<st c="54522">My Azure DevOps</st>** **<st
    c="54538">Organizations</st>** <st c="54551">link.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54557">In the open window, configure</st> <st c="54588">the following:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**<st c="54602">Name</st>**<st c="54607">: Enter a name for your new Azure</st>
    <st c="54642">DevOps Organization</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="54661">Project Location</st>**<st c="54678">: Select a location close</st>
    <st c="54705">to you</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="54711">Next, let’s configure billing for our</st> <st c="54750">new organization:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="54767">In the Azure DevOps console, click on</st> **<st c="54806">Organization
    Settings</st>** <st c="54827">in the</st> <st c="54835">lower-left corner.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54853">Click on</st> **<st c="54863">Billing</st>**<st c="54870">, then
    click on</st> **<st c="54886">Set</st>** **<st c="54890">up Billing</st>**<st
    c="54900">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54901">Select your Azure</st> <st c="54920">subscription, then click</st>
    <st c="54945">on</st> **<st c="54948">Save</st>**<st c="54952">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="54953">Hands-On Exercise 3 – Creating a GitHub Enterprise Cloud trial
    account</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="55024">First, let’s create a</st> <st c="55046">GitHub Enterprise</st>
    <st c="55065">Cloud organization:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="55084">To create a GitHub Organization, go to</st> [<st c="55124">https://github.com/pricing</st>](https://github.com/pricing)<st
    c="55150">, click on</st> **<st c="55161">Start a free trial</st>** <st c="55179">under</st>
    **<st c="55186">Enterprise</st>**<st c="55196">, and then choose</st> **<st c="55214">Enterprise
    Cloud</st>**<st c="55230">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![\uFEFFFigure 1.23 – Creating Enterprise Cloud Organizations](img/B19710_01_23.jpg)"
  prefs: []
  type: TYPE_IMG
- en: <st c="55628">Figure 1.23 – Creating Enterprise Cloud Organizations</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="55681">Sign in to GitHub or create</st> <st c="55710">an account.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="55721">After signing in, you will be directed to the</st> **<st c="55768">Set
    up your Enterprise trial</st>** <st c="55796">page.</st> <st c="55803">Fill in
    the details required and click the</st> **<st c="55846">Create your</st>** **<st
    c="55858">enterprise</st>** <st c="55868">button.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="55876">Well done!</st> <st c="55888">You have now</st> <st c="55901">completed
    the setup of the cloud accounts required for the hands-on exercises in the</st>
    <st c="55986">upcoming chapters.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="56004">Summary</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="56012">This chapter provided an overview of DevOps—a modern application
    development and delivery approach that helps organizations to release quality
    software more quickly into production with fewer defects!</st> <st c="56214">We
    covered the five core practices of DevOps, the different stages in a DevOps workflow,
    and the importance of a collaborative culture in achieving success with DevOps.</st>
    <st c="56383">We also highlighted the DevOps anti-types and anti-patterns to avoid
    and introduced popular DevOps platforms, such as Azure DevOps, GitHub Actions,
    and GitLab.</st> <st c="56543">The knowledge gained in this chapter has equipped
    you with strong foundational knowledge that is needed to understand the discussions
    presented throughout the remainder of</st> <st c="56715">this book.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="56725">In the next chapter, we will delve into the security challenges
    of DevOps, exploring the potential risks and ways organizations can start to address
    them.</st> <st c="56881">See</st> <st c="56885">you there!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="56895">Further reading</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="56911">To learn more about the topics that were covered in this chapter,
    take a look at the</st> <st c="56997">following resources:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="57017">Accelerate: The Science of Lean Software and DevOps: Building
    and Scaling High Performing Technology Organizations</st>* <st c="57132">by Nicole
    Forsgren, Jez Humble, and</st> <st c="57169">Gene Kim.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="57178">The Phoenix Project: A Novel About IT, DevOps, and Helping Your
    Business Win</st>* <st c="57255">by Gene Kim, Kevin Behr, and</st> <st c="57285">George
    Spafford.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
