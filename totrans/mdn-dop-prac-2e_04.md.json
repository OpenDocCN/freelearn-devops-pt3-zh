["```\n$ docker pull bharamicrosystems/python-flask-redis\nUsing default tag: latest\nlatest: Pulling from bharamicrosystems/python-flask-redis\n188c0c94c7c5: Pull complete\na2f4f20ac898: Pull complete\nf8a5b284ee96: Pull complete\n28e9c106bfa8: Pull complete\n8fe1e74827bf: Pull complete\n95618753462e: Pull complete\n03392bfaa2ba: Pull complete\n4de3b61e85ea: Pull complete\n266ad40b3bdb: Pull complete\nDigest: sha256:bb40a44422b8a7fea483a775fe985d4e05f7e5c59b0806a2\n4f6cca50edadb824\nStatus: Downloaded newer image for bharamicrosystems/python-flask-redis:latest\ndocker.io/bharamicrosystems/python-flask-redis:latest\n```", "```\n$ docker history bharamicrosystems/python-flask-redis\nIMAGE         CREATED      CREATED BY                                     SIZE    COMMENT\n6d33489ce4d9  2 years ago  /bin/sh -c #(nop)  CMD [\"flask\" \"run\"]         0B\n<missing>     2 years ago  /bin/sh -c #(nop) COPY dir:61bb30c35fb351598…  1.2kB\n<missing>     2 years ago  /bin/sh -c #(nop)  EXPOSE 5000                 0B\n<missing>     2 years ago  /bin/sh -c pip install -r requirements.txt     11.2MB\n<missing>     2 years ago  /bin/sh -c #(nop) COPY file:4346cf08412270cb…  12B\n<missing>     2 years ago  /bin/sh -c apk add --no-cache gcc musl-dev l…  143MB\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV FLASK_RUN_HOST=0.0.0.0  0B\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV FLASK_APP=app.py        0B\n<missing>     2 years ago  /bin/sh -c #(nop)  CMD [\"python3\"]             0B\n<missing>     2 years ago  /bin/sh -c set -ex;   wget -O get-pip.py \"$P…  7.24MB\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV PYTHON_GET_PIP_SHA256…  0B\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV PYTHON_GET_PIP_URL=ht…  0B\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV PYTHON_PIP_VERSION=20…  0B\n<missing>     2 years ago  /bin/sh -c cd /usr/local/bin  && ln -s idle3…  32B\n<missing>     2 years ago  /bin/sh -c set -ex  && apk add --no-cache --…  28.3MB\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV PYTHON_VERSION=3.7.9    0B\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV GPG_KEY=0D96DF4D4110E…  0B\n<missing>     2 years ago  /bin/sh -c set -eux;  apk add --no-cache   c…  512kB\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV LANG=C.UTF-8            0B\n<missing>     2 years ago  /bin/sh -c #(nop)  ENV PATH=/usr/local/bin:/…  0B\n<missing>     2 years ago  /bin/sh -c #(nop)  CMD [\"/bin/sh\"]             0B\n<missing>     2 years ago  /bin/sh -c #(nop) ADD file:f17f65714f703db90…  5.57MB\n```", "```\n$ vim Dockerfile\nFROM ubuntu:bionic\nRUN apt update && apt install -y curl\nRUN apt update && apt install -y nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```\n$ docker build -t <your_dockerhub_user>/nginx-hello-world .\n[+] Building 50.0s (7/7) FINISHED\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load build definition from Dockerfile 0.1s\n => => transferring dockerfile: 171B 0.0s\n => [internal] load metadata for docker.io/library/ubuntu:bionic 2.4s\n => [1/3] FROM docker.io/library/ubuntu:bionic@sha256:152dc042… 2.8s\n => => resolve docker.io/library/ubuntu:bionic@sha256:152dc04… 0.0s\n => => sha256:152dc042… 1.33kB / 1.33kB 0.0s\n => => sha256:dca176c9… 424B / 424B 0.0s\n => => sha256:f9a80a55… 2.30kB / 2.30kB 0.0s\n => => sha256:7c457f21… 25.69MB / 25.69MB 1.0s\n => => extracting sha256:7c457f21… 1.6s\n => [2/3] RUN apt update && apt install -y curl 22.4s\n => [3/3] RUN apt update && apt install -y nginx 21.6s\n => exporting to image 0.6s\n => => exporting layers 0.6s\n => => writing image sha256:9d34cdda… 0.0s\n => => naming to docker.io/<your_dockerhub_user>/nginx-hello-world\n```", "```\n$ docker run -d -p 80:80 <your_dockerhub_user>/nginx-hello-world\n092374c4501560e96a13444ce47cb978b961cf8701af311884bfe…\n$ docker ps\nCONTAINER ID  IMAGE            COMMAND       CREATED     STATUS   PORTS               NAMES\n092374c45015  <your_dockerhub  \"nginx -g     28 seconds  Up 27    0.0.0.0:80->80/     loving_\n              _user>/nginx-    'daemon of…\"  ago         seconds  tcp, :::80->80/tcp  noether\n              hello-world                                                                     \n```", "```\n$ curl localhost\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</body>\n</html>\n```", "```\n$ vim index.html\nHello World! This is my first docker image!\n```", "```\n$ vim Dockerfile\nFROM ubuntu:bionic\nRUN apt update && apt install -y curl\nRUN apt update && apt install -y nginx\nWORKDIR /var/www/html/\nADD index.html ./\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```\n$ docker build -t <your_dockerhub_user>/nginx-hello-world .\n[+] Building 1.6s (10/10) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 211B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for docker.io/library/ubuntu:bionic 1.4s\n => [1/5] FROM docker.io/library/ubuntu:bionic@sha256:152dc042… 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 81B 0.0s\n => CACHED [2/5] RUN apt update && apt install -y curl 0.0s\n => CACHED [3/5] RUN apt update && apt install -y nginx 0s\n => [4/5] WORKDIR /var/www/html/ 0.0s\n => [5/5] ADD index.html ./ 0.0s\n => exporting to image 0.0s\n => => exporting layers 0.0s\n => => writing image sha256:cb2e67bd… 0.0s\n => => naming to docker.io/<your_dockerhub_user>/nginx-hello-world\n```", "```\n$ docker ps\nCONTAINER ID  IMAGE            COMMAND       CREATED     STATUS   PORTS               NAMES\n092374c45015  <your_dockerhub  \"nginx -g     28 seconds  Up 27    0.0.0.0:80->80/     loving_\n              _user>/nginx-    'daemon of…\"  ago         seconds  tcp, :::80->80/tcp  noether\n              hello-world                                                                     \n$ docker rm 092374c45015 -f\n092374c45015\n```", "```\n$ docker run -d -p 80:80 <your_dockerhub_user>/nginx-hello-world\ncc4fe116a433c505ead816fd64350cb5b25c5f3155bf5eda8cede5a4…\n$ docker ps\nCONTAINER ID  IMAGE            COMMAND       CREATED     STATUS   PORTS               NAMES\ncc4fe116a433  <your_dockerhub  \"nginx -g     52 seconds  Up 50    0.0.0.0:80->80/     eager_\n              _user>/nginx-    'daemon of…\"  ago         seconds  tcp, :::80->80/tcp  gates\n              hello-world                                                            \n```", "```\n$ curl localhost\nHello World! This is my first docker image!\n```", "```\n$ vim Dockerfile\nFROM ubuntu:bionic\nRUN apt update && apt install -y curl\nRUN apt update && apt install -y nginx\nWORKDIR /var/www/html/\nADD index.html ./\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\nSTOPSIGNAL SIGTERM\nHEALTHCHECK --interval=60s --timeout=10s --start-period=20s --retries=3 CMD curl -f \nlocalhost\n```", "```\n$ docker build -t <your_dockerhub_user>/nginx-hello-world .\n[+] Building 1.3s (10/10) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 334B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for docker.io/library/ubuntu:bionic 1.2s\n => [1/5] FROM docker.io/library/ubuntu:bionic@sha256:152dc0… 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 31B 0.0s\n => CACHED [2/5] RUN apt update && apt install -y curl 0.0s\n => CACHED [3/5] RUN apt update && apt install -y nginx 0s\n => CACHED [4/5] WORKDIR /var/www/html/ 0.0s\n => CACHED [5/5] ADD index.html ./ 0.0s\n => exporting to image 0.0s\n => => exporting layers 0.0s\n => => writing image sha256:bba3123d… 0.0s\n => => naming to docker.io/<your_dockerhub_user>/nginx-hello-world\n```", "```\n$ docker run -d -p 80:80 <your_dockerhub_user>/nginx-hello-world\n94cbf3fdd7ff1765c92c81a4d540df3b4dbe1bd9748c91e2ddf565d8…\n```", "```\n$ docker ps\nCONTAINER ID  IMAGE            COMMAND       CREATED     STATUS     PORTS               NAMES\n94cbf3fdd7ff  <your_dockerhub  \"nginx -g     5 seconds   Up 4       0.0.0.0:80->80/     wonderful_\n              _user>/nginx-    'daemon of…\"  ago         (health:   tcp, :::80->80/tcp  hodgkin\n              hello-world                                starting)                     \n```", "```\n$ docker ps\nCONTAINER ID  IMAGE            COMMAND       CREATED     STATUS     PORTS               NAMES\n94cbf3fdd7ff  <your_dockerhub  \"nginx -g     2 minutes   Up 2       0.0.0.0:80->80/     wonderful_\n              _user>/nginx-    'daemon of…\"  ago         (healthy)  tcp, :::80->80/tcp  hodgkin\n              hello-world                                                                      \n```", "```\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}\n```", "```\nFROM golang:1.20.5\nWORKDIR /tmp\nCOPY app.go .\nRUN GOOS=linux go build -a -installsuffix cgo -o app . && chmod +x ./app\nCMD [\"./app\"]\n```", "```\n$ docker build -t <your_dockerhub_user>/go-hello-world:single_stage .\n[+] Building 10.3s (9/9) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 189B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for docker.io/library/golang:1.20.5 0.6s\n => [1/4] FROM docker.io/library/golang:1.20.5@sha256:4b1fc02d… 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 27B 0.0s\n => [2/4] WORKDIR /tmp 0.0s\n => [3/4] COPY app.go . 0.0s\n => [4/4] RUN GO111MODULE=off GOOS=linux go build -a -installsuffix cgo -o app .  && chmod \n+x ./app 9.3s\n => exporting to image 0.3s\n => => exporting layers 0.3s\n => => writing image sha256:3fd3d261… 0.0s\n => => naming to docker.io/<your_dockerhub_user>/go-hello-world:single_stage\n```", "```\n$ docker run <your_dockerhub_user>/go-hello-world:single_stage\nHello, World!\n```", "```\n$ docker images\nREPOSITORY              TAG           IMAGE ID      CREATED        SIZE\n<your_dockerhub_user>\n/go-hello-world         single_stage  3fd3d26111a1  3 minutes ago  803MB\n```", "```\nFROM golang:1.20.5 AS build\nWORKDIR /tmp\nCOPY app.go .\nRUN GO111MODULE=off GOOS=linux go build -a -installsuffix cgo -o app . && chmod +x ./app\nFROM alpine:3.18.0\nWORKDIR /tmp\nCOPY --from=build /tmp/app .\nCMD [\"./app\"]\n```", "```\n$ docker build -t <your_dockerhub_user>/go-hello-world:multi_stage\n[+] Building 12.9s (13/13) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 259B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for docker.io/library/alpine:3.18.0 2.0s\n => [internal] load metadata for docker.io/library/golang:1.20.5 1.3s\n => [build 1/4] FROM docker.io/library/golang:1.20.5@sha256:4b1fc02d… 0.0s\n => [stage-1 1/3] FROM docker.io/library/alpine:3.18.0@sha256:02bb6f42… 0.1s\n => => resolve docker.io/library/alpine:3.18.0@sha256:02bb6f42… 0.0s\n => => sha256:c0669ef3… 528B / 528B 0.0s\n => => sha256:5e2b554c… 1.47kB / 1.47kB 0.0s\n => => sha256:02bb6f42… 1.64kB / 1.64kB 0.0s\n => CACHED [build 2/4] WORKDIR /tmp 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 108B 0.0s\n => [build 3/4] COPY app.go . 0.0s\n => [build 4/4] RUN GO111MODULE=off GOOS=linux go build -a -installsuffix cgo -o app . && \nchmod +x ./app 10.3s\n => [stage-1 2/3] WORKDIR /tmp 0.1s\n=> [stage-1 3/3] COPY --from=build /tmp/app . 0.3s\n => exporting to image 0.1s\n => => exporting layers 0.1s\n => => writing image sha256:e4b793b3… 0.0s\n => => naming to docker.io/<your_dockerhub_user>/go-hello-world:multi_stage\n```", "```\n$ docker run <your_dockerhub_user>/go-hello-world:multi_stage .\nHello, World!\n```", "```\n$ docker images\nREPOSITORY              TAG          IMAGE ID      CREATED        SIZE\n<your_dockerhub_user>\n/go-hello-world         multi_stage  e4b793b39a8e  5 minutes ago  9.17MB\n```", "```\n$ docker pull nginx\nUsing default tag: latest\nlatest: Pulling from library/nginx\nf03b40093957: Pull complete\need12bbd6494: Pull complete\nfa7eb8c8eee8: Pull complete\n7ff3b2b12318: Pull complete\n0f67c7de5f2c: Pull complete\n831f51541d38: Pull complete\nDigest: sha256:af296b18…\nStatus: Downloaded newer image for nginx:latest\ndocker.io/library/nginx:latest\n```", "```\n$ docker run nginx\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform \nconfiguration\n/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n…\n2023/06/10 08:09:07 [notice] 1#1: start worker processes\n2023/06/10 08:09:07 [notice] 1#1: start worker process 29\n2023/06/10 08:09:07 [notice] 1#1: start worker process 30\n```", "```\n$ docker rmi nginx\nError response from daemon: conflict: unable to remove repository reference \"nginx\" (must \nforce) - container d5c84356116f is using its referenced image f9c14fe76d50\n```", "```\n$ docker rmi -f nginx\nUntagged: nginx:latest\nUntagged: nginx@sha256:af296b18…\nDeleted: sha256:f9c14fe7…\n```", "```\n$ docker login\n```", "```\n$ docker push <your_dockerhub_user>/nginx-hello-world:latest\nThe push refers to repository [docker.io/<your_dockerhub_user>/nginx-hello-world]\n2b7de406bdcd: Pushed\n5f70bf18a086: Pushed\n845348333310: Pushed\n96a9e6a097c6: Pushed\n548a79621a42: Mounted from library/ubuntu\nlatest: digest: sha256:11ec56f0… size: 1366\n```", "```\n$ docker push -a <your_dockerhub_user>/go-hello-world\nThe push refers to repository [docker.io/<your_dockerhub_user>/go-hello-world]\n9d61dbd763ce: Pushed\n5f70bf18a086: Mounted from <your_dockerhub_user>/nginx-hello-world\nbb01bd7e32b5: Mounted from library/alpine\nmulti_stage: digest: sha256:9e1067ca… size: 945\n445ef31efc24: Pushed\nd810ccdfdc04: Pushed\n5f70bf18a086: Layer already exists\n70ef08c04fa6: Mounted from library/golang\n41cf9ea1d6fd: Mounted from library/golang\nd4ebbc3dd11f: Mounted from library/golang\nb4b4f5c5ff9f: Mounted from library/golang\nb0df24a95c80: Mounted from library/golang\n974e52a24adf: Mounted from library/golang\nsingle_stage: digest: sha256:08b5e52b… size: 2209\n```", "```\n$ docker images prune\nREPOSITORY  TAG  IMAGE ID  CREATED  SIZE\n```", "```\n$ docker history <your_dockerhub_user>/nginx-hello-world:latest\nIMAGE          CREATED      CREATED BY                SIZE            COMMENT\nbba3123dde01   2 hours ago  HEALTHCHECK &\n                            {[\"CMD-SHELL\" \n                            \"curl -f localhos…        0B              buildkit.dockerfile.v0\n<missing>      2 hours ago  STOPSIGNAL                0B\n                            SIGTERM                   0B              buildkit.dockerfile.v0\n<missing>      2 hours ago  CMD [\"nginx\"  \n                            \"-g\" \"daemon off;\"]       0B              buildkit.dockerfile.v0\n<missing>      2 hours ago  EXPOSE map[80/\n                            tcp:{}]                   0B              buildkit.dockerfile.v0\n<missing>      2 hours ago  ADD index.html ./ # \n                            buildkit                  44B             buildkit.dockerfile.v0\n<missing>      2 hours ago  WORKDIR /var/www/\n                            html/                     0B              buildkit.dockerfile.v0\n<missing>      2 hours ago  RUN /bin/sh -c apt \n                            update && apt             57.2MB          buildkit.dockerfile.v0\n                            install -y…\n<missing>      2 hours ago  RUN /bin/sh -c apt \n                            update && apt             59.8MB          buildkit.dockerfile.v0\n                            install -y…\n<missing>      10 days ago  /bin/sh -c #(nop)         0B\n                            CMD [\"/bin/bash\"]\n<missing>      10 days ago  /bin/sh -c #(nop) ADD     63.2MB\n                            file:3c74e7e08cbf9a876…\n<missing>      10 days ago  /bin/sh -c #(nop)  LABEL  0B\n                            org.opencontainers.…\n<missing>      10 days ago  /bin/sh -c #(nop)  LABEL  0B\n                            org.opencontainers.…\n<missing>      10 days ago  /bin/sh -c #(nop)  ARG    0B\n                            LAUNCHPAD_BUILD_ARCH\n<missing>      10 days ago  /bin/sh -c #(nop)         0B\n                            ARG RELEASE         \n```", "```\n$ docker run -d --name nginx <your_dockerhub_user>/nginx-hello-world:latest\ne2d0c4b884556a353817aada13f0c91ecfeb01f5940e91746f168b…\n```", "```\n$ docker export nginx > nginx-hello-world-flat.tar\n```", "```\n$ cat nginx-hello-world-flat.tar |  \\\ndocker import - <your_dockerhub_user>/nginx-hello-world:flat \nsha256:57bf5a9ada46191ae1aa16bcf837a4a80e8a19d0bcb9fc…\n```", "```\n$ docker images\nREPOSITORY              TAG     IMAGE ID      CREATED     SIZE\n<your_dockerhub_user>/  flat    57bf5a9ada46  34 seconds  177MB\nnginx-hello-world                             ago\n<your_dockerhub_user>/  latest  bba3123dde01  2 hours \nnginx-hello-world                             ago         180MB\n```", "```\n$ docker history <your_dockerhub_user>/nginx-hello-world:flat\nIMAGE         CREATED             CREATED BY  SIZE   COMMENT\n57bf5a9ada46  About a minute ago              177MB  Imported from -\n```", "```\nFROM golang:1.20.5 AS build\nWORKDIR /tmp\nCOPY app.go .\nRUN GO111MODULE=off GOOS=linux go build -a -installsuffix cgo -o app . && chmod +x ./app\nFROM gcr.io/distroless/base\nWORKDIR /tmp\nCOPY --from=build /tmp/app .\nCMD [\"./app\"]\n```", "```\n$ docker build -t <your_dockerhub_user>/go-hello-world:distroless .\n[+] Building 7.6s (14/14) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 268B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for gcr.io/distroless/base:latest 3.1s\n => [internal] load metadata for docker.io/library/golang:1.20.5 1.4s\n => [auth] library/golang:pull token for registry-1.docker.io 0.0s\n => [stage-1 1/3] FROM gcr.io/distroless/base@\nsha256:73deaaf6a207c1a33850257ba74e0f196bc418636cada9943a03d7abea980d6d 3.2s\n => [build 1/4] FROM docker.io/library/golang:1.20.5@sha256:4b1fc02d 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 108B 0.0s\n => CACHED [build 2/4] WORKDIR /tmp 0.0s\n => CACHED [build 3/4] COPY app.go . 0.0s\n => CACHED [build 4/4] RUN GO111MODULE=off GOOS=linux go build -a -installsuffix cgo -o \napp . && chmod +x ./app 0.0s\n => [stage-1 2/3] WORKDIR /tmp 0.9s\n => [stage-1 3/3] COPY --from=build /tmp/app . 0.3s\n => exporting to image 0.1s\n => => exporting layers 0.1s\n => => writing image sha256:51ced401 0.0s\n => => naming to docker.io/<your_dockerhub_user>/go-hello-world:distroless\n```", "```\n$ docker run <your_dockerhub_user>/go-hello-world:distroless\nHello, World!\n```", "```\n$ docker images\nREPOSITORY                            TAG         MAGE ID       CREATED        SIZE\n<your_dockerhub_user>/go-hello-world  distroless  51ced401d7bf  6 minutes ago  22.3MB\n```", "```\n$ docker run -d -p 80:5000 --restart=always --name registry registry:2\nUnable to find image 'registry:2' locally\n2: Pulling from library/registry\n8a49fdb3b6a5: Already exists\n58116d8bf569: Pull complete\n4cb4a93be51c: Pull complete\ncbdeff65a266: Pull complete\n6b102b34ed3d: Pull complete\nDigest: sha256:20d08472…\nStatus: Downloaded newer image for registry:2\nae4c4ec9fc7b17733694160b5b3b053bd1a41475dc4282f3eccaa10…\n```", "```\n$ docker tag your_dockerhub_user>/nginx-hello-world:latest \\ \nlocalhost/<your_dockerhub_user>/nginx-hello-world:latest\n```", "```\n$ docker push localhost/<your_dockerhub_user>/nginx-hello-world:latest\nThe push refers to repository [localhost/your_dockerhub_user/nginx-hello-world]\n2b7de406bdcd: Pushed\n5f70bf18a086: Pushed\n845348333310: Pushed\n96a9e6a097c6: Pushed\n548a79621a42: Pushed\nlatest: digest: sha256:6ad07e74… size: 1366\n```", "```\n$ sudo mkdir -p /mnt/registry/certs\n$ sudo mkdir -p /mnt/registry/auth\n$ sudo chmod -R 777 /mnt/registry\n```", "```\n$ docker run --entrypoint htpasswd registry:2.7.0 \\\n-Bbn user pass > /mnt/registry/auth/htpasswd\n```", "```\n$ openssl req -newkey rsa:4096 -nodes -sha256 -keyout \\ \n/mnt/registry/certs/domain.key -x509 -days 365 -out /mnt/registry/certs/domain.crt \n```", "```\n$ docker rm -f registry\nregistry\n```", "```\n$ docker run -d -p 443:443 --restart=always \\\n--name registry \\\n  -v /mnt/registry/certs:/certs \\\n  -v /mnt/registry/auth:/auth \\\n  -v /mnt/registry/registry:/var/lib/registry \\\n  -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \\\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \\\n  -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \\\n  -e REGISTRY_AUTH=htpasswd \\\n  -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\\n  -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \\\n  registry:2\n02bf92c9c4a6d1d9c9f4b75ba80e82834621b1570f5f7c4a74b215960\n```", "```\n$ docker login https://localhost\nUsername: user\nPassword:\nWARNING! Your password will be stored unencrypted in /root/\n.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/\n#credentials-store\nLogin Succeeded\n```", "```\n$ docker push localhost/<your_dockerhub_user>/nginx-hello-world\nThe push refers to repository [localhost/<your_dockerhub_user>/nginx-hello-world]\n2b7de406bdcd: Pushed\n5f70bf18a086: Pushed\n845348333310: Pushed\n96a9e6a097c6: Pushed\n548a79621a42: Pushed\nlatest: digest: sha256:6ad07e7425331456a3b8ea118bce36c82af242ec14072d483b5dcaa3bd607e65 \nsize: 1366\n```"]