["```\nadmin@myhome:~$ docker pull ubuntu\nadmin@myhome:~$ docker inspect ubuntu\n[\n    {\n        \"Id\": \"sha256:6b7dfa7e8fdbe18ad425dd965a1049d984f31cf0ad57fa6d5377cca355e65f03\",\n        \"RepoTags\": [\n            \"ubuntu:latest\"\n        ],\n        \"RepoDigests\": [\n            \"ubuntu@sha256:27cb6e6ccef575a4698b66f5de06c7ecd61589132d5a91d098f7f3f9285415a9\"\n        ],\n        \"Created\": \"2022-12-09T01:20:31.321639501Z\",\n        \"Container\": \"8bf713004e88c9bc4d60fe0527a509636598e73e3ad1e71a9c9123c863c17c31\",\n            \"Image\": sha256:070606cf58d59117ddc1c48c0af233d6761addbcd4bf9e8e39fd10eef13c1bb7\",\n        \"GraphDriver\": {\n            \"Data\": {\n                \"MergedDir\": \"/var/lib/docker/overlay2/f2c75e37be7af790f0823f6e576ec511396582ba71defe5a3ad0f661a632f11e/merged\",\n                \"UpperDir\": \"/var/lib/docker/overlay2/f2c75e37be7af790f0823f6e576ec511396582ba71defe5a3ad0f661a632f11e/diff\",\n                \"WorkDir\": \"/var/lib/docker/overlay2/f2c75e37be7af790f0823f6e576ec511396582ba71defe5a3ad0f661a632f11e/work\"\n            },\n            \"Name\": \"overlay2\"\n        },\n        \"RootFS\": {\n            \"Type\": \"layers\",\n            \"Layers\": [\"sha256:6515074984c6f8bb1b8a9962c8fb5f310fc85e70b04c88442a3939c026dbfad3\"\n            ]\n        },\n    }\n]\n```", "```\nadmin@myhome:~$ docker run --memory 500m alpine /bin/sh\n```", "```\ndocker build [OPTIONS] PATH | URL | -\n```", "```\nadmin@myhome:~$ docker build .\n```", "```\nadmin@myhome:~$ docker build -t my-image:1.0 .\n```", "```\nadmin@myhome:~$ docker build --build-arg VAR1=value1 -t my-image:1.0 .\n```", "```\nadmin@myhome:~$ docker run myimage /bin/bash\n```", "```\nadmin@myhome:~$ docker run -d -p 8080:80 --name containername myimage\n```", "```\nadmin@myhome:~$ docker run -e VAR1=value1 -e VAR2=value2 myimage:latest\n```", "```\nadmin@myhome:~$ docker volume create myvolume\n```", "```\nadmin@myhome:~$ docker run –v myvolume:/mnt/volume myimage:latest\n```", "```\nadmin@myhome:~$ docker run -v /host/path:/mnt/volume myimage:latest\n```", "```\nadmin@myhome:~$ docker run -w /opt/srv my-image\n```", "```\nadmin@myhome:~$ docker start mycontainer\n```", "```\nadmin@myhome:~$ docker start mycontainer othercontainer lastcontainer\n```", "```\nadmin@myhome:~$ docker start -a mycontainer\n```", "```\nadmin@myhome:~$ docker stop mycontainer\n```", "```\nadmin@myhome:~$ docker stop mycontainer othercontainer lastcontainer\n```", "```\nadmin@myhome:~$ docker stop -t 10 mycontainer\n```", "```\nadmin@myhome:~$ docker ps\n```", "```\nadmin@myhome:~$ docker ps -a\nCONTAINER ID           IMAGE                          COMMAND         \nSTATUS                          PORTS                    NAMES\na1e83e89948e   ubuntu:latest                                \"/bin/bash -c 'while…\"   29 seconds ago       Up 29 seconds                                            pedantic_mayer\n0e17e9729e9c   ubuntu:latest                                \"bash\"                   About a minute ago   Exited (0) About a minute ago                            angry_stonebraker\naa3665f022a5   ecr.aws.com/pgsql/server:latest   \"/opt/pgsql/bin/nonr…\"   5 weeks ago          Exited (255) 8 days ago         0.0.0.0:1433->1433/tcp   db-1\n```", "```\nadmin@myhome:~$\ndocker ps --quiet\n```", "```\nadmin@myhome:~$\ndocker ps --filter \"name=ubuntu\"\n```", "```\nadmin@myhome:~$ docker ps -s\nCONTAINER ID      IMAGE      COMMAND   CREATED          STATUS          PORTS     NAMES            SIZE\na1e83e89948e   ubuntu:latest   \"/bin/bash -c 'while…\"   14 seconds ago   Up 13 seconds             pedantic_mayer   0B (virtual 77.8MB)\n```", "```\nadmin@myhome:~$ docker login quay.io\n```", "```\nadmin@myhome:~$ echo \"mypassword\" | docker login --username myusername --password-stdin\n```", "```\nadmin@myhome:~$ aws ecr get-login-password | docker login --username AWS --password-stdin 1234567890.dkr.ecr.region.amazonaws.com\n```", "```\nadmin@myhome:~$ docker login --token usertokenwithrandomcharacters\n```", "```\nadmin@myhome:~$ docker pull alpine\n```", "```\nadmin@myhome:~$ docker pull alpine:3.12\n```", "```\nadmin@myhome:~$ docker pull myregistry.com/myimage:latest\n```", "```\nadmin@myhome:~$ docker push myimage\n```", "```\nadmin@myhome:~$ docker tag myimage:latest myimage:1.0\nadmin@myhome:~$ docker push myimage:1.0\n```", "```\nadmin@myhome:~$ docker push myregistry.com/myimage:latest\n```", "```\nadmin@myhome:~$ docker image ls\n```", "```\nubuntu           latest        6b7dfa7e8fdb   7 weeks ago    77.8MB\nmcr.microsoft.com/mssql/server     2017-latest               a03c94c3147d   4 months ago   1.33GB\nmcr.microsoft.com/azure-functions/python   3.0.15066-python3.9-buildenv   b4f18abb38f7   2 years ago    940MB\n```", "```\nadmin@myhome:~$ docker images\nREPOSITORY     TAG           IMAGE ID       CREATED        SIZE\nubuntu        latest        6b7dfa7e8fdb   7 weeks ago    77.8MB\nmcr.microsoft.com/mssql/server             2017-latest                    a03c94c3147d   4 months ago   1.33GB\nmcr.microsoft.com/azure-functions/python   3.0.15066-python3.9-buildenv   b4f18abb38f7   2 years ago    940MB\n```", "```\nadmin@myhome:~$ docker image pull ubuntu\n```", "```\nadmin@myhome:~$ docker image build -t <image_name> .\n```", "```\nadmin@myhome:~$ docker image tag <image> <new_image_name>\n```", "```\nadmin@myhome:~$ docker image rm <image>\n```", "```\ndocker exec CONTAINER COMMAND ARGUMENTS\n```", "```\nadmin@myhome:~$ docker exec mycontainer ls\n```", "```\ndocker logs CONTAINER_NAME_OR_ID\n```", "```\nadmin@myhome:~$ docker logs CONTAINER_ID\n```", "```\ndocker rm CONTAINER_NAME_OR_ID\n```", "```\nadmin@myhome:~$ docker rm CONTAINER_ID\n```", "```\ndocker rmi IMAGE\n```", "```\nadmin@myhome:~$ docker rmi IMAGE_ID\n```", "```\n    admin@myhome:~$ docker network create mynetwork\n```", "```\n    admin@myhome:~$ docker network inspect mynetwork\n```", "```\n    admin@myhome:~$ docker network rm mynetwork\n```", "```\n    admin@myhome:~$ docker network ls\n```", "```\n    admin@myhome:~$ docker network connect mynetwork        CONTAINER_NAME_OR_ID\n```", "```\n    admin@myhome:~$ docker network disconnect mynetwork         CONTAINER_NAME_OR_ID\n```", "```\nFROM ubuntu:20.04\n```", "```\nFROM ubuntu:20.04 as builder1\n```", "```\nCOPY . /var/www/html\n```", "```\nEXPOSE 80\n```", "```\nadmin@myhome:~$ docker run -p 8080:80 thedockerimagename:tag\n```", "```\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```\nENTRYPOINT [\"/usr/bin/python\"]\nCMD [\"main.py\",\"arg1\",\"arg2\"]\n```", "```\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```\nRUN apt-get update && apt-get install -y python3 python3-dev\n```", "```\nRUN mkdir /var/www\n```", "```\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> ~/.bashrc\n```", "```\nLABEL maintainer=\"Chris Carter <chcarter@your.comain.tld>\"\n```", "```\nLABEL maintainer=\"Chris Carter <chcarter@your.comain.tld>\" version=\"0.2\"\n```", "```\nadmin@myhome:~$ docker inspect --format='{{json .Config.Labels}}' <image_name_or_ID>\n```", "```\nENV <key>=<value>\n```", "```\nARG <name>[=<default value>]\n```", "```\nVOLUME /opt/postgresql_data\n```", "```\nVOLUME /opt/postgresql_data /opt/postgresql_xferlog\n```", "```\nVOLUME [\"/opt/postgresql_data\", \"/opt/postgresql_xferlog\"]\n```", "```\nUSER webserver\n```", "```\nUSER webserver:webserver\n```", "```\nUSER 1001:1001\n```", "```\nadmin@myhome:~$ docker run --user=root webserver-image\n```", "```\nWORKDIR /usr/local/app\n```", "```\nadmin@myhome:~$ docker run --network none -d ubuntu:20\n```", "```\nadmin@myhome:~$ docker network ls\nNETWORK ID     NAME                   DRIVER    SCOPE\n6c898bde2c0c   bridge                 bridge    local\n926b731b94c9   host                   host      local\nb9f266305e10   none                   null      local\n```", "```\nadmin@myhome:~$  docker inspect bridge\n[\n    {\n        \"Name\": \"bridge\",\n        \"Id\": \"6c898bde2c0c660cd96c3017286635c943adcb152c415543373469afa0aff13a\",\n        \"Created\": \"2023-01-26T16:51:30.720499274Z\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.17.0.0/16\",\n                    \"Gateway\": \"172.17.0.1\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Attachable\": false,\n        \"Ingress\": false,\n        \"ConfigFrom\": {\n            \"Network\": \"\"\n        },\n        \"ConfigOnly\": false,\n        \"Containers\": {},\n        \"Options\": {\n            \"com.docker.network.bridge.default_bridge\": \"true\",\n            \"com.docker.network.bridge.enable_icc\": \"true\",\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\n            \"com.docker.network.bridge.host_binding_ipv4\": \"0.0.0.0\",\n            \"com.docker.network.bridge.name\": \"docker0\",\n            \"com.docker.network.driver.mtu\": \"1500\"\n        },\n        \"Labels\": {}\n    }\n]\n```"]