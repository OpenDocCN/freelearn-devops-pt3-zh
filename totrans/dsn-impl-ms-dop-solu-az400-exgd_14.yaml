- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Adopting the Culture of Continuous Improvement
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps strategies deployed by teams mostly revolve around following a prescribed
    set of practices continuously and repeatedly as a part of every release iteration.
    However, high-performance teams approach everything with a learning mindset and
    identify improvements along the way to establish better discipline and becomes
    masters in doing things, such as effective **continuous integration** (**CI**)/**continuous
    deployment** (**CD**) practices for release agility, monitoring deployments to
    reduce failures, and addressing production issues in a timely manner.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: No team can claim to be perfect in their implementation of DevOps practices.
    A culture of continuous learning must be inculcated as a must-have for the teams.
    Hence, listening to feedback coming from various stakeholders is the first step
    toward improving your DevOps hygiene.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, most DevOps tool vendors, including Microsoft, will periodically
    bring in newer enhancements and product innovations to the marketplace. Teams
    must constantly evaluate and plan to adopt these latest product features to maximize
    productivity. Adopting a culture of continuous improvement is critical to staying
    relevant in your DevOps journey.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: This chapter focuses on the concept of **continuous improvement** and discusses
    a few of the approaches that organizations can make use of to learn constantly.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Measuring your DevOps success
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value stream mapping
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A data-driven approach
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operationalizing a feedback loop
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measuring your DevOps success
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As discussed in [*Chapter 1*](B18655_01.xhtml#_idTextAnchor014), *Introduction
    to DevOps*, defining effective metrics and measuring your results against them
    is key to ensuring the success of your DevOps investments. This also serves as
    a compelling force to diligently follow the DevOps practices and improve them
    over time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'The insights derived from these metrics act as a motivator for engineering
    teams to pay greater attention to where they are lacking. Let’s consider a few
    examples to illustrate this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Delivery cycle metrics such as story points delivered per sprint, overall productivity,
    and the number of defects delivered per line of code give insights to project
    administrators on progress made during a sprint and the quality of the output.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automated testing-related metrics such as test pass percentage, code coverage,
    and open defects offer insights into the readiness of the software before being
    released and deployed to production.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After the software has been released, reports around usage and user activity,
    health monitoring metrics, and a count of errors indicate the adoption of your
    software.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From the examples shared, it is evident that dashboards and metrics have a strong
    bearing on the culture of a team and the habits it inculcates to achieve broader
    business objectives.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'It is important to break down the **key performance indicators** (**KPIs**)
    into smaller and more meaningful metrics. A few examples have been listed as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'KPI – lead time:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metrics: Sprint velocity, defects status by severity, static code analysis
    results, and so on'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'KPI – deployment frequency:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metrics: Test case coverage, a unit test pass/fail rate, percentage build automation,
    the number of build pipelines, and the overall time for deployment'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: KPI – mean time to restore a service
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metrics: The incident resolution time, a count of alerts per day, the service
    response time, and so on'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: KPI – change failure percentage
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metrics: Server exceptions, a count of incidents by severity, and so on'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Thus, we can conclude that the greater the number of DevOps metrics that you
    plan to measure, the more significant potential and benefit you will observe in
    the transformation of your DevOps practices.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will discuss the concept of value stream mapping as
    it applies to minimizing wastages in your DevOps life cycle.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Value stream mapping
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Value stream mapping** (**VSM**) is a concept that is quite popular in the
    manufacturing industry. It refers to the technique of creating a lean process,
    having very minimal steps to produce a product for the customer. This is an important
    approach to improve any business workflow or process, thereby eliminating waste
    and redundant steps that don’t add any value, especially when viewed from a customer’s
    perspective.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: The main objective of VSM is to critically analyze any given process and reduce
    the number of handoffs required between different team members, thereby improving
    the overall efficiency and productivity. With greater emphasis on digital transformation
    journeys, organizations are reinventing their business strategy, with a rapid
    realignment of any existing business/IT processes. The overall goal is to realign,
    if necessary, the definition of *delivered value* for customers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: In the context of a DevOps life cycle, it may be considered as identifying a
    lean methodology, comprising only the steps that are necessary to produce value
    for the customer. The DevOps value stream serves as an optimization driver, thereby
    impacting people, processes, and products. The primary motivation is to minimize
    wastage while continuously delivering customer value.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: The visualization of how work flows across the various stages of the development
    life cycle, from product ideation, feature prioritization, and developing a solution
    to the eventual release to the customer, is called the value stream map.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'VSM-related activities comprise three major steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: First, a baseline of the current as-is state is prepared.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Second, the target future state is defined, and the processes are redesigned
    by analyzing gaps or improvement areas.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lastly, the gains from the VSM are analyzed to further iterate on this.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Two main KPIs that are impacted by VSM activities are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '**Lead time** (**LT**), also referred to as throughput time, response time,
    and turnaround time. Basically, this refers to elapsed time from the moment work
    is made available as an input to any particular stage of the value stream, until
    the time it is finished and delivered to the next stage or team in the value stream.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交付时间**（**LT**），也称为吞吐时间、响应时间和周转时间。基本上，这指的是从工作作为输入进入价值流的某个特定阶段开始，到完成并交付到价值流中的下一个阶段或团队的经过时间。'
- en: '**Process time** (**PT**), also referred to as processing time, touch time,
    work time, and task time. Basically, this is the time it takes a person to complete
    all the tasks as part of a process to transform an input into an output for one
    unit of work.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理时间**（**PT**），也称为加工时间、接触时间、工作时间和任务时间。基本上，这是一个人完成所有任务以将输入转化为输出所需的时间，适用于单个工作单位。'
- en: 'You can read more about how to apply VSM for your DevOps here: [https://www.lucidchart.com/blog/value-stream-mapping-for-devops](https://www.lucidchart.com/blog/value-stream-mapping-for-devops).'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里阅读更多关于如何将VSM应用于DevOps的内容：[https://www.lucidchart.com/blog/value-stream-mapping-for-devops](https://www.lucidchart.com/blog/value-stream-mapping-for-devops)。
- en: In the next section, we will look at how management teams can significantly
    benefit from data-driven DevOps by narrowing their focus on areas that require
    the most attention.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨管理团队如何通过将焦点集中在最需要关注的领域，显著受益于数据驱动的DevOps。
- en: A data-driven approach
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据驱动的方法
- en: Deriving strategies for improvement through a data-driven approach has proven
    to be successful for most organizations. There is tremendous potential to improve
    your CI/CD processes and speed up the delivery and quality of software by adopting
    a data-driven culture. Most high-performance engineering teams gain insights from
    the numerous dashboards and KPIs being tracked. They make use of the insights
    to identify improvement areas and change themselves accordingly.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过数据驱动的方法制定改进策略已被证明对大多数组织有效。通过采纳数据驱动的文化，提升CI/CD过程并加速软件交付和质量具有巨大的潜力。大多数高性能工程团队通过跟踪的各种仪表板和KPI获得见解，并利用这些见解识别改进的领域并进行相应的调整。
- en: 'Let us look at some of the key aspects of data-driven DevOps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下数据驱动的DevOps的一些关键方面：
- en: '**Objectively measure what matters**: It all starts with identifying the important
    metrics and KPIs that must be tracked, and all measurements should be quantitative
    over qualitative. There is a saying that facts and figures don’t lie. The measurement
    items must be expanded to derive concrete actionable items.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客观地衡量重要事项**：一切都从识别必须跟踪的重要指标和关键绩效指标（KPI）开始，所有的测量应该是定量的，而非定性的。有人说过，事实和数字不会说谎。测量项必须扩展到推导出具体可执行的项目。'
- en: '**Report against benchmarks**: The reporting tools that you use must consistently
    produce reports for the consumption of the various stakeholders. There must be
    some initial benchmarks defined, and the reports should track variance against
    them. Any deviations must be highlighted for action.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与基准对比报告**：你使用的报告工具必须持续生成报告，以供各方利益相关者使用。必须定义一些初步的基准，并且报告应该跟踪与这些基准的偏差。任何偏差都必须突出显示以便采取措施。'
- en: Reporting and subsequent analysis must be a periodic activity (every week at
    a minimum, if not daily) to make course corrections as early as possible.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 报告和后续分析必须是一个定期的活动（至少每周一次，如果不是每天的话），以便尽早进行课程调整。
- en: '**Automate data delivery for immediate actions**: It is important to get data
    in a timely fashion to take corrective actions. Hence, we must rely on any existing
    automation available or explore additional opportunities to improve data capture
    and notification processes. Most of the DevOps tools today have rich automation
    capabilities, making it easier for decision making.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化数据交付以便立即采取行动**：及时获取数据以便采取纠正措施非常重要。因此，我们必须依赖现有的自动化工具，或探索更多机会以改进数据捕获和通知流程。如今大多数DevOps工具都具备丰富的自动化功能，使得决策更加容易。'
- en: For example, when a **pull request** (**PR**) is submitted, a build run checks
    the quality of the changes and can immediately send out an email to a developer
    if there were any automated test run failures. Thus, the developer can fix the
    issue and resubmit their changes, instead of waiting for hours for the full results
    to become available.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当**拉取请求**（**PR**）提交时，构建运行会检查变更的质量，并且如果有任何自动化测试失败，它可以立即向开发者发送电子邮件。这样，开发者可以修复问题并重新提交他们的更改，而不是等待几个小时才能得到完整的结果。
- en: '**Develop insights for decision makers**: Measuring the success of your data-driven
    DevOps processes is important for any organization. There are typically two focus
    areas – first, the KPIs that give insights about the health of your engineering
    life cycle, and second, the main DevOps maturity index metrics that serve as feedback
    for the leadership team.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Teams must also conduct periodic reviews and analyses of data to identify opportunities
    for improvement. The use of techniques such as **Casual Analysis and Resolution**
    (**CAR**) and **fishbone analysis** can help teams identify the root source of
    issues and then act appropriately. You will find useful resources to discover
    more on these topics in the *Further reading* section at the end.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will explore how feedback loops can help in continuous
    improvement.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Operationalizing the feedback loop
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concept of feedback loops originated in **systems thinking**. Every organization
    can be modeled as a system, which refers to an interconnected ecosystem of people,
    processes, and tools that operates in an organized cohesive manner to achieve
    business objectives or outcomes. Feedback is an important concept in systems thinking,
    wherein the stimuli help to control the output of the system.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are new to the term *feedback loops*, imagine it as an interconnected
    relationship between entities or processes wherein a change in one leads to a
    change in the second, which eventually leads to change in the first. It is like
    a cause-effect sequence, where data produced as an outcome of an event or activity
    is used to regulate the outcome by controlling the original input action. A simplified
    view of feedback loops is depicted here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.1 – A simple feedback loop ](img/B18655_14_01.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
- en: Figure 14.1 – A simple feedback loop
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: 'The DevOps processes within an organization can be subjected to systems thinking
    analysis by identifying the appropriate feedback loops aligned with the goal of
    continuous improvement. There are two types of feedback loops:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '**Reinforcing feedback loop**: A positive change or increase in the output
    of the first entity causes an increase in the second entity (positive feedback),
    which eventually leads to a greater increase in the first entity.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, as the productivity of the team improves, the overall velocity
    increases. However, there is a stretch limit beyond which the quality may be impacted.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '**Stabilizing/balancing feedback loop**: A positive change or increase in the
    output of the first entity serves as a signal to decrease the second entity (negative
    feedback), which eventually leads to an adjustment in the output of the first
    entity, forcing it back into a balanced state again.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, as the team focuses on more quality-related checks as part of CI/CD
    processes, this adds up to the overall build time, thereby reducing the agility
    of the releases. Hence, teams are subsequently forced to optimize steps so that
    release agility can be brought back to an optimum state.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look at the importance of designing effective feedback
    loops.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Implementing effective feedback loops
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the examples studied earlier, it is evident that not all feedback loops
    are important. Hence, it is crucial for organizations to design more effective
    feedback loops, and amplify the correct ones to achieve the right balance and
    trade-off between delivery agility, product quality, and the speed of releasing
    software to market. A few recommendations as initial guidance are shared here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that automated notifications are acted upon in a timely manner. Conduct
    periodic root cause analysis to reduce their occurrences.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make use of a VSM technique to uncover any redundant feedback loops that don’t
    add any value.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Achieve the right balance in your feedback systems between stability and positive
    change. Often, stability is more important than speed.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Involve key stakeholders to participate as part of the feedback loops. Human
    interaction can offer more practical and contextual guidance that may be beneficial
    for your team.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make use of operational telemetry and metrics to serve as crucial feedback to
    improve your DevOps practices.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is a popular saying that a one-size-fits-all approach will never work
    in any context. Hence, careful planning is required to identify the feedback loops
    that are important for your organization and team context.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have reviewed a few of the important techniques to foster
    a journey of continuous improvement. To reap the true benefits of DevOps, organizations
    are expected to operate at the highest level of maturity. However, this is rarely
    the case, owing to numerous factors that are sometimes beyond anyone’s control.
    Hence, by establishing a culture of continuous improvement, teams can ensure that
    processes, methods, and practices are as efficient and effective as possible.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Adhering to a systematic and structured approach to continuous improvement might
    turn out to be quite beneficial for the teams. This requires an organizational
    commitment to continuous learning and openness of the teams to scrutinize and
    suggest incremental improvements. There must be dedicated roles appointed to define,
    plan, and monitor the continuous improvement initiatives.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Also, periodic training must be planned for all personnel on DevOps-related
    topics, acting as a source of stimuli for the self-directed teams so that they
    stay committed to the organization’s DevOps improvement. Team culture is fundamental
    to achieving engineering excellence through the demonstration of expertise in
    the various DevOps practices.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we shall explore how organizations can expedite their cloud
    transformation journeys through DevOps.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Activity
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organize your team and conduct a brainstorming session, preferably using a whiteboard
    tool.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create three vertical swim lanes – **Retain**, **Improve**, and **Discard**.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using sticky notes, advise your team to publish their thoughts on the whiteboard.
    Basically, identify an existing process and group them in the appropriate swim
    lane.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Critically analyze the items grouped as Discard, and then verify whether they
    add any value while achieving the overall objectives of quality and efficiency,
    especially from a customer’s point of view.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, identify improvement areas for the existing processes by either simplifying
    them altogether or changing them.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publish a summary of your findings with the management team.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A fishbone analysis how-to: [https://citoolkit.com/articles/fishbone-diagram/](https://citoolkit.com/articles/fishbone-diagram/)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Causal Analysis and Resolution*: [https://www.wibas.com/cmmi/causal-analysis-and-resolution-car-cmmi-dev](https://www.wibas.com/cmmi/causal-analysis-and-resolution-car-cmmi-dev)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Optimize your CD pipeline: https://www.atlassian.com/continuous-delivery/principles/value-stream-mapping'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*How to Build a Data-Driven DevOps Decision Making Culture*: [https://www.launchableinc.com/how-to-build-a-data-driven-devops-decision-making-culture](https://www.launchableinc.com/how-to-build-a-data-driven-devops-decision-making-culture)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Understanding feedback loops in DevOps*: https://otomato.io/udnerstanding-feedback-loops-in-devops'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Systems thinking feedback loops: https://medium.com/@myroslavazel/feedback-loops-in-system-thinking-7ef06e2ff310'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VSM: [https://www.devopsinstitute.com/devops-value-stream-mapping-a-box-score-based-approach/](https://www.devopsinstitute.com/devops-value-stream-mapping-a-box-score-based-approach/)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
