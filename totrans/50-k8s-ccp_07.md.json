["```\n\napiVersion: apps/v1\nkind: Deployment\n```", "```\n\napiVersion: networking.k8s.io/v1\nkind: Ingress\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```", "```\n\n        deployment, err := appsv1.NewDeployment(ctx, conf.Require(\"deployment\"), &appsv1.DeploymentArgs{\n            Spec: appsv1.DeploymentSpecArgs{\n                Selector: &metav1.LabelSelectorArgs{\n                    MatchLabels: appLabels,\n                },\n                Replicas: pulumi.Int(2),\n                Template: &corev1.PodTemplateSpecArgs{\n                    Metadata: &metav1.ObjectMetaArgs{\n                        Labels: appLabels,\n                    },\n                    Spec: &corev1.PodSpecArgs{\n                        Containers: corev1.ContainerArray{\n                            corev1.ContainerArgs{\n                                Name:  pulumi.String(conf.Require(\"containerName\")),\n                                Image: pulumi.String(conf.Require(\"imageName\")),\n                            }},\n                    },\n                },\n            },\n        })\n        if err != nil {\n            return err\n        }\n```", "```\n\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-web\n  labels:\n    role: myrole\nspec:\n  containers:\n    - name: web\n      image: nginx\n      ports:\n        - name: web\n          containerPort: 80\n          protocol: TCP\n```", "```\n\n    apiVersion: apps/v1\n    ```", "```\n\n    kind: Deployment\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: nginx-deployment\n    ```", "```\n\n    spec:\n    ```", "```\n\n      selector:\n    ```", "```\n\n        matchLabels:\n    ```", "```\n\n          app: nginxdeployment\n    ```", "```\n\n      replicas: 2\n    ```", "```\n\n      template:\n    ```", "```\n\n        metadata:\n    ```", "```\n\n          labels:\n    ```", "```\n\n            app: nginxdeployment\n    ```", "```\n\n        spec:\n    ```", "```\n\n          containers:\n    ```", "```\n\n          - name: nginxdeployment\n    ```", "```\n\n            image: nginx:latest\n    ```", "```\n\n            ports:\n    ```", "```\n\n            - containerPort: 80\n    ```", "```\n\n    apiVersion: apps/v1\n    ```", "```\n\n    kind: DaemonSet\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: nginx-deployment\n    ```", "```\n\n    spec:\n    ```", "```\n\n      # nodeSelecter: Field that you can specify what worker nodes you want the Pod to deploy to\n    ```", "```\n\n      selector:\n    ```", "```\n\n        matchLabels:\n    ```", "```\n\n          app: nginxdeployment\n    ```", "```\n\n      template:\n    ```", "```\n\n        metadata:\n    ```", "```\n\n          labels:\n    ```", "```\n\n            app: nginxdeployment\n    ```", "```\n\n        spec:\n    ```", "```\n\n          containers:\n    ```", "```\n\n          - name: nginxdeployment\n    ```", "```\n\n            image: nginx:latest\n    ```", "```\n\n            ports:\n    ```", "```\n\n            - containerPort: 80\n    ```", "```\n\n    apiVersion: apps/v1\n    ```", "```\n\n    kind: StatefulSet\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: nginx-deployment\n    ```", "```\n\n    spec:\n    ```", "```\n\n      selector:\n    ```", "```\n\n        matchLabels:\n    ```", "```\n\n          app: nginxdeployment\n    ```", "```\n\n      serviceName: nginxservice\n    ```", "```\n\n      replicas: 2\n    ```", "```\n\n      template:\n    ```", "```\n\n        metadata:\n    ```", "```\n\n          labels:\n    ```", "```\n\n            app: nginxdeployment\n    ```", "```\n\n        spec:\n    ```", "```\n\n          containers:\n    ```", "```\n\n          - name: nginxdeployment\n    ```", "```\n\n            image: nginx:latest\n    ```", "```\n\n            ports:\n    ```", "```\n\n            - containerPort: 80\n    ```", "```\n\n    ---\n    ```", "```\n\n    apiVersion: v1\n    ```", "```\n\n    kind: Service\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: nginxservice\n    ```", "```\n\n    spec:\n    ```", "```\n\n      selector:\n    ```", "```\n\n        app: nginxdeployment\n    ```", "```\n\n      ports:\n    ```", "```\n\n        - protocol: TCP\n    ```", "```\n\n          port: 80\n    ```", "```\n\n      clusterIP: None\n    ```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 4\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```", "```\n\napiVersion: autoscaling.k8s.io/v1\nkind: VerticalPodAutoscaler\nmetadata:\n  name: nginx-verticalscale\nspec:\n  targetRef:\n    apiVersion: \"apps/v1\"\n    kind:       Deployment\n    name:       nginxdeployment\n  updatePolicy:\n    updateMode: \"Auto\"\n```", "```\n\napiVersion: v1\nkind: Pod\nmetadata:\n  name: testsidecar\nspec:\n  containers:\n  - name: container1\n    image: nginx\n  - name: container2\n    image: debian\n    command: [\"/bin/sh\", \"-c\"]\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        imagePullPolicy: Never\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 5\n          periodSeconds: 10\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        imagePullPolicy: Never\n        ports:\n        - containerPort: 80\n        livenessProbe:\n          httpGet:\n            scheme: HTTP\n            path: /index.html\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n```", "```\n\n    kind: StorageClass\n    ```", "```\n\n    apiVersion: storage.k8s.io/v1\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: azurefile-csi\n    ```", "```\n\n    provisioner: file.csi.azure.com\n    ```", "```\n\n    allowVolumeExpansion: true\n    ```", "```\n\n    mountOptions:\n    ```", "```\n\n      - dir_mode=0777\n    ```", "```\n\n      - file_mode=0777\n    ```", "```\n\n      - uid=0\n    ```", "```\n\n      - gid=0\n    ```", "```\n\n      - mfsymlinks\n    ```", "```\n\n      - cache=strict\n    ```", "```\n\n      - actimeo=30\n    ```", "```\n\n    parameters:\n    ```", "```\n\n      skuName: Premium_LRS\n    ```", "```\n\n    apiVersion: v1\n    ```", "```\n\n    kind: PersistentVolume\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: azure-pv\n    ```", "```\n\n    spec:\n    ```", "```\n\n      storageClassName: \" azurefile-csi \"\n    ```", "```\n\n      claimRef:\n    ```", "```\n\n        name: azurefile\n    ```", "```\n\n        namespace: default\n    ```", "```\n\n    apiVersion: v1\n    ```", "```\n\n    kind: PersistentVolumeClaim\n    ```", "```\n\n    metadata:\n    ```", "```\n\n      name: azurefile\n    ```", "```\n\n    spec:\n    ```", "```\n\n      accessModes:\n    ```", "```\n\n        - ReadWriteMany\n    ```", "```\n\n      storageClassName: azurefile-csi\n    ```", "```\n\n      resources:\n    ```", "```\n\n        requests:\n    ```", "```\n\n          storage: 10Gi\n    ```", "```\n\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        resources:\n          limits:\n            memory: \"128Mi\"\n        ports:\n        - containerPort: 80\n```", "```\n\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n        ports:\n        - containerPort: 80\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      namespace: webapp\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:latest\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n        ports:\n        - containerPort: 80\n```", "```\n\napiVersion: v1\nkind: namespace\nmetadata:\n  name: test\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: memorylimit\n  namespace: test\nspec:\n  hard:\n    requests.memory: 512Mi\n    limits.memory: 1000Mi\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:1.1\n        ports:\n        - containerPort: 80\n```", "```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginxdeployment\n  revisionHistoryLimit: 3\n  progressDeadlineSeconds: 300\n  minReadySeconds: 10\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 1\n  replicas: 4\n  template:\n    metadata:\n      labels:\n        app: nginxdeployment\n    spec:\n      containers:\n      - name: nginxdeployment\n        image: nginx:1.2\n        ports:\n        - containerPort: 80\n```", "```\n\nkubectl rollout history deployment nginxdeployment\n```", "```\n\nkubectl rollout undo deployment/nginxdeployment --to-revision=whichever_revision_number_youd_like\n```"]