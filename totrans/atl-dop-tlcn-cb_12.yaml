- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Escalate Using Opsgenie Alerts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As part of Atlassian’s Open DevOps package, you also get access to Opsgenie.
    Opsgenie is a separate product that allows teams to manage alerts, incidents,
    and incident escalation. It is normally used by agents using **Jira Service Management**,
    but it also works for software teams that need to be involved in resolving production
    issues. Software teams can leverage the power of Opsgenie to manage alerts and
    incidents that occur against the systems that have been deployed to production.
  prefs: []
  type: TYPE_NORMAL
- en: As we look at the entire DevOps lifecycle, Opsgenie facilitates monitoring activities.
    Once your products and services are deployed in production, monitoring and reacting
    to incidents is a critical piece of the feedback loop. This chapter will explore
    how to configure Opsgenie and integrate it with Jira.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter has the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Opsgenie teams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Opsgenie with Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up on-call schedules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring escalation policies and rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Escalation and notifications configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improving team communication and response with ChatOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You will need the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opsgenie
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compass
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Opsgenie teams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we are going to configure your team so that Opsgenie can send
    out the appropriate notifications when an incident occurs. If you have already
    created a team in Jira, Confluence, or Compass, you will need to recreate your
    team in Opsgenie because as of the time of writing, the team in Opsgenie doesn’t
    communicate with those team settings. You will need to recreate your team in Opsgenie
    exactly how you have it in the other Atlassian tools if you want the same team
    name and members. Otherwise, you have the option to create an entirely new team
    in Opsgenie.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps will guide you through creating a team in Opsgenie:'
  prefs: []
  type: TYPE_NORMAL
- en: In Opsgenie, click on **Teams** in the navigation bar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure \uFEFF12.1 – Select Teams in Opsgenie](img/B21937_12_01.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 12.1 – Select Teams in Opsgenie
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Add team**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.2 – Add a new team](img/B21937_12_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.2 – Add a new team
  prefs: []
  type: TYPE_NORMAL
- en: Provide a name and a description of your team, and if you have the member information
    available, add the members’ names as well. Click on **Add team** when you have
    finished adding your members to the new team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.3 – New team details](img/B21937_12_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.3 – New team details
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If your team member doesn’t show up, then you’ll need to go to Opsgenie’s settings
    in the navigation bar and add your users there. As noted earlier, Opsgenie is
    independent from the rest of the Atlassian tools and users are managed independently
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you have not added your team members to Opsgenie, you can add them by clicking
    on **Members** in the left pane and then clicking **Add member** at the top of
    the **Members** page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.4 – Opsgenie settings to add new members](img/B21937_12_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.4 – Opsgenie settings to add new members
  prefs: []
  type: TYPE_NORMAL
- en: Add any missing team members to your Opsgenie team and assign the appropriate
    role (**user** or **admin**). Click **Add** when you are finished adding members.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.5 – Add a member to the team with the appropriate role](img/B21937_12_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.5 – Add a member to the team with the appropriate role
  prefs: []
  type: TYPE_NORMAL
- en: Now your team is all onboarded in Opsgenie. It is time to start creating your
    team’s on-call schedule, which will be covered in the next recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Opsgenie with Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Opsgenie is a separate Atlassian product that is typically bundled with Jira
    Service Management or when you go through Atlassian’s Open DevOps package. When
    you sign up for either service, Opsgenie will be made available but navigating
    to the Opsgenie product is not very easy. For this chapter, we are going to focus
    on utilizing Opsgenie through Jira. Since Open DevOps does not include Jira Service
    Management, there will be no discussion of Jira Service Management in this chapter,
    but feel free to explore the capabilities of Jira Service Management as it is
    a great product used for IT service management teams.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Jira, select the Jira project your team is using to track their development
    tasks. Once in that project, you’ll first want to enable and connect with Opsgenie.
    You’ll need to use the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the Jira project that you want to integrate with Opsgenie, then go to
    **Project settings** and select **Toolchain**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.6 – Toolchain selection from within the Jira project](img/B21937_12_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.6 – Toolchain selection from within the Jira project
  prefs: []
  type: TYPE_NORMAL
- en: In the **Toolchain** window, click on **Add**. From the dropdown, select **Add**
    **on-call team**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.7 – Add new on-call team from within Toolchain](img/B21937_12_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.7 – Add new on-call team from within Toolchain
  prefs: []
  type: TYPE_NORMAL
- en: Select **Opsgenie** and click on **Add** **to project**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.8 – Select Opsgenie as an on-call team provider](img/B21937_12_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.8 – Select Opsgenie as an on-call team provider
  prefs: []
  type: TYPE_NORMAL
- en: Create or search for a team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.9 – Add an on-call team](img/B21937_12_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.9 – Add an on-call team
  prefs: []
  type: TYPE_NORMAL
- en: Type in the name of your team and click on the green circle to create the team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.10 – Select the team to add](img/B21937_12_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.10 – Select the team to add
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Add** **team** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.11 – Add an on-call team](img/B21937_12_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.11 – Add an on-call team
  prefs: []
  type: TYPE_NORMAL
- en: Back in your Jira **Project settings**, click on **Features**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.12 – Select Features from within the Jira project](img/B21937_12_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.12 – Select Features from within the Jira project
  prefs: []
  type: TYPE_NORMAL
- en: Under **Operations**, find the **On-call** section and make sure the slider
    is green.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.13 – Enable On-call from within the Jira project features](img/B21937_12_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.13 – Enable On-call from within the Jira project features
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to access your on-call schedule and have a link to jump
    into Opsgenie from your main Jira project. In your Jira project, you’ll have an
    **On-call** section and a link that says **View** **in Opsgenie**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.14 – On-call view from within the Jira project](img/B21937_12_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.14 – On-call view from within the Jira project
  prefs: []
  type: TYPE_NORMAL
- en: Opsgenie is now connected with Jira and your team is now ready to start managing
    alerts and viewing on-call schedules from within Jira.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up on-call schedules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once your team has been created and your team members have been added, it is
    time to add an **on-call schedule**. The on-call schedule allows your team to
    divide responsibility with respect to making sure that your components and software
    always has coverage. If something goes wrong with a production environment, the
    on-call schedule will know who to notify based on the time of the incident and
    the team member assigned to that block of time.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An on-call schedule in Opsgenie lets your team stay organized and distribute
    the responsibility for managing and ensuring that critical components are operational.
    The following steps will show you how to configure your team’s on-call schedule:'
  prefs: []
  type: TYPE_NORMAL
- en: In Opsgenie, click on **Teams** in the navigation bar and then click on the
    team for which you want to create an on-call schedule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.15 – Select Opsgenie team](img/B21937_12_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.15 – Select Opsgenie team
  prefs: []
  type: TYPE_NORMAL
- en: Once you are in the team dashboard, click on the **On-call** button. This will
    present you with a few different options. For now, scroll all the way down and
    find the **On-call** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.16 – Team On-call schedule](img/B21937_12_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.16 – Team On-call schedule
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Rotations** dictate who in your team will be on call for that specific time
    period. There should already be an existing rotation visible. We are going to
    edit this existing rotation. Optionally, you have the option to create additional
    rotations. Adding a new rotation can complicate things, so it is recommended that
    you stick to a single rotation while your team gets used to being on-call. Most
    software teams are not used to being on-call, so this may be a bit of a learning
    curve. Try to keep your rotations as simple as possible while your team is starting
    out. Opsgenie will be able to scale and grow with your team as you get better
    and more used to doing rotations. As a best practice, a teammate should be assigned
    at least a 1 full week as part of their rotation.'
  prefs: []
  type: TYPE_NORMAL
- en: Edit the existing rotation by clicking on the pencil icon button under the **Rotations**
    heading.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.17 – Edit existing on-call rotation](img/B21937_12_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.17 – Edit existing on-call rotation
  prefs: []
  type: TYPE_NORMAL
- en: Start by changing the rotation name to anything that makes more sense for you
    and your team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.18 – Edit rotation name](img/B21937_12_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.18 – Edit rotation name
  prefs: []
  type: TYPE_NORMAL
- en: From there, under **Participants**, there is a search box. There, type in the
    names of your team members to add them as participants of this rotation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.19 – Add team members as participants](img/B21937_12_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.19 – Add team members as participants
  prefs: []
  type: TYPE_NORMAL
- en: Next, set your **Rotation type** option. As mentioned earlier, it is recommended
    you do a weekly rotation. You have the option to do **daily**, **weekly**, or
    a **custom** rotations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.20 – Select rotation type](img/B21937_12_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.20 – Select rotation type
  prefs: []
  type: TYPE_NORMAL
- en: After that, you will set the start date for your rotation. Optionally, you can
    set when the rotation is going to end. Most teams will have a rotation that lives
    on forever.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.21 – Select rotation start date](img/B21937_12_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.21 – Select rotation start date
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you fill all of that information out, Opsgenie will create your schedule:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.22 – Updated rotation on-call schedule](img/B21937_12_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.22 – Updated rotation on-call schedule
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Add** button and your on-call schedule will be set.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you can make additional on-call schedules for weekends, holidays,
    and pre-planned days off. Whatever your team may need, Opsgenie is flexible enough
    and you will be able to put your team’s schedule in Opsgenie to ensure that escalation
    policies and routing rules in the next recipe work effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Your on-call schedule is now created. Whenever it is someone’s turn to be on
    call, they will receive a notification from Opsgenie to start their rotation.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring escalation policies and rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once your on-call schedule has been configured, it is time to configure the
    escalation policies and routing rules. Opsgenie uses the **escalation policies**,
    **routing rules**, and the **on-call schedule** from the previous recipe to determine
    who will be alerted when an incident occurs.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to get the escalation policies and routing rules correct otherwise
    you risk sending the alert to the wrong team. The escalation policy you configure
    will determine which users are notified when an alert occurs. Most importantly,
    the escalation policy determines the order of which users get notified and when
    based on how much time has elapsed since the alert was created. If your team doesn’t
    reply, the next person in the chain gets notified until someone does something
    to resolve the alert/incident. The routing policy will determine how the notification
    gets routed when an alert occurs. There are a few different options available
    to you which will be explored in more detail in this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By default, you should already have an escalation policy created in Opsgenie.
    Similar to creating the on-call schedule, you have the option to modify the existing
    escalation policy, or you can add additional escalation policies.
  prefs: []
  type: TYPE_NORMAL
- en: 'The escalation policy determines who gets notified of any alerts in Opsgenie
    when something goes wrong. Let’s configure your first escalation policy:'
  prefs: []
  type: TYPE_NORMAL
- en: Select your team from Opsgenie.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.23 – Selected team to configure escalation policy](img/B21937_12_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.23 – Selected team to configure escalation policy
  prefs: []
  type: TYPE_NORMAL
- en: Start by hovering over the existing escalation policy and you will see the **Edit**
    button reveal itself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.24 – Edit existing escalation policy](img/B21937_12_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.24 – Edit existing escalation policy
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on the **Edit** button will pull up a menu that allows you to configure
    your escalation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.25 – Escalation policies that can be configured](img/B21937_12_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.25 – Escalation policies that can be configured
  prefs: []
  type: TYPE_NORMAL
- en: The first item to change is the `escalation`. Feel free to change it to whatever
    you want.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.26 – Updated escalation name](img/B21937_12_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.26 – Updated escalation name
  prefs: []
  type: TYPE_NORMAL
- en: Next, you can optionally provide a **Description** text to help your team have
    a better understanding of what the purpose of this specific escalation policy
    is.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.27 – Updated escalation description](img/B21937_12_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.27 – Updated escalation description
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you can modify the existing rules or add additional rules.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.28 – Updated escalation rules](img/B21937_12_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.28 – Updated escalation rules
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: By default, the escalation policy will immediately notify all the members of
    your on-call schedule as soon as an alert is created, and it is not acknowledged
    right away. Then, after 10 minutes, if no one from the on-call schedule has acknowledged
    the alert, a notification is sent to all the members of your team. This will include
    all the members not currently on the on-call rotation.
  prefs: []
  type: TYPE_NORMAL
- en: If you need to escalate things even further, you can add additional rules.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.29 – Additional escalation rules](img/B21937_12_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.29 – Additional escalation rules
  prefs: []
  type: TYPE_NORMAL
- en: When adding an additional rule, you first need to determine whether the escalation
    policy will escalate when an alert is not acknowledged or not closed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.30 – Determine when rule is triggered](img/B21937_12_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.30 – Determine when rule is triggered
  prefs: []
  type: TYPE_NORMAL
- en: Once you make that decision, then you pick how much time can elapse after the
    alert is created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.31 – Determine how long after trigger alert should wait](img/B21937_12_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.31 – Determine how long after trigger alert should wait
  prefs: []
  type: TYPE_NORMAL
- en: Next, pick who will receive the notification of the escalation. You have quite
    a few options and just keep in mind that as time elapses, you want to increase
    the visibility of the alert to the appropriate people that can then take action
    to address the alert.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.32 – Select who should get notified of the alert](img/B21937_12_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.32 – Select who should get notified of the alert
  prefs: []
  type: TYPE_NORMAL
- en: Finally, pick a specific team or user to receive the notification. The teams
    available will be determined by the previous recipe.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.33 – Select the team that will receive the alert](img/B21937_12_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.33 – Select the team that will receive the alert
  prefs: []
  type: TYPE_NORMAL
- en: When you are finished making the escalation rule, click on **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.34 – Save escalation rule](img/B21937_12_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.34 – Save escalation rule
  prefs: []
  type: TYPE_NORMAL
- en: There’s more
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that the escalation policy exists, it is time to work on the routing rules.
  prefs: []
  type: TYPE_NORMAL
- en: Routing rules
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Like with the escalation policy, each team should have a default routing rule
    in place. Routing rules are quite simple, and you can either modify the existing
    routing rule or add a new routing rule altogether. Let us use the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Back in Opsgenie, under the **On-call** section, we are going to modify the
    default routing rule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.35 – Routing rule configuration](img/B21937_12_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.35 – Routing rule configuration
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You have three main options when it comes to setting up your routing rules.
    You can route the alert to no one, you can route it to your escalation policy,
    or you can route it directly to your on-call team.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the existing routing rule and then you will be able to select which
    type of route you want to route your alerts to. The following screenshot shows
    the options that are available.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.36 – Select escalation routing rule](img/B21937_12_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.36 – Select escalation routing rule
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, you can create a new routing rule if you do not want to use
    the default one that Opsgenie provides. Creating a routing rule presents you with
    a few more options when compared to creating an escalation rule. The following
    steps will explain how to configure a routing rule:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To get started, click on **Add routing rule** in the top-right corner.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.37 – Add a new routing rule](img/B21937_12_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.37 – Add a new routing rule
  prefs: []
  type: TYPE_NORMAL
- en: After you click on the **Add routing rule** button, you’ll be prompted to provide
    a name for your routing rule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.38 – Provide the routing rule a name](img/B21937_12_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.38 – Provide the routing rule a name
  prefs: []
  type: TYPE_NORMAL
- en: Next, you’ll pick when the routing rule goes into effect. You can pick from
    **Match all alerts**, which means that for any alert, the routing rule will go
    into effect (default). Alternatively, you can make your routing rule trigger based
    on the condition of the alert.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.39 – Select what conditions trigger the routing rule](img/B21937_12_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.39 – Select what conditions trigger the routing rule
  prefs: []
  type: TYPE_NORMAL
- en: You can create conditions based on either the alert’s priority or a tag associated
    with it. The most important takeaway here is that you can make the routing rule
    go into effect if an alert with a specific priority is received.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.40 – Determine conditions for the routing rule](img/B21937_12_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.40 – Determine conditions for the routing rule
  prefs: []
  type: TYPE_NORMAL
- en: Once you set up your conditions, then the final step is to determine the action
    that is going be triggered by the automation rule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.41 – Determine the action the routing rule will take](img/B21937_12_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.41 – Determine the action the routing rule will take
  prefs: []
  type: TYPE_NORMAL
- en: Once you pick the route, simply click on the **Add** button to finish creating
    your new routing rule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.42 – Add the new routing rule](img/B21937_12_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.42 – Add the new routing rule
  prefs: []
  type: TYPE_NORMAL
- en: Now that your escalation and routing rules are configured, it is time to manage
    the notifications that are sent out from Opsgenie.
  prefs: []
  type: TYPE_NORMAL
- en: Escalation and notifications configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When an incident occurs in a production environment, an alert can be raised
    in Opsgenie. You do this by opening Opsgenie and creating an alert directly from
    within Opsgenie. When Opsgenie is bundled with Jira Service Management, the creation
    of an alert can happen from within a support request. However, since Jira Service
    Management is not part of the Open DevOps package, an alert must be manually created
    in Opsgenie.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s use the following steps to create an alert:'
  prefs: []
  type: TYPE_NORMAL
- en: To create an alert, click on **Alerts** in the navigation bar within Opsgenie.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.43 – Select Alerts from the Opsgenie menu](img/B21937_12_43.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.43 – Select Alerts from the Opsgenie menu
  prefs: []
  type: TYPE_NORMAL
- en: Once you are in the **Alerts** section, click on the **Create** **alert** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.44 – Create an alert in Opsgenie](img/B21937_12_44.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.44 – Create an alert in Opsgenie
  prefs: []
  type: TYPE_NORMAL
- en: Fill out the information for the alert.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.45 – Alert creation information](img/B21937_12_45.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.45 – Alert creation information
  prefs: []
  type: TYPE_NORMAL
- en: Select the API integration you would like to utilize for this alert. **Default
    API** is recommended for beginners and is the only option if you are in the free
    version of Opsgenie.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.46 – Alert API selection](img/B21937_12_46.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.46 – Alert API selection
  prefs: []
  type: TYPE_NORMAL
- en: Enter the **Alert message** that should go out. This box has a 130-character
    limit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.47 – Alert message](img/B21937_12_47.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.47 – Alert message
  prefs: []
  type: TYPE_NORMAL
- en: Select the priority of the alert. Depending on the escalation rules you created,
    this alert will impact/trigger that escalation rule.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.48 – Alert priority](img/B21937_12_48.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.48 – Alert priority
  prefs: []
  type: TYPE_NORMAL
- en: If you know who the responders of the alert should be, fill that out. Otherwise,
    the routing rules will figure out who should be notified based on the values you
    configured in your routing rule configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.49 – Alert responders](img/B21937_12_49.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.49 – Alert responders
  prefs: []
  type: TYPE_NORMAL
- en: You can leverage **Tags** if your routing rules are configured to take advantage
    of tags instead of priority.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.50 – Alert responders](img/B21937_12_50.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.50 – Alert responders
  prefs: []
  type: TYPE_NORMAL
- en: Finally, click on **Create** to create the alert.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.51 – Complete alert example](img/B21937_12_51.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.51 – Complete alert example
  prefs: []
  type: TYPE_NORMAL
- en: The alert will now be visible in the **Alerts** section.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.52 – View of available alerts](img/B21937_12_52.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.52 – View of available alerts
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Based on your routing rules and escalation policy, each alert will trigger the
    appropriate notifications so that your team can triage and fix the problem that
    triggered the alert.
  prefs: []
  type: TYPE_NORMAL
- en: Once the alert has been acknowledged, the notifications will stop going out.
    This means that your team has addressed the problem or has determined that an
    incident has occurred and the alert needs to be escalated to an incident.
  prefs: []
  type: TYPE_NORMAL
- en: If you click on the alert, you’ll be able to see all the automatic notifications
    that were sent out for the alert.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.53 – Alert history](img/B21937_12_53.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.53 – Alert history
  prefs: []
  type: TYPE_NORMAL
- en: Alerts are critical to ensure your team is notified of critical events and know
    when they need to engage to fix a problem. Make sure you refine your alerts as
    your ecosystem changes to ensure your team is appropriately notified of problems
    when they first occur.
  prefs: []
  type: TYPE_NORMAL
- en: Improving team communication and response with ChatOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When issues arise, your team needs to communicate quickly. In the digital age,
    relying on emails is not going to cut it when seconds matter. The best way for
    teams to engage is with instant communication. Most teams today already utilize
    popular communication tools such as Slack and Microsoft Teams. Opsgenie integrates
    with both of those tools, which then allow your teams to quickly communicate when
    an alert or incident occurs.
  prefs: []
  type: TYPE_NORMAL
- en: While Opsgenie integrates with a variety of instant messaging tools, this recipe
    is going to focus on getting Opsgenie integrated with Slack. Integrating with
    Slack not only allows your team to communicate quicker, but also enables your
    team to get alert information, on-call schedules, and so much more from within
    the Slack interface.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Integrating Opsgenie with Slack is straightforward. The following steps will
    walk you through everything you need to know to get this integration configured:'
  prefs: []
  type: TYPE_NORMAL
- en: To initiate the integration with Slack, start by going to the **Teams** section
    within Opsgenie and then select your team.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.54 – Available teams in Opsgenie](img/B21937_12_54.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.54 – Available teams in Opsgenie
  prefs: []
  type: TYPE_NORMAL
- en: Once you are in your team dashboard, click on **Integrations** on the left-hand
    side.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.55 – Select integrations for your selected team](img/B21937_12_55.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.55 – Select integrations for your selected team
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Please note that if you are on the free version of Opsgenie, this is the only
    way to integrate with Slack. There is a different method through Opsgenie’s settings
    page, but that is only possible for teams that are paying for Opsgenie.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Add integration** to get started.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.56 – Select Add integration to get started](img/B21937_12_56.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.56 – Select Add integration to get started
  prefs: []
  type: TYPE_NORMAL
- en: Select **Slack**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.57 – Available Opsgenie integrations](img/B21937_12_57.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.57 – Available Opsgenie integrations
  prefs: []
  type: TYPE_NORMAL
- en: Follow the instructions displayed. You will need to have a channel ready on
    Slack before you continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.58 – Slack integration with Opsgenie instructions](img/B21937_12_58.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.58 – Slack integration with Opsgenie instructions
  prefs: []
  type: TYPE_NORMAL
- en: After you pick your channel in Slack, confirm the settings that you want enabled
    in Opsgenie. Once you have selected the options that you are satisfied with, click
    on **Save integration**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.59 – Select configurations for Slack integration](img/B21937_12_59.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.59 – Select configurations for Slack integration
  prefs: []
  type: TYPE_NORMAL
- en: Once the integration is configured, you can test the configuration by going
    to Slack and then typing in the `/``genie` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.60 – Slack and Opsgenie integration within the Slack UI](img/B21937_12_60.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.60 – Slack and Opsgenie integration within the Slack UI
  prefs: []
  type: TYPE_NORMAL
- en: Finally, create a sample alert and you’ll see the alert show up in Slack. From
    within Slack, you can now address your alerts without having to disrupt your workflow
    or team communication.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.61 – Opsgenie alert within Slack](img/B21937_12_61.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.61 – Opsgenie alert within Slack
  prefs: []
  type: TYPE_NORMAL
- en: Slack is now integrated with Opsgenie and your team will now be able to receive
    Opsgenie notifications within Slack, which is very helpful since your team will
    not have to change tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 4: Putting It into Practice'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We now take everything we’ve learned in the book so far and apply it. We go
    through a sample project where you start with an idea in Jira Product Discovery,
    create an issue in Jira, and create a branch for development in Bitbucket.
  prefs: []
  type: TYPE_NORMAL
- en: We then perform a commit to look at the pipeline execution from testing to deployment.
    During this execution, we can see the results in both Bitbucket and Compass.
  prefs: []
  type: TYPE_NORMAL
- en: We conclude our journey with a look into the future, where artificial intelligence
    is already changing things. We share some final thoughts and wish you well.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B21937_13.xhtml#_idTextAnchor258)*,* *Putting It All Together
    with a Real-World Example*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B21937_14.xhtml#_idTextAnchor291)*, Appendix Key Takeaways and
    the Future of Atlassian DevOps Tools*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
