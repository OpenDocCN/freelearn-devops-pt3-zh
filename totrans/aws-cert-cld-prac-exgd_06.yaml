- en: '[*Chapter 4*](B17124_04_Final_SK_ePub.xhtml#_idTextAnchor068): Identity and
    Access Management'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第4章*](B17124_04_Final_SK_ePub.xhtml#_idTextAnchor068)：身份与访问管理'
- en: So far, you have learned about the basics of cloud computing and its advantages.
    You have also been introduced to AWS and had a quick overview of its services.
    We have discussed the AWS Global Infrastructure and its support plans for customers
    looking to use the services offered. We have also emphasized the importance of
    AWS accounts and how they help you gain isolated and secure access to the wide
    range of AWS services within which you can build your cloud solutions. We also
    identified the architectural reasons behind having multiple AWS accounts and using
    AWS Organizations to centrally manage all your accounts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解了云计算的基本概念及其优势。您还了解了 AWS，并对其服务进行了快速概览。我们讨论了 AWS 全球基础设施及其支持计划，帮助那些希望使用所提供服务的客户。我们还强调了
    AWS 账户的重要性，以及它们如何帮助您在 AWS 提供的广泛服务中获得隔离且安全的访问权限，从而构建您的云解决方案。我们还阐明了使用多个 AWS 账户并通过
    AWS Organizations 集中管理所有账户的架构原因。
- en: You have also learned how to set up your first AWS Free Tier account, which
    will enable you to start configuring resources on the platform.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您还学会了如何设置您的第一个 AWS 免费套餐账户，这将使您能够开始在平台上配置资源。
- en: In this chapter, we will look at the AWS **Identity and Access Management**
    (**IAM**) service. This is a critical foundational service designed to secure
    access to your AWS account. AWS IAM is an authentication and authorization service
    that enables you to decide who or what can access the AWS services in your account
    (known as **authentication**), and what these entities are permitted to do in
    your account (known as **authorization**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍 AWS **身份与访问管理**（**IAM**）服务。这是一个关键的基础服务，旨在确保安全访问您的 AWS 账户。AWS IAM 是一个身份验证和授权服务，它使您能够决定谁或什么可以访问您账户中的
    AWS 服务（称为**身份验证**），以及这些实体在您的账户中被允许执行的操作（称为**授权**）。
- en: 'This chapter covers the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Introduction to the AWS IAM service
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS IAM 服务简介
- en: The root user account and implementing **Multi-Factor Authentication** (**MFA**)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根用户账户与实施 **多因素身份验证**（**MFA**）
- en: The importance of defining IAM password policies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义 IAM 密码策略的重要性
- en: Key differences between IAM users and IAM groups
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IAM 用户与 IAM 用户组之间的主要区别
- en: Defining permissions with IAM policies
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 IAM 策略定义权限
- en: Reviewing credential reports
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查凭证报告
- en: Exercise 4.1 – creating an IAM group
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习 4.1 – 创建 IAM 用户组
- en: Exercise 4.2 – creating an IAM user and attaching it to the developers group
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习 4.2 – 创建一个 IAM 用户并将其添加到开发者组
- en: Exercise 4.3 – logging in to your AWS account as an IAM user
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习 4.3 – 以 IAM 用户身份登录您的 AWS 账户
- en: Accessing AWS via the CLI
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 CLI 访问 AWS
- en: Exercise 4.4 – accessing the AWS platform using the AWS CLI on a Windows computer
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习 4.4 – 在 Windows 计算机上使用 AWS CLI 访问 AWS 平台
- en: Introduction to the AWS IAM service
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS IAM 服务简介
- en: At this point, you should have a single AWS Free Tier account that you can log
    in to using your chosen email address and password combination. This email address
    that you have used to create the account is also known as the **root user**. The
    root user is the person who created the account and holds the keys to the kingdom.
    This privileged user must be guarded well, and knowledge of its credentials (passwords
    and so on) should not be given to anyone who is not authorized to use it. The
    root user should also not be used for day-to-day operations. You can create additional
    user accounts (what we call IAM users) to perform daily tasks. We'll look at IAM
    users shortly in this chapter.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您应该已经拥有一个单一的 AWS 免费套餐账户，您可以通过所选的电子邮件地址和密码组合登录。您用来创建账户的电子邮件地址也称为**根用户**。根用户是创建账户的人，掌握着所有权限。这位特权用户必须得到妥善保护，其凭证（如密码等）不应交给任何未授权使用的人。根用户也不应被用于日常操作。您可以创建额外的用户账户（我们称之为
    IAM 用户）来执行日常任务。我们将在本章稍后介绍 IAM 用户。
- en: The AWS IAM console
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS IAM 控制台
- en: 'To access any AWS service, including the IAM service, you can either use the
    web-based management console, the **command-line interface** (**CLI**), or AWS
    SDKs if you are writing code. We will start with the AWS Management Console. Log
    in to your AWS account using your root user credentials and you will be presented
    with the following splash screen:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问任何 AWS 服务，包括 IAM 服务，您可以使用基于 Web 的管理控制台、**命令行界面**（**CLI**）或者如果您正在编写代码，则可以使用
    AWS SDK。 我们将从 AWS 管理控制台开始。 使用根用户凭据登录到您的 AWS 帐户，您将看到以下闪屏屏幕：
- en: '![Figure 4.1 – AWS Management Console'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.1 – AWS 管理控制台'
- en: '](img/B17124_04_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_01.jpg)'
- en: Figure 4.1 – AWS Management Console
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – AWS 管理控制台
- en: As you can see from the screenshot, the wide range of services is displayed
    under category headings, depending on the type of service. So, for example, we
    have categories such as **Compute**, **Network**, and **Storage** and under these
    categories, relevant services are listed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您从屏幕截图中可以看到的那样，各种服务按照类别标题显示，具体取决于服务类型。 因此，例如，我们有**计算**、**网络**和**存储**等类别，并在这些类别下列出相关服务。
- en: AWS IAM falls under the **Security, Identity, & Compliance** category, but you
    can also search for the service using the search bar at the top of the page.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: AWS IAM 属于**安全、身份和合规性**类别，但您也可以使用页面顶部的搜索栏搜索该服务。
- en: The AWS IAM services
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS IAM 服务
- en: The first time you navigate to the IAM console, you will note some security
    alerts and a list of best practices to follow.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首次访问 IAM 控制台时，您将注意到一些安全警报和一些需要遵循的最佳实践。
- en: You will also note a *sign-in URL* for IAM users in this account. This is a
    special URL that your IAM users can browse to access your account. This URL is
    customizable and you can replace the series of digits shown after the `https://`
    portion with a custom name that is easier to remember. The series of digits you
    see is, in fact, your AWS account ID.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会注意到 IAM 用户在此帐户中的*登录 URL*。 这是一个特殊的 URL，您的 IAM 用户可以浏览以访问您的帐户。 此 URL 可以自定义，并且您可以将
    `https://` 部分后面显示的一系列数字替换为更易记的自定义名称。 您看到的一系列数字实际上是您的 AWS 帐户 ID。
- en: 'Simply click the `PacktDevAccount`. Names chosen must be unique and you may
    need to associate a common name with your company name to create a name that is
    unique:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 只需点击 `PacktDevAccount`。 所选名称必须是唯一的，您可能需要将一个常用名称与您的公司名称关联，以创建一个独特的名称：
- en: '![Figure 4.2 – IAM dashboard'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.2 – IAM 仪表板'
- en: '](img/B17124_04_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_02.jpg)'
- en: Figure 4.2 – IAM dashboard
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – IAM 仪表板
- en: Once you have customized your IAM sign-in URL, you can provide this link to
    other IAM users, who can use it to sign in to your account. This can only happen
    if your users have an IAM user account to sign in with. We discuss how to create
    IAM users later in this chapter.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 定制 IAM 登录 URL 后，您可以向其他 IAM 用户提供此链接，他们可以使用它登录到您的帐户。 只有在您的用户拥有 IAM 用户帐户以进行登录时，才能这样做。
    我们将在本章后面讨论如何创建 IAM 用户。
- en: In the next section, we look at the root user account and discuss the implementation
    of an additional security measure, using **Multi-Factor Authentication** (**MFA**).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将查看根用户帐户，并讨论使用**多因素身份验证**（**MFA**）实施额外的安全措施。
- en: The root user account and implementing Multi-Factor Authentication (MFA)
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根用户帐户和实施多因素身份验证（MFA）
- en: One of the first things you want to do is configure MFA for your root user account.
    Normally, when you log in to an AWS account, you simply provide a username and
    password. You are probably aware that you must choose a highly complex password
    – one that has lowercase letters, uppercase letters, numbers, and symbols, and
    must be randomly generated rather than dictionary words that can be guessed easily.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您要做的第一件事之一是为根用户帐户配置 MFA。 通常，当您登录到 AWS 帐户时，只需提供用户名和密码。 您可能已经意识到，您必须选择一个非常复杂的密码
    – 一个包含小写字母、大写字母、数字和符号，并且必须是随机生成的密码，而不是可以轻易猜出的字典单词。
- en: However, a username and password combination alone is not sufficient in this
    age of malware attacks, hacking, and brute force attacks. MFA is a mechanism where
    you are prompted to verify your identity using more than one set of credentials.
    Instead of just having two passwords, however, MFA uses two separate secrets to
    verify your identity – *something you know* and *something you have*. So, for
    example, something you know would be your username and password, and something
    you have would be a one-time password pin that is generated on a device that you
    possess. An example of such a device could be an RSA token, a **Universal Second
    Factor** (**U2F**) device, or an authentication app that you can install and use
    on your smartphone.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在如今的恶意软件攻击、黑客入侵和暴力破解攻击的时代，仅凭用户名和密码的组合是不足够的。MFA（多因素认证）是一种机制，要求您使用多于一组凭证来验证身份。与其只有两个密码，MFA
    使用两个独立的密钥来验证您的身份——*你知道的东西*和*你拥有的东西*。举例来说，您知道的东西可能是您的用户名和密码，而您拥有的东西可能是一个在您拥有的设备上生成的一次性密码。例如，这个设备可以是一个
    RSA 令牌、**通用第二因素**（**U2F**）设备，或一个您可以在智能手机上安装并使用的身份验证应用。
- en: We strongly recommend that you set up MFA for your root user account.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议您为根用户账户设置 MFA。
- en: Setting up MFA
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 MFA
- en: Let's quickly set up MFA for our root user account. To complete the step-by
    step guide, you will need access to a smartphone, either an Android or iOS device.
    There are several smartphone-based authenticators that are supported by AWS, including
    Google Authenticator and Microsoft Authenticator. You can review the supported
    apps at [https://aws.amazon.com/iam/features/mfa/](https://aws.amazon.com/iam/features/mfa/).
    For this exercise, go ahead and install the **Google Authenticator app** on your
    phone, which is available free of charge from your Google or iPhone play store.
    If you do not currently have the app installed, make sure you do this first before
    proceeding.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速为根用户账户设置多因素认证（MFA）。为了完成逐步指南，您需要访问智能手机，无论是 Android 还是 iOS 设备。AWS 支持多款基于智能手机的身份验证器，包括
    Google Authenticator 和 Microsoft Authenticator。您可以在[https://aws.amazon.com/iam/features/mfa/](https://aws.amazon.com/iam/features/mfa/)查看支持的应用程序。在本次操作中，请安装**Google
    Authenticator 应用**，该应用可以通过 Google Play 或 iPhone App Store 免费下载。如果您尚未安装该应用，请先安装再继续操作。
- en: 'Ensure that you have navigated to the IAM management console, then take the
    following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已进入 IAM 管理控制台，然后按照以下步骤操作：
- en: On the IAM console, click on **Enable MFA**, under **Security alerts**:![Figure
    4.3 – Security alerts
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 IAM 控制台中，点击**启用 MFA**，在**安全警报**下：![图 4.3 – 安全警报
- en: '](img/B17124_04_03.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_03.jpg)'
- en: Figure 4.3 – Security alerts
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.3 – 安全警报
- en: You are then presented with the **Security Credentials** page. Click on **Activate
    MFA.**
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着，您将看到**安全凭证**页面。点击**启用 MFA**。
- en: A pop-up dialog box is presented, and you need to select **Virtual MFA device**:![Figure
    4.4 – Setting up a virtual MFA device
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 弹出对话框后，您需要选择**虚拟 MFA 设备**：![图 4.4 – 设置虚拟 MFA 设备
- en: '](img/B17124_04_04.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_04.jpg)'
- en: Figure 4.4 – Setting up a virtual MFA device
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.4 – 设置虚拟 MFA 设备
- en: Click **Continue**.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**。
- en: You are then presented with the **Set up virtual MFA device** dialog box. You
    will have the option to scan a QR code to link your Google Authenticator app on
    your mobile phone with your AWS account. To get started, launch the Google Authenticator
    app on your phone and select the **Scan a QR code** option (you may have to tap
    the plus sign (**+**) first). This will activate your phone camera.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着，您将看到**设置虚拟 MFA 设备**对话框。您可以选择扫描二维码，将 Google Authenticator 应用与您的 AWS 账户绑定。首先，启动
    Google Authenticator 应用，选择**扫描二维码**选项（您可能需要先点击加号符号（**+**））。这将激活您的手机相机。
- en: On the AWS console, in the **Set up virtual MFA device** dialog box, click **Show
    QR code** under list item number **2**:![Figure 4.5 – Setting up a virtual MFA
    device
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 控制台的**设置虚拟 MFA 设备**对话框中，点击**显示二维码**，位于列表项**2**下：![图 4.5 – 设置虚拟 MFA 设备
- en: '](img/B17124_04_05.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_05.jpg)'
- en: Figure 4.5 – Setting up a virtual MFA device
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.5 – 设置虚拟 MFA 设备
- en: The QR code will be displayed. At this point, you need to position your phone
    camera so that it captures the QR code while in the Google Authenticator app.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 屏幕上将显示二维码。此时，您需要将手机相机对准二维码，以便在 Google Authenticator 应用中扫描。
- en: Once the QR code is captured, you will be presented with an MFA code, which
    lasts for a few seconds. You will then need to type in the code in the textbox
    next to **MFA code 1**. Wait for the next code to be displayed and type that code
    into the textbox next to **MFA code 2**.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦扫描到二维码，您将看到一个 MFA 代码，持续几秒钟。然后，您需要将该代码输入到 **MFA 代码 1** 旁边的文本框中。等待下一个代码显示出来，然后将该代码输入到
    **MFA 代码 2** 旁边的文本框中。
- en: Finally, click **Assign MFA**.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击 **分配 MFA**。
- en: Your root user has now been configured with MFA authentication. The next time
    you log out and then log back in, you will be prompted to enter the MFA code shown
    on your Google Authenticator app after you provide your root user's email address
    and password. Remember that the MFA one-time pin expires after a few seconds,
    so you need to promptly provide the code shown in your app or wait for the next
    code.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您的根用户现在已配置 MFA 身份验证。下次您注销后重新登录时，系统将在您输入根用户的电子邮件地址和密码后提示您输入在 Google Authenticator
    应用中显示的 MFA 代码。请记住，MFA 一次性密码在几秒钟后过期，因此您需要及时输入应用中显示的代码，或者等待下一个代码。
- en: Once you provide the MFA pin, you will then be logged in and redirected to the
    AWS Management Console.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您提供了 MFA 密码，您将被登录并重定向到 AWS 管理控制台。
- en: In this section, we introduced you to the basic AWS Management Console, and
    AWS IAM. We also looked at how to configure MFA for your root user account.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们向您介绍了基本的 AWS 管理控制台和 AWS IAM。我们还介绍了如何为您的根用户账户配置 MFA。
- en: In the next section, we will discuss password policies, which will allow you
    to enforce strong and complex passwords for any IAM users that you create in your
    AWS account.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将讨论密码策略，您可以通过它强制要求在您的 AWS 账户中创建的任何 IAM 用户使用强大且复杂的密码。
- en: The importance of defining IAM password policies
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义 IAM 密码策略的重要性
- en: Now that you have secured your root user account, you should start creating
    additional accounts for users in your organization. Remember that the root user
    is the most privileged account, and you should not use the root user account for
    daily operations. Each member of your organization that needs to access the AWS
    services in your AWS account must be provided with an IAM user account. Never
    share your root credentials with other team members, even with other administrators,
    as they should be using their own IAM accounts with the appropriate administrative
    permissions.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经保护了根用户账户，接下来应该开始为您组织中的其他用户创建账户。请记住，根用户是权限最高的账户，您不应该使用根用户账户进行日常操作。任何需要访问您
    AWS 账户中的 AWS 服务的组织成员都必须拥有一个 IAM 用户账户。绝不与其他团队成员共享根用户凭证，即使是与其他管理员共享，因为他们应该使用他们自己拥有适当管理权限的
    IAM 账户。
- en: We discuss IAM users in the next section, but for now, it becomes obvious that
    an IAM user account will be configured with a password. And if you have a hundred
    different IAM user accounts, you want to enforce some sort of password policy
    so that those accounts do not have weak passwords that are easy to crack.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一部分讨论 IAM 用户，但现在显而易见，一个 IAM 用户账户将配置密码。如果您有一百个不同的 IAM 用户账户，您需要强制实施某种密码策略，以确保这些账户不会使用容易破解的弱密码。
- en: AWS password policies enable you to define rules to enforce password complexity.
    This means that users will be forced to configure a password that is in compliance
    with your complexity rules and this will ensure strong passwords across all IAM
    user accounts.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 密码策略使您能够定义规则以强制实施密码复杂性。这意味着用户将被迫配置符合您复杂性规则的密码，从而确保所有 IAM 用户账户的密码都具有较强的安全性。
- en: The password policies can be configured from the **Account Settings** section
    of the IAM dashboard.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 密码策略可以从 IAM 仪表板的 **账户设置** 部分进行配置。
- en: In the next section, we discuss the importance of creating additional IAM users
    and IAM groups. IAM users are additional identities that you can create in addition
    to your root user account. An IAM user can represent a physical person who needs
    access to your AWS account, such as a developer in your development team or a
    server administrator in your shared IT services team.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将讨论创建额外 IAM 用户和 IAM 组的重要性。IAM 用户是您可以创建的额外身份，除了根用户账户外。一个 IAM 用户可以代表需要访问您
    AWS 账户的某个实际人员，例如开发团队中的开发人员或共享 IT 服务团队中的服务器管理员。
- en: Key differences between IAM users and IAM groups
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IAM 用户和 IAM 组之间的主要区别
- en: In this section, we look at the importance of setting up additional identities
    that need to access your AWS account. We also look at best practices in managing
    what those identities can or cannot do in your AWS account, using IAM groups.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论设置需要访问 AWS 账户的其他身份的重要性。我们还将探讨使用 IAM 组管理这些身份可以或不能在 AWS 账户中执行的最佳实践。
- en: IAM users
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IAM 用户
- en: As discussed in the preceding section, in addition to the **root user**, you
    can create additional users known as **IAM users**. IAM users can be used to represent
    physical people in your organization, such as members of your development team
    or server administrators. These users can then use their IAM user accounts to
    log in to your AWS account and perform tasks based on permissions you grant them.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，除了**root 用户**外，你还可以创建其他用户，这些用户被称为**IAM 用户**。IAM 用户可以代表你组织中的实际人员，比如开发团队成员或服务器管理员。然后，这些用户可以使用他们的
    IAM 用户账户登录到你的 AWS 账户，并执行你授予他们的权限所允许的任务。
- en: IAM user accounts can also be used by applications and other services that need
    to authenticate themselves against a given AWS service. For example, if an application
    needs to update a backend Amazon RDS database, you want to make sure that the
    application is authorized to do so. The application can be assigned with an IAM
    user account that it can use to authenticate itself against the database and depending
    on the permissions you grant that IAM user account, the application will be able
    to modify the database as required. While this method of allowing an application
    to authenticate against AWS services is possible, it is not considered best practice
    for most use cases. This is partly since the credentials are usually stored in
    some configuration file in plain text. Furthermore, you would need to implement
    a process of regularly rotating the credentials to improve security somewhat and
    this can be a management overhead. AWS offers another type of identity specifically
    for this purpose known as IAM roles, which we discuss later in this chapter.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 用户账户也可以被需要对特定 AWS 服务进行身份验证的应用程序和其他服务使用。例如，如果一个应用程序需要更新后端的 Amazon RDS 数据库，你需要确保该应用程序被授权执行此操作。应用程序可以分配一个
    IAM 用户账户，使用该账户对数据库进行身份验证，并根据你授予该 IAM 用户账户的权限，应用程序将能够按需修改数据库。尽管允许应用程序对 AWS 服务进行身份验证是可行的，但在大多数使用案例中，这并不是最佳实践。这部分是因为凭证通常以明文存储在某个配置文件中。此外，你还需要实施定期轮换凭证的过程，以提高安全性，但这可能带来管理上的额外负担。AWS
    提供了另一种专门为此目的的身份类型，称为 IAM 角色，我们将在本章后续部分讨论。
- en: As previously discussed, to access any AWS service, you can use the web-based
    management console, the CLI, or AWS SDKs. To access your AWS account using the
    AWS Management Console as an IAM user, you will create a username and password
    combination that will enable the user to authenticate against your AWS account.
    If you wish to access your AWS account using the CLI for programmatic access,
    you will need to configure a set of access keys. Access keys are similar to usernames
    and passwords and consist of an **access key ID** (such as a username) and a **secret
    access key** (such as a password). Access keys are for programmatic access, whereas
    the username and password combinations are used for web-based console access.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要访问任何 AWS 服务，你可以使用基于 Web 的管理控制台、CLI 或 AWS SDK。要以 IAM 用户身份使用 AWS 管理控制台访问你的
    AWS 账户，你需要创建一个用户名和密码组合，使该用户能够对你的 AWS 账户进行身份验证。如果你希望通过 CLI 以编程方式访问你的 AWS 账户，你需要配置一组访问密钥。访问密钥类似于用户名和密码，由**访问密钥
    ID**（如用户名）和**秘密访问密钥**（如密码）组成。访问密钥用于编程访问，而用户名和密码组合则用于基于 Web 的控制台访问。
- en: In this section, we introduced you to IAM users, which can be used to represent
    physical people such as your colleagues who may need access to your AWS account.
    IAM user accounts can also be set up for specific applications to authenticate
    themselves against your account. These are known as **service accounts**.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们向你介绍了 IAM 用户，它们可以用来代表需要访问你 AWS 账户的实际人员，例如你的同事。也可以为特定应用程序设置 IAM 用户账户，以便它们对你的账户进行身份验证，这些被称为**服务账户**。
- en: In the next section, we talk about IAM groups, which allow you to manage a group
    of IAM users who may share a common job role.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论 IAM 组，IAM 组使你能够管理一组可能具有共同工作角色的 IAM 用户。
- en: IAM groups
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IAM 组
- en: When you create an IAM user for a particular colleague who needs access to your
    AWS account, you need to also configure a set of permissions for that user to
    ensure that they are permitted to perform tasks as required by their role in your
    organization. These permissions are assigned via IAM policies, which we will discuss
    shortly.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当您为某个需要访问您的 AWS 账户的同事创建 IAM 用户时，您还需要为该用户配置一组权限，以确保他们能够执行其在组织中的角色所需的任务。这些权限通过
    IAM 策略分配，我们稍后将详细讨论。
- en: Although you can create separate sets of IAM policies for each user in your
    account, an even better way of managing your users and the permissions you assign
    them is by combining those users who share a common job role into an AWS IAM group.
    By doing so, you can centrally manage the users assigned to that group by simply
    applying policies at the group level, which get filtered down to the users within
    the group.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您可以为账户中的每个用户创建单独的 IAM 策略集，但管理用户和分配权限的更好方式是将那些共享相同工作角色的用户组合成一个 AWS IAM 组。通过这样做，您可以通过在组级别应用策略来集中管理分配给该组的用户，这些策略将传递给组内的用户。
- en: For example, if you have a team of 10 developers, all of whom need the ability
    to create and manage Amazon S3 storage buckets, then instead of assigning the
    same permission to each user individually at the IAM user level, you can assign
    a single permission to the developers group. Your developers, who are then made
    members of the group, will inherit that permission to access Amazon S3.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您有一个由 10 名开发人员组成的团队，他们都需要创建和管理 Amazon S3 存储桶的权限，那么，您可以将相同的权限分配给开发人员组，而不是在
    IAM 用户级别为每个用户单独分配权限。然后，您将这些开发人员作为组成员，他们将继承该权限以访问 Amazon S3。
- en: In this section, we looked at the importance of setting up IAM users and IAM
    groups. This allows you to ensure that you can grant varying levels of access
    to different identities in your organization and use IAM groups to manage those
    identities.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们探讨了设置 IAM 用户和 IAM 组的重要性。这可以确保您能够为组织中的不同身份授予不同级别的访问权限，并通过 IAM 组来管理这些身份。
- en: In the next section, we will take a look at IAM policies in detail. IAM policies
    enable us to define permissions for those additional identities and control what
    they are permitted to do in our AWS account.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将详细了解 IAM 策略。IAM 策略使我们能够为这些额外的身份定义权限，并控制它们在 AWS 账户中被允许执行的操作。
- en: Defining permissions with IAM policies
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 IAM 策略定义权限
- en: IAM policies are objects attached to a given IAM identity, such as an IAM user,
    groups of IAM users, or an IAM role. These policies define what the identity can
    or cannot do within the AWS account and are written as **JSON documents**. In
    the following diagram, user **Bob** can access and read the content of an S3 bucket.
    The policy is attached to the group that **Bob** is a member of and therefore
    inherits the ability from the group.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 策略是附加到特定 IAM 身份的对象，例如 IAM 用户、IAM 用户组或 IAM 角色。这些策略定义了身份在 AWS 账户中可以做什么或不能做什么，并以
    **JSON 文档**的形式编写。在下图中，用户 **Bob** 可以访问并读取 S3 存储桶的内容。该策略附加到 **Bob** 所在的组，因此他继承了该组的权限。
- en: 'When a principal (IAM user or IAM role) tries to access an AWS service, AWS
    will evaluate the policy document attached to it and determine what action the
    principal can or cannot perform:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当主体（IAM 用户或 IAM 角色）尝试访问 AWS 服务时，AWS 会评估附加到该主体的策略文档，并确定该主体可以或不能执行的操作：
- en: '![Figure 4.6 – Policy document attached to the developers group, granting Bob
    read access to the Marketing Documents bucket'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.6 – 附加到开发人员组的策略文档，授予 Bob 读取 Marketing Documents 存储桶的权限'
- en: '](img/B17124_04_06.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_06.jpg)'
- en: Figure 4.6 – Policy document attached to the developers group, granting Bob
    read access to the Marketing Documents bucket
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 附加到开发人员组的策略文档，授予 Bob 读取 Marketing Documents 存储桶的权限
- en: IAM policies enable you to follow the principle of least privileges, which means
    that identities can be configured to only have access to services and configuration
    options necessary to fulfill their roles, and nothing more. This greatly enhances
    the security of your AWS account and follows best practices.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 策略使您能够遵循最小权限原则，这意味着身份只能配置为访问执行其角色所需的服务和配置选项，而不能访问其他内容。这大大增强了您 AWS 账户的安全性，并遵循最佳实践。
- en: 'AWS offers six types of policies that you can create:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了六种可以创建的策略类型：
- en: '**Identity-based policies**: These are policies attached to your IAM identities
    that specify what those identities can or cannot do in your AWS account. IAM identities
    are your IAM users, groups of IAM users, or IAM roles within your AWS account.
    Note that you cannot attach an IAM identity policy to an identity in another AWS
    account. However, identities in other accounts can be configured to assume IAM
    roles in your AWS account, which can provide your external identities with access
    to certain services and resources in your account. We discuss IAM roles later
    in this chapter.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于身份的策略**：这些是附加到IAM身份上的策略，指定这些身份在你的AWS账户内能做什么或不能做什么。IAM身份包括你的IAM用户、IAM用户组或AWS账户中的IAM角色。请注意，你不能将IAM身份策略附加到另一个AWS账户中的身份上。然而，其他账户中的身份可以配置为承担你AWS账户中的IAM角色，这样可以为外部身份提供访问你账户中特定服务和资源的权限。我们将在本章后续讨论IAM角色。'
- en: '`*`), which means that you can grant anonymous access to some of your resources.
    Understandably, you should be extremely careful when granting anonymous access.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`)，这意味着你可以为某些资源授予匿名访问权限。显然，授予匿名访问权限时你需要非常小心。'
- en: '**Permission boundaries**: You can define a policy as a permission boundary
    for an IAM entity (user or role), which defines the maximum set of permissions
    that can be granted by an identity-based policy.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限边界**：你可以将策略定义为IAM实体（用户或角色）的权限边界，这样可以定义身份基础策略可以授予的最大权限集。'
- en: '**Organization Service Control Policies** (**SCPs**): As discussed in the last
    chapter, organization SCPs enable you to define the maximum permissions for account
    members of an organization. SCPs enable you to restrict what permissions you can
    define in an identity- or resource-based policy in the member account. However,
    they are by themselves not able to grant permissions.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织服务控制策略**（**SCPs**）：正如上一章所讨论的，组织SCPs使你能够为组织的账户成员定义最大权限。SCPs使你能够限制在成员账户中定义身份或资源基础策略的权限。然而，它们本身不能授予权限。'
- en: '**Access Control Lists** (**ACLs**): These are permissions you use to manage
    access to certain resources such as Amazon S3 buckets and objects. You can use
    ACLs to grant basic read/write permissions to other AWS accounts; you cannot grant
    permissions to users in your account. They are used in certain cases where S3
    bucket policies cannot be used, such as S3 server access logging. They are like
    resource-based policies, but the permission sets that can be configured are limited
    in granularity. In addition, they do not use a JSON structure to construct the
    policy.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问控制列表**（**ACLs**）：这些是你用来管理对某些资源（例如Amazon S3桶和对象）访问权限的权限。你可以使用ACL来授予其他AWS账户基本的读/写权限；你不能授予你账户中的用户权限。它们在S3桶策略不能使用的某些情况下使用，例如S3服务器访问日志记录。它们类似于基于资源的策略，但可以配置的权限集在粒度上是有限的。此外，它们不使用JSON结构来构建策略。'
- en: '**Session policies**: These allow you to pass session policies when you access
    services programmatically (for example, the CLI) to assume a role or federate
    a user. Session policies allow you to limit permissions for a specific session.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话策略**：这些策略允许你在通过程序化方式（例如CLI）访问服务时传递会话策略，以承担角色或联合用户。会话策略允许你限制特定会话的权限。'
- en: Next, let's further study the types of identity-based policies in detail.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们进一步详细学习基于身份的策略类型。
- en: Types of identity-based policies
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于身份的策略类型
- en: As previously mentioned, identity-based policies are written in JSON format
    and these policies are attached to IAM identities, defining what those identities
    can or cannot do within your AWS account.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，基于身份的策略是以JSON格式编写的，并且这些策略会附加到IAM身份上，定义这些身份在你的AWS账户内能做什么或不能做什么。
- en: 'Identity-based policies can be categorized as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 基于身份的策略可以分类如下：
- en: '**Managed AWS policies**: These are standard policies pre-configured with specific
    permissions that AWS provides. A *managed* policy is one that is created independent
    of any IAM identity and can be attached to one or many identities. You can use
    these typical policies for most of the permission sets you need to define, for
    example, granting *read-only* access to Amazon S3\. AWS managed policies cannot
    be edited by the customer and only AWS can update and manage them.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管AWS策略**：这些是AWS提供的预配置的标准策略，具有特定的权限。*托管*策略是独立于任何IAM身份创建的，并且可以附加到一个或多个身份。你可以使用这些典型策略来定义大多数所需的权限集，例如授予Amazon
    S3的*只读*访问权限。AWS托管策略不能由客户编辑，只有AWS可以更新和管理这些策略。'
- en: '**Customer-managed policies**: Customers can create their own managed policies
    and then attach them to any IAM identity as required. Creating your own managed
    policies allows you to generate more granular sets of permissions. In addition,
    IAM creates up to five versions of your managed policies whenever you update them
    and this allows you to revert to older versions if necessary.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户托管策略**：客户可以创建自己的托管策略，然后根据需要将其附加到任何IAM身份上。创建自己的托管策略可以生成更细粒度的权限集。此外，IAM在每次更新托管策略时最多会创建五个版本，这允许你在必要时恢复到较旧的版本。'
- en: '**Inline policies**: These policies are created and attached directly to the
    IAM identity, for example, an IAM user. This also allows you to maintain a strict
    one-to-one relationship between a given policy and an identity. However, too many
    inline policies can be more difficult to manage and must be used sparingly. Ultimately,
    inline policies are tied to the life cycle of the entity it is associated with.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内联策略**：这些策略是直接创建并附加到IAM身份上的，例如IAM用户。这也使你能够保持策略与身份之间的严格一对一关系。然而，过多的内联策略可能更难以管理，必须谨慎使用。最终，内联策略与其关联实体的生命周期密切相关。'
- en: Let's understand IAM policies with the help of an example.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个示例来理解IAM策略。
- en: Example of an IAM policy
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IAM策略示例
- en: In *Figure 4.6*, we saw an example of Bob, who is a member of the developers
    group, being able to access the Marketing Documents bucket because of the IAM
    policy attached to the group.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图 4.6*中，我们看到了一个示例，Bob是开发者组的成员，由于附加到该组的IAM策略，他能够访问Marketing Documents存储桶。
- en: 'Here is an example of what a JSON policy document looks like for the preceding
    scenario:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前面场景中JSON策略文档的示例：
- en: '![Figure 4.7 – AWS managed policy: AmazonS3ReadOnlyAccess'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.7 – AWS托管策略：AmazonS3ReadOnlyAccess'
- en: '](img/B17124_04_07.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_07.jpg)'
- en: 'Figure 4.7 – AWS managed policy: AmazonS3ReadOnlyAccess'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – AWS托管策略：AmazonS3ReadOnlyAccess
- en: The preceding screenshot shows a managed AWS policy that grants the identity
    it is attached to the ability to read contents from any S3 buckets in your AWS
    account.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的截图展示了一个托管的AWS策略，它授予附加的身份读取你AWS账户中任何S3存储桶内容的权限。
- en: Identity policies do not need to specify a principal within the policy, because
    by its very nature, it will be attached to the identity that requires the level
    of access specified in the policy.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 身份策略不需要在策略中指定主体，因为它本身会附加到需要指定访问级别的身份上。
- en: 'Let''s look at some of the components of the policy document:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看看策略文档的一些组件：
- en: '`Version:` This is the JSON document version currently supported by AWS and
    should be listed as `2012-10-17`.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Version:` 这是当前AWS支持的JSON文档版本，应该列为`2012-10-17`。'
- en: '`Statement`: This is the beginning of the policy statement. You can have multiple
    statement blocks within a single policy, allowing you to grant various levels
    of access across different services.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Statement`：这是策略声明的开始。你可以在一个策略中包含多个声明块，从而在不同的服务之间授予不同级别的访问权限。'
- en: '`Effect`: This specifies whether the statement block is going to allow some
    level of access or deny access.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Effect`：该字段指定声明块是否允许某种级别的访问或拒绝访问。'
- en: '`Action`: This is the actual permission that is either permitted or denied
    based on the preceding `Effect` statement. The `Action` component of your JSON
    document will refer to the service of concern and the actual permission that is
    being granted. So, for example, in the preceding JSON statement, we have two sets
    of actions being permitted, namely the `Get` action and the `List` action of the
    Amazon S3 service. This means that the identity associated with this policy will
    be able to *list* your Amazon S3 buckets and perform various other list operations
    and be able to read the contents of the buckets along with other `Get` operations.
    These action statements actually have more granular-level operations that can
    be performed. So, for example, the `Get` operation includes a number of operations
    such as `GetObject` (which allows you to access an object) and `GetBucketVersion`
    (which returns the versioning state of a bucket) among others. You will notice
    the asterisks (`*`) after the `Get` and `List` actions in the preceding screenshot.
    You use the asterisks (`*`) when you want to allow all operations within a given
    `Action` statement. So, in the preceding example, `Get*` would include both the
    `GetObject` and `GetBucketVersion` operations.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Action`：这是根据前述`Effect`语句实际允许或拒绝的权限。您JSON文档中的`Action`组件将指向相关的服务以及所授予的实际权限。因此，在前面的JSON语句中，我们允许了两种操作，即Amazon
    S3服务的`Get`操作和`List`操作。这意味着与此策略相关的身份将能够*列出*您的Amazon S3存储桶并执行各种其他列出操作，并能够读取存储桶的内容以及其他`Get`操作。这些操作语句实际上具有可以执行的更细粒度的操作。例如，`Get`操作包括许多操作，如`GetObject`（允许您访问对象）和`GetBucketVersion`（返回存储桶的版本状态）等。您会注意到在前面的截图中，`Get`和`List`操作后面有星号（`*`）。当您希望允许某个给定`Action`语句中的所有操作时，您使用星号（`*`）。因此，在前面的示例中，`Get*`将包括`GetObject`和`GetBucketVersion`操作。'
- en: '`Resource`: This component describes the actual resource against which this
    policy permits or denies access. A wildcard (`*`) denotes all resources of that
    service. So, in this case, the resources allow the `Get` action and the `List`
    action against all S3 buckets in your AWS account. To restrict access to a specific
    resource, you will need to specify the actual `arn:aws:s3:::packt-marketing-docs`.
    So, our JSON policy will then need to be amended to look like this:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Resource`：此组件描述了此策略允许或拒绝访问的实际资源。通配符（`*`）表示该服务的所有资源。因此，在这种情况下，资源允许对您AWS账户中的所有S3存储桶执行`Get`操作和`List`操作。要将访问限制为特定资源，您需要指定实际的`arn:aws:s3:::packt-marketing-docs`。因此，我们的JSON策略需要进行如下修改：'
- en: '![Figure 4.8 – Customer-managed policy restricting access to a single Amazon
    S3 bucket'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.8 – 客户管理的策略限制对单个Amazon S3存储桶的访问'
- en: '](img/B17124_04_08.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_08.jpg)'
- en: Figure 4.8 – Customer-managed policy restricting access to a single Amazon S3
    bucket
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8 – 客户管理的策略限制对单个Amazon S3存储桶的访问
- en: 'ARNs are composed of segments and each segment is delimited with a colon (`:`).
    The following are the formats in which ARNs can be constructed with their individual
    segments:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: ARN由多个部分组成，每一部分由冒号（`:`）分隔。以下是ARN可以构建的格式及其各个部分：
- en: a) `arn:partition:service:region:account-id:resource-id`
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: a) `arn:partition:service:region:account-id:resource-id`
- en: b) `arn:partition:service:region:account-id:resource-type/resource-id`
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: b) `arn:partition:service:region:account-id:resource-type/resource-id`
- en: c) `arn:partition:service:region:account-id:resource-type:resource-id`
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: c) `arn:partition:service:region:account-id:resource-type:resource-id`
- en: 'Let''s look at the individual segments:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下各个单独的部分：
- en: a) `aws`. A separate partition also exists for China and this is named `aws-cn`,
    and so on.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: a) `aws`。中国也有一个独立的分区，名为`aws-cn`，依此类推。
- en: b) `s3`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: b) `s3`。
- en: c) `:`).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: c) `:`）。
- en: 'd) `:`). For example, here is a valid ARN for our marketing docs bucket:: `arn:aws:s3:::packt-marketing-docs`.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: d) `:`）。例如，以下是我们营销文档存储桶的有效ARN：`arn:aws:s3:::packt-marketing-docs`。
- en: e) `user/John` or `instance/i-1234567890xydcdeg0.`
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: e) `user/John` 或 `instance/i-1234567890xydcdeg0.`
- en: '`Condition`: In addition to the preceding list of components defined in a policy
    document, you can also create conditional elements for your statement so that
    you can further restrict the application of the policy based on a predetermined
    condition. For example, you might want to restrict access only if the source of
    that access is from within your corporate network IP address space.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Condition`：除了策略文档中定义的前述组件列表外，您还可以为声明创建条件元素，以便根据预定条件进一步限制策略的应用。例如，您可能希望仅在访问来源于您公司内部网络的IP地址范围时才允许访问。'
- en: In the next section, we'll study the IAM policy simulator.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习 IAM 策略模拟器。
- en: IAM policy simulator
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IAM 策略模拟器
- en: If you need to test out your policies or troubleshoot any access issues, you
    can use the IAM policy simulator. This tool, located at [https://policysim.aws.amazon.com/](https://policysim.aws.amazon.com/),
    can help you troubleshoot identity-based policies, IAM permissions boundaries,
    organizations' SCPs, and resource-based policies. Note that the simulator only
    simulates attempted access and whether that access will be granted or denied.
    It does not actually make calls to the service APIs.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要测试策略或排除访问问题，可以使用 IAM 策略模拟器。该工具位于[https://policysim.aws.amazon.com/](https://policysim.aws.amazon.com/)，可以帮助您排查基于身份的策略、IAM
    权限边界、组织的 SCP 和基于资源的策略。请注意，模拟器仅模拟访问尝试及其是否会被授予或拒绝，并不会实际调用服务 API。
- en: 'In the screenshot shown next, you will note that we have currently selected
    the `CreateDBInstance` action, we got a `AllowS3FullAccess` policy attached. While
    this example is fairly simple, you can image an IAM user, group, or role having
    multiple complex policies attached to it and running the simulator can enable
    you to test out specific levels of access:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的截图中，您会注意到我们当前选择了 `CreateDBInstance` 操作，附加了 `AllowS3FullAccess` 策略。尽管这个示例相对简单，但您可以想象，一个
    IAM 用户、组或角色可能附加了多个复杂的策略，通过运行模拟器，您可以测试不同级别的访问权限：
- en: '![Figure 4.9 – Amazon policy simulator'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.9 – 亚马逊策略模拟器'
- en: '](img/B17124_04_09.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_09.jpg)'
- en: Figure 4.9 – Amazon policy simulator
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 亚马逊策略模拟器
- en: In this section, we examined how IAM policies can be used to grant access based
    on the principle of least privileges. We looked at the different types of policies
    and the different categories of IAM policies. We also examined the JSON structure
    of a typical IAM policy.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了如何基于最小权限原则使用 IAM 策略授予访问权限。我们查看了不同类型的策略以及 IAM 策略的不同类别。我们还检查了典型 IAM
    策略的 JSON 结构。
- en: In the next section, we will discuss IAM roles, which are another type of identity
    that can be used to grant access to services and resources in your AWS account.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论 IAM 角色，IAM 角色是另一种可以用来授予访问您 AWS 账户中服务和资源的身份。
- en: Assigning temporary credentials with IAM roles
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 IAM 角色分配临时凭证
- en: While an IAM user account either represents a physical person or can be used
    as a "service account" for an application that requires authentication, IAM roles
    are, in fact, independent identities that can be assumed by other entities to
    gain access to AWS services and resources. In other words, IAM roles are not attached
    to a specific user. IAM roles also have IAM policy documents attached to them
    to determine what services and actions can be granted or denied.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 IAM 用户账户通常表示一个物理人，或者可以作为一个需要身份验证的应用程序的“服务账户”使用，但 IAM 角色实际上是独立的身份，可以被其他实体假定以访问
    AWS 服务和资源。换句话说，IAM 角色不是附加到特定用户上的。IAM 角色也会附加 IAM 策略文档，用于确定哪些服务和操作可以被授予或拒绝。
- en: 'IAM roles are generally used to grant access for the following use cases:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 角色通常用于授予以下用例的访问权限：
- en: An AWS service that needs access to another service in your own AWS account,
    for example, an application running on an EC2 instance that needs access to a
    database to update customer records.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问您 AWS 账户中另一个服务的 AWS 服务，例如运行在 EC2 实例上的应用程序需要访问数据库来更新客户记录。
- en: An IAM user in another account that needs access to services in your account
    via cross-account access.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要通过跨账户访问访问您账户中服务的另一个账户中的 IAM 用户。
- en: A federated user from another web **Identity Provider** (**Idp**) such as Google,
    Facebook, or Amazon that needs access to resources in your AWS account. IAM roles
    can be used to grant those external users with only the specific rights to specific
    services and resources in your account, without the need to create yet another
    IAM user account for them.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问您 AWS 账户中资源的来自其他 Web **身份提供商**（**Idp**）的联合用户，如 Google、Facebook 或 Amazon。可以使用
    IAM 角色授予这些外部用户特定服务和资源的访问权限，而无需为他们创建新的 IAM 用户账户。
- en: A federated corporate user using an identity service such as Microsoft Active
    Directory, who needs access to a service in your AWS account.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问您 AWS 账户中某个服务的使用身份服务（如 Microsoft Active Directory）的联合企业用户。
- en: As mentioned in the preceding list, IAM roles can be used to grant access to
    federated users. Identity federation is a process where you trust an external
    Idp to verify a given user's identity and then grant the user access on that basis.
    After authenticating the user, the Idp sends an assertion, which contains the
    user's login name and any attributes that AWS needs to establish a session with
    the user. The policy attached to the IAM role is then used to determine the level
    of access that can be granted to the user.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，IAM 角色可用于授予联合身份的访问权限。身份联合是一个过程，其中您信任外部身份提供者（IdP）验证给定用户的身份，然后根据此基础授予用户访问权限。在验证用户身份后，IdP
    会发送一个声明，声明中包含用户的登录名以及 AWS 用于与用户建立会话所需的任何属性。附加到 IAM 角色的策略随后用于确定可以授予用户的访问级别。
- en: Identity federation thus allows you to grant external identities access to your
    AWS environment, whether via the Management Console or APIs. It also allows access
    to resources without the need to create an IAM user account for each external
    user.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，身份联合使您能够授予外部身份访问您的 AWS 环境，无论是通过管理控制台还是 API。它还允许在无需为每个外部用户创建 IAM 用户账户的情况下访问资源。
- en: Temporary credentials
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 临时凭证
- en: A key benefit of using IAM roles is that they make use of temporary credentials
    that are rotated on a regular basis by AWS. For example, with IAM roles, you can
    grant a third-party mobile app access to resources in your AWS account without
    storing long-term credentials on the mobile phone of the user. This greatly enhances
    security and reduces management overhead. Imagine having to create an IAM user
    account for every individual that uses the app and then finding a secure method
    to distribute those IAM user credentials. IAM roles come to the rescue, because
    by themselves, they do not contain any credentials.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 IAM 角色的一个主要好处是，它们利用了 AWS 定期轮换的临时凭证。例如，使用 IAM 角色时，您可以授予第三方移动应用程序访问您 AWS 账户中资源的权限，而无需将长期凭证存储在用户的手机上。这大大增强了安全性，并减少了管理开销。试想，如果需要为每个使用该应用程序的个人创建
    IAM 用户账户，并找到一种安全的方法分发这些 IAM 用户凭证，这将是多么麻烦。IAM 角色能够解决这一问题，因为它们本身不包含任何凭证。
- en: IAM roles make use of a service called **Security Token Service** (**STS**).
    The **STS** service assigns temporary credentials to the identity that assumes
    the role. These temporary credentials will include an **access key ID**, a **secret
    access key**, and a **security token**. This security token is valid for only
    a short term and becomes useless after expiration. The STS service will renew
    the temporary credentials before expiry for the identity if the identity is still
    permitted access, and this happens in the backend and is managed by AWS. Ultimately,
    temporary credentials grant users temporary access to resources in your AWS account
    and are much more secure than using long-term access credentials.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 角色使用一个名为**安全令牌服务**（**STS**）的服务。**STS** 服务将临时凭证分配给承担角色的身份。这些临时凭证包括**访问密钥
    ID**、**秘密访问密钥**和**安全令牌**。此安全令牌仅在短时间内有效，过期后将失效。如果身份仍然被允许访问，STS 服务将在凭证过期之前为该身份续订临时凭证，且此过程在后台由
    AWS 管理。最终，临时凭证授予用户临时访问您的 AWS 账户中的资源，并且比使用长期访问凭证更安全。
- en: When you create an IAM role, you also define a **trust policy**. Within the
    trust policy, you specify the entities that will be trusted to assume the role.
    These entities can be AWS services or identities external to your organization
    that need access to your AWS resources. Furthermore, the entities themselves will
    need to have permissions to be able to assume that role.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 IAM 角色时，您还需要定义一个**信任策略**。在信任策略中，您指定将被信任来承担该角色的实体。这些实体可以是 AWS 服务，也可以是需要访问您
    AWS 资源的外部身份。此外，这些实体本身需要具备权限，才能承担该角色。
- en: Where possible, using IAM roles instead of creating an IAM user account is the
    recommended approach, primarily for entities external to your organization and
    because of the benefits of using temporary credentials. So, using the example
    of the mobile app that needs to update a database in your AWS account, it is safe
    to say that using an IAM role will ensure that long-term credentials are not stored
    locally on the phone. This also greatly reduces the chances of malicious attacks
    using stolen credentials.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能，建议使用IAM角色而不是创建IAM用户账户，特别是对于组织外部的实体，并且使用临时凭证有很多好处。因此，以需要更新AWS账户中数据库的移动应用程序为例，使用IAM角色可以确保不会在手机上存储长期凭证，这也大大降低了使用被盗凭证进行恶意攻击的风险。
- en: In this section, we looked at IAM roles, which allow you to grant secure access
    to your AWS services and resources using temporary security credentials.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们介绍了IAM角色，IAM角色允许你使用临时安全凭证授予对AWS服务和资源的安全访问权限。
- en: In the next section, we'll look at credential reports, which allow you to audit
    your IAM identities.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将介绍凭证报告，它允许你审计IAM身份。
- en: Reviewing credential reports
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查凭证报告
- en: AWS enables you to download a **comma-separated values** (**CSV**) file, updated
    every 4 hours, which allows you to audit your IAM user security state and review
    important information. The information could be a list of all your IAM users in
    your AWS account and the status of their credentials (such as if they have been
    configured with passwords and access keys). The report also highlights if your
    user accounts have been configured with MFA.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: AWS使你能够下载一个**逗号分隔值**（**CSV**）文件，该文件每4小时更新一次，允许你审计IAM用户的安全状态并查看重要信息。信息可能包括你AWS账户中所有IAM用户的列表以及他们凭证的状态（例如是否已配置密码和访问密钥）。该报告还会突出显示你的用户账户是否已配置MFA。
- en: Monitoring your credentials report will also help you pick up on identities
    that may not have accessed resources in your AWS accounts recently. You can then
    work out whether those users still need access and delete unwanted users from
    your AWS accounts.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 监控你的凭证报告还可以帮助你发现那些可能最近没有访问你AWS账户资源的身份。你可以进一步确定这些用户是否仍然需要访问权限，并从AWS账户中删除不需要的用户。
- en: In this section, we looked at credential reports, which allow you to generate
    details of your IAM users and their current access status. In the next sections,
    we provide a number of exercises to help you build hands-on experience of using
    the IAM service to secure access to your AWS accounts.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们介绍了凭证报告，它允许你生成IAM用户及其当前访问状态的详细信息。在接下来的部分，我们提供了一些练习，帮助你通过使用IAM服务来安全地访问AWS账户，从而获得实践经验。
- en: Exercise 4.1 – creating an IAM group
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 4.1 – 创建一个IAM组
- en: 'In this exercise, you will create an IAM group for a development team that
    is going to require full access to Amazon S3:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将为一个开发团队创建一个IAM组，该团队将需要对Amazon S3具有完全访问权限：
- en: Log in to your AWS account.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的AWS账户。
- en: Click on the **IAM** link under the **Security, Identity, & Compliance** category
    on your **AWS Services** home page.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的**AWS服务**主页中，点击**安全性、身份与合规性**类别下的**IAM**链接。
- en: From the left-hand menu, click **Groups**.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中点击**组**。
- en: Next, click on the **Create New Group** button.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**创建新组**按钮。
- en: You will then be presented with a step-by-step wizard. Provide a group name
    for your new group. For this exercise, type in `Developers`.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将看到一个逐步向导。为你的新组提供一个组名。对于这个练习，输入`Developers`。
- en: Click the **Next Step** button in the bottom right-hand corner of the screen.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右下角的**下一步**按钮。
- en: You now need to attach a policy. You can create your own customer-managed policies
    but for the purposes of this exercise, type `S3` in the **Policy Type** filter
    search box. This will narrow down the available policies that relate to Amazon
    S3.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要附加一个策略。你可以创建自己的客户管理策略，但为了本练习的目的，在**策略类型**筛选框中输入`S3`。这将缩小与Amazon S3相关的可用策略。
- en: Tick the checkbox next to the **AmazonS3FullAccess** policy.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选**AmazonS3FullAccess**策略旁边的复选框。
- en: Click the **Next Step** button in the bottom right-hand corner of the screen.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右下角的**下一步**按钮。
- en: Finally, click the **Create Group** button in the bottom right-hand corner of
    the screen.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击屏幕右下角的**创建组**按钮。
- en: You will now see that your group has been created and listed under **Group Name**.
    Now that you have created a group, you can proceed to create an IAM user and add
    it to the group. This allows you to manage multiple users more effectively. In
    the next exercise, we will create an IAM user and add it to the developers group.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将看到您的组已创建并列在**组名称**下。现在，您已创建了一个组，您可以继续创建IAM用户并将其添加到组中。这使您可以更有效地管理多个用户。在下一个练习中，我们将创建一个IAM用户并将其添加到开发者组。
- en: Exercise 4.2 – creating an IAM user
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习4.2——创建IAM用户
- en: 'Now that you have created a developers group, you can add your developers to
    this group. To illustrate this, we will create a new user, John. John is one of
    our senior developers at Packt and we would like to ensure that he is a member
    of the developers group, which will give him full access to Amazon S3:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已创建了开发者组，您可以将开发者添加到此组中。为了解释这一点，我们将创建一个新用户，John。John是我们Packt的高级开发人员之一，我们希望确保他是开发者组的成员，这将使他能完全访问Amazon
    S3：
- en: In the IAM dashboard, click on **Users** from the left-hand menu.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在IAM仪表板中，从左侧菜单中点击**用户**。
- en: Click the **Add user** button.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加用户**按钮。
- en: In the `john` (all lowercase).
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`john`（全小写）中。
- en: Next, you need to select the type of access you want to grant John. John is
    a developer and will require both console access and programmatic access. This
    means that sometimes, John will use the web-based console to configure resources
    in Amazon S3, and at other times, he may use the CLI. For this exercise, tick
    both boxes – **Programmatic Access** and **AWS Management Console access**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要选择要授予John的访问类型。John是开发者，需要同时具备控制台访问权限和编程访问权限。这意味着有时，John将使用基于Web的控制台配置Amazon
    S3中的资源，而其他时候，他可能会使用CLI。对于本练习，勾选两个框——**编程访问**和**AWS管理控制台访问**。
- en: To access the AWS account via the console, you need to create a password for
    the user. For `john`, you can have AWS automatically generate a password for you
    or you can create a custom one yourself. Select **Custom password** and choose
    a complex password of your choice. Type that password in the textbox provided.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要通过控制台访问AWS账户，您需要为用户创建密码。对于`john`，您可以让AWS自动为您生成密码，或者您也可以自己创建一个自定义密码。选择**自定义密码**并选择一个复杂的密码。将该密码输入提供的文本框中。
- en: An additional setting, **Require password reset**, enables you to force your
    IAM users to change their password at the next login. That way, you will not know
    what their password is when they change it and it is best practice to follow.
    For the purposes of this lab, disable this checkbox for now.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个设置，**要求重置密码**，使您能够强制要求IAM用户在下次登录时更改密码。这样，您在他们更改密码时将无法知道他们的密码，而且这也是最佳实践。出于本实验的目的，暂时取消选中此复选框。
- en: Click the **Next:Permissions** button in the bottom left-hand corner of the
    screen.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左下角的**下一步：权限**按钮。
- en: You now have the option to set permissions for the user. As we have already
    created a group with the right set of permissions attached to it, we simply need
    to make this user a member of the group. For this exercise, under **Add user to
    group**, tick the box next to the **Developers** group and click the **Next:Tags**
    button in the bottom right-hand corner of the screen.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以为用户设置权限。由于我们已经创建了一个权限集正确的组，我们只需将该用户添加为该组的成员。对于本练习，在**将用户添加到组**下，勾选**开发者**组旁边的框，并点击屏幕右下角的**下一步：标签**按钮。
- en: Tags are key-value pairs that you can attach to any resource. You can attach
    up to 50 tags to each resource and they enable you to classify your resources
    better. You can then use tags to understand cost allocation and to identify and
    manage your resources. Tags can include user information, such as an email address,
    or can be descriptive, such as a job title. For this exercise, set a single tag,
    with the key set to `Name` and the value set to `John`.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标签是您可以附加到任何资源的键值对。每个资源最多可以附加50个标签，这些标签帮助您更好地分类资源。然后，您可以使用标签来理解成本分配，并识别和管理您的资源。标签可以包含用户信息，例如电子邮件地址，或者可以是描述性信息，例如职位名称。对于本练习，设置一个标签，键设置为`Name`，值设置为`John`。
- en: Click the **Next:Review** button in the bottom right-hand corner of the screen.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右下角的**下一步：审查**按钮。
- en: You can now review all your settings for the user and once satisfied, go ahead
    and click the **Create user** button in the bottom right-hand corner of the screen.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以查看所有用户设置，一旦满意，请点击屏幕右下角的**创建用户**按钮。
- en: You are now presented with a `.csv` file.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将看到一个`.csv`文件。
- en: 'You will also note that you have been provided with a special link to log in
    to your AWS Free Tier account using an IAM user account. The AWS account sign-in
    page for IAM users is slightly different from that of the root user. This is because
    when you sign in as an IAM user, you need to specify the AWS account ID you are
    trying to sign into. In our example, we have a link like this:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还会注意到，你已经获得了一个特殊的链接，可以使用 IAM 用户账户登录到你的 AWS 免费层账户。IAM 用户的 AWS 账户登录页面与根用户的登录页面略有不同。这是因为当你作为
    IAM 用户登录时，你需要指定你要登录的 AWS 账户 ID。在我们的示例中，我们有一个这样的链接：
- en: '[PRE0]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The series of numbers just before `.signin` represents your AWS account ID.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 `.signin` 前的一串数字代表你的 AWS 账户 ID。
- en: Click the **Close** button in the bottom right-hand corner of the screen to
    exit from the user setup wizard.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右下角的**关闭**按钮以退出用户设置向导。
- en: We have now created a user who represents a developer in our organization and
    we have added the user to the developers group. In the next exercise, you will
    learn how to access your AWS account as the IAM user you created previously.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经创建了一个代表我们组织中开发者的用户，并且我们已将该用户添加到开发者组。在下一个练习中，你将学习如何以你之前创建的 IAM 用户身份访问你的
    AWS 账户。
- en: Exercise 4.3 – logging in to your AWS account as an IAM user
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 4.3 – 作为 IAM 用户登录你的 AWS 账户
- en: 'In this exercise, we log out of the AWS account as the root user and re-login
    as the IAM user you just created. If you did not make a note of the special sign-in
    link, you will need to know what your AWS account ID is. You can easily discover
    this by clicking on your account name in the top right-hand corner of your web-based
    management console and noting the account ID:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们以根用户身份退出 AWS 账户，然后重新以你刚刚创建的 IAM 用户身份登录。如果你没有记下那个特殊的登录链接，你需要知道你的 AWS
    账户 ID。你可以通过点击你在基于 Web 的管理控制台右上角的账户名称来轻松发现它，并记下账户 ID：
- en: '![Figure 4.10 – Drop-down box when clicking on the account name to discover
    the account ID, which is shown after My Account'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.10 – 点击账户名称时出现的下拉框，用于发现账户 ID，该 ID 显示在“我的账户”后面'
- en: '](img/B17124_04_10.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_10.jpg)'
- en: Figure 4.10 – Drop-down box when clicking on the account name to discover the
    account ID, which is shown after My Account
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 点击账户名称时出现的下拉框，用于发现账户 ID，该 ID 显示在“我的账户”后面
- en: 'Now that you have the account ID (or you can make a note of the sign-in URL
    previously discussed), we can proceed to log in as the IAM user you created earlier:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了账户 ID（或者你可以记下之前讨论过的登录 URL），我们可以继续以你之前创建的 IAM 用户身份登录：
- en: Sign out of the AWS account (remember, you are currently signed in as the root
    user).
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出 AWS 账户（记住，你目前是以根用户身份登录的）。
- en: You will be taken to the AWS console home page where you can click the **Log
    back in** button or the **Sign in to the Console** button.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将进入 AWS 控制台首页，在那里你可以点击**重新登录**按钮或**登录控制台**按钮。
- en: Clicking on either of these will take you to the AWS sign-in page.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击这两者中的任何一个都会带你到 AWS 登录页面。
- en: Click on **IAM user** and provide the account ID in the available textbox:![Figure
    4.11 – AWS signing page
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**IAM 用户**并在可用的文本框中提供账户 ID:![图 4.11 – AWS 登录页面
- en: '](img/B17124_04_11.jpg)'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_11.jpg)'
- en: Figure 4.11 – AWS signing page
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.11 – AWS 登录页面
- en: Once you have provided the account ID, click **Next**.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供账户 ID 后，点击**下一步**。
- en: Now, provide your username, in this case, `john`, and the password you chose
    when you created the user.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，提供你的用户名，在本例中是 `john`，以及你在创建用户时选择的密码。
- en: 'You will now be logged in to the AWS Management Console as our developer, John.
    You will note that your username is displayed in the top right-hand corner of
    the screen:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在将以我们的开发者 John 身份登录到 AWS 管理控制台。你会注意到你的用户名显示在屏幕的右上角：
- en: '![Figure 4.12 – IAM user John has successfully logged in to this AWS account'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.12 – IAM 用户 John 已成功登录到该 AWS 账户'
- en: '](img/B17124_04_12.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_12.jpg)'
- en: Figure 4.12 – IAM user John has successfully logged in to this AWS account
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – IAM 用户 John 已成功登录到该 AWS 账户
- en: In this section, we completed a series of exercises using the AWS IAM service.
    We demonstrated how to create IAM groups and users and how to log in to the AWS
    Management Console as an IAM user.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们完成了一系列使用 AWS IAM 服务的练习。我们演示了如何创建 IAM 组和用户，以及如何以 IAM 用户身份登录 AWS 管理控制台。
- en: In the next section, we look at how you can access your AWS account using the
    AWS CLI.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论如何使用 AWS CLI 访问你的 AWS 账户。
- en: Accessing the AWS platform using the CLI
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CLI 访问 AWS 平台
- en: As previously discussed, you can access the vast array of AWS services using
    the web-based management console or the CLI. The AWS CLI is a unified tool to
    manage your AWS services programmatically. The AWS CLI gives you access to the
    **application programming interface** (**API**) of each AWS service. This enables
    you to remotely access your AWS account and run commands from your Terminal application
    on Linux and Mac computers or use Command Prompt on Windows computers.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，您可以通过基于 Web 的管理控制台或 CLI 访问广泛的 AWS 服务。AWS CLI 是一个统一的工具，用于以编程方式管理您的 AWS 服务。AWS
    CLI 为您提供每个 AWS 服务的 **应用程序编程接口** (**API**) 的访问权限。这使得您能够远程访问您的 AWS 账户，并在 Linux 和
    Mac 计算机上的终端应用程序中运行命令，或者在 Windows 计算机上使用命令提示符。
- en: The AWS CLI is therefore ideal for running simple commands to complete repetitive
    tasks and because a single command string can contain necessary attributes of
    your request, you will find it a lot faster than using mouse clicks within the
    web console. The CLI is something you will need to get accustomed to—for one,
    you will need to know how to construct commands, but AWS offers complete reference
    documentation for this.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，AWS CLI 非常适合运行简单命令以完成重复性任务，并且由于单个命令字符串可以包含请求所需的属性，您会发现它比在 Web 控制台中使用鼠标点击要快得多。CLI
    是您需要习惯的工具——首先，您需要了解如何构建命令，但 AWS 提供了完整的参考文档来帮助您。
- en: You can run your CLI commands line by line individually, or you can even create
    scripts to run a series of commands for a set of tasks. For example, you can create
    a script that launches a new EC2 instance, configures it as a web server, and
    installs any third-party applications.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以逐行单独运行 CLI 命令，也可以创建脚本来运行一系列命令以完成一组任务。例如，您可以创建一个脚本来启动一个新的 EC2 实例，将其配置为 Web
    服务器，并安装任何第三方应用程序。
- en: Accessing your account via the CLI
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 CLI 访问您的账户
- en: In this section, we will walk you through the steps of configuring the CLI on
    your computer and accessing your AWS platform using John's account.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将指导您完成在计算机上配置 CLI 并使用 John 的账户访问 AWS 平台的步骤。
- en: Important note
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is highly recommended that you avoid creating and using access keys for the
    root user account unless you have certain specific requirements. For example,
    to enable MFA-delete on Amazon S3 buckets (which we look at in [*Chapter 5*](B17124_05_Final_SK_ePub.xhtml#_idTextAnchor094),
    *Amazon Simple Storage Service (S3)*), you need to use the CLI, for which you
    will need a set of access keys. The problem is when you use the AWS CLI to access
    your AWS account, your credentials (access key ID and secret access keys) get
    stored locally on the computer that you are using. This means that you should
    consider rotating your keys on a regular basis and ensure you secure your computer,
    for example, by enabling local disk encryption. As a best practice, if you need
    to create a set of access keys for the root user account, you should follow a
    process of creating the keys, using them for the specific task, and then disabling
    or deleting the keys once the task is complete.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议除非有特定需求，否则避免为 root 用户账户创建和使用访问密钥。例如，为了在 Amazon S3 存储桶上启用 MFA 删除（我们将在 [*第
    5 章*](B17124_05_Final_SK_ePub.xhtml#_idTextAnchor094)中讨论，*Amazon Simple Storage
    Service (S3)*），您需要使用 CLI，届时您将需要一组访问密钥。问题在于，当您使用 AWS CLI 访问 AWS 账户时，您的凭证（访问密钥 ID
    和密钥访问密钥）会存储在您使用的计算机上。这意味着您应该定期旋转您的密钥，并确保保护您的计算机，例如启用本地磁盘加密。作为最佳实践，如果您需要为 root
    用户账户创建一组访问密钥，您应该按照以下流程：创建密钥、使用它们完成特定任务，然后在任务完成后禁用或删除密钥。
- en: Accessing your AWS account using the CLI from your local computer as the root
    user therefore means that the root user's credentials are also stored on the local
    machine. This is considered a major security risk because you really should not
    be using the root user account for day-to-day operations. Even if you need full
    administrative privileges, you should ideally create an IAM user and assign it
    with the necessary admin rights. You can then configure your AWS CLI with the
    IAM administrator user account credentials instead.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用 CLI 从本地计算机作为 root 用户访问您的 AWS 账户意味着 root 用户的凭证也会存储在本地机器上。这被认为是一个重大安全风险，因为您真的不应该将
    root 用户账户用于日常操作。即使您需要完全的管理权限，理想情况下也应该创建一个 IAM 用户，并为其分配必要的管理员权限。然后，您可以使用 IAM 管理员用户账户凭证来配置您的
    AWS CLI。
- en: The root user is the ultimate owner of your account and can even close your
    account. This is the reason why extreme caution is advised in how you manage the
    root user's credentials.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: root用户是你账户的最终所有者，甚至可以关闭你的账户。这就是为什么建议在管理root用户的凭证时要极其小心的原因。
- en: Downloading the CLI tools
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载CLI工具
- en: 'To use the AWS CLI, you first need to download and install it on your local
    computer. You can access the AWS CLI tools here: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/).'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用AWS CLI，你首先需要将其下载并安装到本地计算机。你可以在这里访问AWS CLI工具：[https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)。
- en: Depending on your operating system, you will need to download and install the
    appropriate tool. The AWS CLI tool is currently available in version 2 and comes
    with new and improved installers, new configuration options, such as AWS **Single
    Sign-On** (**SSO**), and various interactive features. You can download the installers
    for your specific operating system, whether it is Windows, Mac, or Linux. Previously,
    you had to have Python installed to use the AWS CLI, but this is no longer the
    case.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的操作系统，你需要下载并安装适当的工具。目前AWS CLI工具的版本是2，带有新的和改进的安装程序、新的配置选项，例如AWS **单点登录**（**SSO**）和各种互动功能。你可以下载适合你操作系统的安装程序，无论是Windows、Mac还是Linux。之前，你需要安装Python才能使用AWS
    CLI，但现在不再需要了。
- en: 'Download and install the appropriate installer for your operating system from
    the preceding link:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的链接下载并安装适合你操作系统的安装程序：
- en: '![Figure 4.13 – Links to download the appropriate AWS CLI installer for your
    operating system'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.13 – 下载适合你操作系统的AWS CLI安装程序的链接'
- en: '](img/B17124_04_13.jpg)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_13.jpg)'
- en: Figure 4.13 – Links to download the appropriate AWS CLI installer for your operating
    system
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13 – 下载适合你操作系统的AWS CLI安装程序的链接
- en: Once you have installed the AWS CLI, the next step is to configure it with a
    set of access keys to log in to your AWS account programmatically. If you are
    using Windows, you can access the AWS CLI from Command Prompt. If you are using
    Linux or Mac, you can use the Terminal application. The installer would have already
    set up any environmental variables, so you can access the tool from anywhere in
    your Command Prompt.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完AWS CLI后，下一步是配置它，使用一组访问密钥来以编程方式登录到你的AWS账户。如果你使用的是Windows，可以从命令提示符访问AWS CLI。如果你使用的是Linux或Mac，可以使用终端应用程序。安装程序会自动设置任何环境变量，因此你可以在命令提示符的任何地方访问该工具。
- en: In the next exercise, you will learn how to access the AWS platform using the
    Amazon CLI on a Windows computer.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个练习中，你将学习如何在Windows计算机上使用Amazon CLI访问AWS平台。
- en: Exercise 4.4 – accessing the AWS platform using the AWS CLI on a Windows computer
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习4.4 – 使用AWS CLI在Windows计算机上访问AWS平台
- en: 'Once you have installed the AWS CLI tools on your Windows machine, the next
    step is to configure it to access your AWS account as the IAM user you created
    earlier:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在Windows机器上安装了AWS CLI工具，下一步是配置它，以作为你之前创建的IAM用户来访问你的AWS账户：
- en: Open the credentials file, which you downloaded earlier when you created the
    IAM user `john`. This file has the access keys for your user, which comprises
    the **access key ID** and the **secret access key**.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开凭证文件，这个文件是你在创建IAM用户`john`时下载的。该文件包含你用户的访问密钥，包括**访问密钥ID**和**秘密访问密钥**。
- en: On your Windows desktop, click on the `CMD`:![Figure 4.14 – Command Prompt on
    a Windows computer
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Windows桌面上，点击`CMD`：![图4.14 – Windows计算机上的命令提示符
- en: '](img/B17124_04_14.jpg)'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_14.jpg)'
- en: Figure 4.14 – Command Prompt on a Windows computer
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.14 – Windows计算机上的命令提示符
- en: At the prompt, type in `AWS configure` to start the configuration process.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示符下，输入`AWS configure`以开始配置过程。
- en: You will then be prompted to enter the **AWS access key ID**, followed by the
    **AWS secret access key**. These keys are in your credentials document that you
    downloaded earlier.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后你将被提示输入**AWS访问密钥ID**，接着输入**AWS秘密访问密钥**。这些密钥在你之前下载的凭证文件中。
- en: For `us-east-1`.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`us-east-1`。
- en: For **Default output format**, leave this blank and press *Enter*:![Figure 4.15
    – Configuring the AWS CLI with access key ID and secret access keys
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**默认输出格式**，保持空白并按*Enter*：![图4.15 – 配置AWS CLI的访问密钥ID和秘密访问密钥
- en: '](img/B17124_04_15.jpg)'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_15.jpg)'
- en: Figure 4.15 – Configuring the AWS CLI with access key ID and secret access keys
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.15 – 配置AWS CLI的访问密钥ID和秘密访问密钥
- en: Your AWS CLI tool has now been configured with John's credentials.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的AWS CLI工具现在已配置为使用John的凭证。
- en: 'You can try running a command such as `aws s3 ls`. This command lists out any
    Amazon S3 bucket you have in your account. If you have not created any buckets
    yet, you will just have the prompt return. In my case, I have already got one
    bucket in my account as you can see in the following screenshot:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以尝试运行诸如`aws s3 ls`的命令。此命令列出您账户中的任何Amazon S3存储桶。如果您还没有创建任何存储桶，则只会返回提示符。在我的情况下，您可以在以下截图中看到，我已经在我的账户中有一个存储桶：
- en: '![Figure 4.16 – Configuring the AWS CLI with access key ID and secret access
    keys'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.16 – 配置AWS CLI与访问密钥ID和秘密访问密钥'
- en: '](img/B17124_04_16.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_04_16.jpg)'
- en: Figure 4.16 – Configuring the AWS CLI with access key ID and secret access keys
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16 – 配置AWS CLI与访问密钥ID和秘密访问密钥
- en: In this section, we discussed the necessary steps required to configure your
    AWS CLI tool, so that you can access your AWS account as an IAM user using Command
    Prompt on a Windows machine. You can also use Terminal on a Mac or Linux computer
    to complete the same tasks. You would need to install the appropriate tool for
    your operating system.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了配置AWS CLI工具所需的必要步骤，以便您可以在Windows机器上使用命令提示符作为IAM用户访问您的AWS账户。您也可以在Mac或Linux计算机上使用终端完成相同的任务。您需要为您的操作系统安装适当的工具。
- en: Using the CLI can be very efficient, especially if you are trying to perform
    repeat tasks as you can also create scripts to automate the whole process.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI可以非常高效，特别是当你尝试执行重复任务时，你还可以创建脚本来自动化整个过程。
- en: You should try and avoid using the root account to perform any day-to-day operations
    in your AWS account. Instead, you must log in with an IAM user account that has
    only the necessary privileges to carry out the task at hand. This is known as
    following the principle of least privilege.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该尝试避免使用根账号执行AWS账户中的任何日常操作。相反，你必须使用仅具有执行当前任务所需权限的IAM用户账号登录。这被称为遵循最小权限原则。
- en: In the next exercise, you will create another IAM user account that you will
    use for all the exercises in the upcoming chapters.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个练习中，你将创建另一个IAM用户账号，用于接下来章节中的所有练习。
- en: Exercise 4.5 – creating an IAM user with administrative privileges
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习4.5 – 创建具有管理权限的IAM用户
- en: 'In this exercise, you will create another IAM user account that you will use
    to log in to your AWS account. This IAM user will be provided with full administrative
    access to help you work through the upcoming exercises easily, although in the
    real world, you would want to restrict permissions to only the job function of
    the users in question. By getting used to logging in as an IAM user, you will
    build a habit of avoiding the use of the root user credentials for your day-to-day
    tasks:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将创建另一个IAM用户账号，用于登录到你的AWS账户。这个IAM用户将被赋予完整的管理访问权限，帮助你轻松完成即将进行的练习，尽管在实际环境中，你会希望限制权限仅限于相关用户的工作职能。习惯以IAM用户身份登录，将有助于你养成日常任务避免使用根用户凭证的习惯：
- en: Ensure that you are logged in to your AWS account as the root user (the email
    address and password combination you used to create your AWS account).
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已经作为根用户（您用来创建AWS账户的电子邮件地址和密码组合）登录到您的AWS账户。
- en: Navigate to the IAM dashboard.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至IAM仪表板。
- en: From the left-hand menu, click on **Users**. Next, from the right-hand pane,
    click **Add user**.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中，点击**用户**。然后，从右侧窗格中，点击**添加用户**。
- en: You will be redirected to the **Add user** wizard page.
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将被重定向到**添加用户**向导页面。
- en: For the username, type in `Alice`. Throughout the rest of this guide, you will
    be logging in as `Alice` to carry out all upcoming exercises.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于用户名，输入`Alice`。在本指南的其余部分，您将以`Alice`身份登录，并完成所有即将进行的练习。
- en: Under **Select AWS access type**, select both **Programmatic access** and **AWS
    Management Console access**.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择AWS访问类型**下，选择**程序化访问**和**AWS管理控制台访问**。
- en: For **Console password**, select the **Custom password** option and provide
    a complex password of your choice.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**控制台密码**，选择**自定义密码**选项，并提供您选择的复杂密码。
- en: 'Uncheck the box next to **Require password reset** and click the **Next: Permissions**
    button.'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消**要求密码重置**旁边的复选框，然后点击**下一步：权限**按钮。
- en: In step 2, under **Set permissions**, select the **Attach existing policies
    directly** option. This will allow you to attach an inline policy to Alice's account
    alone.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第2步中，在**设置权限**下，选择**直接附加现有策略**选项。这将允许您仅向Alice的账户附加内联策略。
- en: From the list of policies provided, select the checkbox next to **AdministratorAccess**
    as per the following screenshot:![Figure 4.17 – IAM user (Alice) with administrator
    access permissions
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从提供的策略列表中，选择**AdministratorAccess**旁边的复选框，如下图所示：![图4.17 – 拥有管理员访问权限的IAM用户（Alice）
- en: '](img/B17124_04_17.jpg)'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_04_17.jpg)'
- en: Figure 4.17 – IAM user (Alice) with administrator access permissions
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.17 – 拥有管理员访问权限的IAM用户（Alice）
- en: 'Click the **Next: Tags** button at the bottom of the screen.'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕底部的**下一步：标签**按钮。
- en: In step 3, under `Name` and the value is set to `Alice`.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第3步中，`名称`的值设置为`Alice`。
- en: 'Click the **Next: Review** button.'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步：审查**按钮。
- en: Next, click the **Create user** button.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**创建用户**按钮。
- en: You will then be prompted to download the `.csv` file containing Alice's access
    keys and secret access keys. Download the file and ensure you keep it in a folder
    on your computer that you can easily access. Once downloaded, go ahead and click
    the **Close** button.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，系统会提示你下载包含Alice访问密钥和秘密访问密钥的`.csv`文件。下载该文件，并确保将其保存在你电脑上一个易于访问的文件夹中。下载后，点击**关闭**按钮。
- en: Your IAM user Alice is now ready to log in. Going forward, you will need to
    log in as the IAM user Alice for all upcoming exercises. Ensure you also make
    a note of either the special sign-in link for your AWS account or the AWS account
    ID, which you will need to log in as an IAM user.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的IAM用户Alice现在可以登录了。从现在开始，你需要以IAM用户Alice的身份登录进行所有后续练习。确保你记下AWS账户的特殊登录链接或AWS账户ID，这些信息将在你作为IAM用户登录时需要使用。
- en: In this exercise, you created an IAM user account that you will use to log in
    to your AWS account and perform all the upcoming exercises. In the next section,
    we'll review a summary of this chapter.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，你创建了一个IAM用户账户，用于登录到你的AWS账户并执行所有后续练习。在下一部分，我们将回顾本章的总结。
- en: Summary
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the AWS IAM service and how it acts as the gatekeeper
    to your AWS account. We discussed the root user of your account, which is the
    most senior administrative account for your AWS account. The root user has complete
    access and protecting this account with MFA is a recommended best practice.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了AWS IAM服务以及它如何充当你AWS账户的守门人。我们讨论了账户的根用户，这是你AWS账户中最高级别的管理员账户。根用户具有完全的访问权限，使用MFA保护此账户是推荐的最佳实践。
- en: With AWS IAM, you can create and manage identities that are granted or denied
    access to the various AWS services in your account. These identities can include
    IAM users, groups of IAM users, or IAM roles. You can also further enhance the
    security of your IAM users by configuring them with MFA.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 使用AWS IAM，你可以创建和管理身份，这些身份被授予或拒绝访问你账户中各种AWS服务的权限。这些身份可以包括IAM用户、IAM用户组或IAM角色。你还可以通过为IAM用户配置MFA，进一步增强IAM用户的安全性。
- en: We discussed best practices when configuring your IAM users and IAM groups.
    We emphasized that, as best practice, you should create IAM groups and subsequently
    place any necessary IAM users within groups that share a common task. For example,
    if you have a developers group, you can place all your developers in that group.
    In addition, you can create IAM policies, which can be attached to your IAM identities
    to determine what they can or cannot do within your AWS account. AWS IAM thus
    offers authentication and authorization services to your account.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了配置IAM用户和IAM组时的最佳实践。我们强调，作为最佳实践，你应该创建IAM组，并将所有需要的IAM用户放入共享任务的组中。例如，如果你有一个开发人员组，你可以将所有开发人员放入该组。此外，你还可以创建IAM策略，并将其附加到你的IAM身份上，以确定它们在AWS账户中可以或不能做的事情。因此，AWS
    IAM为你的账户提供身份验证和授权服务。
- en: We also examined IAM roles, which allow you to create identities not specifically
    attached to any physical user. IAM roles enable you to grant access to those entities
    that may not necessarily have access. IAM roles can be used to grant temporary
    credentials to entities when they need them and, depending on the use case, are
    more secure than using IAM user accounts.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了IAM角色，IAM角色允许你创建不专门附加到任何物理用户的身份。IAM角色使你能够授予那些可能没有访问权限的实体访问权限。IAM角色可用于在需要时向实体授予临时凭证，并且根据用例，它们比使用IAM用户账户更安全。
- en: Next, we discussed credential reports, which allow you to audit your existing
    user base within your AWS account and audit usage patterns. Finally, we looked
    at how you can access your AWS account using the AWS CLI.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论了凭证报告，它允许你审计AWS账户中现有的用户基础并审计使用模式。最后，我们介绍了如何使用AWS CLI访问你的AWS账户。
- en: At this point, you have now learned the importance of creating IAM users, groups,
    and roles and have understood their application. You have learned that the root
    user account must not be used for day-to-day operations and you must set up MFA
    for your root user account as well as your IAM users. You have also gained knowledge
    on how IAM roles can be used to grant cross-account access and federated access
    and enable one AWS service to access another AWS service. You have also learned
    how IAM policies can be used to enforce the principle of least privileges, thereby
    improving the security of your AWS account.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解了创建IAM用户、组和角色的重要性，并理解了它们的应用。您已经了解到根用户帐户不能用于日常操作，必须为根用户帐户和IAM用户设置MFA。您还学习了如何使用IAM角色授予跨帐户访问和联合访问，并使一个AWS服务能够访问另一个AWS服务。您还了解了如何使用IAM策略强制实施最小权限原则，从而提高AWS帐户的安全性。
- en: In the next chapter, we look at another core AWS service, called **Amazon Simple
    Storage Service** (**Amazon S3**). Amazon S3 is an object storage solution that
    allows you to store unlimited amounts of data in the cloud. Amazon S3 can be used
    for a wide range of use cases, including storage of digital assets for your web
    applications, such as documents, images, and video, as well as for archive storage.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍另一个核心AWS服务，名为**Amazon简单存储服务**（**Amazon S3**）。Amazon S3是一个对象存储解决方案，允许您在云中存储无限量的数据。Amazon
    S3可用于广泛的使用场景，包括存储Web应用程序的数字资产，如文档、图像和视频，以及归档存储。
- en: Questions
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Here are a few questions to test your knowledge:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些测试您知识的问题：
- en: You wish to deploy a dev and test environment on AWS. You want to ensure that
    your developers can access your AWS account using a highly secure authentication
    process and follow best practices. Which of the following two configuration options
    will help ensure enhanced security? (Choose two answers)
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您希望在AWS上部署开发和测试环境，并希望确保您的开发人员可以通过高度安全的身份验证过程访问您的AWS帐户，并遵循最佳实践。以下哪两种配置选项将帮助确保增强的安全性？（选择两个答案）
- en: Configure your IAM accounts with MFA.
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置IAM帐户以使用MFA。
- en: Configure your IAM password policy with complexity rules.
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置您的IAM密码策略并设置复杂性规则。
- en: Ensure you encrypt your EBS volumes.
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保加密您的EBS卷。
- en: Create RDS databases with Multi-AZ.
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Multi-AZ创建RDS数据库。
- en: Provide the root account credential details to your developers.
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将根帐户凭证提供给您的开发人员。
- en: Your developer is working from home this weekend and needs to access your AWS
    account using the CLI to configure your RDS database from their local computer.
    Which type of IAM credentials would they need to configure the AWS CLI tool on
    their machine?
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的开发人员这周末在家工作，需要通过CLI访问您的AWS帐户，以从他们的本地计算机配置RDS数据库。为了在他们的机器上配置AWS CLI工具，他们需要哪种类型的IAM凭证？
- en: IAM username and password
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM用户名和密码
- en: Access key IDs and secret access keys
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问密钥ID和秘密访问密钥
- en: Access keys and secret ID
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问密钥和秘密ID
- en: HTTPS
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: HTTPS
- en: Which AWS service enables you to troubleshoot your IAM policies and identify
    the sets of permissions that may be denying access to a given AWS service?
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个AWS服务可以帮助您排查IAM策略并识别可能拒绝访问特定AWS服务的权限集？
- en: IAM policy simulator
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM策略模拟器
- en: CloudWatch
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch
- en: CloudTrail
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudTrail
- en: IAM policy manager
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM策略管理器
- en: Which of the following AWS services is a better option to securely grant your
    application running on an EC2 instance access to a backend database running on
    Amazon RDS?
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项AWS服务更适合安全地授予在EC2实例上运行的应用程序访问在Amazon RDS上运行的后端数据库的权限？
- en: Access keys
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问密钥
- en: IAM role
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM角色
- en: IAM group
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM组
- en: Security group
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全组
- en: Which format are IAM policy documents written in?
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM策略文档是以哪种格式编写的？
- en: JSON
  id: totrans-304
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: JSON
- en: YAML
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: YAML
- en: XML
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: XML
- en: JAVA
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: JAVA
- en: What best practice strategy should you follow when assigning permissions to
    IAM users and groups?
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在为IAM用户和组分配权限时，您应该遵循哪种最佳实践策略？
- en: Follow the principle of least privilege.
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循最小权限原则。
- en: Follow the principle of most privilege.
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循最大权限原则。
- en: Follow the ITIL principles.
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循ITIL原则。
- en: Follow the GDPR principle.
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循GDPR原则。
- en: Which IAM service enables you to effectively manage users by creating a collection
    of them based on their job function and assigning them permissions according to
    their roles to the entire collective?
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个IAM服务允许您通过根据工作职能创建用户集合，并根据角色为整个集合分配权限，从而有效地管理用户？
- en: IAM groups
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM组
- en: IAM policies
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM策略
- en: IAM collection
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM集合
- en: IAM roles
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM角色集
- en: Which feature of IAM enables you to use your existing corporate Active Directory
    user credentials to log in to the AWS Management Console and therefore offer an
    SSO service?
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM 的哪个功能使您能够使用现有的公司 Active Directory 用户凭证登录 AWS 管理控制台，从而提供单点登录（SSO）服务？
- en: Identity federation
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 身份联合
- en: IAM user database
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM 用户数据库
- en: Active Directory users and computers
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Active Directory 用户和计算机
- en: MFA
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多因素认证（MFA）
- en: Which AWS service enables you to generate and download a report that lists your
    IAM users and the state of their various credentials, including passwords, access
    keys, and MFA devices?
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 AWS 服务使您能够生成并下载一个报告，列出您的 IAM 用户及其各种凭证的状态，包括密码、访问密钥和 MFA 设备？
- en: AWS policies
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 策略
- en: AWS Explorer
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 资源浏览器
- en: Credentials report
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 凭证报告
- en: User report
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户报告
- en: Which AWS service is responsible for assigning and managing temporary credentials
    to entities that assume an IAM role?
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 AWS 服务负责为承担 IAM 角色的实体分配和管理临时凭证？
- en: AWS Password Manager
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 密码管理器
- en: AWS Security Token Service
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 安全令牌服务
- en: AWS Credentials Manager
  id: totrans-331
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 凭证管理器
- en: AWS Credentials Report
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS 凭证报告
