- en: <st c="0">3</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">3</st>
- en: <st c="2">Exploring ALM and DevOps in Microsoft Power Platform</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">探索 Microsoft Power Platform 中的 ALM 和 DevOps</st>
- en: <st c="54">Microsoft Power Platform allows users to create business applications
    in a simpler and faster way, which should be appealing to anyone no matter their
    development skills.</st> <st c="226">Once we go beyond making personal productivity
    applications and start automating concrete business processes, we need to start
    planning how to best set up a life cycle model for managing all these newly built
    applications in</st> <st c="451">the organizations.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54">Microsoft Power Platform 使用户能够以更简单、更快捷的方式创建业务应用程序，这对于任何人来说都是具有吸引力的，无论其开发技能如何。</st>
    <st c="226">一旦我们超越了个人生产力应用程序的创建，并开始自动化具体的业务流程，我们就需要开始规划如何为这些新构建的应用程序设置最佳的生命周期模型，以便在</st>
    <st c="451">组织中进行管理。</st>
- en: <st c="469">Customer stories help us understand that once an organization has
    adopted Power Platform, the number of produced applications in the organization
    most likely increase heavily.</st> <st c="646">Organizations should have a plan
    in place for how applications will be built, deployed, governed, and maintained.</st>
    <st c="760">This is where</st> **<st c="774">Application Life</st>** **<st c="791">C</st>****<st
    c="792">ycle Management</st>** <st c="807">(</st>**<st c="809">ALM</st>**<st c="812">)
    comes</st> <st c="821">in.</st> <st c="825">However, it is not all only about
    the developers.</st> <st c="875">It is imperative that IT professionals and security
    engineers talk to developers and make sure that they are involved in the process
    of planning, creating, managing, and monitoring environments where applications
    are running.</st> <st c="1101">This is why</st> <st c="1113">expanding ALM with
    DevOps is also important for a</st> **<st c="1163">Low-Code/No-Code</st>** <st
    c="1179">(</st>**<st c="1181">LCNC</st>**<st c="1185">)</st> <st c="1188">development
    approach.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="469">客户案例帮助我们理解，一旦组织采用了 Power Platform，组织中生产的应用程序数量很可能会大幅增加。</st> <st
    c="646">组织应该有一个计划，来处理如何构建、部署、管理和维护这些应用程序。</st> <st c="760">这就是</st> **<st c="774">应用生命周期</st>**
    **<st c="791">管理</st>** <st c="807">(</st>**<st c="809">ALM</st>**<st c="812">)
    的作用所在。</st> <st c="821">然而，这不仅仅是关于开发人员的事情。</st> <st c="875">IT 专业人员和安全工程师必须与开发人员沟通，确保他们参与到规划、创建、管理和监控应用程序运行环境的过程当中。</st>
    <st c="1101">这就是为什么</st> <st c="1113">将 ALM 与 DevOps 结合扩展对于</st> **<st c="1163">低代码/无代码</st>**
    <st c="1179">(</st>**<st c="1181">LCNC</st>**<st c="1185">)</st> <st c="1188">开发方法来说也非常重要。</st>
- en: <st c="1209">In this chapter, we will continue building on the previous chapters
    by explaining why ALM and DevOps should be used by LCNC projects in order to improve
    overall collaboration and quality assurance.</st> <st c="1408">After exploring
    how ALM can help us with building applications, we will delve into the topic of
    application modernization, since organizations often have many existing legacy
    applications that should be assessed and have their future decided on.</st> <st
    c="1654">We will close this chapter by understanding how the Power Platform adoption
    maturity model is connected with ALM/DevOps and application modernization, as
    well as why it is important to increase the maturity level</st> <st c="1867">in
    organizations.</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1209">在本章中，我们将继续在前几章的基础上，解释为什么 LCNC 项目应该使用 ALM 和 DevOps，以提高整体协作和质量保证。</st>
    <st c="1408">在探索 ALM 如何帮助我们构建应用程序后，我们将深入探讨应用现代化的话题，因为组织通常有许多现有的遗留应用程序，这些应用程序应该进行评估并决定其未来。</st>
    <st c="1654">本章的最后，我们将了解 Power Platform 采用成熟度模型如何与 ALM/DevOps 和应用现代化相关联，以及为什么提高组织的成熟度水平至关重要。</st>
    <st c="1867">在组织中。</st>
- en: <st c="1884">Throughout this chapter, we will cover the following</st> <st c="1938">main
    topics:</st>
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1884">在本章中，我们将涵盖以下</st> <st c="1938">主要主题：</st>
- en: <st c="1950">Why implement ALM and DevOps in</st> <st c="1983">Power Platform?</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1950">为什么在</st> <st c="1983">Power Platform 中实施 ALM 和 DevOps？</st>
- en: <st c="1998">Application modernization with an</st> <st c="2033">LCNC approach</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="1998">通过</st> <st c="2033">LCNC 方法进行应用现代化</st>
- en: <st c="2046">Building Power Platform</st> <st c="2071">adoption journey</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2046">构建 Power Platform</st> <st c="2071">采用之旅</st>
- en: <st c="2087">Why implement ALM and DevOps in Power Platform?</st>
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2087">为什么在 Power Platform 中实施 ALM 和 DevOps？</st>
- en: <st c="2135">This section</st> <st c="2149">examines why LCNC platforms such
    as Microsoft Power Platform should implement ALM processes and how it will improve
    team collaboration, improve quality assurance, and help mitigate</st> <st c="2330">potential
    risks.</st>
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2135">本节</st> <st c="2149">探讨了为什么像微软 Power Platform 这样的 LCNC 平台需要实施 ALM
    流程，以及它将如何改善团队协作、提高质量保证并帮助减轻</st> <st c="2330">潜在风险。</st>
- en: <st c="2346">In the early stages of the adoption, we can see organizations giving
    Power Platform services to</st> <st c="2442">their</st> **<st c="2449">citizen
    developers</st>**<st c="2467">. Citizen developers are individuals or employees
    within an organization who do not strictly hold traditional programming skills
    and usually come from the business unit rather than IT or development teams.</st>
    <st c="2673">They use Power Platform to build business applications mostly for
    themselves, to enable their personal productivity, without imposing any strict
    guidance on</st> <st c="2830">the usage.</st>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2346">在采纳的初期阶段，我们可以看到组织将 Power Platform 服务提供给</st> <st c="2442">他们的</st>
    **<st c="2449">公民开发者</st>**<st c="2467">。公民开发者是指在组织内部不具备传统编程技能的个人或员工，他们通常来自业务部门，而非
    IT 或开发团队。</st> <st c="2673">他们使用 Power Platform 主要为自己构建业务应用程序，以提升个人生产力，并且不对</st>
    <st c="2830">使用方式施加严格的指导。</st>
- en: <st c="2840">As organizations mature, increase their awareness and knowledge
    around Power Platform, and start building more complex projects, they look for
    scalable, consistent, stable, and secure approaches for building and maintaining
    business applications.</st> <st c="3088">This is directly connected with understanding
    the importance of the ALM, which brings practices on how to govern, develop, and
    maintain applications together.</st> <st c="3247">Using the ALM approach for building
    applications can have positive implications for the development speed, reliability,
    and end</st> <st c="3375">user experience.</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2840">随着组织的成熟，对 Power Platform 的认识和知识逐渐增加，开始构建更复杂的项目时，他们会寻求可扩展、一致、稳定且安全的构建和维护业务应用程序的方法。</st>
    <st c="3088">这与理解 ALM 的重要性直接相关，ALM 为如何共同治理、开发和维护应用程序提供了实践。</st> <st c="3247">采用
    ALM 方法来构建应用程序可以对开发速度、可靠性和最终</st> <st c="3375">用户体验产生积极影响。</st>
- en: <st c="3391">When talking about the</st> **<st c="3415">speed of development</st>**<st
    c="3435">, we need to mention that ALM provides a framework and strives toward
    using the platform that allows multiple contributors to work on the application
    simultaneously.</st> <st c="3601">This is where a version control tool comes in.</st>
    <st c="3648">Since many tools nowadays, such as Azure DevOps and GitHub, offer
    a single platform to cover the ALM/DevOps life cycle, we can improve our speed
    of development by implementing automated build, test, and deployment pipelines
    through CI/CD pipelines.</st> <st c="3897">However, we can also improve delivery
    time by improving how we are developing our applications.</st> <st c="3993">Building
    reusable code components allows us to reuse these building blocks across projects
    and save time on the development.</st> <st c="4118">In the context of reliability,
    since we have a version control system in place, we have the possibility to do
    a rollback to the previous version, as mistakes can and will happen along the
    way.</st> <st c="4311">Having this ability increases our options to maintain system
    stability.</st> <st c="4383">The aforementioned CI/CD pipelines will help us make
    sure that applications are consistently deployed across different environments,
    which minimizes configuration drift and</st> <st c="4556">unexpected behavior.</st>
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3391">在谈到</st> **<st c="3415">开发速度</st>**<st c="3435">时，我们需要提到 ALM 提供了一个框架，旨在使用允许多个贡献者同时在应用程序上进行工作的平台。</st>
    <st c="3601">这时版本控制工具就显得尤为重要。</st> <st c="3648">由于如今许多工具，如 Azure DevOps 和 GitHub，提供了一个单一平台来覆盖
    ALM/DevOps 生命周期，我们可以通过实施自动化构建、测试和部署管道，利用 CI/CD 流水线提高开发速度。</st> <st c="3897">然而，我们也可以通过改进开发方式来提高交付时间。</st>
    <st c="3993">构建可重用的代码组件可以让我们在不同项目中复用这些构建块，从而节省开发时间。</st> <st c="4118">在可靠性方面，由于我们已经建立了版本控制系统，我们有可能将系统回滚到之前的版本，因为在开发过程中错误是难以避免的。</st>
    <st c="4311">拥有这一能力可以增加我们维持系统稳定性的选择。</st> <st c="4383">前面提到的 CI/CD 流水线将帮助我们确保应用程序在不同环境中持续部署，从而最大限度地减少配置漂移和</st>
    <st c="4556">意外行为。</st>
- en: <st c="4576">Lastly, having a</st> <st c="4593">bug-free application plays an
    important role in shaping the user experience.</st> <st c="4671">Implementing
    continuous automated testing will help us discover potential issues early in the
    process.</st> <st c="4774">With automated testing, we can also look at potential
    performance bottlenecks.</st> <st c="4853">It helps us remove or optimize these
    issues in order to improve performance and, at the end of the day, improve the</st>
    <st c="4969">user experience.</st>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4576">最后，拥有一个</st> <st c="4593">无bug的应用程序在塑造用户体验中起着重要作用。</st> <st c="4671">实施持续自动化测试将帮助我们在流程早期发现潜在问题。</st>
    <st c="4774">通过自动化测试，我们还可以查看潜在的性能瓶颈。</st> <st c="4853">这有助于我们去除或优化这些问题，从而提高性能，并最终改善</st>
    <st c="4969">用户体验。</st>
- en: <st c="4985">Whenever we are considering application life cycle management in
    Power Platform, we concentrate on two main concepts:</st> **<st c="5104">solutions</st>**
    <st c="5113">and</st> **<st c="5118">environments</st>**<st c="5130">. Everything
    that we develop throughout our project as part of the business solution, whether
    this would be a canvas application, flow, Dataverse table, or custom component,
    is represented as a</st> **<st c="5324">solution component</st>**<st c="5342">.
    These solution components are added into a solution, to which we apply the ALM
    process, which enables the automated approach of exporting and importing of the
    solution to different environments.</st> <st c="5539">Environments act as a container
    that isolates the content inside our tenant and allows the separation of the target
    audience.</st> <st c="5665">The concepts of both solutions and environments will
    be probably well-known to IT professionals, pro developers, and DevOps engineers.</st>
    <st c="5800">This is because a similar approach is used in traditional software
    development, where applications are packaged in a package (solutions, in the context
    of Power Platform) and deployed to various target environments, such as development,
    test, pre-production, and</st> <st c="6063">production environments.</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4985">每当我们在考虑 Power Platform 中的应用生命周期管理时，我们会集中关注两个主要概念：</st> **<st c="5104">解决方案</st>**
    <st c="5113">和</st> **<st c="5118">环境</st>**<st c="5130">。我们在项目中开发的所有内容，作为业务解决方案的一部分，无论是画布应用、流程、Dataverse
    表格还是自定义组件，都作为一个</st> **<st c="5324">解决方案组件</st>**<st c="5342">呈现。这些解决方案组件被添加到一个解决方案中，并且我们应用
    ALM 过程，使得能够自动化地将解决方案导出和导入到不同的环境中。</st> <st c="5539">环境充当一个容器，隔离我们租户中的内容，并允许目标受众的分离。</st>
    <st c="5665">解决方案和环境这两个概念可能对于 IT 专业人士、专业开发人员和 DevOps 工程师来说是非常熟悉的。</st> <st c="5800">这是因为在传统的软件开发中，也使用类似的方法，其中应用程序被打包成一个包（在
    Power Platform 的上下文中是解决方案），并部署到不同的目标环境中，如开发环境、测试环境、预生产环境和</st> <st c="6063">生产环境。</st>
- en: <st c="6087">The concepts of solutions and environments will be described in
    depth in</st> [*<st c="6161">Chapter 4</st>*](B22208_04.xhtml#_idTextAnchor074)<st
    c="6170">. ALM in Power Platform is just one part of the story.</st> <st c="6225">Many
    people think of ALM as only being the deployment process to different environments,
    but the story is bigger than that.</st> <st c="6349">We should combine it with
    DevOps and also look at implementing additional steps such as building an environment
    management strategy, automatically packaging Power Platform resources into solutions,
    securing and managing environments, and, lastly, automatically deploying to different
    environments consistently while making sure that the produced work is properly
    tested.</st> <st c="6720">DevOps on Power Platform not only focuses on app makers
    and pro-developers, but also on enabling IT administrators to build strong platform
    and IT operations (IT ops) processes, which allow us to automate platform-specific
    tasks such as environment provisioning, platform management, DLP policy management,
    auditing, and more.</st> <st c="7047">Many times, business applications extend
    outside of Power Platform, so an IT operation team also needs to take care of
    the network management, for example when configuring the integration between Power
    Platform and Azure services or other on-premises</st> <st c="7298">backend systems.</st>
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6087">解决方案和环境的概念将在</st> [*<st c="6161">第4章</st>*](B22208_04.xhtml#_idTextAnchor074)<st
    c="6170">中详细描述。Power Platform中的ALM只是故事的一部分。</st> <st c="6225">许多人认为ALM仅仅是将解决方案部署到不同环境的过程，但实际情况远不止于此。</st>
    <st c="6349">我们应该将其与DevOps结合，并考虑实施额外的步骤，例如构建环境管理策略、自动将Power Platform资源打包成解决方案、保障和管理环境，以及最后，在确保所生成的工作经过适当测试的情况下，一致地自动部署到不同环境。</st>
    <st c="6720">Power Platform上的DevOps不仅关注应用开发者和专业开发者，还着眼于帮助IT管理员构建强大的平台和IT运营（IT
    ops）流程，这些流程使我们能够自动化平台特定任务，如环境配置、平台管理、DLP政策管理、审计等。</st> <st c="7047">许多时候，商业应用扩展超出了Power
    Platform，因此IT运营团队还需要负责网络管理，例如在配置Power Platform与Azure服务或其他本地后端系统的集成时。</st> <st
    c="7298">后端系统。</st>
- en: <st c="7314">As mentioned in</st> [*<st c="7331">Chapter 1</st>*](B22208_01.xhtml#_idTextAnchor014)<st
    c="7340">, ALM is a software development process that connects multiple phases
    of software development in a cyclical way.</st> <st c="7453">Now let’s take a
    helicopter view on what each of these phases mean in the context of</st> <st c="7538">Power
    Platform.</st>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7314">正如在</st> [*<st c="7331">第1章</st>*](B22208_01.xhtml#_idTextAnchor014)<st
    c="7340">中提到的，ALM是一个将软件开发多个阶段以循环方式连接起来的软件开发过程。</st> <st c="7453">现在，让我们从一个更高的视角来看看这些阶段在</st>
    <st c="7538">Power Platform中的意义。</st>
- en: <st c="7553">Plan and track</st>
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="7553">计划和跟踪</st>
- en: <st c="7568">The</st> <st c="7573">first thing we need to do before we jump
    into developing a project is to implement good preparation and planning of the
    project, which</st> <st c="7707">we can do by going through a</st> **<st c="7737">requirements
    workshop</st>** <st c="7758">process.</st> <st c="7768">This helps us understand
    the project goals and scope.</st> <st c="7822">It lets us start building the outcomes
    for this phase.</st> <st c="7877">This step requires good validation questions
    that will help us understand the goals and the project scope.</st> <st c="7984">Understanding
    the project scope will help us understand the timeline and resources available,
    including the budget.</st> <st c="8100">It will also let us potentially conduct
    a feasibility study to determine whether there might be some significant obstacles
    that we should be aware of.</st> <st c="8251">Once we understand the scope of
    the project, we can continue with capturing all the feature requests and prioritizing</st>
    <st c="8369">them using the</st> **<st c="8384">four-quadrants method</st>**<st
    c="8405">:</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7568">我们在开始开发项目之前，需要做的第一件事是进行充分的项目准备和规划，</st> <st c="7573">我们可以通过进行一个</st>
    **<st c="7737">需求研讨会</st>** <st c="7758">流程来实现。</st> <st c="7768">这有助于我们理解项目的目标和范围。</st>
    <st c="7822">它让我们开始为这个阶段构建成果。</st> <st c="7877">这个步骤需要提出有效的验证问题，帮助我们理解目标和项目范围。</st>
    <st c="7984">理解项目范围有助于我们了解可用的时间表和资源，包括预算。</st> <st c="8100">它还让我们可以进行可行性研究，以确定是否存在一些我们应当注意的重要障碍。</st>
    <st c="8251">一旦我们理解了项目的范围，就可以继续收集所有的功能需求并优先排序。</st> <st c="8369">然后使用</st> **<st
    c="8384">四象限法</st>**<st c="8405">：</st>
- en: '![Figure 3.1 – The four-quadrant method](img/B22208_03_1.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1 – 四象限方法](img/B22208_03_1.jpg)'
- en: <st c="8693">Figure 3.1 – The four-quadrant method</st>
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8693">图 3.1 – 四象限法</st>
- en: <st c="8730">Next, we will</st> <st c="8745">identify all team members associated
    with the selected project and allocate them</st> <st c="8825">their respective
    roles for the project.</st> <st c="8866">Designated Agile methodologies, such
    as Scrum, already have predefined roles with their corresponding tasks, that we
    can reference to, when aligning roles to our team members.</st> <st c="9042">This
    will help us with assigning team members to defined tasks and user stories in
    the project planning tool.</st> <st c="9152">Using the selected project planning
    tool, we will align the work item types with the methodology that we will be using
    for the project and start creating work items, such as user stories and tasks,
    and map them according to the project schedule and responsible</st> <st c="9413">team
    members.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8730">接下来，我们将</st> <st c="8745">识别与所选项目相关的所有团队成员，并为他们分配</st> <st c="8825">各自的角色。</st>
    <st c="8866">指定的敏捷方法论，如Scrum，已经有预定义的角色及其相应的任务，当我们将角色分配给团队成员时，可以参考这些方法论。</st> <st
    c="9042">这将帮助我们在项目规划工具中将团队成员分配到定义好的任务和用户故事中。</st> <st c="9152">使用所选的项目规划工具，我们将把工作项类型与我们将在项目中使用的方法论对齐，并开始创建工作项，如用户故事和任务，并根据项目进度和责任人进行映射。</st>
    <st c="9413">团队成员。</st>
- en: <st c="9426">From the perspective of project planning, this is also a phase
    wherein we should be defining and building an environment design, defining the
    data strategy, and starting with the data modeling.</st> <st c="9621">Here, we
    are working on our project architectural design.</st> <st c="9679">Security teams
    should also start with threat modeling to identify any potential threats and mitigate
    them through adjustments in the architectural design, either physical or logical.</st>
    <st c="9862">Lastly, to address the user experience part and feature requests,
    we can start with the application storyboarding</st> <st c="9976">or wireframes.</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9426">从项目规划的角度来看，这也是一个我们应当定义和构建环境设计、定义数据战略并开始进行数据建模的阶段。</st> <st c="9621">在这里，我们正在进行项目架构设计。</st>
    <st c="9679">安全团队还应该开始进行威胁建模，以识别潜在威胁，并通过调整架构设计（无论是物理的还是逻辑的）来减轻这些威胁。</st> <st c="9862">最后，为了解决用户体验部分和功能请求，我们可以从应用程序故事板或线框图开始。</st>
    <st c="9976">或线框图。</st>
- en: <st c="9990">As we can see, in the first phase of ALM, we might not even be
    touching Power Platform services.</st> <st c="10088">Instead, we will be focusing
    on the project planning-related activities.</st> <st c="10161">We can support
    this phase with</st> <st c="10191">project planning tools, such as</st> **<st
    c="10224">Azure Boards</st>** <st c="10236">(</st>**<st c="10238">Azure DevOps</st>**<st
    c="10250">), which has built-in project planning capabilities.</st> <st c="10304">It
    allows us to define the project through work items and to plan and track the work
    done as</st> <st c="10397">time progresses.</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9990">如我们所见，在ALM的第一阶段，我们甚至可能还没有接触到Power Platform服务。</st> <st c="10088">相反，我们将专注于与项目规划相关的活动。</st>
    <st c="10161">我们可以通过</st> <st c="10191">项目规划工具来支持这个阶段，比如</st> **<st c="10224">Azure
    Boards</st>** <st c="10236">（</st>**<st c="10238">Azure DevOps</st>**<st c="10250">），它内置了项目规划功能。</st>
    <st c="10304">它允许我们通过工作项定义项目，并随着时间的推移计划和跟踪已完成的工作。</st> <st c="10397">时间进展时。</st>
- en: <st c="10413">Here, we will also be deciding on our strategy that will influence
    the next phase – our branching strategy.</st> <st c="10522">We will also be deciding
    whether to use a single- or</st> <st c="10575">multi-repository approach.</st>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10413">在这里，我们还将决定我们的战略，这将影响下一阶段——我们的分支策略。</st> <st c="10522">我们还将决定是使用单一仓库还是</st>
    <st c="10575">多仓库方法。</st>
- en: <st c="10601">Development</st>
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="10601">开发</st>
- en: <st c="10613">The</st> <st c="10618">development phase is where app makers and
    pro-developers collaborate to realize the defined tasks and user stories in a
    sequence of sprints defined by the used methodology and project schedule.</st>
    <st c="10812">Depending on the project, this is a phase where we will be using
    Power Platform services to develop our business applications, flows, custom copilots,
    and websites.</st> <st c="10977">To support this phase, we will enable and connect
    our project with a version control system.</st> <st c="11070">A version control
    system protects development teams by having snapshots of the code over time, allowing
    them to revert to the previous version.</st> <st c="11214">It also safeguards
    them against potential conflicts in the code when there might be concurrent work
    done by offering developers a simple way to identify and resolve conflicts systematically.</st>
    <st c="11405">An example of such a system would be Azure Repos, part of Azure
    DevOps, or the</st> <st c="11484">GitHub repository.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10613">开发阶段是应用开发人员和专业开发者合作，按所使用的方法论和项目计划中的一系列冲刺实现已定义任务和用户故事的阶段。</st>
    <st c="10618">根据项目的不同，在这一阶段我们将使用Power Platform服务来开发我们的业务应用程序、流程、定制协助工具和网站。</st>
    <st c="10812">为了支持这一阶段，我们将启用并将项目与版本控制系统连接。</st> <st c="10977">版本控制系统通过保存代码的快照来保护开发团队，让他们能够恢复到之前的版本。</st>
    <st c="11070">它还通过为开发人员提供一种简单的方式来识别并系统地解决代码冲突，保护他们免受可能出现的并行开发冲突。</st> <st c="11214">这种系统的一个例子是Azure
    Repos，它是Azure DevOps的一部分，或者是</st> <st c="11405">GitHub仓库。</st>
- en: <st c="11502">Even though we have moved from the planning and tracking phase
    to the development phase, this and all subsequent phases in the life cycle have
    a big dependency on the first phase, as we will continue to use selected project
    planning tools such as Azure Boards.</st> <st c="11764">These tools will allow
    us to track the status of the work items and update them accordingly.</st> <st
    c="11857">We also use Azure Boards to collaborate with others project members
    by exchanging ideas and comments on the</st> <st c="11965">work items.</st>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11502">即使我们已经从规划和跟踪阶段转向开发阶段，但这一阶段以及生命周期中所有后续阶段仍然依赖于第一阶段，因为我们将继续使用选定的项目规划工具，如Azure
    Boards。</st> <st c="11764">这些工具将帮助我们跟踪工作项的状态并相应地更新它们。</st> <st c="11857">我们还使用Azure
    Boards与其他项目成员合作，通过交换想法和评论来共同处理工作项。</st> <st c="11965">工作项。</st>
- en: <st c="11976">The development</st> <st c="11993">tasks are done in the Power
    Platform services and in</st> **<st c="12046">Integrated Development Environments</st>**
    <st c="12081">(</st>**<st c="12083">IDEs</st>**<st c="12087">) such as Visual</st>
    <st c="12105">Studio Code.</st>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11976">开发</st> <st c="11993">任务是在Power Platform服务和</st> **<st c="12046">集成开发环境</st>**
    <st c="12081">(</st>**<st c="12083">IDEs</st>**<st c="12087">) 中完成的，</st> <st
    c="12105">例如Visual Studio Code。</st>
- en: <st c="12117">As an example of collaboration in Power Platform services, we
    can mention that Power Apps supports co-authoring in model-driven apps, and soon
    in canvas apps, which allows multiple makers to make changes in the application
    at the same time and have their changes reflected to others in real time.</st>
    <st c="12415">However, not all services enable the same level of co-authoring
    experience yet; thus, in order to mitigate this challenge of collaboration between
    code-first and citizen developers, Microsoft has introduced Power Platform Tools
    extensions, which we mentioned in the</st> <st c="12681">previous chapter.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12117">作为Power Platform服务中协作的一个例子，我们可以提到Power Apps支持在模型驱动应用中进行协同创作，并且即将在画布应用中支持这一功能，这使得多个开发者能够同时在应用中进行更改，并且他们的更改实时反映给其他人。</st>
    <st c="12415">然而，并不是所有服务目前都支持相同程度的协同创作体验；因此，为了缓解代码优先开发者与公民开发者之间的协作挑战，微软推出了Power
    Platform Tools扩展，这在</st> <st c="12681">前一章中已提到。</st>
- en: <st c="12698">As with DevOps, we strive to automate manual tasks.</st> <st c="12751">In
    this phase, we will start building CI/CD pipelines that will help us automate
    the build, test, and deploy process, which is done in the next phases of DevOps.</st>
    <st c="12913">Automated CI/CD pipelines are built in the DevOps tools, supported
    with tools for</st> <st c="12994">automating tasks in Power Platform.</st> <st
    c="13031">Examples of these are Power Platform Build Tools,</st> **<st c="13081">Power
    Platform CLI</st>** <st c="13099">(</st>**<st c="13101">PAC CLI</st>**<st c="13108">),</st>
    <st c="13112">PowerShell cmdlets.</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12698">与 DevOps 一样，我们努力自动化手动任务。</st> <st c="12751">在这一阶段，我们将开始构建 CI/CD
    流水线，帮助我们自动化构建、测试和部署过程，这将在 DevOps 的下一个阶段中完成。</st> <st c="12913">自动化的 CI/CD 流水线是在
    DevOps 工具中构建的，并配备有 Power Platform 中自动化任务的工具。</st> <st c="12994">这些工具的例子包括 Power
    Platform Build Tools、</st> **<st c="13081">Power Platform CLI</st>** <st c="13099">(</st>**<st
    c="13101">PAC CLI</st>**<st c="13108">)，</st> <st c="13112">PowerShell cmdlets。</st>
- en: <st c="13131">Build and test</st>
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="13131">构建和测试</st>
- en: <st c="13146">Once</st> <st c="13152">the necessary features have been developed
    or bugs have been resolved and developers are ready to proceed with the next phase,
    they will need to initiate the sequence of tasks that will build the completed
    work and package it into a solution that is ready to be deployed to</st> <st c="13426">target
    environments.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13146">一旦</st> <st c="13152">必要的功能已开发完毕或问题已解决，且开发人员准备好进入下一个阶段，他们需要启动一系列任务，将完成的工作构建并打包成一个准备好部署到</st>
    <st c="13426">目标环境的解决方案。</st>
- en: <st c="13446">One of the best practices in DevOps is to</st> <st c="13488">have
    as much as possible automated.</st> <st c="13525">In</st> **<st c="13528">Continuous
    Integration</st>** <st c="13550">(</st>**<st c="13552">CI</st>**<st c="13554">)
    pipelines, we define the tasks that are required to build and test our solution.</st>
    <st c="13638">For this task, we can use CI/CD tools, such as Azure DevOps, which
    has the Azure Pipelines feature built into the product itself.</st> <st c="13768">Alternatively,
    we can use GitHub Actions, which is part of the</st> <st c="13831">GitHub product.</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13446">DevOps 中的最佳实践之一是</st> <st c="13488">尽可能地实现自动化。</st> <st c="13525">在</st>
    **<st c="13528">持续集成</st>** <st c="13550">(</st>**<st c="13552">CI</st>**<st c="13554">)
    流水线中，我们定义了构建和测试解决方案所需的任务。</st> <st c="13638">对于此任务，我们可以使用 CI/CD 工具，例如 Azure DevOps，它本身内置了
    Azure Pipelines 功能。</st> <st c="13768">或者，我们可以使用 GitHub Actions，它是 GitHub 产品的一部分。</st>
- en: <st c="13846">The CI pipelines can be automatically triggered whenever the work
    gets committed to the repository.</st> <st c="13947">This reduces the need for
    human intervention to start</st> <st c="14001">the process.</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13846">每当工作提交到代码库时，CI 流水线可以自动触发。</st> <st c="13947">这减少了启动过程时对人工干预的需求。</st>
    <st c="14001">该过程由系统自动开始。</st>
- en: <st c="14013">Inside our CI pipeline, we have placed a series of tasks using
    Power Platform Build Tools or PAC CLI to perform</st> <st c="14126">necessary
    actions.</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14013">在我们的 CI 流水线中，我们已经放置了一系列使用 Power Platform Build Tools 或 PAC CLI
    来执行</st> <st c="14126">必要操作的任务。</st>
- en: <st c="14144">We cannot go forward without mentioning testing.</st> <st c="14194">An
    appropriate set of tests should be done here as well before proceeding to the
    next stage.</st> <st c="14287">Azure DevOps Pipelines or GitHub Actions enable
    us to automatically run tests during the CI pipelines.</st> <st c="14390">For
    example using the Solution Checker or PowerShell cmdlets for admins and developers,
    specifically the</st> `<st c="14495">Microsoft.PowerApps.Checker.PowerShell</st>`
    <st c="14533">module, we can integrate the solution checker functionality into
    the CI pipelines.</st> <st c="14617">Such an approach allows developers to implement
    static analysis checks during the build validation process and identify problematic
    patterns during the development process.</st> <st c="14790">From here on, we can
    use other testing tools in Power Platform, such as Power App Test Studio or Power
    Apps Test Engine, to build end-to-end tests in</st> <st c="14940">Power Apps.</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14144">我们不能不提测试。</st> <st c="14194">在继续到下一个阶段之前，应该在这里进行一组适当的测试。</st>
    <st c="14287">Azure DevOps Pipelines 或 GitHub Actions 使我们能够在 CI 流水线期间自动运行测试。</st>
    <st c="14390">例如，使用管理员和开发人员的 Solution Checker 或 PowerShell cmdlets，特别是</st> `<st
    c="14495">Microsoft.PowerApps.Checker.PowerShell</st>` <st c="14533">模块，我们可以将解决方案检查器功能集成到
    CI 流水线中。</st> <st c="14617">这种方法允许开发人员在构建验证过程中实施静态分析检查，并在开发过程中识别出问题模式。</st> <st
    c="14790">从这里开始，我们可以使用 Power Platform 中的其他测试工具，如 Power App Test Studio 或 Power
    Apps Test Engine，来构建 Power Apps 中的端到端测试。</st>
- en: <st c="14951">As the</st> <st c="14959">outcome of this phase, using the tools
    we’ve mentioned, we have produced a build artifact.</st> <st c="15050">An artifact
    is a side effect of the build process, which in the context of Power Platform
    will be a packaged solution with all the components that have been added to the
    solution.</st> <st c="15230">This will be used in the next,</st> <st c="15261">deployment
    phase.</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14951">作为</st> <st c="14959">此阶段的结果，使用我们提到的工具，我们已经生成了一个构建工件。</st> <st
    c="15050">工件是构建过程的副产品，在Power Platform的背景下，它将是一个打包的解决方案，其中包含已添加到解决方案中的所有组件。</st>
    <st c="15230">这将在接下来的</st> <st c="15261">部署阶段中使用。</st>
- en: <st c="15278">Deploy</st>
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="15278">部署</st>
- en: <st c="15285">Now that we</st> <st c="15297">have an artifact as a result of
    the previous phase, we can focus on deploying it to the necessary environments
    and run additional tests there, such as integration, performance, security, and
    UI tests.</st> <st c="15499">As with the</st> <st c="15511">previous phase,</st>
    **<st c="15527">Continuous Deployment</st>** <st c="15548">(</st>**<st c="15550">CD</st>**<st
    c="15552">) aims to automatically deploy solutions to various environments, including
    production.</st> <st c="15641">With the use of DevOps tools and CD pipelines,
    together with Power Platform Build Tools, we can make sure that the deployment
    process</st> <st c="15775">gets automated.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15285">既然我们</st> <st c="15297">在前一个阶段的结果中有了一个工件，我们可以专注于将其部署到必要的环境，并在那里运行额外的测试，如集成、性能、安全和UI测试。</st>
    <st c="15499">与</st> <st c="15511">前一个阶段一样，**<st c="15527">持续部署</st>** <st c="15548">(</st>**<st
    c="15550">CD</st>**<st c="15552">)**旨在自动将解决方案部署到各种环境，包括生产环境。</st> <st c="15641">通过使用DevOps工具和CD流水线，再加上Power
    Platform构建工具，我们可以确保部署过程</st> <st c="15775">得到自动化。</st>
- en: <st c="15790">An important step in this process is having the environments ready
    for the solution.</st> <st c="15876">This involves adhering to the environment
    strategy and following the governance guidelines defined by</st> <st c="15978">the
    organization.</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15790">此过程中的一个重要步骤是为解决方案准备好环境。</st> <st c="15876">这涉及遵循环境策略并按照组织定义的治理准则行事。</st>
- en: <st c="15995">With the environments ready, we can follow the agreed-upon deployment
    strategy.</st> <st c="16076">This strategy defines how we want to deliver our
    application to the users.</st> <st c="16151">Various deployment strategies exist,
    such as the blue-green deployment process, A/B testing, canary releases, and so
    on.</st> <st c="16272">The intention of all these deployment strategies is to
    bring updated applications to a set of users in a controlled way in order to be
    able to analyze different indicators, such as performance, user behavior, feature
    impact, and so on.</st> <st c="16508">As an example of a deployment strategy in
    practice, we can take a blue-green deployment strategy and, using the application
    sharing option, bring new features to a set of users.</st> <st c="16686">The process
    of sharing to multiple users or groups can be automatized</st> <st c="16756">with
    CLI/cmdlets.</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15995">环境准备就绪后，我们可以遵循协商一致的部署策略。</st> <st c="16076">此策略定义了我们如何向用户交付应用程序。</st>
    <st c="16151">存在各种部署策略，如蓝绿部署流程、A/B测试、金丝雀发布等。</st> <st c="16272">所有这些部署策略的目的都是以受控的方式将更新的应用程序提供给一组用户，以便分析不同的指标，如性能、用户行为、功能影响等。</st>
    <st c="16508">作为实际部署策略的示例，我们可以采用蓝绿部署策略，并使用应用程序共享选项向一组用户引入新功能。</st> <st c="16686">向多个用户或组共享的过程可以通过CLI/cmdlets自动化</st>
    <st c="16756">完成。</st>
- en: <st c="16773">As deployments might sometimes not go as planned, we should have
    our rollback strategy ready in case of any issues during the deployment or</st>
    <st c="16914">testing phase.</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16773">由于部署有时可能不如预期，我们应该准备好回滚策略，以防在部署或</st> <st c="16914">测试阶段出现任何问题。</st>
- en: <st c="16928">During this phase we can also perform any data-related activities
    – for example, ingesting the test data into Dataverse tables or provisioning new
    tables for the test environment and copying the data from the different environments</st>
    <st c="17161">using dataflows.</st>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16928">在此阶段，我们还可以执行与数据相关的任何活动，例如将测试数据导入Dataverse表格或为测试环境提供新表格，并从不同环境中复制数据</st>
    <st c="17161">使用数据流。</st>
- en: <st c="17177">Operate</st>
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="17177">操作</st>
- en: <st c="17185">The</st> <st c="17190">purpose of this phase is to ensure the</st>
    **<st c="17229">availability</st>** <st c="17241">of the systems and to have a
    stable and healthy state of the deployed solution.</st> <st c="17322">Since Power
    Platform is a SaaS solution, IT administrators do not have control over the infrastructure
    running the service, which is why they have to rely on</st> <st c="17480">Microsoft
    to keep the systems up and running.</st> **<st c="17526">Service Level Agreements</st>**
    <st c="17550">(</st>**<st c="17552">SLAs</st>**<st c="17556">) describe Microsoft’s
    commitment to uptime and connectivity.</st> <st c="17619">However, things happen
    and in order to verify the state of the service, IT administrators can verify
    the current state in the</st> **<st c="17745">Service health</st>** <st c="17759">dashboard
    in the Power Platform admin center.</st> <st c="17806">There, they can see whether
    there are any ongoing service degradations or future</st> <st c="17887">planned
    interruptions.</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17185">此阶段的</st> <st c="17190">目的是确保系统的</st> **<st c="17229">可用性</st>**
    <st c="17241">以及部署解决方案的稳定和健康状态。</st> <st c="17322">由于 Power Platform 是一项 SaaS
    解决方案，IT 管理员无法控制运行服务的基础设施，这就是他们必须依赖</st> <st c="17480">微软来保持系统正常运行的原因。</st> **<st
    c="17526">服务水平协议</st>** <st c="17550">(</st>**<st c="17552">SLA</st>**<st c="17556">)
    描述了微软对正常运行时间和连接性的承诺。</st> <st c="17619">然而，事情会发生，为了验证服务的状态，IT 管理员可以在 Power Platform
    管理中心的</st> **<st c="17745">服务健康</st>** <st c="17759">仪表板中验证当前状态。</st> <st c="17806">在这里，他们可以看到是否有任何正在进行的服务降级或未来的</st>
    <st c="17887">计划中断。</st>
- en: <st c="17909">A set of tools, such as those available in the Power Platform
    admin center or</st> **<st c="17988">Center of Excellence</st>** <st c="18008">(</st>**<st
    c="18010">CoE</st>**<st c="18013">) Starter Kit, help</st> <st c="18034">us understand
    the state of our environments and of the deployed solutions.</st> <st c="18109">By
    connecting our applications with application performance monitoring solutions
    such as Azure Application Insights, we are able to collect and analyze health,
    performance, and usage data over</st> <st c="18302">the applications.</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17909">一套工具，比如在 Power Platform 管理中心或</st> **<st c="17988">卓越中心</st>**
    <st c="18008">(</st>**<st c="18010">CoE</st>**<st c="18013">) 启动工具包，帮助</st> <st
    c="18034">我们了解环境和部署解决方案的状态。</st> <st c="18109">通过将我们的应用程序与应用程序性能监控解决方案，如 Azure
    Application Insights，连接，我们可以收集并分析健康、性能和使用数据，</st> <st c="18302">覆盖应用程序。</st>
- en: <st c="18319">Additionally, during this phase, we can control the exposure of
    newly developed features and applications to our end users.</st> <st c="18444">Through
    feature flags and an agreed-upon deployment strategy, we can verify that the switches
    are performing and that users are able to access the features or services as designed
    for the specific</st> <st c="18641">user group.</st>
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18319">此外，在此阶段，我们可以控制新开发的功能和应用程序对最终用户的暴露。</st> <st c="18444">通过功能标志和商定的部署策略，我们可以验证开关的功能，并确保用户能够按设计访问特定</st>
    <st c="18641">用户组的功能或服务。</st>
- en: <st c="18652">Monitor and learn</st>
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="18652">监控和学习</st>
- en: <st c="18670">The</st> <st c="18675">last phase of the continuous DevOps life
    cycle is intended to make sure that the monitoring tools are in place and are
    providing us with the telemetry that we can use to</st> *<st c="18845">analyze
    the usage and performance</st>* <st c="18878">of our business application.</st>
    <st c="18908">This information helps us to learn and improve the current DevOps
    process.</st> <st c="18983">It can provide us with insights on whether we need
    to build better and more</st> <st c="19059">engaging applications.</st>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18670">连续 DevOps 生命周期的</st> <st c="18675">最后阶段旨在确保监控工具到位，并为我们提供可以用来</st>
    *<st c="18845">分析使用情况和性能</st>* <st c="18878">的业务应用程序的遥测数据。</st> <st c="18908">这些信息帮助我们学习并改进当前的
    DevOps 流程。</st> <st c="18983">它能为我们提供洞察，帮助判断是否需要构建更好、更具吸引力的</st> <st c="19059">应用程序。</st>
- en: <st c="19081">Among other things, DevOps also focuses on the continuous delivery
    of features.</st> <st c="19162">In case we are utilizing feature flags, which
    allow granular control over the enablement of new functionalities to users, it
    is important to have a monitoring service in place to capture or gather usage
    information of the new features as well.</st> <st c="19406">This could be done
    by sending custom telemetry to Azure Application Insights.</st> <st c="19484">Azure
    Application Insights is an extension of Azure Monitor and was originally used
    to monitor applications through different environments.</st> <st c="19624">It
    allows us to understand performance and user flow, create our own queries over
    the logs that are stored in the log analytics, and more.</st> <st c="19763">By
    creating alerts, we can respond to exceptions or anomalies in the performance
    or usage.</st> <st c="19854">As we can see, by gathering the user telemetry, we
    can learn about how our application is being used and whether we are investing
    in building the right functionalities based on the</st> <st c="20035">users’ requests.</st>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19081">除了其他方面，DevOps 还关注特性功能的持续交付。</st> <st c="19162">如果我们使用特性标志，允许对新功能的启用进行精细控制，那么必须有一个监控服务来捕获或收集新功能的使用信息。</st>
    <st c="19406">这可以通过向 Azure 应用程序洞察发送自定义遥测数据来完成。</st> <st c="19484">Azure 应用程序洞察是
    Azure 监控的扩展，最初用于监控不同环境中的应用程序。</st> <st c="19624">它允许我们了解性能和用户流，创建针对存储在日志分析中的日志的自定义查询等等。</st>
    <st c="19763">通过创建警报，我们可以对性能或使用中的异常进行响应。</st> <st c="19854">正如我们所看到的，通过收集用户遥测数据，我们可以了解应用程序的使用情况，以及我们是否根据</st>
    <st c="20035">用户的需求投资构建正确的功能。</st>
- en: <st c="20051">However, it’s important to note that this phase is not exclusively
    focused on understanding the telemetry from users.</st> <st c="20170">During this
    phase, our project and development teams need to also reflect on the work that
    has been done and honestly answer what is working and what is not working in the
    whole ALM process.</st> <st c="20361">Such an approach will help them to learn
    and grow along the way and to course-correct in case of misdirection.</st> <st
    c="20472">Learnings will be brought back to the ALM and used for the next sprints.</st>
    <st c="20545">Continuous learning and continuous improvement demonstrate a commitment
    to improving the process and delivering valuable products to the users.</st> <st
    c="20689">With this in mind, allowing users to provide feedback back to the development
    team can unlock valuable information on how to make applications even more meaningful</st>
    <st c="20853">for users.</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20051">然而，需要注意的是，这一阶段并不仅仅关注理解来自用户的遥测数据。</st> <st c="20170">在此阶段，我们的项目和开发团队还需要反思已完成的工作，诚实地回答
    ALM 流程中哪些部分有效，哪些无效。</st> <st c="20361">这种方法将帮助他们在过程中不断学习和成长，并在方向错误时进行修正。</st>
    <st c="20472">所学的经验将反馈到 ALM 中，并用于下一个迭代周期。</st> <st c="20545">持续学习和持续改进展示了我们对优化流程和为用户交付有价值产品的承诺。</st>
    <st c="20689">考虑到这一点，让用户向开发团队提供反馈可以解锁有关如何使应用程序对用户更有意义的宝贵信息</st> <st c="20853">。</st>
- en: <st c="20863">From the</st> <st c="20873">tooling perspective, teams will utilize
    the analytics capabilities within Power Platform as well as Azure Application
    Insights.</st> <st c="21001">Teams will also use project planning tools, such
    as Azure Boards, to investigate the bottlenecks in the process and in the team’s
    performance.</st> <st c="21144">Through Power BI dashboards and reports, this
    can be represented visually</st> <st c="21218">and investigated.</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20863">从</st> <st c="20873">工具的角度来看，团队将利用 Power Platform 内的分析功能以及 Azure
    应用程序洞察。</st> <st c="21001">团队还将使用项目规划工具，如 Azure Boards，来调查流程和团队表现中的瓶颈。</st> <st
    c="21144">通过 Power BI 仪表板和报告，可以直观地展示</st> <st c="21218">并进行调查。</st>
- en: <st c="21235">We have already mentioned some tools that can be used to support
    our ALM and DevOps process flow.</st> <st c="21334">In the next section, we will
    take a closer look at the capabilities of the two tools that we will be using
    throughout the book for the</st> <st c="21469">hands-on part.</st>
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21235">我们已经提到了一些可以支持 ALM 和 DevOps 流程的工具。</st> <st c="21334">在下一部分，我们将更深入地了解本书中将使用的两个工具的功能</st>
    <st c="21469">以便进行动手操作。</st>
- en: <st c="21483">ALM and DevOps tooling</st>
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="21483">ALM 和 DevOps 工具</st>
- en: '<st c="21506">There are many different tools available on the market for managing
    ALM/DevOps.</st> <st c="21587">Some tools are designed to cover only the CI/CD
    process, while others are built to cover the entire DevOps process by including
    tools for project planning, building, managing test scenarios, and more.</st>
    <st c="21788">From the context of productivity and integrations, it is always
    good to have one tool that can be used throughout the process of managing an entire
    application life cycle.</st> <st c="21960">We will look into the two most important
    tools that Microsoft is offering to support ALM and DevOps: Azure DevOps and</st>
    <st c="22078">GitHub Enterprise.</st>'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21506">市场上有许多不同的工具可用于管理ALM/DevOps。</st> <st c="21587">有些工具仅设计用于覆盖CI/CD过程，而另一些则构建成涵盖整个DevOps过程，包括项目规划、构建、管理测试场景等工具。</st>
    <st c="21788">从生产力和集成的角度来看，拥有一个可以在整个应用程序生命周期管理过程中使用的工具总是一个不错的选择。</st> <st c="21960">我们将深入了解微软提供的两个最重要的支持ALM和DevOps的工具：Azure
    DevOps和</st> <st c="22078">GitHub Enterprise。</st>
- en: <st c="22096">Azure DevOps</st>
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="22096">Azure DevOps</st>
- en: <st c="22109">Azure DevOps</st> <st c="22122">has a long tradition with Microsoft-oriented
    developers.</st> <st c="22180">It all started with a product known as Microsoft</st>
    **<st c="22229">Team Foundation Server</st>** <st c="22251">(</st>**<st c="22253">TFS</st>**<st
    c="22256">), which</st> <st c="22266">was released in early 2006\.</st> <st c="22294">TFS
    was a collaboration tool for managing the configuration workflows of development
    projects.</st> <st c="22389">As the name suggests, it was a server product that
    a customer had to deploy to their on-premise environment.</st> <st c="22498">As
    the world evolved and new possibilities opened around cloud computing, Microsoft
    looked for ways to enable TFS as a SaaS product.</st> <st c="22631">This is when,
    in 2011, TFS was offered as a SaaS solution on the Windows Azure platform.</st>
    <st c="22720">It was named TFS.</st> <st c="22738">Later, it was</st> <st c="22752">renamed
    to</st> **<st c="22763">Visual Studio Team Services</st>** <st c="22790">(</st>**<st
    c="22792">VSTS</st>**<st c="22796">).</st> <st c="22800">In 2018, Microsoft rebranded
    VSTS to Azure DevOps Service, which also led to renaming TFS to Azure DevOps Server.</st>
    <st c="22914">Azure DevOps Server 2019 was the first rebranded version of the</st>
    <st c="22978">on-premise version.</st>
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="22109">Azure DevOps</st> <st c="22122">有着与微软开发者密切相关的悠久传统。</st> <st c="22180">这一切始于一款名为微软</st>
    **<st c="22229">Team Foundation Server</st>** <st c="22251">(</st>**<st c="22253">TFS</st>**<st
    c="22256">)的产品</st>，<st c="22266">该产品于2006年初发布。</st> <st c="22294">TFS是一个用于管理开发项目配置工作流的协作工具。</st>
    <st c="22389">顾名思义，它是一个客户必须部署到其本地环境中的服务器产品。</st> <st c="22498">随着世界的发展以及云计算的兴起，微软开始寻找将TFS转变为SaaS产品的途径。</st>
    <st c="22631">2011年，TFS作为SaaS解决方案在Windows Azure平台上推出。</st> <st c="22720">它被命名为TFS。</st>
    <st c="22738">后来，它被</st> <st c="22752">更名为</st> **<st c="22763">Visual Studio
    Team Services</st>** <st c="22790">(</st>**<st c="22792">VSTS</st>**<st c="22796">)。</st>
    <st c="22800">2018年，微软将VSTS重新命名为Azure DevOps服务，同时也将TFS更名为Azure DevOps Server。</st>
    <st c="22914">Azure DevOps Server 2019是首个重新命名后的本地版本。</st> '
- en: <st c="22997">As some organizations have either not yet adopted a cloud strategy
    or are operating in a regulated industry, Azure DevOps is still offered in two
    versions so that customers can decide on the variation of a product that fits
    them best – Azure DevOps Service or Azure DevOps Server.</st> <st c="23279">It
    can happen that the customer has a complex environment where a hybrid configuration
    would be required.</st> <st c="23385">In this case,</st> **<st c="23399">build
    agents</st>** <st c="23411">for CI/CD pipelines can be located on the</st> <st
    c="23454">on-premise servers, while still using other functionalities of the Azure
    DevOps service online.</st> <st c="23550">This is possible and a very common scenario.</st>
    <st c="23595">It solves a specific customer requirement, which is often tied to
    regulations, but can also be used for other</st> <st c="23705">technical reasons.</st>
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22997">由于一些组织尚未采用云战略，或者在受监管的行业中运营，Azure DevOps仍然提供两种版本，以便客户可以根据自己的需求选择最适合的产品版本——Azure
    DevOps服务或Azure DevOps Server。</st> <st c="23279">有时，客户可能会遇到需要混合配置的复杂环境。</st> <st
    c="23385">在这种情况下，</st> **<st c="23399">构建代理</st>** <st c="23411">可以位于本地服务器上，用于CI/CD管道，同时仍然使用Azure
    DevOps服务在线的其他功能。</st> <st c="23550">这是可能的，而且是一个非常常见的场景。</st> <st c="23595">它解决了特定客户的需求，这些需求通常与法规有关，但也可以用于其他</st>
    <st c="23705">技术原因。</st>
- en: <st c="23723">Azure DevOps consists</st> <st c="23745">of five services that
    support the</st> <st c="23780">ALM/DevOps process:</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23723">Azure DevOps 包含</st> <st c="23745">五个服务，支持</st> <st c="23780">ALM/DevOps
    流程：</st>
- en: '**<st c="23799">Azure Boards</st>**<st c="23812">: Intended</st> <st c="23823">for
    project planning and work tracking, providing Kanban boards, backlogs, and</st>
    <st c="23903">team dashboards.</st>'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="23799">Azure Boards</st>**<st c="23812">：用于项目规划和工作跟踪，提供看板、待办事项和</st>
    <st c="23903">团队仪表板。</st>'
- en: '**<st c="23919">Azure Repos</st>**<st c="23931">: Dedicated</st> <st c="23943">to
    offering private</st> **<st c="23964">Git</st>** <st c="23967">(and older</st>
    **<st c="23979">Team Foundation Version Control</st>** <st c="24010">(</st>**<st
    c="24012">TFVC</st>**<st c="24016">)) repositories.</st> <st c="24034">Allowing
    branching and</st> <st c="24057">pull</st> <st c="24062">request mechanisms.</st>'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="23919">Azure Repos</st>**<st c="23931">：专注于提供私有</st> **<st c="23964">Git</st>**
    <st c="23967">(以及较早的</st> **<st c="23979">Team Foundation 版本控制</st>** <st c="24010">(</st>**<st
    c="24012">TFVC</st>**<st c="24016">)) 仓库。</st> <st c="24034">支持分支和</st> <st c="24057">拉取请求机制。</st>'
- en: '**<st c="24081">Azure Pipelines</st>**<st c="24097">: Focused</st> <st c="24108">on
    building CI/CD pipelines for any project in any language to be deployed to any
    platform.</st> <st c="24200">Consists of build agents, a component that performs
    actions that are defined in Azure Pipelines.</st> <st c="24297">Agents can be
    Microsoft-hosted, when using Azure DevOps Service, or self-hosted, when having
    an on-premise configuration with Azure DevOps Server.</st> <st c="24444">A combination
    of both, as a hybrid set-up, is</st> <st c="24490">also possible.</st>'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="24081">Azure Pipelines</st>**<st c="24097">：专注于为任何项目构建 CI/CD 管道，支持任何语言，并可部署到任何平台。</st>
    <st c="24200">由构建代理组成，构建代理是执行在 Azure Pipelines 中定义的操作的组件。</st> <st c="24297">代理可以是微软托管的，当使用
    Azure DevOps 服务时，或是自托管的，当在本地配置 Azure DevOps Server 时。</st> <st c="24444">两者的组合，也可以作为混合设置。</st>'
- en: '**<st c="24504">Azure Test Plans</st>**<st c="24521">: Designed</st> <st c="24532">for
    building test scenarios to enable manual and</st> <st c="24582">exploratory testing.</st>'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="24504">Azure Test Plans</st>**<st c="24521">：旨在构建测试场景，以支持手动和</st>
    <st c="24582">探索性测试。</st>'
- en: '**<st c="24602">Azure Artifacts</st>**<st c="24618">: Intended</st> <st c="24629">as
    a package management feature that allows users to create and share NuGet, Maven,
    npm, Python, and Universal Package feeds from public and</st> <st c="24771">private
    sources.</st>'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="24602">Azure Artifacts</st>**<st c="24618">：作为一个包管理功能，允许用户从公共和</st>
    <st c="24771">私有源创建和分享 NuGet、Maven、npm、Python 和通用包源。</st>'
- en: <st c="24787">Azure DevOps is very extensible.</st> <st c="24821">With extensions,
    administrators can enhance Azure DevOps capabilities.</st> <st c="24892">Extensions
    can be found and installed through Visual Studio Marketplace (</st>[<st c="24965">https://marketplace.visualstudio.com/azuredevops</st>](https://marketplace.visualstudio.com/azuredevops)<st
    c="25014">), which holds extensions for Azure DevOps Service and Azure DevOps
    Server.</st> <st c="25091">Microsoft Power Platform Build Tools is an example
    of such extensions, which we will be using to support the</st> <st c="25200">ALM
    process.</st>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24787">Azure DevOps 非常可扩展。</st> <st c="24821">通过扩展，管理员可以增强 Azure DevOps
    的功能。</st> <st c="24892">扩展可以通过 Visual Studio Marketplace（</st>[<st c="24965">https://marketplace.visualstudio.com/azuredevops</st>](https://marketplace.visualstudio.com/azuredevops)<st
    c="25014">）找到并安装，那里有 Azure DevOps 服务和 Azure DevOps Server 的扩展。</st> <st c="25091">Microsoft
    Power Platform 构建工具是这些扩展的一个例子，我们将使用它来支持</st> <st c="25200">ALM 流程。</st>
- en: <st c="25212">Azure DevOps also supports REST API integration for automating
    tasks and building integrations with other systems and applications.</st> <st
    c="25345">IT administrators or DevOps engineers can also utilize Azure DevOps
    connector in Power Platform that will allow them to perform actions on their projects
    in Azure DevOps, such as creating new releases, creating new work items, or just
    checking the</st> <st c="25593">project status.</st>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25212">Azure DevOps 还支持 REST API 集成，用于自动化任务和与其他系统及应用程序的集成。</st> <st c="25345">IT
    管理员或 DevOps 工程师还可以利用 Power Platform 中的 Azure DevOps 连接器，这使他们能够对 Azure DevOps 中的项目执行操作，如创建新版本、创建新工作项或仅查看</st>
    <st c="25593">项目状态。</st>
- en: <st c="25608">GitHub Enterprise</st>
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="25608">GitHub Enterprise</st>
- en: <st c="25626">GitHub</st> <st c="25634">was founded in 2007 with the GitHub
    service launched in February 2008\.</st> <st c="25705">In June 2018, Microsoft
    announced its acquisition of GitHub.</st> <st c="25766">This acquisition also
    emphasizes Microsoft commitment to the open</st> <st c="25832">source community.</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="25626">GitHub</st> <st c="25634">成立于2007年，GitHub 服务于2008年2月推出。</st>
    <st c="25705">2018年6月，微软宣布收购 GitHub。</st> <st c="25766">这次收购也强调了微软对开源社区的承诺。</st> '
- en: '<st c="25849">GitHub offers different pricing plans that unlock product capabilities
    depending on the plan.</st> <st c="25944">GitHub plans are designed to fit individuals,
    smaller teams, or even bigger organizations: there is GitHub Free for individuals
    or organizations, GitHub Pro for personal accounts, and GitHub Team or GitHub
    Enterprise for</st> <st c="26165">larger companies.</st>'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25849">GitHub 提供不同的定价计划，根据计划解锁不同的产品功能。</st> <st c="25944">GitHub 的计划旨在适应个人、小型团队，甚至更大的组织：个人或组织可以使用
    GitHub Free，个人帐户可以使用 GitHub Pro，而大型公司则可以选择 GitHub Team 或 GitHub Enterprise。</st>
- en: <st c="26182">GitHub Enterprise is the most feature-rich option that is suitable
    for large-scale development projects.</st> <st c="26288">From a capabilities standpoint,
    it is similar to Azure DevOps, but there are some differences.</st> <st c="26383">Just
    like Azure DevOps, GitHub Enterprise also comes in two variations, either</st>
    <st c="26462">as a cloud service, which is called GitHub Enterprise Cloud, or
    as an on-premise instance called GitHub Enterprise Server.</st> <st c="26585">This
    gives customers flexibility to choose how to deploy and use</st> <st c="26650">the
    tool.</st>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="26182">GitHub Enterprise 是功能最丰富的选项，适用于大规模开发项目。</st> <st c="26288">从功能角度来看，它与
    Azure DevOps 类似，但也有一些区别。</st> <st c="26383">与 Azure DevOps 一样，GitHub Enterprise
    也有两种变体，分别是</st> <st c="26462">作为云服务的 GitHub Enterprise Cloud，或者作为本地实例的 GitHub
    Enterprise Server。</st> <st c="26585">这为客户提供了灵活性，选择如何部署和使用该工具。</st> '
- en: <st c="26659">Similarly to Azure DevOps, GitHub products are designed to cover
    all phases of the DevOps life cycle, with features such as</st> <st c="26784">the
    following:</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="26659">与 Azure DevOps 类似，GitHub 产品旨在覆盖 DevOps 生命周期的所有阶段，具有以下功能：</st> '
- en: '**<st c="26798">GitHub Issues and GitHub Projects</st>**<st c="26832">: Intended</st>
    <st c="26843">for planning and tracking work</st> <st c="26874">across projects.</st>'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="26798">GitHub Issues 和 GitHub Projects</st>**<st c="26832">：用于计划和跟踪项目中的工作。</st> '
- en: '**<st c="26891">GitHub Repository</st>**<st c="26909">: Dedicated</st> <st
    c="26922">to offering a private or public Git repositories, to store and collaborate
    across source code and files in a project.</st> <st c="27040">Allows branching
    and pull</st> <st c="27066">request mechanism.</st>'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="26891">GitHub 仓库</st>**<st c="26909">：专门用于提供私有或公共 Git 仓库，用于存储和协作项目中的源代码和文件。</st>
    <st c="27040">支持分支和拉取请求机制。</st> '
- en: '**<st c="27084">GitHub Actions</st>**<st c="27099">: Focused</st> <st c="27110">on
    providing a platform to support CI/CD for automated builds, tests, and deployment
    pipelines.</st> <st c="27206">GitHub Actions allow DevOps engineers to extend
    beyond CI/CD pipelines and automate other tasks around the project based on the
    activity in the repository.</st> <st c="27362">GitHub Runners are the most crucial
    component in running CI/CD pipelines.</st> <st c="27436">They perform activities
    that are defined in the GitHub Actions.</st> <st c="27500">Compared with Azure
    DevOps, they are similar to build agents.</st> <st c="27562">GitHub also provides
    GitHub-hosted runners, or self-hosted runners that can be deployed in an</st>
    <st c="27656">on-premise environment.</st>'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="27084">GitHub Actions</st>**<st c="27099">：专注于提供支持 CI/CD 的平台，用于自动化构建、测试和部署流水线。</st>
    <st c="27206">GitHub Actions 允许 DevOps 工程师扩展 CI/CD 流水线以外的任务，并根据仓库中的活动自动化项目中的其他任务。</st>
    <st c="27362">GitHub Runners 是运行 CI/CD 流水线的关键组件。</st> <st c="27436">它们执行 GitHub
    Actions 中定义的活动。</st> <st c="27500">与 Azure DevOps 相比，它们类似于构建代理。</st> <st c="27562">GitHub
    还提供 GitHub 托管的运行器，或者可以在本地环境中部署的自托管运行器。</st> '
- en: '`<st c="27823">npm</st>`<st c="27826">, NuGet, Maven,</st> <st c="27842">and
    more.</st>'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="27823">npm</st>`<st c="27826">、NuGet、Maven</st>，<st c="27842">等等。</st> '
- en: <st c="27851">GitHub has a set of tools in its portfolio of products that are
    intended to enhance developer experience, improve collaboration during DevOps,
    and implement DevSecOps.</st> <st c="28020">These products are gaining in popularity
    and are</st> <st c="28069">worth mentioning:</st>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27851">GitHub在其产品组合中拥有一套旨在增强开发者体验、改善DevOps过程中的协作，并实施DevSecOps的工具。</st>
    <st c="28020">这些产品越来越受欢迎，值得一提的是：</st> <st c="28069">这些工具包括：</st>
- en: '**<st c="28086">GitHub Codespaces</st>**<st c="28104">: Allows</st> <st c="28114">developers
    to quickly provision a secure cloud development environment , configured for a
    selected project.</st> <st c="28222">This means that it includes the necessary
    development tool, such as Visual Studio Code and all necessary extensions, for
    the developer to start working on the</st> <st c="28381">project faster.</st>'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28086">GitHub Codespaces</st>**<st c="28104">：允许</st> <st c="28114">开发人员快速提供一个安全的云开发环境，为选定项目配置。</st>
    <st c="28222">这意味着它包含必要的开发工具，如Visual Studio Code和所有必需的扩展，帮助开发人员更快地开始项目开发。</st>'
- en: '**<st c="28396">GitHub Copilot</st>**<st c="28411">: This is</st> <st c="28421">an
    AI coding assistant that helps developers with writing code by providing AI-based
    suggestions on code completion in real time.</st> <st c="28552">More about Microsoft
    Copilots will be covered in the final chapter of</st> <st c="28622">this book.</st>'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28396">GitHub Copilot</st>**<st c="28411">：这是</st> <st c="28421">一个AI编码助手，通过提供基于AI的实时代码补全建议，帮助开发人员编写代码。</st>
    <st c="28552">有关Microsoft Copilot的更多信息将在本书的最后一章中介绍。</st>'
- en: '**<st c="28632">GitHub Advanced Security</st>**<st c="28657">: Provides</st>
    <st c="28669">additional tools to further protect the security of the project.</st>
    <st c="28734">With features such as code scanning, secret scanning, and dependency
    review, GitHub Advanced Security enables organizations to shift-left security
    checks earlier in the development cycle.</st> <st c="28922">Code scanning allows
    us to find potential security vulnerabilities and coding errors in the source
    code.</st> <st c="29027">Secret scanning searches through our source code to find
    any secrets, such as keys and tokens, that our developers and IT engineers might
    have unintentionally committed into the source code.</st> <st c="29218">Lastly,
    dependency review allows us to see which dependencies are used in the project
    and whether any vulnerabilities have been identified for the version used in the
    project.</st> <st c="29394">GitHub Advanced Security can also be used with</st>
    <st c="29441">Azure DevOps.</st>'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="28632">GitHub高级安全</st>**<st c="28657">：提供</st> <st c="28669">额外的工具，进一步保护项目的安全。</st>
    <st c="28734">通过代码扫描、密钥扫描和依赖项审查等功能，GitHub高级安全使组织能够在开发周期中提前进行安全检查。</st> <st c="28922">代码扫描让我们可以发现源代码中潜在的安全漏洞和编码错误。</st>
    <st c="29027">密钥扫描会扫描我们的源代码，寻找任何可能被开发人员和IT工程师无意中提交到代码中的密钥和令牌等机密信息。</st> <st c="29218">最后，依赖项审查使我们能够查看项目中使用了哪些依赖项，并检查项目所用版本是否存在已知漏洞。</st>
    <st c="29394">GitHub高级安全还可以与</st> <st c="29441">Azure DevOps一起使用。</st>'
- en: <st c="29454">As we have now</st> <st c="29470">looked into the DevOps life
    cycle phases and which tools are available for supporting DevOps life cycle, we
    are ready to delve into the specific modernization options.</st> <st c="29638">We
    will consider which modernization strategies are available when deciding on moving
    applications away from the existing technological stack toward a</st> <st c="29789">LCNC
    platform.</st>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29454">现在我们已经</st> <st c="29470">了解了DevOps生命周期阶段和支持DevOps生命周期的工具，我们准备深入探讨具体的现代化选项。</st>
    <st c="29638">在决定将应用程序从现有技术栈迁移到</st> <st c="29789">LCNC平台时，我们将考虑可用的现代化策略。</st>
- en: <st c="29803">Application modernization with an LCNC approach</st>
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="29803">LCNC方法的应用程序现代化</st>
- en: <st c="29851">In this</st> <st c="29859">section we will focus on application
    modernization with Power Platform.</st> <st c="29932">We will cover the different
    application modernization strategy options and how the LCNC development approach
    could be used as one of the options for</st> <st c="30081">modernizing applications.</st>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29851">在这一</st> <st c="29859">部分，我们将重点讨论通过Power Platform进行的应用程序现代化。</st>
    <st c="29932">我们将讨论不同的应用程序现代化策略选项，以及LCNC开发方法如何作为现代化应用程序的选项之一。</st>
- en: <st c="30106">Organizations</st> <st c="30121">are now, more than ever, faced
    with a challenge where they need to innovate at a rapid pace in order to build
    their competitive advantage on the market.</st> <st c="30274">Having a stack of
    legacy applications that are built on an outdated technology stack complicates
    the possibility of integration with modern systems.</st> <st c="30423">Many times,
    such applications present potential security threats as well due to the outdated
    technology and difficulty of</st> <st c="30545">maintaining them.</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30106">组织</st> <st c="30121">现在，比以往任何时候都面临一个挑战，他们需要以快速的速度创新，以在市场上建立竞争优势。</st>
    <st c="30274">拥有一堆构建在过时技术栈上的遗留应用程序，使其与现代系统集成的可能性变得更加复杂。</st> <st c="30423">这类应用程序往往因为技术过时和难以</st>
    <st c="30545">维护而存在潜在的安全威胁。</st>
- en: <st c="30562">Outdated technology creates challenges with staffing as well,
    as it may be difficult to find developers who would be willing to continue developing
    in an older programming language and framework using older development tools.</st>
    <st c="30789">On the other hand, maintaining the existing legacy applications
    would potentially lead to a significant increase in technical debt</st> <st c="30920">over
    time.</st>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30562">过时的技术也会在人员配备方面带来挑战，因为可能很难找到愿意继续使用旧编程语言和框架以及老旧开发工具进行开发的开发人员。</st>
    <st c="30789">另一方面，维护现有的遗留应用程序可能会导致技术债务</st> <st c="30920">显著增加。</st>
- en: <st c="30930">Therefore, organizations are considering the possibilities of
    modernizing legacy applications.</st> <st c="31026">The LCNC development approach
    with Power Platform allows organizations to accelerate the delivery of new applications,
    reduce development costs, and expand the resource pool by allowing citizen developers
    to contribute to the process and minimize the need for extensive</st> <st c="31296">custom
    coding.</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="30930">因此，组织正在考虑现代化遗留应用程序的可能性。</st> <st c="31026">Power 平台的 LCNC 开发方法允许组织加速交付新应用程序，减少开发成本，并通过允许公民开发人员参与流程来扩展资源池，并最小化对大量</st>
    <st c="31296">定制编码的需求。</st>
- en: <st c="31310">Legacy apps often do not have APIs that we can connect to.</st>
    <st c="31370">Power Platform, through Power Automate, allows organizations to
    implement</st> **<st c="31444">Robotic Process Automation</st>** <st c="31470">(</st>**<st
    c="31472">RPA</st>**<st c="31475">) processes that</st> <st c="31492">simulate
    user interaction with legacy applications.</st> <st c="31545">It allows them to
    insert such processes into the new modern business processes and</st> <st c="31628">cloud
    flows.</st>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31310">遗留应用通常没有我们可以连接的API。</st> <st c="31370">通过 Power Automate，Power
    平台允许组织实施</st> **<st c="31444">机器人流程自动化</st>** <st c="31470">(</st>**<st c="31472">RPA</st>**<st
    c="31475">) 进程，这些进程</st> <st c="31492">模拟用户与遗留应用程序的交互。</st> <st c="31545">它允许他们将这些流程插入到新的现代业务流程和</st>
    <st c="31628">云流中。</st>
- en: <st c="31640">When existing applications expose APIs, we can focus on building
    a new frontend for our application and using custom connectors to connect to backend
    APIs.</st> <st c="31797">These are used to perform certain operations, such as
    database operations or functional logic.</st> <st c="31892">Both approaches allow
    us to modernize legacy applications iteratively in smaller batches, enabling functionalities
    as we proceed with the modernization.</st> <st c="32045">Such an approach of</st>
    **<st c="32065">incrementally modernizing applications</st>** <st c="32103">is
    also beneficial for modernizing applications that organizations rely on heavily
    without disrupting</st> <st c="32206">business operations.</st>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="31640">当现有应用程序公开API时，我们可以专注于为应用程序构建新的前端，并使用自定义连接器连接到后端API。</st> <st c="31797">这些用于执行特定操作，如数据库操作或功能逻辑。</st>
    <st c="31892">这两种方法都允许我们以较小批次的迭代方式逐步现代化遗留应用程序，在进行现代化过程中启用功能。</st> <st c="32045">这种</st>
    **<st c="32065">逐步现代化应用程序的方法</st>** <st c="32103">也有助于在不干扰</st> <st c="32206">业务运营的情况下现代化组织高度依赖的应用程序。</st>
- en: <st c="32226">Power Platform can be integrated with Microsoft Azure.</st> <st
    c="32282">This allows organizations that have already adopted Microsoft Azure
    cloud services to build new or extend existing applications with an LCNC development
    approach and simplify the adoption of Power Platform services.</st> <st c="32498">Since
    Power Platform allows integrations with many services through connectors, it is
    also suitable for modernizing existing applications.</st> [*<st c="32637">Chapter
    9</st>*](B22208_09.xhtml#_idTextAnchor149) <st c="32646">will talk about the</st>
    <st c="32667">integration scenarios between Power Platform and Microsoft Azure,
    which will hopefully enable new ideas for</st> <st c="32775">app modernization.</st>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32226">Power Platform 可以与 Microsoft Azure 集成。</st> <st c="32282">这使得已经采用
    Microsoft Azure 云服务的组织能够以 LCNC 开发方式构建新应用或扩展现有应用，并简化 Power Platform 服务的采用。</st>
    <st c="32498">由于 Power Platform 通过连接器支持与许多服务的集成，因此它也适用于现有应用的现代化。</st> [*<st c="32637">第
    9 章</st>*](B22208_09.xhtml#_idTextAnchor149) <st c="32646">将讨论</st> <st c="32667">Power
    Platform 与 Microsoft Azure 之间的集成场景，希望能够为</st> <st c="32775">应用现代化提供新思路。</st>
- en: <st c="32793">Organizations that have adopted the fusion development approach
    will benefit greatly from such an approach when modernizing applications, as this
    approach allows pro-developers, app makers, and IT ops teams to focus on their
    part in the process of modernizing applications.</st> <st c="33068">We will also
    talk more about the fusion development approach in</st> [*<st c="33132">Chapter
    9</st>*](B22208_09.xhtml#_idTextAnchor149) <st c="33141">of</st> <st c="33145">the
    book.</st>
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="32793">已经采用融合开发方法的组织在进行应用现代化时将受益匪浅，因为这种方法允许专业开发人员、应用创建者和 IT 运维团队专注于他们在应用现代化过程中各自的角色。</st>
    <st c="33068">我们将在</st> [*<st c="33132">第 9 章</st>*](B22208_09.xhtml#_idTextAnchor149)
    <st c="33141">中进一步讨论</st> <st c="33145">该方法。</st>
- en: <st c="33154">Application modernization options</st>
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="33154">应用现代化选项</st>
- en: <st c="33188">When deciding</st> <st c="33203">on a strategy for modernizing
    legacy applications, we should consider our options for application modernization
    in order to make an informed decision about the strategy.</st> <st c="33373">Organizations
    shouldn’t just take the legacy application and rewrite it using a more modern
    framework and language.</st> <st c="33489">Instead, they should also review and
    update the processes and used databases.</st> <st c="33567">Legacy applications
    were developed with the technology that was then available and also around the
    process that was suitable</st> *<st c="33692">at that time</st>*<st c="33704">.
    The same project could be delivered completely differently now than it was when
    the legacy application was developed.</st> <st c="33824">The technology that exists
    now might not have existed back then and the process that we can deliver today
    might be completely different from the one back then.</st> <st c="33984">As we
    are now also in the time of greater AI adoption, we should look into ways of optimizing
    processes and innovating with AI.</st> <st c="34112">Something that was previously
    done manually can potentially now be done completely automatically with the help
    of AI.</st> <st c="34230">This is why, when tackling the area of application modernization,
    we should look at modernization from the perspective of process optimization and
    modernization—both application</st> <st c="34408">and database.</st>
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="33188">在决定</st> <st c="33203">现代化遗留应用的战略时，我们应该考虑应用现代化的不同选项，以便做出有根据的决策。</st>
    <st c="33373">组织不应仅仅将遗留应用重写为使用更现代的框架和语言。</st> <st c="33489">相反，他们还应该审查和更新使用的流程和数据库。</st>
    <st c="33567">遗留应用是基于当时可用的技术开发的，同时也围绕适合当时的流程进行。</st> *<st c="33692">那个时候</st>*<st
    c="33704">，同一个项目现在可能会与当时遗留应用开发时的方式完全不同。</st> <st c="33824">现有的技术可能在当时并不存在，而我们今天能够交付的流程也可能与当时的完全不同。</st>
    <st c="33984">现在我们正处于更广泛采用 AI 的时代，因此我们应该探索通过 AI 优化流程和创新的方式。</st> <st c="34112">曾经手动完成的工作，现在有可能通过
    AI 的帮助完全实现自动化。</st> <st c="34230">因此，在处理应用现代化时，我们应该从流程优化和现代化的角度看待现代化——包括应用</st>
    <st c="34408">和数据库。</st>
- en: <st c="34421">Process modernization</st>
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="34421">流程现代化</st>
- en: <st c="34443">We should first</st> <st c="34459">start with</st> **<st c="34471">process
    modernization</st>** <st c="34492">in order to benefit more from the actual application</st>
    <st c="34545">modernization and database modernization process.</st> <st c="34596">Process
    modernization includes assessing existing processes in order to understand where
    we can improve.</st> <st c="34701">We can then continue with optimizing and redesigning
    existing business processes and aligning them to modern times using the capabilities
    of modern technology.</st> <st c="34861">The outcome of this process is a modernized
    and optimized process where bottlenecks were identified during the analysis process
    and either to some degree or completely eliminated with the help of automation.</st>
    <st c="35069">This allows us to gain operational efficiencies that lower the total
    cost of ownership of</st> <st c="35159">modernized workloads.</st>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="34443">我们应该首先</st> <st c="34459">从</st> **<st c="34471">流程现代化</st>**
    <st c="34492">开始，以便能更多地从实际应用中受益</st> <st c="34545">现代化和数据库现代化的过程。</st> <st c="34596">流程现代化包括评估现有流程，以便了解我们可以在哪些方面进行改进。</st>
    <st c="34701">然后我们可以继续优化和重新设计现有的业务流程，并利用现代技术的能力使其与现代时代相适应。</st> <st c="34861">这个过程的结果是现代化和优化后的流程，在分析过程中识别出了瓶颈，并通过自动化在一定程度上或完全消除了这些瓶颈。</st>
    <st c="35069">这使我们能够获得操作效率，从而降低现代化工作负载的总拥有成本。</st> <st c="35159">现代化的工作负载。</st>
- en: <st c="35180">Power Platform</st> <st c="35196">has a product known as</st>
    **<st c="35219">Power Automate Process Mining</st>**<st c="35248">. Power Automate
    Process Mining</st> <st c="35280">is a product that can help us discover, monitor,
    and improve processes.</st> <st c="35352">In May 2024, Microsoft’s Process Mining
    solution was recognized as a Leader in the 2024 Gartner® Magic Quadrant™ for Process</st>
    <st c="35477">Mining Platforms.</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="35180">Power Platform</st> <st c="35196">有一个名为</st> **<st c="35219">Power
    Automate 流程挖掘</st>**<st c="35248">的产品。</st> <st c="35280">Power Automate 流程挖掘是一个可以帮助我们发现、监控和改进流程的产品。</st>
    <st c="35352">在 2024 年 5 月，微软的流程挖掘解决方案被评为 2024 年 Gartner® 魔力象限™ 流程挖掘平台的领导者。</st>
    <st c="35477">流程挖掘平台。</st>
- en: <st c="35494">We should not forget to mention that a crucial part of process
    modernization is also the organizational culture and people, not only technology.</st>
    <st c="35640">Modernization is not only about technology; it is a mindset shift
    and it involves everyone in the organization being part of this change, from leadership
    to frontline workers.</st> <st c="35816">We will take a look at how the Power
    Platform adoption maturity model can help us with this in the</st> <st c="35915">next
    part.</st>
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="35494">我们不应忘记提到，流程现代化的一个关键部分是组织文化和人员，而不仅仅是技术。</st> <st c="35640">现代化不仅仅是关于技术，它是一种思维方式的转变，涉及到组织中每个人都参与到这一变化中，从领导层到一线员工。</st>
    <st c="35816">接下来我们将探讨 Power Platform 采纳成熟度模型如何帮助我们实现这一目标。</st> <st c="35915">下一部分将详细讲解。</st>
- en: <st c="35925">Application modernization</st>
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="35925">应用现代化</st>
- en: <st c="35951">Application modernization is a</st> <st c="35983">process of updating
    the software application to align with the advancements in technology, matching
    current business needs, and improving the user experience.</st> <st c="36142">Nowadays,
    in many cases, application modernization is tied to the migration to the cloud,
    but it is not just that.</st> <st c="36257">Similar to the process modernization,
    it requires a holistic look at the application state, to improve user experience,
    make the application more secure, more reliable, compatible with the newer technology
    stack, and more.</st> <st c="36480">One of the benefits of the application modernization
    is the ability to accelerate innovation.</st> <st c="36574">Power Platform allows
    us to do that.</st> <st c="36611">Using a platform that allows quick prototyping
    as well as actual development of applications means that organizations will have
    more time to innovate.</st> <st c="36762">Adding DevOps or DevSecOps into the
    whole process, we can also improve time to market, while still keeping our</st>
    <st c="36873">applications secure.</st>
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="35951">应用程序现代化是一个</st> <st c="35983">将软件应用程序更新以与技术进步对齐，满足当前业务需求，并改善用户体验的过程。</st>
    <st c="36142">如今，在许多情况下，应用程序现代化与迁移到云端密切相关，但不仅仅是这样。</st> <st c="36257">类似于流程现代化，它需要全面审视应用程序的状态，以改善用户体验，使应用程序更安全、更可靠、兼容更新的技术栈等。</st>
    <st c="36480">应用程序现代化的一个好处是能够加速创新。</st> <st c="36574">Power Platform使我们能够做到这一点。</st>
    <st c="36611">使用一个可以快速原型设计以及实际开发应用程序的平台意味着组织将有更多时间进行创新。</st> <st c="36762">通过将DevOps或DevSecOps整合到整个过程中，我们还可以提高市场响应速度，同时保持我们的</st>
    <st c="36873">应用程序安全。</st>
- en: <st c="36893">Before jumping into modernizing applications, organizations should
    first run through the process of</st> **<st c="36994">application rationalization</st>**<st
    c="37021">. This</st> <st c="37027">will help them understand what kind of applications
    they have in their portfolio and what to do with them.</st> <st c="37135">After
    identifying all the applications across the organization, we should perform an
    assessment of these applications.</st> <st c="37254">This will help us not only
    build an inventory of applications but also gain insights into each application.</st>
    <st c="37362">Such assessments can be done manually or automatically with the
    help of specific tools.</st> <st c="37450">Here, we will look at the architecture
    of the applications, application dependencies, infrastructure architecture, user
    analytics, and usage patterns, including how often the application is used and
    more importantly, when the last time was that application was used.</st> <st c="37717">Many
    times, customers try to modernize or migrate all</st> <st c="37771">applications
    when there might not be a need to do so since the application has not been used
    for many years.</st> <st c="37880">In such a case, retaining the data for audit
    purposes could be enough while retiring</st> <st c="37965">the application.</st>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="36893">在开始现代化应用程序之前，组织应该首先进行</st> **<st c="36994">应用程序合理化</st>**<st c="37021">。这</st>
    <st c="37027">将帮助他们了解他们的应用程序组合中有哪些应用，以及应该如何处理它们。</st> <st c="37135">在识别了整个组织的所有应用程序之后，我们应该对这些应用程序进行评估。</st>
    <st c="37254">这不仅将帮助我们建立一个应用程序清单，还能深入了解每个应用程序的情况。</st> <st c="37362">这种评估可以通过手动或使用特定工具自动进行。</st>
    <st c="37450">在这里，我们将查看应用程序的架构、应用程序依赖关系、基础设施架构、用户分析和使用模式，包括应用程序的使用频率，更重要的是，应用程序上次使用的时间。</st>
    <st c="37717">许多时候，客户尝试现代化或迁移所有</st> <st c="37771">应用程序，但实际上可能没有必要这样做，因为某些应用程序已经多年未使用。</st>
    <st c="37880">在这种情况下，为审计目的保留数据可能就足够了，同时可以停用</st> <st c="37965">这些应用程序。</st>
- en: <st c="37981">Once applications are assessed and inventory of apps is built,
    we should be deciding on the application</st> <st c="38086">modernization strategy.</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="37981">一旦应用程序评估完成并且应用程序清单建立，我们应该决定应用程序的</st> **<st c="38086">现代化策略</st>**。
- en: <st c="38109">In 2011, Gartner introduced</st> <st c="38137">the</st> **<st
    c="38142">five Rs migration strategy</st>** <st c="38168">that helps us segment
    our applications to the migration strategy.</st> <st c="38235">Today, we can see
    that more migration strategy options have appeared on the market, going beyond
    the five-R model.</st> <st c="38350">However, they more or less build on the original
    five Rs migration strategy, which is shown</st> <st c="38442">as follo</st><st
    c="38450">ws:</st>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38109">在2011年，Gartner提出了</st> <st c="38137">五个R迁移战略</st> **<st c="38142">five
    Rs migration strategy</st>** <st c="38168">，帮助我们将应用程序划分为迁移战略。</st> <st c="38235">今天，我们可以看到市场上出现了更多的迁移战略选项，超越了五个R模型。</st>
    <st c="38350">然而，它们或多或少建立在原始的五个R迁移战略基础上，具体如下：</st> <st c="38442">如图所示：</st><st
    c="38450">如下：</st>
- en: "![Figure 3.2 – \uFEFFApp modernization strategy](img/B22208_03_2.jpg)"
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – 应用现代化战略](img/B22208_03_2.jpg)'
- en: <st c="38972">Figure 3.2 – App modernization strategy</st>
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="38972">图 3.2 – 应用现代化战略</st>
- en: <st c="39011">We can see that we</st> <st c="39030">can segment each application
    into three</st> <st c="39071">main buckets.</st>
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="39011">我们可以看到，我们</st> <st c="39030">可以将每个应用程序分为三个</st> <st c="39071">主要部分。</st>
- en: <st c="39084">First is somehow putting an end to the existing application by
    either retiring it completely or replacing it with an off-the-shelf solution that
    is potentially built on top of Power Apps or</st> <st c="39275">Dynamics 365.</st>
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="39084">首先是通过完全停用现有应用程序，或用基于Power Apps或</st> <st c="39275">Dynamics 365的现成解决方案替换它，从而终结现有应用程序。</st>
- en: <st c="39288">Next is migration process to redeploy the application as is into
    the cloud infrastructure, which is usually on an IaaS workload such as virtual
    machines.</st> <st c="39443">Here, we do not do much from the perspective of Power
    Platform except that we are aware that the application exists on Azure IaaS and
    when building any new application, we might connect to the existing apps on Azure
    cloud</st> <st c="39665">more easily.</st>
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="39288">接下来是迁移过程，将应用程序按原样重新部署到云基础设施中，通常是在虚拟机等IaaS工作负载上。</st> <st c="39443">在这里，我们从Power
    Platform的角度并没有做太多，只是意识到该应用程序存在于Azure IaaS上，并且在构建任何新应用程序时，我们可能会更轻松地连接到Azure云上的现有应用程序。</st>
    <st c="39665">更容易。</st>
- en: <st c="39677">The final bucket involves actual modernization, where parts of
    the code are modernized, or an entire application is built from scratch.</st>
    <st c="39814">This is the part where we come back to the project planning phase,
    gather all requirements, build architecture design, and start working on a new
    project utilizing Power Platform services.</st> <st c="40003">When we are done
    with the modernization of the application, we should have teams in place in the
    organization that will take care of the training and adoption to encourage users
    to start using the</st> <st c="40200">new application.</st>
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="39677">最后一个部分涉及实际的现代化，其中部分代码得到现代化，或者整个应用程序从零开始构建。</st> <st c="39814">这是我们回到项目规划阶段的部分，收集所有需求，构建架构设计，并开始利用Power
    Platform服务开展新项目。</st> <st c="40003">当我们完成应用程序的现代化后，我们应在组织中安排团队负责培训和推广，鼓励用户开始使用</st>
    <st c="40200">新应用程序。</st>
- en: <st c="40216">Currently, there</st> <st c="40233">are tools available on the
    market that can assess legacy applications and map them to the right migration
    strategy accordingly.</st> <st c="40362">However, using the tool is only a small
    percentage of the actual assessment.</st> <st c="40439">A larger portion of the
    assessment is done by conducting an analysis of the outcomes of the tool.</st>
    <st c="40537">This is to verify the outcomes and to map them with the findings
    of the manual assessment process, which might also include interviews with the
    users and administrators of the application.</st> <st c="40726">It could happen
    that tools would decide on one migration strategy based on the assessed source
    code or inputs that were provided to the tool.</st> <st c="40868">However, after
    conducting a thorough analysis and interviews, a different migration strategy
    might be selected.</st> <st c="40980">All these inputs will be crucial for us
    to decide on the migration strategy before kicking off the actual application</st>
    <st c="41098">development work.</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="40216">目前，市面上有一些工具可以评估遗留应用程序，并根据评估结果将其映射到合适的迁移策略。</st> <st c="40362">然而，使用工具只是实际评估的一小部分。</st>
    <st c="40439">评估的大部分工作是通过分析工具的结果来完成的。</st> <st c="40537">这一步骤是为了验证结果，并将其与手动评估过程中的发现进行对比，手动评估过程可能还包括与应用程序用户和管理员的访谈。</st>
    <st c="40726">工具可能会根据评估的源代码或提供给工具的输入，决定采用一种迁移策略。</st> <st c="40868">然而，在进行深入分析和访谈后，可能会选择另一种迁移策略。</st>
    <st c="40980">所有这些输入对于我们在开始实际的应用开发工作之前，决定迁移策略至关重要。</st> <st c="41098">开发工作。</st>
- en: <st c="41115">Database modernization</st>
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="41115">数据库现代化</st>
- en: <st c="41138">Database modernization</st> <st c="41161">tackles</st> <st c="41170">not
    only updating existing database systems but also how to improve the process of
    storing, processing, and handling an</st> <st c="41290">application’s data.</st>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41138">数据库现代化</st> <st c="41161">不仅仅是更新现有的数据库系统，还涉及如何改进存储、处理和管理</st>
    <st c="41290">应用程序数据的过程。</st>
- en: <st c="41309">Usually, together with the application assessment, we also do
    database assessment, since they go hand in hand.</st> <st c="41421">Many times,
    the application logic is written in databases in a format of stored procedures,
    so when assessing and deciding on a modernization approach for applications, we
    should also look at this part and decide how to potentially take this logic out
    of the database systems and transfer it to the service that will be handling such
    logic.</st> <st c="41762">That being said, it is important to deliver database
    assessment as well.</st> <st c="41835">This will help us with the creation of
    the inventory of databases, tables, and their relationship.</st> <st c="41934">We
    should also look into the performance metrics and understand where the</st> <st
    c="42008">bottlenecks are.</st>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="41309">通常，我们会在进行应用评估的同时，也进行数据库评估，因为这两者是密切相关的。</st> <st c="41421">许多时候，应用逻辑是以存储过程的形式写在数据库中的，因此在评估并决定应用现代化方法时，我们也应该考虑这部分内容，并决定如何将这部分逻辑从数据库系统中提取出来，并转移到处理该逻辑的服务上。</st>
    <st c="41762">话虽如此，进行数据库评估仍然非常重要。</st> <st c="41835">这将帮助我们创建数据库、表格及其关系的清单。</st>
    <st c="41934">我们还应该关注性能指标，并了解</st> <st c="42008">瓶颈所在。</st>
- en: <st c="42024">Similar to the application modernization strategy, with database
    modernization, we also have to decide on different modernization strategies.</st>
    <st c="42167">They can be the same as for app modernization, only within the context</st>
    <st c="42238">of databases:</st>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="42024">与应用程序现代化战略类似，数据库现代化时，我们也必须决定不同的现代化战略。</st> <st c="42167">这些策略可以与应用程序现代化的策略相同，只是适用于</st>
    <st c="42238">数据库的上下文：</st>
- en: '**<st c="42251">Retire</st>**<st c="42258">: We</st> <st c="42264">decide to
    retire the database.</st> <st c="42295">If we are doing so, we should look into
    the archiving options for existing databases and the impact of decommissioning
    the database to</st> <st c="42430">other systems.</st>'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="42251">退休</st>**<st c="42258">: 我们</st> <st c="42264">决定淘汰该数据库。</st>
    <st c="42295">如果我们要这么做，应该研究现有数据库的归档选项以及停用数据库对</st> <st c="42430">其他系统的影响。</st>'
- en: '**<st c="42444">Retain</st>**<st c="42451">: Sometimes, due</st> <st c="42469">to
    specific restrictions or requirements, we might not be able to move to newer database
    systems and retaining is our option.</st> <st c="42595">In such cases, Power Platform
    can support us with many connectors and on-premise data gateways through which
    we connect applications with the</st> <st c="42737">database system.</st>'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="42444">保留</st>**<st c="42451">：有时，由于特定的限制或需求，我们可能无法迁移到更新的数据库系统，这时保留现有系统成为我们的选择。</st>
    <st c="42469">在这种情况下，Power Platform 可以通过许多连接器和本地数据网关支持我们，通过这些方式，我们可以将应用程序与</st>
    <st c="42737">数据库系统连接。</st>'
- en: '**<st c="42753">Rehosting</st>**<st c="42763">: Without</st> <st c="42774">altering
    the data structure, we can migrate the database to a new platform.</st> <st c="42850">This
    could be a solution running on IaaS, such as SQL Server on Azure Virtual Machines,
    or any other open source SQL and NoSQL database solutions, such as MySQL or PostgreSQL
    on VMs, depending on the</st> <st c="43050">solution used.</st>'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="42753">重新托管</st>**<st c="42763">：我们可以在不改变数据结构的情况下，将数据库迁移到新平台。</st>
    <st c="42850">这可以是运行在 IaaS 上的解决方案，比如 Azure 虚拟机上的 SQL Server，或者其他开源 SQL 和 NoSQL
    数据库解决方案，例如运行在虚拟机上的 MySQL 或 PostgreSQL，具体取决于</st> <st c="43050">所使用的解决方案。</st>'
- en: '**<st c="43064">Refactor</st>**<st c="43073">: This</st> <st c="43080">would
    involve modifying or extending the existing data structure to improve the experience
    with the database system through performance, scalability and reliability, or
    anything else.</st> <st c="43265">Here, we</st> <st c="43273">aim to utilize newer
    technology, such as cloud database services for certain parts, while keeping the
    rest on the existing underlying database technology.</st> <st c="43429">In this
    case, for some parts we could be utilizing Microsoft Dataverse or switch to PaaS
    services, such as Azure</st> <st c="43542">SQL Database.</st>'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="43064">重构</st>**<st c="43073">：这</st> <st c="43080">将涉及修改或扩展现有的数据结构，以通过性能、可扩展性和可靠性等方面改善与数据库系统的体验，或改善其他方面。</st>
    <st c="43265">在这里，我们</st> <st c="43273">旨在利用更新的技术，例如为某些部分使用云数据库服务，同时将其余部分保留在现有的基础数据库技术上。</st>
    <st c="43429">在这种情况下，某些部分我们可能会使用 Microsoft Dataverse，或者切换到 PaaS 服务，如 Azure</st>
    <st c="43542">SQL 数据库。</st>'
- en: '**<st c="43555">Replace and rebuild</st>**<st c="43575">: These two</st> <st
    c="43587">options are put together here, since in favor of Power Platform services,
    Dataverse could be used as a database for the new application developed using
    the Power</st> <st c="43750">Platform services.</st>'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="43555">替换与重建</st>**<st c="43575">：这两个</st> <st c="43587">选项放在一起，因为在支持
    Power Platform 服务的情况下，Dataverse 可用作使用 Power</st> <st c="43750">Platform 服务开发的新应用程序的数据库。</st>'
- en: <st c="43768">No matter which</st> <st c="43785">modernization strategy we select,
    we should work on implementing and adopting processes that will support DevOps
    in the organization.</st> <st c="43919">Application modernization is not a one-time
    process, but rather an iterative one.</st> <st c="44001">Organizations should
    track the progress and learnings during the modernization and improve if anything
    needs to be changed.</st> <st c="44125">This provides flexibility to the organizations
    to be able to change the strategy in case it is required.</st> <st c="44230">Having
    agile development teams with DevOps tools in place to work together in one central
    location and track the progress of the project allows us to be more effective
    in</st> <st c="44401">doing so.</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="43768">无论我们选择哪种</st> <st c="43785">现代化战略，我们都应该致力于实施和采纳支持组织内部 DevOps 的流程。</st>
    <st c="43919">应用程序现代化不是一次性的过程，而是一个迭代过程。</st> <st c="44001">组织应该在现代化过程中跟踪进展和经验教训，并在有需要时进行改进。</st>
    <st c="44125">这为组织提供了灵活性，使其能够在必要时改变战略。</st> <st c="44230">拥有敏捷开发团队，并配备 DevOps
    工具，能够在一个中心位置共同工作并跟踪项目进度，这使我们在</st> <st c="44401">执行时更加高效。</st>
- en: <st c="44410">However, it is not all only about the DevOps tools.</st> <st c="44463">Newly
    built applications on a platform that might be new to most of the organization
    would require us to work internally on increasing the adoption of the newly built
    applications in our organization.</st> <st c="44664">This is where the Power Platform
    adoption maturity model can</st> <st c="44725">help us.</st>
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="44410">然而，这不仅仅是关于 DevOps 工具。</st> <st c="44463">在一个对大多数组织来说可能是新的平台上构建的应用程序，将需要我们在内部进行工作，增加组织对新构建应用程序的采用度。</st>
    <st c="44664">这就是 Power Platform 采纳成熟度模型可以</st> <st c="44725">帮助我们的地方。</st>
- en: <st c="44733">Building Power Platform adoption journey</st>
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="44733">构建 Power Platform 采纳之旅</st>
- en: <st c="44774">In the previous</st> <st c="44790">section, we mentioned that
    application modernization is not a one-time process and that it will require continuous
    evaluation of the progress and potential improvement over time.</st> <st c="44970">To
    unlock the full potential of Power Platform, organizations should explore ways
    to introduce a strategy for increasing the adoption of Power Platform.</st> <st
    c="45123">This might involve empowering new app makers or providing comprehensive
    trainings, as well as implementing guardrails, processes, and tools that help
    developers work in controlled environments.</st> <st c="45317">This section will
    talk about the Power Platform adoption maturity model and emphasize its importance</st>
    <st c="45418">for organizations.</st>
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="44774">在前一节中，我们提到过，应用现代化不是一次性的过程，且它将需要对进展和潜在改进进行持续评估。</st> <st c="44790">为了充分发挥
    Power Platform 的潜力，组织应探索引入增加 Power Platform 采纳率的战略的方法。</st> <st c="44970">这可能涉及授权新的应用程序开发者或提供全面的培训，以及实施有助于开发人员在受控环境中工作的防护措施、流程和工具。</st>
    <st c="45123">本节将讨论 Power Platform 采纳成熟度模型，并强调其对组织的重要性。</st> <st c="45317"> </st>
- en: <st c="45436">The Power Platform adoption maturity</st> <st c="45474">model
    helps organizations understand where they are on the scale of maturity and how
    to make sure that the adoption is aligned with business goals and KPIs while working
    on their digital transformation.</st> <st c="45677">It will be different for organizations
    that are more mature to build new or modernize existing legacy applications using
    Power Platform than for organizations that are completely new on Power Platform.</st>
    <st c="45879">Companies should understand their current maturity level and implement
    strategies that will help them improve, which will lead to more resilient, experienced,
    and adaptable organizations.</st> <st c="46067">Doing so could also lead to a
    smoother application</st> <st c="46118">modernization process.</st>
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="45436">Power Platform 采纳成熟度模型帮助组织了解它们在成熟度量表上的位置，并确保采纳与业务目标和关键绩效指标（KPI）对齐，同时推动数字化转型。</st>
    <st c="45474">对于那些在 Power Platform 上较为成熟的组织来说，使用 Power Platform 构建新应用或现代化现有遗留应用会与刚刚接触
    Power Platform 的组织不同。</st> <st c="45677">公司应了解当前的成熟度水平，并实施有助于提高成熟度的战略，这将使公司成为更具弹性、更有经验和更具适应性的组织。</st>
    <st c="45879">这样做还可能使应用现代化过程更加顺畅。</st>
- en: <st c="46140">The Power Platform adoption maturity model</st>
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="46140">Power Platform 采纳成熟度模型</st>
- en: <st c="46183">The</st> <st c="46187">intention of the Power Platform adoption
    maturity model is to help organizations assess their current level of maturity
    and use the set of best practices, patterns, and tools to guide organizations
    on how to improve their capabilities.</st> <st c="46424">Through the process of
    continuous improvement, organizations can continuously assess and increase their
    level of maturity in the areas that matter most</st> <st c="46576">to them.</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46067"> </st> <st c="46183">Power Platform 采纳成熟度模型的目的是帮助组织评估当前的成熟度水平，并利用一套最佳实践、模式和工具指导组织如何提升其能力。</st>
    <st c="46187">通过持续改进的过程，组织可以不断评估并提升其在最关键领域的成熟度。</st> <st c="46424"> </st> <st
    c="46576"> </st>
- en: <st c="46584">The Power Platform adoption maturity model is closely related
    to the change management process, which is basically a structured approach that
    organizations take in order to move from the current state to the desired state
    by implementing a strategy for controlling this change and helping people adapt
    to the changes.</st> <st c="46903">As we have mentioned, this is also the intention
    of the adoption maturity model – to help define a strategy or plan for the adoption
    of Power Platform services.</st> <st c="47064">This plan should be aligned and
    approved by the business part of the organization since the improvement goals
    should be based on the</st> <st c="47197">business objectives.</st>
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46584">Power Platform 采纳成熟度模型与变更管理过程密切相关，这基本上是组织为实现从当前状态到期望状态的转变，通过实施控制变更的战略并帮助人们适应变化而采取的一种结构化方法。</st>
    <st c="46903">正如我们所提到的，这也是采纳成熟度模型的目的——帮助定义 Power Platform 服务采纳的战略或计划。</st> <st
    c="47064">该计划应与组织的业务部门对齐并获得批准，因为改进目标应基于</st> <st c="47197">业务目标。</st>
- en: <st c="47217">Power Platform</st> <st c="47232">adoption maturity model is based
    on the</st> **<st c="47273">Capability Maturity Model</st>** <st c="47298">(</st>**<st
    c="47300">CMM</st>**<st c="47303">).</st> <st c="47307">Like the CMM, in this
    model, we also follow five levels of maturity that span from level 100 to</st>
    <st c="47403">level 500:</st>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47217">Power Platform</st> <st c="47232">采用成熟度模型基于</st> **<st c="47273">能力成熟度模型</st>**
    <st c="47298">(</st>**<st c="47300">CMM</st>**<st c="47303">)</st>。<st c="47307">像
    CMM 一样，在这个模型中，我们也遵循五个成熟度层级，从级别 100 到</st> <st c="47403">级别 500：</st>
- en: '![Figure 3.3 – The Power Platform adoption maturity model levels](img/B22208_03_3.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – Power Platform 采用成熟度模型层级](img/B22208_03_3.jpg)'
- en: <st c="47415">Figure 3.3 – The Power Platform adoption maturity model levels</st>
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47415">图 3.3 – Power Platform 采用成熟度模型层级</st>
- en: <st c="47477">Each level</st> <st c="47489">encompasses multiple disciplines
    that provide insights into the organization’s maturity across various domains.</st>
    <st c="47601">These disciplines are</st> <st c="47623">as follows:</st>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47477">每个层级</st> <st c="47489">涵盖多个学科，这些学科为组织在各个领域的成熟度提供了见解。</st> <st
    c="47601">这些学科如下：</st>
- en: <st c="47634">Strategy</st> <st c="47644">and vision</st>
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47634">战略</st> <st c="47644">与愿景</st>
- en: <st c="47654">Business value</st>
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47654">业务价值</st>
- en: <st c="47669">Nurture</st>
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47669">培育</st>
- en: <st c="47677">Admin</st> <st c="47684">and governance</st>
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47677">管理</st> <st c="47684">与治理</st>
- en: <st c="47698">Support</st>
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47698">支持</st>
- en: <st c="47706">Automation</st>
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47706">自动化</st>
- en: <st c="47717">Fusion teams</st>
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="47717">融合团队</st>
- en: <st c="47730">When looking at the ALM and DevOps, a big part of improvements
    can be done across the automation domain.</st> <st c="47836">The state of automation
    for organizations spans from level 100, which is where ALM processes are mostly
    done manually and very individually, to level 300, where deployment might still
    be done manually but organizations have started to use solutions, all the way
    to level 500, where ALM processes are implemented centrally and owned by fusion
    teams.</st> <st c="48185">Later, in</st> [*<st c="48195">Chapter 6</st>*](B22208_06.xhtml#_idTextAnchor103)<st
    c="48204">, we will also take a look at the ALM Accelerator, which helps organizations
    to speed up with setting up the ALM for</st> <st c="48321">Power Platform.</st>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="47730">在 ALM 和 DevOps 方面，很多改进可以在自动化领域完成。</st> <st c="47836">组织的自动化状态从级别
    100 开始，ALM 流程大多是手动且非常个性化的，发展到级别 300，部署可能仍然是手动完成，但组织已经开始使用解决方案，一直到级别 500，ALM 流程已集中实施并由融合团队负责。</st>
    <st c="48185">稍后，在</st> [*<st c="48195">第 6 章</st>*](B22208_06.xhtml#_idTextAnchor103)<st
    c="48204">中，我们还将看看 ALM 加速器，它帮助组织加速为</st> <st c="48321">Power Platform 设置 ALM。</st>
- en: <st c="48336">Connected with</st> <st c="48351">the DevOps and adoption journey
    is also the state of fusion teams in the organization.</st> <st c="48439">Maturity
    levels demonstrate different involvement of fusion development teams in organization.</st>
    <st c="48534">Level 100 is where fusion teams are not present, professional developers
    are not involved in Power Platform project development, and work is mostly done
    by app makers.</st> <st c="48702">Continuing towards the level 300, we can see
    that the teams are forming.</st> <st c="48775">Members of fusion teams understand
    and use version control systems and they even start implementing ALM; however,
    the work these teams do is still mostly scattered and not completely centralized.</st>
    <st c="48971">Proceeding to level 500, cross-real fusion teams are formed that
    incorporate cross-functional skills.</st> <st c="49073">At level 5, a common development
    strategy is in place, with a centralized source control system that supports collaboration
    across the organization.</st> [*<st c="49222">Chapter 9</st>*](B22208_09.xhtml#_idTextAnchor149)
    <st c="49231">explains more about the fusion</st> <st c="49263">development approach.</st>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="48336">与</st> <st c="48351">DevOps 和采用之旅紧密相关的，还有组织中融合团队的状态。</st> <st
    c="48439">成熟度层级展示了融合开发团队在组织中的不同参与度。</st> <st c="48534">级别 100 是融合团队尚未出现，专业开发人员没有参与
    Power Platform 项目开发，工作主要由应用制作人员完成。</st> <st c="48702">随着向级别 300 发展，我们可以看到团队开始形成。</st>
    <st c="48775">融合团队成员了解并使用版本控制系统，甚至开始实施 ALM；然而，这些团队所做的工作仍然大多是分散的，尚未完全集中。</st> <st
    c="48971">进入级别 500，形成了跨领域的融合团队，融入了跨职能的技能。</st> <st c="49073">在级别 5，制定了统一的开发战略，拥有一个支持组织协作的集中式源代码管理系统。</st>
    [*<st c="49222">第 9 章</st>*](B22208_09.xhtml#_idTextAnchor149) <st c="49231">详细解释了融合</st>
    <st c="49263">开发方法。</st>
- en: <st c="49284">The adoption maturity model across stages</st>
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="49284">各阶段的采纳成熟度模型</st>
- en: <st c="49326">The Power Platform adoption maturity model covers five levels
    of maturity.</st> <st c="49402">Ahead, we will be looking into each level through</st>
    <st c="49452">an example.</st>
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="49326">Power Platform 的采纳成熟度模型涵盖了五个成熟度级别。</st> <st c="49402">接下来，我们将通过</st>
    <st c="49452">一个示例来看每个级别。</st>
- en: <st c="49463">Level 100 – initial</st>
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <st c="49463">级别 100 – 初始</st>
- en: <st c="49483">In this stage, we</st> <st c="49501">can see that organizations
    might have isolated instances of successful cases developed using Power Platform.</st>
    <st c="49611">Users might find access to Power Platform on their own, usually
    through Microsoft 365, using their seeded licenses.</st> <st c="49727">They build
    applications on top of Office 365 services, most often using Excel or SharePoint
    as a data source.</st> <st c="49837">Since the applications are developed by individuals,
    individuals also maintain them, and most often, the applications are not reusable.</st>
    <st c="49973">There is no centralized strategy for governance or ALM.</st> <st
    c="50029">Users mostly work in the default environment; however, as there are
    no guardrails in place, users might even open new environments and use any connector.</st>
    <st c="50183">Although through these successful examples, organizations might
    identify potential in Power Platform, there is no strategy for going forward into
    organization-wide adoption and no plan for the establishment of</st> <st c="50393">a
    CoE.</st>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="49483">在这个阶段，我们</st> <st c="49501">可以看到，组织可能会有一些成功的案例，它们是通过使用 Power Platform
    开发的。</st> <st c="49611">用户可能会自行访问 Power Platform，通常通过 Microsoft 365，使用他们的预置许可证。</st>
    <st c="49727">他们在 Office 365 服务上构建应用程序，通常使用 Excel 或 SharePoint 作为数据源。</st> <st
    c="49837">由于这些应用程序是由个人开发的，个人也负责维护它们，而且这些应用程序大多不可重复使用。</st> <st c="49973">没有集中式的治理或
    ALM 策略。</st> <st c="50029">用户主要在默认环境中工作；然而，由于没有保护措施，用户甚至可能会打开新的环境并使用任何连接器。</st>
    <st c="50183">尽管通过这些成功的案例，组织可能会发现 Power Platform 的潜力，但尚未制定向组织范围推广的策略，也没有计划建立</st>
    <st c="50393">一个 CoE。</st>
- en: <st c="50399">To advance to the next maturity level, there is a lot to do regarding
    nurturing and skilling future app makers.</st> <st c="50512">Organizations can
    organize training sessions or hackathons where people learn</st> <st c="50590">and
    work together to build solutions that solve certain business problems.</st> <st
    c="50665">It is beneficial to identify app makers in the organizations that are
    early adopters of the technology.</st> <st c="50769">Through them we can promote
    the work and their experiences</st> <st c="50828">to others.</st>
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50399">为了达到下一个成熟度水平，在培养和提升未来应用开发者方面还有很多工作要做。</st> <st c="50512">组织可以组织培训课程或黑客马拉松活动，在这些活动中，人们可以学习</st>
    <st c="50590">并共同合作，构建解决特定业务问题的方案。</st> <st c="50665">识别出在技术上早期采用的应用开发者对组织来说是有益的。</st>
    <st c="50769">通过他们，我们可以将这些工作的经验</st> <st c="50828">推广给其他人。</st>
- en: <st c="50838">Level 200 – repeatable</st>
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <st c="50838">级别 200 – 可重复</st>
- en: <st c="50861">Organizations</st> <st c="50876">are already moving a step ahead
    and are starting to discover what has been done by users across the organization.</st>
    <st c="50990">They might have implemented a CoE Starter Kit, which, among other
    capabilities, provides organizations with a set of tools designed to help gain
    insights into the adoption of Power Platform.</st> <st c="51181">Business applications
    that were developed have some documentation in place, which allows them to be
    repeated if needed.</st> <st c="51301">Organizations have built a common vision
    between IT and business, but new projects are still managed individually.</st>
    <st c="51416">Some policies are being put in place, including DLP policies, but
    there is still no environment strategy in place.</st> <st c="51531">App makers
    can form teams or communities, through which they support each other in the</st>
    <st c="51618">development process.</st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="50861">组织</st> <st c="50876">已经迈出了第一步，开始发现组织内用户所做的工作。</st> <st c="50990">他们可能已经实施了
    CoE 启动工具包，该工具包提供了一系列工具，帮助组织洞察 Power Platform 的采纳情况。</st> <st c="51181">已开发的业务应用程序已经有一些文档，使其在需要时可以重复使用。</st>
    <st c="51301">组织在 IT 和业务之间建立了共同的愿景，但新项目仍然是单独管理的。</st> <st c="51416">一些政策已经开始实施，包括
    DLP 政策，但仍然没有环境战略。</st> <st c="51531">应用开发者可以组成团队或社区，通过这些团队和社区彼此支持，共同推进</st> <st
    c="51618">开发过程。</st>
- en: <st c="51638">In order to advance to the next level, organizations can implement
    DLP policies in the default environment, gain access to the analytics as part
    of the Power Platform admin center, gain insights across tenants, improve communication
    with app makers, and keep on building internal training resources.</st> <st c="51939">The
    latter could be done through a centralized internal SharePoint site or other</st>
    **<st c="52020">Learning Management System</st>** <st c="52046">(</st>**<st c="52048">LMS</st>**<st
    c="52051">) tools.</st>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="51638">为了晋升到下一个层级，组织可以在默认环境中实施 DLP（数据丢失防护）策略，访问 Power Platform 管理中心的分析功能，获得跨租户的洞察，改善与应用开发者的沟通，并继续建设内部培训资源。</st>
    <st c="51939">后者可以通过集中式的内部 SharePoint 网站或其他</st> **<st c="52020">学习管理系统</st>**
    <st c="52046">(</st>**<st c="52048">LMS</st>**<st c="52051">) 工具来完成。</st>
- en: <st c="52060">Level 300 – defined</st>
  id: totrans-147
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <st c="52060">级别 300 – 已定义</st>
- en: <st c="52080">At this</st> <st c="52088">level, the LCNC development approach
    becomes part of the standard business process.</st> <st c="52173">Organizations
    have a single representative or entire team that acts as Power Platform product
    owners.</st> <st c="52275">Applications could be developed by individual users,
    business units, or divisions, so the innovation is happening from the bottom up
    or top down.</st> <st c="52421">There are more successful cases using Power Platform
    that can even be measured.</st> <st c="52501">The CoE team is established, which
    is trying to automate many of the processes such as environment creation requests.</st>
    <st c="52619">Teams are already implementing source control systems to start working
    on the ALM; however, the deployments are still mostly done manually.</st> <st
    c="52759">App makers understand the importance of reusability and they start building
    and</st> <st c="52839">utilizing components.</st>
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52080">在这个</st> <st c="52088">层级，LCNC 开发方法成为标准业务流程的一部分。</st> <st c="52173">组织通常会有一位代表或整个团队，担任
    Power Platform 产品负责人。</st> <st c="52275">应用程序可以由个人用户、业务单元或部门开发，因此创新既可以从下往上，也可以从上往下进行。</st>
    <st c="52421">已经有更多使用 Power Platform 的成功案例，这些案例甚至可以进行量化。</st> <st c="52501">已经建立了
    CoE 团队，尝试自动化许多流程，如环境创建请求。</st> <st c="52619">团队已经开始实施源代码控制系统，以便开始进行 ALM（应用生命周期管理）；然而，部署仍然主要是手动完成的。</st>
    <st c="52759">应用开发者理解可重用性的重要性，并开始构建和</st> <st c="52839">利用组件。</st>
- en: <st c="52860">To improve</st> <st c="52871">the maturity level, organizations
    could implement an environment strategy and configure various security and governance
    controls in Power Platform.</st> <st c="53020">We should continue nurturing and
    promoting our app makers and teams through the successful use-cases that they</st>
    <st c="53131">have developed.</st>
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="52860">为了提升</st> <st c="52871">成熟度，组织可以实施环境策略并配置 Power Platform 中的各种安全和治理控制。</st>
    <st c="53020">我们应该继续通过他们开发的成功案例，培养和推广我们的应用开发者和团队。</st> <st c="53131">这些案例是他们已经开发的。</st>
- en: <st c="53146">Level 400 – capable</st>
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <st c="53146">级别 400 – 能力成熟</st>
- en: <st c="53166">Organizations</st> <st c="53181">at this stage are already very
    advanced.</st> <st c="53222">They have processes in place to measure the impact
    of Power Platform.</st> <st c="53292">A well-established CoE team is able to manage
    and monitor the Power Platform tenant.</st> <st c="53377">The organization already
    has experience with fusion teams where teams have cross-functional skills.</st>
    <st c="53477">This enables better cooperation in the development process.</st>
    <st c="53537">The ALM processes are defined and organizations use tools to centrally
    manage ALM and DevOps processes.</st> <st c="53641">Deployment pipelines are implemented
    and done automatically.</st> <st c="53702">Administrators are able to identify
    unused applications through analytics and take automated actions to manage environments.</st>
    <st c="53827">In the organization, a separate support team could exist that supports
    end users and</st> <st c="53912">app makers.</st>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="53166">处于这个阶段的组织</st> <st c="53181">已经非常先进。</st> <st c="53222">他们已经建立了衡量
    Power Platform 影响力的流程。</st> <st c="53292">一个完善的 CoE 团队能够管理和监控 Power Platform 租户。</st>
    <st c="53377">组织已经有了与融合团队合作的经验，这些团队具备跨职能的技能。</st> <st c="53477">这使得开发过程中能够更好地合作。</st>
    <st c="53537">ALM 流程已被定义，组织使用工具来集中管理 ALM 和 DevOps 流程。</st> <st c="53641">部署流水线已实施并自动完成。</st>
    <st c="53702">管理员能够通过分析识别未使用的应用，并采取自动化措施来管理环境。</st> <st c="53827">在组织内，可能存在一个独立的支持团队，负责支持最终用户和</st>
    <st c="53912">应用开发者。</st>
- en: <st c="53923">To proceed to the next maturity level, organizations could work
    more on reusability, implementing an app catalog to ensure that reusable components
    are reachable to provide consistency across applications.</st> <st c="54130">Work
    between the CoE team and the IT operations team could be automatized</st> <st
    c="54204">through chatbots.</st>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="53923">为了推进到下一个成熟度水平，组织可以更加关注可重用性，实施应用程序目录，以确保可重用组件能够被访问，从而在应用程序之间提供一致性。</st>
    <st c="54130">CoE 团队与 IT 运维团队之间的工作可以通过聊天机器人</st> <st c="54204">实现自动化。</st>
- en: <st c="54221">Level 500 – Efficient</st>
  id: totrans-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <st c="54221">级别 500 – 高效</st>
- en: <st c="54243">This is the</st> <st c="54256">most advanced stage, where Power
    Platform has become part of the digital transformation strategy.</st> <st c="54354">Organizations
    at this stage have standardized and automatized processes that allow rapid development
    of projects to support business needs.</st> <st c="54494">Large applications are
    built for use across the entire organization.</st> <st c="54563">When architecture
    for new projects is designed, it includes Power Platform services.</st> <st c="54648">Dashboards
    and reporting are implemented to support business decisions and verify the impact
    of Power Platform across each project.</st> <st c="54780">There is executive support
    for the usage of Power Platform in the organization.</st> <st c="54860">Administrative
    tasks are automated, utilizing automation wherever possible, including chatbots
    with approval processes to perform tenant management operations.</st> <st c="55020">Fusion
    teams are in place and there is a common development strategy with fully automated</st>
    <st c="55109">ALM pipelines in place.</st> <st c="55134">Support tasks are largely
    automated, including chatbots for internal support</st> <st c="55211">or FAQs.</st>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="54243">这是最</st> <st c="54256">先进的阶段，在这个阶段，Power Platform 已成为数字化转型战略的一部分。</st>
    <st c="54354">处于这个阶段的组织已经标准化和自动化了流程，能够快速开发项目以支持业务需求。</st> <st c="54494">大型应用程序被构建以供整个组织使用。</st>
    <st c="54563">在设计新项目的架构时，会包含 Power Platform 服务。</st> <st c="54648">仪表板和报告已经实施，用于支持业务决策并验证
    Power Platform 在每个项目中的影响。</st> <st c="54780">组织内部对 Power Platform 的使用提供高层支持。</st>
    <st c="54860">行政任务已实现自动化，尽可能利用自动化技术，包括带有审批流程的聊天机器人来执行租户管理操作。</st> <st c="55020">融合团队已到位，并且拥有共同的开发战略，配备了完全自动化的</st>
    <st c="55109">ALM 管道。</st> <st c="55134">支持任务大多已自动化，包括用于内部支持的聊天机器人</st> <st c="55211">或常见问题解答。</st>
- en: <st c="55219">Ways to improve the maturity level</st>
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="55219">提升成熟度水平的方法</st>
- en: <st c="55254">Although</st> <st c="55264">we have defined each level and mentioned
    that organizations should strive to improve the level of maturity, it often happens
    that disciplines in each level advance individually.</st> <st c="55442">This means
    that level improvements in organizations are not done holistically across all
    domains, but rather focused on</st> <st c="55562">specific domains.</st>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="55254">尽管</st> <st c="55264">我们已经定义了每个级别，并提到组织应该努力提高成熟度水平，但常常会出现每个级别中的学科各自独立发展的情况。</st>
    <st c="55442">这意味着，组织内部的级别提升并非在所有领域内系统地进行，而是专注于</st> <st c="55562">特定领域。</st>
- en: <st c="55579">We can come across companies that have just started with the Power
    Platform adoption and are in an initial stage, facing an important app modernization
    project , which pushes them to adapt and improve maturity level across very specific
    domains, in order to support the project.</st> <st c="55859">Companies then build
    their own plan and strategy around the type of level they would like to achieve
    per discipline and create a focus plan with a timeline that helps them aim to</st>
    <st c="56038">achieve it.</st>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="55579">我们可能会遇到刚刚开始采用 Power Platform 且处于初始阶段的公司，这些公司面临一个重要的应用程序现代化项目，这推动它们在非常具体的领域内适应并提升成熟度水平，以支持该项目。</st>
    <st c="55859">这些公司会围绕它们希望在每个学科中达到的级别，制定自己的计划和战略，并创建一个有时间表的聚焦计划，帮助它们</st> <st c="56038">实现目标。</st>
- en: <st c="56049">To get there faster, they can follow the Power Platform adoption</st>
    <st c="56115">best practices.</st>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56049">为了更快地实现目标，他们可以遵循 Power Platform 采纳</st> <st c="56115">最佳实践。</st>
- en: <st c="56130">Adoption best practices</st>
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="56130">采纳最佳实践</st>
- en: '<st c="56154">Improving</st> <st c="56164">adoption maturity helps organizations
    to become more effective with the technology, allowing them to have processes
    in place that support digital transformation.</st> <st c="56327">To support this
    adoption process, Microsoft provides a set of best practices and guidance that
    will be helpful to anyone: those who are just starting with Power Platform adoption,
    those who would like to improve their adoption maturity level, and even those
    who are more experienced but have seen some challenges while trying to increase
    adoption of the services in</st> <st c="56693">the organization.</st>'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56154">提高</st> <st c="56164">采用成熟度有助于组织更有效地使用技术，使他们能够建立支持数字化转型的流程。</st>
    <st c="56327">为了支持这一采用过程，微软提供了一套最佳实践和指南，对任何人都有帮助：无论是刚开始使用Power Platform的人员，还是希望提高采用成熟度的人员，甚至是那些经验丰富但在推动组织服务采纳时遇到一些挑战的人。</st>
    <st c="56693">组织中的人员。</st>
- en: <st c="56710">Adoption best practices are split into four areas and address
    most of the disciplines in the adoption</st> <st c="56813">maturity model:</st>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56710">采用最佳实践分为四个领域，涵盖了采用成熟度模型中的大多数学科：</st>
- en: <st c="56828">Strategy</st> <st c="56838">and vision</st>
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="56828">战略</st> <st c="56838">与愿景</st>
- en: <st c="56848">Admin</st> <st c="56855">and governance</st>
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="56848">管理员</st> <st c="56855">与治理</st>
- en: <st c="56869">Nurture</st> <st c="56878">and educate</st>
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="56869">培养</st> <st c="56878">与教育</st>
- en: <st c="56889">Support</st>
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="56889">支持</st>
- en: <st c="56897">Power Platform Landing Zones</st>
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="56897">Power Platform着陆区</st>
- en: <st c="56926">The</st> **<st c="56931">Power Platform Landing Zones</st>** <st
    c="56959">reference serves as a modular architecture reference</st> <st c="57013">guide
    for organizations to implement their desired Power Platform tenant state by following
    the design principles and critical design areas.</st> <st c="57154">It helps us
    with the Power Platform environment creation that aligns with the agreed-upon
    governance policies.</st> <st c="57265">As we have seen, the adoption maturity
    model highlights how the automated environment management approach differentiates
    organizations of different</st> <st c="57413">maturity levels.</st>
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="56926">此</st> **<st c="56931">Power Platform着陆区</st>** <st c="56959">参考文档作为一个模块化架构参考</st>
    <st c="57013">指南，帮助组织按照设计原则和关键设计领域实施所需的Power Platform租户状态。</st> <st c="57154">它帮助我们创建符合已达成治理政策的Power
    Platform环境。</st> <st c="57265">正如我们所看到的，采用成熟度模型强调了自动化环境管理方法如何区分不同成熟度水平的组织。</st>
- en: <st c="57429">Power Platform Well-Architected</st>
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="57429">Power Platform架构良好的框架</st>
- en: <st c="57461">The</st> <st c="57466">Power Platform</st> **<st c="57481">Well-Architected
    Framework</st>** <st c="57507">(</st>**<st c="57509">WAF</st>**<st c="57512">)
    is a framework that brings together best practices and recommendations that help
    organizations of every size achieve the most optimal architecture design of the
    application workload in Power Platform.</st> <st c="57716">Organizations can make
    sure that by following Power Platform WAF, their environments will be ready to
    scale for future growth, with controls in place to ensure compliance and security
    of their environment</st> <st c="57921">and data.</st>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57461">该</st> <st c="57466">Power Platform</st> **<st c="57481">架构良好的框架</st>**
    <st c="57507">(</st>**<st c="57509">WAF</st>**<st c="57512">) 是一个框架，它汇集了最佳实践和建议，帮助各类组织实现Power
    Platform应用工作负载的最优架构设计。</st> <st c="57716">组织可以确保，通过遵循Power Platform WAF，他们的环境将准备好应对未来的扩展，并设置必要的控制措施，确保环境和数据的合规性与安全性。</st>
    <st c="57921">以及数据。</st>
- en: <st c="57930">We will be exploring these topics in more depth in</st> [*<st
    c="57982">Chapter 11</st>*](B22208_11.xhtml#_idTextAnchor208)<st c="57992">, where
    we will discuss more about IT operations.</st> <st c="58042">There, we will also
    discuss the security side of these best practices and the available tools to manage
    environments centrally</st> <st c="58169">and automatically.</st>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="57930">我们将在[*<st c="57982">第11章</st>*](B22208_11.xhtml#_idTextAnchor208)中深入探讨这些主题，届时将讨论更多关于IT操作的内容。</st>
    <st c="58042">在那里，我们还将讨论这些最佳实践的安全方面以及可用于集中管理环境的工具</st> <st c="58169">和自动化工具。</st>
- en: <st c="58187">Summary</st>
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="58187">摘要</st>
- en: <st c="58195">This chapter covered the</st> *<st c="58221">why</st>* <st c="58224">and</st>
    *<st c="58229">how</st>* <st c="58232">aspects of the usage of ALM and DevOps
    with Microsoft Power Platform.</st> <st c="58303">Understanding what ALM and DevOps
    bring to organizations is important since we need to show organizations that it
    is not an impossible mission, but something that every organization can and should
    implement.</st> <st c="58511">We learned this in this chapter.</st> <st c="58544">This
    is why it is important to learn how ALM/DevOps processes can be implemented and
    what tools are available, as we did in this chapter.</st> <st c="58682">Since
    it is a process of continuous learning and improvement, organizations should not
    worry if they might not get it completely right on the first try.</st> <st c="58835">Going
    through the iterations of improvement and adaptation of the process to get it
    tailored for the organization is the right approach to</st> <st c="58974">achieve
    excellence.</st>
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="58195">本章介绍了</st> *<st c="58221">为什么</st>* <st c="58224">以及</st> *<st
    c="58229">如何</st>* <st c="58232">使用 ALM 和 DevOps 与 Microsoft Power Platform 的相关内容。</st>
    <st c="58303">理解 ALM 和 DevOps 对组织带来的价值非常重要，因为我们需要向组织展示，这不是一项不可能完成的任务，而是每个组织都可以并且应该实现的目标。</st>
    <st c="58511">我们在本章中学习了这一点。</st> <st c="58544">这就是为什么学习 ALM/DevOps 流程如何实现以及有哪些工具可用如此重要，正如我们在本章中所做的那样。</st>
    <st c="58682">由于这是一个持续学习和改进的过程，组织不必担心第一次尝试时可能无法完全做到。</st> <st c="58835">通过不断迭代改进和适应过程，使其量身定制以适应组织，是实现</st>
    <st c="58974">卓越的正确方法。</st>
- en: <st c="58993">We touched on the app modernization topic and why it is important
    for organizations to review their existing legacy apps and looked into the options
    for the app modernization strategy.</st> <st c="59179">We saw that DevOps and
    adoption are at the heart of digital transformation and application modernization.</st>
    <st c="59285">This is why we looked at what the Power Platform adoption maturity
    model is and how organizations can identify at which level of maturity they are
    with each discipline for themselves.</st> <st c="59469">Most probably, they will
    be higher up on maturity level with some disciplines, while others may be lower,
    as we learned in this chapter.</st> <st c="59606">We also learned that it is important
    that the organizations create a strategy for how to improve these gaps, realize
    the potential of the platform, and see the return on investment in Power Platform.</st>
    <st c="59806">The next chapter will dive deeper into the solutions and environments.</st>
    <st c="59877">We will understand what these concepts represent in Power Platform,
    what the available types are, and what the differences between the types are.</st>
    <st c="60023">This will help us get acquainted with the managed environments and
    solutions, as well as how to use pipelines and start building our first CD using</st>
    <st c="60171">managed pipelines.</st>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="58993">我们讨论了应用现代化的话题，以及为什么组织需要审视其现有的遗留应用，并探讨了应用现代化战略的选项。</st> <st c="59179">我们看到，DevOps
    和采纳是数字化转型和应用现代化的核心。</st> <st c="59285">这就是为什么我们要了解 Power Platform 采用成熟度模型是什么，以及组织如何确定自己在每个领域的成熟度水平。</st>
    <st c="59469">很可能，组织在某些领域的成熟度较高，而在其他领域则较低，正如我们在本章中学到的那样。</st> <st c="59606">我们还了解到，组织制定如何改善这些差距的战略、实现平台潜力，并看到
    Power Platform 的投资回报是非常重要的。</st> <st c="59806">下一章将深入探讨解决方案和环境。</st> <st c="59877">我们将了解这些概念在
    Power Platform 中的含义、可用的类型是什么，以及它们之间的差异。</st> <st c="60023">这将帮助我们熟悉托管环境和解决方案，以及如何使用管道并开始构建我们的第一个
    CD，使用</st> <st c="60171">托管管道。</st>
- en: <st c="60189">Further reading</st>
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="60189">进一步阅读</st>
- en: <st c="60205">Azure</st> <st c="60212">DevOps:</st> [<st c="60220">https://azure.microsoft.com/en-us/products/devops</st>](https://azure.microsoft.com/en-us/products/devops)
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60205">Azure</st> <st c="60212">DevOps：</st> [<st c="60220">https://azure.microsoft.com/en-us/products/devops</st>](https://azure.microsoft.com/en-us/products/devops)
- en: <st c="60269">GitHub:</st> [<st c="60278">https://github.com/</st>](https://github.com/)
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60269">GitHub:</st> [<st c="60278">https://github.com/</st>](https://github.com/)
- en: <st c="60297">The Power Platform adoption maturity</st> <st c="60335">model:</st>
    [<st c="60342">https://learn.microsoft.com/en-us/power-platform/guidance/adoption/maturity-model</st>](https://learn.microsoft.com/en-us/power-platform/guidance/adoption/maturity-model)
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60297">Power Platform 采用成熟度</st> <st c="60335">模型：</st> [<st c="60342">https://learn.microsoft.com/en-us/power-platform/guidance/adoption/maturity-model</st>](https://learn.microsoft.com/en-us/power-platform/guidance/adoption/maturity-model)
- en: <st c="60423">Power Platform adoption</st> <st c="60448">guidance:</st> [<st
    c="60458">https://learn.microsoft.com/en-us/power-platform/guidance/adoption/methodology</st>](https://learn.microsoft.com/en-us/power-platform/guidance/adoption/methodology)
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="60423">Power Platform采用</st> <st c="60448">指南：</st> [<st c="60458">https://learn.microsoft.com/en-us/power-platform/guidance/adoption/methodology</st>](https://learn.microsoft.com/en-us/power-platform/guidance/adoption/methodology)
- en: <st c="0">Part 2:Implementing DevOps on Microsoft Power Platform</st>
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">第2部分：在Microsoft Power Platform上实施DevOps</st>
- en: <st c="55">In this part, we will explore the Microsoft Power Platform environments
    and solutions and their integration into DevOps-related processes.</st> <st c="195">Through
    hands-on exercises, we will get familiar with PAC CLI, Git version control system,
    Azure DevOps Services pipelines, and GitHub workflows.</st> <st c="341">We will
    also discover the latest features of Power Platform pipelines and managed environments.</st>
    <st c="437">Additionally, we will do a deep dive into DevSecOps on Power Platform
    with GitHub Advanced Security features for GitHub and Azure DevOps.</st> <st c="575">To
    conclude, we will apply our acquired knowledge to a practical example, further
    solidifying our understanding of</st> <st c="690">these concepts.</st>
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="55">在本部分中，我们将探讨Microsoft Power Platform的环境和解决方案，以及它们如何集成到DevOps相关流程中。</st>
    <st c="195">通过实际操作，我们将熟悉PAC CLI、Git版本控制系统、Azure DevOps Services管道和GitHub工作流。</st>
    <st c="341">我们还将发现Power Platform管道和托管环境的最新功能。</st> <st c="437">此外，我们将深入了解Power
    Platform上的DevSecOps，利用GitHub的高级安全功能，针对GitHub和Azure DevOps进行深入探讨。</st> <st c="575">最后，我们将把所学知识应用到一个实际案例中，进一步巩固对</st>
    <st c="690">这些概念的理解。</st>
- en: <st c="705">This part has the</st> <st c="724">following chapters:</st>
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="705">本部分包含以下章节：</st>
- en: '[*<st c="743">Chapter 4</st>*](B22208_04.xhtml#_idTextAnchor074)<st c="753">,</st>
    *<st c="755">Understanding Power Platform Environments and Solutions</st>*'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="743">第4章</st>*](B22208_04.xhtml#_idTextAnchor074)<st c="753">， *<st
    c="755">理解Power Platform环境和解决方案</st>*'
- en: '[*<st c="810">Chapter 5</st>*](B22208_05.xhtml#_idTextAnchor089)<st c="820">,</st>
    *<st c="822">Streamlining Power Platform Development with DevOps Tooling</st>*'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="810">第5章</st>*](B22208_05.xhtml#_idTextAnchor089)<st c="820">， *<st
    c="822">通过DevOps工具简化Power Platform开发</st>*'
- en: '[*<st c="881">Chapter 6</st>*](B22208_06.xhtml#_idTextAnchor103)<st c="891">,</st>
    *<st c="893">A Deep Dive into Continuous Integration/Continuous Deployment (CI/CD)
    Pipelines</st>*'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="881">第6章</st>*](B22208_06.xhtml#_idTextAnchor103)<st c="891">， *<st
    c="893">深入了解持续集成/持续部署（CI/CD）管道</st>*'
- en: '[*<st c="972">Chapter 7</st>*](B22208_07.xhtml#_idTextAnchor115)<st c="982">,</st>
    *<st c="984">An Overview of DevSecOps in Power Platform</st>*'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="972">第7章</st>*](B22208_07.xhtml#_idTextAnchor115)<st c="982">， *<st
    c="984">Power Platform中的DevSecOps概述</st>*'
- en: '[*<st c="1026">Chapter 8</st>*](B22208_08.xhtml#_idTextAnchor134)<st c="1036">,</st>
    *<st c="1038">Demonstrating ALM and DevOps Implementation</st>*'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="1026">第8章</st>*](B22208_08.xhtml#_idTextAnchor134)<st c="1036">， *<st
    c="1038">展示ALM和DevOps实施</st>*'
