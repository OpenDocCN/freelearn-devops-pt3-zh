- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Mobile App Release Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用发布管理
- en: We are now in the sustain phase of our Mobile DevOps and CI/CD progress. Once
    the application has been successfully developed and tested, it is ready to be
    released to app stores. This typically involves releasing the mobile application
    to beta testing or production and making it available to users. Mobile app release
    management is essential for businesses to optimize the user experience and maintain
    high quality. It involves planning and implementing new features/updates and hotfixes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在处于移动DevOps和CI/CD进展的持续阶段。一旦应用程序成功开发和测试完毕，它就准备好发布到应用商店。这通常包括将移动应用发布到测试版或生产版本，并使其对用户可用。移动应用发布管理对于企业优化用户体验并保持高质量至关重要。它涉及规划和实施新功能/更新和热修复。
- en: 'But releasing mobile apps requires different processes, steps, and tools. In
    this chapter, we will explore the various stages of the release management process
    for mobile applications and cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 但发布移动应用需要不同的流程、步骤和工具。在本章中，我们将探讨移动应用发布管理过程的各个阶段，并涵盖以下主题：
- en: Challenges in mobile app release management
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用发布管理中的挑战
- en: The definition of releasing mobile applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用程序发布的定义
- en: Implementing the entire CI/CD process
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施完整的CI/CD过程
- en: Ensuring compliance with app store guidelines and regulations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保遵守应用商店的指南和规定
- en: Releasing and distributing mobile applications
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布和分发移动应用程序
- en: Incorporating user feedback with beta testing
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户反馈与测试版测试结合
- en: App store submission
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用商店提交
- en: App Store Optimization (ASO)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用商店优化（ASO）
- en: Monitoring and reporting on release progress
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控和报告发布进度
- en: Implementing a release train
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施发布列车
- en: First, we’ll discuss the biggest challenges we face when releasing mobile apps
    so that we know how to tackle them with the relevant release strategy, process,
    and tooling.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将讨论在发布移动应用时遇到的最大挑战，以便知道如何通过相关的发布策略、流程和工具来应对它们。
- en: Challenges in mobile app release management
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用发布管理中的挑战
- en: As an app developer, it is crucial to understand the mobile app release management
    process to ensure smooth deployment and high user satisfaction.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名应用开发者，了解移动应用发布管理过程至关重要，以确保顺利部署并获得用户的高度满意。
- en: Having a process in place for releasing apps is essential for businesses, from
    start-ups to enterprises, as it is the best way to ensure the app’s success in
    the long run. Not only does this help to keep users engaged but it also helps
    foster a strong relationship between the business and its customers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为发布应用程序设立流程对企业至关重要，从初创公司到企业级公司，因为这是确保应用程序在长期内成功的最佳方式。这不仅有助于保持用户的参与度，还帮助建立企业与客户之间的强大关系。
- en: Additionally, businesses can reduce the risk of user dissatisfaction and costly
    technical issues by ensuring that an app remains up to date and bug-free.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过确保应用程序保持最新且无漏洞，企业可以降低用户不满意和昂贵的技术问题的风险。
- en: As a mobile-first company, customer feedback and ratings on app stores are very
    important because it gives us an indicator of the app’s quality, features, and
    overall performance – we can’t ignore them because this will help us improve our
    development and release process.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家以移动为主的公司，应用商店上的客户反馈和评分非常重要，因为它为我们提供了应用质量、功能和整体表现的指标——我们不能忽视它们，因为这将帮助我们改善开发和发布过程。
- en: 'As discussed in the previous chapters, mobile development is unique, and as
    a result, the release process will be unique and challenging due to the following
    reasons:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面章节中所讨论的，移动开发是独特的，因此，由于以下原因，发布过程将是独特且具有挑战性的：
- en: There is no straightforward process for releasing new features or hotfixes.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布新功能或热修复没有简单直接的流程。
- en: There are no prerequisite tools, services, or platforms to help us release mobile
    apps smoothly and frequently; mostly, we do this manually, which consumes the
    team’s time and effort, and the releases can be delayed for months.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布移动应用程序没有先决条件的工具、服务或平台来帮助我们顺利且频繁地发布；大多数情况下，我们是手动操作，这消耗了团队的时间和精力，而且发布可能会延迟数月。
- en: Testing on multiple devices, platforms, and configurations can be time-consuming
    and complex. Because of that, in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App Testing Strategy*, we recommended using test
    automation and cloud device testing since manual testing can take weeks to be
    confident about the new release.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多个设备、平台和配置上进行测试可能会耗时且复杂。因此，在[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施强大的移动应用测试策略*中，我们建议使用测试自动化和云设备测试，因为手动测试可能需要数周时间才能对新版本发布有足够信心。
- en: There are specific policies and review procedures for each app store. It can
    be challenging to navigate these procedures and ensure compliance with app store
    rules, which may cause delays when launching apps.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个应用商店都有具体的政策和审查程序。 navigating这些程序并确保遵守应用商店的规则可能会很有挑战性，且可能会导致应用发布延迟。
- en: You may need to revert to a previous version when bugs are found after a release
    has been deployed. It can be difficult to manage several software versions and
    handle rollbacks efficiently.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在发布后发现错误时，您可能需要恢复到先前的版本。管理多个软件版本并有效处理回滚可能会很困难。
- en: Releasing cross-platform apps is challenging because you manage two apps with
    different requirements, guides, and processes.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布跨平台应用程序具有挑战性，因为您需要管理两个具有不同要求、指南和流程的应用。
- en: The definition of releasing mobile applications
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用发布的定义
- en: When a mobile application is released, it becomes accessible to customers who
    can download, install, and use it on their devices. This involves several stages,
    including building, testing, and releasing the app on app stores or other distribution
    platforms. The end goal is to provide customers with a dependable, secure, and
    functional app that meets their needs and expectations.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当移动应用发布后，客户可以下载、安装并在其设备上使用该应用。这涉及多个阶段，包括构建、测试和将应用发布到应用商店或其他分发平台。最终目标是为客户提供一个可靠、安全且功能齐全的应用，满足他们的需求和期望。
- en: Developing a solid release strategy for mobile apps is crucial for ensuring
    a successful launch and long-term success. Here’s a step-by-step guide to defining
    a release strategy for your mobile app.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 制定一个稳健的移动应用发布策略对于确保成功的上线和长期成功至关重要。以下是为您的移动应用定义发布策略的分步指南。
- en: Defining a release strategy
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义发布策略
- en: Having a **release strategy** for a mobile application is essential to ensure
    successful release management. This strategy should consider various aspects,
    such as the frequency of releases, the types of released features, the testing
    and validation process, the risks associated with each release, and the best methods
    for mitigating them.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个**发布策略**对确保成功的发布管理至关重要。这个策略应考虑各种方面，例如发布频率、发布功能类型、测试和验证过程、每次发布的风险以及减轻这些风险的最佳方法。
- en: '*Release with confidence and make your app launch successfully with tools and
    strategies to help publish, manage, and distribute your app worldwide.*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*自信发布并通过工具和策略帮助全球发布、管理和分发应用程序，以确保您的应用成功上线。*'
- en: A mobile app release strategy is a well-planned approach to launching, updating,
    and maintaining a mobile application. It outlines the key steps, milestones, and
    resources required to ensure a smooth release process while minimizing disruptions
    and maximizing user satisfaction. A well-defined release strategy can help you
    manage expectations, allocate resources, and measure success.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用发布策略是一个精心规划的方法，旨在启动、更新和维护移动应用程序。它概述了确保顺利发布过程的关键步骤、里程碑和所需资源，同时尽量减少干扰并最大化用户满意度。一个明确的发布策略可以帮助您管理期望，分配资源并衡量成功。
- en: Understanding the release management process for mobile apps
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解移动应用发布管理流程
- en: 'Release management for mobile apps involves planning, scheduling, coordinating,
    and deploying new versions or updates of a mobile application to users. This process
    is crucial if you wish to regularly update the app with new features, bug fixes,
    and security patches. But there are different steps we should consider before,
    during, and after the release process; let’s explore them together:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用发布管理涉及规划、安排、协调和向用户部署新版本或更新。这个过程对希望定期更新应用的新功能、修复程序和安全补丁至关重要。但是，在发布过程中，我们需要考虑不同的步骤；让我们一起来探索它们：
- en: 'Before the release:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布前：
- en: Plan the release
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划发布
- en: Build and test the app
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和测试应用
- en: 'Prepare the release:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备发布：
- en: Manage code signing
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理代码签名
- en: Prepare `versionCode` and `versionName`
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备`versionCode`和`versionName`
- en: Release the app
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布应用
- en: 'Choose the right release channel:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择合适的发布渠道：
- en: Beta testing
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试版测试
- en: App store submission
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用商店提交
- en: 'Launch the app:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动应用：
- en: In-app update
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用内更新
- en: Monitor the app’s performance
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控应用的性能
- en: 'Post-release:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布后：
- en: Handle user feedback and reviews
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理用户反馈和评论
- en: Analyze app performance data
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析应用性能数据
- en: Plan for future releases
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划未来的版本发布
- en: Mobile release train
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动发布列车
- en: App Store Optimization (ASO)
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用商店优化（ASO）
- en: To learn more about each stage, let’s take a closer look at each one.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更深入了解每个阶段，让我们详细查看每一个阶段。
- en: Before the release
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布前
- en: This is the initial stage where we should, as a team, define and agree on the
    release process, including the rollout strategy, the responsibilities, and more.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是初始阶段，在这个阶段，我们应该作为一个团队，定义并达成一致关于发布过程的内容，包括发布策略、责任划分等。
- en: Planning the release
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发布规划
- en: Once the release strategy has been defined, developing an implementation process
    is essential. This process should include *scheduling releases*, *managing code
    changes*, and *ensuring the app meets quality standards*. It should also include
    steps to ensure the app is tested and validated before release.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦发布策略已被定义，开发实现过程就显得尤为重要。这个过程应该包括*发布安排*、*管理代码更改*和*确保应用符合质量标准*。还应包括确保应用在发布前经过测试和验证的步骤。
- en: Building and testing the app
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建和测试应用
- en: As mentioned in the previous chapters, we should use a **continuous integration**
    (**CI**) pipeline to build and test mobile apps and ensure we don’t have any blockers
    or issues that can delay the release process. We can then move on to **continuous
    delivery and continuous deployment** (**CD**) to release the apps to app stores.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如前章所述，我们应该使用**持续集成**（**CI**）流水线来构建和测试移动应用，确保我们没有任何阻碍因素或问题会延迟发布过程。然后，我们可以继续进行**持续交付和持续部署**（**CD**），将应用发布到应用商店。
- en: Continuous delivery and deployment (CD)
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 持续交付和部署（CD）
- en: As mentioned in [*Chapter 3*](B18113_03.xhtml#_idTextAnchor083), *Mobile DevOps
    Fundamentals*, **continuous delivery** automatically delivers the builds that
    pass the CI checks to production environments (such as *staging*), where they
    will be tested and reviewed before being released into production.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如在[*第 3 章*](B18113_03.xhtml#_idTextAnchor083)《移动 DevOps 基础》一书中提到，**持续交付**会自动将通过CI检查的构建交付到生产环境（例如*暂存环境*），在那里进行测试和审查，确保其符合要求后再发布到生产环境。
- en: '*The goal is to automate development and deployment processes to ensure the
    rapid, reliable, and budget-friendly delivery of* *mobile apps.*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*目标是自动化开发和部署过程，以确保移动应用的快速、可靠和经济的交付。*'
- en: 'The process of CI/CD for mobile apps mainly comprises the following steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的CI/CD过程主要包括以下几个步骤：
- en: Release the build to the QA teams so that they can do additional checks and
    tests, such as exploratory testing, to ensure that the build meets the expectations.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将构建版本发布给QA团队，以便他们进行额外的检查和测试，例如探索性测试，以确保构建符合预期。
- en: Release the build to beta testers if the company or the team is already participating
    in the program.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果公司或团队已经参与该计划，可以将构建版本发布给测试人员。
- en: If everything is fine after that, the release manager or the person responsible
    for the release process can approve the build and release it to the relevant app
    stores or production environments.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，发布经理或负责发布过程的人可以批准构建并将其发布到相关的应用商店或生产环境中。
- en: 'These steps can be seen in the following figure:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下图中可以看到这些步骤：
- en: '![Figure 6.1 – The continuous delivery process](img/Figure_06.01_B18113.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – 持续交付过程](img/Figure_06.01_B18113.jpg)'
- en: Figure 6.1 – The continuous delivery process
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 持续交付过程
- en: '**Continuous deployment** is often part of the CI/CD pipeline, which means
    that the code that’s deployed to the repository will be automatically deployed
    to production – or in our case, the mobile apps will be deployed to the relevant
    app stores. CI/CD pipelines are often referred to as the combination of these
    practices:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续部署**通常是CI/CD流水线的一部分，这意味着部署到代码库的代码将自动部署到生产环境——在我们这里，移动应用将自动部署到相关的应用商店。CI/CD流水线通常被称为这些实践的结合体：'
- en: '![Figure 6.2 – The continuous deployment process](img/Figure_06.02_B18113.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 持续部署过程](img/Figure_06.02_B18113.jpg)'
- en: Figure 6.2 – The continuous deployment process
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 持续部署过程
- en: The continuous deployment process automates the process of deploying your app
    build, preventing human intervention. The only thing that will prevent a new change
    from being deployed into production is a failed build or test. This is used to
    speed up app production and get customer feedback faster.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 持续部署过程自动化了应用构建的部署流程，避免了人工干预。阻止新更改部署到生产环境的唯一因素是构建或测试失败。这一流程有助于加快应用生产，并更快速地获得客户反馈。
- en: Note
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To learn how the GitHub Mobile Team automates its release process with GitHub
    Actions, go to [https://github.blog/2022-01-12-how-we-ship-github-mobile-every-week/](https://github.blog/2022-01-12-how-we-ship-github-mobile-every-week/).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 GitHub 移动团队如何通过 GitHub Actions 自动化发布流程，请访问[https://github.blog/2022-01-12-how-we-ship-github-mobile-every-week/](https://github.blog/2022-01-12-how-we-ship-github-mobile-every-week/)。
- en: Preparing a release version and tag
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备发布版本和标签
- en: We need to perform different steps here based on the application. For example,
    in `versionCode` and `versionName` in the app-level `build.gradle` file.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要根据应用的不同执行不同的步骤。例如，在应用级别的 `build.gradle` 文件中，需要处理 `versionCode` 和 `versionName`。
- en: The next step is to generate a signed APK or app bundle using the **Generate
    Signed Bundle / APK...** option in the **Build** menu; we will cover code signing
    and generating bundle files later in this section. This can also be done on the
    CI server automatically.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤是使用 **Build** 菜单中的 **Generate Signed Bundle / APK...** 选项生成签名的 APK 或应用包；本节后面我们将介绍代码签名和生成包文件的过程。这也可以在
    CI 服务器上自动完成。
- en: Meanwhile, for **iOS applications**, there are different steps, involving updating
    the version and build numbers in the **General** tab of your app’s target settings.
    Once you’ve done this, select **Generic iOS Device** as the build target, archive
    the app from **Product**, then select the **Archive** menu. We will cover how
    to code-sign and archive the app later in this section.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，对于 **iOS 应用**，有不同的步骤，涉及在应用目标设置的 **General** 选项卡中更新版本和构建号。完成后，选择 **Generic
    iOS Device** 作为构建目标，从 **Product** 菜单归档应用，然后选择 **Archive** 菜单。本节后面我们将介绍如何进行代码签名和归档应用。
- en: Once you’ve done this, the release tag and release notes will be ready in the
    GitHub repository for the next release.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，GitHub 仓库中的发布标签和发布说明将为下一个发布版本做好准备。
- en: Preparing the release
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备发布
- en: Releasing any app to the Apple App Store, Google Play Store, or any other store
    requires certificates, provisioning profiles, or **Keystores** to identify that
    the apps have been built by a trusted company or developer.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将任何应用发布到 Apple App Store、Google Play Store 或其他任何商店，都需要证书、配置文件或 **Keystores**
    来识别应用已由受信任的公司或开发者构建。
- en: As a result, we need to manage the code-signing process before building the
    app for release.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要在构建发布应用之前管理代码签名过程。
- en: Setting up your developer account
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置开发者账户
- en: The first step in the process is setting up an *Apple developer account*. This
    requires you to provide your name, address, and contact details. You’ll also need
    to provide payment information and agree to the *Apple Developer Program License
    Agreement*. Once your account has been set up, you can access the *Apple Developer
    Portal*. The same steps must be followed for a Google developer account so that
    you can release the app to the Google Play Store.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程的第一步是设置 *Apple 开发者账户*。您需要提供姓名、地址和联系方式，还需要提供支付信息并同意 *Apple Developer Program
    License Agreement*。设置好账户后，您可以访问 *Apple Developer Portal*。对于 Google 开发者账户也需要执行相同的步骤，以便将应用发布到
    Google Play 商店。
- en: Managing code signing
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理代码签名
- en: '**Code signing** is the process of digitally signing an application’s executable
    code, ensuring its integrity and authenticity. This process plays a crucial role
    in the Android app development life cycle as it helps confirm that the app comes
    from a trusted source and hasn’t been tampered with since it was signed.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码签名** 是对应用程序可执行代码进行数字签名的过程，确保其完整性和真实性。这个过程在 Android 应用开发生命周期中至关重要，它帮助确认应用来自受信任的来源，并且自签名以来没有被篡改。'
- en: Let’s explain the required code-signing steps for Android and iOS.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释一下 Android 和 iOS 所需的代码签名步骤。
- en: First, let’s start with the steps for code signing for Android Apps.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从 Android 应用的代码签名步骤开始。
- en: 'To sign an Android app ([https://developer.android.com/studio/publish/app-signing](https://developer.android.com/studio/publish/app-signing)),
    follow these steps:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要对 Android 应用进行签名（[https://developer.android.com/studio/publish/app-signing](https://developer.android.com/studio/publish/app-signing)），请按照以下步骤操作：
- en: Set up a developer account ([https://play.google.com/console/](https://play.google.com/console/)).
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个开发者账户（[https://play.google.com/console/](https://play.google.com/console/)）。
- en: Create a unique private-public key pair using the keytool utility ([https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html](https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html)).
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 keytool 工具创建一个唯一的私钥-公钥对（[https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html](https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html)）。
- en: Sign the app with their private key and embed the public key into a self-signed
    certificate.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用私钥签署应用程序，并将公钥嵌入到自签名证书中。
- en: Android Studio or the *apksigner* tool is used to package and sign the app using
    the generated key pair.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 或 *apksigner* 工具用于使用生成的密钥对打包并签署应用程序。
- en: The Android system verifies the app’s signature during installation to ensure
    its integrity and authenticity.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Android 系统在安装过程中验证应用程序的签名，以确保其完整性和真实性。
- en: 'To generate a private-public key pair and self-signed certificate, follow these
    steps:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成私钥-公钥对和自签名证书，请按照以下步骤操作：
- en: Open a Terminal or command prompt.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端或命令提示符。
- en: 'Execute the following command:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE0]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Provide the required information when prompted, such as your name, organization,
    and location.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示时提供所需信息，如你的姓名、组织和位置。
- en: Choose a strong password for your keystore and key pair.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个强密码用于你的密钥库和密钥对。
- en: 'Your key pair and self-signed certificate will be stored in the specified `.jks`
    file, as shown in the following screenshot:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你的密钥对和自签名证书将存储在指定的 `.jks` 文件中，如下图所示：
- en: '![Figure 6.3 – keytool output](img/Figure_06.03_B18113.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – keytool 输出](img/Figure_06.03_B18113.jpg)'
- en: Figure 6.3 – keytool output
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – keytool 输出
- en: 'To sign your app in Android Studio, follow these steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Android Studio 中签署应用程序，请按照以下步骤操作：
- en: 'In Android Studio, open the **Build** menu and select **Generate Signed Bundle
    /** **APK...**:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Android Studio 中，打开 **构建** 菜单并选择 **生成已签名的 Bundle / APK...**：
- en: '![Figure 6.4 – Generate Signed Bundle / APK…](img/Figure_06.04_B18113.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – 生成已签名的 Bundle / APK…](img/Figure_06.04_B18113.jpg)'
- en: Figure 6.4 – Generate Signed Bundle / APK…
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 生成已签名的 Bundle / APK…
- en: 'Choose `.aab` (the Android App Bundle). Then, click **Next**:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 `.aab`（Android 应用包）。然后，点击 **下一步**：
- en: '![Figure 6.5 – Selecting Android App Bundle or APK](img/Figure_06.05_B18113.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5 – 选择 Android 应用包或 APK](img/Figure_06.05_B18113.jpg)'
- en: Figure 6.5 – Selecting Android App Bundle or APK
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5 – 选择 Android 应用包或 APK
- en: 'Click `my-release-key.jks`):'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `my-release-key.jks`：
- en: "![Figure 6.6 – Selecting \uFEFFKey store path](img/Figure_06.06_B18113.jpg)"
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6 – 选择密钥库路径](img/Figure_06.06_B18113.jpg)'
- en: Figure 6.6 – Selecting Key store path
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6 – 选择密钥库路径
- en: Enter the keystore and key pair passwords and the key alias.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入密钥库和密钥对密码以及密钥别名。
- en: 'Choose your **Destination Folder** and **Build Variants** parameters and then
    click **Finish**:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你的 **目标文件夹** 和 **构建变体** 参数，然后点击 **完成**：
- en: '![Figure 6.7 – Selecting Build Variants](img/Figure_06.07_B18113.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7 – 选择构建变体](img/Figure_06.07_B18113.jpg)'
- en: Figure 6.7 – Selecting Build Variants
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7 – 选择构建变体
- en: 'Android Studio will create a signed App Bundle ready for distribution, as shown
    in the following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 将创建一个已签名的 App Bundle，准备好分发，如下图所示：
- en: '![Figure 6.8 – Gradle running the tasks](img/Figure_06.08_B18113.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8 – Gradle 执行任务](img/Figure_06.08_B18113.jpg)'
- en: Figure 6.8 – Gradle running the tasks
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8 – Gradle 执行任务
- en: 'In the release folder, you can find the generated `.aab` file, as shown in
    the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布文件夹中，你可以找到生成的 `.aab` 文件，如下图所示：
- en: '![Figure 6.9 – The .aab file](img/Figure_06.09_B18113.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.9 – .aab 文件](img/Figure_06.09_B18113.jpg)'
- en: Figure 6.9 – The .aab file
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9 – .aab 文件
- en: Note
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: Keep your signing key and keystore file secure – they are used to identify and
    verify your app. You cannot update or maintain your app if you lose your signing
    key or Keystore file.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 保持你的签名密钥和密钥库文件的安全——它们用于标识和验证你的应用程序。如果你丢失了签名密钥或密钥库文件，将无法更新或维护你的应用程序。
- en: Now, let’s look at the steps for code signing for iOS apps.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下 iOS 应用程序代码签名的步骤。
- en: 'To sign an iOS app, follow these steps:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要签署 iOS 应用程序，请按照以下步骤操作：
- en: Log in or create an Apple Developer Account ([https://developer.apple.com/](https://developer.apple.com/))
    if you don’t already have one.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录或创建一个 Apple 开发者账户（[https://developer.apple.com/](https://developer.apple.com/)），如果你还没有的话。
- en: Go to the Apple Developer Portal and select **Certificates, Identifiers & Profiles**
    from the dashboard.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 Apple 开发者门户，并从仪表板选择 **证书、标识符与描述文件**。
- en: '**Certificates** are digital files that are used to verify the identity of
    the app developer and sign the app code.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**证书**是用来验证应用开发者身份并签署应用代码的数字文件。'
- en: 'There are two types of certificates:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的证书：
- en: A **development certificate**, which is used during the app development process
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发证书**，用于应用开发过程中'
- en: An **App Store (Distribution) Certificate**, which is used to distribute the
    apps to the Apple App Store
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**App Store（发布）证书**，用于将应用分发到 Apple App Store'
- en: '**Identifiers** are unique identifiers for your app that are used to associate
    your app with your developer account, enable certain app features such as push
    notifications, and create provisioning profiles.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**标识符**是用于将你的应用与开发者账户关联、启用某些应用功能（如推送通知）并创建配置文件的唯一标识符。'
- en: 'There are three types of identifiers:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的标识符：
- en: '**App ID**: This identifies a specific app'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用 ID**：此 ID 用于标识特定应用'
- en: '**Bundle ID**: This identifies the app within a particular app group'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包 ID**：此 ID 用于标识特定应用组内的应用'
- en: '**Team ID**: This identifies the developer or organization'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**团队 ID**：此 ID 用于标识开发者或组织'
- en: '**Provisioning profiles** are files that contain information about your app,
    your certificate, and your device identifiers. These profiles allow your app to
    run on iOS devices and access certain app features, such as push notifications,
    in-app purchases, and iCloud.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置文件**是包含关于你的应用、证书和设备标识符的文件。这些配置文件允许你的应用在 iOS 设备上运行，并访问某些应用功能，如推送通知、应用内购买和
    iCloud。'
- en: 'There are two types of provisioning profiles:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的配置文件：
- en: A **Development Provisioning Profile**, which is used during the app development
    process.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发配置文件**，用于应用开发过程中。'
- en: 'A **Distribution Provisioning Profile**, which is used to distribute your app
    on the App Store, as shown in the following screenshot:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布配置文件**，用于将应用分发到 App Store，如下图所示：'
- en: '![Figure 6.10 – Apple Developer certificates](img/Figure_06.10_B18113.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.10 – Apple 开发者证书](img/Figure_06.10_B18113.jpg)'
- en: Figure 6.10 – Apple Developer certificates
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.10 – Apple 开发者证书
- en: 'In the Apple Developer portal, open the **Certificates, Identifiers & Profiles**
    ([https://developer.apple.com/account/resources/certificates/list](https://developer.apple.com/account/resources/certificates/list))
    page, then click on the **+** button to create a new certificate. Choose **iOS
    App Development** and click **Continue**, as shown in the following screenshot:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Apple 开发者门户中，打开**证书、标识符与配置文件**([https://developer.apple.com/account/resources/certificates/list](https://developer.apple.com/account/resources/certificates/list))页面，然后点击**+**按钮创建新的证书。选择**iOS
    应用开发**并点击**继续**，如下图所示：
- en: '![Figure 6.11 – Creating a new Apple Developer certificate](img/Figure_06.11_B18113.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.11 – 创建新的 Apple 开发者证书](img/Figure_06.11_B18113.jpg)'
- en: Figure 6.11 – Creating a new Apple Developer certificate
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11 – 创建新的 Apple 开发者证书
- en: Follow the on-screen instructions to generate a **Certificate Signing Request**
    (**CSR**) ([https://developer.apple.com/help/account/create-certificates/create-a-certificate-signing-request](https://developer.apple.com/help/account/create-certificates/create-a-certificate-signing-request))
    from your Mac’s Keychain Access app. Upload the CSR and download the generated
    development certificate.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 按照屏幕上的指示从 Mac 的钥匙串访问应用生成**证书签名请求**（**CSR**）([https://developer.apple.com/help/account/create-certificates/create-a-certificate-signing-request](https://developer.apple.com/help/account/create-certificates/create-a-certificate-signing-request))。上传
    CSR 并下载生成的开发证书。
- en: 'Next, you’ll need to create an App ID. This unique identifier links your app
    to its provisioning profile and certificates. Click **Identifiers** and then the
    **+** button. Fill in the necessary details and click **Continue** to register
    your App ID, as shown in the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要创建一个应用 ID。这个唯一标识符将你的应用与其配置文件和证书关联起来。点击**标识符**，然后点击**+**按钮。填写必要的详细信息，点击**继续**注册你的应用
    ID，如下图所示：
- en: '![Figure 6.12 – Creating an app identifier](img/Figure_06.12_B18113.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.12 – 创建应用标识符](img/Figure_06.12_B18113.jpg)'
- en: Figure 6.12 – Creating an app identifier
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.12 – 创建应用标识符
- en: 'Now, let’s create a provisioning profile. Click **Profiles** and then the **+**
    button. Choose **iOS App Development** and click **Continue**. Select the App
    ID you just created, the development certificate, and the devices you want to
    use for testing. Give your provisioning profile a name and click **Generate**,
    as shown in the following screenshot:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个配置文件。点击**Profiles**，然后点击**+**按钮。选择**iOS App Development**并点击**Continue**。选择你刚创建的
    App ID、开发证书，以及你想用于测试的设备。为你的配置文件命名并点击**Generate**，如下面的截图所示：
- en: '![Figure 6.13 – Register a New Provisioning Profile](img/Figure_06.13_B18113.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.13 – 注册新配置文件](img/Figure_06.13_B18113.jpg)'
- en: Figure 6.13 – Register a New Provisioning Profile
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.13 – 注册新配置文件
- en: 'Select the App ID we created previously and configure the provisioning profile,
    as shown in the following screenshot:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 选择我们之前创建的 App ID，并配置配置文件，如下面的截图所示：
- en: "![Figure 6.14 – Generate a Provisioning Profile | Select \uFEFFan App ID](img/Figure_06.14_B18113.jpg)"
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.14 – 生成配置文件 | 选择一个 App ID](img/Figure_06.14_B18113.jpg)'
- en: Figure 6.14 – Generate a Provisioning Profile | Select an App ID
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.14 – 生成配置文件 | 选择一个 App ID
- en: Open your Xcode project and go to the **Signing & Capabilities** tab. Click
    the **Team** drop-down menu and select your developer account. Xcode should automatically
    handle the provisioning profile and certificate for you. If not, click **Import
    Profile** and locate your downloaded provisioning profile.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的 Xcode 项目并进入**Signing & Capabilities**标签。点击**Team**下拉菜单，选择你的开发者账户。Xcode
    应该会自动处理配置文件和证书。如果没有，点击**Import Profile**并找到你下载的配置文件。
- en: Once you’ve set up your account, provisioning profile, App ID, and certificates,
    you’ll need to prepare your app for release. This involves completing tasks such
    as creating screenshots and setting up the app’s metadata.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置好账户、配置文件、App ID 和证书，你就需要为发布准备你的应用。这包括完成创建截图和设置应用元数据等任务。
- en: 'But before that, you need to upload and save your credentials to your CI provider
    to sign the app automatically in the release process. For example, **Bitrise**
    provides a tab in the Workflow Editor where you can upload your provisioning profile
    and code-signing certificate so that they can be used in the iOS CI/CD pipeline:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 但在此之前，你需要上传并保存你的凭据到 CI 提供商，以便在发布过程中自动签署应用。例如，**Bitrise** 在工作流编辑器中提供了一个标签，你可以上传你的配置文件和代码签名证书，以便它们能在
    iOS CI/CD 流水线中使用：
- en: '![Figure 6.15 – Bitrise’s iOS Code Signing & Files tab](img/Figure_06.15_B18113.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.15 – Bitrise 的 iOS 代码签名与文件标签](img/Figure_06.15_B18113.jpg)'
- en: Figure 6.15 – Bitrise’s iOS Code Signing & Files tab
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.15 – Bitrise 的 iOS 代码签名与文件标签
- en: 'For Android, you can upload the Keystore file to sign your apps in the CI/CD
    pipeline:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Android，你可以上传 Keystore 文件以在 CI/CD 流水线中签署你的应用：
- en: '![Figure 6.16 – Bitrise’s Android Code Signing & Files tab](img/Figure_06.16_B18113.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.16 – Bitrise 的 Android 代码签名与文件标签](img/Figure_06.16_B18113.jpg)'
- en: Figure 6.16 – Bitrise’s Android Code Signing & Files tab
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.16 – Bitrise 的 Android 代码签名与文件标签
- en: This should also be the same case with GitHub Actions; you can store the credentials
    on GitHub Secrets ([https://docs.github.com/en/actions/reference/encrypted-secrets](https://docs.github.com/en/actions/reference/encrypted-secrets))
    so that they can be quickly passed into GitHub Actions directly. You can also
    use Codemagic for iOS ([https://docs.codemagic.io/yaml-code-signing/signing-ios/](https://docs.codemagic.io/yaml-code-signing/signing-ios/))
    and Android ([https://docs.codemagic.io/yaml-code-signing/signing-android/](https://docs.codemagic.io/yaml-code-signing/signing-android/))
    using the same approach or any other CI provider.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GitHub Actions 中也应该是一样的情况；你可以将凭据存储在 GitHub Secrets 中（[https://docs.github.com/en/actions/reference/encrypted-secrets](https://docs.github.com/en/actions/reference/encrypted-secrets)），这样可以快速将凭据传递给
    GitHub Actions。你还可以使用 Codemagic 来处理 iOS（[https://docs.codemagic.io/yaml-code-signing/signing-ios/](https://docs.codemagic.io/yaml-code-signing/signing-ios/)）和
    Android（[https://docs.codemagic.io/yaml-code-signing/signing-android/](https://docs.codemagic.io/yaml-code-signing/signing-android/)），采用相同的方法，或使用任何其他
    CI 提供者。
- en: Note
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: Alternatively, you can connect to an Apple service (such as App Store Connect
    or the Apple Developer Portal) with the API key to automatically upload iOS apps
    to the App Store.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以通过 API 密钥连接到 Apple 服务（如 App Store Connect 或 Apple Developer Portal），以自动上传
    iOS 应用到 App Store。
- en: Managing certificates and profiles in large mobile teams using fastlane match
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 fastlane match 管理大规模移动团队中的证书和配置文件
- en: In a large and scalable mobile team, it is crucial to manage certificates and
    profiles in a centralized and secure manner to prevent conflicts and guarantee
    that all team members are utilizing the latest, uniform files.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个大型且可扩展的移动团队中，集中且安全地管理证书和配置文件至关重要，以防止冲突并确保所有团队成员使用最新的统一文件。
- en: Tools such as **fastlane** and **fastlane match** ([https://docs.fastlane.tools/actions/match/](https://docs.fastlane.tools/actions/match/))
    can be used to manage certificates and profiles in a large team. These tools automatically
    download the latest versions of developers’ signing certificates and provisioning
    profiles when they build and release apps from a Git repository.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 工具如**fastlane**和**fastlane match**（[https://docs.fastlane.tools/actions/match/](https://docs.fastlane.tools/actions/match/)）可用于在大型团队中管理证书和配置文件。这些工具会在构建和发布应用时自动下载开发人员的最新签名证书和配置文件。
- en: 'Files should be stored and accessed according to the **Matchfile** in the repository.
    Once the certificates and profiles have been downloaded, team members can build
    and release their app using fastlane match, as shown in the following figure:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 文件应根据仓库中的**Matchfile**进行存储和访问。一旦证书和配置文件被下载，团队成员可以使用fastlane match构建和发布应用，如下图所示：
- en: '![Figure 6.17 – How fastlane match works](img/Figure_06.17_B18113.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.17 – fastlane match 的工作原理](img/Figure_06.17_B18113.jpg)'
- en: Figure 6.17 – How fastlane match works
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.17 – fastlane match 的工作原理。
- en: Using fastlane match helps eliminate many common issues related to code signing,
    such as expired certificates or mismatched provisioning profiles. It’s a recommended
    approach to managing code signing securely and collaboratively. In [*Chapter 9*](B18113_09.xhtml#_idTextAnchor342),
    *Mobile DevOps Best Practices*, we will discuss how to use fastlane in building,
    testing, and releasing mobile apps.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用fastlane match有助于消除许多与代码签名相关的常见问题，如过期的证书或不匹配的配置文件。这是一个推荐的安全且协作的代码签名管理方法。在[*第9章*](B18113_09.xhtml#_idTextAnchor342)，*移动DevOps最佳实践*中，我们将讨论如何在构建、测试和发布移动应用时使用fastlane。
- en: Releasing the app
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布应用。
- en: 'The **release candidate** (**RC**) build is ready to go out to our beta testers
    when the following criteria have been met:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**发布候选版本**（**RC**）构建在满足以下条件时准备好交付给我们的测试人员：'
- en: A *branch* is created for addressing any hotfixes needed for the release candidate
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为处理发布候选版本所需的任何紧急修复，创建了一个*分支*。
- en: The *build* is generated with a proper version number and uploaded to TestFlight/Firebase
    App Distribution, depending on the application’s type
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*构建*是根据适当的版本号生成并上传到TestFlight/Firebase App Distribution，具体取决于应用的类型。'
- en: All *unit*, *UI*, and *snapshot tests* have passed
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有的*单元测试*、*UI测试*和*快照测试*都已通过。
- en: An issue is created to track the *release process*
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个问题来跟踪*发布过程*。
- en: '*Release notes* are ready'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*发布说明*已准备好。'
- en: The build can be automatically submitted to the App Store or Google Play Store
    if there are no issues or can be manually approved by the release manager and
    stakeholders
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有问题，构建可以自动提交到App Store或Google Play Store，或者可以由发布经理和相关人员手动批准。
- en: This workflow or pipeline can be implemented with your CI provider, as discussed
    in [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118), *Achieving Continuous Integration
    and Delivery with Mobile DevOps*, but as mentioned previously, it should support
    integration with different tools and services to make the release process easy.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工作流或管道可以通过你的CI提供商实现，如在[*第4章*](B18113_04.xhtml#_idTextAnchor118)中讨论的，*通过移动DevOps实现持续集成与交付*，但如前所述，它应支持与不同工具和服务的集成，以简化发布过程。
- en: 'The team needs to generate an app binary for a given build. Then, it must define
    a job that contains multiple steps for generating a build, going through the test
    cases, and then archiving and uploading it to TestFlight for iOS or Firebase App
    Distribution for Android. You can create a dedicated branch for each version you
    ship so that you can go back and cherry-pick any changes you want to include,
    as shown in the following figure:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 团队需要为给定的构建生成一个应用二进制文件。然后，必须定义一个包含多个步骤的任务，生成构建，执行测试用例，然后将其归档并上传到TestFlight（iOS）或Firebase
    App Distribution（Android）。你可以为每个版本创建一个专用的分支，这样可以随时回溯并挑选任何想要包含的更改，如下图所示：
- en: '![Figure 6.18 – Mobile release cycle](img/Figure_06.18_B18113.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.18 – 移动发布周期](img/Figure_06.18_B18113.jpg)'
- en: Figure 6.18 – Mobile release cycle
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18 – 移动发布周期。
- en: Now, let’s learn more about the different release stages, such as beta testing
    and app store submission.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入了解不同的发布阶段，例如beta测试和应用商店提交。
- en: Beta testing
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Beta测试
- en: Mobile app beta testing is a crucial stage in the creation process. Before the
    official release, it enables developers to test their apps on actual mobile devices
    and gather user feedback. A limited group of users who are willing to test the
    release and offer comments on its features, usability, and overall user experience
    is often used for beta testing.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的Beta测试是创建过程中的一个关键阶段。在正式发布之前，它使开发者能够在实际移动设备上测试他们的应用并收集用户反馈。通常，Beta测试使用一小群愿意测试发布版本并提供功能、可用性和整体用户体验反馈的用户。
- en: 'The beta testing phase of the mobile app development process is crucial because
    it gives developers a chance to evaluate the usability and functionality of their
    app before making it available to the general public. However, it can be intimidating
    to build up an effective beta testing program due to the following reasons:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用开发过程中的Beta测试阶段至关重要，因为它为开发者提供了在公开发布前评估应用的可用性和功能的机会。然而，由于以下原因，构建有效的Beta测试计划可能会让人感到紧张：
- en: '**Fear of negative feedback**: When putting an app in the hands of beta testers,
    there is a fear that they might provide negative feedback or encounter critical
    bugs that could potentially undermine the confidence of the development team.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**害怕负面反馈**：当将应用交给Beta测试人员时，可能会担心他们会提供负面反馈或遇到可能会削弱开发团队信心的关键漏洞。'
- en: '**Lack of resources**: Creating a proper beta testing program requires resources,
    such as time, money, and personnel. Coordinating with testers, managing feedback,
    and implementing changes can be resource-intensive, especially for smaller development
    teams or indie developers.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源不足**：创建一个合适的Beta测试计划需要资源，如时间、金钱和人员。与测试人员协调、管理反馈以及实施更改可能会消耗大量资源，特别是对于较小的开发团队或独立开发者来说。'
- en: '**Identifying the right testers**: Finding the right pool of beta testers who
    are genuinely interested in providing valuable feedback and representing the target
    audience can be challenging.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确定合适的测试人员**：找到真正有兴趣提供有价值反馈并代表目标用户群的Beta测试人员可能具有挑战性。'
- en: '**Time constraints**: The beta testing phase can introduce delays, which might
    be perceived as a barrier to rapid deployment.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间限制**：Beta测试阶段可能会引入延迟，这可能会被视为快速部署的障碍。'
- en: There are different steps to setting up the beta testing program for your apps.
    Let’s take a look.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 设置应用的Beta测试计划有不同的步骤。我们来看一下。
- en: Defining the scope of the app
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义应用的范围
- en: The first step in setting up a successful mobile app beta testing program is
    to define the scope of the app. This should include a clear description of the
    features of the app, its target users, and the platforms on which it will be available.
    This is essential to ensure the app is tested in the correct environment.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 设置成功的移动应用Beta测试计划的第一步是定义应用的范围。这应该包括对应用功能、目标用户以及应用可用平台的清晰描述。这对于确保应用在正确的环境中进行测试至关重要。
- en: In addition, developers should consider what metrics they want to track during
    beta testing. This could include the number of downloads, usage statistics, and
    user feedback.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，开发者应该考虑在Beta测试过程中想要跟踪哪些指标。这可能包括下载数量、使用统计数据和用户反馈。
- en: Once the scope of the app has been established, it is time to set up the beta
    testing program.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用的范围确定，就可以开始设置Beta测试计划。
- en: Preparing for launch
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备发布
- en: Once the beta testing program has been set up, preparing for the app’s launch
    is essential. This involves ensuring that any issues that were identified during
    the testing phase are addressed and that the app is ready for public release.
    Developers should also consider how they will market the app and what steps they
    will take to ensure a successful launch.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Beta测试计划建立完成，准备应用的发布至关重要。这包括确保在测试阶段识别出的任何问题都得到了处理，并且应用已准备好公开发布。开发者还应考虑如何推广应用以及采取哪些措施以确保成功的发布。
- en: For iOS, developers need to create an App Store Connect account ([https://appstoreconnect.apple.com/login](https://appstoreconnect.apple.com/login))
    and submit their app through the platform. For Android, they need a Google Play
    Console account ([https://play.google.com/console/about/](https://play.google.com/console/about/))
    and must submit their app through the platform. This includes providing necessary
    metadata, such as the app’s name, description, keywords, screenshots, app icons,
    and pricing information.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 iOS，开发人员需要创建一个 App Store Connect 账户（[https://appstoreconnect.apple.com/login](https://appstoreconnect.apple.com/login)），并通过平台提交他们的应用程序。对于
    Android，则需要一个 Google Play 控制台账户（[https://play.google.com/console/about/](https://play.google.com/console/about/)），并必须通过该平台提交他们的应用程序。这包括提供必要的元数据，如应用程序的名称、描述、关键字、截图、应用图标和定价信息。
- en: Developers also need to provide a test account with login credentials, if their
    app requires authentication, to access content or features of the app store. This
    allows them to test the apps during the beta testing and app store submission
    phases.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员还需要提供一个测试帐户及其登录凭据，如果他们的应用程序需要身份验证，则可以访问应用商店的内容或功能。这使他们能够在 Beta 测试和应用商店提交阶段测试应用程序。
- en: By allowing a group of users to test the app before it is made available, developers
    can gain invaluable feedback on the product’s performance and make any necessary
    adjustments or enhancements before the definitive version is released.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 通过允许一组用户在应用程序发布之前测试该应用程序，开发人员可以获取有关产品性能的宝贵反馈，并在确定版本发布之前进行任何必要的调整或增强。
- en: Recruiting testers
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 招募测试员
- en: 'You can reach out to users in your target audience who have expressed interest
    in testing apps. You can also post on app-related forums and social media or use
    a service such as TestFlight to find testers. Here are some effective methods
    for recruiting testers:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以联系那些对测试应用程序表示兴趣的目标用户群体。你也可以在与应用相关的论坛和社交媒体上发布信息，或使用像 TestFlight 这样的服务来找到测试员。以下是一些有效的招募测试员的方法：
- en: '**Provide clear instructions**: Once you have recruited your testers, provide
    them with clear instructions on how to install and use the app and how to provide
    feedback'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供清晰的说明**：一旦你招募了测试员，向他们提供清晰的安装和使用应用程序的说明，以及如何提供反馈意见。'
- en: '**Monitor feedback**: Monitor the responses from the testers and make any necessary
    changes to the app before releasing it to the public'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控反馈**：监控测试员的响应，并在向公众发布之前对应用程序进行任何必要的更改。'
- en: Beta testing tools
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Beta 测试工具
- en: 'Beta testing is an essential phase in the development of mobile apps. It allows
    developers to gather valuable feedback from a limited group of users before the
    app’s full release, identify and fix issues, and ensure a smoother launch. There
    are several tools available for conducting beta testing on mobile apps. Here are
    some popular ones:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用程序开发中，Beta 测试是一个重要的阶段。它允许开发人员在应用程序全面发布之前从有限的用户群体中获取宝贵的反馈意见，识别和修复问题，并确保更顺利的发布。有多种工具可用于在移动应用程序上进行
    Beta 测试。以下是一些流行的工具：
- en: TestFlight
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestFlight
- en: Google Play beta testing
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Play Beta 测试
- en: Firebase App Distribution
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firebase 应用分发
- en: Let’s take a closer look.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看。
- en: TestFlight
  id: totrans-219
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: TestFlight
- en: '**TestFlight** ([https://developer.apple.com/testflight/](https://developer.apple.com/testflight/))
    is an invaluable tool for iOS app developers, allowing them to beta-test their
    apps before they release them on the app store. It is now an integrated part of
    the iOS app development ecosystem.'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**TestFlight**（[https://developer.apple.com/testflight/](https://developer.apple.com/testflight/)）是
    iOS 应用开发者的宝贵工具，允许他们在将应用程序发布到应用商店之前进行测试。它现在是 iOS 应用开发生态系统的一部分。'
- en: TestFlight makes it simple for developers to invite beta testers to try out
    their apps. All you need is the tester’s email address, and they’ll receive an
    invitation to download the app through TestFlight.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight 简化了开发人员邀请 Beta 测试员尝试他们的应用程序的流程。您只需提供测试人员的电子邮件地址，他们将收到通过 TestFlight
    下载应用程序的邀请。
- en: TestFlight’s integration with the iOS development environment makes distributing
    and testing apps for iPhone, iPad, and other Apple devices easy. It is free, making
    it accessible to developers of all sizes, from individuals to large companies.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight 与 iOS 开发环境的集成使得在 iPhone、iPad 和其他 Apple 设备上分发和测试应用程序变得简单。它是免费的，适用于各种规模的开发者，从个人到大公司。
- en: Developers can distribute multiple app builds simultaneously, allowing them
    to test different versions and identify the most successful one.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以同时分发多个应用构建版本，从而测试不同的版本并确定最成功的版本。
- en: TestFlight makes it easy for beta testers to provide feedback directly within
    the app. This ensures that developers receive valuable insights and can make the
    necessary improvements before launching the app publicly.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight 使测试版测试者能够轻松地在应用中直接提供反馈。这确保开发者能够获得宝贵的意见，并在公开发布应用之前进行必要的改进。
- en: Developers can invite up to 10,000 external testers, enabling them to collect
    a vast amount of feedback and identify potential issues. More information about
    testing apps with TestFlight can be found at [https://testflight.apple.com/](https://testflight.apple.com/).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者可以邀请最多 10,000 名外部测试者，这使他们能够收集大量反馈并发现潜在问题。有关使用 TestFlight 测试应用的更多信息，请访问 [https://testflight.apple.com/](https://testflight.apple.com/)。
- en: 'Here are the general steps you must follow to use beta testing with TestFlight:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您必须遵循的使用 TestFlight 进行测试的基本步骤：
- en: Create a new version in Xcode and ensure that it meets all app store guidelines
    and requirements, including screenshots and metadata.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 中创建一个新版本，并确保它符合所有应用商店的指南和要求，包括截图和元数据。
- en: Upload your app to App Store Connect and select the version you want to distribute
    to beta testers.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的应用上传到 App Store Connect，并选择要分发给测试版测试者的版本。
- en: Invite beta testers to test your app by sending them an email invitation from
    App Store Connect. You can invite up to 10,000 testers per app. Once you have
    invited them, they will receive an email invitation to test your app. They will
    need to accept the invitation and install TestFlight on their iOS device.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从 App Store Connect 发送电子邮件邀请，邀请测试版测试者来测试您的应用。每个应用最多可以邀请 10,000 名测试者。邀请后，他们将收到一封邀请邮件，接受邀请并在其
    iOS 设备上安装 TestFlight。
- en: After the beta testers have accepted the invitation and installed TestFlight,
    you can add them to a group in App Store Connect. This allows you to manage the
    distribution of different app versions to different groups of testers.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试版测试者接受邀请并安装 TestFlight 后，您可以将他们添加到 App Store Connect 的一个组中。这样，您可以管理不同版本应用的分发，将其分发给不同的测试者组。
- en: Once you have added beta testers to a group, you can distribute the app to them
    by selecting the app version you want to distribute in App Store Connect and selecting
    the group of testers to which you want to distribute it.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您将测试版测试者添加到一个组中，就可以通过在 App Store Connect 中选择要分发的应用版本，并选择要分发给的测试者组，来将应用分发给他们。
- en: Beta testers can provide feedback on the app through the TestFlight app, including
    screenshots, comments, and ratings.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试版测试者可以通过 TestFlight 应用提供关于应用的反馈，包括截图、评论和评分。
- en: Monitor the app’s performance and track issues reported by beta testers, and
    then fix any issues that are found.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监控应用的表现并跟踪测试版测试者报告的问题，然后修复发现的任何问题。
- en: After the beta testing phase is completed and all issues have been resolved,
    the app is ready to be released to the relevant app store.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试版阶段完成并解决所有问题后，应用就可以发布到相关的应用商店。
- en: Google Play beta testing
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Google Play 测试版
- en: '**Google Play beta testing** ([https://support.google.com/googleplay/android-developer/answer/9845334?hl=en&visit_id=638185357369512451-3818777855&rd=1](https://support.google.com/googleplay/android-developer/answer/9845334?hl=en&visit_id=638185357369512451-3818777855&rd=1))
    is an essential tool for Android app developers, offering a straightforward way
    to beta-test apps before they’re released on the Google Play Store. Its easy setup,
    seamless integration with the Google Play Store, and support for a large tester
    base make it a go-to choice for Android app testing.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Play 测试版** ([https://support.google.com/googleplay/android-developer/answer/9845334?hl=en&visit_id=638185357369512451-3818777855&rd=1](https://support.google.com/googleplay/android-developer/answer/9845334?hl=en&visit_id=638185357369512451-3818777855&rd=1))
    是 Android 应用开发者的重要工具，提供了一个直接的方式来在应用发布到 Google Play 商店之前进行测试。它的简单设置、与 Google Play
    商店的无缝集成以及对大量测试者的支持，使其成为 Android 应用测试的首选工具。'
- en: Google Play beta testing allows developers to distribute their apps to testers
    via email invitations or by sharing a link. Testers can easily access the app
    through the Google Play Store, just like any other app.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 测试版允许开发者通过电子邮件邀请或共享链接的方式将应用分发给测试者。测试者可以像访问其他应用一样，通过 Google Play
    商店轻松访问应用。
- en: Testers can provide feedback directly within the app, giving developers essential
    insights into improving the app before it’s released to the public.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 测试者可以直接在应用中提供反馈，为开发者提供改进应用的重要意见，从而在应用发布到公众之前进行必要的优化。
- en: Google Play beta testing also supports staged rollouts, allowing developers
    to release app updates to a percentage of users and gradually increase that percentage
    over time.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play beta 测试还支持分阶段发布，允许开发者将应用更新发布给一部分用户，并逐步增加该部分用户的比例。
- en: 'You can test your app with specific groups or open your test to Google Play
    users with Play Console, as shown in the following screenshot:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Google Play Console 针对特定群体进行测试，或者将测试向 Google Play 用户开放，如下图所示：
- en: '![Figure 6.19 – Google Play Console](img/Figure_06.19_B18113.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图6.19 – Google Play Console](img/Figure_06.19_B18113.jpg)'
- en: Figure 6.19 – Google Play Console
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.19 – Google Play Console
- en: 'There are three types of testing with Google Play:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 提供三种测试类型：
- en: '**Internal testing**: Up to 100 testers can quickly access your app for initial
    quality assurance checks:'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部测试**：最多可以让 100 名测试者快速访问你的应用进行初步质量保证检查：'
- en: '![Figure 6.20 – Google Play Console – Internal testing](img/Figure_06.20_B18113.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图6.20 – Google Play Console – 内部测试](img/Figure_06.20_B18113.jpg)'
- en: Figure 6.20 – Google Play Console – Internal testing
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.20 – Google Play Console – 内部测试
- en: '**Open testing**: This allows you to run a test with a large group of people
    and surface the test version of your app on Google Play:'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开放测试**：这允许你与大量用户进行测试，并在 Google Play 上展示测试版本的应用：'
- en: '![Figure 6.21 – Google Play Console – Open testing](img/Figure_06.21_B18113.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图6.21 – Google Play Console – 开放测试](img/Figure_06.21_B18113.jpg)'
- en: Figure 6.21 – Google Play Console – Open testing
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.21 – Google Play Console – 开放测试
- en: '**Closed testing**: This allows you to gather more targeted feedback from a
    wider range of testers during pre-release testing:'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**封闭测试**：这允许你在发布前的测试阶段，从更广泛的测试者中收集更有针对性的反馈：'
- en: '![Figure 6.22 – Google Play Console – Closed testing](img/Figure_06.22_B18113.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图6.22 – Google Play Console – 封闭测试](img/Figure_06.22_B18113.jpg)'
- en: Figure 6.22 – Google Play Console – Closed testing
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.22 – Google Play Console – 封闭测试
- en: 'Here are the general steps to implement beta testing with Google Play Console:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在 Google Play Console 上实施 beta 测试的一般步骤：
- en: Ensure it is ready for testing by creating a beta build and signing it with
    a Keystore.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过创建 beta 版本并使用 Keystore 签名，确保应用准备好进行测试。
- en: Create a list of beta testers by adding their Google email addresses to the
    Google Play Console.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将测试者的 Google 电子邮件地址添加到 Google Play Console，创建一个 beta 测试者列表。
- en: Upload the beta build of the app to the Google Play Console, where beta testers
    can access it.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将应用的 beta 版本上传至 Google Play Console，beta 测试者可以访问它。
- en: Send out beta testing invites to the testers via email, which will contain a
    link to download the beta build of the app.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过电子邮件向测试者发送 beta 测试邀请，其中包含一个下载应用程序 beta 版本的链接。
- en: Monitor the feedback from beta testers on the Google Play Console and address
    any reported issues or bugs.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监控来自 Google Play Console 的 beta 测试反馈，并解决任何报告的问题或 bug。
- en: Based on the feedback received, we can make changes and improvements to the
    app before releasing it to the general public.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据收到的反馈，我们可以对应用进行修改和改进，然后再向公众发布。
- en: Once it has been tested and all issues have been addressed, it can be released
    to the public via the Google Play Store.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成测试并解决所有问题，便可以通过 Google Play Store 向公众发布。
- en: Firebase App Distribution
  id: totrans-261
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Firebase 应用分发
- en: '**Firebase App Distribution** ([https://firebase.google.com/docs/app-distribution](https://firebase.google.com/docs/app-distribution))
    can distribute your apps to trusted testers via a hassle-free process by promptly
    getting your apps onto testers’ devices. By doing this, you can receive feedback
    early and frequently and align it with your goals for mobile DevOps and CI/CD.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '**Firebase 应用分发** ([https://firebase.google.com/docs/app-distribution](https://firebase.google.com/docs/app-distribution))
    可以通过简单的流程将你的应用分发给可信赖的测试者，将应用迅速部署到测试者的设备上。这样，你可以提前并频繁地收到反馈，并将其与移动 DevOps 和 CI/CD
    目标对齐。'
- en: Firebase App Distribution allows developers to distribute and test their apps
    on both iOS and Android devices, making it a versatile choice for multi-platform
    app development. However, iOS developers usually prefer to use TestFlight because
    it’s free and integrated more with Apple’s services and apps.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: Firebase 应用分发允许开发者在 iOS 和 Android 设备上分发和测试应用，使其成为多平台应用开发的多功能选择。然而，iOS 开发者通常更喜欢使用
    TestFlight，因为它是免费的，并且与 Apple 的服务和应用集成得更紧密。
- en: Distributing your app to testers is simple with Firebase App Distribution. You
    can invite testers via email or share a link, giving them quick access to the
    app.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Firebase 应用分发分发应用给测试者非常简单。你可以通过电子邮件邀请测试者，或者分享一个链接，让他们快速访问应用。
- en: Firebase App Distribution integrates seamlessly with **Crashlytics** ([https://firebase.google.com/products/crashlytics](https://firebase.google.com/products/crashlytics)),
    a real-time crash reporting tool. It helps developers identify and fix issues
    quickly, improving app stability and performance.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: Firebase App Distribution 与**Crashlytics** ([https://firebase.google.com/products/crashlytics](https://firebase.google.com/products/crashlytics))
    无缝集成，这是一个实时崩溃报告工具。它帮助开发者快速识别并修复问题，提高应用的稳定性和性能。
- en: Firebase App Distribution supports popular CI/CD tools, allowing developers
    to automate the process of building, testing, and distributing their apps.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: Firebase App Distribution 支持流行的 CI/CD 工具，允许开发者自动化构建、测试和分发应用的过程。
- en: 'The general steps for using Android beta testing with Firebase App Distribution
    are as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Firebase App Distribution 进行 Android 测试的基本步骤如下：
- en: Create a Firebase account and project.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Firebase 账户和项目。
- en: Add the Firebase SDK to your project.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Firebase SDK 添加到你的项目中。
- en: Create a signed release build of your App Bundle.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个已签名的发布版应用包。
- en: Use the Firebase CLI, Gradle, or CI server to upload your app’s build to Firebase
    App Distribution.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Firebase CLI、Gradle 或 CI 服务器将你的应用构建上传到 Firebase App Distribution。
- en: Invite testers by adding their email addresses or by creating tester groups
    in the Firebase console. You can also import a CSV file with the email addresses
    of your testers.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加测试者的电子邮件地址或在 Firebase 控制台中创建测试者组来邀请测试者。你也可以导入包含测试者电子邮件地址的 CSV 文件。
- en: Once your build has been uploaded and testers have been added, distribute your
    app to the selected testers. They will receive an email invitation with instructions
    on how to access and install the beta version of your app.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建完成并上传，且测试者已添加，便可以将应用分发给选定的测试者。他们将收到一封包含访问和安装应用 Beta 版本的说明的电子邮件邀请。
- en: Once the beta testing stage has been completed, we can move to the final stage,
    which is submitting the apps to the app stores.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦测试阶段完成，我们可以进入最后阶段，即将应用提交到应用商店。
- en: Submitting the app
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提交应用
- en: Before submitting an app for review, developers must ensure it complies with
    the *App Store Review Guidelines*, which cover a wide range of topics, such as
    user privacy, content, design, and functionality. Developers should also test
    their apps extensively on different devices and iOS versions to ensure a smooth
    user experience.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在提交应用进行审核之前，开发者必须确保其符合*App Store 审核指南*，该指南涵盖了诸如用户隐私、内容、设计和功能等广泛的主题。开发者还应在不同设备和
    iOS 版本上广泛测试应用，以确保流畅的用户体验。
- en: Submitting the app means uploading it to an app store (such as App Store or
    Google Play) for review and approval and making it available for users.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 提交应用即意味着将其上传到应用商店（如 App Store 或 Google Play）进行审核和批准，并让用户可以下载。
- en: Once your app is ready, you’ll need to submit it to the relevant app store.
    This involves uploading your app, providing *screenshots* and other *metadata*,
    and submitting the app for review. The review process can take up to a week, and
    your app may only be accepted if it meets the app store’s guidelines.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的应用准备好，你需要将其提交到相关的应用商店。这包括上传应用、提供*截图*和其他*元数据*，并提交应用进行审核。审核过程可能需要长达一周的时间，只有当应用符合应用商店的指南时，它才有可能被接受。
- en: The review process typically takes a few days, but the time frame can vary,
    depending on the app’s complexity and the volume of submissions. During the review
    process, Apple’s team evaluates the app against the App Store Review Guidelines,
    checking for functionality, performance, design, and content issues.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 审核过程通常需要几天时间，但根据应用的复杂性和提交量，时间框架可能会有所不同。在审核过程中，Apple 团队会根据 App Store 审核指南对应用进行评估，检查其功能性、性能、设计和内容问题。
- en: 'After the review process, there are several possible outcomes:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 审核过程后，可能有几种结果：
- en: If the app meets all the guidelines, it will be *approved* and published on
    the Apple App Store. You will receive a notification, and the app will be available
    for download.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用符合所有指南，它将被*批准*并发布到 Apple App Store。你将收到通知，应用将可供下载。
- en: If the app doesn’t meet the guidelines, it will be *rejected*, and you will
    receive feedback on the specific issues that need to be addressed. Then, you can
    make the necessary changes and resubmit your app for review.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用不符合指南，它将被*拒绝*，并且你将收到反馈，说明需要解决的具体问题。然后，你可以进行必要的更改并重新提交应用进行审核。
- en: If the app’s metadata doesn’t meet the guidelines, it will be *rejected*, but
    the binary won’t need to be re-reviewed or built again. You can update the metadata
    and resubmit it for review.
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用的元数据不符合指南，它将被*拒绝*，但二进制文件无需重新审核或重新构建。你可以更新元数据并重新提交进行审核。
- en: We are now ready for our app to be released. But before that, we need to know
    which mobile app distribution platforms we can use to make it public.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好发布应用了。但在此之前，我们需要了解可以使用哪些移动应用分发平台来公开发布它。
- en: Mobile app distribution platforms
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 移动应用分发平台
- en: '**Mobile app distribution platforms** are digital marketplaces where developers
    can publish, distribute, and sell their mobile applications to users. These platforms
    are essential for developers to reach a wide audience and gain exposure for their
    apps. Some of the most popular mobile app distribution platforms include the following:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动应用分发平台** 是开发者发布、分发并销售移动应用的数字市场。这些平台对于开发者而言至关重要，可以帮助他们触及更广泛的受众，并为其应用赢得曝光。一些最受欢迎的移动应用分发平台包括：'
- en: '**Apple App Store** ([https://www.apple.com/de/app-store/](https://www.apple.com/de/app-store/)):
    The official app store for iOS devices such as iPhones, iPads, and iPod Touches.
    Developers can submit their apps for review and, if approved, make them available
    for download.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apple App Store** ([https://www.apple.com/de/app-store/](https://www.apple.com/de/app-store/)):
    iOS 设备的官方应用商店，包括 iPhone、iPad 和 iPod Touch。开发者可以提交应用进行审核，并在审核通过后提供下载。'
- en: '**Google Play Store** ([https://play.google.com/store/apps](https://play.google.com/store/apps)):
    The official app store for Android devices, which offers a wide variety of apps,
    games, and other digital content for users to download. Like the Apple App Store,
    developers can submit their apps for review and, if approved, make them available
    for download.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Play Store** ([https://play.google.com/store/apps](https://play.google.com/store/apps)):
    Android 设备的官方应用商店，提供各种应用、游戏和其他数字内容，供用户下载。与 Apple App Store 类似，开发者可以提交应用进行审核，并在审核通过后提供下载。'
- en: '**Amazon Appstore** ([https://www.amazon.com/mobile-apps/b?ie=UTF8&node=2350149011](https://www.amazon.com/mobile-apps/b?ie=UTF8&node=2350149011)):
    This app store by Amazon is an alternative marketplace for Android apps, featuring
    a broad selection of apps and games, including some that are exclusive to the
    platform.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Appstore** ([https://www.amazon.com/mobile-apps/b?ie=UTF8&node=2350149011](https://www.amazon.com/mobile-apps/b?ie=UTF8&node=2350149011)):
    亚马逊的应用商店，是 Android 应用的替代市场，提供广泛的应用和游戏，包括一些仅在该平台上独有的应用。'
- en: '**Microsoft Store** ([https://apps.microsoft.com/store/apps](https://apps.microsoft.com/store/apps)):
    The app store for Windows devices, including devices such as Windows Phone, Surface
    tablets, and Windows PCs. Developers can distribute both mobile and desktop applications
    through this platform.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Store** ([https://apps.microsoft.com/store/apps](https://apps.microsoft.com/store/apps)):
    Windows 设备的应用商店，包括 Windows Phone、Surface 平板电脑和 Windows PC 等设备。开发者可以通过该平台分发移动应用和桌面应用。'
- en: '**Samsung Galaxy Store** ([https://galaxystore.samsung.com/apps](https://galaxystore.samsung.com/apps)):
    The app store by Samsung, which offers a variety of apps and games specifically
    tailored for Samsung devices, including exclusive content and promotions.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Samsung Galaxy Store** ([https://galaxystore.samsung.com/apps](https://galaxystore.samsung.com/apps)):
    三星的应用商店，提供专为三星设备定制的各种应用和游戏，包括独家内容和促销活动。'
- en: '**Huawei AppGallery** ([https://appgallery.huawei.com/](https://appgallery.huawei.com/)):
    Huawei’s official app store, which offers a selection of apps and games for Huawei
    and Honor devices. After being cut off from Google services, Huawei has been developing
    its app store as an alternative to the Google Play Store.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Huawei AppGallery** ([https://appgallery.huawei.com/](https://appgallery.huawei.com/)):
    华为的官方应用商店，提供适用于华为和荣耀设备的应用和游戏。由于与谷歌服务断开连接，华为一直在发展其应用商店，作为 Google Play Store 的替代方案。'
- en: 'It’s important to note that all these app stores have guidelines and policies
    you should follow when submitting your app:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，所有这些应用商店都有相关的指南和政策，提交应用时必须遵守：
- en: App Store ([https://developer.apple.com/app-store/review/](https://developer.apple.com/app-store/review/))
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: App Store ([https://developer.apple.com/app-store/review/](https://developer.apple.com/app-store/review/))
- en: Google Play ([https://play.google.com/console/about/guides/releasewithconfidence/](https://play.google.com/console/about/guides/releasewithconfidence/))
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Play ([https://play.google.com/console/about/guides/releasewithconfidence/](https://play.google.com/console/about/guides/releasewithconfidence/))
- en: Amazon Appstore ([https://developer.amazon.com/docs/app-submission/understanding-submission.html](https://developer.amazon.com/docs/app-submission/understanding-submission.html))
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊应用商店 ([https://developer.amazon.com/docs/app-submission/understanding-submission.html](https://developer.amazon.com/docs/app-submission/understanding-submission.html))
- en: Huawei AppGallery ([https://developer.huawei.com/consumer/en/doc/distribution/app/50104](https://developer.huawei.com/consumer/en/doc/distribution/app/50104))
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 华为应用市场 ([https://developer.huawei.com/consumer/en/doc/distribution/app/50104](https://developer.huawei.com/consumer/en/doc/distribution/app/50104))
- en: Microsoft App Store ([https://learn.microsoft.com/en-us/windows/apps/publish/publish-your-app/create-app-submission?pivots=store-installer-msix](https://learn.microsoft.com/en-us/windows/apps/publish/publish-your-app/create-app-submission?pivots=store-installer-msix))
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软应用商店 ([https://learn.microsoft.com/en-us/windows/apps/publish/publish-your-app/create-app-submission?pivots=store-installer-msix](https://learn.microsoft.com/en-us/windows/apps/publish/publish-your-app/create-app-submission?pivots=store-installer-msix))
- en: Ensure your app meets all the requirements and guidelines to complete the review
    process on time.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的应用符合所有要求和指南，以便按时完成审核过程。
- en: App Store submission
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: App Store 提交
- en: 'Uploading an iOS app to the Apple App Store involves the following steps:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 将 iOS 应用上传到 Apple App Store 包括以下步骤：
- en: You will need to configure your Xcode project to build and archive your app
    with the necessary provisioning profile and certificates. Make sure that you have
    the required provisioning profile and certificate for app distribution, not only
    development.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要配置你的 Xcode 项目，以便使用必要的配置文件和证书构建并归档你的应用。确保你拥有用于应用分发的必要配置文件和证书，而不仅仅是开发用的证书。
- en: Go to the **App Store Connect** website and log in with your Apple Developer
    account.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问**App Store Connect**网站，并使用你的 Apple Developer 账户登录。
- en: Click **My Apps** and select the app you want to submit.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**我的应用**并选择你要提交的应用。
- en: In the left sidebar, click on the **App Store** tab, scroll down to the **Metadata**
    section, and click the **Edit** button. Here, you can add the necessary metadata
    for your app, including the app’s name, subtitle, description, keywords, and category.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏中，点击**App Store**标签，滚动到**元数据**部分，点击**编辑**按钮。在这里，你可以为你的应用添加必要的元数据，包括应用名称、副标题、描述、关键词和类别。
- en: Scroll down to the **Screenshots & Videos** section and click the **Edit** button.
    Here, you can add screenshots of your app for each device type and language you
    support. Ensure your screenshots meet the App Store guidelines, including the
    correct size and resolution.
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**截图与视频**部分并点击**编辑**按钮。在这里，你可以为每种设备类型和你支持的语言添加应用截图。确保你的截图符合 App Store 的指南，包括正确的尺寸和分辨率。
- en: You can upload screenshots by dragging and dropping them into the **Screenshot**
    section or by clicking the **+** button and selecting them from your computer.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过拖放截图到**截图**部分，或点击**+**按钮从电脑中选择截图进行上传。
- en: You will also need to set the price of your app or choose to make it available
    for free. You can also choose which countries or regions where your app will be
    available.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还需要设置你的应用价格或选择将其免费提供。你还可以选择哪些国家或地区可以使用你的应用。
- en: After you have completed all the necessary steps, you can submit your app to
    the App Store for review. Ensure you have tested your app thoroughly and meet
    all of Apple’s guidelines and policies.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所有必要步骤后，你可以将应用提交到 App Store 进行审核。确保你已彻底测试应用，并符合 Apple 的所有指南和政策。
- en: Apple will review your app to ensure it meets all its technical, design, and
    content requirements. The review process typically takes several days, although
    it can take longer if there are any issues with your app.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Apple 将审核你的应用，以确保它符合所有技术、设计和内容要求。审核过程通常需要几天时间，但如果应用存在问题，可能会更长。
- en: Once your app has been approved, you can release it on the App Store. You can
    choose to release it immediately or schedule a release date in the future.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的应用获得批准，你可以在 App Store 上发布它。你可以选择立即发布，或者安排未来某个日期发布。
- en: Tips for App Store submission
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: App Store 提交提示
- en: 'When submitting an app to the App Store, there are a few things you can do
    to increase your chances of acceptance. First, you should ensure that all required
    information is included and accurate. This includes screenshots, videos, contact
    information, a description of the app, and a privacy policy:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 提交应用到 App Store 时，有几个步骤可以增加被接受的机会。首先，你应确保所有必填信息已包含并准确无误。这些信息包括截图、视频、联系方式、应用描述和隐私政策：
- en: Make sure the app is compatible with the latest iOS version and devices
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保应用程序与最新的 iOS 版本和设备兼容。
- en: Use beta testing tools to test your app before submitting it to the App Store
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 beta 测试工具在提交应用到 App Store 之前进行测试。
- en: Invest in quality design and development services to ensure your app meets the
    App Store’s standards for quality
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 投资于优质的设计和开发服务，以确保您的应用符合 App Store 对质量的标准。
- en: Follow the App Store’s guidelines for submitting apps, including providing a
    complete and accurate description of your app
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循 App Store 提交应用的指南，包括提供完整且准确的应用描述。
- en: By following these tips, app developers can increase their chances of having
    their app accepted by the App Store.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些提示，应用开发者可以提高应用被 App Store 接受的机会。
- en: Google Play Store submission
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google Play 商店提交
- en: The Google Play Store ([https://play.google.com/store/apps](https://play.google.com/store/apps))
    is the official app distribution platform for Android devices. Like the Apple
    App Store, developers can submit their apps to the Play Store for approval and
    distribution to Android users.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 商店 ([https://play.google.com/store/apps](https://play.google.com/store/apps))
    是 Android 设备的官方应用分发平台。与 Apple App Store 类似，开发者可以将他们的应用提交到 Play 商店进行审批，并分发给 Android
    用户。
- en: Releasing an Android application can be exciting, but it’s essential to understand
    the process involved to ensure your application’s success.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 发布 Android 应用可能令人兴奋，但了解涉及的过程对于确保应用的成功至关重要。
- en: 'Uploading an Android app to the Google Play Store involves the following steps:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Android 应用上传到 Google Play 商店涉及以下步骤：
- en: In the Google Play Console, navigate to the **All applications** tab, and click
    on the **Create app** button. Choose a default language and enter a title for
    your app. This will create a draft listing for your app, which you can update
    later with more details.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Google Play 控制台中，进入**所有应用程序**标签页，点击**创建应用**按钮。选择一个默认语言并为您的应用输入标题。这将创建一个应用的草稿列表，您可以稍后更新更多细节。
- en: 'Accept the Developer Program Policies and US export laws, then click the **Create**
    **app** button:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受开发者计划政策和美国出口法律，然后点击**创建** **应用**按钮：
- en: '![Figure 6.23 – Google Play Console – Create app](img/Figure_06.23_B18113.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.23 – Google Play 控制台 – 创建应用](img/Figure_06.23_B18113.jpg)'
- en: Figure 6.23 – Google Play Console – Create app
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.23 – Google Play 控制台 – 创建应用
- en: Be sure to sign your APK or AAB with a secure certificate, create a version
    code, and update the app’s version name
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请确保使用安全证书签名您的 APK 或 AAB 文件，创建版本代码，并更新应用的版本名称。
- en: 'Navigate to the **Release overview** section in the Google Play Console, and
    then to **Production**. Create a new release by selecting the appropriate release
    track (alpha, beta, or production). Upload your AAB and fill out the necessary
    details, as shown in the following screenshot:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Google Play 控制台中，进入**发布概览**部分，然后选择**生产**。通过选择适当的发布轨道（alpha、beta 或 production）来创建一个新的发布版本。上传您的
    AAB 文件并填写必要的详细信息，如下图所示：
- en: '![Figure 6.24 – Google Play Console – Release dashboard](img/Figure_06.24_B18113.jpg)'
  id: totrans-329
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.24 – Google Play 控制台 – 发布仪表板](img/Figure_06.24_B18113.jpg)'
- en: Figure 6.24 – Google Play Console – Release dashboard
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.24 – Google Play 控制台 – 发布仪表板
- en: 'Now, you can create a new production release, as shown in the following screenshot:'
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以创建一个新的生产发布版本，如下图所示：
- en: '![Figure 6.25 – Google Play Console – Create production release](img/Figure_06.25_B18113.jpg)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.25 – Google Play 控制台 – 创建生产发布](img/Figure_06.25_B18113.jpg)'
- en: Figure 6.25 – Google Play Console – Create production release
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.25 – Google Play 控制台 – 创建生产发布
- en: 'If your app has in-app products, subscriptions, or utilizes any other Google
    Play services, configure them accordingly in the **Monetize** section:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的应用有应用内产品、订阅或使用任何其他 Google Play 服务，请在**获利**部分中进行相应配置：
- en: '![Figure 6.26 – Google Play Console – Monetize](img/Figure_06.26_B18113.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.26 – Google Play 控制台 – 获利](img/Figure_06.26_B18113.jpg)'
- en: Figure 6.26 – Google Play Console – Monetize
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.26 – Google Play 控制台 – 获利
- en: 'Finally, under **In-app products**, you can add the Google payment details,
    as shown here:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在**应用内产品**下，您可以添加 Google 支付详细信息，如下所示：
- en: '![Figure 6.27 – Google Play Console – In-app products](img/Figure_06.27_B18113.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.27 – Google Play 控制台 – 应用内产品](img/Figure_06.27_B18113.jpg)'
- en: Figure 6.27 – Google Play Console – In-app products
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.27 – Google Play 控制台 – 应用内产品
- en: After submission, Google will review your app, which usually takes a few hours
    to a few days. Once approved, your app will be live on the Google Play Store,
    and you can start tracking its performance, managing updates, and responding to
    user feedback.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 提交后，谷歌将审核您的应用，通常需要几个小时到几天时间。审核通过后，您的应用将在 Google Play 商店上线，您可以开始跟踪其性能、管理更新并回应用户反馈。
- en: Additionally, you can upload Android apps to another app store instead of Google
    Play Store, such as Amazon Appstore, Huawei AppGallery, and Samsung Galaxy Store.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以将安卓应用上传到其他应用商店，而不是 Google Play 商店，例如亚马逊应用商店、华为应用市场和三星 Galaxy Store。
- en: To upload an app to Amazon Appstore, you will need to have an Amazon Developer
    account ([https://developer.amazon.com/](https://developer.amazon.com/)).
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 要将应用上传到亚马逊应用商店，您需要拥有一个亚马逊开发者账户（[https://developer.amazon.com/](https://developer.amazon.com/)）。
- en: 'Uploading an Android app to Amazon Appstore involves the following steps:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 将安卓应用上传到亚马逊应用商店涉及以下步骤：
- en: 'You will need to configure your APK and sign it with a valid certificate. Ensure
    that your app meets Amazon’s technical and design guidelines ([https://developer.amazon.com/docs/app-submission/understanding-submission.html](https://developer.amazon.com/docs/app-submission/understanding-submission.html))
    and is built with a valid signing certificate:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要配置您的 APK，并使用有效的证书进行签名。确保您的应用符合亚马逊的技术和设计指南（[https://developer.amazon.com/docs/app-submission/understanding-submission.html](https://developer.amazon.com/docs/app-submission/understanding-submission.html)），并且使用有效的签名证书构建：
- en: '![Figure 6.28 – Amazon Developer dashboard](img/Figure_06.28_B18113.jpg)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图6.28 – 亚马逊开发者仪表盘](img/Figure_06.28_B18113.jpg)'
- en: Figure 6.28 – Amazon Developer dashboard
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.28 – 亚马逊开发者仪表盘
- en: Once your app is ready to be uploaded, you will need to provide some information
    about the app. This includes the app’s name, description, keywords, screenshots,
    and other metadata to help users discover and download your app. Amazon Appstore
    currently has a staged rollout ([https://developer.amazon.com/docs/app-submission/release-updates-in-staged-rollouts.html](https://developer.amazon.com/docs/app-submission/release-updates-in-staged-rollouts.html))
    that lets you gradually introduce new versions of your app to the marketplace
    in an incremental way.
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您的应用准备好上传，您需要提供一些有关应用的信息。这包括应用的名称、描述、关键词、截图以及其他元数据，帮助用户发现并下载您的应用。亚马逊应用商店目前支持分阶段发布（[https://developer.amazon.com/docs/app-submission/release-updates-in-staged-rollouts.html](https://developer.amazon.com/docs/app-submission/release-updates-in-staged-rollouts.html)），让您逐步将应用的新版本引入市场。
- en: After you have completed all the necessary steps, you can submit your app to
    Amazon Appstore for review. Ensure you have tested your app thoroughly and meet
    all of Amazon’s guidelines and policies.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所有必要的步骤后，您可以将应用提交到亚马逊应用商店进行审核。确保您已彻底测试应用，并遵守所有亚马逊的指南和政策。
- en: Amazon will review your app to ensure it meets all of its technical, design,
    and content requirements. The review process typically takes several hours, although
    it can take longer if there are any issues with your app.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊将审核您的应用程序，以确保其符合所有技术、设计和内容要求。审核过程通常需要几个小时，但如果应用程序存在问题，可能会花费更长时间。
- en: Once your app has been approved, you can release it on Amazon Appstore. You
    can choose to release it immediately or schedule a release date in the future.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的应用被批准，您可以在亚马逊应用商店发布它。您可以选择立即发布或安排未来的发布日期。
- en: Completing the CI/CD workflow
  id: totrans-351
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完成 CI/CD 工作流
- en: To complete the CI/CD workflow that we created in [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118),
    *Achieving Continuous Integration and Delivery with Mobile DevOps*, you can add
    the required steps to your pipeline to release the iOS and Android apps to TestFlight,
    App Store, Firebase App Distribution, Google Play Store, or any other distribution
    platform.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成我们在[*第4章*](B18113_04.xhtml#_idTextAnchor118)《通过移动 DevOps 实现持续集成和交付》中创建的 CI/CD
    工作流，您可以将所需的步骤添加到您的流水线中，以将 iOS 和安卓应用发布到 TestFlight、App Store、Firebase App Distribution、Google
    Play 商店或任何其他分发平台。
- en: 'For example, here’s a high-level overview of the workflow of building, testing,
    and releasing an iOS app to the App Store with Bitrise using steps such as **Xcode
    Archive & Export for iOS** and **Deploy to App Store Connect**, as shown in the
    following screenshot:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是使用 **Xcode Archive & Export for iOS** 和 **Deploy to App Store Connect**
    等步骤，通过 Bitrise 构建、测试和发布 iOS 应用到 App Store 的工作流概览，如下所示的截图所示：
- en: '![Figure 6.29 – Bitrise iOS CI/CD workflow](img/Figure_06.29_B18113.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![图6.29 – Bitrise iOS CI/CD 工作流](img/Figure_06.29_B18113.jpg)'
- en: Figure 6.29 – Bitrise iOS CI/CD workflow
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.29 – Bitrise iOS CI/CD 工作流
- en: 'Here’s a high-level overview of the YAML file for building, testing, and releasing
    an iOS app to the App Store with Codemagic: [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-iOS.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-iOS.yml).'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个高层次的概述，展示了使用 Codemagic 构建、测试并发布 iOS 应用到 App Store 的 YAML 文件：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-iOS.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-iOS.yml)。
- en: 'Additionally, you can perform the same steps with GitHub Actions for building,
    testing, and releasing an iOS app to the App Store: [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/ios.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/ios.yml).'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以使用 GitHub Actions 执行相同的步骤，构建、测试并发布 iOS 应用到 App Store：[https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/ios.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/ios.yml)。
- en: Now, let’s examine some examples of building, testing, and releasing Android
    apps with Bitrise, Codemagic, and GitHub Actions.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看使用 Bitrise、Codemagic 和 GitHub Actions 构建、测试和发布 Android 应用的一些示例。
- en: 'We’ll start with Bitrise. The following screenshot shows the high-level Android
    CI/CD workflow for Firebase App Distribution and Google Play:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 Bitrise 开始。以下截图展示了 Firebase 应用分发和 Google Play 的高级 Android CI/CD 工作流：
- en: '![Figure 6.30 – Bitrise Android CI/CD workflow for Firebase App Distribution
    and Google Play](img/Figure_06.30_B18113.jpg)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.30 – Bitrise Android CI/CD 工作流，用于 Firebase 应用分发和 Google Play](img/Figure_06.30_B18113.jpg)'
- en: Figure 6.30 – Bitrise Android CI/CD workflow for Firebase App Distribution and
    Google Play
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.30 – Bitrise Android CI/CD 工作流，用于 Firebase 应用分发和 Google Play
- en: In terms of Codemagic, you can find the YAML file at [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-android.yml).
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Codemagic，你可以在 [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/codemagic-android.yml)
    找到 YAML 文件。
- en: Finally, for GitHub Actions, you can find the YAML file at [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/android.yml).
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于 GitHub Actions，你可以在 [https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/android.yml](https://github.com/PacktPublishing/Mobile-DevOps-Playbook/blob/main/Chapter-6/.github/android.yml)
    找到 YAML 文件。
- en: 'Additionally, we can upload Android apps to another app store such as Huawei
    App Gallery for Huawei devices. Here is an example of the workflow for building,
    testing, and deploying an Android app to Huawei AppGallery with Bitrise:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以将 Android 应用上传到其他应用商店，例如针对华为设备的 Huawei 应用商店。以下是使用 Bitrise 构建、测试和部署 Android
    应用到 Huawei 应用商店的工作流示例：
- en: '![Figure 6.31 – Bitrise Android CI/CD workflow for Huawei App Gallery](img/Figure_06.31_B18113.jpg)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.31 – Bitrise Android CI/CD 工作流，用于 Huawei 应用商店](img/Figure_06.31_B18113.jpg)'
- en: Figure 6.31 – Bitrise Android CI/CD workflow for Huawei App Gallery
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.31 – Bitrise Android CI/CD 工作流，用于 Huawei 应用商店
- en: Once we’ve released and deployed an app to the different app stores, we need
    to wait for the quality team to send us feedback about the releases. If it’s approved,
    it can be released to different stores; otherwise, we will be given reasons for
    the rejection. In this case, we must fix them and upload another release.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将应用发布并部署到不同的应用商店，我们需要等待质量团队给我们反馈关于版本的意见。如果通过审批，它可以发布到不同的商店；否则，我们将收到拒绝的理由。在这种情况下，我们必须修复问题并上传另一个版本。
- en: Now, let’s look at some common reasons for app rejection and how to avoid them.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一些常见的应用拒绝原因以及如何避免它们。
- en: When does the App Store reject apps?
  id: totrans-369
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 应用商店何时拒绝应用？
- en: Developing an app can be a time-consuming and expensive process. App developers
    want their apps to be accepted by the App Store, but sometimes, they get rejected.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 开发一个应用可能是一个耗时且昂贵的过程。应用开发者希望他们的应用能被应用商店接受，但有时它们会被拒绝。
- en: When an app is rejected, it can be a frustrating experience for the developer.
    It is important to understand why the app was rejected to prevent it from happening
    again.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用被拒绝时，这对开发者来说可能是一次令人沮丧的经历。理解应用被拒的原因非常重要，以便避免再次发生。
- en: Let’s look at the most common reasons ([https://developer.apple.com/app-store/review/#common-app-rejections](https://developer.apple.com/app-store/review/#common-app-rejections))
    why the App Store rejects apps and what app developers can do to increase their
    chances of acceptance.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下 App Store 拒绝应用的最常见原因（[https://developer.apple.com/app-store/review/#common-app-rejections](https://developer.apple.com/app-store/review/#common-app-rejections)），以及应用开发者可以做些什么来提高被接受的机会。
- en: Incomplete or incorrect information
  id: totrans-373
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 不完整或不正确的信息
- en: One of the most common reasons for rejection is *incomplete or incorrect information*.
    For example, the App Store will reject the app if the app developer does not submit
    all the required screenshots and videos. The app developer should also ensure
    the app’s name, description, and keywords are accurate and up to date and provide
    complete and accurate information to ensure the app is accepted.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的拒绝原因之一是*不完整或不正确的信息*。例如，如果应用开发者没有提交所有必需的截图和视频，App Store 会拒绝该应用。应用开发者还应确保应用的名称、描述和关键词准确无误并且是最新的，提供完整且准确的信息，以确保应用能够被接受。
- en: Poor quality
  id: totrans-375
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 质量差
- en: The App Store also rejects apps that do not meet their standards for quality.
    This includes apps that are difficult to use, have too many bugs, or need to provide
    a better user experience. Due to this, in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App Testing Strategy*, we recommended using test
    automation in DevOps and CI/CD pipelines to act as a gate of quality for mobile
    apps.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: App Store 还会拒绝不符合质量标准的应用。这包括那些难以使用、存在过多漏洞，或者用户体验不佳的应用。因此，在[*第五章*](B18113_05.xhtml#_idTextAnchor138)《实施稳健的移动应用测试策略》中，我们建议在
    DevOps 和 CI/CD 流水线中使用测试自动化，以作为移动应用质量的把关。
- en: In addition, the App Store has specific design guidelines ([https://developer.apple.com/app-store/review/guidelines/#design](https://developer.apple.com/app-store/review/guidelines/#design))
    that must be followed for an app to be accepted. For example, the app should be
    easy to navigate, have a straightforward user interface, and be free of typos
    and other errors. It might be rejected if the app’s design does not meet the App
    Store’s standards.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，App Store 有特定的设计指南（[https://developer.apple.com/app-store/review/guidelines/#design](https://developer.apple.com/app-store/review/guidelines/#design)），必须遵循这些指南才能让应用被接受。例如，应用应易于导航，具有简洁的用户界面，并且没有拼写错误或其他问题。如果应用的设计未符合
    App Store 的标准，可能会被拒绝。
- en: Unacceptable content
  id: totrans-378
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 不可接受的内容
- en: The App Store also rejects apps that contain illegal content. This includes
    apps that contain offensive or inappropriate language, content that violates copyright
    or trademarks, and apps that promote hate or violence. App developers should make
    sure that their apps do not contain any content that could be deemed offensive
    or illegal.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: App Store 还会拒绝包含非法内容的应用。这包括包含冒犯性或不当语言、侵犯版权或商标的内容，以及宣传仇恨或暴力的应用。应用开发者应确保其应用不包含任何可能被视为冒犯性或非法的内容。
- en: As you may have noticed, we discussed the process of releasing mobile apps manually
    just to understand the flow and the prerequisites for each app.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能已经注意到的，我们讨论了手动发布移动应用的过程，目的是理解每个应用的流程和前提条件。
- en: Now, let’s explore different automation tools that can help mobile teams release
    their apps automatically instead of following the manual process discussed here.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探讨一些自动化工具，这些工具可以帮助移动团队自动发布应用，而不是按照这里讨论的手动流程。
- en: Automating your release pipeline with an automated release tool
  id: totrans-382
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用自动化发布工具自动化你的发布流水线
- en: At the time of writing, there are different tools on the market to help mobile
    teams accelerate and automate the mobile app release process. This includes different
    out-of-the-box solutions such as Runway and the release management add-on from
    Bitrise.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，市面上有多种工具可帮助移动团队加速并自动化移动应用发布过程。这包括像 Runway 这样即用型的解决方案，以及 Bitrise 的发布管理附加组件。
- en: Runway
  id: totrans-384
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Runway
- en: '**Runway.team** ([https://www.runway.team/](https://www.runway.team/)) is a
    platform that simplifies the process of shipping your mobile apps. It boasts a
    user-friendly interface, making it easy for developers to upload and distribute
    their mobile apps:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '**Runway.team**（[https://www.runway.team/](https://www.runway.team/)）是一个简化移动应用发布过程的平台。它拥有一个用户友好的界面，使开发者能够轻松上传和分发他们的移动应用：'
- en: '![Figure 6.32 – Runway dashboard](img/Figure_06.32_B18113.jpg)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.32 – Runway 仪表盘](img/Figure_06.32_B18113.jpg)'
- en: Figure 6.32 – Runway dashboard
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.32 – Runway 仪表盘
- en: With a few clicks, you can push your app to different app stores, eliminating
    the headache of manual submissions. Runway offers integration between different
    CI/CD platforms, such as Bitrise, Codemagic, GitHub Actions, and more, automating
    the process of building, testing, and releasing your app. This saves you time
    and effort and ensures a high-quality product by catching issues early on.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 只需几次点击，你就可以将应用推送到不同的应用商店，省去了手动提交的烦恼。Runway 提供了不同 CI/CD 平台之间的集成，如 Bitrise、Codemagic、GitHub
    Actions 等，自动化构建、测试和发布应用程序的过程。这节省了你的时间和精力，并通过早期发现问题确保高质量的产品。
- en: 'It works with Android and iOS, making it a versatile choice for developers
    working on multi-platform apps. You can manage your app releases for both platforms
    in one central location, as shown here for iOS apps:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持 Android 和 iOS，使其成为开发跨平台应用程序的多功能选择。你可以在一个中心位置管理两个平台的应用发布，如下所示，针对 iOS 应用：
- en: '![Figure 6.33 – Runway dashboard for iOS submission](img/Figure_06.33_B18113.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.33 – iOS 提交的 Runway 仪表板](img/Figure_06.33_B18113.jpg)'
- en: Figure 6.33 – Runway dashboard for iOS submission
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.33 – iOS 提交的 Runway 仪表板
- en: 'You can also do the same for Android apps:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以对 Android 应用做同样的操作：
- en: '![Figure 6.34 – Runway dashboard for Android submission](img/Figure_06.34_B18113.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.34 – Android 提交的 Runway 仪表板](img/Figure_06.34_B18113.jpg)'
- en: Figure 6.34 – Runway dashboard for Android submission
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.34 – Android 提交的 Runway 仪表板
- en: 'It lets you set up different release channels (for example, alpha, beta, and
    production), allowing you to test your app with different user groups before going
    live:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 它允许你设置不同的发布渠道（例如 alpha、beta 和生产），让你可以在上线前与不同的用户群体进行测试：
- en: '![Figure 6.35 – Runway dashboard for Android rollout summary](img/Figure_06.35_B18113.jpg)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.35 – Android 发布摘要的 Runway 仪表板](img/Figure_06.35_B18113.jpg)'
- en: Figure 6.35 – Runway dashboard for Android rollout summary
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.35 – Android 发布摘要的 Runway 仪表板
- en: 'Integrations are core to Runway, and it puts a lot of work into making them
    a seamless, robust, and secure part of the experience:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 集成是 Runway 的核心，它投入大量精力使集成成为体验的一部分，确保其无缝、强大和安全：
- en: '![Figure 6.36 – Runway’s integration with distribution services](img/Figure_06.36_B18113.jpg)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.36 – Runway 与分发服务的集成](img/Figure_06.36_B18113.jpg)'
- en: Figure 6.36 – Runway’s integration with distribution services
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.36 – Runway 与分发服务的集成
- en: You can take a tour of the platform via its sandbox solutions for iOS ([https://demo.runway.team/dashboard/org/demo/app/appollo-ios](https://demo.runway.team/dashboard/org/demo/app/appollo-ios))
    and Android ([https://demo.runway.team/dashboard/org/demo/app/appollo-android](https://demo.runway.team/dashboard/org/demo/app/appollo-android)).
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过其 iOS ([https://demo.runway.team/dashboard/org/demo/app/appollo-ios](https://demo.runway.team/dashboard/org/demo/app/appollo-ios))
    和 Android ([https://demo.runway.team/dashboard/org/demo/app/appollo-android](https://demo.runway.team/dashboard/org/demo/app/appollo-android))
    的沙盒解决方案体验该平台。
- en: The Bitrise Release Management add-on
  id: totrans-402
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Bitrise 发布管理附加组件
- en: In **Bitrise Release Management** ([https://devcenter.bitrise.io/en/release-management.html](https://devcenter.bitrise.io/en/release-management.html)),
    you can see how your app is released. In this way, all team members can understand
    the progress of upcoming releases, enabling them to coordinate their work more
    effectively.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **Bitrise 发布管理** ([https://devcenter.bitrise.io/en/release-management.html](https://devcenter.bitrise.io/en/release-management.html))
    中，你可以查看应用程序的发布状态。这样，所有团队成员都能了解即将发布的进度，从而更有效地协调工作。
- en: 'With release management, you can automate tasks related to a specific release,
    such as monitoring feature readiness or submitting your app for App Store review:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 使用发布管理，你可以自动化与特定发布相关的任务，例如监控功能准备情况或提交应用程序进行 App Store 审核：
- en: '![Figure 6.37 – Bitrise Release Management add-on](img/Figure_06.37_B18113.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.37 – Bitrise 发布管理附加组件](img/Figure_06.37_B18113.jpg)'
- en: Figure 6.37 – Bitrise Release Management add-on
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.37 – Bitrise 发布管理附加组件
- en: 'You can always check the status of the submission process. For example, the
    following screenshot shows that we submitted the app to TestFlight, and that the
    next step is submitting the app to the App Store:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时检查提交过程的状态。例如，下面的截图显示我们已经将应用提交到 TestFlight，下一步是将应用提交到 App Store：
- en: '![Figure 6.38 – Bitrise release management stages](img/Figure_06.38_B18113.jpg)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.38 – Bitrise 发布管理阶段](img/Figure_06.38_B18113.jpg)'
- en: Figure 6.38 – Bitrise release management stages
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.38 – Bitrise 发布管理阶段
- en: Additionally, other tools can help you in releasing mobile apps, such as TestFairy
    ([https://testfairy.com/app-distrubution](https://testfairy.com/app-distrubution))
    and AppCenter ([https://learn.microsoft.com/en-us/appcenter/distribution/](https://learn.microsoft.com/en-us/appcenter/distribution/)).
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，其他工具也可以帮助你发布移动应用，例如TestFairy ([https://testfairy.com/app-distrubution](https://testfairy.com/app-distrubution))
    和AppCenter ([https://learn.microsoft.com/en-us/appcenter/distribution/](https://learn.microsoft.com/en-us/appcenter/distribution/))。
- en: Launching the app
  id: totrans-411
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动应用
- en: Once the app has been approved by the App Store team, you can notify your users
    of the new release in a variety of ways and also try to optimize your apps using
    **ASO**. Let’s explore how we can use the in-app update together.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用被App Store团队批准，你可以通过多种方式通知用户新的版本发布，并且尝试通过**ASO**优化你的应用。让我们一起探索如何使用应用内更新。
- en: In-app update
  id: totrans-413
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用内更新
- en: Users can update their apps directly through their apps without visiting the
    app store, and this is a great way to update them with the latest features and
    bug fixes. In-app updates enable users to update their apps directly within their
    apps without them having to go to the app store.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以直接通过应用更新他们的应用，而无需访问应用商店，这是一种很好的方式来更新应用的最新功能和修复的漏洞。应用内更新让用户能够直接在应用内更新，而无需去应用商店。
- en: By regularly updating your app, you can keep users engaged and reduce the chances
    of them abandoning your app as a result of bugs or a lack of new features.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 通过定期更新你的应用，你可以保持用户的参与度，减少用户因故障或缺乏新功能而放弃应用的可能性。
- en: 'There are two types of in-app updates:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 应用内更新有两种类型：
- en: Using **flexible in-app** updates means that the user can continue to use the
    app while the update is downloading and installing in the background. Once the
    update is complete, the user is prompted to restart the app so that they can use
    the updated version.
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**灵活的应用内**更新意味着用户可以在下载和安装更新的同时继续使用应用。更新完成后，用户会被提示重新启动应用，以便使用更新后的版本。
- en: An **immediate in-app** update requires the user to update the app before the
    updated version can be used. Once the user agrees to update, the updated app is
    downloaded and installed.
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即时应用内**更新要求用户在使用更新版本之前先进行更新。一旦用户同意更新，更新后的应用就会被下载并安装。'
- en: In-app updates can be a powerful tool for app developers who are looking to
    improve the user experience and ensure that more users are using the latest version
    of the app. Developers can increase user engagement, reduce churn, and stay competitive
    in the fast-moving mobile app market by implementing in-app updates.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 应用内更新可以成为应用开发者改进用户体验、确保更多用户使用最新版本应用的强大工具。开发者通过实施应用内更新，可以增加用户参与度，减少流失，并在快速发展的移动应用市场中保持竞争力。
- en: App Store Optimization (ASO)
  id: totrans-420
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用商店优化（ASO）
- en: ASO aims to optimize mobile apps for better visibility and higher ranking in
    app stores. The process involves researching keywords, writing compelling titles
    and descriptions, building links, and creating screenshots and videos.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: ASO旨在优化移动应用，以便在应用商店中获得更好的可见度和更高的排名。这个过程包括研究关键词、撰写引人注目的标题和描述、建立链接、以及创建截图和视频。
- en: 'ASO is influenced by the following factors:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: ASO受到以下因素的影响：
- en: An *app’s title* plays a vital role in search engine optimization as it is the
    first thing users see when they search for your app.
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*应用的标题*在搜索引擎优化中起着至关重要的作用，因为它是用户在搜索应用时首先看到的内容。'
- en: The *app’s description* should clearly explain what it is and why it is useful.
    It should use keywords throughout but make sure it reads naturally and doesn’t
    sound spammy.
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*应用的描述*应该清楚地解释它是什么以及它的用途。描述中应该使用关键词，但要确保它自然流畅，而不是听起来像是垃圾信息。'
- en: The app keyword is the term or phrase that users might search for in the app
    store. Include relevant keywords in the app’s description, title, and other metadata
    to improve the app’s visibility.
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用关键词是用户可能在应用商店搜索的词语或短语。将相关关键词包含在应用的描述、标题和其他元数据中，以提高应用的可见度。
- en: You can increase your app’s visibility in search engine results by encouraging
    users to rate and review it and responding to negative feedback.
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过鼓励用户评分和评论，以及回应负面反馈，来提高应用在搜索引擎结果中的可见度。
- en: Make sure the app icon is eye-catching and reflects the app’s purpose when users
    browse the app store.
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保应用图标醒目，并且能够反映应用的用途，帮助用户在浏览应用商店时快速识别。
- en: Videos and screenshots can help users understand what the app does. You should
    use high-quality images and videos to showcase the essential features of your
    app.
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频和截图可以帮助用户理解应用的功能。您应该使用高质量的图片和视频展示应用的核心功能。
- en: Optimize the app store metadata for each language if your app is available in
    multiple languages. App visibility can be improved in different regions by doing
    this.
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的应用支持多语言，请优化每种语言的应用商店元数据。这样可以提高在不同地区的应用可见性。
- en: Make sure your app is regularly updated with new features, bug fixes, and performance
    improvements.
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保您的应用定期更新，添加新功能、修复 bug 和提升性能。
- en: Conduct A/B testing on app icons, screenshots, and descriptions to find the
    best-performing combination.
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对应用图标、截图和描述进行 A/B 测试，以找到表现最佳的组合。
- en: ASO is an ongoing process, and it’s essential to monitor and update your app
    store listing regularly to ensure that it is up to date and reflects any changes
    to your app.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: ASO 是一个持续的过程，定期监控和更新应用商店列表非常重要，确保其保持最新状态并反映应用的任何变化。
- en: Iterate and optimize your app store listing based on the data collected.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 根据收集到的数据，对应用商店列表进行迭代和优化。
- en: Following this checklist can improve your app’s visibility and conversion rate,
    leading to increased downloads and user engagement. Different tools on the market
    can help you with ASO, such as **appfigures** ([https://appfigures.com/aso-tools](https://appfigures.com/aso-tools)).
    They have interesting insight into the Top Ranked iOS App Store Apps ([https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall](https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall)),
    Google Play Apps ([https://appfigures.com/top-apps/google-play/united-states/top-overall](https://appfigures.com/top-apps/google-play/united-states/top-overall)),
    and other stores. Additionally, they have different resources and guides about
    ASO ([https://appfigures.com/resources/guides](https://appfigures.com/resources/guides)).
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循此检查清单可以提高您的应用的可见性和转化率，进而增加下载量和用户参与度。市场上有不同的工具可以帮助您进行 ASO，例如 **appfigures**
    ([https://appfigures.com/aso-tools](https://appfigures.com/aso-tools))。他们提供了关于
    iOS 应用商店排名前列应用的有趣见解 ([https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall](https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall))，Google
    Play 应用 ([https://appfigures.com/top-apps/google-play/united-states/top-overall](https://appfigures.com/top-apps/google-play/united-states/top-overall))，以及其他商店的相关数据。此外，他们还提供了关于
    ASO 的不同资源和指南 ([https://appfigures.com/resources/guides](https://appfigures.com/resources/guides))。
- en: Post-release
  id: totrans-435
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布后
- en: Once a mobile app has been released to different app stores, developers must
    still perform various maintenance tasks. This includes monitoring app reviews,
    responding to user inquiries, and updating the app with bug fixes and new features.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦移动应用发布到不同的应用商店，开发者仍然需要执行各种维护任务。这包括监控应用评论、回应用户咨询、并更新应用以修复 bug 和添加新功能。
- en: Monitoring app performance
  id: totrans-437
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监控应用性能
- en: As soon as the app is released, it must be closely monitored to ensure it meets
    the release strategy requirements. As part of this process, you can monitor user
    feedback and usage analytics, handle user feedback and reviews, and analyze the
    app and bug reports. By doing so, we can identify potential issues and ensure
    users have the best experience possible. We will explore mobile app monitoring
    in [*Chapter 7*](B18113_07.xhtml#_idTextAnchor265), *Establishing Mobile App Monitoring,
    Observability,* *and Analytics*.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用发布，就必须密切监控，以确保它符合发布策略要求。作为这一过程的一部分，您可以监控用户反馈和使用分析，处理用户反馈和评论，分析应用和 bug 报告。通过这样做，我们可以发现潜在问题，并确保用户获得最佳体验。我们将在[*第
    7 章*](B18113_07.xhtml#_idTextAnchor265)中探讨移动应用监控、可观察性和分析，*建立移动应用监控、可观察性和分析*。
- en: Planning for future releases
  id: totrans-439
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 规划未来的发布
- en: 'Keeping your mobile application updated and improving it after releasing the
    current version is essential to maintaining user engagement. To plan for future
    releases, follow these steps:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布当前版本后，保持您的移动应用更新并持续改进是保持用户参与度的关键。为了规划未来的发布，您可以按照以下步骤进行：
- en: Update your product roadmap with new features, enhancements, and bug fixes based
    on feedback and analysis. Your business goals should align with the features that
    benefit your users the most.
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据反馈和分析，更新您的产品路线图，包括新功能、增强功能和 bug 修复。您的业务目标应该与那些最能帮助用户的功能保持一致。
- en: Follow the best practices for coding and design when implementing the planned
    features and enhancements. Make sure all bugs and issues are identified and fixed.
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实现计划的功能和增强时，请遵循编码和设计的最佳实践。确保所有的 bug 和问题都能被识别和修复。
- en: Implementing a release train
  id: totrans-443
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施发布列车
- en: The mobile release train is a process that accelerates your release cycles.
    This approach will help you release more consistently and allows distributed teams
    to work more aligned around app development.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 移动发布列车是一种加速您发布周期的过程。这种方法将帮助您更一致地发布，并允许分布式团队围绕应用开发更加对齐。
- en: Once you have CI/CD in place, you can build trains.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了CI/CD，您就可以构建列车。
- en: 'During the development phase, your teams have time to review, build, test,
    and merge features to the main branch that should be part of the train, as shown
    in the following figure:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发阶段，您的团队有时间审查、构建、测试和合并应该成为列车一部分的主分支功能，如下图所示：
- en: '![Figure 1.39 – Mobile release train](img/Figure_06.39_B18113.jpg)'
  id: totrans-447
  prefs: []
  type: TYPE_IMG
  zh: '![图1.39 – 移动发布列车](img/Figure_06.39_B18113.jpg)'
- en: Figure 1.39 – Mobile release train
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.39 – 移动发布列车
- en: During the release train, a wide range of stakeholders may be involved, including
    development teams, quality assurance teams, and product management, as well as
    multiple iterations and testing phases before the final release is completed.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布列车期间，可能涉及广泛的利益相关者，包括开发团队、质量保证团队、产品管理以及最终发布完成前的多次迭代和测试阶段。
- en: How to implement the release train
  id: totrans-450
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 如何实施发布列车
- en: 'To implement the release train, you must perform the following steps:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 要实施发布列车，您必须执行以下步骤：
- en: Adopt a schedule for fixed release trains (for example, 2 weeks or 1 week).
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 采用固定发布列车的时间表（例如，2周或1周）。
- en: Determine who will manage the release (the release manager).
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定谁将负责管理发布（发布经理）。
- en: Increase release confidence with feature flags and staged rollouts.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用功能标志和分阶段发布来增加发布的信心。
- en: Identify the scope of the release train. The release schedule includes the features
    and functionality that will be included in each release.
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定发布列车的范围。发布计划包括每个发布中将包含的功能和功能。
- en: Plan and prioritize features according to a clear process. A wide range of stakeholders,
    including product managers, developers, and users, should be involved in this
    process.
  id: totrans-456
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据明确的流程计划和优先考虑功能。产品经理、开发人员和用户等广泛的利益相关者应参与此过程。
- en: Remember, it’s an ongoing process since we are in the sustain stage, which requires
    support from outside for us to stay on track.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这是一个持续的过程，因为我们处于维持阶段，这需要外部支持以确保我们保持在轨道上。
- en: Summary
  id: totrans-458
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Mobile app release management is a crucial app development process that requires
    careful planning, testing, and execution. Following the best practices outlined
    in this chapter can ensure a smooth release process and maximize user satisfaction.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用发布管理是一个关键的应用开发过程，需要仔细规划、测试和执行。遵循本章中概述的最佳实践可以确保顺利的发布过程并最大化用户满意度。
- en: Release management for mobile apps involves the process of planning, scheduling,
    coordinating, and deploying new versions or updates of a mobile application to
    users. This process is crucial for regularly updating the app with new features,
    bug fixes, and security patches. However, there are different steps we should
    consider before, during, and after the release process. Let’s explore them together.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的发布管理涉及计划、调度、协调和部署移动应用的新版本或更新到用户。这一过程对于定期更新应用程序以及新功能、错误修复和安全补丁至关重要。但是，在发布过程之前、期间和之后，我们应考虑不同的步骤。让我们一起探讨它们。
- en: Mobile app release management is essential for businesses to optimize the user
    experience and maintain high quality. It involves planning and implementing new
    features/updates and hotfixes.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用发布管理对企业优化用户体验和保持高质量至关重要。它涉及计划和实施新功能/更新和热修复。
- en: However, releasing mobile apps requires different processes, steps, and tools.
    We discovered various stages of the release management process for mobile applications
    throughout the topics that were covered in this chapter.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，发布移动应用程序需要不同的流程、步骤和工具。我们在本章涵盖的主题中发现了移动应用程序发布管理过程的各个阶段。
- en: In the next chapter, we will continue adding more features to our mobile app
    and CI/CD pipeline to make sure that we are releasing quickly and frequently to
    our users.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续向我们的移动应用和CI/CD管道添加更多功能，以确保我们向用户快速而频繁地发布。
- en: 'Part 3: Monitoring, Optimizing, and Securing Mobile DevOps'
  id: totrans-464
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：监控、优化和保障移动DevOps
- en: Mobile DevOps involves monitoring the performance and usage of mobile apps in
    production environments and using that data to provide feedback to development
    teams. This can help identify and resolve issues quickly and improve the overall
    user experience.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 移动 DevOps 涉及在生产环境中监控移动应用的性能和使用情况，并利用这些数据向开发团队提供反馈。这有助于快速识别和解决问题，提升整体用户体验。
- en: 'This part has the following chapters:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 7*](B18113_07.xhtml#_idTextAnchor265)*, Establishing Mobile App Monitoring,
    Observability, and Analytics*'
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B18113_07.xhtml#_idTextAnchor265)*，建立移动应用监控、可观察性和分析*'
- en: '[*Chapter 8*](B18113_08.xhtml#_idTextAnchor306)*, Keeping Mobile Apps and DevOps
    Secure*'
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B18113_08.xhtml#_idTextAnchor306)*，确保移动应用和 DevOps 安全*'
- en: '[*Chapter 9*](B18113_09.xhtml#_idTextAnchor342)*, Mobile DevOps Best Practices*'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B18113_09.xhtml#_idTextAnchor342)*，移动 DevOps 最佳实践*'
