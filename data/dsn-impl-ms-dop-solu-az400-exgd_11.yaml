- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Managing Security and Compliance
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理安全性和合规性
- en: As important as it is to ensure that your application performs the functions
    it needs to, you also need to ensure it doesn’t do things that it shouldn’t. In
    the previous chapter, you learned about quality and testing in order to continuously
    measure whether your application is doing what it is supposed to do. In this chapter,
    you will learn how to prevent any unwanted behavior. This is the subject of security
    and compliance. While increasing the flow of value to your end users – by deploying
    faster and shortened delivery cycles – you will still want to make sure that you
    are delivering secure and compliant software. In this chapter, you will learn
    how to address these concerns in your DevOps processes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的应用程序执行所需功能同样重要的是，确保它不做任何不该做的事情。在上一章中，你了解了质量和测试，目的是不断衡量你的应用程序是否在按预期工作。在本章中，你将学习如何防止任何不必要的行为。这涉及到安全性和合规性问题。虽然通过更快的部署和缩短交付周期可以增加向最终用户提供的价值流，但你仍然需要确保交付的是安全和合规的软件。在本章中，你将学习如何在你的
    DevOps 流程中解决这些问题。
- en: 'To do this, this chapter will start by discussing the perceived trade-off between
    speed and security, and it will explain how security is not decreased but might
    even be increased when embracing DevOps. Next, a specific dimension of security
    is addressed: how to handle secrets such as keys and passwords that your pipeline
    and application need securely. Following this, code-scanning tools for automatically
    identifying possible security risks in your application code and your dependencies
    are discussed. The chapter concludes by discussing how to keep your infrastructure
    and configuration deployments compliant, and how to detect runtime security risks
    and threats using Azure Security Center, now called Microsoft Defender for Cloud.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，本章将从讨论速度与安全之间的感知权衡开始，并解释如何在拥抱 DevOps 时，安全性不会降低，反而可能会增加。接下来，讨论安全性的一个特定维度：如何安全地处理你的管道和应用程序所需的秘密，如密钥和密码。之后，介绍用于自动识别应用程序代码和依赖项中可能存在的安全风险的代码扫描工具。本章最后讨论如何保持你的基础设施和配置部署的合规性，以及如何使用
    Azure 安全中心（现称为 Microsoft Defender for Cloud）检测运行时安全风险和威胁。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Applying DevOps principles to security and compliance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 DevOps 原则应用于安全性和合规性
- en: Working with secrets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理秘密
- en: Detecting application code vulnerabilities
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测应用程序代码漏洞
- en: Working with dependencies
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与依赖项一起工作
- en: Ensuring infrastructure compliance
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保基础设施合规性
- en: Monitoring and detecting runtime security risks and threats
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控和检测运行时安全风险和威胁
- en: Other tools you can use
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用的其他工具
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To experiment with the techniques described in this chapter, you will need
    one or more of the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实验本章中描述的技术，你需要以下一种或多种工具：
- en: An Azure DevOps project with access to build and release pipelines and the right
    to install extensions
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有访问构建和发布管道权限的 Azure DevOps 项目，并有权安装扩展
- en: An Azure subscription (to sign up for Azure, you can go to [https://portal.azure.com](https://portal.azure.com)
    and follow the guide there if you do not have an account yet)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Azure 订阅（若你尚未拥有账户，可前往 [https://portal.azure.com](https://portal.azure.com)
    并按照指南进行注册）
- en: PowerShell with the Azure Az PowerShell module installed (instructions on how
    to install the PowerShell Azure module can be found at [https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-7.3.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-7.3.0))
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了 Azure Az PowerShell 模块的 PowerShell（如何安装 PowerShell Azure 模块的说明可以在 [https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-7.3.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-7.3.0)
    查阅）
- en: Optionally, subscriptions for WhiteSource Bolt, SonarCloud, or similar products
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选的 WhiteSource Bolt、SonarCloud 或类似产品的订阅
- en: The preceding are all available for free or as a trial, for learning or evaluation
    purposes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有内容都可以免费或试用，以便学习或评估用途。
- en: Applying DevOps principles to security and compliance
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 DevOps 原则应用于安全性和合规性
- en: Concerns about security and compliance can be a reason for companies to be reluctant
    to accept a full DevOps mindset as it would hinder their ability to make releases
    very often. In the past, they used to have fewer releases that were all handed
    off for security or penetration testing before being deployed to production. This
    gave them the confidence that they were not shipping software that contained security
    vulnerabilities.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 关于安全性和合规性的担忧，可能是公司不愿接受完全的DevOps思维方式的原因之一，因为这会妨碍它们频繁发布的能力。在过去，它们通常会减少发布频率，每次发布前都会进行安全或渗透测试。这给了它们信心，确保不会发布包含安全漏洞的软件。
- en: This practice of fewer releases and having a big final security test before
    the final release conflicts with a DevOps mindset, and this is where some companies
    struggle. They are looking for ways to ensure that they are delivering business
    value to their users with every release, but are not willing to compromise on
    security to do so. The question is whether this is a fair trade-off. Wouldn’t
    it be possible to have both speed and security? Might it not actually be the case
    that releasing faster and more often, in combination with rigorous automation,
    can help to increase the level of security in software development? To answer
    this question, it is good to first explore how security is often practiced in
    non-DevOps environments and how this needs to be changed when adopting DevOps.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这种减少发布频率、在最终发布之前进行一次大规模的安全测试的做法与DevOps的思维方式相冲突，这也是一些公司面临的难题。它们在寻找确保每次发布都能为用户提供业务价值的方法，但又不愿在此过程中妥协安全性。问题是，这样的取舍是否公平。难道不能在保证速度的同时保持安全性吗？或许实际上更频繁和更快速的发布，结合严格的自动化，反而能帮助提高软件开发中的安全性？为了回答这个问题，我们可以先探讨在非DevOps环境中安全性通常是如何实践的，并了解在采用DevOps时需要做出哪些改变。
- en: Bringing developers and security engineers together
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将开发人员和安全工程师聚集在一起
- en: In many companies, security engineers are part of a different department compared
    to developers. The thought behind this separation is that it is beneficial to
    have some distance between those who are writing code (that is, the developers)
    and those who are checking it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多公司中，安全工程师与开发人员属于不同的部门。这样分开的思路是认为将编写代码的人（即开发人员）与检查代码的人分开会更加有利。
- en: In the past, the same separation often existed between software developers and
    software testers. However, recent insights have shown that putting developers
    and testers closer together does not result in unwanted behaviors such as groupthink,
    only testing what is already known to be working, or trying to cheat the tests
    by developing only for known test cases. Both experience and research show that
    the opposite is true. Putting developers and testers together results in products
    of higher quality. It is for this reason that movements such as Agile recommend
    that development teams incorporate, among other things, the discipline of testing.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，软件开发人员与软件测试人员之间也常常存在相同的分隔。然而，最近的研究表明，将开发人员和测试人员放得更近并不会导致诸如“群体思维”、仅测试已知正常工作的内容，或通过仅为已知测试用例开发来作弊测试等不良行为。经验和研究表明，事实恰恰相反。将开发人员和测试人员放在一起可以产生更高质量的产品。正因如此，像敏捷开发这样的运动建议开发团队在开发过程中加入包括测试在内的各项纪律。
- en: It is by this same reasoning that the call for integrating security engineering
    into DevOps development teams is becoming louder. This movement is often called
    *DevSecOps* or *rugged DevOps*. Both movements advocate that using DevOps principles
    such as shifting left and automating as much as possible can help to increase
    security. They advocate that pen tests or vulnerability reviews of applications
    are no longer done manually, but that they are fully automated as part of the
    delivery pipeline. This enables automation, faster feedback loops, and continuous
    delivery and deployment practices.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正是基于这一思路，越来越多的人呼吁将安全工程整合进DevOps开发团队。这一运动通常被称为*DevSecOps*或*强固的DevOps*。这两种运动都主张，运用DevOps原则，如向左推进（shift
    left）并尽可能自动化，可以帮助提高安全性。它们提倡，渗透测试或应用程序的漏洞审查不再由人工完成，而是完全自动化，并成为交付管道的一部分。这使得自动化、快速反馈循环以及持续交付和部署成为可能。
- en: 'It is also advocated that shipping software more often can also help to increase
    security further, for the following reasons:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 还有人提倡，更频繁地发布软件也有助于进一步提高安全性，原因如下：
- en: When a reliable mechanism for shipping software automatically is available,
    any change that addresses a security risk can be deployed swiftly. Being able
    to react quickly to a new finding is a great security improvement.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当可用的自动化软件发布机制可靠时，任何解决安全风险的更改都可以迅速部署。能够快速响应新的发现是一个重大的安全改进。
- en: Speed itself can be a security measure. If the working of a system changes multiple
    times a day, it is significantly harder to figure out what its inner workings
    are at any given time and to misuse them. Applying the principle of immutable
    deployments and using infrastructure as code ensures that the infrastructure that
    is running an application is refreshed quite often. This is good mitigation of
    advanced persistent threats.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度本身也可以是一种安全措施。如果系统的工作状态每天变化多次，那么要弄清楚其内部工作原理并加以滥用就变得更加困难。应用不可变部署原则并使用基础设施即代码确保运行应用程序的基础设施经常得到刷新。这是有效减缓高级持续性威胁的良好措施。
- en: One of the things this chapter will explore is how to configure delivery pipelines
    to add security scanning. Please note that running these tools from a pipeline
    is a different discipline, which ensures that these tools are properly configured
    and apply the correct policies and requirements. For these activities, a security
    background and a close collaboration with security engineers are still essential.
    This is just another area where close collaboration can make a difference. Particularly
    on the subject of security, collaboration with other disciplines will be necessary
    – to automate all security checks and avoid (or minimize) any manual verification
    processes.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨的一个内容是如何配置交付管道以加入安全扫描。请注意，从管道中运行这些工具是一项不同的任务，它确保这些工具被正确配置并且应用正确的政策和要求。对于这些活动，拥有安全背景并与安全工程师密切合作仍然至关重要。这只是另一个密切合作能够带来变化的领域。特别是在安全问题上，需要与其他学科的协作——以自动化所有安全检查并避免（或最小化）任何手动验证过程。
- en: Security concerns
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全问题
- en: 'The rest of this chapter will introduce a number of security concerns, but
    it is helpful to realize that some of the previous chapters have introduced security
    concerns already. As you already know from software development, security is not
    just something that you add in one place. Security should be applied everywhere.
    The following diagram shows different activities surrounding the creation and
    delivery of software. Next to each activity, the applicable security concerns
    are shown:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本章其余部分将介绍一些安全问题，但认识到一些前面的章节已经介绍了一些安全问题会有所帮助。正如你从软件开发中已经知道的，安全不仅仅是你在某一个地方添加的东西。安全应该无处不在。以下图表显示了与软件创建和交付相关的不同活动。在每个活动旁边，显示了适用的安全问题：
- en: '![Figure 11.1 – Software development activities and security concerns ](img/B18655_11_01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – 软件开发活动与安全问题](img/B18655_11_01.jpg)'
- en: Figure 11.1 – Software development activities and security concerns
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – 软件开发活动与安全问题
- en: 'Let’s walk through a quick recap of the security concerns at each of these
    stages:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下这些阶段中的安全问题：
- en: '**Branch-master merge**: At this stage, the four-eyes principle is applied
    using pull requests. Pull requests allow another engineer to review the changes
    before they are merged into the main branch. Branch policies are used to make
    the use of pull requests mandatory, to ensure that code compiles and that the
    unit tests run. This was discussed in [*Chapter 4*](B18655_04.xhtml#_idTextAnchor069),
    *Everything Starts with Source Control*, and [*Chapter 5*](B18655_05.xhtml#_idTextAnchor177),
    *Moving to Continuous Integration*.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分支-主分支合并**：在这个阶段，通过拉取请求应用四眼原则。拉取请求允许其他工程师在合并到主分支之前审查更改。分支策略用于强制要求使用拉取请求，确保代码能够编译并且单元测试能够运行。这在[*第
    4 章*](B18655_04.xhtml#_idTextAnchor069)《一切从源代码管理开始》和[*第 5 章*](B18655_05.xhtml#_idTextAnchor177)《迁移到持续集成》中已有讨论。'
- en: '**Build**: During this stage, a security scan of all source code and third-party
    dependencies is executed by adding additional tasks to the build pipeline. This
    prevents security risks from propagating unchecked. We will discuss how to do
    this in this chapter, in the *Working with secrets* section.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：在这个阶段，通过向构建管道添加额外任务，执行所有源代码和第三方依赖的安全扫描。这可以防止安全风险在未经检查的情况下传播。我们将在本章的《处理机密》部分讨论如何做到这一点。'
- en: '**Release**: During the release, approvers can be configured. An approver is
    a user who has to give their approval before the deployment to a specific stage
    can continue. Additionally, automated release gates are used to ensure (and further
    enforce) that certain criteria are met before a release can continue. We discussed
    how to do this in [*Chapter 6*](B18655_06.xhtml#_idTextAnchor330), *Implementing
    Continuous Deployment and Release Management*.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：在发布过程中，可以配置批准人。批准人是指必须在部署到特定阶段之前提供批准的用户。此外，使用自动化发布门控确保（并进一步强制执行）在发布可以继续之前满足某些标准。我们在
    [*第6章*](B18655_06.xhtml#_idTextAnchor330)，*实施持续部署和发布管理* 中讨论了如何做到这一点。'
- en: '**Deployment environment (target systems)**: All applications will run in a
    target environment. This can be on-premises; however, in this book, the focus
    is on Azure. For runtime security and compliance concerns, this chapter will introduce
    Azure Policy and Microsoft Defender for Cloud, which was formerly known as Azure
    Security Center.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署环境（目标系统）**：所有应用程序都会在目标环境中运行。可以是本地部署；然而，本书重点介绍的是 Azure。对于运行时的安全性和合规性问题，本章将介绍
    Azure Policy 和 Microsoft Defender for Cloud（前身为 Azure Security Center）。'
- en: '**Cross-cutting**: All of the preceding points are only useful if there is
    sufficient access control within the Azure DevOps environment. While this is not
    in the scope of this book, it is an important angle to cover. Users should have
    enough rights to do their work, but they should not be able to make unauthorized
    changes to policies, builds, and deployment processes. Additionally, proper secret
    management is needed to keep secrets such as certificates, keys, and passwords
    secure during all phases of the delivery process. How we can do this is also covered
    in this chapter.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横向影响**：前述所有要点只有在 Azure DevOps 环境中有足够的访问控制时才有用。尽管这不在本书的范围之内，但它是一个重要的角度。用户应该拥有足够的权限来完成他们的工作，但不应能够对政策、构建和部署过程做出未经授权的更改。此外，在整个交付过程中，需要进行适当的机密管理，以确保证书、密钥和密码等机密的安全。我们如何做到这一点，本章也会进行讨论。'
- en: Now, with an understanding of how software and security engineers can come together
    to work on an application, it is time to address the different aspects of this
    work in the following sections. The next section will discuss how to handle secrets.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，了解了软件和安全工程师如何协作开发应用程序，接下来是时候在以下各节中讨论这项工作的不同方面了。下一节将讨论如何处理机密。
- en: Working with secrets
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与机密一起工作
- en: An important security element is the handling of secrets. When deploying an
    application, there are always secrets involved. Especially when deploying to the
    cloud – that is, over the internet – handling these access keys in a secure way
    is very important. Besides the secrets that are necessary for deployment, there
    are also secrets that need to be inserted into the runtime configuration of an
    application. A common example is for accessing the database.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的安全元素是机密的处理。在部署应用程序时，总是涉及到机密。尤其是在部署到云端时——即通过互联网——以安全的方式处理这些访问密钥至关重要。除了部署所需的机密外，还有一些机密需要插入到应用程序的运行时配置中。一个常见的例子是访问数据库时所需的机密。
- en: In [*Chapter 8*](B18655_08.xhtml#_idTextAnchor542), *Implement* *Infrastructure
    and Configuration as Code*, multiple mechanisms for delivering application configurations
    were discussed, including **Azure Resource Manager** (**ARM**) templates. However,
    templates require the input of external secrets, since they cannot be stored in
    parameter files in source control.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第8章*](B18655_08.xhtml#_idTextAnchor542)，*实现* *基础设施和配置即代码* 中，讨论了多种交付应用程序配置的机制，包括
    **Azure Resource Manager**（**ARM**）模板。然而，模板需要输入外部机密，因为它们不能存储在源代码控制中的参数文件中。
- en: Important Note
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Secrets should not be stored in source control.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 不应将机密存储在源代码控制中。
- en: If secrets cannot be stored in source control, then where should they be stored
    instead? Common options include storing secrets in service connections or variable
    groups.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果机密不能存储在源代码控制中，那么应该将其存储在哪里呢？常见的选项包括将机密存储在服务连接或变量组中。
- en: Storing secrets in service connections
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将机密存储在服务连接中
- en: The first group of secrets that are needed for the deployment of any application
    is those secrets that are required for connecting to the target system. No individual
    person should have access to these secrets, as they are only used during deployments.
    This is why Azure Pipelines allows you to store them securely in service connections.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 部署任何应用程序所需的第一组机密是连接到目标系统所需的机密。任何个人都不应访问这些机密，因为它们仅在部署期间使用。这也是为什么 Azure Pipelines
    允许你将它们安全地存储在服务连接中的原因。
- en: A service connection is the abstraction of another system that can be connected
    to, for executing tasks in Azure Pipelines. Service connections have a specific
    type – that is, to specify the family of systems they can be used to connect to.
    There are out-of-the-box service connection types for connecting to Azure, GitHub,
    Jira, npm, NuGet, and over a dozen more systems. New service connection types
    can also be added through the Azure DevOps extension mechanism.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接是另一个系统的抽象，可以用于执行 Azure Pipelines 中的任务。服务连接有特定类型——即指定它们可以连接的系统类型。Azure、GitHub、Jira、npm、NuGet
    和其他十多种系统都有现成的服务连接类型。也可以通过 Azure DevOps 扩展机制添加新的服务连接类型。
- en: Service connections can contain a reference to the location of another system
    – often, a URL. Next to the location, they can contain an authorization token,
    a username, and/or a password, depending on the type of service connection. Secrets
    that are stored inside a service connection can never be retrieved again, not
    even by administrators. Also, whenever any details of the service connection are
    changed, the secret must be re-entered as well. This is to prevent a previously
    entered secret from being misused to access another location. These details indicate
    how service connections are designed to provide a secure location for storing
    connection credentials.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接可以包含指向另一个系统位置的引用——通常是一个网址。在该位置旁边，它们可以包含授权令牌、用户名和/或密码，具体取决于服务连接的类型。存储在服务连接中的机密不能再被检索，甚至管理员也无法访问。此外，每当服务连接的任何细节发生更改时，必须重新输入机密。这是为了防止之前输入的机密被滥用以访问其他位置。这些细节表明，服务连接被设计为提供一个安全的位置来存储连接凭证。
- en: 'Service connections can be managed in a central location for each Azure DevOps
    project. You can create new connections, edit existing ones, alter user permissions,
    and much more. Practice this by following these steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接可以在每个 Azure DevOps 项目的中心位置进行管理。你可以创建新的连接、编辑现有的连接、修改用户权限等等。按照以下步骤练习：
- en: To open this view, navigate to **Project Settings**. A vertical list of various
    setting options will open.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要打开此视图，请导航至**项目设置**。将打开一个包含各种设置选项的垂直列表。
- en: 'From the list, click on **Service connections**. You will be able to view the
    various connections, as shown in the following screenshot:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中点击**服务连接**。你将能够查看各种连接，如下图所示：
- en: '![Figure 11.2 – Creating a new service connection ](img/B18655_11_02.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.2 – 创建新的服务连接](img/B18655_11_02.jpg)'
- en: Figure 11.2 – Creating a new service connection
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – 创建新的服务连接
- en: Now, click on the **New service connection** button at the top right of the
    screen if you wish to create new service connections.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你希望创建新的服务连接，点击屏幕右上方的**新建服务连接**按钮。
- en: 'To modify permissions, click on the **More Actions** submenu under **Security**.
    This will take you to a screen that is similar to the following screenshot:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要修改权限，请点击**安全**下的**更多操作**子菜单。这将带你到一个类似于下图的屏幕：
- en: '![Figure 11.3 – Service connection security settings  ](img/B18655_11_03.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.3 – 服务连接安全设置](img/B18655_11_03.jpg)'
- en: Figure 11.3 – Service connection security settings
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – 服务连接安全设置
- en: 'From the **Edit and Security** view, you can now carry out these actions:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在**编辑和安全**视图中，你现在可以执行以下操作：
- en: Edit the service connection details.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑服务连接详情。
- en: Alter user permissions.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改用户权限。
- en: Restrict permissions.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制权限。
- en: Add more users or groups and specify, for each, whether they can use or administer
    the endpoint.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加更多用户或组，并为每个用户或组指定是否可以使用或管理该端点。
- en: Specify which pipelines can use this service connection.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定哪些管道可以使用此服务连接。
- en: Every pipeline in the project should not have access to use the service connection
    by default. Instead, each pipeline that wants to use the service connection must
    be authorized by a service connection administrator first.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 项目中的每个管道默认不应有权限使用服务连接。相反，每个希望使用服务连接的管道必须首先获得服务连接管理员的授权。
- en: Storing secrets in variable groups
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在变量组中存储机密
- en: There are more secrets involved in application development than those that are
    required to connect to other systems. Examples include license keys, which are
    required during application compilation, or database usernames and passwords,
    which need to be passed on to the application after deployment or as part of an
    ARM template deployment.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用开发中涉及的机密比仅用于连接其他系统的机密更多。例如，包括在应用编译过程中需要的许可证密钥，或在部署后需要传递给应用的数据库用户名和密码，或作为
    ARM 模板部署的一部分传递的数据库信息。
- en: These secrets can be stored in pipeline variables or variable groups, which
    we covered in [*Chapter 3*](B18655_03.xhtml#_idTextAnchor049), *Getting the Best
    Out of DevOps Tools*, in the *Creating a build definition in Azure DevOps* section.
    Microsoft will store all variables that are marked as secrets securely and make
    them non-retrievable through the user interface.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这些机密可以存储在管道变量或变量组中，关于这一点我们在[*第 3 章*](B18655_03.xhtml#_idTextAnchor049)，“*优化
    DevOps 工具使用效果*”部分中，讲解了在*Azure DevOps 中创建构建定义*时的相关内容。微软会安全地存储所有标记为机密的变量，并使其无法通过用户界面进行检索。
- en: However, there might be reasons for not wanting to store secrets in Azure DevOps
    but in a specialized key store, such as Azure Key Vault, instead. Doing so will
    provide the extra guarantees that come with Key Vault and the ability to further
    control access policies using **Azure role-based access control** (**Azure RBAC**)
    and Key Vault access policies.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，可能有一些原因不希望将机密存储在 Azure DevOps 中，而是存储在专门的密钥存储中，例如 Azure Key Vault。这样做将提供与
    Key Vault 一起的额外保障，并能够使用**Azure 基于角色的访问控制**（**Azure RBAC**）和密钥库访问策略进一步控制访问策略。
- en: 'When storing secrets in an Azure key vault, they can still be used as a variable
    group as well, by connecting an empty variable group to the key vault through
    a service connection, as shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当将机密存储在 Azure 密钥库中时，它们仍然可以作为变量组使用，通过通过服务连接将空的变量组连接到密钥库，如下图所示：
- en: '![Figure 11.4 – Key Vault as the storage for a variable group ](img/B18655_11_04.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.4 – 将 Key Vault 用作变量组的存储](img/B18655_11_04.jpg)'
- en: Figure 11.4 – Key Vault as the storage for a variable group
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4 – 将 Key Vault 用作变量组的存储
- en: 'To use a key vault as the storage for a variable group, perform the following
    actions:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要将密钥库用作变量组的存储，请执行以下操作：
- en: Enable the **Link secrets from an Azure key vault as variables** second slider
    to load the secrets from the key vault.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**从 Azure 密钥库链接机密作为变量**的第二个滑块，以从密钥库加载机密。
- en: Select an already existing ARM service connection from the drop-down menu or
    create a service connection with a new managed identity for Azure on the fly by
    selecting an Azure subscription from the list.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择一个已存在的 ARM 服务连接，或者通过从列表中选择一个 Azure 订阅，动态创建一个新的 Azure 管理身份服务连接。
- en: Type in the name of the key vault that the secrets should be loaded into. You
    can also select one from the drop-down menu. In this instance, only key vaults
    that are accessible by the selected service connection are shown.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入要加载机密的密钥库名称。你也可以从下拉菜单中选择一个。在此情况下，仅显示可通过选定的服务连接访问的密钥库。
- en: Access for specific users can be configured using the **Security** tab.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用**安全性**选项卡配置特定用户的访问权限。
- en: The proper authorizations for the service connection to Azure and the key vault
    can also be automatically created. Please note that both operations will make
    changes to the Azure security setup, so ensure that these are (still) correct.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以自动创建正确的权限，以便访问 Azure 和密钥库的服务连接。请注意，这两个操作会对 Azure 安全设置进行更改，因此请确保这些设置（仍然）是正确的。
- en: Detecting application code vulnerabilities
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测应用代码漏洞
- en: The security assessments that were often conducted at regular intervals in the
    pre-DevOps era cannot be just left out when moving to a DevOps culture. This means
    that, instead of leaving them out, they must be conducted in some other way. There
    are two approaches to doing this.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 时代之前定期进行的安全评估，在转向 DevOps 文化时并不能完全省略。这意味着，必须以某种方式继续进行这些评估，而不是简单地放弃。可以通过两种方式来进行。
- en: The first approach is to keep doing pen tests, security reviews, and other security
    inspections at regular intervals just as before. However, instead of waiting for
    an okay from the tests before moving to production, code is deployed to production
    separate from the security assessment(s). This implies that there is an accepted
    risk that there might be vulnerabilities shipped to production that are found
    only during the next security scan, which will be addressed in the next release.
    Using this approach, it is possible to achieve speed, but then it also needs to
    be accepted that some vulnerabilities might exist for a while.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是像以前一样，定期进行渗透测试、安全审查和其他安全检查。然而，代码不是等到测试通过后才进入生产环境，而是在与安全评估分开的情况下直接部署到生产环境。这意味着接受存在风险的假设，即可能会有一些漏洞在下次安全扫描时被发现，并会在下一个版本中解决。使用这种方法可以实现速度，但也需要接受某些漏洞可能会存在一段时间。
- en: The second approach relies on making application security scanning part of the
    regular workflow for committing code to the source code repository. For example,
    security code reviews do not have to be done per increment or every two months.
    They can also be done per pull request – before the code gets merged. Now, all
    of a sudden, you are no longer detecting vulnerabilities but are instead preventing
    them. The same can be done with security vulnerability scans. They can become
    part of the delivery pipeline, or a full nightly **Quality Assurance** (**QA**)
    build that reports back on the quality of development every morning.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是将应用程序安全扫描作为常规工作流程的一部分，纳入到将代码提交到源代码库的过程中。例如，安全代码审查不必每个增量或每两个月进行一次。它们也可以在每次拉取请求时进行——在代码合并之前。这样，你突然间不再只是检测漏洞，而是改为防止漏洞的出现。安全漏洞扫描也可以采用相同的方式。它们可以成为交付流水线的一部分，或者成为一个完整的每晚**质量保证**（**QA**）构建，每天早晨报告开发质量。
- en: Of course, it is often not as black and white as that, and many companies use
    a combination of these approaches. They use automated feedback mechanisms to detect
    whatever they can, make security code reviews part of the pull request workflow,
    and then combine this with manual pen testing at regular intervals. This way,
    the speed of delivery is increased, while there is no increase or even a decrease
    in security risks, the latter being the consequence of the speed at which vulnerabilities
    can be mitigated.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，实际情况通常并不像黑白分明那样，很多公司会结合使用这些方法。它们使用自动化反馈机制来检测可以发现的问题，将安全代码审查作为拉取请求工作流程的一部分，然后结合定期的手动渗透测试。通过这种方式，交付速度提高的同时，安全风险没有增加，甚至可能减少，后者是漏洞修复速度提高的结果。
- en: OWASP Top 10
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OWASP Top 10
- en: When it comes to the security of web applications, there are several types of
    security issues that are both common and responsible for the vast majority of
    all security issues. These types of issues comprise the OWASP Top 10\. This is
    a list of the 10 most common types of security issues, published by the **Open
    Web Application Security Platform** (**OWASP**). The list is reviewed every few
    years but has remained quite stable over the last couple of years.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web应用程序安全方面，有几种常见的安全问题，负责编制大部分安全问题。这些问题类型包括OWASP Top 10。这是一个列出十大最常见安全问题的清单，由**开放Web应用程序安全平台**（**OWASP**）发布。该清单每隔几年会进行一次审查，但在过去几年里保持了相对稳定。
- en: Most of the errors in the OWASP Top 10 can be prevented by implementing automated
    security tests, either by using static code analysis for security vulnerabilities
    or with dynamic testing using the **OWASP Zed Attack Proxy** (**OWASP ZAP**).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP Top 10中的大部分错误都可以通过实施自动化安全测试来预防，方法可以是使用静态代码分析来检查安全漏洞，或者使用**OWASP Zed攻击代理**（**OWASP
    ZAP**）进行动态测试。
- en: Implementing automated vulnerability scanning
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施自动化漏洞扫描
- en: In the previous chapter, in which continuous testing was discussed, SonarCloud
    was introduced as a code scanner for technical debt and code quality. Besides
    assessing the quality of application code, SonarCloud can also be used to scan
    for security vulnerabilities. In [*Chapter 10*](B18655_10.xhtml#_idTextAnchor760),
    *Integrating Continuous Testing*, you learned how to add a SonarCloud scan to
    your pipeline. There are other more specialized tools available as well, which
    we will discuss in the last section of this chapter.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，讨论了持续测试，并介绍了 SonarCloud 作为用于技术债务和代码质量的代码扫描工具。除了评估应用程序代码的质量外，SonarCloud
    还可以用于扫描安全漏洞。在[*第10章*](B18655_10.xhtml#_idTextAnchor760)《集成持续测试》中，您学习了如何将 SonarCloud
    扫描添加到您的管道中。还有其他更多专业化的工具可供使用，我们将在本章的最后一部分讨论这些工具。
- en: These tools assess an application based on static tests. They scan the code
    to identify any risky code. This is called a white-box approach because they can
    see, inspect, and scan all of the code. In other words, everything is visible.
    This is the opposite of a black-box approach, where the running application is
    treated as a closed whole and is only tested by invoking it and observing the
    responses. One tool that can do this is the OWASP ZAP.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具通过静态测试评估应用程序。它们扫描代码以识别任何有风险的代码。这被称为白盒方法，因为它们可以看到、检查和扫描所有代码。换句话说，一切都是可见的。这与黑盒方法相反，黑盒方法将运行中的应用程序视为一个封闭的整体，只通过调用它并观察其响应来进行测试。OWASP
    ZAP 就是能够执行这种测试的工具之一。
- en: The OWASP ZAP
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OWASP ZAP
- en: 'The OWASP ZAP is a tool that can perform the automated pen test of an application.
    This tool can run in two modes:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP ZAP 是一款可以执行应用程序自动化渗透测试的工具。该工具可以在两种模式下运行：
- en: '**A baseline scan**: The baseline scan takes only a few minutes, and it is
    optimized to iterate over as many security risks as possible within those few
    minutes. This makes the baseline scan quick enough to be run early on in the deployment
    pipeline. It is even possible to run the security scan after every deployment
    to the first test environment, resulting in fast feedback to developers.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基准扫描**：基准扫描只需几分钟，并且经过优化，可以在这几分钟内尽可能多地扫描安全风险。这使得基准扫描足够快速，能够在部署管道的早期阶段运行。甚至可以在每次部署到第一个测试环境后运行安全扫描，从而为开发人员提供快速反馈。'
- en: '**A full active scan**: The full active scan takes more time. In this type
    of scan, the proxy will examine every response from the application to identify
    other URLs that are part of the application, scanning them as well. In this way,
    the full application is discovered on the fly, using a spidering approach. This
    type of scan is more complete, but it also takes more time. For this reason, full
    scans are often run at intervals – for example, every night.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整主动扫描**：完整的主动扫描需要更多时间。在这种类型的扫描中，代理会检查来自应用程序的每个响应，以识别应用程序的其他 URL，并对它们进行扫描。通过这种方式，完整的应用程序会在运行时被发现，采用蜘蛛抓取的方式。这种扫描方式更加全面，但也需要更多时间。因此，完整扫描通常会在间隔时间内进行，例如每晚一次。'
- en: The OWASP ZAP tries to identify any possible security risks. Some of the most
    notable risks are SQL injections, JavaScript reflections, and path traversals.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP ZAP 尝试识别任何可能的安全风险。最显著的风险包括 SQL 注入、JavaScript 反射和路径遍历。
- en: The OWASP ZAP is an application that can be installed on any virtual machine.
    The disadvantage of this is that the virtual machine is always running, even when
    there is no scan running. This is more costly, and of course, the virtual machine
    itself needs to be patched and secured too. More recently, a containerized version
    of the proxy was also made available. This container can be run in Azure Container
    Instances, spinning up the proxy only when needed and tearing it down right after
    execution.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP ZAP 是一款可以安装在任何虚拟机上的应用程序。其缺点是，即使没有正在运行的扫描，虚拟机也会一直运行。这会增加成本，当然，虚拟机本身也需要进行补丁更新和安全加固。最近，还推出了该代理的容器化版本。该容器可以在
    Azure 容器实例中运行，只在需要时启动代理，执行完毕后立即销毁。
- en: This completes our introduction to code-scanning tools and their implementation.
    With the help of these tools, you can detect vulnerabilities in your application
    and prevent any security issues. The next section will examine how you can scan
    application dependencies.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了我们对代码扫描工具及其实现的介绍。在这些工具的帮助下，您可以检测应用程序中的漏洞并防止任何安全问题。下一部分将探讨如何扫描应用程序的依赖项。
- en: Working with dependencies
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理依赖项
- en: Next to the security risks that application code developed in-house poses, there
    is also a risk associated with components that are reused. Between 50% and 80%
    of modern application code is not developed in-house but is taken from other parties
    in the form of packages or dependencies. Some of these might be open source, but
    this is not necessarily the case. There can also be components that are bought
    from other development companies or binaries taken from galleries such as NuGet.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了应用程序代码本身可能带来的安全风险外，还存在与重用组件相关的风险。现代应用程序代码中有 50% 到 80% 不是内部开发的，而是来自其他方的包或依赖项。一些可能是开源的，但不一定如此。也可能是从其他开发公司购买的组件或从如
    NuGet 等库中获取的二进制文件。
- en: Dependencies not only pose security risks but also licensing risks. What happens
    if a team starts using a component that is published under the GPL license for
    a closed source component? If anyone ever finds out, they can be forced to open
    source their product, or at least suffer public shame for not using the work of
    others according to the license.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项不仅带来安全风险，还可能带来许可风险。如果一个团队开始使用一个以 GPL 许可发布的组件作为封闭源组件，会发生什么？如果有人发现，他们可能被迫将产品开源，或者至少会因为未根据许可使用他人的工作而遭受公开的耻辱。
- en: To mitigate these risks, a number of tools can be used to detect and scan all
    of the dependencies that are used when building an application. One of the tools
    available to do this is WhiteSource Bolt, which is available as an extension from
    the Azure DevOps marketplace.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了降低这些风险，可以使用多种工具来检测和扫描构建应用程序时使用的所有依赖项。其中一个可用的工具是 WhiteSource Bolt，它作为扩展可从 Azure
    DevOps 市场获取。
- en: Working with WhiteSource Bolt
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 WhiteSource Bolt
- en: 'To start executing scans with WhiteSource Bolt, perform the following actions:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 WhiteSource Bolt 执行扫描，请执行以下操作：
- en: Install the WhiteSource Bolt extension from the Azure DevOps marketplace.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Azure DevOps 市场安装 WhiteSource Bolt 扩展。
- en: Navigate to the **WhiteSource Bolt** menu under **Pipelines**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**Pipelines**下的**WhiteSource Bolt**菜单。
- en: Sign up and accept the license terms.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册并接受许可条款。
- en: 'Add the **WhiteSource Bolt** scanning task to build or release definitions,
    as shown in the following screenshot:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下图所示，将**WhiteSource Bolt**扫描任务添加到构建或发布定义中：
- en: '![Figure 11.5 – A WhiteSource Bolt pipeline task ](img/B18655_11_05.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.5 – 一个 WhiteSource Bolt 管道任务](img/B18655_11_05.jpg)'
- en: Figure 11.5 – A WhiteSource Bolt pipeline task
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.5 – 一个 WhiteSource Bolt 管道任务
- en: 'Once a pipeline with the WhiteSource Bolt task installed has run, the page
    with the build results will contain an extra tab called **WhiteSource** that shows
    similar results, as shown in the following screenshot:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了 WhiteSource Bolt 任务的管道运行完成，构建结果页面将包含一个额外的标签，名为**WhiteSource**，显示类似的结果，如下图所示：
- en: '![Figure 11.6 – The WhiteSource report ](img/B18655_11_06.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.6 – WhiteSource 报告](img/B18655_11_06.jpg)'
- en: Figure 11.6 – The WhiteSource report
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.6 – WhiteSource 报告
- en: This completes our discussion on dependency scanning. As mentioned earlier,
    you can use these tools to your advantage to detect and scan all the dependencies
    that are used when building an application. In the next section, infrastructure
    compliance is introduced.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了我们关于依赖项扫描的讨论。如前所述，您可以利用这些工具检测和扫描在构建应用程序时使用的所有依赖项。在下一节中，将介绍基础设施合规性。
- en: Ensuring infrastructure compliance
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确保基础设施合规性
- en: Another important topic is that of compliance. In many countries or markets,
    there are sets of rules and policies that must be implemented or adhered to when
    creating software. A fair share of these policies relates to the infrastructure
    that the applications are running on. If this infrastructure is deployed and managed
    on the Azure platform, Azure Policy can be a powerful tool for ensuring that the
    infrastructure complies with regulations.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要话题是合规性。在许多国家或市场中，创建软件时必须实施或遵守一系列规则和政策。其中很多政策与应用程序运行的基础设施相关。如果这些基础设施部署并管理在
    Azure 平台上，Azure Policy 可以成为确保基础设施符合规定的强大工具。
- en: In [*Chapter 8*](B18655_08.xhtml#_idTextAnchor542), *Implement Infrastructure
    and Configuration as Code*, the topic of ARM templates was discussed. ARM templates
    can be viewed as a technique for describing a complete Azure environment as a
    JSON array with many objects, each describing one resource in an application’s
    infrastructure.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第8章*](B18655_08.xhtml#_idTextAnchor542)《将基础设施和配置实现为代码》中，讨论了 ARM 模板的相关内容。ARM
    模板可以被视为一种技术，用于将完整的 Azure 环境描述为一个 JSON 数组，数组中的每个对象描述了应用程序基础设施中的一个资源。
- en: Azure Policy allows you to write policies that query this document and the changes
    that are being made through any of the APIs or ARM templates. Whenever a resource
    is found that matches the query, it can be prevented from being created or the
    match can be added to a list of audit results. Azure Policy can remediate or modify
    insecure configurations to prevent mistakes.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 策略允许您编写查询该文档以及通过任何 API 或 ARM 模板进行的更改的策略。每当找到一个与查询匹配的资源时，可以阻止其创建，或者将该匹配项添加到审核结果列表中。Azure
    策略可以修复或修改不安全的配置，防止出现错误。
- en: Next to writing custom policies, there are many policies readily available for
    all Azure users. These policies can be used to audit resources that do not comply
    with best practices or general advice. There are also groups of policies available,
    called initiatives, that describe the applicable parts of market standards.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 除了编写自定义策略外，还有许多现成的策略可供所有 Azure 用户使用。这些策略可以用来审核不符合最佳实践或通用建议的资源。还有一组组的策略，称为计划（Initiatives），它们描述了市场标准的适用部分。
- en: Assigning an Azure policy or initiative
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分配 Azure 策略或计划
- en: Policies can be assigned at different levels within Azure, either at the resource
    group level, subscription level, or management group level. This can be done through
    the portal, ARM templates or blueprints, or PowerShell.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 策略可以在 Azure 中的不同级别进行分配，具体可以是在资源组级别、订阅级别或管理组级别。可以通过门户、ARM 模板或蓝图，或者 PowerShell
    来完成此操作。
- en: 'To use PowerShell, the following series of commands can be used:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 PowerShell，可以使用以下一系列命令：
- en: 'To retrieve a reference to the resource group and policy, use the following
    command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检索资源组和策略的引用，请使用以下命令：
- en: '[PRE0]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The policy that is chosen here is a built-in policy that will audit all virtual
    machines that do not use managed disks but have custom disks in storage accounts.
    This policy definition will be used in the command in the following assignment.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这里选择的策略是一个内置策略，将审核所有未使用托管磁盘但在存储账户中有自定义磁盘的虚拟机。此策略定义将在以下任务分配的命令中使用。
- en: 'To assign the policy to the resource group, use the following command:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将策略分配给资源组，请使用以下命令：
- en: '[PRE1]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Within 30 minutes of this assignment, the new policy will become active. At
    this point, a policy evaluation cycle is started, and all of the resources within
    the assignment scope will be evaluated against the policy. At the time of writing,
    there is no published SLA regarding how long such an evaluation cycle can take.
    Experience shows that this can be anything between 15 minutes and multiple hours,
    depending on the size of the assignment scope.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在该任务分配后的30分钟内，新策略将生效。此时，会启动策略评估周期，所有在任务范围内的资源将会依据该策略进行评估。在撰写时，尚未发布有关此类评估周期所需时间的服务水平协议（SLA）。经验表明，评估周期的时间可以从15分钟到几个小时不等，具体取决于任务范围的大小。
- en: Writing an Azure Policy
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写 Azure 策略
- en: 'While there are many built-in policies available, there are many use cases
    in which the creation of custom policies is needed. Just like any other Azure
    resource, a policy is written as a JSON document. The appropriate ARM resource
    type is called `policyDefinitions` and has the following structure:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有许多内置的策略可供使用，但在许多用例中，仍然需要创建自定义策略。与任何其他 Azure 资源一样，策略是以 JSON 文档的形式编写的。适当的 ARM
    资源类型为 `policyDefinitions`，其结构如下：
- en: '[PRE2]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `parameters` object can be used to specify one or more parameters that need
    to be specified when assigning the policy later on. These parameters follow the
    same syntax and work the same as the parameters of an ARM template.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`parameters` 对象可以用来指定在稍后分配策略时需要指定的一个或多个参数。这些参数遵循与 ARM 模板参数相同的语法，并且工作方式也相同。'
- en: The `displayName` and `description` properties can be used to give the policy
    definition a meaningful name and description for later reference.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`displayName` 和 `description` 属性可以用来为策略定义提供有意义的名称和描述，方便后续参考。'
- en: 'The body of the definition contains two elements, as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 定义的主体包含以下两个元素：
- en: '`if` **statement** is used to specify a query that selects the Azure resources
    that this policy should apply to. There is a specific syntax for writing complex
    queries in JSON that is detailed in the ARM template reference, which is linked
    at the end of this chapter.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if` **语句**用于指定一个查询，选择此策略应适用的 Azure 资源。JSON 中编写复杂查询的具体语法已在 ARM 模板参考中详细说明，链接在本章末尾。'
- en: '`then` **statement** is used to describe the action that needs to be taken
    for any resource that matches the condition. This can be *deny* – that is, to
    automatically deny the creation of any non-compliant resource. Another approach
    is not to deny non-compliant deployments but rather to audit them. While denying
    non-compliant deployments is very straightforward in theory, there is good cause
    for temporarily allowing non-compliant deployments. In such cases, an audit policy
    can help to keep tabs on these resources. All non-compliant deployments get audit
    records in their Azure activity log and can be viewed in the Azure portal, under
    **Azure Policy** in the **Compliance** tab. This is as follows:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`then` **语句**用于描述需要对符合条件的任何资源采取的操作。这可以是*拒绝*——即自动拒绝任何不符合要求的资源的创建。另一种方法是并非拒绝不合规的部署，而是对其进行审计。虽然在理论上拒绝不合规的部署非常直接，但暂时允许不合规部署也有其合理的原因。在这种情况下，审计策略可以帮助跟踪这些资源。所有不合规的部署将在其
    Azure 活动日志中记录审计记录，并可以在 Azure 门户的**Azure 策略**下的**合规性**标签页中查看。具体如下：'
- en: '![Figure 11.7 – Azure policy compliance details ](img/B18655_11_07.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.7 – Azure 策略合规性详情 ](img/B18655_11_07.jpg)'
- en: Figure 11.7 – Azure policy compliance details
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7 – Azure 策略合规性详情
- en: After writing the policy definition, we need to create it within an Azure subscription
    for it to be usable. This can either be done through an ARM template or manually
    within the portal. From a DevOps perspective, writing policies in source control
    and delivering them through a pipeline as part of an ARM template is the recommended
    approach. This way, Azure policies are written in the same way as the application
    and can be reviewed and automatically deployed to Azure as part of a DevOps pipeline.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写策略定义之后，我们需要在 Azure 订阅中创建它，以便使其可用。这可以通过 ARM 模板完成，或者在门户中手动完成。从 DevOps 角度来看，建议将策略编写在源代码管理中，并通过管道作为
    ARM 模板的一部分进行交付。这样，Azure 策略与应用程序的编写方式相同，可以进行审查并作为 DevOps 管道的一部分自动部署到 Azure。
- en: Initiatives
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 倡议
- en: 'When working with Azure Policy, many companies find that they need to create
    many policies to define all the rules that they want their software developers
    to adhere to. For this reason, it might be beneficial to group policies. Such
    a grouping is called an *initiative*, and these are defined in JSON as well:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Azure 策略时，许多公司发现需要创建大量策略来定义他们希望软件开发人员遵循的所有规则。为此，将策略进行分组可能会带来好处。这样的分组被称为*倡议*，这些也是通过
    JSON 定义的：
- en: '[PRE3]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The body of an initiative is an array of objects. Each object must contain a
    `policyDefinitionId` property and, optionally, an object with `parameters` for
    the policy. The `policyDefinitionId` property must reference a valid `policyDefinitions`
    condition through its Azure resource ID. The `parameters` array should specify
    all of the parameters that the policy requires. Often, this is implemented by
    having the initiative specify the combined set of all parameters of all policies
    as an initiative parameter. The parameters for the individual policies are then
    specified with a reference to the initiative parameters.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一项倡议的主体是一个对象数组。每个对象必须包含一个 `policyDefinitionId` 属性，并且可以选择性地包含一个带有 `parameters`
    的对象。`policyDefinitionId` 属性必须通过其 Azure 资源 ID 引用有效的 `policyDefinitions` 条件。`parameters`
    数组应指定策略所需的所有参数。通常，这通过让倡议指定所有策略的所有参数的组合集作为倡议参数来实现。然后，个别策略的参数通过引用倡议参数来指定。
- en: Fetching audit results
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取审计结果
- en: After assigning a policy with the audit effect, the policy will automatically
    evaluate all of the resources within the scope of the assignment once it is active.
    There is no guarantee of how long this can take. For new resources, the results
    of policy evaluation are visible within 15 minutes, but often, this is faster.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在分配了具有审计效果的策略后，该策略将在激活后自动评估分配范围内的所有资源。无法保证这个过程需要多长时间。对于新资源，策略评估结果通常会在 15 分钟内显示，但通常会更快。
- en: 'Once the results are in, the compliance status for each policy or initiative
    can be viewed in the portal, resulting in an overview, as shown in the following
    screenshot:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦结果出来后，可以在门户中查看每个政策或计划的合规性状态，从而获得概览，如下所示的截图所示：
- en: '![Figure 11.8 – Azure Policy compliance status ](img/B18655_11_08.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.8 – Azure 政策合规状态](img/B18655_11_08.jpg)'
- en: Figure 11.8 – Azure Policy compliance status
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8 – Azure 政策合规状态
- en: The difference between this report and other reports, which are the result of
    a manual audit, is that this overview is constantly updated to reflect the actual,
    current state of compliance – it is not a snapshot of compliance at a specific
    point in time.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这份报告与其他手动审计报告的不同之处在于，这份概览会持续更新，反映出实际的当前合规状态——它不是某一特定时间点的合规快照。
- en: An important benefit of this type of compliance is that the rules or policies
    are applied continuously to all the existing resources and any incoming change.
    This means that it is possible to ensure that the application environment is always
    compliant and always adheres to any rules and policies that apply.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这种合规性类型的一个重要好处是规则或政策持续应用于所有现有资源和任何即将发生的变化。这意味着可以确保应用环境始终符合要求，并始终遵守适用的规则和政策。
- en: 'Contrast this with the often-used approach of having security and compliance
    audits only every other month. Often, this results in environments that are only
    compliant just before the audit and with their compliance slowly decaying afterward
    – until it is time for another audit, of course, at which point it rises close
    to 100% again. At many companies, this results in a compliance graph as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 将其与通常每两个月进行一次的安全和合规审计的做法进行对比。通常，这会导致环境在审计前才符合合规要求，且合规性在审计后逐渐下降——直到下次审计时间到来，此时合规性又会接近
    100%。在许多公司中，这会导致如下的合规性图表：
- en: '![Figure 11.9 – Compliance level maturity over time ](img/B18655_11_09.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.9 – 合规性水平随时间变化的成熟度](img/B18655_11_09.jpg)'
- en: Figure 11.9 – Compliance level maturity over time
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9 – 合规性水平随时间变化的成熟度
- en: With this, we’ve discussed another example of how DevOps practices can help
    increase security and compliance – by ensuring infrastructure compliance. In the
    next section, several alternative tools previously mentioned in this chapter,
    such as Defender for Cloud, Sonar Cloud, and WhiteSource, will be discussed.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经讨论了 DevOps 实践如何通过确保基础设施合规性来帮助提高安全性和合规性的另一个例子。在下一部分，我们将讨论本章之前提到的几种替代工具，如
    Defender for Cloud、Sonar Cloud 和 WhiteSource。
- en: "Monitoring and detecting runtime security risks \Land threats"
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和检测运行时安全风险和威胁
- en: All of the security tools that have been discussed up to this point have focused
    on preventing shipping vulnerable code to production environments. However, a
    complete, deployed software solution, including all its support infrastructure,
    is made out of so much more than just the code. On top of that, there are many
    interactions with a solution that may be unexpected or unplanned. Monitoring all
    of this continuously in production is necessary, not just to prevent security
    concerns but to also detect any security concerns that arise. In Azure, one of
    the tools available for doing just that is Azure Security Center. This and Azure
    Defender are now called Microsoft Defender for Cloud.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论的所有安全工具都集中在防止将有漏洞的代码推送到生产环境。然而，一个完整的、已部署的软件解决方案，包括其所有支持基础设施，远不仅仅是代码。除此之外，解决方案的许多交互可能是意料之外或未经计划的。持续在生产环境中监控所有这些内容是必要的，不仅是为了防止安全问题的发生，还为了检测任何出现的安全问题。在
    Azure 中，可用于执行此操作的工具之一是 Azure 安全中心。这个工具和 Azure Defender 现在被称为 Microsoft Defender
    for Cloud。
- en: The Defender for Cloud tool provides security posture management and threat
    protection, and protects workloads running in Azure, hybrid, and other cloud platforms.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Defender for Cloud 工具提供安全态势管理和威胁防护，保护在 Azure、混合云和其他云平台上运行的工作负载。
- en: 'Defender for Cloud fills the following three needs as you manage the security
    of resources and workloads:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Defender for Cloud 在管理资源和工作负载的安全性时满足以下三个需求：
- en: '![Figure 11.10 – Defender for Cloud ](img/B18655_11_10.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.10 – Defender for Cloud](img/B18655_11_10.jpg)'
- en: Figure 11.10 – Defender for Cloud
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10 – Defender for Cloud
- en: '**Continuous Assessment** – the solution will provide a brief overview of the
    current security posture.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续评估** – 该解决方案将提供当前安全态势的简要概览。'
- en: '**Security recommendation** – the solution will harden resources and services
    with the Azure Security Benchmark, and recommend prioritized hardening tasks with
    detailed remediation steps to improve security posture.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Security recommendation** – 该解决方案将使用 Azure 安全基准加强资源和服务的安全性，并推荐优先级较高的加固任务以及详细的修复步骤，以改善安全态势。'
- en: '**Defend** – the solution will detect and resolve threats to resources, workloads,
    and services. These alerts appear in the Azure portal and can also be sent via
    email.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Defend** – 该解决方案将检测并解决对资源、工作负载和服务的威胁。这些警报会出现在 Azure 门户中，也可以通过电子邮件发送。'
- en: 'The following example shows recommendations to harden security for your resources
    and improve overall security posture:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了针对资源加强安全性并提高整体安全态势的推荐：
- en: '![Figure 11.11 – Microsoft Defender recommendations  ](img/B18655_11_11.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.11 – Microsoft Defender 推荐](img/B18655_11_11.jpg)'
- en: Figure 11.11 – Microsoft Defender recommendations
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11 – Microsoft Defender 推荐
- en: There are many more capabilities within Microsoft Defender for Cloud, and more
    are being added on an ongoing basis. When deploying in Azure, this is the place
    to identify and manage security risks.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Defender for Cloud 具有更多功能，并且不断在增加新功能。在 Azure 中部署时，这是识别和管理安全风险的地方。
- en: This concludes our discussion of the various techniques for monitoring runtime
    environments for security risks. The next section looks at several alternative
    tools for performing some of the scanning tasks that were mentioned in earlier
    sections.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分讨论了用于监控运行时环境中的安全风险的各种技术。下一部分将介绍几种替代工具，用于执行前面提到的一些扫描任务。
- en: Other tools you can use
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他工具
- en: 'There are many tools available on the market for performing security scans
    of application code and dependencies. Some examples include WhiteSource, Black
    Duck, Veracode, and Checkmarx:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有许多工具可以用于对应用程序代码和依赖项进行安全扫描。一些示例包括 WhiteSource、Black Duck、Veracode 和 Checkmarx：
- en: '**WhiteSource** is the paid version of WhiteSource Bolt. It offers the same
    services and more. For example, it doesn’t only report risks at the time of the
    dependency scan; it also gives you alerts when new risks become available for
    dependencies that were present during the last scan of an application.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WhiteSource** 是 WhiteSource Bolt 的付费版本。它提供相同的服务以及更多功能。例如，它不仅在依赖项扫描时报告风险，还会在依赖项的最新扫描中出现新风险时发出警报。'
- en: '**Black Duck** is a product that helps teams to manage the risks associated
    with using open source software. The services it offers are comparable to WhiteSource.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Black Duck** 是一款帮助团队管理使用开源软件相关风险的产品。它提供的服务与 WhiteSource 类似。'
- en: '**Veracode** and **Checkmarx** are code-scanning tools that are used to identify
    vulnerable code. Whereas **SonarQube** checks both code quality and security risks,
    these two products focus solely on security risks. In general, they are better
    at security scanning, with the downside being that they are more expensive.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Veracode** 和 **Checkmarx** 是代码扫描工具，用于识别易受攻击的代码。而 **SonarQube** 检查代码质量和安全风险，这两款产品则专注于安全风险。通常来说，它们在安全扫描方面更为出色，但缺点是价格较高。'
- en: '**Sonar Cloud** is a hosted environment for SonarQube and provides similar
    functionality as SonarQube.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sonar Cloud** 是 SonarQube 的托管环境，提供与 SonarQube 类似的功能。'
- en: '**CodeQL** is a security scanning tool to automate security checks. CodeQL
    treats code as data that can be queried and performs variant analysis. Variant
    analysis is a process that uses a known security vulnerability as a seed to find
    similar problems in your code. **Code scanning** is a feature that allows you
    to scan code in a GitHub repository to detect security vulnerabilities and coding
    errors. If code scanning detects a potential vulnerability or error in your code,
    GitHub notifies developers and prohibits them from contributing additional issues.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CodeQL** 是一种安全扫描工具，用于自动化安全检查。CodeQL 将代码视为可以查询的数据，并执行变种分析。变种分析是一种利用已知的安全漏洞作为种子，查找代码中类似问题的过程。**Code
    scanning** 是一种功能，允许您扫描 GitHub 仓库中的代码，以检测安全漏洞和编程错误。如果代码扫描检测到代码中的潜在漏洞或错误，GitHub
    会通知开发者，并禁止他们提交额外的问题。'
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned that DevOps and security are not two conflicting
    goals and that DevOps practices can help you to reinforce security. First, you
    learned how to handle passwords and other secrets when working with continuous
    deployment pipelines. Next, you learned how to enhance your pipelines with code
    and dependency scanning tools, applying the shift-left principle to security as
    well. Finally, you learned how to use Azure Policy to define constraints and rules
    for your infrastructure and how you can have these automatically applied, or have
    non-compliant deployments audited or automatically denied.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习到 DevOps 和安全并不是两个相互冲突的目标，且 DevOps 实践可以帮助您加强安全性。首先，您学习了如何在持续部署流水线中处理密码和其他机密信息。接着，您学习了如何通过代码和依赖扫描工具增强流水线，同时将安全的“左移”原则应用其中。最后，您学习了如何使用
    Azure Policy 来定义基础设施的约束和规则，以及如何自动应用这些规则，或对不合规的部署进行审核或自动拒绝。
- en: With the knowledge you have gained, you are now able to have a conversation
    within your company about how to address security concerns within your DevOps
    teams. You can cooperate with security engineers to configure the tools you work
    with and receive automated feedback on the security implications of your work.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 通过您所获得的知识，您现在可以在公司内部与团队讨论如何解决 DevOps 团队中的安全问题。您可以与安全工程师合作，配置所使用的工具，并收到关于工作安全影响的自动反馈。
- en: In the next chapter, you will learn about application monitoring. Additionally,
    you will learn how to monitor whether your application is running smoothly and
    how to gather runtime metrics.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习应用程序监控。此外，您将了解如何监控您的应用程序是否顺利运行，并收集运行时指标。
- en: Questions
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Here is a list of questions for you to test your knowledge regarding this chapter’s
    material. You will find the answers in the *Assessments* section of the *Appendix*:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些问题，供您测试对本章内容的理解。您可以在*附录*中的*评估*部分找到答案：
- en: True or false – securing the delivery of software is just a single step in a
    deployment pipeline.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错——确保软件交付的安全仅仅是部署流水线中的一个步骤。
- en: Which tool can be used for security testing, where a proxy is used to identify
    valid application URLs and then perform different attacks, such as injections
    on an application?
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种工具可以用于安全测试，通过代理识别有效的应用程序 URL，然后对应用程序进行各种攻击，例如注入？
- en: True or false – in most modern applications, over 50% of the code base comes
    from open source libraries.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错——在大多数现代应用程序中，超过 50% 的代码库来自开源库。
- en: What are the secure locations for storing the secrets needed during deployment
    or for running an application? (You can choose more than one answer.)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在部署过程中或运行应用程序时，存储所需的机密信息的安全位置有哪些？（您可以选择多个答案。）
- en: Azure Pipelines variables that are marked as secret
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标记为机密的 Azure Pipelines 变量
- en: Azure Key Vault
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Key Vault
- en: Azure DevOps Key Vault
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps Key Vault
- en: Azure variable groups
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 变量组
- en: Azure DevOps secure variables
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 安全变量
- en: Azure DevOps service connection
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 服务连接
- en: Which two Azure offerings can be used to detect security risks at runtime?
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪两种 Azure 产品可以用来在运行时检测安全风险？
- en: Further reading
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Microsoft Security Code Analysis tool: [https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-overview](https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-overview).'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft 安全代码分析工具：[https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-overview](https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-overview)。
- en: 'Code QL analysis engine: [https://codeql.github.com/docs/codeql-overview/about-codeql/](https://codeql.github.com/docs/codeql-overview/about-codeql/).'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码 QL 分析引擎：[https://codeql.github.com/docs/codeql-overview/about-codeql/](https://codeql.github.com/docs/codeql-overview/about-codeql/)。
- en: The OWASP Top 10 and the details of every type of risk can be found at https://owasp.org/www-project-top-ten/2017/.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Top 10 及每种风险类型的详细信息可以在 [https://owasp.org/www-project-top-ten/2017/](https://owasp.org/www-project-top-ten/2017/)
    找到。
- en: 'A detailed walk-through on Azure Policy: [https://docs.microsoft.com/en-us/azure/governance/policy/](https://docs.microsoft.com/en-us/azure/governance/policy/).'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Policy 的详细操作指南：[https://docs.microsoft.com/en-us/azure/governance/policy/](https://docs.microsoft.com/en-us/azure/governance/policy/)。
- en: WhiteSource Bolt can be found on the Azure DevOps Marketplace at [https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt](https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt).
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WhiteSource Bolt 可以在 Azure DevOps 市场找到，链接：[https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt](https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt)。
- en: A detailed walk-through on using the OWASP ZAP can be found at [https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/](https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/).
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于如何使用 OWASP ZAP 的详细指南可以在 [https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/](https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/)
    找到。
- en: More information about the Azure Policy resource types and JSON specifications
    can be found as part of the ARM reference at [https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions](https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions).
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Azure 策略资源类型和 JSON 规范的更多信息，可以在 ARM 参考中找到，网址为 [https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions](https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions)。
- en: More information about the Microsoft Security Code Analysis Extension can be
    found at [https://secdevtools.azurewebsites.net/helpcredscan.xhtml](https://secdevtools.azurewebsites.net/helpcredscan.xhtml).
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Microsoft 安全代码分析扩展的更多信息，请访问 [https://secdevtools.azurewebsites.net/helpcredscan.xhtml](https://secdevtools.azurewebsites.net/helpcredscan.xhtml)。
- en: More information about WhiteSource Bolt and WhiteSource can be found at [https://bolt.whitesourcesoftware.com/](https://bolt.whitesourcesoftware.com/)
    and https://www.whitesourcesoftware.com.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 WhiteSource Bolt 和 WhiteSource 的更多信息，请访问 [https://bolt.whitesourcesoftware.com/](https://bolt.whitesourcesoftware.com/)
    和 https://www.whitesourcesoftware.com。
- en: More information about Black Duck can be found at [https://www.blackducksoftware.com/](https://www.blackducksoftware.com/).
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Black Duck 的更多信息，请访问 [https://www.blackducksoftware.com/](https://www.blackducksoftware.com/)。
- en: More information about Veracode can be found at [https://www.veracode.com/](https://www.veracode.com/).
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Veracode 的更多信息，请访问 [https://www.veracode.com/](https://www.veracode.com/)。
- en: More information about Checkmarx can be found at [https://checkmarx.com/](https://checkmarx.com/).
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Checkmarx 的更多信息，请访问 [https://checkmarx.com/](https://checkmarx.com/)。
- en: Part 4 – Closing the Loop
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分 – 闭环
- en: DevOps is more than just accelerating the ability to ship quality products to
    production. Another very important aspect is to observe and measure the usage
    and other key performance indicators. The insights from the analytics offer critical
    feedback to shape the future of the product and even help prioritize other quality
    initiatives necessary to improve the overall reliability of the service.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 不仅仅是加速将优质产品交付到生产环境的能力。另一个非常重要的方面是观察和衡量使用情况以及其他关键性能指标。来自分析的洞察提供了至关重要的反馈，以塑造产品的未来，甚至帮助优先考虑其他质量举措，这些举措对于提高服务的整体可靠性至关重要。
- en: This part will cover the process of effectively instrumenting applications in
    order to collect metrics that can be used to better understand application usage
    and user behavior. Another method for continual learning is to explicitly ask
    for feedback from within the product so that users get to share valuable suggestions
    as they use the software. Future improvements to the end user experience can be
    planned this way.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分将介绍有效地为应用程序添加监控，以便收集可以更好地理解应用程序使用情况和用户行为的度量数据。持续学习的另一种方法是明确地从产品内请求反馈，以便用户在使用软件时可以分享宝贵的建议。通过这种方式，可以规划未来对最终用户体验的改进。
- en: 'This part of the book comprises the following chapters:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分包括以下章节：
- en: '[*Chapter 12*](B18655_12.xhtml#_idTextAnchor978), *Application Monitoring*'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B18655_12.xhtml#_idTextAnchor978)，*应用程序监控*'
- en: '[*Chapter 13*](B18655_13.xhtml#_idTextAnchor1071), *Gathering User Feedback*'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*](B18655_13.xhtml#_idTextAnchor1071)，*收集用户反馈*'
