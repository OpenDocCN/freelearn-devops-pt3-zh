- en: '[*Chapter 7*](B17124_07_Final_SK_ePub.xhtml#_idTextAnchor157): AWS Compute
    Services'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第7章*](B17124_07_Final_SK_ePub.xhtml#_idTextAnchor157): AWS 计算服务'
- en: In the old days, traditional on-premises environments consisted of a wide range
    of *servers* that used to host a varied gamut of applications, websites, and other
    services. These *servers* were physical hardware such as your home desktop computer
    but were designed with more robust components (such as CPU, memory and storage)
    to host applications for end user consumption.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，传统的本地环境由各种 *服务器* 组成，这些服务器用于托管各种应用程序、网站和其他服务。这些 *服务器* 是物理硬件，如你的家用桌面计算机，但设计时采用了更强大的组件（如
    CPU、内存和存储），以便托管终端用户的应用程序。
- en: A **server** is a term given to an application running on computer hardware
    that grants access to a set of services, either to other applications or end users.
    A physical computer can host more than one "server" offering – for example, a
    computer may offer email services and web services on the same physical hardware.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器** 是指在计算机硬件上运行的应用程序，提供一组服务，无论是提供给其他应用程序还是终端用户。一个物理计算机可以托管多个 "服务器" 提供的服务——例如，一台计算机可能同时提供电子邮件服务和网络服务。'
- en: However, traditionally, you were limited in the number of servers you could
    configure your physical computer to host. This was primarily because of limited
    memory, storage, and, more importantly, the fact that applications would conflict
    with one another when accessing the underlying resources. These resources could
    be shared libraries and runtime environments, as well as access to physical hardware
    such as memory, storage, and so on.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，传统上，你在配置物理计算机托管服务器时会受到限制。主要原因是内存、存储的有限，以及更重要的是，当应用程序访问底层资源时，容易发生冲突。这些资源可以是共享库和运行时环境，以及对物理硬件（如内存、存储等）的访问。
- en: With the advent of virtualization, it then became possible to configure **Virtual
    Machines** (**VMs**) on a single physical host – each VM would offer one or more
    services and usually, these services were related to each other to avoid any conflicts.
    So, for example, you could have one virtual server offering email services and
    another offering file-sharing services.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随着虚拟化技术的出现，现在可以在单一物理主机上配置 **虚拟机**（**VMs**）——每个虚拟机提供一个或多个服务，通常这些服务彼此相关，以避免冲突。例如，你可以有一个虚拟服务器提供电子邮件服务，另一个提供文件共享服务。
- en: '**Amazon Web Services** (**AWS**) offers VMs in the cloud, which we call **Elastic
    Compute Cloud** or **EC2**. In this chapter, we will look at the core offering
    of the EC2 services, which allows us to host applications, websites, and other
    compute-intensive processing services on AWS. This chapter will also cover other
    forms of compute offerings, including a lightweight alternative to EC2, known
    as Lightsail, containers, and serverless offerings such as Lambda.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon Web Services**（**AWS**）在云中提供虚拟机（VMs），我们称之为 **弹性计算云** 或 **EC2**。本章将介绍
    EC2 服务的核心功能，使我们能够在 AWS 上托管应用程序、网站和其他计算密集型处理服务。此章节还将涵盖其他形式的计算服务，包括 EC2 的轻量替代方案
    Lightsail、容器和无服务器服务，如 Lambda。'
- en: 'The following topics will be covered in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introduction to **Elastic Compute Service** (**Amazon EC2**)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**弹性计算服务**（**Amazon EC2**）介绍'
- en: Learning about Amazon **Elastic Block Storage** (**EBS**) and instance backed
    store
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习 Amazon **弹性块存储**（**EBS**）和实例背后的存储
- en: Learning about EC2 pricing options
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习 EC2 定价选项
- en: Implementing Shared File Storage with **Amazon Elastic File System** (**Amazon
    EFS**)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **Amazon 弹性文件系统**（**Amazon EFS**）实现共享文件存储
- en: Introduction to **Virtual Private Servers** (**VPS**) with Amazon Lightsail
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Lightsail 介绍 **虚拟专用服务器**（**VPS**）
- en: Introduction to Amazon **Elastic Container Services** (ECS) and Kubernetes
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon **弹性容器服务**（ECS）和 Kubernetes 介绍
- en: Overview of additional storage options in AWS
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 中的额外存储选项概述
- en: Introduction to Amazon EC2
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon EC2 介绍
- en: '**Amazon EC2** is one of AWS''s flagship offerings and allows you to launch
    and set up virtual servers in the cloud. These are very similar to setting up
    and configuring **VMs** in your on-premises environment, which you would configure
    on a hypervisor such as VMware or Hyper-V.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon EC2** 是 AWS 的旗舰服务之一，允许你在云端启动和设置虚拟服务器。这与在本地环境中设置和配置 **虚拟机**（VMs）非常相似，你会在像
    VMware 或 Hyper-V 这样的虚拟化管理程序上进行配置。'
- en: A hypervisor, as discussed in [*Chapter 1*](B17124_01_Final_SK_ePub.xhtml#_idTextAnchor015),
    *What Is Cloud Computing?*, is a piece of software that allows you to create virtual
    resources such as virtual servers. Depending on the capacity of the underlying
    hardware, you can then host multiple virtual servers on the same physical hardware.
    These virtual servers are granted access to actual physical hardware via the hypervisor,
    which carves out virtualized representations of the physical hardware components
    (CPU, memory, storage, and so on) into smaller virtual components, that are then
    presented to your virtual servers. You can access hypervisor software such as
    VMware and Hyper-V to create your virtual servers, selecting the virtual components
    and configuring them as required. Each virtual server, otherwise known as a VM,
    can then have an operating system installed and configured, along with any required
    applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在[*第1章*](B17124_01_Final_SK_ePub.xhtml#_idTextAnchor015)《什么是云计算？》中讨论的那样，虚拟机管理程序（Hypervisor）是一种软件，它允许您创建虚拟资源，例如虚拟服务器。根据底层硬件的容量，您可以在同一物理硬件上托管多个虚拟服务器。这些虚拟服务器通过虚拟机管理程序访问实际的物理硬件，虚拟机管理程序将物理硬件组件（如
    CPU、内存、存储等）划分为较小的虚拟组件，并将其呈现给虚拟服务器。您可以使用 VMware 和 Hyper-V 等虚拟机管理程序软件来创建虚拟服务器，选择虚拟组件并根据需要进行配置。每个虚拟服务器，也叫做虚拟机（VM），可以安装并配置操作系统以及所需的应用程序。
- en: Amazon EC2, however, abstracts the underlying hypervisor layer from the customer,
    so you do not have direct access to the hypervisor itself. Using a self-service
    portal or API access, you can launch virtual servers, which we term as **EC2 instances**,
    in your AWS account and specifically, within your **Virtual Private Cloud** (**VPC**)
    (discussed in the previous chapter).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Amazon EC2 将底层虚拟机管理程序层抽象化，从而客户无法直接访问虚拟机管理程序本身。通过自助服务门户或 API 访问，您可以在 AWS 账户中启动虚拟服务器，我们称之为
    **EC2 实例**，并且特别是在您的 **虚拟私有云**（**VPC**）中（在前一章中讨论过）。
- en: Traditionally, on a VMware or Hyper-V management console, you would spin up
    a virtual server by specifying the exact amount of CPU and memory to configure
    your virtual server with.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，在 VMware 或 Hyper-V 管理控制台上，您需要指定虚拟服务器所需的 CPU 和内存量，以启动虚拟服务器。
- en: With AWS, you choose from a wide selection of available EC2 instance types and
    families. An EC2 instance family refers to the generic use case of the EC2 instance
    types contained within the family. For example, the *general-purpose* family is
    designed for handling workloads that require a balance of compute, memory, and
    networking resources. Within this *general-purpose* family, you have several EC2
    instance types that refer to the underlying hardware of the host computer used
    for your instance. These EC2 instance types offer different combinations of compute,
    memory, and storage capabilities. So, for example, within the *general-purpose*
    family, you have instance types such as **M5** and **T2**. The **T2** instance
    type runs on Intel Xeon processors, offers a burstable CPU, and is designed to
    offer a balance of compute, memory, and network resources. The **M5** instance
    type runs on Intel Xeon® Platinum 8175M processors and offers up to 384 GiB of
    memory and up to 25 Gbps network bandwidth using Enhanced Networking.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS，您可以从可用的 EC2 实例类型和系列中选择。EC2 实例系列是指实例类型的通用用途场景。例如，*通用型*系列设计用于处理需要平衡计算、内存和网络资源的工作负载。在这个*通用型*系列中，您可以找到多种
    EC2 实例类型，这些类型对应于托管实例的主机计算机的底层硬件。这些 EC2 实例类型提供了不同组合的计算、内存和存储能力。例如，在*通用型*系列中，您可以选择如
    **M5** 和 **T2** 等实例类型。**T2** 实例类型使用英特尔至强处理器，提供可突增的 CPU，并设计为平衡计算、内存和网络资源。**M5**
    实例类型使用英特尔至强® Platinum 8175M 处理器，提供最多 384 GiB 的内存，并通过增强型网络提供最多 25 Gbps 的网络带宽。
- en: Within each EC2 instance type, you also have instance sizes. When selecting
    an EC2 instance for your application, you need to identify the family, the type,
    and select the size of the instance. For example, within the `t2.micro` and `t2.xlarge`.
    The `t.2micro` instance size, only comes with 1 GiB of memory and 1 vCPU, whereas
    `t2.xlarge` comes with 16 GiB of memory and 4 vCPUs.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个 EC2 实例类型中，您还可以选择实例大小。当为您的应用程序选择 EC2 实例时，您需要识别实例的系列、类型并选择实例的大小。例如，在 `t2.micro`
    和 `t2.xlarge` 之间。`t2.micro` 实例仅配备 1 GiB 的内存和 1 个虚拟 CPU，而 `t2.xlarge` 配备了 16 GiB
    的内存和 4 个虚拟 CPU。
- en: We will discuss the EC2 instance families, types, and sizes in more detail shortly.
    Suffice to say that you have access to a very large selection of EC2 instance
    types and sizes to meet the requirements of your applications.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后更详细地讨论 EC2 实例家族、类型和大小。可以说，你可以访问非常丰富的 EC2 实例类型和大小，以满足应用程序的需求。
- en: In addition to your EC2 instance type, which defines CPU, memory, and other
    hardware-related components, you also need to attach a block storage device such
    as an EBS volume or an instance-store volume, as discussed in the *Learning about
    Amazon Elastic Block Storage and instance backed store* section in this chapter.
    At the very least, you will need one EBS volume to host the operating system and
    make the server bootable into a fully functioning server. We'll review different
    types of block storage for EC2 instances later in this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 除了定义 CPU、内存和其他硬件相关组件的 EC2 实例类型外，你还需要附加一个块存储设备，如 EBS 卷或实例存储卷，正如本章 *了解亚马逊弹性块存储和实例支持存储*
    部分所讨论的那样。至少，你需要一个 EBS 卷来托管操作系统并使服务器能够启动为一个完全功能的服务器。我们将在本章稍后讨论不同类型的 EC2 实例块存储。
- en: In addition to specifying the instance type and family, you also need to choose
    a particular **Amazon Machine Image** (**AMI**) to configure your EC2 instance
    with. AMIs are snapshots that contain base operating systems, utilities, and any
    applications you want to configure your EC2 instance with. We'll look at AMIs
    in more detail shortly.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了指定实例类型和家族外，你还需要选择一个特定的 **亚马逊机器镜像** (**AMI**) 来配置你的 EC2 实例。AMI 是包含基本操作系统、实用程序以及你希望配置到
    EC2 实例中的任何应用程序的快照。我们将稍后更详细地讨论 AMI。
- en: An important point to note here is that EC2 instances are Region-specific. More
    appropriately, EC2 instances are tied into the Availability Zone you launch them
    in. When you choose to launch a new EC2 instance, you must specify the subnet
    of a VPC in which to launch that EC2 instance. The subnet will be tied to a given
    Availability Zone, as discussed in the previous chapter. So, ultimately, you dictate
    which Availability Zone the EC2 instances gets launched into.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的一个重要点是，EC2 实例是区域特定的。更准确地说，EC2 实例与启动它们的可用区相绑定。当你选择启动一个新的 EC2 实例时，必须指定一个
    VPC 子网来启动该 EC2 实例。该子网将与给定的可用区相关联，正如上一章所讨论的那样。因此，最终，你决定了 EC2 实例启动的可用区。
- en: 'The following diagram shows a high-level infrastructure architecture and the
    key features that support the Amazon EC2 service:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图展示了支持亚马逊 EC2 服务的高层基础设施架构和关键特性：
- en: '![Figure 7.1 – EC2 instance components'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1 – EC2 实例组件'
- en: '](img/B17124_07_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_01.jpg)'
- en: Figure 7.1 – EC2 instance components
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – EC2 实例组件
- en: 'Some key features in the preceding diagram of EC2 instances include the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 上图中 EC2 实例的一些关键特性包括：
- en: EC2 instances are VMs built out of the physical host located in the same Availability
    Zone.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2 实例是从位于同一可用区的物理主机构建的虚拟机（VM）。
- en: With network and storage virtualization technologies, each EC2 instance is allocated
    at least one elastic network interface (virtual network card or virtual **network
    interface card** (**NIC**)) for data. You can have additional virtual NICs for
    configuring multi-homed devices.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 借助网络和存储虚拟化技术，每个 EC2 实例至少分配一个弹性网络接口（虚拟网卡或虚拟 **网络接口卡** (**NIC**)）用于数据传输。你可以有额外的虚拟
    NIC 来配置多宿设备。
- en: An EC2 instance can be configured to have a portion of the instance store volume
    (attached locally to the host that it runs on) or EBS volumes, which are attached
    to a storage array in the same Availability Zone.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2 实例可以配置为拥有一部分实例存储卷（本地附加到其运行所在主机）或 EBS 卷，这些卷附加到同一可用区中的存储阵列。
- en: As shown in the preceding diagram, the EC2 instance that was deployed in **Availability
    Zone 2A** has a single elastic network interface and two EBS volumes attached,
    one as the root volume (C Drive on Windows Servers) that's 30 GB in size and another
    as the data volume that's 60 GB in size. We will discuss block storage volumes
    later in this chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，部署在 **可用区 2A** 中的 EC2 实例有一个弹性网络接口和两个附加的 EBS 卷，一个作为根卷（Windows 服务器上的 C 盘），大小为
    30 GB，另一个作为数据卷，大小为 60 GB。我们将在本章稍后讨论块存储卷。
- en: In the next section, we will look at AMIs. AMIs are VM images that are *like*
    your on-premises **virtual hard disk** (**VHD**) images. These VHDs are disk image
    file formats that contain the contents of a hard drive, including the operating
    system files as well as any applications that you wish to configure a server with.
    AMIs are much more than simple VHDs however, as they are also comprised of snapshots,
    permissions, and mappings that specify the volumes to attach to the instance when
    it's launched. On AWS, when you launch an instance, you need to select an AMI
    to configure that instance with. For example, an AMI can contain a Linux operating
    system image and any additional application to configure an instance as a web
    server.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将研究AMI。AMI是虚拟机镜像，*类似*于您本地的**虚拟硬盘**（**VHD**）镜像。这些VHD是磁盘镜像文件格式，包含硬盘的内容，包括操作系统文件以及您希望配置服务器的任何应用程序。然而，AMI不仅仅是简单的VHD，它们还包括快照、权限和映射，指定启动实例时要附加的卷。在AWS上，当您启动实例时，您需要选择一个AMI来配置该实例。例如，一个AMI可以包含Linux操作系统镜像和任何附加应用程序，将实例配置为Web服务器。
- en: Amazon Machine Images (AMIs)
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊机器镜像（AMIs）
- en: Traditionally, when you are launching a new VM on your on-premises VMware or
    Hyper-V host, you would specify a particular operating system image (such as an
    `.iso` file). This would contain the operating system files necessary to install
    your VM. You may have also modified the machine image with any additional applications
    and/or utilities.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，当您在本地的VMware或Hyper-V主机上启动新的虚拟机时，您会指定一个特定的操作系统镜像（如`.iso`文件）。该文件包含安装虚拟机所需的操作系统文件。您可能还会修改机器镜像，添加额外的应用程序和/或工具。
- en: AMIs are the AWS equivalent of VM images, containing the baseline operating
    system and any additional applications.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: AMI是AWS中等同于虚拟机镜像（VM images）的概念，包含基础操作系统和任何附加应用程序。
- en: AMIs are Amazon EBS snapshots or a template of the root volume (for instance,
    store-backed AMIs). These snapshots or templates contain the operating system
    and any necessary applications. In addition, AMIs contain information on block
    device mappings that specify the volumes to attach to the instance when it is
    launched.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: AMI是亚马逊EBS快照或根卷的模板（例如，存储支持的AMI）。这些快照或模板包含操作系统和任何必要的应用程序。此外，AMI还包含有关块设备映射的信息，指定在启动实例时要附加的卷。
- en: 'Amazon offers several pre-configured AMIs as part of its **Quick Start AMIs**
    and these include standard operating systems, such as the official versions of
    various Linux distributions, including **Red Hat Enterprise Linux** (**RHEL**),
    Ubuntu, SUSE, and even Amazon''s flavor called Amazon Linux. In addition, you
    also have access to several editions of Microsoft''s Windows Server operating
    system and even macOS, which runs on a physical Apple Mac Mini in the backend:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊提供了几种预配置的AMI，作为其**Quick Start AMIs**的一部分，其中包括标准操作系统，如各种Linux发行版的官方版本，包括**红帽企业Linux**（**RHEL**）、Ubuntu、SUSE，甚至亚马逊自己的Linux版本。此外，您还可以访问微软的Windows
    Server操作系统的多个版本，甚至是运行在物理苹果Mac Mini上的macOS：
- en: '![Figure 7.2 – AMIs'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – AMI](img/B17124_07_02.jpg)'
- en: '](img/B17124_07_02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_02.jpg)'
- en: Figure 7.2 – AMIs
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – AMI
- en: As shown in the preceding screenshot, for each AMI, you also have details of
    the release number, whether the root device type is **EBS** or **Instance**, the
    type of virtualization architecture, the volume type (for example, SSD), and if
    the AMI supports Enhanced Networking.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，对于每个AMI，您还可以看到其发布号、根设备类型是**EBS**还是**实例**、虚拟化架构的类型、卷类型（例如SSD）以及该AMI是否支持增强型网络。
- en: AMIs offered as part of the Quick Start AMIs come with any necessary licensing
    built into the cost of the EC2 instance that you deploy that AMI on. While you
    do not need a separate licensing contract to be drawn up to spin up these servers,
    the hourly charge you pay to Amazon will include the licensing cost.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Quick Start AMI的一部分提供的AMI，已经将任何必要的授权包括在部署该AMI的EC2实例的成本中。虽然您无需单独签订许可合同来启动这些服务器，但您向亚马逊支付的按小时费用将包括授权费用。
- en: Note, however, that the licensing that comes with any AMI is only for what is
    already bundled as part of the image. Any additional configurations or the installation
    of additional applications may carry further licensing requirements that need
    to be procured separately.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，任何AMI附带的授权仅适用于已经作为镜像的一部分捆绑的内容。任何额外的配置或额外应用程序的安装可能会有进一步的授权要求，需要单独采购。
- en: When you select a particular AMI as part of configuring a new EC2 instance,
    the image is extracted to the instance's newly attached block storage volume and
    made bootable. This, in turn, configures the EC2 instance as a fully functioning
    server.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择一个特定的 AMI 作为配置新 EC2 实例的一部分时，镜像会被提取到实例新附加的块存储卷中，并使其可启动。这样一来，EC2 实例就会被配置成一个完全运行的服务器。
- en: 'Some additional points to be aware of about AMIs include the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 AMI 需要注意的一些额外事项包括以下几点：
- en: AMIs are Region-specific. This means that if you want to launch a particular
    instance configuration in a Region, the AMI must be available in that Region.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AMI 是区域特定的。这意味着，如果你想在某个区域启动特定配置的实例，那么该区域必须有相应的 AMI。
- en: AMIs can be copied across Regions if you need to launch a specific configuration
    in a Region and the required AMI is not available in that Region. For more details
    on how to create and copy AMIs, refer to the Amazon documentation at [https://aws.amazon.com/premiumsupport/knowledge-center/copy-ami-region/](https://aws.amazon.com/premiumsupport/knowledge-center/copy-ami-region/).
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你需要在某个区域启动特定配置的实例，而该区域没有所需的 AMI，你可以将 AMI 跨区域复制。有关如何创建和复制 AMI 的更多详情，请参考亚马逊文档：[https://aws.amazon.com/premiumsupport/knowledge-center/copy-ami-region/](https://aws.amazon.com/premiumsupport/knowledge-center/copy-ami-region/)。
- en: 'In addition to the Quick Start AMIs, you have other sources to obtain these
    machine images. These include the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 除了快速启动 AMI，你还有其他来源可以获取这些机器镜像，包括以下几种：
- en: '**AWS Marketplace**: This is a software store managed by AWS where third-party
    vendors can sell their applications, often bundled as ready-to-use AMIs. Companies
    such as F5, Citrix, Oracle, and McAfee, among many others, sell their solutions,
    which can be launched with Amazon EC2 instances. Pricing is according to the owner
    of the AMI, plus the cost of the specific EC2 instance type you are running the
    AMI on. You can review the AWS Marketplace offering at [https://aws.amazon.com/marketplace](https://aws.amazon.com/marketplace).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 市场**：这是一个由 AWS 管理的软件商店，第三方供应商可以在这里销售他们的应用程序，通常以准备好使用的 AMI 打包。像 F5、Citrix、Oracle
    和 McAfee 等公司，连同许多其他公司，销售他们的解决方案，这些解决方案可以通过 Amazon EC2 实例来启动。定价由 AMI 的拥有者决定，此外还包括你运行
    AMI 的特定 EC2 实例类型的费用。你可以在 [https://aws.amazon.com/marketplace](https://aws.amazon.com/marketplace)
    查看 AWS 市场的产品。'
- en: '**Community AMIs**: It is possible to make your AMIs public and thus make them
    accessible to the wider community via the Community AMI link. There are thousands
    of different AMIs designed to address specialized software and operating system
    bundles that are not generally available via the Quick Start AMIs or Marketplace.
    You can often find a more specific Linux distribution here such as CentOS, which
    is a very popular AMI that businesses use to host applications. Community AMIs
    are free to use but you pay for the EC2 instance charge. In addition, many AMIs
    are provided "as-is," with no additional support, so caution would be required
    when selecting a Community AMI.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区 AMI**：你可以将你的 AMI 设为公开，这样其他人也能通过社区 AMI 链接访问。这里有成千上万种不同的 AMI，旨在解决某些专用软件和操作系统的打包问题，这些通常无法通过快速启动
    AMI 或市场获得。你通常可以在这里找到更具体的 Linux 发行版，比如 CentOS，这是一个企业常用的 AMI，用于托管应用程序。社区 AMI 是免费的，但你需要支付
    EC2 实例费用。此外，许多 AMI 是“按原样”提供的，没有额外的支持，因此在选择社区 AMI 时需要谨慎。'
- en: Creating your own AMIs
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建你自己的 AMI
- en: In addition to obtaining AMIs from AWS or the Marketplace, you can create your
    own AMIs. This involves creating an image of a running EC2 instance you have that
    creates a snapshot of the EBS volume attached to the instance. You can then use
    the image (AMI) to launch new EC2 instances.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 除了从 AWS 或市场获取 AMI，你还可以创建自己的 AMI。这涉及到为你运行的 EC2 实例创建一个镜像，并生成该实例附加的 EBS 卷的快照。然后，你可以使用该镜像（AMI）来启动新的
    EC2 实例。
- en: You generally create an AMI because you want to store a copy of a specific configuration
    that needs to be deployed across multiple EC2 instances in your account or even
    globally. Rather than having to manually configure every new instance to meet
    your specific requirements, you can configure one EC2 instance just the way you
    need it (with the right operating system patches, applications, anti-virus software,
    and so on) and then create an AMI of it. Then, when it comes to launching more
    EC2 instances with the same configuration, you can simply launch new instances
    with that AMI. This is also known as **prebaking an AMI** and is often used as
    a strategy to quickly provision new instances and minimize manual errors or misconfigurations.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您通常创建 AMI 是因为您希望存储特定配置的副本，这些配置需要在您账户中的多个 EC2 实例甚至全球范围内部署。与其每次都手动配置每个新实例以满足您的特定要求，不如只需配置一个
    EC2 实例，按需进行设置（包括适当的操作系统补丁、应用程序、防病毒软件等），然后创建该实例的 AMI。接下来，当需要启动更多具有相同配置的 EC2 实例时，您只需使用该
    AMI 启动新的实例。这也被称为**预先烘焙 AMI**，通常作为快速配置新实例并最小化手动错误或配置错误的策略。
- en: In this section, we looked at AMIs and how they are used to provision new EC2
    instances with an operating system and any required applications. We also discussed
    how you can obtain AMIs and, if necessary, create your own. In the next section,
    we will discuss the different types of EC2 instances you can deploy.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了 AMI 以及如何使用它们来配置带有操作系统和所需应用程序的新 EC2 实例。我们还讨论了如何获取 AMI，并在必要时创建您自己的
    AMI。在接下来的章节中，我们将讨论您可以部署的不同类型的 EC2 实例。
- en: Exploring EC2 instance types
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 EC2 实例类型
- en: AWS offers a wide selection of EC2 instances that come with different virtual
    hardware configurations, called **instance types**. An EC2 instance type defines
    a particular specification of the virtual hardware components of the EC2 instance,
    such as the amount of processing power in terms of **Virtual CPUs** (**vCPUs**)
    and memory, the type of storage, and networking configuration. Depending on your
    application requirements, you can select an appropriate EC2 instance type from
    the wide selection available.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了多种不同虚拟硬件配置的 EC2 实例，称为**实例类型**。EC2 实例类型定义了 EC2 实例虚拟硬件组件的特定规格，如处理能力（以**虚拟
    CPU**（**vCPU**）和内存为衡量标准）、存储类型和网络配置。根据您的应用需求，您可以从广泛的 EC2 实例类型中选择适合的类型。
- en: 'As we mentioned earlier, EC2 instances are broken down by *families* and within
    each *family*, there are *i**nstance types*. These instance types are then broken
    down further by **instance size**, which comes with specific configurations of
    virtualized hardware. The following are the core EC2 instance families:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，EC2 实例按*系列*进行划分，在每个*系列*中，有不同的*实例类型*。这些实例类型进一步按**实例大小**划分，实例大小具有特定的虚拟化硬件配置。以下是核心的
    EC2 实例系列：
- en: '**General purpose**: Designed for a balance of compute, memory, and networking
    resources and ideal for a wide range of workload types.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用型**：旨在平衡计算、内存和网络资源，适用于各种工作负载类型。'
- en: '**Compute optimized**: Designed for high-performance processing. Ideal for
    batch processing workloads, media transcoding, high-performance web servers, and
    **high-performance computing** (**HPC**).'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算优化**：专为高性能处理设计。非常适合批处理工作负载、媒体转码、高性能 Web 服务器和**高性能计算**（**HPC**）。'
- en: '**Memory-optimized**: Designed to deliver fast performance for workloads that
    process large datasets in memory.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存优化**：旨在为处理大数据集的工作负载提供快速性能。'
- en: '**Accelerated computing**: Designed with hardware accelerators, or co-processors,
    to perform complex functions. Ideal for floating-point number calculations, graphics
    processing, or data pattern matching.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加速计算**：配备硬件加速器或协处理器，执行复杂的功能。非常适合浮点数计算、图形处理或数据模式匹配。'
- en: '**Storage-optimized**: Designed for computing that requires high sequential
    read and write access to very large datasets on local storage.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**存储优化**：专为需要对本地存储中非常大的数据集进行高顺序读写访问的计算任务设计。'
- en: Within each family, you have several EC2 instance types. So, for example, under
    the *general-purpose* family, you have instance types such as **T2**, **M5**,
    and **A1**. You can review the various instance types in the Amazon documentation
    at [https://aws.amazon.com/ec2/instance-types/](https://aws.amazon.com/ec2/instance-types/).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个系列中，你都有多个 EC2 实例类型可供选择。例如，在*通用型*系列下，你有**T2**、**M5** 和 **A1** 等实例类型。你可以通过查看
    [https://aws.amazon.com/ec2/instance-types/](https://aws.amazon.com/ec2/instance-types/)
    了解各种实例类型的详细信息。
- en: The **M5** instance type, for example, is powered by Intel Xeon® Platinum 8175M
    processors. It is ideal for applications that require a balance of compute, memory,
    and network resources. Additional features of this type include the fact that
    it offers up to 25 Gbps network bandwidth using Enhanced Networking and is powered
    by the AWS Nitro System, which is Amazon's architecture design that offers a combination
    of dedicated hardware and a lightweight hypervisor.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以**M5**实例类型为例，它采用了英特尔® Xeon Platinum 8175M 处理器，适用于需要平衡计算、内存和网络资源的应用程序。该类型的其他特点包括，使用增强网络功能提供最多
    25 Gbps 的网络带宽，并由 AWS Nitro 系统提供支持，AWS Nitro 系统是亚马逊的架构设计，结合了专用硬件和轻量级虚拟化管理程序。
- en: 'Within the **M5** instance type, there are different instance sizes, from which
    you get to choose an appropriate size for your specific application needs. The
    following is a screenshot of some of the instance sizes that fall under the M5
    instance type:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在**M5**实例类型中，有不同的实例规格可供选择，你可以根据特定的应用需求选择合适的规格。以下是一些属于 M5 实例类型的规格截图：
- en: '![Figure 7.3 – Sample selection of M5 instance sizes'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.3 – M5 实例规格选择示例'
- en: '](img/B17124_07_03.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_03.jpg)'
- en: Figure 7.3 – Sample selection of M5 instance sizes
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – M5 实例规格选择示例
- en: When you review the list of instance sizes, it stands to reason that the higher
    the vCPU and memory, the more performance that's offered by the instance size.
    Depending on your application requirements, you then select the most appropriate
    size that matches your requirements.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看实例规格列表时，可以推测，vCPU 和内存越高，实例规格提供的性能就越强。根据你的应用需求，选择最适合的规格。
- en: Dedicated categories
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 专用类别
- en: In addition to the standard instances that you can deploy on AWS, you can also
    opt for **Dedicated Instances** and **Dedicated Hosts**. These options allow you
    to fulfill any compliance or regulatory requirements that state that you cannot
    use EC2 instances deployed on shared hosting, which is the default deployment
    option. Note that even though your EC2 instance may run on shared hardware with
    other customers, the underlying infrastructure offers isolation, and you cannot
    access other customers' EC2 instances unless you've been granted the necessary
    level of access by those other customers.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除了可以在 AWS 上部署的标准实例外，你还可以选择**专用实例**和**专用主机**。这些选项允许你满足某些合规或监管要求，例如规定你不能使用部署在共享主机上的
    EC2 实例，而共享主机是默认的部署选项。请注意，即使你的 EC2 实例可能与其他客户的实例共享硬件，底层基础设施也会提供隔离，除非其他客户授予你必要的访问权限，否则你无法访问其他客户的
    EC2 实例。
- en: A **Dedicated Instance** is an EC2 instance that is deployed in your VPC on
    physical hardware that is dedicated to you and not shared with other customers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**专用实例** 是部署在你的 VPC 中的 EC2 实例，运行在专为你提供的物理硬件上，且不会与其他客户共享。'
- en: A **Dedicated Host** is a physical host dedicated for your use alone and gives
    you additional control and management capabilities over how instances are placed
    on a physical server. In addition, dedicated hosts can help address certain third-party
    licensing terms based on a per-CPU core/socket basis.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**专用主机** 是为你单独使用的物理主机，它可以让你对实例如何在物理服务器上部署进行额外的控制和管理。此外，专用主机可以帮助处理某些第三方许可条款，通常是基于每个
    CPU 核心/插槽来计算的。'
- en: In the next section, we will look at the block storage options that are available
    for your EC2 instances. Block storage allows you to attach block volumes to your
    EC2 instances, much like you would attach a hard disk to your physical servers.
    The root volume hosts the operating system to boot your virtual server from, and
    additional volumes can host data and applications for your servers.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨可用于 EC2 实例的块存储选项。块存储允许你像将硬盘附加到物理服务器一样，将块卷附加到 EC2 实例。根卷托管操作系统，用于从中启动虚拟服务器，附加卷则可用于托管服务器的数据和应用程序。
- en: Learning about Amazon EBS and instance backed store
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Amazon EBS 和实例存储
- en: 'Like virtual servers in your on-premises environment, EC2 instances require
    accessible block storage volume to host the instance operating system, data, and
    applications that need to run on the server. AWS offers two types of block storage
    options: **Elastic Block Store** and **instance store volumes**.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 就像本地环境中的虚拟服务器一样，EC2实例需要可访问的块存储卷来托管实例操作系统、数据和需要在服务器上运行的应用程序。AWS提供了两种类型的块存储选项：**弹性块存储（Elastic
    Block Store）**和**实例存储卷**。
- en: Amazon Elastic Block Store
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊弹性块存储
- en: Amazon Elastic Block Store offers a high-performance block storage service for
    your EC2 instances. These act as virtual hard drives for your virtual servers
    deployed in the cloud. Amazon EBS is a network storage service similar in nature
    to the way you would attach a storage volume from a **Storage Area Network** (**SAN**)
    to your VMs deployed on VMware, in an on-premises environment.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊弹性块存储（Amazon Elastic Block Store）为你的EC2实例提供高性能的块存储服务。这些存储像虚拟硬盘一样，作为你部署在云中的虚拟服务器的存储设备。Amazon
    EBS是一个网络存储服务，其本质类似于你在本地环境中，将**存储区域网络**（**SAN**）中的存储卷附加到部署在VMware上的虚拟机。
- en: You would provision the required EBS volume, such as 8 GB, 30 GB, 1,000 GB,
    or whatever size you require, and attach it to your EC2 instance. EC2 instances
    require a root volume (or a system drive on Windows machines, such as the "C"
    drive) to host the operating system and certain applications. In addition, you
    can attach multiple EBS volumes for other purposes, such as storing data (for
    example, data volume).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要预配置所需的EBS存储卷，例如8 GB、30 GB、1,000 GB，或任何你需要的大小，并将其附加到你的EC2实例上。EC2实例需要一个根卷（或者在Windows机器上是“C”驱动器），用于托管操作系统和某些应用程序。此外，你还可以附加多个EBS卷，用于其他用途，例如存储数据（例如数据卷）。
- en: 'When configuring your EC2 instance with an EBS volume, you need to select the
    type of volume, the amount of storage you wish to provision, and if you want to
    configure encryption on your EBS volume. There are different types of EBS volumes
    to choose from and they fall into the following categories: **Solid State Drives**
    (**SSDs**) and **Hard Disk Drives** (**HDDs**).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置EC2实例和EBS卷时，你需要选择卷的类型、你希望预配置的存储量，以及是否要为EBS卷配置加密。EBS卷有不同的类型可以选择，主要分为以下几类：**固态硬盘（SSDs）**和**硬盘驱动器（HDDs）**。
- en: 'SSDs are optimized for transactional workloads involving frequent read/write
    operations with small I/O sizes, and they can be used to boot up your EC2 instances.
    These types of drives include the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: SSD（固态硬盘）经过优化，适用于频繁进行读写操作并具有小I/O大小的事务性工作负载，并且可以用来启动你的EC2实例。这些类型的磁盘包括以下几种：
- en: '**gp2**: This is the default EBS volume that you can attach to an EC2 instance.
    The volume runs on SSDs and is suitable for general workloads such as transaction
    operations, low-latency interactive operations, and is suitable as boot volumes.
    The volume size can range from 1 GB to 16 TB, is designed to deliver up to 99.9%
    of durability, and has a maximum IOPS of 16,000\. gp2 volumes also offer a baseline
    performance of 3 IOPS/GB (minimum 100 IOPS), which can burst up to 3,000 IOPS
    for volumes smaller than 1 TB.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gp2**：这是你可以附加到EC2实例的默认EBS卷。该卷运行在SSD上，适合一般工作负载，例如事务操作、低延迟交互操作，并且适合作为启动卷。卷的大小可以从1
    GB到16 TB，设计为提供99.9%的耐久性，并且最大IOPS为16,000。gp2卷还提供3 IOPS/GB的基准性能（最小100 IOPS），对于小于1
    TB的卷，性能可以突增至3,000 IOPS。'
- en: '**gp3**: This is the latest version of the general-purpose SSD-based EBS volumes.
    Compared to gp2, gp3 volumes offer a baseline performance of 3,000 IOPS and 125
    Mbps at any volume size. You can provision performance for an additional fee of
    up to 16000 IOPS. The size of the volume can range from 1 GB to 16 TB. gp3 volumes
    are ideal for running single-instance databases such as Microsoft SQL Server,
    Cassandra, MySQL, and Oracle DB and can be used as boot volumes.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gp3**：这是最新版本的基于SSD的一般用途EBS卷。与gp2相比，gp3卷提供3,000 IOPS和125 Mbps的基准性能，无论卷的大小如何。你可以为额外费用预配置高达16,000
    IOPS的性能。卷的大小可以从1 GB到16 TB不等。gp3卷非常适合运行单实例数据库，例如Microsoft SQL Server、Cassandra、MySQL和Oracle
    DB，也可以用作启动卷。'
- en: '**io1**: This provisioned IOPS SSD offering high-performance EBS storage is
    ideal for critical, I/O intensive database and application workloads. io1 offers
    a baseline performance of 50 IOPS/GB to a maximum of 64,000 IOPS and provides
    up to 1,000 MB/s of throughput per volume. Note, however, that to achieve the
    maximum of 64,000 IOPS and 1,000 MB/s of throughput, the volume must be attached
    to an EC2 instance built on the AWS Nitro system. io1 volumes can also be used
    as boot volumes and the volume size can range from 4 GB to 16 TB.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**io1**：这款预配置的 IOPS SSD 提供高性能的 EBS 存储，适用于关键性、I/O 密集型的数据库和应用工作负载。io1 提供 50 IOPS/GB
    的基准性能，最大可达 64,000 IOPS，并提供每卷 1,000 MB/s 的吞吐量。但需要注意，为了实现最大 64,000 IOPS 和 1,000
    MB/s 的吞吐量，卷必须连接到基于 AWS Nitro 系统构建的 EC2 实例上。io1 卷也可以用作启动卷，卷的大小范围从 4 GB 到 16 TB。'
- en: '**io2**: The latest generation of the Provisioned IOPS SSD, this offers high
    performance, as well as a 100X durability of 99.999% with 10X higher IOPS to storage
    ratio of 500 IOPS for every provisioned GB. io2 is ideal for business-critical,
    I/O intensive database applications, including SAP HANA, Oracle, Microsoft SQL
    Server, and IBM DB2\. io2 volumes can also be used as boot volumes and the volume
    size can range from 4 GB to 16 TB. Like io1, to achieve the maximum of 64,000
    IOPS and 1,000 MB/s of throughput, the volume must be attached to an EC2 instance
    built on the AWS Nitro system.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**io2**：最新一代的预配置 IOPS SSD，提供高性能，具备 99.999% 的 100 倍耐用性，并且存储的 IOPS 与容量的比率是每个预配置的
    GB 提供 500 IOPS，性能比传统 IOPS 高 10 倍。io2 非常适合业务关键型、I/O 密集型数据库应用程序，包括 SAP HANA、Oracle、Microsoft
    SQL Server 和 IBM DB2。io2 卷也可以用作启动卷，卷的大小范围从 4 GB 到 16 TB。像 io1 一样，为了实现最大 64,000
    IOPS 和 1,000 MB/s 的吞吐量，卷必须连接到基于 AWS Nitro 系统构建的 EC2 实例上。'
- en: '**io2 Block Express**: Currently in preview, this high-performance block storage
    offers 4x higher throughput, IOPS, and a capacity of io2 volumes. Designed for
    the most demanding applications, it offers 4,000 MB/s of throughput per volume,
    up to 256,000 IOPS and 1,000 IOPS/GB, as well as 99.999% durability. Volume sizes
    can range from 4 GB to 16 TB.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**io2 Block Express**：目前处于预览阶段，这款高性能块存储提供比 io2 卷高 4 倍的吞吐量、IOPS 和容量。为最苛刻的应用设计，提供每卷
    4,000 MB/s 的吞吐量，最多 256,000 IOPS 和每 GB 1,000 IOPS，同时具有 99.999% 的耐用性。卷的大小可以从 4 GB
    到 16 TB。'
- en: 'HDDs are optimized for large streaming workloads where the dominant performance
    attribute is throughput. These drives include the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: HDD 被优化用于大规模流媒体工作负载，其中主导的性能特征是吞吐量。这些硬盘包括以下几种：
- en: '**st1**: This is a low-cost HDD volume that''s ideal for frequently accessed,
    throughput-intensive workloads and capable of working with large datasets and
    large I/O sizes. Typical workloads include MapReduce, Kafka, log processing, data
    warehouses, and ETL jobs. st1 can burst up to 250 MB/s per TB, has a baseline
    throughput of 40 MB/s per TB, and the maximum throughput is 500 MB/s per volume.
    The volume size can range from 125 GB to 16 TB; however, it cannot be used as
    a boot volume.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**st1**：这是一种低成本的 HDD 卷，适用于频繁访问、吞吐量密集型的工作负载，能够处理大数据集和大 I/O 尺寸。典型的工作负载包括 MapReduce、Kafka、日志处理、数据仓库和
    ETL 作业。st1 可以在每 TB 250 MB/s 的高峰时段进行突发，具有每 TB 40 MB/s 的基准吞吐量，最大吞吐量为每卷 500 MB/s。卷的大小可以从
    125 GB 到 16 TB，但不能用作启动卷。'
- en: '**sc1**: This is also known as Cold HDD and offers the lowest cost per GB of
    all EBS volume types. It is ideal for less frequently accessed workloads with
    large, cold datasets. sc1 can burst up to 80 MB/s per TB, has a baseline throughput
    of 12 MB/s per TB, and offers a maximum throughput of 250 MB/s per volume. The
    volume size can range from 125 GB to 16 TB; however, it cannot be used as a boot
    volume.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sc1**：这也称为冷 HDD，提供所有 EBS 卷类型中每 GB 最低的成本。它非常适合访问较少、数据集较大且较冷的工作负载。sc1 可以在每
    TB 80 MB/s 的高峰时段进行突发，具有每 TB 12 MB/s 的基准吞吐量，并提供每卷 250 MB/s 的最大吞吐量。卷的大小可以从 125 GB
    到 16 TB，但不能用作启动卷。'
- en: 'Some additional features of EBS volumes include the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: EBS 卷的其他一些功能包括以下内容：
- en: EBS volumes can be detached from one EC2 instance and attached to another. So,
    for example, if you have an EC2 instance with a single root volume and the instance
    has some sort of failure, you can detach the root volume and attach it to another
    EC2 instance as a data volume to extract any information as required. This makes
    EBS volumes very versatile and flexible.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EBS 卷可以从一个 EC2 实例分离并附加到另一个实例。因此，例如，如果你有一个带有单一根卷的 EC2 实例，且实例发生某种故障，你可以将根卷分离并附加到另一个
    EC2 实例作为数据卷，以提取所需的信息。这使得 EBS 卷非常多功能且灵活。
- en: Data stored on EBS volumes is persistent and can exist beyond the life of an
    EC2 instance.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在 EBS 卷上的数据是持久的，并且可以在 EC2 实例的生命周期之外存在。
- en: You can also take *snapshots of your EBS volume*, which are point-in-time backups
    of your data stored on the volume. *The first snapshot is always a full backup
    and additional snapshots are incremental backups of changes*. Snapshots can then
    be used to create new volumes as required with the data intact. In addition, you
    can copy snapshots to other Regions. This means that if you need to share some
    data with a colleague in another Region, you simply copy the snapshot to the required
    Region, and it will be made available within your AWS account in that Region.
    You can also copy snapshots to other AWS accounts.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还可以对您的 EBS 卷进行*快照*，它是存储在该卷上的数据的时间点备份。*第一个快照总是完整备份，之后的快照是增量备份*。快照可以用来按需创建新的卷，并保持数据不变。此外，您还可以将快照复制到其他区域。这意味着，如果您需要与其他区域的同事共享某些数据，只需将快照复制到所需区域，它将在该区域内的
    AWS 账户中可用。您还可以将快照复制到其他 AWS 账户。
- en: In this section, we looked at the different types of EBS volumes backed by both
    HDD and SDD technologies. We also looked at their use cases. EBS volumes are attached
    to your EC2 instances over a storage area network connection, usually using the
    ISCSI protocol. In the next section, we will look at EC2 instance store volumes.
    These volumes are directly attached to the physical host that your EC2 instance
    has been deployed on.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们研究了由 HDD 和 SSD 技术支持的不同类型的 EBS 卷。我们还探讨了它们的使用场景。EBS 卷通过存储区域网络连接附加到您的 EC2
    实例，通常使用 ISCSI 协议。在接下来的章节中，我们将介绍 EC2 实例存储卷。这些卷直接附加到您 EC2 实例所部署的物理主机上。
- en: AWS EC2 instance store volumes
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS EC2 实例存储卷
- en: Amazon EBS volumes are storage volumes that are mounted on your EC2 instances
    over a network from a storage array, whereas instance store volumes are carved
    out of the local storage drives that are physically attached to the host that
    the EC2 instance runs on.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EBS 卷是通过网络从存储阵列挂载到 EC2 实例上的存储卷，而实例存储卷则是从物理附加到 EC2 实例所在主机的本地存储驱动器中分配的。
- en: The primary benefit of attaching instance store volumes to your EC2 instance
    is the ultra-high throughput you get, as well as reduced latency in accessing
    your data. However, there is a downside to instance store volumes, namely around
    data persistence. The data in an instance store persists only during the lifetime
    of its associated instance while in the running state. If the instance is stopped,
    terminated, and placed into a hibernate state, then the data on the attached instance
    store is lost. Equally, if the underlying disk experiences some failure, then
    the data will be lost in such situations. The reason behind this is that when
    your instance experiences any of these states, every block of storage in the instance
    store is reset, so any data is lost.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将实例存储卷附加到 EC2 实例的主要好处是您获得的超高吞吐量，以及访问数据时降低的延迟。然而，实例存储卷也有一个缺点，即数据持久性问题。实例存储中的数据仅在其关联实例的运行状态期间存在。如果实例被停止、终止或进入休眠状态，则附加的实例存储上的数据将丢失。同样，如果底层磁盘发生故障，数据也会在这种情况下丢失。其原因是，当您的实例经历这些状态时，实例存储中的每个存储块都会被重置，因此任何数据都会丢失。
- en: Due to this, data on an instance store volume is considered temporary and to
    be used as such. It is ideal for information that changes frequently and can be
    used as buffers, caches, or for holding temporary content. Instance store volumes
    are also cheaper than EBS volumes.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，实例存储卷上的数据被认为是临时的，并应按此方式使用。它非常适合那些频繁变化的信息，可以用作缓冲区、缓存，或存储临时内容。实例存储卷的成本也比 EBS
    卷便宜。
- en: Important Note
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If an EC2 instance with an instance store volume is restarted, the data is not
    lost. This is because a reboot is not the same as a shutdown and then a cold start.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个带有实例存储卷的 EC2 实例重新启动，数据不会丢失。这是因为重新启动与关闭并进行冷启动不同。
- en: In this section, we looked at the different storage options for EC2 instances.
    We discussed the key features and options for Amazon EBS and identified typical
    use cases of where we would use which type of EBS volume. We also summarized some
    additional features, such as being able to encrypt your block storage or take
    regular snapshots as backups and for replication.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们探讨了 EC2 实例的不同存储选项。我们讨论了 Amazon EBS 的关键特性和选项，并识别了使用哪种类型的 EBS 卷的典型使用场景。我们还总结了一些额外的功能，比如能够加密块存储，或定期拍摄快照作为备份和复制。
- en: We then discussed instance store volumes and compared them with EBS, identifying
    use cases for instance store volumes and how data on an instance store volume
    is considered temporary. Instance store volumes are also known as ephemeral storage.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接着我们讨论了实例存储卷，并将其与 EBS 进行了比较，识别了实例存储卷的使用场景以及实例存储卷中的数据是临时性的。实例存储卷也称为临时存储。
- en: In the next section, we will discuss the different pricing options available
    to launch your EC2 instances. Depending on your use case, one set of pricing options
    might work out more cost-effectively than another, and this next section discusses
    some important concepts to be aware of.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论启动 EC2 实例时可用的不同定价选项。根据你的使用场景，一种定价选项可能比另一种更具成本效益，本节将讨论一些需要了解的重要概念。
- en: Learning about EC2 pricing options
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 EC2 定价选项
- en: The Amazon EC2 service is a cloud offering that enables you to deploy virtual
    servers (EC2 instances) in the cloud. Traditionally, in an on-premises environment,
    if you needed to deploy a new physical server, you would have to make a capital
    investment for a few thousand dollars to procure the necessary hardware and software
    and then configure your server with any necessary applications.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EC2 服务是一个云计算产品，允许你在云中部署虚拟服务器（EC2 实例）。传统上，在本地环境中，如果需要部署新的物理服务器，你需要进行几千美元的资本投资，采购必要的硬件和软件，然后配置服务器并安装必要的应用程序。
- en: On AWS, EC2 instances can be procured on an hourly basis, which means that you
    only pay for the hours that the server is running. If you turn off the server
    but keep it in your account (as opposed to terminating it and releasing its capacity
    back to AWS), then you do not pay any charges while the EC2 instance is in this
    stopped state. This pricing approach is what we call the **On-Demand Pricing Option**
    and is the default option when purchasing EC2 instances on AWS.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS 上，EC2 实例可以按小时购买，这意味着你只为服务器运行的小时数付费。如果你关闭服务器但仍保留它在账户中（而不是终止它并将其容量释放回 AWS），则在
    EC2 实例处于停止状态时，你不会产生任何费用。这种定价方式就是我们所说的**按需定价选项**，它是购买 EC2 实例时的默认选项。
- en: Let's look at these various pricing options in detail.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看看这些不同的定价选项。
- en: On-Demand Instance Pricing Option
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按需实例定价选项
- en: As we've already discussed, this is the **default option** for procuring/launching
    an EC2 instance. You pay an hourly charge based on the instance type, the operating
    system (with any applications pre-installed), and the Region that you launch it
    in. You are charged based on the number of hours that the EC2 instance is in the
    **running state**. This means that you are not billed for the hours that the EC2
    instance is in the **stopped state**. The **On-Demand Pricing Option** does not
    require any long-term commitment or upfront payments. You can increase or decrease
    your compute capacity depending on your application demand and you only pay per
    hour consumed.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们已经讨论过的，这是**默认选项**，用于采购/启动 EC2 实例。你根据实例类型、操作系统（以及任何预安装的应用程序）和你启动实例的区域支付按小时计费的费用。你按
    EC2 实例处于**运行状态**的小时数计费。这意味着，如果 EC2 实例处于**停止状态**，你不会被收费。**按需定价选项**不要求任何长期承诺或预付款。你可以根据应用需求增加或减少计算能力，且只需为实际消耗的小时数付费。
- en: The **On-Demand Pricing Option** is ideal for users who need the flexibility
    to consume compute resources when required and without any long-term commitment.
    They are ideal for test/dev environments or for applications that have short,
    spiky, or unpredictable workloads. An important benefit of the On-Demand pricing
    model is that Amazon will not interrupt your consumption in any way. So, your
    EC2 instances will continue to exist in your account (even in the stopped state)
    unless you terminate (release) them. In terms of pricing, the On-Demand Pricing
    Option is low cost but compared to the other pricing options, it can turn out
    to be the most expensive, especially if you plan to keep the instances running
    24/7, 365 days a year. In such cases, alternative pricing options may be more
    suitable.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**按需定价选项**：适用于那些需要灵活使用计算资源的用户，且不需要长期承诺。它们非常适合测试/开发环境，或者用于短期、波动性大或不可预测的工作负载。按需定价模型的一个重要优点是亚马逊不会以任何方式中断您的使用。因此，除非您终止（释放）实例，否则您的EC2实例将继续存在于您的账户中（即使是停止状态）。在定价方面，按需定价选项成本较低，但与其他定价选项相比，它可能会变得最为昂贵，特别是如果您计划全年24/7运行实例。在这种情况下，其他定价选项可能会更合适。'
- en: Reserved Instance Pricing Option
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保留实例定价选项
- en: 'This pricing option rewards customers with a significant discount (up to 72%
    off the On-Demand Pricing Option) who commit to a 1-year or 3-year agreement to
    run specific instance types within a given Region. You can achieve very discounted
    hourly rates compared to the On-Demand price for the same instance. Reserved Pricing
    Options are not actual EC2 instances that you procure; rather, they are pricing
    agreements that give you the right to run a specific EC2 configuration, in a specified
    Region, for a specified duration (1 year to 3 years) at a specific discounted
    rate. Once you launch a matching EC2 instance in the given Region, the Reserved
    pricing model is applied instead of the On-Demand rate. There are two types of
    Reserved Pricing Options:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该定价选项奖励那些承诺在特定区域内运行特定实例类型的客户，签订1年或3年的协议后可享受显著折扣（最高可达72%），相较于按需定价选项。与按需定价相比，您可以以非常优惠的小时费率运行相同的实例。保留定价选项并不是您实际采购的EC2实例，而是定价协议，赋予您在指定区域、指定时长（1年至3年）内以特定折扣率运行特定EC2配置的权利。只要在指定区域启动符合条件的EC2实例，便会应用保留定价模型，而非按需定价。保留定价选项有两种类型：
- en: '**Standard Reserved Pricing Option**: This provides the most discount with
    up to 72% off the On-Demand instance price. They can be purchased on a 1-year
    or 3-year term and you can change the certain configurations of the EC2 instance
    during its life, such as the Availability Zone it is placed in, the instance size,
    and its network type.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准保留定价选项**：此选项提供最高可达72%的折扣，比按需实例定价更具优惠。可以选择1年或3年的期限进行购买，并且在实例的生命周期内可以更改某些配置，如其所在的可用区、实例大小以及网络类型。'
- en: '**Convertible Reserved Pricing Option**: This offers even more flexibility,
    including the ability to change instance families, operating systems, or even
    tenancies over the Reserved term. The downside of the Convertible Reserved Pricing
    Option is that the maximum discount is only up to 54% compared to the On-Demand
    Instance rate.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可转换保留定价选项**：此选项提供更大的灵活性，包括在保留期限内更改实例系列、操作系统甚至租赁类型的能力。可转换保留定价选项的缺点是，相比于按需实例定价，其最大折扣仅为54%。'
- en: 'Here is an example of a standard 1-year reserved instance pricing for a t2.micro,
    Linux EC2 instance in the N. Virginia Region at the time of writing this training
    guide:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是写本培训指南时，N. Virginia 区域 t2.micro Linux EC2 实例的标准1年期保留实例定价示例：
- en: '![Figure 7.4 – t.2micro Reserved Instance Pricing Option in N. Virginia Region,
    standard 1-year term'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – N. Virginia 区域 t.2micro 保留实例定价选项，标准1年期'
- en: '](img/B17124_07_04.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_04.jpg)'
- en: Figure 7.4 – t.2micro Reserved Instance Pricing Option in N. Virginia Region,
    standard 1-year term
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – N. Virginia 区域 t.2micro 保留实例定价选项，标准1年期
- en: Next, we will look at the different payment options available for EC2 instances
    that have been purchased under the Reserved pricing model.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看为已在保留定价模型下购买的EC2实例提供的不同支付选项。
- en: Payment options for Reserved Instances
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保留实例的支付选项
- en: 'You can choose to pay all or some of the total cost of your Reserved Instance
    upfront and depending on how you pay for your Reserved Instances, you get varying
    levels of the discounted rate. They are as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择一次性支付预留实例的全部或部分费用，根据你支付的方式，你将获得不同级别的折扣率。具体如下：
- en: '**All Upfront**: This is where you pay for the entire term of the Reserved
    Instance upfront, right at the beginning of the contract. You do not get a monthly
    hourly bill and you benefit from the maximum available discount.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全额预付**：这是指你在合同开始时一次性支付预留实例的整个期限费用。你不会收到每月的小时账单，并且可以享受最大可用折扣。'
- en: '**Partial Upfront**: This is where you make some upfront payment and then are
    charged a discounted hourly rate for the term and billed monthly.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部分预付**：这是指你先支付部分费用，然后按照折扣后的小时费率支付剩余费用，并每月结算。'
- en: '**No Upfront**: There is where you do not make any upfront payment, but you
    still get some discount compared to the On-Demand rate. You get a better discount
    by going with either the **Partial Upfront** or **All-Upfront** option.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无需预付**：这是指你无需提前支付任何费用，但相比按需费用仍然可以享受一定的折扣。选择**部分预付**或**全额预付**选项，你将获得更高的折扣。'
- en: An important point to note here is that while you benefit from a massive discount
    for your Reserved Instance, you are charged for the whole term, regardless of
    whether you have the EC2 instance in a running state or not. This means that for
    some use cases such as if you need an EC2 instance for unpredictable usage patterns
    and short durations, but without any interruptions, then the On-Demand pricing
    option might work out more cost-effectively. You would need to carefully compare
    the total cost of purchasing a Reserved Instance versus the On-Demand option to
    figure out which is more cost-effective.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的一个重要点是，尽管你可以通过预留实例获得大幅折扣，但你仍然需要为整个期限支付费用，无论你的 EC2 实例是否处于运行状态。这意味着，对于某些使用场景，例如你需要一个
    EC2 实例用于不可预测的使用模式和短时间的需求，但不希望中断，那么按需定价选项可能会更具成本效益。你需要仔细比较购买预留实例与按需选项的总成本，以确定哪种方式更具成本效益。
- en: Reserved Instance Marketplace
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预留实例市场
- en: Sometimes, your business needs change, or perhaps, the project that you originally
    purchased your reserved instances for ends earlier than anticipated. Whatever
    your reasons, you can resell your Standard Reserved Instances on the **Reserved
    Instance Marketplace** to other AWS customers if you no longer need them. This
    enables you to recoup some of the costs that you may have incurred from your original
    purchase.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你的业务需求会发生变化，或者你原本购买预留实例的项目比预期提前结束。无论是什么原因，如果你不再需要这些预留实例，你可以将它们转售给其他 AWS 客户。通过这种方式，你可以收回部分原始购买时的成本。
- en: Because you are reselling your Reserved Instances, the remaining term will be
    less than what it was originally bought for. This also means that if you need
    a Reserved Instance for less than the standard contract length, you may wish to
    check out the Reserved Instance Marketplace to see if you can find one that fits
    your requirements.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你正在转售你的预留实例，剩余的期限将会少于最初购买的期限。这也意味着，如果你需要一个短于标准合同期限的预留实例，你可以查看预留实例市场，看看是否可以找到符合你需求的实例。
- en: Note that only Standard Reserved Instances can be listed in the Marketplace.
    You cannot list Convertible Reserved Instances in the Marketplace. Furthermore,
    to list your Reserved Instance, you must ensure that you have paid for the Reserved
    Instance and that you owned the Reserved Instance for longer than 30 days.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，只有标准预留实例可以在市场上列出。你不能在市场上列出可转换预留实例。此外，要将预留实例列出在市场上，你必须确保你已经支付了该实例的费用，并且拥有该预留实例超过
    30 天。
- en: Spot Instance Pricing Option
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 临时实例定价选项
- en: Amazon almost always has spare compute capacity. One way to encourage the uptake
    of this spare capacity is by offering customers the option to launch Spot Instances
    at discounts up to 90% off the On-Demand price. However, Spot Instances are not
    suitable for all applications. They are ideal for workloads that are stateless
    or can be interrupted. For example, certain use cases such as data analysis, batch
    jobs, and background processing, can be run whenever there is available capacity,
    and depending on the application design architecture, those EC2 instances can
    be interrupted and then resumed later when capacity is available. In other words,
    if the application is stateless and workflows are not sensitive to interruptions,
    then if there are any interruptions, the application workflow simply waits for
    available compute capacity to continue with its operations.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊几乎总是有备用计算能力。鼓励客户使用这部分备用容量的一种方式是提供让客户选择启动按需实例折扣高达90%的Spot实例。然而，Spot实例并不适合所有应用程序。它们非常适合无状态或可以中断的工作负载。例如，某些用例，如数据分析、批处理任务和后台处理，可以在有空闲计算能力时运行，且根据应用程序的设计架构，这些EC2实例可以被中断，然后在有空闲容量时继续恢复运行。换句话说，如果应用程序是无状态的且工作流对中断不敏感，那么在有任何中断时，应用程序的工作流只需等待可用的计算能力，再继续其操作。
- en: You might be wondering why there would be any interruptions. Well, simply put,
    Amazon will try to meet supply and demand for compute capacity based on the best
    possible price they can get. When you purchase a Spot Instance, you are made aware
    of the current spot price. You would then place a maximum offer price, which needs
    to be higher than the prevailing spot price. Now, if demand were to increase,
    Amazon can increase the spot price rate and if your offer price falls below this,
    then another customer can be offered this capacity at the higher spot price instead,
    and your workloads will be interrupted. Spot Instances can also be interrupted
    if, for instance, supply of capacity reduces due to excessive uptake of Spot Instances
    by customers.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想知道为什么会有中断。简单来说，亚马逊会根据他们能获得的最佳价格来尝试平衡计算能力的供需。当你购买Spot实例时，你会知道当前的Spot价格。然后，你会设置一个最大出价，该出价需要高于当前的Spot价格。如果需求增加，亚马逊可以提高Spot价格，如果你的出价低于这个价格，那么其他客户就可以在较高的Spot价格下获得这部分容量，而你的工作负载将会被中断。如果例如，由于客户对Spot实例的过度使用，计算能力的供应减少，Spot实例也可能被中断。
- en: 'The following are some of the reasons for Spot Instance interruptions:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些导致Spot实例中断的原因：
- en: '**Price**: Where the spot price goes above your maximum offer price.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**价格**：当Spot价格超过你的最大出价时。'
- en: '**Capacity**: If there is not enough unused EC2 instances to meet the demand
    for On-Demand instances.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容量**：如果没有足够的未使用EC2实例来满足对按需实例的需求。'
- en: '**Constraints**: This includes the launch group or Availability Zone group,
    resulting in Spot Instance termination when such constraints cannot be met.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约束**：这包括启动组或可用区组，当无法满足这些约束时，Spot实例将被终止。'
- en: When Amazon attempts to interrupt your Spot Instance, you are provided with
    a warning interruption notice, which is issued 2 minutes before Amazon EC2 stops
    or terminates your Spot Instance. These interruption notices are made available
    via CloudWatch Events and as items in the instance metadata on the Spot Instance.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当亚马逊试图中断你的Spot实例时，你会收到一个中断警告通知，该通知会在亚马逊EC2停止或终止Spot实例之前2分钟发出。这个中断通知可以通过CloudWatch事件以及作为Spot实例元数据中的项提供。
- en: With regards to Amazon CloudWatch Events (discussed in [*Chapter 13*](B17124_13_Final_SK_ePub.xhtml#_idTextAnchor317),
    *Management and Governance on AWS*), you can create targets such as Lambda functions
    or Amazon **Simple Notification** (**SNS**) topics, which can process the Spot
    interruption notices when they happen. We will discuss SNS in detail in [*Chapter
    10*](B17124_10_Final_SK_ePub.xhtml#_idTextAnchor249), *Application Integration
    Services*, but essentially, you can create an email subscription to an SNS topic
    so that when a 2-minute interruption notice is generated, this message can be
    forwarded to you via the SNS topic via email.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 关于亚马逊CloudWatch事件（在[*第13章*](B17124_13_Final_SK_ePub.xhtml#_idTextAnchor317)，《AWS上的管理与治理》中讨论），你可以创建目标，如Lambda函数或亚马逊**简单通知服务**（**SNS**）主题，当中断通知发生时，它们可以处理这些通知。我们将在[*第10章*](B17124_10_Final_SK_ePub.xhtml#_idTextAnchor249)，《应用集成服务》中详细讨论SNS，但本质上，你可以创建一个SNS主题的电子邮件订阅，这样当生成2分钟中断通知时，该消息就可以通过SNS主题以电子邮件的形式转发给你。
- en: The instance metadata contains data about your EC2 instance, divided into categories;
    for example, hostname, IP address information, events, and security groups. It
    is accessible from within the EC2 instance itself, available at `http://169.254.169.254/latest/meta-data/`.
    The `169.254.169.254` IP address is a link-local address and is valid only from
    the instance.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 实例元数据包含有关EC2实例的数据，并按类别划分；例如，主机名、IP地址信息、事件和安全组。可以从EC2实例内部访问，网址为`http://169.254.169.254/latest/meta-data/`。`169.254.169.254`是一个链路本地地址，仅在实例内部有效。
- en: Previously, the only behavior following an interruption from Amazon was to terminate
    your Spot Instance. However, you may lose data when that happens. More recently,
    alternative behaviors have become available, such as stopping your Spot Instance
    or placing the instance into a hibernate state. When an instance is placed into
    a hibernate state, the EBS volumes are preserved, and instance memory (RAM) is
    preserved on the root volume. Furthermore, the private IP addresses of the instance
    are also preserved. This option means that when the Spot service resumes your
    instance if, for example, the capacity becomes available or the spot rises fall
    before your maximum offer price, then your instance can continue from the state
    it was stopped at.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，Amazon在中断后唯一的行为是终止您的现货实例。但是，这样做可能会导致数据丢失。最近，出现了其他行为选项，例如停止现货实例或将实例置于休眠状态。当实例被置于休眠状态时，EBS卷会被保留，实例内存（RAM）会被保存在根卷上。此外，实例的私有IP地址也会被保留。这意味着当现货服务恢复您的实例时，如果例如容量变得可用或现货价格在您的最高报价价格之前下降，您的实例可以从停止时的状态继续运行。
- en: Spot Fleets
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 现货集群
- en: A **Spot Fleet** is a collection of Spot Instances, and optionally On-Demand
    instances. AWS will launch Spot Instances as part of the fleet if there is available
    capacity and if your maximum offer price is higher than the spot price. The Spot
    Fleet will attempt to maintain its target capacity if Spot Instances are terminated.
    What you can also do is include a few On-Demand instances as part of your Spot
    Fleet. This means that you always have some capacity for minimum application requirements.
    As demand for your application increases, Spot Instances are added to the fleet
    at the discounted rate, assuming there is capacity, or your offer price is higher
    than the spot price.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**现货集群**是一个由现货实例组成的集合，且可选地包括按需实例。如果有可用容量，并且您的最高报价价格高于现货价格，AWS将启动现货实例作为集群的一部分。如果现货实例被终止，现货集群将尝试维持其目标容量。您还可以将一些按需实例作为现货集群的一部分。这意味着您始终会有一些容量来满足最小的应用需求。随着应用需求的增加，现货实例会按照折扣价格加入集群，前提是有容量，或者您的报价价格高于现货价格。'
- en: In this section, we looked at different EC2 instance pricing options. We examined
    the default On-Demand pricing model and compared it with the Reserved pricing
    model and Spot pricing options.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了不同的EC2实例定价选项。我们研究了默认的按需定价模型，并将其与预留定价模型和现货定价选项进行了比较。
- en: In the next section, we will move on to discuss another storage option for your
    EC2 instances, known as **Elastic File System** (**EFS**).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将继续讨论另一种存储选项，称为**弹性文件系统**（**EFS**）。
- en: Implementing Shared File Storage with Amazon EFS
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon EFS实现共享文件存储
- en: In our earlier discussion, we looked at Amazon EBS. These block storage volumes
    are directly attached to a specific EC2 instance and act as virtual hard drives
    for your EC2 instance. In general, an EBS volume can only be attached to one specific
    EC2 instance at a given time. This means that if you deploy 20 EC2 instances,
    each one of the instances will have one or more EBS volumes attached. This is
    perfectly fine if the data between those volumes does not need to be shared across
    those EC2 instances.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的讨论中，我们了解了Amazon EBS。这些块存储卷直接附加到特定的EC2实例，并充当该实例的虚拟硬盘。一般来说，EBS卷只能附加到一个特定的EC2实例。也就是说，如果您部署了20个EC2实例，每个实例将附加一个或多个EBS卷。如果这些卷之间的数据不需要在EC2实例之间共享，这完全是可以接受的。
- en: There are multiple use cases for sharing data across EC2 instances. These include
    file shares or data that needs to be shared across multiple applications and web
    servers. In those cases, using EBS volumes would create a messy architecture of
    having to somehow replicate data between those individual EBS volumes.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 共享数据在 EC2 实例之间有多种用途。这些包括文件共享或需要跨多个应用程序和 Web 服务器共享数据的情况。在这些情况下，使用 EBS 卷将导致必须在这些个别
    EBS 卷之间某种方式地复制数据的混乱架构。
- en: Amazon offers the **EFS** solution, which allows you to create and mount file
    shares across multiple EC2 instances. These instances can then update the data
    on the file share, which is visible to all other EC2 instances that have mounted
    the same share if the necessary permissions have been set.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon 提供了**EFS**解决方案，允许您在多个 EC2 实例之间创建和挂载文件共享。这些实例可以更新文件共享上的数据，只要设置了必要的权限，其他已挂载同一共享的
    EC2 实例也能看到更新的数据。
- en: 'Some key features of EFS include the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: EFS 的一些关键特性包括以下内容：
- en: Can be used by Linux-based EC2 instances as a centralized file storage solution.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以作为基于 Linux 的 EC2 实例的集中式文件存储解决方案使用。
- en: Can also be accessed from on-premises servers over a VPN or the Direct Connect
    service.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也可以通过 VPN 或直接连接服务从本地服务器访问。
- en: EFS Volumes can grow and shrink on demand. This is unlike EBS volumes, where
    you need to provision storage before you can use it.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EFS 卷可以根据需求增长和收缩。这与 EBS 卷不同，后者需要在使用之前进行存储预配。
- en: EFS volumes are regionally-based and can be made available across Availability
    Zones for high availability and durability.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EFS 卷是区域性的，并可以跨多个可用区提供高可用性和耐用性。
- en: Note that EFS Volumes cannot be used as boot/root volumes of your EC2 instance
    and cannot be used with Windows EC2 instances.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，EFS 卷不能用作 EC2 实例的引导/根卷，也不能与 Windows EC2 实例一起使用。
- en: In this section, we examined an alternative storage solution for your Linux-based
    EC2 instance, where the requirement is to share files and data across a fleet
    of instances. Amazon EFS is a file-level storage solution and can be used to mount
    file shares on multiple EC2 instances across multiple Availability Zones in each
    Region.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们研究了一种针对您的基于 Linux 的 EC2 实例的备选存储解决方案，要求是在一组实例之间共享文件和数据。Amazon EFS 是一种文件级存储解决方案，可用于在每个区域中跨多个可用区挂载文件共享到多个
    EC2 实例上。
- en: In the next section, we will look at an alternative compute solution known as
    Amazon Lightsail, which allows us to easily deploy individual VPSes in the cloud.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看看一种称为 Amazon Lightsail 的替代计算解决方案，它允许我们在云中轻松部署单独的 VPS。
- en: Learning about VPSes with Amazon Lightsail
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解使用 Amazon Lightsail 的 VPS
- en: In addition to Amazon EC2, AWS also offers a more lightweight solution to deploy
    virtual servers preconfigured with the most common application stacks for a wide
    range of use cases. Rather than picking individual components of your EC2 instances,
    such as the instance type and storage, and then installing all the necessary application
    layers, Amazon Lightsail offers blueprints that will automatically configure your
    servers with various common use case applications and utilities required to get
    up and running.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Amazon EC2，AWS 还提供了一种更轻量级的解决方案，用于部署预配置了最常见应用程序堆栈的虚拟服务器，适用于各种用例。与选择 EC2 实例的各个组件（如实例类型和存储）然后安装所有必要的应用程序层不同，Amazon
    Lightsail 提供了蓝图，将自动配置您的服务器，包括各种常见用例的应用程序和必需的实用工具，让您快速上手。
- en: A common application stack includes your chosen operating system, along with
    apps such as WordPress, Drupal, Plesk, LAMP, and more. Deploying Amazon Lightsail
    is also relatively straightforward, with guided steps to get your deployment up
    and running.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的应用程序堆栈包括您选择的操作系统，以及诸如 WordPress、Drupal、Plesk、LAMP 等应用程序。部署 Amazon Lightsail
    也相对简单，通过引导步骤来使您的部署快速上线。
- en: The best part about Lightsail is you have a fixed monthly fee based on the instance
    type and the associated operating system and applications that have been deployed.
    However, for more complex configurations and enterprise-grade production environments,
    you will probably still need to design and deploy EC2 instances.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Lightsail 最大的优点是您只需支付基于实例类型和相关操作系统及已部署应用程序的固定月费用。但是，对于更复杂的配置和企业级生产环境，您可能仍然需要设计和部署
    EC2 实例。
- en: Prices for Amazon Lightsail start from as little as $3.50 per month. This gives
    you a Linux virtual server with 512 MB memory, 1 vCPU, a 20 GB SSD disk, and up
    to 1 TB of data transfer. Additional configurations include opting for a static
    IP address, DNS management, and SSH/RDS access to your virtual server.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Lightsail 的价格从每月仅 $3.50 起。这为你提供一台 Linux 虚拟服务器，配备 512 MB 内存、1 个 vCPU、20
    GB SSD 硬盘，并支持最多 1 TB 的数据传输。额外配置包括选择静态 IP 地址、DNS 管理和对虚拟服务器的 SSH/RDS 访问权限。
- en: As your needs change over time, you can easily upgrade to EC2 instances, which
    involves taking a snapshot of your instance and following a step-by-step process
    to upgrade to EC2 using a wizard.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 随着需求的变化，你可以轻松升级到 EC2 实例，这涉及到对你的实例进行快照，并按照逐步指南的过程使用向导将其升级为 EC2。
- en: In this section, we reviewed Amazon's Lightsail offering, which can be used
    for smaller-scale application deployments and predictable pricing structures.
    In the next section, we will look at other compute options available on AWS.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们回顾了 Amazon 的 Lightsail 服务，它可以用于小规模的应用程序部署和可预测的定价结构。在下一节中，我们将了解 AWS 上其他可用的计算选项。
- en: Introduction to Amazon ECS and Kubernetes
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon ECS 和 Kubernetes 简介
- en: So far, we have been looking at hardware virtualization and using hypervisors
    to build VMs such as EC2 instances that we can run various applications on. Different
    applications often have specific requirements, and many applications will not
    be able to run together in the same VM due to incompatibility with the underlying
    libraries or runtime environments.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论硬件虚拟化，并使用虚拟机监控程序来构建像 EC2 实例这样的虚拟机，供我们运行各种应用程序。不同的应用程序通常有特定的需求，而且许多应用程序由于与底层库或运行时环境不兼容，无法在同一虚拟机中一起运行。
- en: Traditional virtualization technologies involve using bare-metal hardware, upon
    which you configure a hypervisor. This hypervisor, as we discussed previously,
    allows you to essentially *carve* out physical hardware components (CPU, memory,
    storage, and so on) into smaller virtual components that allow you to then deploy
    VMs, or in the case of AWS, EC2 instances. Each EC2 instance, however, will need
    to host a guest operating system (Linux or Windows, for example), shared libraries
    and system files, and your application.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的虚拟化技术涉及使用裸金属硬件，并在其上配置一个虚拟机监控程序（hypervisor）。正如我们之前讨论的，这个虚拟机监控程序使你能够将物理硬件组件（CPU、内存、存储等）*切分*成更小的虚拟组件，从而部署虚拟机（VM），或者在
    AWS 的情况下，EC2 实例。然而，每个 EC2 实例仍然需要托管一个客户操作系统（例如 Linux 或 Windows）、共享库和系统文件，以及你的应用程序。
- en: 'As shown in the following diagram, VMs take up a lot of resources because they
    need to run the guest operating system, along with all the system files, utilities,
    and libraries:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，虚拟机占用大量资源，因为它们需要运行客户操作系统，以及所有的系统文件、工具和库：
- en: '![Figure 7.5 – Hypervisor architecture hosting VMs'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.5 – 托管虚拟机的虚拟机监控程序架构'
- en: '](img/B17124_07_05.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_05.jpg)'
- en: Figure 7.5 – Hypervisor architecture hosting VMs
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5 – 托管虚拟机的虚拟机监控程序架构
- en: You will note that each VM requires its own guest OS, as well as the necessary
    libraries, system files, and runtime environments. An alternative solution is
    to consider a technology known as **Docker**.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，每个虚拟机都需要自己的客户操作系统，以及必要的库、系统文件和运行时环境。一个替代方案是考虑一种被称为 **Docker** 的技术。
- en: Docker is built on the concept of containerization, which is essentially **operating
    system virtualization**. Applications are run in isolated user spaces known as
    **containers**, which share the same underlying operating system. This is made
    possible because the container will host all the necessary dependencies required
    by the application, including binaries, libraries, configuration files, and runtime
    environments. The container is abstracted from the host operating system's container
    with limited access to the OS, which allows us to run several containers on the
    same bare-metal hardware.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 基于容器化的概念，实际上就是 **操作系统虚拟化**。应用程序在隔离的用户空间中运行，这些用户空间被称为 **容器**，它们共享相同的底层操作系统。这得以实现的原因是容器会托管应用程序所需的所有依赖项，包括二进制文件、库、配置文件和运行时环境。容器与主机操作系统的容器是抽象的，且对操作系统的访问是有限的，这使得我们可以在同一裸金属硬件上运行多个容器。
- en: 'Containerization also offers less overhead during startups since they share
    the same underlying OS rather than each container have an operating system to
    boot up from, which is how VMs work. The following diagram illustrates this concept:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 容器化还提供了更少的启动开销，因为它们共享相同的底层操作系统，而不是每个容器都需要启动一个操作系统，这就是虚拟机的工作方式。下图说明了这一概念：
- en: '![Figure 7.6 – Docker concepts'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.6 – Docker 概念'
- en: '](img/B17124_07_06.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_06.jpg)'
- en: Figure 7.6 – Docker concepts
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – Docker 概念
- en: Some of the added features of using Docker include the fact that you run multiple
    applications on the same bare-metal hardware, all sharing the same underlying
    OS via the Docker engine. This keeps the code base for the application much smaller
    compared to a VM that also has to host the operating system.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker 的一些附加功能包括，您可以在相同的裸金属硬件上运行多个应用程序，所有这些应用程序通过 Docker 引擎共享相同的底层操作系统。与虚拟机（VM）相比，这使得应用程序的代码库要小得多，因为虚拟机还需要托管操作系统。
- en: Amazon offers **ECS**, which is a fully managed container orchestration service
    that allows you to deploy Docker-style applications. Amazon ECS can help you deploy
    and manage multiple Docker containers in the cloud rather than having to manually
    spin up EC2 instances and deploy the Docker solution on each.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon 提供了 **ECS**，这是一种完全托管的容器编排服务，允许您部署 Docker 风格的应用程序。Amazon ECS 可以帮助您在云中部署和管理多个
    Docker 容器，而不需要手动启动 EC2 实例并在每个实例上部署 Docker 解决方案。
- en: 'The following diagram illustrates the core components of Amazon ECS:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了 Amazon ECS 的核心组件：
- en: '![Figure 7.7 – Amazon ECS architecture'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.7 – Amazon ECS 架构'
- en: '](img/B17124_07_07.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_07.jpg)'
- en: Figure 7.7 – Amazon ECS architecture
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7 – Amazon ECS 架构
- en: 'The Amazon ECS architecture comes with the following core components and features:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon ECS 架构包含以下核心组件和功能：
- en: '**ECS Cluster**: This is a logical grouping of tasks or services.'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ECS 集群**：这是任务或服务的逻辑分组。'
- en: '**Task** – This is a Docker container termed as a "task" in Amazon ECS. In
    Amazon ECS, a "task" is essentially a container.'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**任务** – 这是一个称为“任务”的 Docker 容器，在 Amazon ECS 中。实际上，在 Amazon ECS 中，“任务”本质上就是一个容器。'
- en: '**Task Definition**: Each ECS task is created from a task definition. A task
    definition specifies the Docker image to use, the amount of CPU and memory to
    use with each task or each container within a task, the launch type to use (discussed
    later), and the IAM role that your tasks should use, among others.'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**任务定义**：每个 ECS 任务都是根据任务定义创建的。任务定义指定要使用的 Docker 镜像、每个任务或每个容器所使用的 CPU 和内存量、使用的启动类型（稍后讨论）以及任务应使用的
    IAM 角色等。'
- en: '**Elastic Container Registry** (**ECR**): This is where Docker images are stored
    on AWS. You can also store your images on Docker Hub or a private registry. Amazon
    ECR hosts your images in a highly available and high-performance architecture.
    When the task starts, it reviews the task definition and pulls down the Docker
    image required from the registry.'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**弹性容器注册表** (**ECR**)：这是 AWS 上存储 Docker 镜像的地方。您也可以将镜像存储在 Docker Hub 或私有注册表中。Amazon
    ECR 以高度可用且高性能的架构托管您的镜像。当任务启动时，它会查看任务定义，并从注册表中拉取所需的 Docker 镜像。'
- en: '**ECS Service**: This allows you to define a specified number of instances
    of a task definition simultaneously in an Amazon ECS cluster. Should one of your
    tasks fail, the ECS service will replace it to maintain the desired number of
    tasks in the service.'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ECS 服务**：这允许您在 Amazon ECS 集群中同时定义指定数量的任务定义实例。如果您的任务之一失败，ECS 服务将替换它，以保持服务中任务的预期数量。'
- en: '**ECS Container instances**: Your tasks run on EC2 instances, within which
    you run your Docker container.'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ECS 容器实例**：您的任务运行在 EC2 实例上，您在其中运行 Docker 容器。'
- en: However, there are two types of ECS deployments, which we will discuss next.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，ECS 有两种类型的部署方式，我们将在接下来的部分讨论。
- en: Amazon ECS comes in two deployment options
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon ECS 提供两种部署选项
- en: 'Let''s take a look at these deployment options:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这些部署选项：
- en: '**Amazon Fargate (Fargate launch type)**: This enables you to set up your ECS
    environment without having to spin up an EC2 instance, provision and scale clusters,
    or patch and update virtual servers yourself. You simply package your application
    and specify your CPU, memory, and network requirements and AWS takes care of the
    heavy lifting for you. AWS will place the ECS tasks on the cluster, scale as required,
    and fully manage the entire environment for you.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Fargate（Fargate 启动类型）**：这使你能够在无需启动 EC2 实例、配置和扩展集群或自己修补和更新虚拟服务器的情况下设置
    ECS 环境。你只需打包应用程序并指定 CPU、内存和网络要求，AWS 会为你处理繁重的工作。AWS 会将 ECS 任务放置到集群上，根据需要进行扩展，并全面管理整个环境。'
- en: '**EC2 launch type**: In some cases, you may require direct access to the underlying
    EC2 instances that run your container services. In this case, you must manage
    a cluster of EC2 instances (patch and update them) and schedule the placement
    of containers on the servers.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EC2 启动类型**：在某些情况下，你可能需要直接访问运行容器服务的底层 EC2 实例。在这种情况下，你必须管理一组 EC2 实例（修补和更新它们），并安排将容器放置在这些服务器上。'
- en: In this section, we learned about Amazon ECS. In the next section, we will look
    at an orchestration service known as Amazon Elastic Service for Kubernetes.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们了解了 Amazon ECS。在接下来的部分，我们将介绍一个名为 Amazon Elastic Service for Kubernetes
    的编排服务。
- en: Amazon Elastic Kubernetes Service (Amazon EKS)
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon 弹性 Kubernetes 服务（Amazon EKS）
- en: Kubernetes is another open source container orchestration solution. It groups
    containers that make up an application into logical units for easy management
    and discovery. Kubernetes takes care of scaling and managing your containers,
    taking care of failover options to ensure your application keeps running.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是另一个开源容器编排解决方案。它将构成应用程序的容器分组为逻辑单元，以便于管理和发现。Kubernetes 负责扩展和管理你的容器，处理故障转移选项，以确保应用程序持续运行。
- en: '**Amazon EKS** is AWS''s offering to help you deploy, manage, and scale containerized
    applications using Kubernetes on AWS.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon EKS** 是 AWS 提供的服务，帮助你在 AWS 上使用 Kubernetes 部署、管理和扩展容器化应用程序。'
- en: In this section, we looked at the basics of containerization and how it can
    be used to effectively deploy and manage your application stack. We discussed
    the **ECS** and its two different launch types – the Fargate and EC2 launch types.
    We also looked at Amazon's take on Kubernetes as a container orchestration tool
    that uses Kubernetes.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们学习了容器化的基础知识，以及如何有效地部署和管理你的应用程序堆栈。我们讨论了 **ECS** 及其两种不同的启动类型——Fargate
    启动类型和 EC2 启动类型。我们还探讨了亚马逊对 Kubernetes 的应用，它作为一个使用 Kubernetes 的容器编排工具。
- en: In the next section, we will look at some additional compute solutions available
    from AWS.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将介绍 AWS 提供的一些其他计算解决方案。
- en: Learning about additional compute services on AWS
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习 AWS 上的其他计算服务
- en: In this section, we will look at some additional compute services available
    on AWS and their use cases.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将介绍 AWS 上的一些其他计算服务及其应用场景。
- en: Serverless option – AWS Lambda
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无服务器选项 – AWS Lambda
- en: So far, we have only looked at server-based computer resources except for AWS
    ECS Fargate. When we say serverless, we do not mean that the compute resource
    is running without any servers. Ultimately, servers will house the CPU that offers
    compute capabilities. The term serverless is just used to mean that the customer
    does not need to manage any actual servers as this falls within the responsibility
    of AWS.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们仅查看了基于服务器的计算资源，除了 AWS ECS Fargate。我们所说的无服务器并不意味着计算资源不依赖任何服务器。最终，服务器将承载提供计算能力的
    CPU。术语“无服务器”只是意味着客户不需要管理任何实际的服务器，因为这属于 AWS 的责任。
- en: AWS Lambda is a serverless offering from AWS that allows you to run code and
    perform some tasks. AWS Lambda is known as a **Function as a Service** (**FaaS**)
    solution that can be used to build an entirely serverless architecture comprised
    of storage, databases, and network capabilities where you do not manage any underlying
    servers.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda 是 AWS 提供的一种无服务器服务，允许你运行代码并执行一些任务。AWS Lambda 被称为 **函数即服务**（**FaaS**）解决方案，可用于构建完全无服务器的架构，涵盖存储、数据库和网络功能，而你不需要管理任何底层服务器。
- en: To use Lambda, you must create a function using a supporting programming language,
    such as Python or Node.js, and upload this function to AWS Lambda. You then need
    to define a trigger that will execute the code. For example, you can create a
    Lambda function that gets triggered when you upload an image to an S3 bucket.
    Your function could be used to add a watermark to a copy of the image and place
    it in another bucket, which is then used to serve a web application that allows
    customers to purchase stock photos. This way, the preview images have watermarks
    on them, and users will need to complete a purchase before they get the original
    image.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Lambda，您必须使用支持的编程语言（如 Python 或 Node.js）创建一个函数，并将该函数上传到 AWS Lambda。然后，您需要定义一个触发器来执行代码。例如，您可以创建一个
    Lambda 函数，当您将图像上传到 S3 存储桶时触发。您的函数可以用来给图像副本加水印并将其放入另一个存储桶，然后用于提供一个 Web 应用程序，允许客户购买库存照片。这样，预览图像上就有水印，用户需要完成购买才能获得原始图像。
- en: The important thing to remember here is that Lambda functions are executed when
    they're triggered by another AWS service, so they do not run independently. Lambda
    functions can also be triggered on a schedule. An example of this is if you have
    a fleet of development servers that your dev team needs to work on. Because this
    is a short project, we decided to opt for On-Demand EC2 instances. However, you
    want to try and save on costs, so you create a Lambda function to stop the EC2
    instances at 6 P.M. and another Lambda function to start up the EC2 instances
    again at 8 A.M. This automation sequence made possible by scheduling Lambda functions
    can help you save on costs.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要记住的重要一点是，Lambda 函数是在被另一个 AWS 服务触发时执行的，因此它们并不会独立运行。Lambda 函数也可以按计划触发。例如，如果您有一批开发服务器，您的开发团队需要在其上工作。由于这是一个短期项目，我们决定选择按需
    EC2 实例。然而，您希望尽量节省成本，因此您创建了一个 Lambda 函数，在晚上 6 点停止 EC2 实例，并创建另一个 Lambda 函数，在早上 8
    点重新启动 EC2 实例。通过计划 Lambda 函数实现的自动化序列可以帮助您节省成本。
- en: An important point to remember is that with Lambda, you pay only for the compute
    time your Lambda functions consumes and there is no charge when your code is not
    running.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的重要一点是，在 Lambda 中，您只需为 Lambda 函数消耗的计算时间付费，当您的代码不运行时，不会产生费用。
- en: AWS Batch
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Batch
- en: AWS Batch can be used to run thousands of batch computing jobs on AWS. AWS Batch
    will set up and provision the necessary compute resources to fulfill your batch
    requests. There is no need to deploy server clusters as AWS takes care of this
    for you. You can schedule and execute your batch jobs across a wide range of compute
    services, such as EC2 and ECS. With AWS Batch, you pay for the resources that
    AWS creates, such as EC2 instances or ECS clusters.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Batch 可用于在 AWS 上运行数千个批量计算作业。AWS Batch 将设置并提供必要的计算资源以完成您的批量请求。无需部署服务器集群，因为
    AWS 会为您处理这一部分。您可以在多种计算服务上调度和执行批处理作业，例如 EC2 和 ECS。使用 AWS Batch，您只需为 AWS 创建的资源（如
    EC2 实例或 ECS 集群）付费。
- en: AWS Outposts
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Outposts
- en: It is possible to run several AWS Services such as EC2 instances, RDS databases,
    and host Amazon S3 storage buckets on-premises. You get to use the same AWS tools
    and hardware both in the cloud and on-premises, which helps build a complete hybrid
    solution. AWS Outposts is ideal when you want to run AWS resources with very low
    latency connections to your on-premises application or if you require local data
    processing due to any compliance and regulatory requirements.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在本地运行多个 AWS 服务，如 EC2 实例、RDS 数据库和托管的 Amazon S3 存储桶。您可以在云端和本地同时使用相同的 AWS 工具和硬件，从而帮助构建一个完整的混合解决方案。当您希望以极低的延迟连接到本地应用程序或因合规性和监管要求需要本地数据处理时，AWS
    Outposts 是理想选择。
- en: 'AWS Outposts comes in two flavors:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Outposts 提供两种版本：
- en: '**VMware Cloud on AWS Outposts**: This allows you to utilize the same VMware
    tools to manage the infrastructure that you use with your on-premises resources.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VMware Cloud on AWS Outposts**：这使您能够利用相同的 VMware 工具来管理您本地资源所使用的基础设施。'
- en: '**AWS native variant of AWS Outposts**: This allows you to use the same AWS
    APIs that you use with the AWS cloud-hosted services.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 原生版 AWS Outposts**：这使您能够使用与 AWS 云托管服务相同的 AWS API。'
- en: You can get AWS Outposts delivered to your local on-premises location as a 42U
    rack and can scale from 1 rack to 96 racks to create pools of compute and storage
    capacity. You can also get smaller racks with 1U and 2U rack-mountable servers
    for locations with limited space or capacity requirements.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将AWS Outposts交付到您本地的现场位置，作为42U的机架，并可以从1个机架扩展到96个机架，以创建计算和存储容量池。您还可以获得1U和2U机架可安装服务器的小型机架，适用于空间或容量需求有限的地点。
- en: In this section, we looked at additional compute services on AWS, including
    the very popular AWS Lambda services, which offers compute capabilities delivered
    in a **FaaS** model.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了AWS上的额外计算服务，包括非常流行的AWS Lambda服务，它提供以**FaaS**模式交付的计算能力。
- en: We also discussed AWS Outposts, which allows you to host AWS infrastructure
    on-premises and address use cases such as very low latency connectivity or local
    data processing needs.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了AWS Outposts，它允许您在本地托管AWS基础设施，并解决如极低延迟连接或本地数据处理等用例需求。
- en: In the next section, we will look at some additional storage options available
    on AWS.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍AWS上提供的一些额外存储选项。
- en: Understanding additional storage options in AWS
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解AWS中的额外存储选项
- en: In addition to the previously discussed storage options for your compute needs,
    you have a couple of additional storage solutions that have been designed for
    specific use cases.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前面讨论的针对计算需求的存储选项外，您还有几个额外的存储解决方案，这些解决方案专为特定的用例设计。
- en: Amazon FSx for Lustre
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon FSx for Lustre
- en: Amazon FSx for Lustre is a fully managed filesystem for compute-intensive workloads
    and designed for applications that require high-performance and low latency connectivity,
    offering millions of IOPS and hundreds of gigabits per second throughput rates.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon FSx for Lustre是一个完全托管的文件系统，专为计算密集型工作负载设计，适用于需要高性能和低延迟连接的应用程序，提供数百万的IOPS和每秒数百千兆比特的吞吐量。
- en: Amazon FSx for Lustre is designed to be integrated with Amazon S3\. You store
    data in S3 and retrieve it when you need to perform compute-intensive workloads
    against the data. Later, you copy the data back to S3 for long-term storage.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon FSx for Lustre旨在与Amazon S3集成。您将数据存储在S3中，并在需要对数据执行计算密集型工作负载时检索它。之后，您将数据复制回S3进行长期存储。
- en: Amazon FSx for Windows File Server
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon FSx for Windows File Server
- en: Microsoft Windows servers can be configured to offer a file-sharing solution
    similar to EFS. Amazon EC2 instances running Microsoft Windows may need a common
    filesystem to share various types of data for end users or applications. For example,
    if you host virtual desktops in the cloud, you may need a central file sharing
    solution to allow your users to share files using mapped drives.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 可以配置Microsoft Windows服务器，提供类似于EFS的文件共享解决方案。运行Microsoft Windows的Amazon EC2实例可能需要一个公共文件系统，以便为最终用户或应用程序共享各种类型的数据。例如，如果您在云中托管虚拟桌面，您可能需要一个集中式文件共享解决方案，以便允许用户通过映射驱动器共享文件。
- en: Instead of manually building out a file share solution using EC2 instances and
    EBS volumes running the Windows operating system, you can use AWS FSx for Windows
    File Server. This is a fully managed native Microsoft Windows filesystem that
    offers support for the SMB protocol and Windows NTFS, **Active Directory** (**AD**)
    integration, and **Distributed File System** (**DFS**). By opting for FSx for
    Windows File Server, you benefit from a fully managed file sharing solution for
    all your Windows-based applications and can configure advanced file sharing solutions
    using DFS.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 与其通过使用运行Windows操作系统的EC2实例和EBS卷手动构建文件共享解决方案，不如使用AWS FSx for Windows File Server。这是一个完全托管的本地Microsoft
    Windows文件系统，支持SMB协议和Windows NTFS，**Active Directory**（**AD**）集成，以及**分布式文件系统**（**DFS**）。选择FSx
    for Windows File Server，您将受益于一个完全托管的文件共享解决方案，适用于所有Windows应用程序，并能够使用DFS配置高级文件共享解决方案。
- en: In this section, we reviewed two additional storage options for your compute
    needs; AWS FSx for Lustre, which is designed for high-performance computing needs
    offering millions of IOPS, and AWS FSx for Windows File Server, which offers a
    fully managed Microsoft Windows file share solution.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们回顾了针对您的计算需求的两个额外存储选项；AWS FSx for Lustre，专为高性能计算需求设计，提供数百万的IOPS，以及AWS
    FSx for Windows File Server，它提供一个完全托管的Microsoft Windows文件共享解决方案。
- en: In the next section, we will look at how to securely access EC2 instances we
    deploy in our VPC with the help of **bastion hosts**. Bastion hosts are servers
    designed to allow secure connections from external networks such as the internet,
    from which you can then access the web and application servers that have been
    deployed in your VPC.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探讨如何通过**堡垒主机**安全地访问我们在 VPC 中部署的 EC2 实例。堡垒主机是专为允许从外部网络（如互联网）进行安全连接而设计的服务器，您可以通过它们访问在
    VPC 中部署的 Web 和应用服务器。
- en: Securing your VPC with bastion hosts
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用堡垒主机确保您的 VPC 安全
- en: The use of bastion hosts (or jump boxes) is used to provide secure access to
    EC2 instances located in the private and public subnets of your **virtual private
    cloud** (**VPC**). These bastion hosts (you can have one or multiple hosts deployed
    for redundancy) can be used as management servers and are designed to allow you
    to remotely connect to them via SSH or RDP protocols. Once you have established
    connectivity to your bastion hosts, you can then log onto backend EC2 instances
    acting as web or application servers.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 使用堡垒主机（或跳板机）可以为位于 **虚拟私有云**（**VPC**）的私有子网和公有子网中的 EC2 实例提供安全访问。这些堡垒主机（您可以部署一个或多个主机以实现冗余）可以用作管理服务器，并设计为允许您通过
    SSH 或 RDP 协议远程连接。一旦您与堡垒主机建立连接，就可以登录到作为 Web 或应用服务器的后端 EC2 实例。
- en: Bastion hosts are EC2 instances that do not host any unnecessary applications,
    other than those required to allow connections to backend EC2 instances. These
    servers are hardened and secured to reduce attack surfaces and thus minimize the
    chances of penetration. However, you still need to manage these instances as you
    would any other application or web server. The onus is on you to ensure that the
    EC2 instances are highly secured, patched, and updated regularly. Amazon also
    offers an alternative solution known as **Session Manager**, which is a feature
    of the **AWS Systems Manager** service offering. **Session Manager** enables you
    to manage your EC2 instances and on-premises instances via an interactive browser
    shell or the AWS CLI tools, without the need to open inbound ports or maintain
    bastion hosts and SSH keys. It also offers a fully auditable instance management
    service recording instance access details. We will discuss AWS Systems Manager
    and Session Manager in [*Chapter 13*](B17124_13_Final_SK_ePub.xhtml#_idTextAnchor317),
    *Management and Governance on AWS*.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 堡垒主机是 EC2 实例，它们不托管任何不必要的应用程序，除非是为了允许与后端 EC2 实例的连接。这些服务器经过加固和安全配置，以减少攻击面，从而最大限度地减少渗透的机会。然而，您仍然需要像管理其他应用或
    Web 服务器一样管理这些实例。确保 EC2 实例的安全性、打补丁和定期更新是您的责任。亚马逊还提供了一个替代方案，称为 **Session Manager**，这是
    **AWS Systems Manager** 服务的一项功能。**Session Manager** 使您能够通过交互式浏览器终端或 AWS CLI 工具管理
    EC2 实例和本地实例，而无需打开入站端口或维护堡垒主机和 SSH 密钥。它还提供了一个完全可审计的实例管理服务，记录实例访问的详细信息。我们将在 [*第
    13 章*](B17124_13_Final_SK_ePub.xhtml#_idTextAnchor317) 中讨论 AWS Systems Manager
    和 Session Manager，*AWS 上的管理与治理*。
- en: In the following diagram, we can see how an administrator can connect to the
    bastion hosts in a public subnet and from there administer backend EC2 instances
    running an application.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到管理员如何连接到公有子网中的堡垒主机，并从那里管理运行应用程序的后端 EC2 实例。
- en: '![Figure 7.8 – Securing access to your VPC using bastion hosts'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.8 – 使用堡垒主机确保访问您的 VPC'
- en: '](img/B17124_07_08.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_08.jpg)'
- en: Figure 7.8 – Securing access to your VPC using bastion hosts
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.8 – 使用堡垒主机确保访问您的 VPC
- en: In the preceding diagram, the administrator connects to the bastion hosts from
    the internet and then from that Bastion Host, establishes a secure connection
    to backend EC2 instances. The security of this architecture can be improved by
    restricting the source of the remote traffic to the Bastion Host. For example,
    rather than having the remote access open to the entire internet, we can restrict
    the source IP address or IP range of that connection to the administrator's corporate
    office network IP range. This way, the administrator can only access the Bastion
    Host if they were working from within the corporate office's network.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，管理员从互联网连接到堡垒主机，然后通过该堡垒主机与后端 EC2 实例建立安全连接。通过限制远程流量的来源，可以提高该架构的安全性。例如，我们可以将该连接的源
    IP 地址或 IP 范围限制为管理员所在公司办公网络的 IP 范围，而不是将远程访问开放给整个互联网。这样，管理员只有在从公司网络内部工作时，才能访问堡垒主机。
- en: In this section, we briefly looked at bastion hosts and how they can be used
    to securely access other EC2 instances in your VPC. Bastion hosts are standard
    EC2 instances themselves, but you would configure them to only serve as an entry
    point into your VPC for administrative access. Furthermore, you would harden the
    bastion hosts by installed the necessary security updates and tools, and ensuring
    that unnecessary applications are removed. Access to bastion hosts can also be
    restricted to specific source IP addresses or even only from your corporate data
    center via a VPN link.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们简要介绍了堡垒主机及其如何用于安全访问 VPC 中的其他 EC2 实例。堡垒主机本身是标准的 EC2 实例，但您会将其配置为仅作为进入 VPC
    的入口点以进行管理访问。此外，您还会通过安装必要的安全更新和工具，确保移除不必要的应用程序，从而加强堡垒主机的安全性。对堡垒主机的访问还可以限制为特定源 IP
    地址，甚至仅通过 VPN 链接从您的公司数据中心访问。
- en: Exercise 7.1 – Expanding ProductionVPC so that it includes two public subnets
    and two private subnets
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 7.1 – 扩展 ProductionVPC，使其包括两个公共子网和两个私有子网
- en: In this exercise, we will expand the architecture of **ProductionVPC** that
    we built in the previous chapter so that it includes an additional public subnet
    in another Availability Zone and two private subnets – one in each Availability
    Zone. This will enable us to design an architecture that can offer high availability
    in case of a single Availability Zone outage.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将扩展上一章节中构建的 **ProductionVPC** 架构，使其包括位于另一个可用区的额外公共子网和两个私有子网——每个可用区一个。这样可以设计出在单个可用区发生故障时仍能提供高可用性的架构。
- en: 'We will be extending the VPC to fulfill our design specifications, as shown
    in the following diagram:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将扩展 VPC 以满足我们的设计规格，如下图所示：
- en: '![Figure 7.9 – VPC with public and private subnets across two Availability
    Zones'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.9 – 跨两个可用区的公共和私有子网的 VPC'
- en: '](img/B17124_07_09.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_09.jpg)'
- en: Figure 7.9 – VPC with public and private subnets across two Availability Zones
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9 – 跨两个可用区的公共和私有子网的 VPC
- en: Log in to your AWS account as the root user and on the main AWS Management Console,
    search for `VPC` in the search box. Click on the `VPC` link to open the VPC Console.
    Once in the console, ensure that you are in the us-east-1 Region, where you created
    **ProductionVPC** in the previous chapter. If necessary, navigate to the us-east-1
    Region by selecting it from the drop-down list.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 使用根用户登录到您的 AWS 账户，在主 AWS 管理控制台的搜索框中搜索 `VPC`。点击 `VPC` 链接以打开 VPC 控制台。一旦进入控制台，确保您位于我们在上一章节中创建
    **ProductionVPC** 的 us-east-1 区域。如有必要，通过从下拉列表中选择它，切换到 us-east-1 区域。
- en: '**Review your current VPC**:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '**查看您的当前 VPC**：'
- en: On the left-hand menu in **VPC console**, click on **Subnets**. You will see
    that there is one **Public Subnet One** that is associated with ProductionVPC,
    which you created in the previous chapter. You will also see other subnets, but
    these are associated with the default VPC in the us-east-1 Region, as per the
    following screenshot:![Figure 7.10 – ProductionVPC with a single public subnet
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **VPC 控制台** 的左侧菜单中，点击 **子网**。您将看到与上一章节中创建的 ProductionVPC 关联的一个 **公共子网一**。您还会看到其他子网，但这些子网与
    us-east-1 区域中的默认 VPC 相关联，如下图所示：![图 7.10 – 具有单一公共子网的 ProductionVPC
- en: '](img/B17124_07_10.jpg)'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_10.jpg)'
- en: Figure 7.10 – ProductionVPC with a single public subnet
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.10 – 具有单一公共子网的 ProductionVPC
- en: Next, click on the **Route Tables** link from the left-hand menu. Using the
    VPC Wizard, your ProductionVPC has been configured with a main route table and
    a public route table. From the following screenshot, you can see that the main
    route table associated with the ProductionVPC has a route table ID of **rtb-0d6fb017c417d8e1b**.
    You can tell it is the main route table because this is indicated in the **Main**
    column with a **Yes**. This main route table is designed to be associated with
    all private subnets in your VPC.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击左侧菜单中的 **路由表** 链接。使用 VPC 向导，您的 ProductionVPC 已配置了主路由表和公共路由表。从以下截图可以看到，关联到
    ProductionVPC 的主路由表的路由表 ID 是 **rtb-0d6fb017c417d8e1b**。您可以通过 **主** 列中的 **是** 来辨认它是主路由表。此主路由表设计为与
    VPC 中的所有私有子网关联。
- en: 'If you click on the **Main Route Table ID** link in the console, the bottom
    pane will provide additional information about the route table. Furthermore, if
    you click on the **Routes** tab of the bottom pane, you will note that currently,
    there is only one route: the **local route**. This local route is designed for
    traffic to flow within the VPC. The main route table does not offer any direct
    access to the internet now. This is a best practice because, for subnets that
    need direct access to the internet, you should ideally create a separate **public
    route table** and attach any *public subnets* to it:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在控制台中点击**主路由表ID**链接，底部窗格将提供有关路由表的更多信息。此外，如果你点击底部窗格的**路由**选项卡，你会注意到目前只有一条路由：**本地路由**。该本地路由是为VPC内部流量设计的。主路由表目前没有提供直接访问互联网的功能。这是一种最佳实践，因为对于需要直接访问互联网的子网，理想情况下你应该创建一个单独的**公共路由表**并将任何*公共子网*附加到它上面：
- en: '![Figure 7.11 – ProductionVPC main route table configuration'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图7.11 – 配置ProductionVPC主路由表'
- en: '](img/B17124_07_11.jpg)'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_11.jpg)'
- en: Figure 7.11 – ProductionVPC main route table configuration
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.11 – 配置ProductionVPC主路由表
- en: 'Next, in the top pane, you will notice that the wizard has already created
    a public route table (with a **Route table ID** of **rtb-0452c63c6d2aa3a88**).
    We know this is the public route table because, in the preceding screenshot, you
    can see a **No** in the **Main** column. It also has one subnet associated with
    it: **Public Subnet One**.'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在顶部窗格中，你会注意到向导已经创建了一个公共路由表（其**路由表ID**为**rtb-0452c63c6d2aa3a88**）。我们知道这是公共路由表，因为在前面的截图中，你可以看到**主路由表**列中的**否**。它还关联了一个子网：**公共子网一**。
- en: 'If you click on the **Route Table ID** link of the public route table, the
    bottom pane will offer additional information, as per the following screenshot.
    Specifically, if you click on the **Routes** tab of the public route table, you
    will see two routes: one local route and a route to the internet. Routes to the
    internet are denoted with a destination of **0.0.0.0/0**. In this case, the route
    to the internet has a target, which is the **internet gateway**. This internet
    gateway gives the subnet direct access to send traffic to the internet and receive
    traffic from the internet if the security groups and/or **Network Access Control
    Lists** (**NACLs**) permit the traffic:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你点击公共路由表的**路由表ID**链接，底部窗格将提供额外的信息，正如以下截图所示。具体来说，如果你点击公共路由表的**路由**选项卡，你将看到两条路由：一条本地路由和一条通往互联网的路由。通往互联网的路由以**0.0.0.0/0**作为目标地址。在这种情况下，通往互联网的路由有一个目标，即**互联网网关**。该互联网网关允许子网直接访问互联网，发送流量到互联网并接收来自互联网的流量，前提是安全组和/或**网络访问控制列表**（**NACLs**）允许这些流量：
- en: '![Figure 7.12 – ProductionVPC with public route table configuration'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.12 – 配置带有公共路由表的ProductionVPC'
- en: '](img/B17124_07_12.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_12.jpg)'
- en: Figure 7.12 – ProductionVPC with public route table configuration
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.12 – 配置带有公共路由表的ProductionVPC
- en: 'You will also notice that AWS does not create a name tag for your route tables
    by default. This can sometimes make it difficult to identify your resources. You
    can easily add name tags to make resources easy to identify. Using your mouse,
    simply hover over the area in the `Public Route Table`. Perform the same action
    for the main route table, making sure to tag the route table with the name **Main
    Route Table**. This will make it easy to identify your route tables, as per the
    following screenshot:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会注意到，AWS默认不会为你的路由表创建名称标签。这有时会使得识别你的资源变得困难。你可以轻松地添加名称标签，使资源更容易识别。使用鼠标，只需将鼠标悬停在`公共路由表`区域上。对主路由表执行相同的操作，确保为路由表打上**主路由表**的标签。这样就可以轻松识别你的路由表，正如以下截图所示：
- en: '![Figure 7.13 – Tagging your route tables'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13 – 为你的路由表打标签'
- en: '](img/B17124_07_13.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_13.jpg)'
- en: Figure 7.13 – Tagging your route tables
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.13 – 为你的路由表打标签
- en: When you create new subnets, they are automatically associated with the main
    route table. This technically makes them private subnets. If you need to create
    a public subnet, you need to remember to disassociate the subnet from the main
    route table and attach it to a route table that offers public internet access
    via the internet gateway.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建新的子网时，它们会自动关联到主路由表。这从技术上讲使它们成为私有子网。如果你需要创建一个公共子网，你需要记得将该子网与主路由表解除关联，并将其附加到一个提供通过互联网网关访问互联网的路由表上。
- en: While you can configure a direct route to the internet in the main route table
    that sends traffic via the internet gateway, this is not advisable. You want to
    ensure that some subnets offer only internal private access without direct exposure
    to the internet. Since EC2 instances deployed as backend services require internet
    access to download software updates, for example, you can set up NAT gateways
    in the public subnets to facilitate this requirement. You would then need to configure
    the **Main Route** table with a route to the internet via this NAT gateway, which
    acts as a proxy for any internet requests from your backend EC2 instances. These
    backend EC2 instances do not require public IP addresses and can still communicate
    with the internet via the NAT gateway.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以在主路由表中配置直接到互联网的路由，通过互联网网关发送流量，但这并不建议。你希望确保某些子网仅提供内部私有访问，而不直接暴露于互联网。由于作为后台服务部署的EC2实例需要互联网访问来下载软件更新等，例如，你可以在公共子网中设置NAT网关来满足这个需求。然后，你需要在**主路由表**中配置通过该NAT网关到互联网的路由，NAT网关充当任何来自后台EC2实例的互联网请求的代理。这些后台EC2实例不需要公共IP地址，仍然可以通过NAT网关与互联网通信。
- en: Setting up additional subnets
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置附加子网
- en: In this part of the exercise, we will be expanding our VPC to include multiple
    public and private subnets. We wish to host two public subnets and two private
    subnets across two Availability Zones. We wish to do this because we want to offer
    high availability so that if one Availability Zone fails or is offline, we can
    access duplicate copies of our resources in the other Availability Zone.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分练习中，我们将扩展我们的VPC以包含多个公共和私有子网。我们希望在两个可用区中分别托管两个公共子网和两个私有子网。我们希望这样做是因为我们想要提供高可用性，以便当一个可用区出现故障或离线时，我们可以在另一个可用区中访问资源的副本。
- en: 'You already have one public subnet in your VPC. This has been configured with
    a name of **Public Subnet One** and has been placed in the **us-east-1a** Availability
    Zone as per the following screenshot:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在VPC中拥有一个公共子网。它被配置为名为**公共子网一**，并根据下图被放置在**us-east-1a**可用区：
- en: '![Figure 7.14 – Public Subnet One in the us-east-1a Availability Zone'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.14 – us-east-1a 可用区中的公共子网一'
- en: '](img/B17124_07_14.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_14.jpg)'
- en: Figure 7.14 – Public Subnet One in the us-east-1a Availability Zone
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – us-east-1a 可用区中的公共子网一
- en: 'As part of this exercise, we will create another public subnet in the **us-east-1b**
    Availability Zone:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本练习的一部分，我们将在**us-east-1b**可用区创建另一个公共子网：
- en: From the left-hand menu in your VPC console, click on **Subnets**.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的VPC控制台的左侧菜单中，点击**子网**。
- en: Click on the **Create subnet** button in the top right-hand corner.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的**创建子网**按钮。
- en: In the **Create subnet** wizard that appears, choose **ProductionVPC** from
    the list of VPCs available.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的**创建子网**向导中，从可用的VPC列表中选择**ProductionVPC**。
- en: Under `Public Subnet Two`.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`公共子网二`下。
- en: Next, under **Availability Zone**, ensure you select **us-east-1b**. This is
    because we want the second public subnet to be placed in a different Availability
    Zone from the first public subnet.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**可用区**下，确保选择**us-east-1b**。这是因为我们希望第二个公共子网被放置在与第一个公共子网不同的可用区。
- en: For the IPv4 CIDR block, provide a block address of `10.0.2.0/24`. This CIDR
    block is on a separate range from the CIDR block of the first public subnet but
    is still a subset of the VPC's CIDR range.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于IPv4 CIDR块，提供`10.0.2.0/24`的地址块。此CIDR块与第一个公共子网的CIDR块位于不同的范围内，但仍然是VPC CIDR范围的子集。
- en: 'Finally, as per the following screenshot, click on **Create subnet**:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如下图所示，点击**创建子网**：
- en: '![Figure 7.15 – Creating Public Subnet Two'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.15 – 创建公共子网二'
- en: '](img/B17124_07_15.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_15.jpg)'
- en: Figure 7.15 – Creating Public Subnet Two
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 – 创建公共子网二
- en: The wizard will create the subnet and display a successful creation message.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 向导将创建子网并显示创建成功的消息。
- en: 'If you click on the checkbox next to the newly created subnet, the bottom pane
    will provide information about the subnet. Click on the **Route table** tab. You
    will notice that this newly created subnet has been automatically associated with
    **main route table**, as shown in the following screenshot:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击新创建的子网旁边的复选框，下方窗格将显示该子网的信息。点击**路由表**标签。你会注意到，这个新创建的子网已经自动与**主路由表**关联，如下图所示：
- en: '![Figure 7.16 – Newly created subnet associated with main route table'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.16 – 新创建的子网与主路由表关联'
- en: '](img/B17124_07_16.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_16.jpg)'
- en: Figure 7.16 – Newly created subnet associated with main route table
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16 – 新创建的子网已与主路由表关联
- en: 'Because we want this subnet to be a public subnet, we need to change its association
    from the main route table to the public route table, as follows:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们希望这个子网成为一个公共子网，因此我们需要将它的关联从主路由表更改为公共路由表，如下所示：
- en: Click on the **Edit route table association** button, as shown in the preceding
    screenshot.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑路由表关联**按钮，如前面的截图所示。
- en: In the **Edit route table association** dialog box that appears, select **Public
    Route Table** from the **Route table ID** drop-down list, as shown in the following
    screenshot:![Figure 7.17 – Edit route table association
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的**编辑路由表关联**对话框中，从**路由表ID**下拉列表中选择**公共路由表**，如下图所示：![图7.17 – 编辑路由表关联
- en: '](img/B17124_07_17.jpg)'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_17.jpg)'
- en: Figure 7.17 – Edit route table association
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.17 – 编辑路由表关联
- en: Click **Save**.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。
- en: At this point, both public subnets have been correctly configured. Next, we'll
    create two private subnets, one in **us-east-1a** and the other in **us-east-1b**.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，两个公共子网已正确配置。接下来，我们将创建两个私有子网，一个在**us-east-1a**，另一个在**us-east-1b**。
- en: Creating private subnets
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建私有子网
- en: 'Follow these steps to create the aforementioned private subnets:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建前述私有子网：
- en: While still in the VPC console, click on the **Subnets** link from the left-hand
    menu.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VPC控制台中，点击左侧菜单中的**子网**链接。
- en: In the **Create subnet** dialog box that appears, select **ProductionVPC** from
    the **VPC ID** drop-down list.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的**创建子网**对话框中，从**VPC ID**下拉列表中选择**ProductionVPC**。
- en: Next, in the `Private Subnet One` in the **Subnet name** text box.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**子网名称**文本框中输入`Private Subnet One`。
- en: Under **Availability Zone**, select **us-east-1a** – this is the same zone where
    we placed **Public Subnet One**. This way, any frontend web resources in **Public
    Subnet One** can access any backend resources in **Private Subnet One**, allowing
    those resources to be in the same Availability Zone.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**可用区**下，选择**us-east-1a**——这是我们放置**公共子网一**的相同可用区。这样，**公共子网一**中的任何前端Web资源都可以访问**私有子网一**中的任何后端资源，确保这些资源位于相同的可用区内。
- en: For the IPv4 CIDR block, provide the IP CIDR range of `10.0.3.0/24` – this CIDR
    block does not conflict with any of the other subnets and is still a subset range
    of the main VPC's IP range.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于IPv4 CIDR块，提供`10.0.3.0/24`的IP CIDR范围——此CIDR块与其他子网不冲突，并且仍然是主VPC IP范围的子集。
- en: 'Finally, click the **Create subnet** button at the bottom of the page, as per
    the following screenshot:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击页面底部的**创建子网**按钮，如下图所示：
- en: '![Figure 7.18 – Private Subnet One settings'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.18 – 私有子网一设置'
- en: '](img/B17124_07_18.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_18.jpg)'
- en: Figure 7.18 – Private Subnet One settings
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.18 – 私有子网一设置
- en: 'You will receive a success message. Next, we will perform the same steps we
    did previously, but this time to create the second private subnet in **us-east-1b**:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 你会收到成功消息。接下来，我们将执行与之前相同的步骤，但这次是在**us-east-1b**创建第二个私有子网：
- en: Click **Create subnet**.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建子网**。
- en: Select **ProductionVPC** from the VPC ID drop-down list.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从VPC ID下拉列表中选择**ProductionVPC**。
- en: For the subnet name, type in `Private Subnet Two`.
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在子网名称处，输入`Private Subnet Two`。
- en: Under **Availability Zone**, select **us-east-1b**.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**可用区**下，选择**us-east-1b**。
- en: For the IPv4 CIDR block, type in `10.0.4.0/24` as the CIDR block range for this
    subnet.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于IPv4 CIDR块，输入`10.0.4.0/24`作为此子网的CIDR块范围。
- en: Click the **Create subnet** button at the bottom of the page.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**创建子网**按钮。
- en: At this point, you have a VPC configured with two public subnets and two private
    subnets.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你已经配置了一个具有两个公共子网和两个私有子网的VPC。
- en: Note
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You do not need to associate the two private subnets to the main route tables
    manually, as this is done for you by default.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要手动将两个私有子网与主路由表关联，因为这是默认自动完成的。
- en: 'To check this, perform the following steps:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查这一点，请执行以下步骤：
- en: Select **Route Tables** from the left-hand menu.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**路由表**。
- en: From the top pane, click on the checkbox next to the main route table.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部窗格中，点击主路由表旁边的复选框。
- en: 'In the bottom pane, you will notice that both private subnets are associated
    with the main route table (not explicitly) but by default instead, as shown in
    the following screenshot:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在底部窗格中，你会注意到两个私有子网都与主路由表关联（不是显式关联，而是默认情况下关联），如下图所示：
- en: '![Figure 7.19 – Private subnet route table associations'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.19 – 私有子网路由表关联'
- en: '](img/B17124_07_19.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_19.jpg)'
- en: Figure 7.19 – Private subnet route table associations
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.19 – 私有子网路由表关联
- en: In this exercise, we expanded our **ProductionVPC** to include two public subnets
    and two private subnets across two Availability Zones. This will enable us to
    deploy duplicate workloads in each Availability Zone to design for high availability.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们扩展了我们的**ProductionVPC**，包括了两个公共子网和两个私有子网，分布在两个可用区内。这将使我们能够在每个可用区中部署重复的工作负载，以设计高可用性。
- en: In the next exercise, we will deploy our first custom security group in **ProductionVPC**.
    This security group will be used to define what types of traffic we will allow
    inbound to an EC2 instance that will be deployed in the third exercise.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步练习中，我们将部署我们的第一个自定义安全组到**ProductionVPC**。这个安全组将用于定义我们允许进入EC2实例的流量类型，该实例将在第三步练习中部署。
- en: Exercise 7.2 – Creating a Bastion Host security group
  id: totrans-327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 7.2 – 创建堡垒主机安全组
- en: 'In this exercise, we will create a custom security group that will be used
    by an EC2 instance. This will act as a Bastion Host, as previously discussed in
    this chapter. Let''s get started:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将创建一个自定义安全组，将用于EC2实例。这个安全组将作为堡垒主机，如本章之前所讨论。我们开始吧：
- en: Log in to your AWS account and navigate to the VPC console. Ensure you are in
    the **us-east-1** Region. From the left-hand menu, confirm that **ProductionVPC**
    is available in this Region.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的AWS账户并进入VPC控制台。确保你在**us-east-1**区域。通过左侧菜单，确认**ProductionVPC**在该区域中可用。
- en: Select the **Security Groups** link from the left-hand menu, which is located
    under the **Security** category, as shown in the following screenshot:![Figure
    7.20 – Selecting Security Groups from the VPC console
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**安全组**链接，它位于**安全**类别下，如下图所示：![图 7.20 – 从VPC控制台选择安全组
- en: '](img/B17124_07_20.jpg)'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_20.jpg)'
- en: Figure 7.20 – Selecting Security Groups from the VPC console
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.20 – 从VPC控制台选择安全组
- en: Click on the **Create security group** button on the top right-hand corner of
    the screen.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右上角的**创建安全组**按钮。
- en: Under `BastionHost-SG`.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`BastionHost-SG`下。
- en: Next, provide an appropriate description, such as `Allow Remote Access to Bastion
    Host Server`.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，提供一个适当的描述，例如`允许远程访问堡垒主机服务器`。
- en: Under **VPC**, make sure your select **ProductionVPC** from the drop-down list.
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**VPC**下，确保从下拉列表中选择**ProductionVPC**。
- en: Next, under the **Inbound rules** section, click the **Add rule** button.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**入站规则**部分，点击**添加规则**按钮。
- en: Select `3389`.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`3389`。
- en: Under the `0.0.0.0/0`. This IP block represents all external networks, including
    the internet.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`0.0.0.0/0`下。这个IP块代表所有外部网络，包括互联网。
- en: Next, click on the **Create security group** button on the bottom right-hand
    corner of the page.
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击页面右下角的**创建安全组**按钮。
- en: You will receive a successful creation message to confirm that the security
    group has now been created. We will use this security group in the next exercise
    to ensure that we can connect to our EC2 instance over the `3389`.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 你将收到成功创建的消息，以确认安全组已创建完成。我们将在下一步练习中使用该安全组，确保我们可以通过`3389`端口连接到我们的EC2实例。
- en: Exercise 7.3 – Launching an EC2 instance
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 7.3 – 启动EC2实例
- en: 'In this exercise, we will launch a Windows-based EC2 instance in **Public Subnet
    One** of our **ProductionVPC**. We will use this EC2 instance as a Bastion Host,
    allowing us to configure other EC2 instances in the VPC:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将在**ProductionVPC**的**公共子网一**中启动一个基于Windows的EC2实例。我们将使用这个EC2实例作为堡垒主机，使我们能够配置VPC中的其他EC2实例：
- en: Log in to your AWS account and from the **Services** drop-down list, select
    **EC2** under the **Compute** category, as shown in the following screenshot:![Figure
    7.21 – Accessing the EC2 console
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的AWS账户，并在**服务**下拉菜单中选择**EC2**，位于**计算**类别下，如下图所示：![图 7.21 – 访问EC2控制台
- en: '](img/B17124_07_21.jpg)'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_21.jpg)'
- en: Figure 7.21 – Accessing the EC2 console
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.21 – 访问EC2控制台
- en: From the **Regions** list in the top right-hand corner, ensure that you are
    in the **US East N.Virgina (us-east-1)** Region.
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从右上角的**区域**列表中，确保你选择了**美国东部北弗吉尼亚 (us-east-1)** 区域。
- en: On the `0` Instances in the running state.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`0`实例处于运行状态。
- en: Click on the **Instances (running)** link, as shown in the following screenshot.
    This will bring up the **Instances** console:![Figure 7.22 – EC2 dashboard
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**实例（运行中）**链接，如下图所示。这将打开**实例**控制台：![图 7.22 – EC2仪表盘
- en: '](img/B17124_07_22.jpg)'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_22.jpg)'
- en: Figure 7.22 – EC2 dashboard
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.22 – EC2仪表盘
- en: From the **Instances** console, select the **Launch instances** button from
    the top right-hand corner of the screen.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **实例** 控制台中，选择屏幕右上角的 **启动实例** 按钮。
- en: 'You will now be presented with **Step 1: Choose an Amazon Machine Image (AMI)**.
    From the list of available AMIs, select **Microsoft Windows Server 2016 Base -
    ami-05ce3abcaf51f14b2**.'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将显示 **第 1 步：选择 Amazon Machine Image (AMI)**。从可用 AMI 列表中，选择 **Microsoft Windows
    Server 2016 Base - ami-05ce3abcaf51f14b2**。
- en: 'In **Step 2: Choose an Instance Type**, ensure that the checkbox next to the
    **t2.micro** instance is selected. This instance type is available as part of
    your Free Tier offering.'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **第 2 步：选择实例类型** 中，请确保选择 **t2.micro** 实例旁边的复选框。此实例类型作为您的免费套餐提供。
- en: 'Next, click the **Next: Configure Instance Details** button in the bottom right-hand
    corner of the screen.'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，单击屏幕右下角的 **下一步：配置实例详细信息** 按钮。
- en: 'In **Step 3: Configure Instance Details**, choose the following options:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **第 3 步：配置实例详细信息** 中，选择以下选项：
- en: For **Network**, select **ProductionVPC**.
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 **网络**，选择 **ProductionVPC**。
- en: For **Subnet**, select the **Public Subnet One** subnet.
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 **子网**，请选择 **公共子网一** 子网。
- en: For **Auto-assign Public IP**, select **Enable**.
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 **自动分配公共 IP**，选择 **启用**。
- en: 'Leave all the remaining settings as their default values and click the **Next:
    Add Storage** button in the bottom right-hand corner of the screen.'
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有剩余设置保留为它们的默认值，并单击屏幕右下角的 **下一步：添加存储** 按钮。
- en: 'In **Step 4: Add Storage**, accept the default root volume size and click on
    the **Next: Add Tags** button in the bottom right-hand corner of the screen.'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **第 4 步：添加存储** 中，接受默认的根卷大小，并单击屏幕右下角的 **下一步：添加标签** 按钮。
- en: 'In `Name`, and for `Windows-BastionSrv`:![Figure 7.23 – Step 5: Add Tags'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `名称` 中，以及 `Windows-BastionSrv`：![图 7.23 – 第 5 步：添加标签
- en: '](img/B17124_07_23.jpg)'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_23.jpg)'
- en: 'Figure 7.23 – Step 5: Add Tags'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.23 – 第 5 步：添加标签
- en: 'Next, click the **Next: Configure Security Group** button in the bottom right-hand
    corner of the screen.'
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，单击屏幕右下角的 **下一步：配置安全组** 按钮。
- en: 'In **Step 6: Configure Security Group**, click on the **Select an existing security
    group** option under the **Assign a security group** heading.'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **第 6 步：配置安全组** 中，单击 **在“分配安全组”标题下选择一个现有安全组** 选项。
- en: Next, from the list in the **Security Group ID** column, select the security
    group ID that corresponds to the newly created **BastionHost-SG**, which we set
    up in the previous exercise.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 **安全组 ID** 列中的列表中，选择与先前练习中设置的新 **BastionHost-SG** 相对应的安全组 ID。
- en: Finally, click on the **Review and Launch** button in the bottom right-hand
    corner of the screen.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，单击屏幕右下角的 **审查并启动** 按钮。
- en: 'You will then be presented with **Step 7: Review Instance Launch**. Review
    the settings you have defined and then click on the **Launch** button in the bottom
    right-hand corner of the screen.'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后将显示 **第 7 步：审查实例启动**。审查您定义的设置，然后单击屏幕右下角的 **启动** 按钮。
- en: At this point, you will be presented with another dialog box, requesting you
    to either select an existing EC2 key pair or create a new key pair.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，您将看到另一个对话框，要求您选择现有的 EC2 密钥对或创建新的密钥对。
- en: '**Key pairs** are cryptographically encrypted public/private keys that are
    used to encrypt the credentials required to authenticate against the EC2 instance
    operating system so that you can remotely access them.'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '**密钥对** 是用于加密用于对抗 EC2 实例操作系统进行身份验证所需凭据的加密公钥/私钥。这样，您可以远程访问它们。'
- en: 'For Microsoft Windows-based EC2 instances, the public key of the keys pair
    is used to encrypt the *Administrator* password. You then use the private key
    to decrypt the password to remotely access the Windows machine. For Linux-based
    EC2 instances, the private key can be used to establish a **Secure Socket Shell**
    (**SSH**) connection. Establishing SSH connections to your Linux-based EC2 instance
    allows you to work on the server remotely using the Linux shell interface. Let''s
    take a look:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于 Microsoft Windows 的 EC2 实例，密钥对的公钥用于加密 *管理员* 密码。然后，您可以使用私钥解密密码，以便远程访问 Windows
    机器。对于基于 Linux 的 EC2 实例，私钥可用于建立 **安全套接字 Shell** (**SSH**) 连接。建立 SSH 连接到您的基于 Linux
    的 EC2 实例，允许您使用 Linux shell 界面远程操作服务器。让我们来看看：
- en: In the **Select an existing key pair or create a new key pair** dialog box,
    select the option to **Create a new key pair**, from the drop-down list.
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **选择现有密钥对或创建新密钥对** 对话框中，从下拉列表中选择 **创建新密钥对** 选项。
- en: Next, provide a key pair name. For example, I am naming my key `USEC2Keys`.
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，提供一个密钥对名称。例如，我将我的密钥命名为 `USEC2Keys`。
- en: Click on the `.pem` format into your load `Downloads` folder. Make sure that
    you copy and save the keys in a safe location or on the desktop for easy access.
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `.pem` 格式的文件并保存到你的 `Downloads` 文件夹中。确保将密钥复制并保存在安全的地方，或保存到桌面以便于访问。
- en: Next, click on the **Launch Instances** button to launch your EC2 instance.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击 **Launch Instances** 按钮启动你的 EC2 实例。
- en: On the **Launch Status** page, click on the **View Instances** button at the
    bottom right-hand corner of the page.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Launch Status** 页面上，点击页面右下角的 **View Instances** 按钮。
- en: 'At this point, you will be redirected to the instances console and will be
    able to see your EC2 instance, as per the following screenshot:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你将被重定向到实例控制台，并可以看到你的 EC2 实例，如下图所示：
- en: '![Figure 7.24 – Successfully launched the Windows BastionSRV EC2 instance'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.24 – 成功启动了 Windows BastionSRV EC2 实例'
- en: '](img/B17124_07_24.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_24.jpg)'
- en: Figure 7.24 – Successfully launched the Windows BastionSRV EC2 instance
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.24 – 成功启动了 Windows BastionSRV EC2 实例
- en: It will take a few minutes for the server to fully launch and become accessible.
    Look out for the **Status Check** column, as per the preceding screenshot, and
    ensure that AWS has completed all its checks; you will receive a **2/2 checks
    passed** message in the **Status check** column.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器完全启动并可访问需要几分钟的时间。根据之前的截图，查看 **Status Check** 列，确保 AWS 完成了所有检查；你会在 **Status
    check** 列看到 **2/2 checks passed** 信息。
- en: You can now remotely connect to the Windows Server using the Microsoft Remote
    Desktop client. If you are performing these labs from a laptop or desktop using
    Microsoft Windows, then the `Remote Desktop Connection` app. If you are performing
    these labs on a macOS-based computer, you will need to download the Microsoft
    Remote Desktop client from the Apple Play Store.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用 Microsoft 远程桌面客户端远程连接到 Windows 服务器。如果你在使用 Microsoft Windows 的笔记本电脑或台式机进行这些实验，那么就使用
    `远程桌面连接` 应用程序。如果你在 macOS 计算机上进行这些实验，你需要从 Apple Play Store 下载 Microsoft 远程桌面客户端。
- en: 'To connect to your new Windows Bastion Host server, follow these steps:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到你的新 Windows Bastion Host 服务器，请按以下步骤操作：
- en: From the EC2 instances console, click on the checkbox next to the EC2 instance
    you have just launched.
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 EC2 实例控制台中，点击刚刚启动的 EC2 实例旁边的复选框。
- en: In the bottom pane, make a note of the EC2 instance's public IP address.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在底部面板中，记下 EC2 实例的公网 IP 地址。
- en: Next, with the EC2 instance still selected, click on the **Actions** menu from
    the top right-hand corner of the screen, and then on the **Security** sub-menu.
    From here, select the **Get Windows password** link, as per the following screenshot:![Figure
    7.25 – The Get Windows password option for your EC2 instance
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在仍然选择 EC2 实例的情况下，点击屏幕右上角的 **Actions** 菜单，然后点击 **Security** 子菜单。在这里，选择 **Get
    Windows password** 链接，如下图所示：![图 7.25 – 获取 EC2 实例的 Windows 密码选项
- en: '](img/B17124_07_25.jpg)'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_25.jpg)'
- en: Figure 7.25 – The Get Windows password option for your EC2 instance
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.25 – 获取 EC2 实例的 Windows 密码选项
- en: You will be presented with the `Downloads` folder.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到 `Downloads` 文件夹。
- en: Upon selecting the key, you will note that the text box below the **Browse**
    button gets populated with the encrypted key, as per the following screenshot:![Figure
    7.26 – Decrypting your key pairs
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择密钥后，你会注意到 **Browse** 按钮下方的文本框会自动填充加密的密钥，如下图所示：![图 7.26 – 解密你的密钥对
- en: '](img/B17124_07_26.jpg)'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_26.jpg)'
- en: Figure 7.26 – Decrypting your key pairs
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.26 – 解密你的密钥对
- en: Click on the **Decrypt Password** button in the bottom right-hand corner of
    the screen; you will be provided with the Windows Administrator password. Make
    a note of this password.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右下角的 **Decrypt Password** 按钮；你将获得 Windows 管理员密码。记下这个密码。
- en: Next, launch your **Remote Desktop Connection** application.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，启动你的 **远程桌面连接** 应用程序。
- en: In the **Remote Desktop Connection** app, type in the public IP address of your
    Windows Bastion Server in the text box, next to the **Computer:** field, as per
    the following screenshot:![Figure 7.27 – Remote Desktop Connection client
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **远程桌面连接** 应用程序中，在文本框内输入你 Windows Bastion 服务器的公网 IP 地址，位于 **Computer:** 字段旁边，如下图所示：![图
    7.27 – 远程桌面连接客户端
- en: '](img/B17124_07_27.jpg)'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_27.jpg)'
- en: Figure 7.27 – Remote Desktop Connection client
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.27 – 远程桌面连接客户端
- en: Click the **Connect** button.
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Connect** 按钮。
- en: You will be prompted to provide your security credentials in the Windows Security
    dialog box, as per the following screenshot:![Figure 7.28 – Windows Security –
    Enter your credentials
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被提示在Windows安全对话框中提供您的安全凭证，如下图所示：![图 7.28 – Windows 安全 – 输入您的凭证
- en: '](img/B17124_07_28.jpg)'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_28.jpg)'
- en: Figure 7.28 – Windows Security – Enter your credentials
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.28 – Windows 安全 – 输入您的凭证
- en: For `Administrator`.
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 `管理员`。
- en: For **Password**, type in the password you decrypted earlier, and then click
    **OK**.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密码**框中，输入您之前解密的密码，然后点击**确定**。
- en: If the password has been correctly typed in, you will be prompted with a **Remote
    Desktop Connection** security prompt, informing you that the connection to the
    remote computer cannot be authenticated due to its security certificate. This
    warning message can be ignored and you can proceed to log in to the server, as
    per the following screenshot:![Figure 7.29 – RDP certificate warning dialog box
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果密码正确输入，您将看到一个**远程桌面连接**安全提示，告知您由于其安全证书，无法验证与远程计算机的连接。此警告信息可以忽略，您可以继续登录服务器，如下图所示：![图
    7.29 – RDP 证书警告对话框
- en: '](img/B17124_07_29.jpg)'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_29.jpg)'
- en: Figure 7.29 – RDP certificate warning dialog box
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.29 – RDP 证书警告对话框
- en: Click on the **Yes** button to proceed with the remote connection.
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**是**按钮以继续进行远程连接。
- en: 'The Remote Desktop client should now connect you to the remote Windows Server,
    as per the following screenshot:'
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 远程桌面客户端现在应该能连接到远程 Windows 服务器，如下图所示：
- en: '![Figure 7.30 – Remote Bastion Host Server'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.30 – 远程堡垒主机服务器'
- en: '](img/B17124_07_30.jpg)'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_07_30.jpg)'
- en: Figure 7.30 – Remote Bastion Host Server
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.30 – 远程堡垒主机服务器
- en: In this exercise, you were able to launch a new EC2 instance that will act as
    our Bastion Host server. You will be able to remotely connect to the Windows EC2
    instance using the RPD client and can now perform any operation, as required,
    on this server.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您成功启动了一个新的 EC2 实例，作为我们的堡垒主机服务器。您可以使用 RDP 客户端远程连接到 Windows EC2 实例，并根据需要在该服务器上执行任何操作。
- en: Important Note
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: As part of ending this exercise, you should terminate your EC2 instances to
    ensure you do not go over the billing alarm threshold you configured in [*Chapter
    4*](B17124_04_Final_SK_ePub.xhtml#_idTextAnchor068), *Identity and Access Management*.
    To terminate your EC2 instances, from the EC2 dashboard, click on **Instances**
    from the left-hand menu. Next, select the checkbox next to the **Windows BastionSrv**
    EC2 instance you launched. Then, from the top right-hand menu, click on the **Instance
    state** drop-down menu and select **Terminate instance**. You will be prompted
    to confirm that you wish to terminate your EC2 instances. Go ahead and click the
    **Terminate** button.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本练习的结束步骤，您应终止您的 EC2 实例，以确保不会超过您在[*第 4 章*](B17124_04_Final_SK_ePub.xhtml#_idTextAnchor068)中配置的计费警报阈值，*身份与访问管理*。要终止
    EC2 实例，请在 EC2 仪表板中，从左侧菜单中点击**实例**。接着，选择您启动的**Windows BastionSrv** EC2 实例旁边的复选框。然后，在右上方的菜单中，点击**实例状态**下拉菜单并选择**终止实例**。系统将提示您确认是否终止
    EC2 实例。请点击**终止**按钮以继续。
- en: In the next exercise, we will demonstrate the Amazon ECS service while focusing
    on the Fargate launch type with a simple example.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个练习中，我们将演示亚马逊 ECS 服务，重点介绍使用简单示例的 Fargate 启动类型。
- en: Exercise 7.4 – Launching an application on Amazon Fargate
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 7.4 – 在亚马逊 Fargate 上启动应用程序
- en: 'In this exercise, you will launch a task on ECS, which is essentially a Docker
    container:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您将启动 ECS 上的任务，这本质上是一个 Docker 容器：
- en: Log in to your AWS account as `ECS`.
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以 `ECS` 身份登录到您的 AWS 账户。
- en: From the search results, select **Elastic Container Service**.
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从搜索结果中，选择**弹性容器服务**。
- en: You will be presented with the ECS splash screen, as per the following screenshot:![Figure
    7.31 – Amazon ECS
  id: totrans-421
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统将显示 ECS 欢迎屏幕，如下图所示：![图 7.31 – 亚马逊 ECS
- en: '](img/B17124_07_31.jpg)'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_31.jpg)'
- en: Figure 7.31 – Amazon ECS
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.31 – 亚马逊 ECS
- en: From the left-hand menu, select **Clusters**.
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中，选择**集群**。
- en: In the right-hand pane, click the **Create cluster** button.
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧面板中，点击**创建集群**按钮。
- en: You will be prompted to select the cluster template. You will be deploying a
    Fargate cluster, so go ahead and select the **Network only** option design for
    use with either AWS Fargate or an external instance capacity.
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统将提示您选择集群模板。由于您将部署一个 Fargate 集群，因此请选择设计为与 AWS Fargate 或外部实例容量一起使用的**仅网络**选项。
- en: Click the **Next step** button at the bottom of the page.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**下一步**按钮。
- en: On the next screen, name your cluster `MyCluster`.
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个页面中，将您的集群命名为 `MyCluster`。
- en: Next, click the **Create** button at the bottom of the page.
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击页面底部的**创建**按钮。
- en: You will see a notification once the cluster has been created. Click the **View
    Cluster** button.
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集群创建完成后，您将看到一条通知。点击**查看集群**按钮。
- en: Next, from the left-hand menu, click on **Task Definition**.
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从左侧菜单中点击**任务定义**。
- en: In the right-hand pane, click the **Create new Task Definition** button.
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧面板中，点击**创建新任务定义**按钮。
- en: You will then be prompted to select the launch type's compatibility, as per
    the following screenshot:![Figure 7.32 – ECS task definition
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您将被提示选择启动类型的兼容性，如下图所示：![图 7.32 – ECS 任务定义
- en: '](img/B17124_07_32.jpg)'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_32.jpg)'
- en: Figure 7.32 – ECS task definition
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.32 – ECS 任务定义
- en: Select the Fargate type and click the **Next step** button at the bottom of
    the page.
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Fargate 类型，并点击页面底部的**下一步**按钮。
- en: Provide a name for your task definition; for example, `fargate-task`.
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的任务定义提供一个名称，例如 `fargate-task`。
- en: Scroll further down and under **Task size**, set **Task memory (GB)** to **1GB**.
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动，并在**任务大小**下，将**任务内存（GB）**设置为**1GB**。
- en: Next, set **Task CPU (vCPU)** to **0.5 vCPU**.
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将**任务 CPU（vCPU）**设置为**0.5 vCPU**。
- en: Next, under **Container Definitions**, click the **Add container** button.
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**容器定义**下，点击**添加容器**按钮。
- en: You will be selecting an existing container here, so in the `nginx`.
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将在此选择一个现有的容器，因此选择`nginx`。
- en: Similarly, for `nginx`, as per the following screenshot:![Figure 7.33 – Fargate
    launch container
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，对于 `nginx`，如以下截图所示：![图 7.33 – Fargate 启动容器
- en: '](img/B17124_07_33.jpg)'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_33.jpg)'
- en: Figure 7.33 – Fargate launch container
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.33 – Fargate 启动容器
- en: Next, for `80` for the **Container** port.
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，为**容器**端口设置`80`。
- en: Scroll toward the bottom and click the **Add** button. This will take you back
    to the **Create new Task Definition** page. Scroll toward the bottom and click
    on the **Create** button.
  id: totrans-446
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并点击**添加**按钮。这将带您返回到**创建新任务定义**页面。继续向下滚动并点击**创建**按钮。
- en: After a few seconds, you should find that your task definition has been created.
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几秒钟后，您应该会看到您的任务定义已经创建。
- en: Click on the **View task definition** button. This will take you back to the
    ECS dashboard.
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**查看任务定义**按钮。这将带您返回到 ECS 仪表板。
- en: Next, click on the **Clusters** link from the left-hand menu. You will see that
    your **MyCluster** cluster is now available. Click on the **MyCluster** link.
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击左侧菜单中的**集群**链接。您将看到您的**MyCluster**集群现在可用。点击**MyCluster**链接。
- en: Next, click on the **Task** tab.
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**任务**标签。
- en: Click the **Run new Task** button.
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**运行新任务**按钮。
- en: On the **Run Task** page, ensure that **Launch type** is set to **Fargate**.
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**运行任务**页面中，确保将**启动类型**设置为**Fargate**。
- en: You will find that the task definition has been pre-populated with your task.
    If not, select it from the drop-down arrow.
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会发现任务定义已自动填充您的任务。如果没有，请从下拉菜单中选择它。
- en: For `1` is set as we will only run one task.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 `1`，因为我们将只运行一个任务。
- en: Under **VPC and security groups**, select **ProductionVPC**.
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**VPC 和安全组**下，选择**ProductionVPC**。
- en: For **Subnets**, select **Public Subnet One**.
  id: totrans-456
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**子网**，选择**公共子网一**。
- en: For **Security groups**, click the **Edit** button next to the provided security
    group name.
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**安全组**，点击提供的安全组名称旁边的**编辑**按钮。
- en: You will be prompted to create a new security group, as per the following screenshot:![Figure
    7.34 – Fargate task security group
  id: totrans-458
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被提示创建一个新的安全组，如下图所示：![图 7.34 – Fargate 任务安全组
- en: '](img/B17124_07_34.jpg)'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_34.jpg)'
- en: Figure 7.34 – Fargate task security group
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.34 – Fargate 任务安全组
- en: Accept the default to create an inbound rule that allows port `80` from the
    internet. Click the **Save** button at the bottom of the page.
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受默认设置以创建一个允许来自互联网的 `80` 端口的入站规则。点击页面底部的**保存**按钮。
- en: Next, ensure that **Auto-assign public IP** is set to **ENABLED**.
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，确保将**自动分配公共 IP**设置为**启用**。
- en: Click the **Run Task** button at the bottom of the page.
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**运行任务**按钮。
- en: You will be taken back to the ECS dashboard.
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被带回 ECS 仪表板。
- en: Within a few seconds, you should find that your task is now in the **RUNNING**
    status, as per the following screenshot:![Figure 7.35 – Fargate running task
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几秒钟后，您应该会发现任务的状态变为**正在运行**，如下图所示：![图 7.35 – Fargate 运行中的任务
- en: '](img/B17124_07_35.jpg)'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_35.jpg)'
- en: Figure 7.35 – Fargate running task
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.35 – Fargate 运行中的任务
- en: Next, under **Task**, click on the task ID link. This will bring up the **Details**
    page of the task.
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**任务**下，点击任务 ID 链接。这将打开任务的**详细信息**页面。
- en: Make a note of the **Public IP** address and copy and paste it into a new browser
    tab.
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下**公共 IP** 地址，并将其复制粘贴到新的浏览器标签页中。
- en: You should then find that you can connect to the `nginx` web page, as per the
    following screenshot:![Figure 7.36 – nginx application running on Fargate
  id: totrans-470
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该会发现，你可以连接到`nginx`网页，如下图所示：![图 7.36 – 在 Fargate 上运行的 nginx 应用
- en: '](img/B17124_07_36.jpg)'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_07_36.jpg)'
- en: Figure 7.36 – nginx application running on Fargate
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.36 – 在 Fargate 上运行的 nginx 应用
- en: You have just deployed your first Fargate task!
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你刚刚部署了你的第一个 Fargate 任务！
- en: To clean up, go back to your ECS dashboard. From the left-hand menu, click the
    **Clusters** link.
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了清理，返回到 ECS 仪表板。从左侧菜单中，点击**集群**链接。
- en: In the right-hand pane, click the **MyCluster** link.
  id: totrans-475
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧窗格中，点击**MyCluster**链接。
- en: Next, from the **Task** tab, select the checkbox next to your task.
  id: totrans-476
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**任务**选项卡中，选择任务旁边的复选框。
- en: Finally, click on the **Stop** button. You will be prompted to confirm your
    action. Click the **Stop** button in the dialog box that appears.
  id: totrans-477
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**停止**按钮。系统会提示你确认操作。点击出现的对话框中的**停止**按钮。
- en: This will stop your task. You will also receive a notification, stating that
    the task was successfully stopped. You do not need to worry about the cluster
    as you only pay for the tasks on Fargate.
  id: totrans-478
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将停止你的任务。你还会收到一个通知，说明任务已成功停止。你无需担心集群，因为你只需为 Fargate 上的任务付费。
- en: In this exercise, we demonstrated how you can launch a simple nginx Docker container
    on ECS using the Fargate launch type. Next, we will summarize this chapter.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们展示了如何使用 Fargate 启动类型，在 ECS 上启动一个简单的 nginx Docker 容器。接下来，我们将总结本章内容。
- en: Summary
  id: totrans-480
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at a wide range of AWS compute solutions, starting
    with their flagship solution, Amazon **EC2**. We discussed AMIs, which are machine
    images that contain the base operating system, any applications and the state
    of patches, and updates that are used to launch your EC2 instance as a fully-fledged
    server. AMIs are made available via the Quick Start AMIs, Community, and Marketplace,
    and you can also create your own AMIs based on your corporate requirements.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了广泛的 AWS 计算解决方案，从他们的旗舰解决方案，Amazon **EC2** 开始。我们讨论了 AMI，它是包含基础操作系统、任何应用程序以及用于启动你的
    EC2 实例的补丁和更新状态的机器映像，作为一个完整的服务器。AMI 通过快速启动 AMI、社区和市场提供，你也可以根据企业需求创建自己的 AMI。
- en: We examine the different EC2 instance types and families and how an instance
    type is effectively a description of associated hardware and software specifications
    that your EC2 instance offers. We also looked at storage options for your EC2
    instance, with EBS, EFS, and FSx as possible solutions.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了不同的 EC2 实例类型和家族，以及如何通过实例类型有效描述你的 EC2 实例所提供的硬件和软件规格。我们还研究了 EC2 实例的存储选项，EBS、EFS
    和 FSx 都是可能的解决方案。
- en: Then, you learned how to choose a particular EC2 Pricing Option, depending on
    your application needs, and identify opportunities for cost-effective deployment
    by combining the On-Demand, Reserved, and Spot Instance options.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你学习了如何根据应用需求选择特定的 EC2 定价选项，并通过结合按需、预留和 Spot 实例选项，找到具有成本效益的部署机会。
- en: In the next chapter, we will look at databases on AWS. Almost every application
    requires some form of database to host structured data. Amazon offers both relational
    and non-relational databases to help design modern web and mobile applications.
    Amazon also offers additional database solutions for specific niches such as social
    networking platforms, data warehousing solutions, and databases designed for hosting
    highly sensitive data.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将研究 AWS 上的数据库。几乎每个应用都需要某种形式的数据库来托管结构化数据。亚马逊提供了关系型和非关系型数据库，帮助设计现代的 web
    和移动应用。亚马逊还为特定细分领域提供额外的数据库解决方案，如社交网络平台、数据仓库解决方案以及用于托管高度敏感数据的数据库。
- en: Questions
  id: totrans-485
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which AWS EC2 pricing option can help you reduce costs by allowing you to use
    your existing server-bound software licenses?
  id: totrans-486
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 AWS EC2 定价选项可以通过允许你使用现有的服务器绑定软件许可证来帮助你降低成本？
- en: On-Demand
  id: totrans-487
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按需
- en: Reserved
  id: totrans-488
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预留
- en: Spot
  id: totrans-489
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Spot
- en: Dedicated Hosts
  id: totrans-490
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专用主机
- en: Which AWS EC2 pricing option enables you to take advantage of unused EC2 capacity
    in the AWS cloud and can offer up to a 90% discount compared to On-Demand prices?
  id: totrans-491
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 AWS EC2 定价选项使你能够利用 AWS 云中未使用的 EC2 容量，并可以提供比按需价格低至 90% 的折扣？
- en: Spot Instances
  id: totrans-492
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Spot 实例
- en: Reserved Instances
  id: totrans-493
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预留实例
- en: On-Demand Instance
  id: totrans-494
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按需实例
- en: Dedicated Hosts
  id: totrans-495
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专用主机
- en: Which of the following is true with regards to the benefits of purchasing a
    Convertible EC2 Reserved Instance? (Choose 2 answers)
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项关于购买可转换 EC2 预留实例的好处是正确的？（选择 2 个答案）
- en: You can exchange a Convertible Reserved Instance for a Convertible Reserved
    Instance in a different Region.
  id: totrans-497
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将一个可转换预留实例交换为不同区域的可转换预留实例。
- en: You can exchange one or more Convertible Reserved Instances at a time for both
    Convertible and Standard Reserved Instances.
  id: totrans-498
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以同时交换一个或多个可转换预留实例为可转换和标准预留实例。
- en: To benefit from better pricing, you can exchange a No Upfront Convertible Reserved
    Instance for an All Upfront or Partial Upfront Convertible Reserved Instance.
  id: totrans-499
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了获得更好的定价，你可以将一个无预付费的可转换预留实例交换为一个全预付费或部分预付费的可转换预留实例。
- en: You can exchange All Upfront and Partial Upfront Convertible Reserved Instances
    for No Upfront Convertible Reserved Instances.
  id: totrans-500
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将全预付费和部分预付费的可转换预留实例交换为无预付费的可转换预留实例。
- en: You can exchange one or more Convertible Reserved Instances for another Convertible
    Reserved Instance with a different configuration, including instance family, operating
    system, and tenancy.
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将一个或多个可转换预留实例交换为不同配置的另一个可转换预留实例，包括实例家族、操作系统和租用模式。
- en: Which feature of the AWS EC2 service helps prevent accidentally terminating
    an EC2 instance by preventing the user from issuing a termination command either
    from the console or CLI?
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS EC2 服务的哪个功能可以通过阻止用户从控制台或 CLI 发出终止命令来帮助防止意外终止 EC2 实例？
- en: Enable "termination protection"
  id: totrans-503
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用“终止保护”
- en: Enable "termination protect"
  id: totrans-504
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用“终止保护”
- en: Enable "prevent termination"
  id: totrans-505
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用“防止终止”
- en: Enable "protect EC2"
  id: totrans-506
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用“保护 EC2”
- en: Which storage solution enables you to share a common filesystem across multiple
    Linux-based EC2 instances that can be used to support applications that require
    access to data with very low latency connectivity?
  id: totrans-507
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种存储解决方案可以让你在多个基于 Linux 的 EC2 实例之间共享一个公共文件系统，用于支持那些需要低延迟连接访问数据的应用程序？
- en: EFS
  id: totrans-508
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: EFS
- en: EBS
  id: totrans-509
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: EBS
- en: S3
  id: totrans-510
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: S3
- en: NTFS
  id: totrans-511
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NTFS
- en: Which type of IP address offering from AWS gives you a static, publicly routable
    address that will not change, even if you stop and restart an EC2 instance that
    it is associated with?
  id: totrans-512
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪种 AWS 提供的 IP 地址类型可以为你提供一个静态的、可公开路由的地址，即使你停止并重新启动与之关联的 EC2 实例，该地址也不会改变？
- en: Public IP address
  id: totrans-513
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公共 IP 地址
- en: Private IP address
  id: totrans-514
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 私有 IP 地址
- en: Elastic IP address
  id: totrans-515
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 弹性 IP 地址
- en: Regional IP address
  id: totrans-516
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 区域 IP 地址
- en: Which AWS service enables you to configure multiple Windows-based EC2 instances
    to share and access a common storage solution that is based on using the industry-standard
    SMB protocol and eliminate the administrative overhead of managing Windows file
    servers?
  id: totrans-517
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪项 AWS 服务可以让你配置多个基于 Windows 的 EC2 实例，使用基于行业标准 SMB 协议的共享存储解决方案，并消除管理 Windows
    文件服务器的行政开销？
- en: Amazon FSx for Windows File Server
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 FSx for Windows 文件服务器
- en: Amazon Elastic File System
  id: totrans-519
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊弹性文件系统
- en: Amazon Elastic Block Store
  id: totrans-520
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊弹性块存储
- en: Amazon DFS Volumes for Windows File Server
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 DFS 卷用于 Windows 文件服务器
- en: Which of the following types of EBS volumes can be used as boot volumes for
    your EC2 instances? (Select 2 answers)
  id: totrans-522
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪种类型的 EBS 卷可以用作 EC2 实例的启动卷？（选择 2 个答案）
- en: General Purpose SSD (gp2)
  id: totrans-523
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通用型 SSD（gp2）
- en: Provisioned IOPS SSD (io1)
  id: totrans-524
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预配置 IOPS SSD（io1）
- en: Throughput Optimized HDD (st1)
  id: totrans-525
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 吞吐优化型 HDD（st1）
- en: Cold HDD (sc1)
  id: totrans-526
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冷 HDD（sc1）
- en: FSx for Windows
  id: totrans-527
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: FSx for Windows
- en: Which of the following AWS services enables you to quickly launch a web server
    with a pre-configured WordPress installation pack, offers predictable monthly
    pricing, comes with integrated certificate management, and provides free SSL/TLS
    certificates?
  id: totrans-528
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项 AWS 服务可以让你快速启动一个预配置 WordPress 安装包的 Web 服务器，提供可预测的月度定价，集成证书管理，并提供免费的 SSL/TLS
    证书？
- en: AWS Lightsail
  id: totrans-529
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS Lightsail
- en: AWS EC2
  id: totrans-530
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS EC2
- en: AWS RDS
  id: totrans-531
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS RDS
- en: AWS Elastic Beanstalk
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS Elastic Beanstalk
- en: Which AWS service can be used to run a piece of code that can create thumbnails
    of images uploaded to one Amazon S3 bucket and copy them to another S3 bucket?
  id: totrans-533
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪项 AWS 服务可以用来运行一段代码，该代码可以创建上传到一个 Amazon S3 桶的图片的缩略图，并将它们复制到另一个 S3 桶？
- en: AWS SNS
  id: totrans-534
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS SNS
- en: AWS Lambda
  id: totrans-535
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS Lambda
- en: AWS RDS
  id: totrans-536
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS RDS
- en: AWS Snowball
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS Snowball
