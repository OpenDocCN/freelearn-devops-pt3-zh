- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Recovering from Production Failures
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从生产失败中恢复
- en: We live in an imperfect world. We first see bugs escape into our production
    environment. Then, we may find as we start moving to DevOps practices, there are
    gaps in our understanding that affect how we deliver in our production environment.
    As we get those fixed, we may encounter other problems that are outside our control.
    What can we possibly do?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生活在一个不完美的世界。我们首先看到漏洞逃入我们的生产环境。然后，我们可能会发现，当我们开始向DevOps实践过渡时，我们在理解上的一些空白会影响我们在生产环境中的交付方式。随着这些问题得到解决，我们可能会遇到其他超出我们控制范围的问题。我们能做些什么呢？
- en: 'In this chapter, we will examine mitigating and dealing with failures that
    happen in production environments. We will look at the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何减轻和处理生产环境中发生的故障。我们将研究以下主题：
- en: The costs of errors in production environments
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产环境中的错误成本
- en: Preventing as many errors as we can
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能防止错误的发生
- en: Practicing for failures using chaos engineering
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过混沌工程进行故障演练
- en: Resolving incidents in production with an incident management process
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用事件管理流程解决生产中的问题
- en: Looking at fixing production failures by rolling back or fixing forward
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过回滚或前移修复来解决生产失败
- en: Learning from failure
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从失败中学习
- en: Production failures can happen at any time in the product development process,
    from the first deployment to supporting a mature product. When these production
    failures happen, depending on the impact, they may adversely affect the value
    the customer sees and potentially ruin a business’s reputation.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 生产失败可能在产品开发过程中的任何阶段发生，从首次部署到支持成熟的产品。当这些生产失败发生时，根据其影响，可能会对客户所看到的价值产生不利影响，并有可能毁掉企业的声誉。
- en: Often, we don’t see the lessons offered by these production failures until the
    failures happen or afterward when reading about such failures happening to another
    organization (or even a competitor!).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们不会在生产失败发生之前看到这些失败带来的教训，直到失败发生后，或者通过阅读其他组织（甚至竞争对手！）发生类似失败的情况。
- en: 'We will examine a sample of such famous production failures, hoping to glean
    lessons through the benefit of hindsight. The following examples include the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将研究一些著名的生产失败案例，希望通过事后回顾来汲取经验教训。以下是一些示例：
- en: The rollout of `healthcare.gov` in 2013
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`healthcare.gov` 在2013年的上线'
- en: The Atlassian cloud outage in 2022
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2022年Atlassian云服务中断
- en: Other lessons will come from other sections in this chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其他的教训将来自本章的其他部分。
- en: healthcare.gov (2013)
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: healthcare.gov（2013年）
- en: In 2010, the *Patient Protection and Affordable Care Act* became law in the
    USA. A key part of this law, colloquially known as *Obamacare*, was the use of
    a website portal called [healthcare.gov](http://healthcare.gov) that allowed individuals
    to find and enroll in an affordable health insurance plan through multiple marketplaces.
    The portal was required to go online on October 1, 2013.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年，美国通过了《患者保护与平价医疗法案》。该法案的关键部分，通称为*奥巴马医保*，是通过一个名为[healthcare.gov](http://healthcare.gov)的网站平台，让个人通过多个市场找到并注册负担得起的健康保险计划。该平台要求在2013年10月1日上线。
- en: '[healthcare.gov](http://healthcare.gov) was released on that date and immediately
    encountered problems. The initial demand upon launch, 250,000, was five times
    what was expected and caused the website to go down in the first 2 hours. By the
    end of the first day, a total of six users had successfully submitted applications
    to enroll in a health insurance plan.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[healthcare.gov](http://healthcare.gov)在那一天上线后立刻遇到了问题。上线初期，网站需求为250,000次，是预期的五倍，导致网站在前两小时内崩溃。到第一天结束时，只有六个用户成功提交了健康保险计划的申请。'
- en: A massive troubleshooting effort ensued, eventually allowing the website to
    handle 35,000 concurrent users, and registering 1.2 million users to a health
    insurance plan before the enrollment period closed in December 2013.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一场大规模的故障排除工作随之展开，最终使得网站能够承载35,000个并发用户，并在2013年12月注册期结束前为120万用户登记了健康保险计划。
- en: 'One of a number of reports looking at the [healthcare.gov](http://healthcare.gov)
    debacle was written by Dr. Gwanhoo Lee and Justin Brumer. In the report (seen
    at [https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf](https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf)),
    they specified the challenges of such a massive undertaking, which included the
    following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 关于[healthcare.gov](http://healthcare.gov)灾难的几份报告之一由 Dr. Gwanhoo Lee 和 Justin
    Brumer 编写。在报告中（见[https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf](https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf)），他们具体指出了这样一个庞大工程的挑战，包括以下几点：
- en: A complex IT system in a limited period of time
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在有限时间内开发复杂的 IT 系统
- en: Policy problems that created uncertainty in their implementation
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政策问题导致实施过程中的不确定性
- en: High-risk contracting with limited timeframes
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高风险的合同，且时间有限
- en: A lack of leadership
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏领导力
- en: 'Lee and Brumer also identified a series of missteps from the early stages of
    the design and development of the portal that would serve to doom the project.
    These included the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Lee 和 Brumer 还指出了从门户网站设计和开发的早期阶段开始的一系列失误，这些失误最终导致了项目的失败。包括以下几点：
- en: A lack of alignment between the government policy and the technical implementation
    of the portal
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政府政策与门户网站技术实施之间缺乏对齐
- en: Inadequate requirements analysis
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不充分的需求分析
- en: Failure to identify and mitigate risks
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未能识别和减轻风险
- en: Lack of leadership
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏领导力
- en: Inattention to bad news
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对坏消息的漠视
- en: Rigid organizational culture
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 僵化的组织文化
- en: Inattention to project management fundamentals
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对项目管理基础知识的忽视
- en: Fixing healthcare.gov
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修复 healthcare.gov
- en: One of the efforts that came about after the disastrous initial launch of [healthcare.gov](http://healthcare.gov)
    was the Tech Surge, a takeover by software developers from Silicon Valley, who
    refactored major parts of the [healthcare.gov](http://healthcare.gov) website.
    The teams in the Tech Surge operated as small teams with a start-up mentality
    and were accustomed to the use of Agile practices that brought close collaboration,
    DevOps tools such as New Relic, and cloud infrastructures.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在[healthcare.gov](http://healthcare.gov)的首次灾难性发布后，其中一项举措就是 Tech Surge，即由硅谷软件开发人员接管，重构了[healthcare.gov](http://healthcare.gov)网站的主要部分。Tech
    Surge 中的团队作为小型团队以初创公司心态运作，习惯于使用敏捷方法，进行紧密合作，使用 DevOps 工具如 New Relic，并利用云基础设施。
- en: One of the offshoots from the Tech Surge was a small group of coders led by
    Loren Yu and Kalvin Wange, known as **Marketplace Lite** (**MPL**). They started
    as part of the Tech Surge and worked with existing teams at the **Centers for
    Medicare and Medicaid Services** (**CMS**), showing them new practices, such as
    collaborating over chat instead of emails, as they rewrote the parts of the website
    to log in and register for a new plan.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Tech Surge 的一个分支是由 Loren Yu 和 Kalvin Wange 领导的一小组程序员，他们被称为**Marketplace Lite**(**MPL**)。他们最初是作为
    Tech Surge 的一部分，和**医疗保险和医疗补助服务中心**(**CMS**)的现有团队一起工作，向他们展示新的工作方法，例如通过聊天而非电子邮件进行协作，同时重写网站的登录和注册新计划部分。
- en: MPL continued to work on [healthcare.gov](http://healthcare.gov) as many of
    the contracts ran out for other developers of the Tech Surge. It continued to
    work alongside CMS to improve systems testing and deliver fixes incrementally,
    as demonstrated in a **Government Accountability Office** (**GAO**) report at
    the time. The efforts were starting to bear serious fruit. One of the rewritten
    parts that MPL worked on, *App 2.0*, the tool to register for new healthcare insurance,
    was *soft-launched* for only call centers but became so successful that it was
    the main tool for registering new applications for those who had a simple medical
    history.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: MPL 继续在[healthcare.gov](http://healthcare.gov)上工作，因为许多其他开发者的合同到期了，Tech Surge
    的其他开发者也在继续合作。它继续与 CMS 一起改进系统测试，并逐步推出修复措施，正如当时**政府问责局**(**GAO**)报告中所示。这些努力开始取得了显著成果。MPL
    重新编写的其中一部分，即用于注册新医疗保险的工具*App 2.0*，仅限呼叫中心进行*软启动*，但它取得了极大的成功，成为了注册新申请的主要工具，适用于那些有简单病史的人群。
- en: The work of MPL and the Tech Surge and the success of subsequent rollouts of
    [healthcare.gov](http://healthcare.gov) in further enrollment periods provided
    a proving ground for Agile and DevOps mindset and practices. Agencies such as
    18F and the United States Digital Service took up the baton and began the job
    of coaching other federal agencies to apply Agile and DevOps to technology projects.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: MPL和技术冲击小组的工作，以及随后在进一步的注册期间[healthcare.gov](http://healthcare.gov)的成功推出，为敏捷和DevOps思维及实践提供了一个试验场。18F等机构和美国数字服务局接过接力棒，开始指导其他联邦机构将敏捷和DevOps应用于技术项目。
- en: Atlassian cloud outage (2022)
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Atlassian云故障（2022）
- en: On April 5, 2022, 775 of Atlassian’s more than 200,000 total customer organizations
    lost access to their Atlassian cloud sites, which served applications such as
    Jira Service Management, Confluence, Statuspage, and Opsgenie. Many of these customers
    remained without access for up to 14 days until service to the remaining sites
    was restored on April 18.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 2022年4月5日，Atlassian超过200,000个客户组织中的775个失去了对Atlassian云站点的访问，这些站点服务了如Jira服务管理、Confluence、Statuspage和Opsgenie等应用程序。许多客户在服务恢复之前，已经无法访问其站点长达14天，直到4月18日剩余的站点恢复服务。
- en: The root cause of the site outage was traced to a script used by Atlassian to
    delete old instances of Insight, a popular standalone add-on to Jira that was
    acquired by Atlassian in 2021\. Insight eventually became bundled into Jira Service
    Management, but traces of the legacy app remained and needed to be removed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 站点故障的根本原因追溯到Atlassian用来删除旧版Insight实例的脚本，Insight是Jira的一个流行独立插件，Atlassian在2021年收购了该插件。Insight最终被捆绑进Jira服务管理中，但遗留的应用痕迹仍然存在，需要被删除。
- en: A miscommunication occurred where the team responsible for running the script
    was given a list of site IDs as input for the script instead of a list of Insight
    instance IDs. What followed was the immediate deletion of sites.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 出现了沟通错误，负责运行脚本的团队接收到的是站点ID列表作为脚本的输入，而不是Insight实例ID列表。结果是站点被立即删除。
- en: Atlassian’s cloud architecture is composed of multi-tenant services that handle
    applications for more than one customer. A blanket restoration of services would
    have affected those customers whose sites weren’t deleted. Atlassian had the knowledge
    of how to restore a single site but had never anticipated needing to restore the
    number of sites they currently faced. Atlassian began restoring customer sites.
    Restoration of a bunch of sites would take 48 hours. A manual restoration effort
    would have taken weeks for all the missing sites; clearly, Atlassian needed to
    automate.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian的云架构由多个租户服务组成，这些服务处理多个客户的应用程序。全面恢复服务将会影响那些站点未被删除的客户。Atlassian知道如何恢复单个站点，但从未预料到需要恢复当前面对的大量站点。Atlassian开始恢复客户站点。恢复大量站点需要48小时。手动恢复所有缺失的站点将需要数周时间；显然，Atlassian需要实现自动化。
- en: The automation effort was designed as Atlassian figured out a method to restore
    multiple sites at once. The automation was run starting on April 9 and accomplished
    the restoration of a site in 12 hours. Roughly 47% of the total sites were restored
    using automation by the time the last site was restored on April 18.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化工作是为了帮助Atlassian找到一种方法，以便一次性恢复多个站点。自动化从4月9日开始运行，成功地在12小时内恢复了一个站点。到4月18日最后一个站点恢复时，大约47%的站点已经通过自动化得到了恢复。
- en: The bigger issue was communicating with the affected customers. Atlassian was
    first made aware of the incident through a customer support ticket, but it was
    not immediately aware of the total number of affected customers. This is because
    deleting the sites also deleted metadata containing customer information that
    would be used by the customer to create support tickets. Recovering the lost customer
    metadata was important for customer notification.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 更大的问题是与受影响客户的沟通。Atlassian最初是通过一个客户支持票得知这一事件的，但当时并没有立即意识到受影响的客户总数。这是因为删除站点时，也删除了包含客户信息的元数据，而这些信息通常会被客户用于创建支持票。恢复丢失的客户元数据对于客户通知非常重要。
- en: The inability of Atlassian to directly contact affected customers made a major
    communication problem even greater. Those customers not contacted by Atlassian
    began reaching out on social media sites such as Twitter and Reddit to get news
    of what had happened. A general tweet from Atlassian made its way on April 7\.
    A blog article from Atlassian’s CTO, Sri Viswanath, with more detailed explanations
    came on April 12\. After the incident was solved, a post-incident review report
    was made generally available on April 29.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian 无法直接联系受影响客户，导致了一个重大沟通问题的加剧。那些未被 Atlassian 联系的客户开始在社交媒体平台（如 Twitter
    和 Reddit）上寻求有关事件的消息。Atlassian 于 4 月 7 日发布了一条通用推文。Atlassian 的首席技术官 Sri Viswanath
    于 4 月 12 日发布了更详细的博文。在事件解决后，事后复盘报告于 4 月 29 日公开发布。
- en: Lessons from the Atlassian outage
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自 Atlassian 停机事件的教训
- en: 'The Atlassian outage provided challenges both from a technical and a customer
    service perspective. The post-incident review outlined four major learning point
    that Atlassian must improve upon to prevent similar outages from occurring. These
    learnings included the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian 的停机事件在技术和客户服务方面都带来了挑战。事后复盘总结了四个主要的学习点，Atlassian 必须改进这些方面，以防止类似的停机事件发生。这些教训包括：
- en: Changing the process of deleting production data to *soft deletes*, where it
    is easier to recover and will be removed only after a certain period of time has
    elapsed.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将删除生产数据的过程更改为*软删除*，这样更容易恢复，并且数据只有在经过一定时间后才会被删除。
- en: Looking at specific processes for multiple-site, multiple-product data for a
    larger set of affected customers.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对多个站点、多个产品的数据，针对更大范围受影响客户的具体流程。
- en: Considering incident management for large-scale events. Atlassian had processes
    in place for one customer’s site. It now needed to consider large-scale incidents,
    affecting a large number of customers.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑大规模事件的事故管理。Atlassian 为某个客户的网站制定了流程。现在，它需要考虑影响大量客户的大规模事故。
- en: Improve customer communication during an incident. Atlassian started communication
    when it had a grasp of the cause and the efforts needed to correct the incident.
    This delay in communication allowed the incident to play out on social media.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在事故发生期间改善客户沟通。Atlassian 在掌握事故原因和纠正措施后才开始沟通。这种延迟沟通让事故在社交媒体上扩展开来。
- en: But there are broader lessons for us as well. Failures in production can happen
    from the first deployment to any point in the life cycle of a product. Failures
    can happen to companies starting out with Agile and DevOps or companies such as
    Atlassian that have succeeded in using Agile and DevOps. With all of these companies,
    the key to handling production failures includes ensuring that the process roots
    out as many failures as possible, practicing for failures to determine the best
    process, and setting up a proper process when failure does occur.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们也能从中汲取更广泛的教训。生产中的故障可以发生在从第一次部署到产品生命周期的任何阶段。无论是刚开始使用 Agile 和 DevOps 的公司，还是像
    Atlassian 这样的公司，在使用 Agile 和 DevOps 取得成功之后，都有可能发生故障。对于这些公司来说，处理生产故障的关键在于确保流程能尽可能根除故障，进行故障演练以确定最佳流程，并在发生故障时建立合适的处理流程。
- en: To aid us in this, we turn to a growing discipline called **Site Reliability
    Engineering** (**SRE**). This discipline was created by Ben Treynor Sloss at Google
    to initially apply software development methods to system administration. Originally
    seen as a hybrid approach utilizing methods used in development groups for traditional
    system administration operations, SRE has grown to its own branch within DevOps
    to ensure continued reliable systems operations after automated deployment has
    occurred.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们应对这一挑战，我们转向了一个不断发展的学科，称为**站点可靠性工程**（**SRE**）。这一学科由 Google 的 Ben Treynor
    Sloss 创建，最初目的是将软件开发方法应用于系统管理。SRE 最初被视为一种混合方法，利用开发团队用于传统系统管理操作的方法，它已经发展成 DevOps
    中的一个独立分支，确保在自动化部署之后，系统操作的持续可靠性。
- en: The first step is planning and prevention. Let’s start looking at the safeguards
    used by SRE for preventing production failures.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是规划和预防。我们从查看 SRE 用于防止生产故障的保障措施开始。
- en: Prevention – pulling the Andon Cord
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预防——拉动安灯（Andon）绳。
- en: The **Andon Cord** holds a special place in Lean thinking. As part of the Toyota
    Production System, if you suspected a problem with a car on the assembly line,
    you would pull the cord that ran around on the assembly line, and it would stop
    the line. People would come to the spot where the Andon Cord was pulled to see
    the defect and determine, first, how to fix the defect, and second, what steps
    would be needed to prevent the defect from occurring in the future.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**安灯绳**在精益思想中占有特殊的地位。作为丰田生产系统的一部分，如果你怀疑生产线上有问题，你可以拉动围绕生产线的安灯绳，这会停止生产线。人们会赶到安灯绳拉动的地方，查看缺陷并确定首先如何修复缺陷，然后采取哪些步骤防止未来再次发生类似问题。'
- en: Taiichi Ohno, the creator of the Toyota Production System, uses the Andon Cord
    to practice *jidoka*, empowering anyone to stop work to examine and implement
    continuous improvement.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 丰田生产系统的创始人大野耐一通过安灯绳实践*自働化*，赋予每个人停止工作来检查和实施持续改进的权力。
- en: 'For site reliability engineers, the following ideas and principles are used
    as a way of implementing the Andon Cord and ensuring continuous improvement:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于站点可靠性工程师，以下的理念和原则被用作实施安灯绳并确保持续改进的方法：
- en: Planning for risk tolerance by looking at **service-level indicators** (**SLIs**),
    **service-level objectives** (**SLOs**), and error budgets
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过查看**服务级别指标**（**SLI**）、**服务级别目标**（**SLO**）和误差预算来规划风险容忍度
- en: Enforcing release standards through release engineering
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过发布工程执行发布标准
- en: Collaborating on product launches with launch coordination engineering
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与发布协调工程合作进行产品发布
- en: Let’s examine these ideas in closer detail.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地探讨这些理念。
- en: SLIs, SLOs, and error budgets
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SLI、SLO和误差预算
- en: Many people are familiar with the concept of **service-level agreements** (**SLAs**),
    where if the service does not meet a threshold for service availability or responsiveness,
    the vendor is then liable to pay for that agreed-upon level of performance, typically
    in the form of credits.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人熟悉**服务级别协议**（**SLA**）的概念，即如果服务未达到可用性或响应性的门槛，供应商将需要支付约定的性能水平，通常以信用额度的形式进行补偿。
- en: 'If we take a look at the goal or threshold that an SLA is expected to achieve
    or maintain, that is called an SLO. Generally, there are three parts to an SLO:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看SLA期望实现或维持的目标或阈值，这称为SLO。一般来说，SLO有三个部分：
- en: The quality/component to measure
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测量的质量/组件
- en: The measurement periods
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量周期
- en: The required threshold the quality must meet, typically written as a desired
    value or range of values
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 质量必须达到的要求阈值，通常以期望值或范围的形式写出
- en: 'That quality or component to measure is known as an SLI. Common SLIs that are
    typically used include the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要测量的质量或组件被称为SLI。常见的SLI包括以下几种：
- en: Latency
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟
- en: Throughput
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 吞吐量
- en: Availability
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用性
- en: Error rate
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误率
- en: For every SLO, the time inside the measurement period where the threshold is
    not met is known as the error budget. Closely monitoring the error budget allows
    SREs to gauge whether the risk is acceptable to roll out a new release. If the
    error budget is almost exhausted, the SRE may decide that the focus should change
    from feature development to more technical work, such as enablers, which would
    enhance resiliency and reliability.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个SLO，在测量周期内未达到阈值的时间称为误差预算。通过密切监控误差预算，SRE可以评估风险是否可接受，以便推出新版本。如果误差预算几乎耗尽，SRE可能会决定将焦点从功能开发转向更多的技术工作，例如增强可恢复性和可靠性的支持工具。
- en: 'Teams generally want to understand an error budget in terms of allowable time.
    The following table may provide guidance on the maximum allowable error on a monthly
    and an annual basis:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 团队通常希望了解误差预算，以可允许的时间为单位。以下表格可能会提供有关每月和每年最大可允许误差的指导：
- en: '| **SLO Percentage** | **Monthly Allowed** **Error Budget** | **Annual Allowed**
    **Error Budget** |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| **SLO百分比** | **每月允许** **误差预算** | **每年允许** **误差预算** |'
- en: '| 99% (1% margin of error) | 7 hours, 18 minutes | 87 hours, 39 minutes |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 99%（1%误差范围） | 7小时18分钟 | 87小时39分钟 |'
- en: '| 99.5 (0.5% margin of error) | 3 hours, 39 minutes | 43 hours, 49 minutes,
    45 seconds |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 99.5%（0.5%误差范围） | 3小时39分钟 | 43小时49分钟45秒 |'
- en: '| 99.9% (0.1% margin of error) | 43 minutes, 50 seconds | 8 hours, 45 minutes,
    57 seconds |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 99.9%（0.1%误差范围） | 43分钟50秒 | 8小时45分钟57秒 |'
- en: '| 99.95% (0.05% margin of error | 21 minutes, 54 seconds | 4 hours, 22 minutes,
    48 seconds |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 99.95%（0.05%误差范围） | 21分钟54秒 | 4小时22分钟48秒 |'
- en: '| 99.99% (0.01% margin of error) | 4 minutes, 23 seconds | 52 minutes, 35 seconds
    |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 99.99%（0.01% 误差范围） | 4 分 23 秒 | 52 分 35 秒 |'
- en: Table 6.1 – Error budgets in terms of allowable monthly and annual time
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6.1 – 按允许的每月和每年时间划分的误差预算
- en: 'The journey to implementing SLOs often begins with an evaluation of the product
    or service. From there, look at the components or microservices that make up the
    product: which parts of these, if not available, would contribute to unhappiness
    for the customer?'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 实施 SLOs 的过程通常从评估产品或服务开始。从那里，查看构成产品的组件或微服务：哪些部分如果不可用，会导致客户的不满？
- en: After the discovery of components critical to customer happiness, choose those
    measurements (SLIs) to capture and set up your goals (SLOs), making sure that
    the measurements give true indicators of potential problems and that the goals
    are realistic and attainable (100% of any measurement is not attainable). Start
    with a small set of SLOs. Communicate these SLOs to your customer so that they
    understand the role SLOs will play in making a better product and the expectations.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在发现对客户满意度至关重要的组件后，选择那些用于捕获和设定目标（SLOs）的测量指标（SLIs），确保这些测量指标能真实反映潜在问题，并且目标是现实可达的（任何测量指标的
    100% 都是无法实现的）。从一小组 SLOs 开始，将这些 SLOs 告诉客户，让他们理解 SLOs 在提升产品质量和期望方面的作用。
- en: SLIs, SLOs, and error budgets should be documented as policy, but the policy
    is meant to change and adjust. After some time, reevaluate the SLIs, SLOs, and
    error budget to see whether these measurements are effective, and revise the SLIs
    and SLOs as needed.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: SLIs、SLOs 和误差预算应作为政策文档，但该政策是可以调整和改变的。经过一段时间后，重新评估 SLIs、SLOs 和误差预算，检查这些测量指标是否有效，并根据需要修订
    SLIs 和 SLOs。
- en: Release engineering
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布工程
- en: To ensure that SLOs are maintained, site reliability engineers need to ensure
    that anything that is released to a customer is reliable and may not contribute
    to an outage. To that end, they work with software engineers to make sure releases
    are low-risk.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保 SLOs 得以保持，站点可靠性工程师需要确保发布给客户的任何内容都是可靠的，且不会导致服务中断。为此，他们与软件工程师合作，确保发布的内容风险较低。
- en: 'Google details this collaboration as release engineering. This aspect of SRE
    is guided by the following principles:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Google 将这种协作称为发布工程。SRE 的这一方面遵循以下原则：
- en: Self-service
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自助服务
- en: High velocity
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高速度
- en: Hermetic builds
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封闭构建
- en: Policy/procedure enforcement
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政策/程序执行
- en: Let’s look at these four parts of the release engineering philosophy now.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看一下发布工程哲学的这四个部分。
- en: Allowing release autonomy through a self-service model
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过自助服务模型实现发布自主权
- en: For agility to prosper, the teams working must be independent and self-managing.
    Release engineering processes allow the teams to decide their own release cadence
    and when to actually release. This ability for teams to release when and how often
    they need to is aided by automation.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现敏捷，参与的团队必须是独立且自我管理的。发布工程过程允许团队自行决定发布节奏和实际发布的时间。自动化有助于团队在需要时按需发布。
- en: Aiming for high velocity
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 追求高速度
- en: If teams choose to release more often, they are often doing so with smaller
    batches of changes of highly tested code. More frequent releases of small changes
    reduce the risk of outages. This is especially helpful if you have a large error
    budget.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果团队选择更频繁地发布，通常是以更小批次的高测试覆盖率代码进行发布。更频繁的小批量发布降低了中断的风险。如果你有较大的误差预算，这尤其有帮助。
- en: Ensuring hermetic builds
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保封闭构建
- en: We want consistency and repeatability in our build-and-release process. The
    build output should be identical no matter who creates it. This means that versions
    of dependent artifacts and tools such as libraries and compilers are standardized
    from test to production.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望在构建和发布过程中保持一致性和可重复性。构建输出应与创建者无关，确保输出相同。这意味着，从测试到生产的依赖项和工具（如库和编译器）的版本应保持标准化。
- en: Of course, if problems occur out in production, a useful tactic for troubleshooting
    is known as *cherry-picking*, where the team starts with the last-known *good*
    production version, retrieved from version control, and inserts each change one
    by one until the problem is discovered. Strong version control procedures ensure
    that builds are hermetic and allow for cherry-picking.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果生产环境中出现问题，一种有用的故障排除策略是所谓的 *cherry-picking*（挑拣），团队从最后一个已知的 *良好* 生产版本开始，从版本控制中获取并逐个插入每个更改，直到发现问题。强有力的版本控制流程确保构建是封闭的，并且支持挑拣操作。
- en: Having strongly enforced policies and procedures
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 严格执行政策和程序
- en: Automated release processes that produce hermetic builds require standards of
    access control to ensure that builds are created on the correct build machines
    using the correct sources. The key is to avoid adding local edits or dependencies
    and only use verified code kept in version control.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 需要访问控制标准的自动发布过程，以确保在正确的构建机器上使用正确的源创建构建。关键是避免添加本地编辑或依赖项，只使用存储在版本控制中的经过验证的代码。
- en: 'These four principles we have discussed are really applied when looking at
    the automation that handles the following parts of the release process:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论的这四个原则实际上在处理发布过程中的以下部分时得到了应用：
- en: '**Continuous integration/continuous** **deployment** (**CI/CD**)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续集成/持续** **部署** (**CI/CD**)'
- en: Configuration management
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置管理
- en: We first saw these parts as automated implementations of the CI/CD pipeline
    in [*Chapter 3*](B18756_03.xhtml#_idTextAnchor066), *Automation for Efficiency
    and Quality*. Now, let’s see how we tie the process into the automation.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们第一次看到这些部分作为 CI/CD 管道的自动化实现出现在 [*第3章*](B18756_03.xhtml#_idTextAnchor066)， *提升效率与质量的自动化*。现在，让我们看看如何将这些过程与自动化联系起来。
- en: CI/CD
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CI/CD
- en: The release process begins with a commit made to version control. This starts
    the build process with different tests automatically executed depending on the
    branch. Release branches run the unit tests as well as applicable system and functional
    tests.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 发布过程从提交版本控制开始。这会启动构建过程，自动执行不同的测试，具体取决于分支。发布分支会运行单元测试以及适用的系统和功能测试。
- en: When the tests pass, the build is labeled so that there is an audit trail of
    the build date, dependencies, target environment, and revision number.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 测试通过后，构建会被标记，以便跟踪构建日期、依赖项、目标环境和修订号。
- en: Configuration management
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置管理
- en: The files used by the configuration management tools are kept in version control.
    Versions of the configuration files are recorded with release versions as part
    of the audit trail so that we know which version of the configuration files is
    associated with which versions of the release.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 配置管理工具使用的文件存储在版本控制中。配置文件的版本与发布版本一起记录，作为审计轨迹的一部分，以便我们知道哪个版本的配置文件与哪个版本的发布相关联。
- en: Launch coordination engineering
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布协调工程
- en: Launching a new product or feature to customers may have greater expectations
    than iterative releases of existing products. To facilitate the release of new
    services, Google created a special consulting function within SRE called **launch
    coordination** **engineering** (**LCE**).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 向客户发布新产品或功能时，可能会比现有产品的迭代发布面临更高的期望。为了促进新服务的发布，谷歌在 SRE 内创建了一个特殊的咨询职能，称为 **发布协调工程**
    (**LCE**)。
- en: 'The engineers in LCE perform a number of functions, all intended to ensure
    a smooth launch process. These functions include the following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: LCE 的工程师执行多个职能，旨在确保发布过程顺利进行。这些职能包括以下内容：
- en: Auditing the product or service to ensure reliability
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审核产品或服务以确保可靠性
- en: Coordinating between multiple teams involved in the launch
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协调多个参与发布的团队
- en: Ensuring completion of tasks related to technical aspects of the launch
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保完成与发布相关的技术任务
- en: Signing off that a launch is *safe*
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确认发布是 *安全的*
- en: Training developers on integration with the new service
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 培训开发人员与新服务的集成
- en: 'To aid launch coordination engineers in ensuring a smooth launch, a launch
    checklist is created. Depending on the product, engineers tailor the checklist,
    adding or removing the following checklist items:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助发布协调工程师确保发布顺利进行，创建了一个发布检查清单。根据产品的不同，工程师会定制该检查清单，添加或删除以下检查项：
- en: Shared architecture and dependencies
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享架构和依赖
- en: Integration
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成
- en: Capacity planning
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容量规划
- en: Possible failure modes
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的故障模式
- en: Client behavior
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户行为
- en: Processes/automation
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流程/自动化
- en: Development process
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发过程
- en: External dependencies
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部依赖
- en: Rollout planning
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布规划
- en: We have seen techniques and processes SREs use to ensure that the product launch
    or code release is ready. We’ve seen the tolerance for failure through SLIs, SLOs,
    and error budgets. But do we know whether the SREs are ready if an outage occurs?
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到 SRE 使用的技术和流程，以确保产品发布或代码发布已准备就绪。我们已通过 SLIs、SLOs 和错误预算看到了容错能力。但我们是否知道当发生故障时，SRE
    是否已做好准备？
- en: One way of determining is by simulating a failure and seeing the reaction. This
    is another tool that SREs use, called chaos engineering. Let’s take a look at
    what’s involved.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 判断的一种方式是模拟故障并观察反应。这是SRE使用的另一个工具，称为混沌工程。让我们看看其中涉及的内容。
- en: Preparation – chaos engineering
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作 – 混沌工程
- en: On September 20, 2015, **Amazon Web Services** (**AWS**) experienced an outage
    with more than 20 services out of its data centers in the US-EAST-1 region. These
    services affected applications from major companies such as Tinder, Airbnb, and
    IMDb, as well as Amazon’s own services such as Alexa.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 2015年9月20日，**亚马逊网络服务**（**AWS**）在美国东部1区（US-EAST-1）发生了停机事故，超过20个服务出现故障。这些服务影响了许多大公司如Tinder、Airbnb、IMDb的应用，以及亚马逊自己的服务，如Alexa。
- en: One of AWS’s customers that was able to avoid problems during the outage and
    remain fully operational was Netflix, the streaming service. It was able to do
    so because it created a series of tools that it called the *Simian Army*, discussed
    in this blog article at [https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116),
    which simulated potential problems with AWS so that Netflix engineers could design
    ways to make their system more resilient.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS发生故障期间，能够避免问题并保持完全运行的客户之一是Netflix，这家流媒体服务公司。它能够做到这一点，因为它创建了一系列名为*猩猩军团*的工具，相关内容可以在[https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116)的博客文章中找到，这些工具模拟了AWS可能出现的问题，使得Netflix的工程师能够设计出增强系统弹性的解决方案。
- en: Over several AWS outages, the Simian Army proved its worth, allowing Netflix
    to continue providing service. Soon, other companies such as Google started wanting
    to apply the same techniques. This groundswell of support led to the creation
    of the discipline of chaos engineering.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在多次AWS故障中，猩猩军团证明了它的价值，使Netflix能够继续提供服务。很快，像Google这样的其他公司也开始希望应用相同的技术。这股支持浪潮最终促成了混沌工程学科的诞生。
- en: 'Let’s take a closer look at the following aspects of chaos engineering:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解混沌工程的以下几个方面：
- en: Principles
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原则
- en: Experiments
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验
- en: Chaos engineering principles
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混沌工程原则
- en: The key to chaos engineering is experimentation in production environments.
    The idea of performing reliability experiments in production does seem to be laden
    with risk. This risk, though, is tempered by your confidence in the resiliency
    of the system.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 混沌工程的关键是进行生产环境中的实验。尽管在生产环境中进行可靠性实验似乎充满风险，但这种风险通过对系统弹性的信心得到了缓解。
- en: 'To guide confidence, chaos engineering starts with the following principles:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为了引导信心，混沌工程从以下原则开始：
- en: Build your hypothesis around the steady-state behavior of your production environment
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于生产环境稳态行为构建假设
- en: Create variables that simulate real-world events
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建模拟现实世界事件的变量
- en: Run the experiment in your production environment
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生产环境中运行实验
- en: Automate the experiment
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化实验
- en: Minimize the experiment’s fallout
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化实验的后果
- en: Let’s discuss these principles in detail.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细讨论这些原则。
- en: Basing experiments around steady-state behavior
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于稳态行为进行实验
- en: In devising our experiments, we really want to focus on the system outputs rather
    than the individual components of the system. These outputs form the basis of
    how our environment behaves in a steady state. The focus in chaos engineering
    is on the verification of the behavior and not on the validation of individual
    components.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计实验时，我们真正想要关注的是系统的输出，而不是系统中各个组件的表现。这些输出形成了环境在稳态下行为的基础。混沌工程的重点在于验证行为，而不是验证单个组件的功能。
- en: Mature organizations that look at chaos engineering as a key part of SRE know
    that this steady-state behavior typically forms the basis for SLOs.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 那些将混沌工程视为SRE（站点可靠性工程）关键部分的成熟组织知道，这种稳态行为通常构成了SLO（服务水平目标）的基础。
- en: Creating variables that simulate real-world events
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建模拟现实世界事件的变量
- en: Given the known steady-state behavior, we consider *what-if* scenarios that
    happen in the real world. Each event you consider then becomes a variable.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 基于已知的稳态行为，我们考虑现实世界中可能发生的*假设*场景。你考虑的每个事件都成为一个变量。
- en: One of the famous tools in Netflix’s Simian Army, *Chaos Monkey*, was based
    on the event that a virtual server node in AWS would become unavailable. So, it
    tested for that condition only.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix的“猩猩军团”中的一个著名工具，*Chaos Monkey*，基于AWS中虚拟服务器节点不可用的事件。因此，它只测试这一条件。
- en: Running the experiment in production
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在生产环境中运行实验
- en: Running the experiment in a staging or *production-like* environment is beneficial,
    but at some point, you need to run the experiment with its variable in the production
    environment to see the effects on real-world processing of real traffic.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在预备环境或*类似生产环境*中运行实验是有益的，但最终，你需要在生产环境中运行实验，以查看它对实际流量处理的影响。
- en: At Netflix, Chaos Monkey was run every day in production. It would look at every
    cluster in operation and randomly deactivate one of the nodes.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Netflix，Chaos Monkey 每天在生产环境中运行。它会查看每个正在运行的集群，并随机停用其中一个节点。
- en: Automating the experiment
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化实验
- en: The benefits of learning from chaos engineering experiments are only apparent
    when experiments are run consistently and frequently. To achieve this, automating
    the experiment is necessary.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 从混沌工程实验中学习的好处，只有当实验持续且频繁地运行时，才能显现出来。为了实现这一点，自动化实验是必要的。
- en: Chaos Monkey was not initially popular with Netflix engineers when initially
    rolled out. The idea that every day, this program would intentionally cause errors
    in production did not sit well with them, but it did consistently raise the problem
    that instances could vanish. With this problem, engineers had a mandate to find
    solutions and make the system more resilient.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Chaos Monkey 在初次推出时并未受到 Netflix 工程师的欢迎。每天，这个程序会故意在生产环境中制造错误，这让他们感到不太舒服，但它确实不断暴露出实例可能消失的问题。有了这个问题，工程师们就有了找到解决方案并增强系统弹性的任务。
- en: Minimizing the fallout
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最小化后果
- en: Because you are running your experiment in the production environment, your
    customers who are also using that environment may be affected. Your job is to
    make sure the fallout from running the experiment is minimized.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 因为你是在生产环境中进行实验，所以也有可能影响到同样使用该环境的客户。你的任务是确保实验带来的后果得到最小化。
- en: Chaos Monkey was run once per day, but only during business hours. This would
    be to ensure that if any ill effects to production were discovered, it would be
    while most of the engineers were present and not off-hours such as at 3 A.M. when
    there would only be a skeleton crew.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Chaos Monkey 每天运行一次，但仅限于工作时间。这是为了确保如果发现对生产环境的任何负面影响，能够在大多数工程师在场时发生，而不是在凌晨3点等非工作时间，这时只有少数工作人员值班。
- en: With these principles in place, let’s apply them and look at creating experiments.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些原则的基础上，接下来让我们应用它们并探讨创建实验。
- en: Running experiments in chaos engineering
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在混沌工程中运行实验
- en: Experimenting in production involves planning and developing a process. The
    goal of the experiment is to find those weak areas that could be more resilient
    to ensure SLOs are kept. The goal is not to *break* *the system*.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中进行实验需要规划和开发流程。实验的目标是找出那些可以增强弹性的薄弱环节，以确保SLO（服务水平目标）得到保持。目标不是*破坏* *系统*。
- en: 'In *Chaos Engineering: System Resiliency in Practice*, Richard Crowley writes
    a chapter dealing with creating the *Disasterpiece Theater* process for Slack.
    He outlines the following steps for the process:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在《混沌工程：实践中的系统弹性》一书中，理查德·克劳利写了一个章节，讲述了为 Slack 创建*灾难剧院*流程的内容。他概述了以下步骤：
- en: Make sure a *safety net* is in place.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保有一个*安全网*到位。
- en: Prepare for the exercise.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备演练。
- en: Run the exercise.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行演练。
- en: Debrief the results of the exercise.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对演练结果进行总结。
- en: Let’s examine the details of each step now.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们详细检查每个步骤。
- en: Ensuring the environment is ready for chaos
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保环境已准备好应对混沌
- en: The goal of chaos engineering is to find weaknesses in resiliency, not to disable
    the environment. If the existing environment has no fault tolerance, there’s no
    point in running experiments.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 混沌工程的目标是找出系统弹性中的弱点，而不是关闭环境。如果现有环境没有容错能力，那么进行实验是没有意义的。
- en: Make sure there is spare capacity for services. That spare capacity should be
    easy to bring online.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 确保服务有备用容量。这个备用容量应该容易上线。
- en: Once the spare capacity and resources have been identified and allocated, have
    a plan to allow for the removal of malfunctioning resources and automatic replacement
    with the spare capacity.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦备用容量和资源被识别并分配好，制定一个计划，允许移除故障资源并自动用备用容量进行替换。
- en: Preparing for the exercise
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备演练
- en: 'For Crowley, an exercise starts with a worry: Which critical component or service
    will fail, impacting resiliency? This becomes the basis for the exercise.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 对于克劳利来说，一个演练从一个问题开始：哪个关键组件或服务会失败，从而影响系统的弹性？这成为演练的基础。
- en: 'Crowley then takes this basis and works on expanding this to an exercise to
    run in development, staging, and production environments. He sets up a checklist,
    making sure each of the following items is fulfilled for the exercise:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: Crowley 然后以此为基础，展开工作，扩展为在开发、预生产和生产环境中运行的演习。他制定了一个检查清单，确保以下每个项目都在演习中得到满足：
- en: Describe the server or service that is to fail, including the failure mode,
    and how to simulate the failure.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述将要故障的服务器或服务，包括故障模式，以及如何模拟故障。
- en: Identify the server or service in development and production environments, and
    confirm the method to simulate is possible in the development environment.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定开发和生产环境中的服务器或服务，并确认在开发环境中模拟的方法是否可行。
- en: Identify how the failure should be detected. Will an alert be produced that
    will show up on dashboards? Will logs be produced? If you cannot imagine how it
    will be detected, it may still be worth running the exercise to determine a way
    to detect the failure.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定如何检测故障。是否会生成警报并显示在仪表板上？是否会生成日志？如果无法想象如何检测它，仍然值得执行演习以确定检测故障的方法。
- en: Identify redundancies and mitigations that should eliminate or reduce the impact
    of the failure. Also, identify any runbooks that are run if the failure should
    occur.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定冗余和缓解措施，这些措施应当能够消除或减少故障的影响。同时，确定在故障发生时应运行的操作手册。
- en: Identify the relevant people that should be invited to contribute their knowledge
    to the exercise. These people may also be the first responders when the exercise
    happens.
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定应该邀请哪些相关人员为演习提供他们的知识。这些人员也可能是演习发生时的第一响应者。
- en: Preparation culminates in a meeting with the relevant people to work out the
    necessary logistics of the exercise. When all the preparations are set, it’s time
    to run the exercise.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 准备工作最终在与相关人员的会议中完成，讨论演习所需的后勤工作。当所有准备工作就绪时，便是时候开始演习了。
- en: Running the exercise
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行演习
- en: The exercise should be well publicized to all involved people before it is executed.
    After all, they will be participating in the exercise, with the goal of creating
    a more resilient environment.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 演习应当在执行前广泛告知所有参与人员。毕竟，他们将参与这次演习，目标是创建一个更具弹性的环境。
- en: 'Crowley executes the exercise with the following checklist:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: Crowley 执行演习时使用以下检查清单：
- en: Make sure everyone is aware the exercise is being recorded. Make a recording
    if everyone allows it.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保每个人都知道演习正在被录音。如果每个人都同意，可以进行录音。
- en: Review the plan created in the preparation step. Make adjustments as necessary.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查在准备阶段创建的计划，并根据需要进行调整。
- en: Announce the beginning of the exercise in the development environment.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开发环境中宣布演习开始。
- en: Create a failure in the development environment. Note the timestamp.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开发环境中制造故障。记录时间戳。
- en: See whether alerts and logs are created for the failure. Note the timestamp.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看是否为故障生成了警报和日志。记录时间戳。
- en: If there are automated recovery steps, give them time to execute.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有自动恢复步骤，给它们一些时间来执行。
- en: If runbooks are being used, follow them to resolve the failure in the development
    environment. Note the timestamp and whether any deviations from the runbooks occurred.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用了操作手册，按照操作手册的指引解决开发环境中的故障。记录时间戳以及是否有任何偏离操作手册的情况。
- en: Have a go/no-go decision to duplicate this failure in the production environment.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定是否有“开始/不开始”决策，以便在生产环境中复制此故障。
- en: Announce the beginning of the exercise in the production environment.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生产环境中宣布演习开始。
- en: Create a failure in the production environment. Note the timestamp.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生产环境中制造故障。记录时间戳。
- en: See whether alerts and logs are created for the failure. Note the timestamp.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看是否为故障生成了警报和日志。记录时间戳。
- en: If there are automated recovery steps, give them time to execute.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有自动恢复步骤，给它们一些时间来执行。
- en: If runbooks are being used, follow them to resolve the failure in the production
    environment. Note the timestamp and whether any deviations from the runbooks occurred.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用了操作手册，按照操作手册的指引解决生产环境中的故障。记录时间戳以及是否有任何偏离操作手册的情况。
- en: Announce the all-clear and conclusion of the exercise.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 宣布演习结束并宣布“全清”。
- en: Perform a debrief.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行总结。
- en: Distribute the recording if one was made.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有录音，将其分发。
- en: With the exercise complete, a key part of the exercise begins with the debrief,
    after the all-clear is announced. Let’s examine how to create a learning debrief.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 演习完成后，演习的关键部分是进行总结，这一过程从宣布演习结束开始。我们来看看如何创建一个学习总结。
- en: Debriefing for learning
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事后总结以便学习
- en: Crowley recommends performing a debrief while the experience of the exercise
    is still fresh in everyone’s minds. During the debrief, only the facts are presented,
    with a summary of how well the system did (or didn’t) perform.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Crowley建议在练习体验仍然新鲜时进行事后总结。在总结过程中，只呈现事实，并总结系统表现得如何（或未能表现）。
- en: 'Crowley has the following starter questions to help display what was learned.
    These are offered as a template:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Crowley提出了以下启动问题，以帮助展示学到的内容。这些问题可以作为模板使用：
- en: What was the time until detection? What was the time until recovery?
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件检测和恢复的时间是多少？
- en: Did the end users notice when we ran the exercise in production? How do we know?
    Are there solutions to make that answer *no*?
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们在生产环境中运行练习时，最终用户注意到了吗？我们如何知道？有没有解决方案可以让答案是*没有*？
- en: Which recovery steps could be automated?
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些恢复步骤可以自动化？
- en: Where were our blind spots?
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的盲点在哪里？
- en: What changes to our dashboards and runbooks have to be made?
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要对仪表板和运行手册做哪些更改？
- en: Where do we need more practice?
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要在哪些方面进行更多练习？
- en: What would our on-call engineers do if this happened unexpectedly?
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这种情况意外发生，我们的值班工程师该怎么做？
- en: The outcome of the exercise and the answers in the debrief can form recommendations
    for the next steps to add resiliency to the system. The exercise can be repeated
    to ensure that the system correctly identifies and resolves the failure.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 练习的结果和总结中的回答可以形成接下来增强系统韧性的建议。可以重复进行练习，以确保系统能正确识别并解决故障。
- en: Disasterpiece Theater can be an effective framework for performing your chaos
    engineering exercises. The flexibility of the exercise is dependent upon how resilient
    your system is already.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**灾难剧场**可以作为执行混乱工程练习的有效框架。该练习的灵活性取决于你的系统已经有多强的韧性。'
- en: Even with regular chaos engineering exercises, bad things can still happen in
    your production environments that will affect your customers. Let’s look at ways
    to solve these production issues with incident management.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 即使定期进行混乱工程练习，生产环境中仍然可能发生不良事件，影响到客户。让我们看看如何通过事件管理来解决这些生产问题。
- en: Problem-solving – enabling recovery
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题解决 – 促成恢复
- en: 'For SREs, a solid incident management process is important when things go wrong
    in production. A good incident management process allows you to follow these necessary
    goals, commonly referred to as *the* *three Cs*:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 对于SRE来说，健全的事件管理流程在生产环境出现问题时非常重要。一个好的事件管理流程能够帮助你达成这些必要的目标，通常被称为*三大C*：
- en: '**Coordinate** the response'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协调**响应'
- en: '**Communicate** between the incident participants, others in the organization,
    and interested parties in the outside world'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沟通**事件参与者、组织中的其他人员以及外部感兴趣方之间的互动'
- en: Maintain **control** over the incident response
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制**事件响应'
- en: 'Google identified necessary elements to their incident command system in the
    *Managing Incidents* chapter written by Andrew Stribblehill in *Site Reliability
    Engineering: How Google Runs Production Systems*. These elements include the following:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: Google在Andrew Stribblehill所写的《*站点可靠性工程：Google如何运营生产系统*》的*管理事件*章节中，识别了他们的事件指挥系统所需的元素。这些元素包括以下内容：
- en: Clearly defined incident management roles
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确的事件管理角色
- en: A (virtual or physical) command post
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个（虚拟或物理的）指挥所
- en: A living incident state document
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个实时更新的事件状态文档
- en: Clear handoffs to others
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清晰的交接给他人
- en: Let’s look at these elements in detail.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看看这些元素。
- en: Incident management roles
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件管理角色
- en: Upon recognition that what you are facing is truly an incident, a team should
    be assembled to work on the problem and share information until the incident is
    resolved. The team will have roles so that coordination is properly maintained.
    Let’s look at these roles in detail.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认你所面对的确实是一起事件，就应该组建一个团队来处理问题，并共享信息，直到事件解决。团队会有明确的角色，以便正确协调。让我们详细了解这些角色。
- en: The incident commander
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件指挥官
- en: The incident commander may start as the person who originally reports the incident.
    The incident commander embodies the *three Cs* by delegating the necessary roles
    to others. Any role not delegated is assumed to belong to the incident commander.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 事件指挥官可能最初是报告事件的人。事件指挥官通过将必要的角色委派给其他人来体现*三大C*。任何未被委派的角色都假定属于事件指挥官。
- en: The incident commander will work with the other responders to resolve the incident.
    If there are any roadblocks, the incident commander will facilitate their removal.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 事件指挥官将与其他响应人员合作以解决事件。如果有任何障碍，事件指挥官将促使其去除。
- en: Operations lead
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运营负责人
- en: The operations lead will work together with the incident commander. They will
    run any needed tools to resolve the incident. The operations lead is the only
    person allowed to make changes to the system.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 运营负责人将与事件指挥官一起工作。他们将运行解决事件所需的工具。只有运营负责人可以对系统进行更改。
- en: Communications lead
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通讯负责人
- en: The communications lead is the public face of the incident and its response.
    They are responsible for communication with outside groups and stakeholders. They
    may also ensure that the incident document is kept up to date.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 通讯负责人是事件及其响应的对外代表。他们负责与外部团体和利益相关者的沟通。他们还可能确保事件文档保持更新。
- en: Incident planning/logistics
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件规划/后勤
- en: Planning and logistics will work with the operations people by working on longer-term
    issues of the incident such as arranging for handoffs between roles, ordering
    meals, and entering tickets in the bug tracking system. They will also track how
    the system has diverged from the norm so that it can be returned to normal when
    the incident is resolved.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 规划和后勤将与运营人员一起解决事件的长期问题，如安排角色间的交接、订餐和在缺陷跟踪系统中输入票证。他们还将跟踪系统如何偏离常态，以便在事件解决时恢复正常。
- en: The incident command post
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件指挥中心
- en: A *war room* is needed for all members of the incident response team to convene
    and collaborate on the solution. This place should be where outside parties can
    meet with the incident commander and other members of the incident response team.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*战情室*是所有事件响应团队成员集中合作解决方案的地方。这里应该是外部人员可以与事件指挥官和其他事件响应团队成员会面的地方。
- en: Because of distributed development, these command posts are typically virtual
    as opposed to a physical room. **Internet Relay Chat** (**IRC**) chat rooms or
    Slack channels can serve as the medium for gathering in one *spot*.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 由于分布式开发，这些指挥中心通常是虚拟的，而不是一个实体房间。**互联网中继聊天**（**IRC**）聊天室或 Slack 渠道可以作为集中在一个*地方*的媒介。
- en: The incident state document
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件状态文档
- en: The incident commander’s main responsibility is to record all activity and information
    related to the incident in the incident state document. This is a living document,
    meant to be frequently updated. A wiki may suffice, but that typically allows
    only one person to edit it at a time.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 事件指挥官的主要责任是记录与事件相关的所有活动和信息在事件状态文档中。这是一个动态文档，旨在频繁更新。一个 Wiki 页面可能足够，但通常它一次只能由一个人编辑。
- en: Suitable alternatives may be a Confluence page or a document shared in a public
    Google Drive or Microsoft SharePoint folder.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的替代方案可能是 Confluence 页面或一个共享在公共 Google Drive 或 Microsoft SharePoint 文件夹中的文档。
- en: Google maintains a template for an incident state document that can be used
    as a starting point.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Google 维护了一个事件状态文档模板，可以作为起点使用。
- en: Setting up clear handoffs
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置清晰的交接
- en: As we saw with Atlassian’s incident earlier in this chapter, incidents can stretch
    over several days or even weeks. So, the handoff of roles is essential, particularly
    for the incident commander. Communication must be clear to everyone that a handoff
    has taken place to minimize any confusion.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本章中看到的 Atlassian 事件，事件可能持续几天甚至几周。因此，角色的交接至关重要，特别是事件指挥官。必须确保每个人都清楚交接已发生，以最小化任何混淆。
- en: While in an incident, some actions that may help move toward a solution include
    rolling back or *rolling forward*. These may work if the root cause is diagnosed
    as a new change recently made. We’ll look at these alternatives in our next section.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件处理中，可能有一些有助于解决问题的行动，包括回滚或*前进修复*。如果根本原因被诊断为最近做出的新更改，这些方法可能有效。我们将在下一部分中详细介绍这些替代方案。
- en: Perseverance – rolling back or fixing forward
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 坚持不懈 – 回滚或前进修复
- en: If the reason for the production failure is a new change, a quick resolution
    may involve reverting to the state of the system before the change, or if a fix
    is found, immediately running it through the CI/CD pipeline to immediately deploy.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 如果生产故障的原因是一个新更改，快速解决方案可能包括恢复到更改之前的系统状态，或者如果找到了修复方法，立即通过 CI/CD 流水线运行并立即部署。
- en: Some of the methods for rolling back or rolling forward a fix include the following
    ones. Let’s examine them in detail.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 一些回滚或修复推进的方法包括以下几种。让我们详细了解它们。
- en: Rolling back with blue/green deployment
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用蓝绿部署回滚
- en: 'A blue/green deployment makes use of two production environments: one live
    and the other on standby. The live environment is the one that customers use,
    while the standby environment is there as a backup. The change is made on the
    standby environment and then the standby environment is made live. You can see
    an illustration of this type of deployment here:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝绿部署利用两个生产环境：一个是在线环境，另一个是备用环境。在线环境是客户使用的环境，而备用环境则作为备份。更改在备用环境中进行，然后将备用环境切换为在线环境。你可以看到这种部署方式的示意图：
- en: "![Figure 6.1 – Blue/green deployment: \uFEFFenvironment switch](img/B18756_06_01.jpg)"
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – 蓝绿部署：环境切换](img/B18756_06_01.jpg)'
- en: 'Figure 6.1 – Blue/green deployment: environment switch'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 蓝绿部署：环境切换
- en: 'As the preceding diagram indicates, both environments are still present, but
    only one has access to customer traffic. The arrangement remains this way until
    changes are deployed into the standby environment or a rollback becomes necessary,
    as illustrated in the following diagram:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的图示所示，两个环境仍然存在，但只有一个环境能接收客户流量。这个安排将持续，直到更改部署到备用环境中，或者需要回滚，如下图所示：
- en: "![Figure 6.2 – Blue/green deployment: \uFEFFrollback](img/B18756_06_02.jpg)"
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 蓝绿部署：回滚](img/B18756_06_02.jpg)'
- en: 'Figure 6.2 – Blue/green deployment: rollback'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 蓝绿部署：回滚
- en: A blue/green deployment works well when the environment is stateless—that is,
    there is no need to consider the state of data. Complications arise when the data’s
    state has to be considered in artifacts such as databases or volatile storage.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝绿部署在环境是无状态时效果最佳——也就是说，不需要考虑数据的状态。当数据的状态需要在数据库或易失性存储等工件中考虑时，就会出现复杂情况。
- en: Rolling back with feature flags
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用特性标志回滚
- en: 'We saw in [*Chapter 3*](B18756_03.xhtml#_idTextAnchor066), *Automation for
    Efficiency and Quality*, that feature flags allowed the propagation of changes
    to deployment without the change visible until the flag was *toggled on*. In this
    same way, if a new feature is the root cause of a production failure, the flag
    can be *toggled off* until the new feature can be fixed, as illustrated in the
    following diagram:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第 3 章*](B18756_03.xhtml#_idTextAnchor066)，《为了效率和质量的自动化》中看到，特性标志允许变更传播到部署中，但在标志被*开启*之前，变更是不可见的。以同样的方式，如果新特性是生产故障的根本原因，可以将标志*关闭*，直到新特性被修复，如下图所示：
- en: '![Figure 6.3 – Rollback with a feature flag](img/B18756_06_03.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – 使用特性标志回滚](img/B18756_06_03.jpg)'
- en: Figure 6.3 – Rollback with a feature flag
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 使用特性标志回滚
- en: Rolling back by using feature flags allows for a quick change to previous behavior
    without extensive changes to the source code or configuration.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 使用特性标志回滚可以快速恢复到以前的行为，而不需要对源代码或配置做出广泛的修改。
- en: Rolling forward using the CI/CD pipeline
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CI/CD 流水线推进
- en: Rolling forward or *fixing forward* is the method of resolving an incident by
    developing a fix for the error, allowing it to go through the CI/CD pipeline so
    that it can be deployed into production. It can be an effective way to resolve
    the incident, especially if the change is small.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 向前推进或*修复推进*是通过开发错误修复来解决事件的方法，允许其通过 CI/CD 流水线，从而能够部署到生产环境中。这是一种有效的解决事件的方法，特别是当更改较小的时候。
- en: Fixing forward should be viewed as a *last resort*. If fixing forward is the
    only viable option, your product’s architecture may be too tightly coupled with
    dependent components. For example, if the new release depended on a change to
    the database schema and customer data was already stored in the new tables before
    the production failure was discovered, there may be no rollback without losing
    the customer data.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 修复推进应被视为*最后的手段*。如果修复推进是唯一可行的选择，可能是因为你的产品架构与依赖组件耦合过于紧密。例如，如果新版本依赖于数据库架构的更改，并且在发现生产故障之前，客户数据已经存储在新的表中，那么在不丢失客户数据的情况下可能无法回滚。
- en: Changes that are intended to be released in a roll-forward solution should undergo
    the same process as normal releases. *Quick fixes* that may not follow the entire
    process, which may not have the same scrutiny and test coverage, may increase
    the technical debt by introducing errors in other parts of the system.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 打算通过滚动更新发布的变更应遵循与常规发布相同的流程。*快速修复*可能不遵循完整流程，也可能没有同样的审查和测试覆盖，可能会通过在系统其他部分引入错误，增加技术债务。
- en: Summary
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'We examined in this chapter what happens when things go wrong in production.
    We began our chapter by looking at two incidents: the initial release of [healthcare.gov](http://healthcare.gov)
    in 2013 and the Atlassian cloud outage in 2022\. We learned from both incidents
    the importance of prevention and planning for future incidents.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们探讨了生产环境出现问题时的应对。我们通过两个事件开始了本章内容：2013年[healthcare.gov](http://healthcare.gov)的初始发布和2022年Atlassian云宕机。我们从这两个事件中学到预防和规划未来事件的重要性。
- en: We then explored methods of preparation by looking at important parts of the
    discipline of SRE. SRE begins this process by setting the SLIs and SLOs so that
    we have an idea of the tolerance of risk through the error budget. SRE also looks
    at the process of releasing new changes and launching new products.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过查看SRE学科的重要部分，探索了准备工作的方式。SRE通过设定SLI和SLO来开始这一过程，从而让我们通过错误预算了解风险的容忍度。SRE还关注发布新变更和推出新产品的过程。
- en: We looked at practicing for disaster through the discipline of chaos engineering.
    We understood the principles behind the discipline and how to create experiments
    through the Disasterpiece Theater process.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过混沌工程学科练习灾难应对。我们理解了这一学科背后的原则，并学会了如何通过灾难剧场（Disasterpiece Theater）过程来设计实验。
- en: Ultimately, even with adequate preparation, production failures will still happen.
    We looked at the key parts of Google’s incident management process for incident
    management and techniques for resolving incidents, such as rolling back or fixing
    forward.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，即使有充分的准备，生产故障仍然会发生。我们分析了Google事件管理过程中关键部分，并研究了处理事件的技术，如回滚或前向修复。
- en: 'With this, we have completed *Part 1: Approach – A Look at SAFe**®* *and DevOps
    through CALMR*. We will now look at a key activity of DevOps, value stream management,
    in *Part 2: Implement – Moving Toward* *Value Streams*.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 至此，我们已完成*第1部分：方法论 – 通过CALMR看SAFe**®*和DevOps*。接下来，我们将在*第2部分：实施 – 向价值流迈进*中，探讨DevOps的一个关键活动——价值流管理。
- en: Questions
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Test your knowledge of the concepts in this chapter by answering these questions.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答这些问题，测试你对本章概念的理解。
- en: What is an example of an SLI?
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是SLI的例子？
- en: Velocity
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 速度
- en: Availability
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可用性
- en: Cycle time
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 周期时间
- en: Scalability
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可扩展性
- en: If your organization sets up an SLO of 99% availability on a monthly basis,
    what is your error budget if the acceptable downtime is 7.2 hours/month?
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的组织设置了99%可用性的SLO，并且每月的可接受停机时间是7.2小时，那么你的错误预算是多少？
- en: 0.072 hours/month
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 0.072小时/月
- en: 0.72 hours/month
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 0.72小时/月
- en: 7.2 hours/month
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 7.2小时/月
- en: 72 hours/month
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 72小时/月
- en: Which is *NOT* a principle of release engineering?
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个*不是*发布工程的原则？
- en: Self-service model
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自服务模型
- en: High velocity
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高速
- en: Dependent builds
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 依赖构建
- en: Enforcement of policy/procedures
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 政策/程序的执行
- en: Which company created Chaos Monkey and the Simian Army?
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是哪个公司创造了混沌猴和类人猿军团？
- en: Netflix
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Netflix
- en: Google
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Google
- en: Amazon
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊
- en: Apple
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 苹果
- en: Which of these are chaos engineering principles (choose two)?
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪些是混沌工程的原则（选择两个）？
- en: Decentralized decision making
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去中心化决策
- en: Organize around value
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 围绕价值组织
- en: Minimize the experiment’s fallout
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最小化实验的后果
- en: Run the experiment in production
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生产环境中运行实验
- en: Apply systems thinking
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用系统思维
- en: Which role in Google’s incident command system is the primary author of the
    incident state document?
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Google的事件指挥系统中，哪个角色是事件状态文档的主要作者？
- en: Operations lead
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运维负责人
- en: Incident commander
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 事件指挥官
- en: Communications lead
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通讯负责人
- en: Planning/logistics
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 规划/物流
- en: Further reading
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深度阅读
- en: 'Here are some resources for you to explore this topic further:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些资源，供您进一步探索这个话题：
- en: '[https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf](https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf)—*Managing
    Mission-Critical Government Software Projects: Lessons Learned from the Healthcare.gov
    Project* by *Dr. Gwanhoo Lee* and *Justin Brumer*. An interesting look at the
    root causes of the healthcare.gov debacle.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf](https://www.businessofgovernment.org/sites/default/files/Viewpoints%20Dr%20Gwanhoo%20Lee.pdf)——*管理关键任务政府软件项目：来自
    Healthcare.gov 项目的经验教训*，作者为 *Dr. Gwanhoo Lee* 和 *Justin Brumer*。深入探讨了 Healthcare.gov
    灾难的根本原因。'
- en: '[https://www.theatlantic.com/technology/archive/2015/07/the-secret-startup-saved-healthcare-gov-the-worst-website-in-america/397784/](https://www.theatlantic.com/technology/archive/2015/07/the-secret-startup-saved-healthcare-gov-the-worst-website-in-america/397784/)—A
    writeup of the efforts of the Tech Surge and MPL in particular.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.theatlantic.com/technology/archive/2015/07/the-secret-startup-saved-healthcare-gov-the-worst-website-in-america/397784/](https://www.theatlantic.com/technology/archive/2015/07/the-secret-startup-saved-healthcare-gov-the-worst-website-in-america/397784/)——关于
    Tech Surge 和 MPL 特别努力的报道。'
- en: '[https://www.gao.gov/assets/gao-15-238.pdf](https://www.gao.gov/assets/gao-15-238.pdf)—A
    report from the GAO describing the initial problems with the [healthcare.gov](http://healthcare.gov)
    launch and progress toward needed fixes.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.gao.gov/assets/gao-15-238.pdf](https://www.gao.gov/assets/gao-15-238.pdf)——GAO
    报告，描述了 [healthcare.gov](http://healthcare.gov) 启动初期存在的问题以及朝着所需修复的进展。'
- en: '[https://oig.hhs.gov/oei/reports/oei-06-14-00350.pdf](https://oig.hhs.gov/oei/reports/oei-06-14-00350.pdf)—A
    case study of the initial launch of [healthcare.gov](http://healthcare.gov) and
    the changes brought about by Tech Surge that allowed success in subsequent launches.
    Created by the **Office of the Inspector General** (**OIG**) of **Health and Human**
    **Services** (**HHS**).'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://oig.hhs.gov/oei/reports/oei-06-14-00350.pdf](https://oig.hhs.gov/oei/reports/oei-06-14-00350.pdf)——关于
    [healthcare.gov](http://healthcare.gov) 初始启动的案例研究，以及 Tech Surge 带来的变革，这些变革促成了后续版本的成功发布。由
    **卫生与公共服务部**（**HHS**）**监察长办公室**（**OIG**）创建。'
- en: '[https://www.atlassian.com/engineering/post-incident-review-april-2022-outage](https://www.atlassian.com/engineering/post-incident-review-april-2022-outage)—Post-incident
    review of the Atlassian cloud outage from the current CTO, Sri Viswanath.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.atlassian.com/engineering/post-incident-review-april-2022-outage](https://www.atlassian.com/engineering/post-incident-review-april-2022-outage)——由现任
    CTO Sri Viswanath 撰写的 Atlassian 云服务中断后的事后回顾。'
- en: '*Site Reliability Engineering: How Google Runs Production Systems* edited by
    *Betsy Beyer*, *Chris Jones*, *Jennifer Petoff*, and *Niall Richard Murphy*—Reference
    book for SRE detailing principles and essays about SRE topics.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*站点可靠性工程：谷歌如何运行生产系统*，编辑 *Betsy Beyer*、*Chris Jones*、*Jennifer Petoff* 和 *Niall
    Richard Murphy*——关于 SRE 的参考书，详细介绍了 SRE 主题的原则和论文。'
- en: '[https://medium.com/kudos-engineering/managing-reliability-with-slos-and-error-budgets-37346665abf6](https://medium.com/kudos-engineering/managing-reliability-with-slos-and-error-budgets-37346665abf6)—A
    writeup that describes the relationship between SLIs, SLOs, and error budgets.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://medium.com/kudos-engineering/managing-reliability-with-slos-and-error-budgets-37346665abf6](https://medium.com/kudos-engineering/managing-reliability-with-slos-and-error-budgets-37346665abf6)——描述
    SLI、SLO 和错误预算之间关系的文章。'
- en: '[https://www.techrepublic.com/article/aws-outage-how-netflix-weathered-the-storm-by-preparing-for-the-worst/](https://www.techrepublic.com/article/aws-outage-how-netflix-weathered-the-storm-by-preparing-for-the-worst/)—Article
    that describes how Netflix avoided the effects of an AWS outage in September 2015.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.techrepublic.com/article/aws-outage-how-netflix-weathered-the-storm-by-preparing-for-the-worst/](https://www.techrepublic.com/article/aws-outage-how-netflix-weathered-the-storm-by-preparing-for-the-worst/)——描述
    Netflix 如何通过为最坏情况做准备来避免 2015 年 9 月 AWS 中断影响的文章。'
- en: '[https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116)—Blog
    article from Netflix explaining the Simian Army.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116)——Netflix
    博客文章，解释了 Simian Army。'
- en: '[https://principlesofchaos.org](https://principlesofchaos.org)—Repository for
    chaos engineering principles.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://principlesofchaos.org](https://principlesofchaos.org)——混沌工程原则的资源库。'
- en: '*Chaos Engineering: System Resiliency in Practice* by *Casey Rosenthal* and
    *Nora Jones*—Reference for chaos engineering, describing principles and essays
    on creating experiments.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*混沌工程：实践中的系统韧性*，作者 *Casey Rosenthal* 和 *Nora Jones*——混沌工程的参考书，描述了混沌实验的原则和论文。'
- en: '*The Site Reliability Workbook: Practical Ways to Implement SRE* edited by
    *Betsy Beyer*, *Niall Richard Murphy*, *David K. Rensin*, *Kent Kawahara*, and
    *Stephen Thorne*—Reference book for implementing SRE practices.'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《*网站可靠性工作簿：实施SRE的实用方法*》由*Betsy Beyer*、*Niall Richard Murphy*、*David K. Rensin*、*Kent
    Kawahara*和*Stephen Thorne*编辑—实现SRE实践的参考书。
- en: '[https://www.linkedin.com/pulse/service-recovery-rolling-back-vs-forward-fixing-mohamed-el-geish/](https://www.linkedin.com/pulse/service-recovery-rolling-back-vs-forward-fixing-mohamed-el-geish/)—Blog
    article by Mohamed El-Geish that talks about recovery strategies, rolling back,
    and fixing forward.'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.linkedin.com/pulse/service-recovery-rolling-back-vs-forward-fixing-mohamed-el-geish/](https://www.linkedin.com/pulse/service-recovery-rolling-back-vs-forward-fixing-mohamed-el-geish/)—Mohamed
    El-Geish撰写的博客文章，讨论了恢复策略、回滚与前向修复。'
- en: Part 2:Implement – Moving Toward Value Streams
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：实现—迈向价值流
- en: 'In the book *The Phoenix Project: A Novel about IT, DevOps, and Helping your
    Business Win* by Gene Kim, Kevin Behr, and George Spafford, we are introduced
    to the Three Ways. These ways outline how we can shift toward DevOps and CALMR.'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在Gene Kim、Kevin Behr和George Spafford合著的《*凤凰项目：IT、DevOps与帮助你的业务获胜的小说*》一书中，我们介绍了三种方法。这些方法概述了我们如何向DevOps和CALMR转变。
- en: The First Way emphasizes working toward a flow. To do this, we will organize
    and structure along value streams to visualize the steps and people that perform
    those steps. Working as a value stream allows us to optimize the flow. We will
    see how to establish our value streams in *Chapter 7*.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法强调朝着流动的方向努力。为此，我们将围绕价值流进行组织和结构化，目的是可视化执行步骤和参与这些步骤的人。作为一个价值流工作将帮助我们优化流动。在[*第7章*]中，我们将看到如何建立我们的价值流。
- en: After the First Way, we come to the Second Way, which emphasizes the amplification
    of feedback loops. To find our feedback, we look at the metrics that can be used
    to evaluate our value streams in [*Chapter 8*](B18756_08.xhtml#_idTextAnchor183).
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种方法之后，我们来到了第二种方法，重点强调反馈循环的放大。为了找到我们的反馈，我们会查看可以用来评估价值流的指标，在[*第8章*](B18756_08.xhtml#_idTextAnchor183)中有详细介绍。
- en: Finally, we come to the Third Way. The Third Way emphasizes moving to continuous
    experimentation and learning. [*Chapter 9*](B18756_09.xhtml#_idTextAnchor207)
    will discuss what makes an organization that is continuously learning and methods
    for continuous learning to improve your value streams.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来到了第三种方法。第三种方法强调向持续实验和学习转变。[*第9章*](B18756_09.xhtml#_idTextAnchor207)将讨论如何打造一个持续学习的组织，并介绍通过持续学习改进价值流的方法。
- en: This part strives to set up an easy way to achieve Value Stream Management,
    a key practice in DevOps.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分旨在建立一种简单的方法来实现价值流管理，这是DevOps中的关键实践。
- en: 'This part of the book comprises the following chapters:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这部分包含以下章节：
- en: '[*Chapter 7*](B18756_07.xhtml#_idTextAnchor163), *Mapping Your Value Streams*'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B18756_07.xhtml#_idTextAnchor163)，*映射你的价值流*'
- en: '[*Chapter 8*](B18756_08.xhtml#_idTextAnchor183), *Measuring Value Stream Performance*'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B18756_08.xhtml#_idTextAnchor183)，*衡量价值流绩效*'
- en: '[*Chapter 9*](B18756_09.xhtml#_idTextAnchor207), *Moving to the Future with
    Continuous Learning*'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B18756_09.xhtml#_idTextAnchor207)，*通过持续学习迈向未来*'
