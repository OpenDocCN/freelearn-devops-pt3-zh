- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Unpicking Solution Architecture Troubles
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案架构问题
- en: This comprehensive chapter will cover anti-patterns related to your solution
    architecture. We’ll start by looking at anti-patterns related to your choice of
    solutions. Then, we’ll examine things that can go wrong when you do functional
    design. Third, we’ll explore some particular anti-patterns that affect customizations,
    first at the conceptual level and then at the code level. We’ll end this chapter
    by summarizing the key takeaways.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖与你的解决方案架构相关的反模式。我们将从选择解决方案相关的反模式开始。然后，我们将探讨功能设计时可能出现的问题。第三，我们将探讨一些影响定制的特定反模式，首先是概念层面上的，然后是代码层面上的。我们将在本章的最后总结关键要点。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: How to avoid picking the wrong solutioning approach by basing it on bad research
    and analysis
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何避免通过基于不良研究和分析选择错误的解决方案方法
- en: Why your assumptions can lead you astray and make your architecture and design
    go off the rails
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么你的假设可能会误导你，使你的架构和设计走偏
- en: What can go wrong when you apply good features in a bad way and how to use good
    governance to overcome this problem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在错误的方式下应用好的功能可能会出问题，如何通过良好的治理来克服这个问题
- en: How classic code anti-patterns also find their way into Salesforce implementations
    and how you can design your code with better structure and patterns
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经典的代码反模式如何也会出现在Salesforce的实现中，以及你如何设计更有结构和模式的代码
- en: After completing this chapter, you’ll have a good idea of how to avoid common
    anti-patterns when designing solutions on Salesforce and what steps you can take
    to use the right solution for the right problem.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章后，你将对如何在Salesforce上设计解决方案时避免常见的反模式有一个很好的了解，并且知道可以采取哪些步骤来为合适的问题使用正确的解决方案。
- en: Picking the wrong thing
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择错误的方案
- en: This section will explore how seemingly small decisions in solution selection
    can have far-reaching consequences for your Salesforce implementation. We’ll look
    at two anti-patterns related to picking the wrong solution based on considerations
    that aren’t technically relevant. We’ll start by examining what goes wrong when
    you ignore the wider ecosystem.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将探讨解决方案选择中看似微小的决策如何对你的Salesforce实施产生深远的影响。我们将看两个与选择错误解决方案相关的反模式，这些反模式基于一些与技术无关的考虑。我们将首先探讨当你忽视更广泛的生态系统时会出现什么问题。
- en: Ignoring the Ecosystem
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽视生态系统
- en: '*Willfully ignoring third-party options in favor of in-house solutions can
    become an anti-pattern.*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*故意忽视第三方选项而偏向内部解决方案可能会变成反模式。*'
- en: Example
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: SafeCo is a major insurance company that provides a variety of policies to the
    mass consumer market. It has a large customer service organization for which it’s
    in the last stages of rolling out Salesforce Service Cloud to achieve a 360-degree
    view of customer inquiries.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SafeCo是一家大型保险公司，为大众消费者市场提供各种保险产品。它拥有一个庞大的客户服务组织，目前正在最后阶段推出Salesforce Service
    Cloud，以实现对客户咨询的360度全景视图。
- en: 'Royce is a manager within SafeCo’s IT department and has been tangentially
    related to the Service Cloud project. However, now, he has been tasked with leading
    a team that has been asked to find good answers to several new generic requirements
    that have come up during the project but were left out of the initial scope, as
    outlined here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Royce是SafeCo公司IT部门的经理，曾间接参与过Service Cloud项目。然而，现在，他被指派领导一个团队，该团队的任务是找到几个新出现的通用需求的合适解决方案，这些需求在项目初期的范围之外，如下所示：
- en: First, SafeCo, on learning more about Salesforce, has decided that it needs
    a backup solution to be in place as it doesn’t want to rely on the rather limited
    out-of-the-box offerings
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，SafeCo在进一步了解Salesforce后，决定需要一个备份解决方案，因为他们不想仅仅依赖有限的开箱即用功能
- en: Second, while policy documents are generated by a **line-of-business** ( **LOB**
    ) system, stakeholders have identified a need for printing several standard letters
    for customers, which should be done directly from the Salesforce UI
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，虽然政策文件是由**业务线**（**LOB**）系统生成的，但相关方已经发现有必要直接从Salesforce UI打印几封标准客户信件。
- en: Finally, within the IT department, several people have asked whether they could
    have a project management tool on Salesforce as they think it would be a good
    platform for collaborating with business users
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，在IT部门中，有几个人询问是否可以在Salesforce上使用项目管理工具，因为他们认为这将是与业务用户协作的一个好平台。
- en: Royce starts by addressing the most pressing issue of backup. He’s generally
    aware that there are several solutions to this problem on AppExchange, but after
    having a brief look, he finds them too expensive and complicated. Besides, SafeCo
    already has a backup infrastructure in place for other systems. Royce gets a developer
    in the IT department to write a script to copy Salesforce objects one to one to
    a **Structured Query Language** ( **SQL** ) database by exporting them to CSV
    files and then using a standard batch process for the import. From there, the
    data can be backed up using the standard SafeCo backup solution.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Royce 开始着手解决最紧迫的备份问题。他大致知道在 AppExchange 上有几种解决方案可以解决这个问题，但在简要查看之后，他发现它们太贵且过于复杂。而且，SafeCo
    已经为其他系统建立了备份基础设施。Royce 请 IT 部门的开发人员写了一个脚本，将 Salesforce 对象一对一地复制到**结构化查询语言**（**SQL**）数据库中，方法是将它们导出为
    CSV 文件，然后使用标准批处理过程进行导入。然后，可以使用 SafeCo 的标准备份解决方案对数据进行备份。
- en: Document generation is another area where Royce is aware that several third-party
    solutions exist. However, there’s also some internal document generation capability
    in the corporate **document management system** ( **DMS** ), and that’s where
    he starts looking. While the solution isn’t perfect, the DMS team can provide
    the capability by accepting the request for document generation via a web service,
    which puts the request in a queue that’s regularly emptied by a batch job that
    generates documents and puts them in a file share. From there, another job picks
    them up and uploads them back into Salesforce. It’s a little slow and clunky,
    but it should be OK.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 文档生成是另一个 Royce 知道有多个第三方解决方案存在的领域。然而，企业的**文档管理系统**（**DMS**）也有一些内部的文档生成能力，这正是他开始关注的地方。虽然解决方案并不完美，但
    DMS 团队可以通过接受一个 web 服务请求来提供该能力，该请求将被放入队列中，而队列会定期被一个批处理作业清空，生成文档并将其放入文件共享中。然后，另一个作业会取出这些文档并将其上传回
    Salesforce。这个过程稍显缓慢且笨拙，但应该还可以。
- en: For the project management module, Royce has some good luck. Over a weekend,
    one of his team puts together a small application that seems to demonstrate a
    lot of the functionality SafeCo will need. He reckons that in a few weeks, he
    can develop something that will be good enough to roll out to the business. Royce
    takes the win and decides to go with it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于项目管理模块，Royce 运气不错。在一个周末，他的团队中的一名成员整理出一个小应用程序，似乎展示了 SafeCo 所需要的许多功能。他估计在几周内，他可以开发出足够好的东西，足以推广到业务中。Royce
    赢得了这一小胜，并决定采用它。
- en: Royce now has his solutions, and he pushes his team hard to get them ready on
    time for the global service rollout. However, while nothing catastrophically fails,
    there are quite a few problems to contend with. The backup script works well,
    but when they test full and partial restores in both new and partial environments,
    they run into a massive and unexpected level of complexity. They abandon the **business
    continuity** ( **BC** ) test and make a plan to develop some more elaborate restore
    scripts at a later date.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Royce 已经有了解决方案，他督促团队加快进度，确保按时完成全球服务的上线。然而，尽管没有出现灾难性的故障，但仍然有不少问题需要应对。备份脚本工作正常，但在新环境和部分环境中进行完整和部分恢复测试时，他们遇到了一个巨大的、意料之外的复杂性。他们放弃了**业务连续性**（**BC**）测试，并计划稍后开发一些更复杂的恢复脚本。
- en: As expected, there are some complaints about the slow speed of document generation,
    but the worst problem turns out to be template management, which Royce hadn’t
    considered in detail during his analysis. It turns out that templates change frequently,
    and with the new solution, all template changes have to be done by someone in
    the DMS team. That makes the customer service team quite irritated.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期所示，关于文档生成速度慢有一些抱怨，但最严重的问题是模板管理，这一点 Royce 在分析时并未详细考虑。事实证明，模板变动频繁，而在新方案中，所有模板的更改必须由
    DMS 团队中的某人来完成，这让客户服务团队感到相当恼火。
- en: The project management application is rolled out without major problems, but
    the response is underwhelming. There are several bugs and misunderstandings, and
    in general, the team was expecting to see several features that haven’t been included.
    As a result, adoption across teams is lackluster.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 项目管理应用程序顺利推出，没有出现重大问题，但反响平淡。出现了几处漏洞和误解，总体来说，团队原本期待的几个功能并没有包含在内。因此，各团队的采用情况不太理想。
- en: Royce takes a breath. While everything sort of works, there are a lot of issues.
    Royce wonders whether he might have missed something in the process, but it’s
    time to close the project and move on.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Royce 深吸一口气。尽管一切大致正常，但存在很多问题。Royce 想知道自己是否在过程中错过了什么，但现在是时候结束这个项目，继续前进了。
- en: Problem
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The problem that was addressed in the *Ignoring the ecosystem* section is how
    to handle common capabilities related to the main requirements of implementation,
    but not strictly part of the core requirements. These include common backup and
    restore, document management and generation, automating the deployment pipeline,
    dispatching logs to a central log server, and a range of similar requirements.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在*忽视生态系统*部分中解决的问题是如何处理与实施主要需求相关的常见功能，但这些功能不完全是核心需求的一部分。这些功能包括常见的备份和恢复、文档管理和生成、自动化部署流水线、将日志发送到中央日志服务器以及一系列类似的需求。
- en: 'For this type of requirement (and many others to boot), a large number of third-party
    solutions exist on AppExchange that solve this particular need generically, as
    depicted in the following screenshot. In addition, many Salesforce consulting
    partners have standard approaches that involve using accelerators or internal
    assets, which can also help with this sort of requirement:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种类型的需求（以及许多其他需求），AppExchange 上存在大量第三方解决方案，它们通用地解决了这个特定的需求，如下图所示。此外，许多 Salesforce
    咨询合作伙伴也有标准方法，其中包括使用加速器或内部资产，这些也能帮助解决此类需求：
- en: '![Figure 5.1 – AppExchange’s Top Categories section](img/B30991_05_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.1 – AppExchange 的顶级类别部分](img/B30991_05_01.jpg)'
- en: Figure 5.1 – AppExchange’s Top Categories section
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – AppExchange 的顶级类别部分
- en: With this anti-pattern, you can ignore these options to the point of not even
    looking at them seriously.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种反模式，你可以忽略这些选项，甚至不认真考虑它们。
- en: Proposed solution
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: When you ignore the ecosystem, you actively disregard third-party options for
    generic requirements and instead move ahead with bespoke or in-house solutions
    to common capabilities. While there can be legitimate reasons for a bespoke answer
    to a generic requirement – for instance, if you have a highly developed infrastructure
    for some capability that you want to leverage across all enterprise systems –
    not making a reasoned comparison with the available commercial options is an anti-pattern
    and goes against the core philosophy of Salesforce.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当你忽视生态系统时，你主动忽略了通用需求的第三方选项，而是继续采用定制或内部解决方案来处理常见功能。尽管对于通用需求采用定制答案是有正当理由的——例如，如果你拥有某项功能的高度开发基础设施，想要在所有企业系统中使用它——但如果不与现有的商业选项进行理性比较，这就是一种反模式，并且违背了
    Salesforce 的核心理念。
- en: That’s to say, an anti-pattern arises when you don’t make a considered build-versus-buy
    decision for important but generic capabilities and instead reflexively embrace
    an in-house approach, whether because of the “not invented here” syndrome or because
    it’s cognitively easier to handle for your organization’s key stakeholders. This
    also often happens when users know other platforms and want you to rebuild their
    functionality on Salesforce.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，当你没有为重要但通用的功能做出经过深思熟虑的构建与购买决策，而是本能地选择内部解决方案时，就会出现反模式——无论是因为“这里没发明”症候群，还是因为这样对组织的关键利益相关者来说更容易处理。当用户熟悉其他平台并希望你在
    Salesforce 上重建其功能时，这种情况也经常发生。
- en: Again, that isn’t to say that a build approach is never valid for these capabilities.
    But in my experience, you’re highly likely to underestimate the complexity and
    ongoing costs related to these kinds of builds and will probably end up with less
    functionality for more money than your business case said.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这并不是说在这些能力上构建的方法永远无效。但根据我的经验，你很可能低估这些构建所涉及的复杂性和持续成本，并且最终可能会得到更少的功能，却花费比业务案例中预期的更多的钱。
- en: Results
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'The results of ignoring the ecosystem are generally quite predictable. However,
    at the detailed level, they’ll vary by the capability under consideration. At
    a higher level of abstraction, however, they tend to be as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 忽视生态系统的结果通常是可以预测的。然而，在详细层面，它们会根据所考虑的能力有所不同。然而，在更高的抽象层次上，它们往往如下所示：
- en: A less capable solution that meets fewer requirements than what you could have
    obtained for a similar cost in the ecosystem
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个功能较弱的解决方案，它满足的需求比你在生态系统中以类似成本能获得的要少。
- en: Fewer new features are added to the capability over time, often at higher maintenance
    costs than the run-rate cost of the third-party solution
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着时间的推移，增加到该功能的新特性越来越少，且其维护成本往往高于第三方解决方案的常规成本。
- en: The need to maintain an additional skillset and knowledge base for the development
    and maintenance of the in-house capability
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要为开发和维护内部能力而维持额外的技能和知识储备。
- en: A higher degree of coupling between the new capability and the existing system
    than if you had used a third-party solution
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新功能与现有系统之间的耦合度比使用第三方解决方案时要高。
- en: The cost picture can be complicated, but building a generic capability yourself
    rarely results in a significant saving
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本情况可能复杂，但自己构建一个通用能力通常不会带来显著的节省。
- en: All in all, the results are rarely catastrophic, but commonly, the resulting
    solutions are worse than third-party equivalents and achieved with greater pain
    and risk.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，结果很少是灾难性的，但通常，最终的解决方案比第三方的同类产品更差，而且是以更大的痛苦和风险达成的。
- en: Better solutions
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: There’s just one general piece of advice to keep in mind to avoid this anti-pattern,
    although implementing it can be a challenge, and that’s to make a considered and
    well-reasoned build-versus-buy decision whenever you encounter relatively commonplace
    capability requests.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个普遍的建议需要记住，以避免这种反模式，尽管实施它可能是一个挑战，那就是在遇到相对常见的功能需求时，做出经过深思熟虑且有充分理由的“构建与购买”决策。
- en: A more thorough evaluation of AppExchange solutions is crucial for organizations
    such as SafeCo. By carefully assessing various options, companies can uncover
    tools that not only align with their unique requirements but also offer additional
    features and ongoing support. This proactive approach can lead to significant
    time and resource savings in the long run, ensuring that the selected solution
    fosters business growth and operational efficiency effectively.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对 AppExchange 解决方案的更全面评估对于像 SafeCo 这样的组织至关重要。通过仔细评估各种选项，公司可以发现不仅符合其独特需求的工具，还能提供额外功能和持续支持。这种积极的方式可以在长远来看节省大量时间和资源，确保所选解决方案有效促进业务增长和运营效率。
- en: 'To do this, you should do the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你应该做以下几点：
- en: Carefully explore ecosystem alternatives, both on AppExchange and things that
    are available directly from your Salesforce partners.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仔细探索生态系统的替代方案，包括在 AppExchange 上的选项以及来自 Salesforce 合作伙伴的直接解决方案。
- en: Engage actively with vendors; often, they’re more willing to consider your unique
    concerns than you might think.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 积极与供应商互动；他们通常比你想象的更愿意考虑你的独特问题。
- en: Outline the potential options in enough detail to make a reasoned decision,
    remembering to include architectural, operational, and commercial considerations.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细列出潜在选项，以便做出有根据的决策，记得包括架构、运营和商业考虑因素。
- en: Count the **total cost of ownership** ( **TCO** ) when outlining the internal
    options. Often, operational, maintenance, and further development costs are undercounted
    in these types of comparisons.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列出内部选项时，计算**总拥有成本**（**TCO**）。在这类比较中，运营、维护和进一步开发成本通常被低估。
- en: Drive a hard commercial bargain with third-party vendors – you can often get
    quite significant discounts. Conduct regular **ecosystem audits** to stay informed
    about new AppExchange offerings that could replace or enhance custom solutions,
    potentially reducing technical debt. Additionally, regularly review existing solutions
    to identify opportunities for optimization and to be able to integrate new tools
    that align with business needs.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与第三方供应商进行艰难的商业谈判——你通常能获得相当可观的折扣。定期进行**生态系统审计**，保持对新 AppExchange 产品的了解，以替代或增强自定义解决方案，可能减少技术债务。此外，定期审查现有解决方案，寻找优化机会，并能够集成与业务需求相符的新工具。
- en: Having looked at the consequences of ignoring the ecosystem, let’s consider
    the consequences of fitting your solution to your licenses, rather than your licenses
    to your solution.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在审视忽视生态系统的后果后，让我们考虑将解决方案与许可相适配，而不是将许可与解决方案相适配的后果。
- en: License-Based Solutioning
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于许可的解决方案
- en: '*Creating a solution based on a license set that you can afford rather than
    the license set you really need without making the* *necessary compromises.*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*基于你能够负担的许可集而非真正需要的许可集来创建解决方案，而不做出* *必要的妥协*。'
- en: Example
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Alexis is the lead architect for a major Salesforce partner working directly
    with Salesforce on a deal for the Department of Social Welfare in the mid-sized
    European country Ruritania. The department services millions of residents and
    has a staff of several thousand caseworkers spread approximately 50/50 between
    a central HQ and several hundred local offices. They’re adopting Salesforce as
    a case management platform for a new high-profile initiative to help families
    hurt by the increasing cost of living.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Alexis是Salesforce一家主要合作伙伴的首席架构师，直接与Salesforce合作，处理位于中等规模的欧洲国家Ruritania的社会福利部的一个项目。该部门为数百万居民提供服务，拥有几千名社会工作者，分布在总部和几百个地方办事处之间，大约是50/50的比例。他们正在将Salesforce作为案件管理平台，用于一个旨在帮助因生活成本不断上升而受困的家庭的新高调倡议。
- en: As part of the deal, the Salesforce **account executive** ( **AE** ) pushed
    very hard for a licensing model that gave the HQ users a full Salesforce license,
    but only a Customer Community Plus license for the users in the local offices.
    He argued that as the local officers were technically members of the local municipalities,
    this would be acceptable under the Salesforce licensing terms and would give a
    more acceptable license cost for the client.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 作为协议的一部分，Salesforce的**客户代表**（**AE**）强烈推动了一种许可模式，使得总部用户可以拥有完整的Salesforce许可证，而地方办事处的用户仅拥有Customer
    Community Plus许可证。他认为，由于地方办事处的工作人员技术上是当地政府的成员，根据Salesforce的许可条款，这种方式是可以接受的，并且能够为客户提供更为可接受的许可证费用。
- en: The implication, as Alexis is quick to point out, is that caseworkers will be
    working in two different interfaces, one internal and one external, based on a
    community. However, the AE argues that the differences are minor and that most
    of the work that’s been done for the internal interface can be replicated directly
    in the community.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Alexis迅速指出的一个含义是，社会工作者将基于社区在两个不同的界面中工作，一个是内部界面，一个是外部界面。然而，AE认为这些差异很小，大部分为内部界面所做的工作可以直接在社区中复制。
- en: While that’s generally true, as work continues, many subtle differences start
    to have an impact. There are differences in what Customer Community Plus users
    can have access to within the system and also differences in which things can
    be exposed on a Lightning page versus a Community page and how this can be done.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然一般来说这是正确的，但随着工作持续进行，许多微妙的差异开始产生影响。系统中客户社区Plus用户能够访问的内容有所不同，此外，在Lightning页面和社区页面上可以显示的内容以及如何显示也存在差异。
- en: This situation forces increasing amounts of functionality into custom code,
    especially into a collection of small **Lightning Web Components** ( **LWC** )
    to accommodate the two interfaces. Furthermore, all test cases need to be written
    and executed twice, once for each interface, adding considerable overhead.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况迫使越来越多的功能被转移到自定义代码中，特别是转移到一系列小型**Lightning Web Components**（**LWC**）中，以适应这两个界面。此外，所有测试用例需要编写并执行两遍，每个界面各一次，这增加了相当大的工作量。
- en: When it comes to rolling out the application, they also need to create two versions
    of the documentation, the training materials, and the actual user training. Alexis
    also flags that her company will need to increase the application maintenance
    fee as there’s a lot more customization to maintain and many future changes will
    need to be done in two versions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序推出时，他们还需要创建两个版本的文档、培训材料和实际的用户培训。Alexis还指出，她的公司将需要提高应用程序的维护费用，因为维护的自定义功能更多，而且未来的许多更改都需要在两个版本中进行。
- en: The users are generally happy with the new application, but a lot of communication
    errors and mistakes are caused by the differences in the interface between the
    local offices and the HQ. The financial director within the Department of Social
    Welfare is also unhappy with the increase in implementation cost and application
    maintenance he has seen, something he doesn’t feel is fully compensated by the
    lower license cost.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 用户总体上对新应用程序感到满意，但由于地方办事处和总部之间界面的差异，很多沟通错误和失误发生。社会福利部的财务主管也对实施成本和应用程序维护费用的增加感到不满，他认为这并未完全通过较低的许可证费用得到补偿。
- en: Problem
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The problem that’s addressed by license-based solutioning is an old chestnut.
    How do we deliver all the required functionality within the cost envelope we’ve
    been given? If you’ve never had to struggle with fitting user demands to a budget
    that’s just too small for your level of ambition, I want to know where you work
    so I can apply.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基于许可证的解决方案解决的问题是一个老生常谈的问题：如何在我们给定的成本范围内交付所有必需的功能？如果你从未经历过将用户需求与预算紧张的情况相匹配的挣扎，我想知道你在哪里工作，我好去应聘。
- en: 'It’s nearly universally true that stakeholders would like more features than
    they have money to buy. One way to try to get around this is to try to carefully
    optimize the licenses you buy to get the best value for money. This is called
    license optimization and is an essential skill set on the Salesforce platform.
    An overview of the Salesforce license model is shown in the following diagram:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎普遍适用的是，利益相关者希望拥有更多的功能，但他们的预算却不足以购买这些功能。为了解决这个问题，一种方法是尽可能优化购买的许可证，以获得最佳的性价比。这被称为许可证优化，是Salesforce平台上的一项基本技能。以下是Salesforce许可证模型的概览：
- en: '![Figure 5.2 – Salesforce license model](img/B30991_05_02.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – Salesforce 许可证模型](img/B30991_05_02.jpg)'
- en: Figure 5.2 – Salesforce license model
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – Salesforce 许可证模型
- en: License-based solutioning turns this commendable practice into an anti-pattern
    by specifying which licenses can be afforded and then shoehorning the rest of
    the solution to make it fit.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 基于许可证的解决方案通过明确哪些许可证是可负担的，并将解决方案的其他部分强行调整以使其适应，反而将这一可取的做法变成了反模式。
- en: Proposed solution
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: License-based solutioning proposes to make an affordable license mix work for
    a given set of requirements by using workarounds and custom functionality to fill
    the gap between the required license type and the license type you can afford.
    This means that you engage in this anti-pattern when there’s a standard license
    type that would meet the user requirements, but you instead choose to go with
    a bespoke or partially bespoke solution that somehow bridges the functionality
    that’s available in the license you have and the license you want.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 基于许可证的解决方案提议通过使用变通方法和自定义功能来填补所需许可证类型与可负担许可证类型之间的差距，从而为给定的一组需求创造一个可负担的许可证组合。这意味着，当存在一个标准的许可证类型可以满足用户需求时，你却选择采用一个定制或部分定制的解决方案，试图在你拥有的许可证功能和你希望拥有的许可证功能之间架起桥梁。
- en: 'Here are a few common examples:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些常见的示例：
- en: Using community licenses for internal users – although just external enough
    for there not to be a blatant breach of terms – who ideally would use the internal
    UI if it were not too expensive
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为内部用户使用社区许可证——虽然这些用户外部足够，不至于明显违反条款——如果不是因为价格过高，他们理想情况下会使用内部UI
- en: Using shadow objects to replicate standard objects that aren’t covered by your
    license type – for instance, having a shadow case object bi-directionally replicating
    the information from Case to allow internal caseworkers to have a cheaper platform
    license
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用影像对象来复制未涵盖的标准对象——例如，拥有一个影像案例对象，通过双向复制Case中的信息，以便内部案例工作人员能够使用更便宜的平台许可证
- en: Replicating key features from industry clouds – for example, Action Plans –
    because of an unwillingness to adopt additional licenses
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制行业云中的关键功能——例如，行动计划——因为不愿意采用额外的许可证
- en: License sharing between different users that have the same organizational role,
    circumventing terms and security
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有相同组织角色的不同用户之间共享许可证，规避条款和安全性。
- en: Using cheaper solutions for some features – for example, using a WordPress site
    instead of a community to save license costs and then syncing the data between
    the site and Salesforce
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对某些功能使用更便宜的解决方案——例如，使用WordPress网站代替社区来节省许可证费用，然后在网站和Salesforce之间同步数据
- en: While there can be a commercial rationale for these practices, from a technical
    perspective, they’re undoubtedly maladaptive.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些做法在商业上可能有其合理性，但从技术角度来看，它们无疑是适应不良的。
- en: Results
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'The results can vary depending on the specific use case, but often, they include
    things such as the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可能会根据具体的使用案例有所不同，但通常包括以下几种情况：
- en: Increased need for custom work to compensate for the lack of license features
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要更多的自定义工作以弥补许可证功能的不足
- en: Overall increased complexity of the solution to make the different parts fit
    together reasonably
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了使不同部分合理地融合在一起，解决方案的整体复杂性增加
- en: More maintenance going forward as a result of the increased custom work and
    increased overall complexity
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于定制工作增加和整体复杂性增加，未来的维护工作会更多。
- en: Reduction in value from future feature upgrades as you’ll need to consider the
    added customization work
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于你需要考虑增加的定制工作，未来功能升级的价值会减少。
- en: Reduced security from license sharing or reusing a single license for many functions
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于共享许可或重用单一许可处理多个功能，安全性可能降低。
- en: Increased technical debt may arise from the implementation of workarounds and
    custom solutions designed to circumvent license limitations. These practices can
    lead to significant long-term maintenance costs as they often require additional
    resources to manage and support, further complicating the technical landscape.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因为实施解决变通方案和定制解决方案来绕过许可限制，可能会带来增加的技术债务。这些做法可能导致显著的长期维护成本，因为它们通常需要额外的资源来管理和支持，进一步增加了技术复杂性。
- en: This can leave you in a gray area vis-à-vis Salesforce as the licensing agreement
    isn’t easy for laypeople to interpret and Salesforce isn’t transparent about how
    it enforces the terms in cases where there’s considerable ambiguity.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会让你处于一个与Salesforce的灰色地带，因为许可协议对外行人来说不容易理解，而且Salesforce在如何执行条款方面并不透明，特别是在存在相当模糊的情况下。
- en: That being said, from a TCO perspective, it’s sometimes true that you might
    be better off not buying the licenses and doing custom work instead. Salesforce
    licenses are expensive, and if you only need a little bit of what’s included in
    a feature license, you may be able to rebuild it for a lower price.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，从TCO（总拥有成本）角度来看，有时确实是你最好选择不购买许可，而是做定制工作。Salesforce的许可费用昂贵，如果你只需要功能许可中包含的一小部分内容，你可能能够以较低的价格重新构建它。
- en: However, my advice would be to avoid this if at all possible and instead seek
    an alternative option, as we’ll discuss in the next section.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我的建议是尽可能避免这样做，而是寻求替代选项，正如我们将在下一节中讨论的那样。
- en: Better solutions
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: In general, you’re better off trying to negotiate a better deal with Salesforce,
    looking at third-party options for the specific functionality you need, or reengineering
    the solution to avoid the specific features you need either by changing the scope
    or redefining who needs which feature license.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，你最好是尝试与Salesforce谈判获得更好的交易，寻找第三方解决方案来满足你所需的特定功能，或者重新设计解决方案，避免使用你需要的特定功能，方法是改变范围或重新定义谁需要哪个功能许可。
- en: 'Let’s look at these in turn:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一看这些：
- en: Your first port of call, when faced with unaffordable licenses, should be to
    push your Salesforce AE harder. They often have considerable leeway to offer discounts,
    especially if we’re talking about a new license type or you’re willing to commit
    to a longer period for the deal. It also helps to push shortly before the end
    of Salesforce’s financial quarters.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当面临无法负担的许可费用时，你的首选应该是更加强硬地推动你的Salesforce客户经理。他们通常有相当大的灵活性可以提供折扣，尤其是当我们讨论的是新类型的许可，或者你愿意承诺在交易中更长的周期时。在Salesforce财务季度结束前推动谈判也会有所帮助。
- en: Second, you should look at third-party options. You can look at AppExchange
    to see if a less expensive product might meet your needs, or you can ask your
    implementation partners if they have assets you might be able to leverage.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二，你应该考虑第三方解决方案。你可以查看AppExchange，看看是否有价格更低的产品满足你的需求，或者你可以询问你的实施伙伴是否有可用的资产可以利用。
- en: Third, you can go back to the business and ask them to reprioritize features
    so that you can either cut something else to make space for the licensing cost
    or remove features that require the extra license.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三，你可以返回公司，请他们重新优先排序功能，以便你可以削减其他内容以腾出空间来支付许可费用，或者删除需要额外许可的功能。
- en: Fourth, you can go back and do another round of license optimization where you
    go through the details of the proposed licensing and see where you can cut specific
    licenses for specific users. Often, some licenses are must-haves for some users,
    but only nice to have for others.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四，你可以返回并进行另一轮许可优化，详细审查拟议的许可，并查看你能在哪里为特定用户减少特定许可。通常，某些许可对某些用户来说是必须的，但对其他用户则只是可选的。
- en: 'If you can’t find a good solution and have to go ahead with this anti-pattern,
    be sure to do so with an awareness of the real cost and risk involved. That being
    said, let’s proceed to our next anti-pattern: *assumption-driven customization*
    .'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你找不到好的解决方案，必须按照这种反模式进行，务必意识到其中涉及的实际成本和风险。话虽如此，让我们继续讨论下一个反模式：*假设驱动的定制*。
- en: Applying the thing wrong
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 错误地应用方案
- en: In this section, we’ll consider two anti-patterns where we get unsatisfactory
    solutions based on a failure of the assumptions we bring to the table. These assumptions
    can be either about user needs or the capabilities of our technology – both can
    lead to trouble.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将考虑两种反模式，这些反模式基于我们带到桌面上的假设失败，导致了不满意的解决方案。这些假设可能是关于用户需求或我们技术的能力——这两者都可能导致问题。
- en: Assumption-Driven Customization
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 假设驱动的定制化
- en: Letting the assumptions of a small, unrepresentative group stand in for the
    needs of the wider user base.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让一个小而不具代表性的群体的假设来代替更广泛用户群体的需求。
- en: Example
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Helene is the product owner for a new initiative to roll out Health Cloud within
    LifeCo, a major provider of medical devices for monitoring certain chronic diseases.
    In addition to the Health Cloud rollout, LifeCo is also developing a custom care
    application that will be used by **healthcare professionals** ( **HCPs** ), principally
    nurses, working in clinics associated with LifeCo’s care programs.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Helene 是 LifeCo 一项新计划的产品负责人，负责推出 Health Cloud，这是 LifeCo 一家主要的慢性病监测医疗设备供应商。除了
    Health Cloud 的推广外，LifeCo 还在开发一款定制的护理应用程序，主要供**卫生保健专业人员**（**HCPs**）使用，尤其是为 LifeCo
    护理项目提供服务的诊所中的护士使用。
- en: Helene was a nurse for several years before entering the IT field after working
    as a **subject matter expert** ( **SME** ) on a few major IT products. Therefore,
    she feels that she has a strong grasp of the requirements and also has several
    friends, still working as nurses, who she uses as sounding boards.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Helene 曾是一名护士，后来转入 IT 领域，并且曾担任过几款主要 IT 产品的**主题专家**（**SME**）。因此，她认为自己对需求有很强的理解，并且有几位仍在当护士的朋友，作为她的反馈渠道。
- en: After some internal discussions, Helene has decided to deliver the application
    as an application optimized for the kinds of tablet computers she knows are common
    within the clinics. This will allow HCPs to note down information relevant to
    the care programs as they interact with patients.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在经过一些内部讨论后，Helene 决定将应用程序交付为一种优化了平板电脑使用的应用程序，因为她知道平板电脑在诊所中很常见。这将允许卫生保健专业人员在与患者互动时记录与护理项目相关的信息。
- en: The team develops an attractive and highly functional tablet application that
    meets all of the key requirements Helene has identified. In initial user testing
    with a friendly audience, the application receives great praise, and everyone
    is looking forward to the production rollout.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 团队开发了一个既具有吸引力又功能强大的平板应用程序，满足了 Helene 确定的所有关键需求。在与友好的用户群体进行初步测试时，该应用程序受到了高度评价，大家都期待着正式推广。
- en: However, as they start to plan the rollout, many clinics push back and refuse
    to implement the new application. After digging into the issue, it turns out that
    staff in many clinics, while they have tablet devices available, prefer not to
    use them directly with patients as they feel it hampers the interaction.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当他们开始计划推广时，许多诊所却反对并拒绝实施新的应用程序。经过调查，问题的根源在于，尽管许多诊所的工作人员有平板设备可用，但他们不愿意直接在与患者互动时使用它们，因为他们觉得这会妨碍互动。
- en: For other HCPs, the idea of capturing the data directly while with the patient
    goes against a longstanding practice of collecting information in paper notes
    during the day and then typing it into the system after hours, using a PC with
    an interface highly optimized for rapid data entry. The HCPs feel that switching
    to the new system would force them to spend more time on data entry and decrease
    the impact of patient contact.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他卫生保健专业人员（HCPs）来说，在与患者的互动中直接录入数据与他们长期以来的做法相违背——他们习惯于白天用纸质笔记收集信息，然后在下班后通过PC录入系统，这些PC的界面经过高度优化，便于快速录入数据。这些卫生保健专业人员觉得转用新系统会让他们花更多时间在数据录入上，从而减少与患者接触的时间。
- en: Helene has a long list of counterarguments to address the concerns raised by
    the HCPs and strongly feels that with a modicum of training and process change,
    the end users will come to see how the new application can significantly improve
    their working practices. However, she’s met with the unfortunate fact that none
    of the clinics refusing to adopt the new application is owned directly by LifeCo,
    so there’s no way to force them to change.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Helene 有一长串反驳意见，来回应卫生保健专业人员提出的担忧，她坚信通过适当的培训和流程变更，最终用户将会看到新应用程序如何显著改善他们的工作实践。然而，她遇到了一个不幸的事实：拒绝采用新应用程序的诊所都不是
    LifeCo 直接拥有的，所以无法强制它们进行改变。
- en: This presents a major issue to LifeCo as this means they have to keep the old
    system for managing care programs live and that they’ll have two separate databases
    of care information being used at the same time, causing serious consolidation
    issues. Helene is pushed to find a quick solution that will satisfy the hold-out
    clinics.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这对LifeCo来说是一个重大问题，因为这意味着他们必须保持旧的护理项目管理系统运行，并且将同时使用两个不同的护理信息数据库，这会导致严重的整合问题。Helene被迫寻找一个快速的解决方案，以满足那些拒绝使用的诊所。
- en: This misalignment between the solution and actual user needs not only affected
    adoption rates but also led to significant declines in productivity. Users, struggling
    to navigate an unsuitable system, resorted to finding workarounds that enabled
    them to perform their tasks, but these alternative methods introduced inconsistencies
    and errors in data management. Consequently, the reliance on informal processes
    diminished data integrity and reliability, which further complicated decision-making
    and impaired overall organizational effectiveness.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案与实际用户需求之间的这种不对齐，不仅影响了采用率，还导致了生产力的显著下降。用户在挣扎于操作一个不适合的系统时，采取了寻找变通方法的方式来完成任务，但这些替代方法却在数据管理中引入了不一致性和错误。因此，依赖于非正式流程降低了数据的完整性和可靠性，进一步复杂化了决策过程，并损害了整体组织的效率。
- en: In the end, she has to relent. She sits down with her team to see what can be
    done to create a version of the application that can be used from a PC. They quickly
    port the key functionality and release a barebones version to the clinics that
    have declined to accept the tablet application. While it gets a lukewarm response,
    at least no one refuses to use it this time.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，她不得不妥协。她和团队一起坐下来，看看能做些什么，以创建一个可以在PC上使用的应用程序版本。他们迅速移植了关键功能，并发布了一个简化版本给那些拒绝接受平板应用程序的诊所。虽然反应冷淡，但至少这次没有人拒绝使用它。
- en: Problem
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The thing with assumption-driven customization is that it’s less than the problem
    it’s trying to solve – it could theoretically be anything – and more about the
    way you’re trying to solve it. With assumption-driven customization, you’re trying
    to solve a problem as defined by your product management, product owners, or developers.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 基于假设的定制化的问题在于，它比它试图解决的问题要少——理论上它可以是任何东西——更多的是关于你尝试解决问题的方式。通过基于假设的定制化，你是在尝试解决一个由产品管理、产品负责人或开发人员定义的问题。
- en: However, it turns out that the actual problem you need to solve is something
    else entirely. In other words, the problem with assumption-driven customization
    is that you’re unwittingly trying to solve the wrong problem.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，事实证明，你需要解决的真正问题完全不同。换句话说，基于假设的定制化问题在于，你无意中在试图解决错误的问题。
- en: This is different from just getting the requirements wrong because it can happen
    with good teams following a good process. All it takes is for the sample that
    you’re using to represent your user base to be in some way systematically biased,
    as we saw in our example.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这与仅仅要求错误不同，因为它可能发生在遵循良好流程的优秀团队中。所需要的只是你所使用的样本在某种程度上系统性地偏离了真实的用户群体，就像我们在示例中所看到的那样。
- en: Proposed solution
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: The proposed solution of assumption-driven customization is to let a group of
    experts stand in for the wider user base to facilitate rapid delivery of the solution
    being built. This is a perfectly reasonable approach. We let experts guide us
    in most things, and generally, it works quite well.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的基于假设的定制化解决方案是让一群专家代替更广泛的用户群体，以促进所构建解决方案的快速交付。这是一个完全合理的方法。我们在大多数事情上都让专家引导我们，而且通常情况下，这样做效果非常好。
- en: This only goes wrong if, for some reason, your representative experts turn out
    to have systematic biases relative to your real user base – for instance, someone
    who used to work in a function but now is out of touch with day-to-day reality
    or someone who has made the transition to an IT career some time ago and has now
    adopted an IT perspective on things.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当你的代表性专家与真实的用户群体相比，出于某种原因，存在系统性的偏见时，事情才会出错——例如，有人曾经在某个职能部门工作，但现在已经脱离了日常现实，或者某人早些时候转行做了IT，现如今已经从IT的角度来看待问题。
- en: Note that sometimes, you’ll want to roll something out that isn’t what your
    user base wanted or expected to drive transformational change. That’s a different
    ballgame and is all about the way you do change management. However, if you do
    it unintentionally and unknowingly, you have an anti-pattern.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，有时候，你可能会推出一些并不是用户群体所期望或要求的东西，以推动变革。这是一个完全不同的情形，关键在于你如何进行变更管理。然而，如果你无意中且未意识到这样做，那么你就是在使用反模式。
- en: Results
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'The results of assumption-driven customization depend on the degree of misfit
    with user needs and expectations:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 假设驱动的定制化结果取决于与用户需求和期望的契合度：
- en: At one end of the scale, you have a set of basically benign misunderstandings
    that can be fixed with goodwill, training, and a set of workarounds.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在规模的一端，你有一组基本无害的误解，这些误解可以通过善意、培训和一系列替代方案来修复。
- en: If that’s insufficient, you may have to add or rework a limited number of features
    to get the users to a place where they’re happy to work with the new system. This
    is still relatively manageable.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这样还不够，你可能需要添加或重新设计一些有限的功能，以让用户在新系统上能够愉快地工作。这仍然是相对可控的。
- en: However, sometimes, you’ll get to a point where users flat-out refuse to adopt
    a new system, even with substantial modifications.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，有时你会遇到一个阶段，用户完全拒绝采用新系统，即使进行了大量修改。
- en: 'At this point, you have two options: either you force it through and deal with
    the backlash from the user base or you scrap the tool and go back to the old way
    of doing things.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此时，你有两个选择：要么强行推进并应对来自用户群体的反弹，要么放弃这个工具，回到旧的方式。
- en: 'The following diagram provides a visual representation of the scale of results:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表提供了结果规模的可视化表示：
- en: '![Figure 5.3 – Scale of deteriorating results for assumption-driven customization](img/B30991_05_03.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3 —— 假设驱动的定制化结果恶化的规模](img/B30991_05_03.jpg)'
- en: Figure 5.3 – Scale of deteriorating results for assumption-driven customization
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 —— 假设驱动的定制化结果恶化的规模
- en: So, the consequences of this anti-pattern, while often minor, can be disastrous,
    and you should spend time being mindful about avoiding it.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这种反模式的后果虽然通常是轻微的，但也可能是灾难性的，你应该花时间注意避免它。
- en: Better solutions
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: This is a difficult pattern to guard against because it occurs when the people
    we trust to be the voice of our user base fail in some significant ways to represent
    those users. It can be deeply uncomfortable having to raise these kinds of issues
    with product managers or product owners, who are convinced about their position,
    and in fairness, most of the time, they’ll be right.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个难以防范的模式，因为它发生在我们信任的代表用户群体的人在某些重要方面未能代表这些用户时。必须向产品经理或产品负责人提出这些问题时，可能会非常不舒服，他们通常对自己的立场非常有信心，公平地说，大多数情况下，他们会是对的。
- en: 'However, some mechanisms can help with this:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一些机制可以帮助解决这个问题：
- en: Broader consultation with the user base – for instance, via larger events or
    a common online forum.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与用户群体的更广泛咨询——例如，通过大型活动或共同的在线论坛。
- en: Earlier feedback from the broader user base. Roadshows, demo videos, and webinars
    are good options here.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自更广泛用户群体的早期反馈。路演、演示视频和网络研讨会是不错的选择。
- en: Sprint-by-spring acceptance testing from a larger user group.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自更大用户群体的逐步验收测试。
- en: If you’re looking to create deep change, plan for it, and include the necessary
    change management. Never try to sneak in a major change.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你希望创造深远的变革，要做好规划，并包括必要的变更管理。永远不要试图偷偷进行重大变更。
- en: 'That concludes our discussion of this anti-pattern. Now, let’s look at a genuine
    classic: the Golden Hammer.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们对这种反模式的讨论。现在，让我们看看一个真正经典的例子：黄金锤。
- en: Golden Hammer
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 黄金锤
- en: The Golden Hammer makes the fundamental error of mistaking a tool that’s a good
    solution for some use cases for a tool that’s a good solution for all use cases.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金锤犯下的根本错误是把一个在某些使用场景下是好解决方案的工具，错误地当作适用于所有使用场景的工具。
- en: Example
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: WheelCo is a large manufacturer of tires, especially for the transportation
    sector. It’s rolling out Salesforce with Manufacturing Cloud at its core to closely
    connect its manufacturing and sales processes.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: WheelCo 是一家大型轮胎制造商，特别专注于运输行业。它正在推出以制造云为核心的 Salesforce，以紧密连接其制造和销售流程。
- en: As part of the deal that’s been made with Salesforce, WheelCo has received unlimited
    use of OmniStudio and has been party to several pieces of training and accelerators
    related to the capabilities of the product. As a result, the architects, developers,
    and business users within WheelCo are extremely excited about what OmniStudio
    can do for their business.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 根据与 Salesforce 达成的协议，WheelCo 获得了无限制使用 OmniStudio 的权限，并参与了与产品能力相关的多次培训和加速器。因此，WheelCo
    的架构师、开发人员和业务用户都对 OmniStudio 能为他们的业务带来的价值感到非常兴奋。
- en: During initial architecture discussions, the decision is made to base the entire
    solution on the OmniStudio toolset, including all UI processes (both internal
    and external), integrations, and any subsidiary processes where OmniStudio could
    conceivably be used. Only batch and asynchronous processes are left out of scope.
    That way, WheelCo believes it will maximize the value it can generate from the
    Salesforce purchase.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在最初的架构讨论中，决定将整个解决方案建立在 OmniStudio 工具集上，包括所有 UI 过程（无论是内部的还是外部的）、集成和任何可以合理使用 OmniStudio
    的附属流程。只有批处理和异步流程被排除在范围之外。通过这种方式，WheelCo 认为可以最大化从 Salesforce 购买中获得的价值。
- en: The project starts, and in many areas, rapid progress is made. To stay consistent,
    most parts of the standard UI are ignored and FlexCards and OmniScripts make up
    nearly the entire **user experience** ( **UX** ). Integrations are developed using
    integration procedures, except for a few that run in the background.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 项目启动后，在许多领域取得了快速进展。为了保持一致性，大多数标准用户界面（UI）部分被忽略，FlexCards 和 OmniScripts 几乎构成了整个**用户体验**（**UX**）。集成是通过集成流程开发的，除了少数在后台运行的集成。
- en: The volume of development is much larger than originally anticipated, but by
    adding a sufficient amount of resources, WheelCo still manages to get its implementation
    done on time. It has some trouble finding enough qualified resources that have
    the required level of OmniStudio experience, but by paying top rates, it manages
    to secure enough people for the project to succeed.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 开发的工作量远大于最初预期，但通过增加足够的资源，WheelCo 仍然设法按时完成了实施。尽管在寻找足够多具有所需 OmniStudio 经验的合格资源方面遇到了一些困难，但通过支付高薪，WheelCo
    设法为项目招募到足够的人才，确保了项目的成功。
- en: The go-live is, broadly speaking, successful, although there’s some grumbling
    that not everything that was promised has made it into the release. Several key
    features had to be descoped during development to make it on time.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，上线是成功的，尽管有人抱怨并不是所有承诺的功能都已包括在发布版本中。在开发过程中，若干关键功能不得不被删减，以确保按时发布。
- en: Over the following year, some problems with the solution start to become evident.
    The integrations aren’t as flexible as was expected and can’t accommodate all
    the different use cases the business wants to add. There’s also a problem with
    new feature releases on the Salesforce platform. Every time something new is added,
    it takes a change to OmniScripts, FlexCards, and sometimes supporting code to
    make it available to users.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的年度中，解决方案开始显现出一些问题。集成的灵活性没有预期的那么高，无法适应业务希望添加的所有不同用例。另一个问题是 Salesforce 平台上的新功能发布。每当添加新的功能时，都需要对
    OmniScripts、FlexCards 和有时是支持代码进行修改，才能使其对用户可用。
- en: The cost of supporting the solution is also high. Any change needs intervention
    from a senior technical person, and that reduces the flexibility of the platform.
    Within WheelCo, many started to question whether OmniStudio was the right solution
    to all the requirements it was used for in the project.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 支持该解决方案的成本也很高。任何变更都需要高级技术人员的干预，这减少了平台的灵活性。在 WheelCo 内部，许多人开始质疑 OmniStudio 是否是满足项目中所有需求的正确解决方案。
- en: This is especially true as some of the native Manufacturing Cloud features that
    were excluded from the OmniStudio work seem to be rapidly improving without anyone
    needing to lift a finger to make it work.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点尤其适用，因为一些排除在 OmniStudio 工作之外的原生制造云功能似乎在没有任何人为干预的情况下迅速得到改善。
- en: After about a year, WheelCo’s CTO appoints a new Chief Architect, who has to
    look at the architecture of the Salesforce platform as one of his early priorities.
    He identifies high complexity caused by large amounts of customization as a major
    driver of cost and functional issues. To address the issue, he recommends refactoring
    the solution so that it uses a much more standardized UI, retaining OmniStudio
    for complex multi-step processes and areas where particular views of the data
    and associated actions generate real value and eliminate it elsewhere.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 大约一年后，WheelCo 的首席技术官（CTO）任命了一位新的首席架构师，他将 Salesforce 平台的架构作为早期的优先事项之一进行审视。他发现大量定制化导致的高复杂性是成本和功能问题的主要根源。为了解决这一问题，他建议重构解决方案，使其采用更加标准化的用户界面，保留
    OmniStudio 用于复杂的多步骤流程和需要特定数据视图及相关操作能够创造真正价值的领域，并在其他地方去除该功能。
- en: Problem
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The Golden Hammer solves any problems – that’s the nature of the Golden Hammer.
    Once you’ve found the Golden Hammer, every problem you encounter is a fit. There’s
    no evaluation of fitness for purpose because the Golden Hammer is the right solution.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金锤子解决一切问题——这就是黄金锤子的特性。一旦你找到了黄金锤子，遇到的每个问题都会变得合适。没有对目标适配性的评估，因为黄金锤子就是解决方案。
- en: The tech industry, in general, is very prone to Golden Hammers. We’re always
    looking for the next cool technology to solve our problems. Salesforce, with its
    aggressive sales approach and Kool-Aid drinking community, is perhaps even more
    prone to this anti-pattern than most platforms in the technology space.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 技术行业通常很容易陷入黄金锤子陷阱。我们总是在寻找下一个酷炫的技术来解决我们的难题。Salesforce 以其激进的销售方式和 Kool-Aid 喝水般的社区，可能比大多数技术平台更容易陷入这一反模式。
- en: Note that Golden Hammers are often technically excellent solutions within their
    own solution space, but they’re stretched well beyond that space because of enthusiasm,
    hype, and excitement.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，黄金锤子通常在其解决方案空间内是技术上非常优秀的，但由于热情、炒作和兴奋，它们往往被拉得超出了这个空间。
- en: Proposed solution
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: The solution that’s proposed by the Golden Hammer is the Golden Hammer – that
    is, whatever the problem, whatever the parameters of the problem, they’ll somehow
    be twisted into something the Golden Hammer could conceivably deliver, or alternately,
    the Golden Hammer will be twisted into something that delivers a solution to the
    problem.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金锤子提出的解决方案就是黄金锤子——无论问题是什么，无论问题的参数如何，它们都会被扭曲成黄金锤子可以解决的某种形式，或者黄金锤子会被扭曲成能够解决问题的某种形式。
- en: If you have to pick, it’s better to mold the problem to a bad-fitting tool than
    to use a tool for a problem that it’s unsuitable for. However, neither of these
    options is particularly good.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果必须选择，最好是将问题调整为适应不合适工具的形态，而不是将不适合的工具应用于问题。但无论哪种选择，都不是特别理想的。
- en: A good way to check if you’re under the influence of a Golden Hammer is to check
    whether your discussions about new technology features start with looking for
    problems your tech stack could deliver or whether you start with problems and
    then try to find a suitable technology stack. If it’s the former, you need to
    be careful as you could have a Golden Hammer on your hands.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 检查是否受到黄金锤子影响的一个好方法是，查看你对新技术功能的讨论是否以寻找你的技术栈可以解决的问题开始，还是从问题入手然后寻找合适的技术栈。如果是前者，你需要小心，因为你可能已经拿到了一把黄金锤子。
- en: Results
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'The results of a Golden Hammer depend on the degree of technical badness of
    fit that you’ve engaged in:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金锤子的结果取决于你所参与的技术适配不良的程度：
- en: At a minimum, you’ll end up with a gap versus the requirements that you were
    meant to fulfill as there will be areas the Golden Hammer didn’t manage to solve
    because it’s not the thing it was meant to solve
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少，你最终会发现与你本应满足的需求存在差距，因为黄金锤子未能解决某些问题，因为它不是为解决这些问题而设计的
- en: Higher cost and more customization work as you increasingly stretch the Golden
    Hammer beyond its capabilities
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着黄金锤子被不断延伸超出其能力范围，成本和定制工作将增加
- en: Additional maintenance work and resulting cost as a result of the overstretched
    solution that has been created
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于过度延伸的解决方案所产生的额外维护工作和由此带来的成本
- en: Reduced faith in the real capabilities of the Golden Hammer within the organization,
    even where it’s genuinely a good fit
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使黄金锤子确实是一个合适的解决方案，也会导致组织对黄金锤子的真实能力失去信心
- en: A need to maintain a specialist skillset across different areas in your business
    that will persist even when the hammer is no longer popular or trending
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你企业的不同领域中，保持一个专门的技能集是必要的，即使当某个工具不再流行或趋势过时时，这种技能集仍然会持续存在。
- en: All in all, the results will depend on how much you’re stretching the tool’s
    capabilities, but choosing the tool before you know the problem is invariably
    an anti-pattern.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，结果将取决于你在多大程度上拉伸了工具的能力，但在你还没有搞清楚问题之前就选择工具，往往是一个反模式。
- en: Better solutions
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: Architects differ in their willingness to adopt new tools and technologies.
    Salesforce architects, in my experience, are fairly aggressive in adopting new
    technologies, so long as they’re on the platform. Therefore, I’m probably going
    to come off as a bit of a curmudgeon when I say that my general recommendation
    is to be quite conservative about adopting the newest toolsets, especially on
    Salesforce.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 建筑师在采纳新工具和技术方面的态度各不相同。根据我的经验，Salesforce 的架构师在采用新技术时相当积极，只要它们是在平台上。因此，当我说我的一般建议是对采纳最新的工具集保持相当保守的态度时，尤其是在
    Salesforce 上，我可能会显得有些固执。
- en: In the Salesforce ecosystem, we’re constantly bombarded with new features, new
    toolsets, and new ways of doing things. While that’s great, changing an approach
    that has worked for you in the past and that continues to deliver value to your
    organization should only be done after careful consideration, not because Salesforce
    has just launched a shiny new toy.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Salesforce 生态系统中，我们不断受到新功能、新工具集和新做事方式的轰炸。虽然这是好事，但改变一个过去对你有效且继续为你的组织带来价值的方法，应该在仔细考虑之后进行，而不是因为
    Salesforce 刚刚发布了一个闪亮的新玩具。
- en: Implement a regular review process for your technology stack. This helps ensure
    that you’re using the most appropriate tools for each task and allows you to phase
    out outdated or inefficient solutions. Approach new toolsets on a trial basis
    with limited business use cases to gather insights and evaluate their value. If
    a tool delivers genuine value, consider scaling it across your organization; if
    it doesn’t provide value, discontinue its use, regardless of its appeal.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 实施定期审查你的技术栈的过程。这有助于确保你为每个任务使用最合适的工具，并允许你逐步淘汰过时或低效的解决方案。以试用的方式接触新工具集，选择有限的业务使用案例来收集见解并评估它们的价值。如果一个工具提供了真正的价值，可以考虑在整个组织中推广；如果它没有提供价值，无论它多么有吸引力，都应该停止使用。
- en: Engineering overflow
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工程溢出
- en: The two anti-patterns in this section both represent failures of technical governance,
    resulting from too much engineering work going into a single component without
    appropriate design patterns and practices applied to mitigate it.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的两个反模式都代表了技术治理的失败，结果是将过多的工程工作投入到单一组件中，而没有应用适当的设计模式和实践来缓解这种情况。
- en: Automation Bonanza
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化盛宴
- en: '*Automation Bonanza is what happens when you fail to govern how automations
    are used on your* *key objects.*'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '*自动化盛宴是指当你没有对关键对象上的自动化使用进行治理时所发生的情况。*'
- en: Example
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: DrinksCo is a long-time user of the Salesforce platform, using it for sales
    and customer service as well as having a large and elaborate footprint on Marketing
    Cloud. While there are multiple orgs in use across the estate, there’s one main
    org that manages the core processes for which Salesforce is in use.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: DrinksCo 是 Salesforce 平台的长期用户，使用它进行销售和客户服务，同时在 Marketing Cloud 上有着庞大而复杂的使用足迹。虽然整个系统中有多个组织正在使用，但有一个主要的组织管理着
    Salesforce 使用的核心流程。
- en: While this org has been creaking slightly for a while, the situation has now
    gotten to a point where DrinksCo users are making serious complaints. The time
    to save records on key objects such as Opportunity and Account can sometimes be
    measured in minutes. Occasionally, records will simply fail to save, giving an
    obscure technical error message. Worse still, there are synchronization jobs containing
    important information about new leads and opportunities that randomly fail without
    giving a clear explanation as to why.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个组织已经有一段时间稍微有些吃力，但现在情况已经到了一个点，DrinksCo 的用户开始提出严重的投诉。像 Opportunity 和 Account
    这样的关键对象上的记录保存时间，有时可能以分钟为单位来衡量。偶尔，记录会直接无法保存，显示一个模糊的技术错误信息。更糟糕的是，包含关于新潜在客户和机会的重要信息的同步作业，有时会随机失败，而且没有给出明确的原因。
- en: Francesca is a Salesforce consultant with a boutique Salesforce partner. She’s
    called in to analyze the situation and propose improvements to the org that ideally
    fix the root cause of the issues, but at a minimum reduce the symptoms quickly.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Francesca 是一家精品 Salesforce 合作伙伴的 Salesforce 顾问。她受邀分析情况，并提出对组织的改进建议，理想情况下解决问题的根本原因，但至少能够迅速减少症状。
- en: 'After a week of examining the org, she’s no longer in doubt: the problems are
    caused by interaction effects between a large number of complex automations on
    key objects. On Opportunity, for instance, there are deep layers of automation
    that have evolved over many years that combine to create serious issues.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在一周的组织审查后，她不再怀疑：问题是由大量复杂的自动化在关键对象上相互作用引起的。例如，在 Opportunity 上，经过多年的演变，自动化形成了多个深层次的层次，合起来导致了严重的问题。
- en: This includes a large and complex Apex trigger, two additional triggers from
    managed packages, a handful of workflow rules, three process builders that are
    yet to be migrated to flows, a before-record-triggered flow, an after-record-triggered
    flow, several batch jobs that operate on the object, and multiple integrations
    directly using both the native API and a custom web service to manipulate records
    in the Opportunity object.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这包括一个大型复杂的 Apex 触发器，两个来自托管包的额外触发器，一些工作流规则，三个尚未迁移到 Flow 的流程构建器，一个前记录触发流，一个后记录触发流，几个操作该对象的批处理作业，以及多个直接使用本地
    API 和自定义 Web 服务来操作 Opportunity 对象记录的集成。
- en: Francesca takes a deep breath and starts methodically mapping out the various
    sequences of events that can occur, depending on the Opportunity records and their
    updates. She does this by systematically following the order of execution and
    looking at where there might be potential undesirable interaction effects between
    the different automations.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Francesca 深吸一口气，开始有条不紊地绘制出不同事件序列的发生顺序，这些序列取决于 Opportunity 记录及其更新。她通过系统地跟随执行顺序，查看不同自动化之间是否可能存在不希望出现的相互作用效应。
- en: After some time, she concludes that the number of ways in which these sequences
    can go wrong is too high for the current model to stand. It’s unfixable without
    seriously reducing the complexity of the automations.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一段时间，她得出结论，这些事件序列出错的方式太多，当前模型无法承受。如果不大幅减少自动化的复杂性，这个问题是无法解决的。
- en: Therefore, she devises a refactoring plan that she believes will be successful
    in alleviating the most serious symptoms of the Opportunity object, although probably
    not eliminating the problem entirely. If it’s successful for the Opportunity object,
    similar initiatives will be attempted for other key objects in the core org.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，她制定了一个重构计划，相信它能够有效缓解 Opportunity 对象最严重的症状，尽管可能无法完全消除问题。如果在 Opportunity 对象上成功，类似的计划将会应用于核心组织中的其他关键对象。
- en: The plan includes moving the process builders and several of the workflow rules
    into the two flows, consolidating the integrations so that there’s only one that
    regularly handles imports into Opportunity, simplifying the Apex trigger, and
    getting rid of one of the managed packages that aren’t strictly needed anymore.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 计划包括将流程构建器和一些工作流规则移入两个流中，合并集成使得只有一个集成定期处理 Opportunity 的导入，简化 Apex 触发器，并去掉那些已经不再严格需要的托管包。
- en: The plan takes much longer than initially expected to implement – there are
    just too many things to consider for everything to go to plan. But eventually,
    the users start reporting an improved experience when using Opportunity. The old
    random errors no longer occur. And although saving is still slower than they would
    like, it’s no longer so slow as to be a serious issue.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 该计划的实施远比最初预期的要长——需要考虑的因素太多，无法按计划进行。但最终，用户开始报告在使用 Opportunity 时的体验有所改善。旧的随机错误不再发生。尽管保存仍然比他们希望的慢，但已不再慢到成为严重问题。
- en: Having momentarily enjoyed her success, Francesca takes another deep breath
    and starts the process for the other key objects in the org.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在短暂享受成功之后，Francesca 深吸一口气，开始处理组织中其他关键对象的相关事务。
- en: Problem
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The problem that automation bonanza tries to resolve is how to accommodate different
    architectural styles or preferences when creating automations on Salesforce. This
    occurs almost inevitably when you have multiple teams working on the same objects
    as part of different projects and often coming from different implementation partners.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化盛宴试图解决的问题是如何在 Salesforce 上创建自动化时适应不同的架构风格或偏好。当多个团队在不同项目中同时处理相同的对象，且通常来自不同的实施合作伙伴时，这几乎是不可避免的。
- en: As organizations grow, the complexity of interacting automations can increase
    exponentially. Different teams may have varying approaches to automating their
    specific requirements, but this can lead to confusion and inefficiencies. Therefore,
    it’s crucial to establish a clear automation strategy from the outset to manage
    these complexities effectively.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组织的成长，相互作用的自动化的复杂性可能呈指数级增加。不同的团队可能对自动化其特定需求有不同的处理方法，但这可能导致混乱和低效。因此，至关重要的是从一开始就建立清晰的自动化策略，以有效管理这些复杂性。
- en: That’s when you need a way to guide the evolution of your architecture over
    time to keep things consistent. If you fail to do so, you may end up with automation
    bonanza.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，你需要一种方法来指导架构随时间的发展，以保持一致性。如果你未能做到这一点，可能会陷入自动化盛宴。
- en: Proposed solution
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提出的解决方案
- en: 'Automation bonanza responds to the multiplicity of automation options, some
    of which are shown in the following screenshot, and the commensurate multiplicity
    of automation approaches by allowing for diversity. This means that teams are
    allowed to choose a best-fit approach in isolation:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化盛宴应对了多样化的自动化选项，其中一些选项在以下截图中展示，并且通过支持多样性，回应了自动化方法的多样性。这意味着团队可以选择最适合的孤立方法：
- en: '![Figure 5.4 – Some Salesforce automation options](img/B30991_05_04.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4 – 一些 Salesforce 自动化选项](img/B30991_05_04.jpg)'
- en: Figure 5.4 – Some Salesforce automation options
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 一些 Salesforce 自动化选项
- en: This reduces coordination requirements between the teams and usually doesn’t
    result in short-term issues. Therefore, it can be quite difficult to spot that
    you have a problem or are generating a problem before things have already gone
    wrong.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这减少了团队之间的协调要求，通常不会导致短期问题。因此，发现问题或产生问题可能相当困难，直到事情已经出错。
- en: Results
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'The negative consequences of automation bonanza can be rich and varied. Some
    of the things that frequently occur are shown here:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化盛宴的负面后果可能丰富多样。以下是一些经常发生的情况：
- en: Slowing performance on key record pages – sometimes, saves can take a long time
    to complete
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键记录页面的性能下降——有时，保存操作可能需要很长时间才能完成
- en: Failures in integration call-ins, especially where these update records in batches
    or a bulk fashion
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成调用失败，特别是当这些调用以批量或批量方式更新记录时
- en: Failures in batch jobs or import jobs
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批量作业或导入作业失败
- en: Strange, unpredictable errors occurring in the UI, typically associated with
    a save or update event
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 UI 中发生奇怪、不可预测的错误，通常与保存或更新事件相关
- en: Difficulties in debugging issues occurring on the platform as interaction effects
    from automations overshadow the general picture
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试平台上出现的问题时的困难，因为自动化的交互效应掩盖了整体情况。
- en: Overall, if you get into a serious case of automation bonanza, you can have
    a real mess on your hands. What’s worse is that this tends to happen to your most
    treasured objects first as these are the ones used the most across projects.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，如果你陷入严重的自动化盛宴情境，可能会让事情一团糟。更糟糕的是，这种情况通常最先发生在你最珍贵的对象上，因为这些对象在各个项目中使用得最多。
- en: Better solutions
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: 'The key to avoiding the automation bonanza anti-pattern is good architecture
    governance around your core objects and their automations. Some things to keep
    in mind to do this are shown here:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 避免自动化盛宴反模式的关键是对核心对象及其自动化进行良好的架构治理。为此需要注意的一些事项在此展示：
- en: You should start by defining which types of automation you want to use in your
    org and for which use cases.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该从定义你希望在组织中使用的自动化类型以及对应的使用场景开始。
- en: Ideally, you want a number as close to one as possible for each object. Choose
    either flows or triggers as your go-to automation type and stick to it.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理想情况下，你希望每个对象的数量尽可能接近1。选择流程或触发器作为首选自动化类型，并坚持使用它。
- en: It’s possible to mix Apex and flows safely, but it requires careful planning
    and a good framework.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合使用 Apex 和流程是可能的，但这需要仔细的规划和一个好的框架。
- en: If you’re using flows as your principal mechanism, make callouts to Apex via
    Actions rather than by creating triggers unless you’re forced to do so for performance
    reasons.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用流程作为主要机制，应该通过操作调用Apex，而不是创建触发器，除非出于性能原因不得不这样做。
- en: Ensure you have a framework that helps the architect use flows. This should
    include the use of sub-flows to retain flexibility. Have decoupled automation
    processes that are easy to troubleshoot in case of problems instead of having
    a large monolithic flow containing all the business logic in a tightly coupled
    design that’s complex and expensive to maintain in the long term.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你有一个框架，帮助架构师使用流程。这个框架应包括使用子流程来保持灵活性。要有解耦的自动化流程，便于在出现问题时进行故障排查，而不是拥有一个包含所有业务逻辑的大型单体流程，后者通常紧密耦合且在长期维护上复杂且昂贵。
- en: If you’re using triggers as your principal mechanism, use a trigger framework
    such as Apex Trigger Actions ( [https://github.com/mitchspano/apex-trigger-actions-framework](https://github.com/mitchspano/apex-trigger-actions-framework)
    ), which enables you to call out to flows as part of the trigger execution.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用触发器作为主要机制，可以使用一个触发器框架，例如Apex Trigger Actions（[https://github.com/mitchspano/apex-trigger-actions-framework](https://github.com/mitchspano/apex-trigger-actions-framework)），该框架使你能够在触发器执行时调用流程。
- en: Avoid Process Builder and workflow rules as these are being retired.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免使用Process Builder和工作流规则，因为这些功能将被逐步淘汰。
- en: Batch processes and incoming integrations need to be designed carefully and
    be mindful of existing automations. Remember mechanisms that enable you to selectively
    bypass automations for some processes, such as bypass flags.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理流程和传入集成需要小心设计，并且要考虑现有的自动化流程。记住，可以使用某些机制选择性地绕过某些流程的自动化，例如绕过标志。
- en: Watch managed package triggers and flows carefully. You don’t have control over
    them, but they may still cause trouble by interacting with your functionality.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意管理包触发器和流程。你无法控制它们，但它们仍然可能通过与你的功能交互而导致问题。
- en: 'In general, trying to keep your automation approach simple and uniform will
    generate substantial long-term benefits for your Salesforce orgs. That being said,
    let’s look at the next anti-pattern: overweight component.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，尽量保持自动化方法简单和统一，将为你的Salesforce组织带来可观的长期利益。话虽如此，让我们来看下一个反模式：过度复杂的组件。
- en: Overweight Component
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过度复杂的组件
- en: An Overweight Component is a single component that’s grown into an application
    of its own without having the architecture and design to sustain it.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 过度复杂的组件是指一个单一组件，它已经发展成了一个独立的应用程序，但没有足够的架构和设计来支持它。
- en: Example
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: HealthyMindCo is a broker for mental health services across the United Kingdom.
    It’s implementing a new case management solution on Salesforce. In this solution,
    caseworkers collect relevant information about new clients and determine which
    actual local provider is best placed to help them. Additionally, they track the
    consultations their clients go through to determine the effectiveness of the intervention.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: HealthyMindCo是英国的心理健康服务经纪公司，正在Salesforce上实施一个新的案例管理解决方案。在这个解决方案中，案件工作者收集新客户的相关信息，并确定哪个实际的本地服务提供者最适合帮助他们。此外，他们还跟踪客户进行的咨询，以评估干预的有效性。
- en: The company has very special requirements around the recommendations the system
    should make for potential treatment options and referral possibilities, which
    can only really be accommodated by using custom code. Because HealthyMindCo prefers
    a simple and highly optimized UX, Amir, the project lead for the partner implementing
    the solution, decides to go with a Lightning component that can incorporate the
    necessary logic for creating new cases.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 公司在系统应为潜在治疗选项和转诊可能性提供的推荐方面有非常特殊的要求，这些要求只能通过使用自定义代码来真正满足。由于HealthyMindCo倾向于简单且高度优化的用户体验，负责实施解决方案的项目负责人Amir决定使用一个Lightning组件，该组件可以融合创建新案例所需的逻辑。
- en: Initially, the thought is that the component will only be used for new cases.
    However, after initial user testing, it’s clear that update functionality will
    also need to be added. There are too many instances where initial assumptions
    need to be checked, which can lead to different outcomes in terms of the treatment
    plan.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的想法是该组件仅用于新案例。然而，在初步用户测试后，显然还需要添加更新功能。因为有太多情况下需要检查初步假设，这可能会导致治疗计划在不同情况下的不同结果。
- en: After the update functionality has been added, the component is tested with
    users again, and what appears to be evident is that the component will also need
    to support the management of activities and activity templates as that’s a crucial
    part of the initial setup of a treatment plan. The team works hard to add this
    to the component, which is starting to be a substantial piece of engineering.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了更新功能后，组件再次进行了用户测试，显而易见的是，组件还需要支持活动和活动模板的管理，因为这是治疗计划初始设置中的关键部分。团队努力将此功能添加到组件中，组件也开始变得像一个相当复杂的工程项目。
- en: Once the activities and activity templates have been added to the component,
    several users point out that it doesn’t make any sense to have the activity management
    part of the equation in the new component, which is now coming to be known simply
    as the case-handling component, and also to not be able to track SLAs against
    those activities in the component. This implies also adding the visit-tracking
    capability as that’s required to manage the SLAs.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦活动和活动模板被添加到组件中，几个用户指出，将活动管理部分放入这个新的组件（现在已经被称为案件处理组件）并且不能在组件中跟踪这些活动的SLA（服务水平协议）是没有意义的。这也意味着需要增加访问跟踪功能，因为这是管理SLA所必需的。
- en: At this point, the Lightning component is the main interface that’s used by
    HealthyMindCo staffers. Due to this, several integration callouts that get information
    from other systems are added directly to the code in the component, simply because
    this is where it will be used anyway.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，Lightning 组件是HealthyMindCo员工使用的主要界面。由于这个原因，多个从其他系统获取信息的集成调用直接被添加到组件的代码中，因为反正这里是它最终会被使用的地方。
- en: The system goes live in an unspectacular manner. There are a lot of bugs, in
    particular in the case-handling component. But with a lot of goodwill and hard
    work, the team comes to a level where the quality is just acceptable enough for
    the client to use it in anger.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 系统上线时并不轰动。存在很多bug，尤其是在案件处理组件中。但凭借大量的善意和辛勤工作，团队逐渐将质量提升到一个足够可接受的水平，使得客户能够勉强使用它。
- en: After the go-live, HealthyMindCo keeps finding new bugs in the case-handling
    interface. It’s generally quite unstable. In addition, it still wants to add large
    amounts of new functionality to it. However, the company isn’t happy with the
    quotes it’s receiving for its change requests.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 上线后，HealthyMindCo不断在案件处理界面中发现新的bug。它通常相当不稳定。此外，公司仍然希望在其中添加大量的新功能。然而，公司对其变更请求的报价并不满意。
- en: Amir consults with some of the senior architects within his company. They assess
    the situation and tell him that the component is too big, too monolithic, and
    too difficult to maintain. He needs to refactor the code base and find the funding
    to do so either from the client or internally. He tries, but no one seems particularly
    inclined to pick up the tab.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Amir向公司中的一些高级架构师咨询。他们评估了情况并告诉他，组件太大、过于单一且难以维护。他需要重构代码库，并从客户或内部获得资金来实施这一点。他尝试了，但似乎没有人特别愿意承担费用。
- en: Problem
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: Generally, heavyweight components are built to accommodate a real or perceived
    need for a custom UX that goes well beyond what can be delivered with Salesforce’s
    out-of-the-box tools. Note that in some cases, the perception that you need such
    a specialized UX can be stronger than reality.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，重量级组件是为了适应对定制用户体验（UX）的实际或感知需求，这种需求远远超出了Salesforce开箱即用工具所能提供的范围。请注意，在某些情况下，认为需要这种定制用户体验的看法可能比实际情况更为强烈。
- en: Users who come from old systems that have been used to working in a specialized
    application or who had their old system customized heavily to their needs might
    assume that such customization will also be necessary on a platform such as Salesforce.
    There can be a marked degree of skepticism in some users toward the idea of using
    standard functionality. We all like to think that what we do is somehow special,
    after all.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 来自旧系统的用户，习惯于在专门的应用程序中工作，或者他们的旧系统根据需求进行了大量定制，可能会认为在像Salesforce这样的平台上也需要进行类似的定制。某些用户可能对使用标准功能持有较大怀疑态度。毕竟，我们都喜欢认为自己所做的事情是特别的。
- en: Not to say that there aren’t cases where there’s a genuine need to have a unique
    and highly customized UX but, in my experience, they’re less common than many
    would think. In any case, the way a heavyweight component attempts to deliver
    such an experience is less than ideal.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是说没有真正需要独特且高度定制的用户体验的情况，但根据我的经验，它们比很多人想象的要少。无论如何，重量级组件尝试提供这种体验的方式并不理想。
- en: Proposed solution
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: 'A heavyweight component proposes to deliver a unique UX within Salesforce,
    using a development framework such as LWC to create what’s effectively an embedded
    monolith application residing on the platform. This can be attractive for several
    reasons:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重量级组件提出在Salesforce内提供独特的用户体验，使用如LWC这样的开发框架来创建一个实际上是嵌入式的单体应用程序，驻留在平台上。这对于几个原因来说可能很有吸引力：
- en: You have full control over the UX and UI within a single component, allowing
    you to respond to almost any user request
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以完全控制单一组件内的用户体验和界面，允许你响应几乎任何用户需求
- en: All functions are integrated, and the architecture is simple to understand
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有功能都被集成，架构简单易懂
- en: There’s one place for everything, and all changes can be made there, reducing
    the need for tooling and coordination
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有内容都集中在一个地方，所有变更都可以在那里进行，从而减少了对工具和协调的需求
- en: The component is still embedded within the standard UX and with judicious use
    of styling, it may even look like something that came as standard
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该组件仍然嵌入在标准的用户体验中，通过巧妙的样式使用，它甚至可能看起来像是标准配置的一部分
- en: You can accommodate changes to the UX within the component, giving users more
    of what they need
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在组件内调整用户体验，提供更多用户需要的内容
- en: This solution also tends to not seem dangerous at the outset, even to experienced
    architects and developers, because all we’re talking about is “just” another LWC
    component. It’s only when the true scope of that component is realized that it
    becomes a problem.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案在一开始也往往看起来不那么危险，即使是对经验丰富的架构师和开发人员而言，因为我们讨论的仅仅是“另一个”LWC组件。只有当该组件的真正范围被意识到时，它才会成为问题。
- en: Results
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: While the component remains relatively small, you won’t see any negative results,
    and, of course, lightweight components are useful and architecturally appropriate
    elements of most Salesforce architectures. However, as a component continues to
    grow, it starts to resemble a standalone application – a code-based monolith that
    lives within the larger application but still has a life of its own.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管该组件仍然相对较小，你不会看到任何负面结果，当然，轻量级组件是大多数Salesforce架构中有用且架构上合适的元素。然而，随着组件的持续增长，它开始类似于一个独立的应用程序——一个基于代码的单体应用程序，存在于更大的应用程序中，但仍有自己的生命。
- en: Often, this happens unintentionally when a component that was meant to do something
    relatively simple evolves into a catch-all location for functionality. This often
    happens because the initial component was very successful, and users want it to
    do more things.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这种情况是在一个本应完成相对简单任务的组件，意外地演变成一个功能的“万用”地点。通常发生这种情况是因为最初的组件非常成功，用户希望它做更多的事情。
- en: 'The consequences of this evolution are familiar:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这种演变的后果是熟悉的：
- en: Quality starts to decrease and the error rate increases as the new component
    becomes too big and complex for developers to handle
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着新组件变得过大和复杂，开发人员开始难以处理，质量开始下降，错误率增加
- en: Maintenance slows down, and bug fixes and feature requests take longer to come
    through the pipeline
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护变得缓慢，错误修复和功能请求需要更长时间才能通过流程
- en: Only certain developers can work on the heavyweight component because it gets
    too complex for others to handle
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有某些开发人员能够处理重量级组件，因为它变得过于复杂，其他人无法处理
- en: The overall UX begins to deteriorate due to the reduced quality and crowded
    functionality
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于质量下降和功能过于拥挤，整体用户体验开始恶化
- en: The component is increasingly hard to integrate with other parts of the platform
    and is increasingly treated as a standalone application
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个组件越来越难以与平台的其他部分集成，并且越来越被视为一个独立的应用程序
- en: As components grow in size and complexity, testing becomes increasingly difficult
    and time-consuming. This can lead to potential quality issues that may compromise
    the functionality of the system and result in longer release cycles, ultimately
    impacting delivery timelines and resource allocation.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组件的规模和复杂性增加，测试变得越来越困难且耗时。这可能导致潜在的质量问题，影响系统的功能，并导致发布周期的延长，最终影响交付时间表和资源分配。
- en: Occasionally, this pattern can deteriorate to such an extent that you end up
    with a Big Ball of Mud – see [*Chapter 2*](B30991_02.xhtml#_idTextAnchor026) .
    However, even when it doesn’t go that far, you’ll eventually need a major refactoring
    effort to address the issues.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 偶尔，这种模式可能会恶化到一种程度，导致最终形成“庞大的乱麻”——请参见 [*第2章*](B30991_02.xhtml#_idTextAnchor026)。然而，即使没有发展到这种程度，你最终也需要进行大规模重构来解决这些问题。
- en: Better solutions
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: Given that the issue with a heavyweight component is that you effectively end
    up with a monolith application without a well-defined architecture, it shouldn’t
    be a surprise that the way you must address the anti-pattern is to improve the
    architecture of the custom functionality you’re going to deliver.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于重型组件的问题是你最终得到的是没有清晰架构的单体应用，应该不意外的是，你必须通过改进你即将交付的自定义功能的架构来解决这一反模式。
- en: Generally, this is done by decomposing the larger component into a set of smaller,
    more manageable pieces while leveraging as much standard functionality as you
    can. Using an **event-driven architecture** ( **EDA** ) that allows the smaller
    components to communicate by sending and responding to events can also be helpful.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这可以通过将较大的组件分解为一组更小、更易管理的部分，同时尽可能利用标准功能来实现。使用**事件驱动架构**（**EDA**），使得较小的组件通过发送和响应事件来进行通信，也会有所帮助。
- en: Additionally, architecture governance has a key role to play in this anti-pattern.
    You should have an assessment and approval process in place for new components,
    and you should also have someone periodically check in on what happens with the
    custom components that get approved as they can tend to balloon.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，架构治理在这种反模式中起着关键作用。你应该为新组件设立评估和审批流程，同时也应定期安排人员检查被批准的自定义组件，因为它们往往会膨胀。
- en: That doesn’t mean you need a formal code audit to check through what everyone
    is doing unless your project is very large, but you should have architects who
    are part of your governance approach and who know the details of what’s going
    on with any custom development being done in your org. That will help you spot
    evolving issues early.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着你需要进行正式的代码审计来检查每个人的工作，除非你的项目非常大，但你应该有架构师参与治理流程，并且了解你组织中任何自定义开发的细节。这将帮助你及早发现潜在问题。
- en: Next, we’ll look at our two code-focused anti-patterns, starting with the God
    Class.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨两个以代码为重点的反模式，从神类开始。
- en: Making a mess of code
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码乱作一团
- en: The last two anti-patterns we’ll cover in this chapter focus on two anti-patterns
    that happen in code. While these aren’t the most common in a Salesforce world,
    we, as architects, should still be aware that our code-based solutions must adhere
    to good practices or fall into common anti-patterns.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们将讨论的最后两个反模式集中在代码中发生的反模式。虽然这些在Salesforce的世界中并不常见，但作为架构师，我们仍应意识到，我们的基于代码的解决方案必须遵循良好的实践，否则可能会陷入常见的反模式。
- en: God Class
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 神类
- en: The God Class is a single class that contains all or most of the business logic
    that’s been defined for an application.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 神类是一个包含了应用程序定义的所有或大部分业务逻辑的单一类。
- en: Example
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: ShoeCo, a maker of some of the world’s most popular sneaker brands, has a complex,
    multi-cloud Salesforce org that it uses to run key parts of its business. As it
    has many custom requirements as well as a substantial amount of legacy on the
    platform, it has a large number of Apex classes to handle both business logic
    and integrations.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: ShoeCo是一家生产世界上最受欢迎运动鞋品牌的公司，拥有一个复杂的多云Salesforce组织，用来运营其业务的关键部分。由于它有许多自定义需求，并且平台上有大量遗留系统，它有大量的Apex类来处理业务逻辑和集成。
- en: It’s recently started to make the switch to flows, and in practice, most functionality
    is a combination of code and declarative functionality. Over time, ShoeCo would
    like to simplify its Salesforce functionality and avoid some of the problems it’s
    currently facing.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 它最近已经开始转向流程化，并且在实践中，大多数功能是代码和声明性功能的结合。随着时间的推移，ShoeCo希望简化其Salesforce功能，并避免目前面临的一些问题。
- en: In particular, many of the architects at ShoeCo are starting to feel like the
    org is out of control and that they don’t have any clear overview of the logic
    that’s activated at different parts of the system. Pranit, one of the Salesforce
    architects, proposes to simplify the current system architecture by creating a
    **CentralDispatch** Apex class that will take on the role of dispatching calls
    to other code or flows.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，ShoeCo的许多架构师开始觉得组织已经失控，他们对在系统不同部分激活的逻辑没有清晰的概览。Salesforce架构师之一Pranit提出，通过创建一个**CentralDispatch**
    Apex类来简化当前的系统架构，这个类将负责将调用分发到其他代码或流程。
- en: With all business logic funneled through the **CentralDispatch** class, Pranit
    believes that it will be much easier to identify which code is called in which
    circumstances, allowing for greater transparency, lower maintenance costs, and
    a greater potential for code reuse.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有业务逻辑都通过**CentralDispatch**类进行，Pranit认为，识别在哪些情况下调用了哪些代码将变得更加容易，从而实现更大的透明度、更低的维护成本和更大的代码重用潜力。
- en: A key philosophical requirement for this approach is that the **CentralDispatch**
    class should contain no logic of its own. It’s just there to forward requests
    to the right handler. However, this philosophical principle is soon abrogated
    in practice.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这一方法的一个关键哲学要求是，**CentralDispatch**类不应该包含任何逻辑。它仅仅负责将请求转发到正确的处理器。然而，这一哲学原则在实践中很快就被废除了。
- en: To make the class work as intended, more and more of the business logic that
    determines what gets called in which contexts has to move into the **CentralDispatch**
    class itself. That means more and more of the actual functionality lives in a
    class that’s growing ever larger by the day.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使类按预期工作，越来越多决定在不同上下文中调用哪些内容的业务逻辑必须移到**CentralDispatch**类本身。这意味着实际功能的越来越多部分将存在于一个日益膨胀的类中。
- en: While this causes some concern initially, Pranit and his fellow architects accept
    the development as they still have better visibility than before the introduction
    of the **CentralDispatch** class. It’s only when developers start to complain
    that the class is too big and can’t be changed without there being unknown side
    effects in various parts of the system that they start to take serious notice.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然最初这引起了一些担忧，但Pranit和他的同事们接受了这一开发，因为相较于**CentralDispatch**类引入之前，他们仍然比以前拥有更好的可视性。直到开发人员开始抱怨该类太大，并且无法在没有各种系统部分出现未知副作用的情况下进行更改，他们才开始认真关注这个问题。
- en: The class has grown to more than 5,000 lines of Apex code, and it effectively
    orchestrates all logic that’s called from other places within the ShoeCo org.
    To some extent, it has been a victim of its own success, but at this point, most
    of the developers consider it more of a hindrance than a boon.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 该类已经增长到超过5000行Apex代码，并且有效地协调了从ShoeCo组织内其他地方调用的所有逻辑。从某种程度上来说，它成了自身成功的牺牲品，但此时，大多数开发人员认为它更像是障碍而非助力。
- en: Pranit decides to create a new plan to refactor the **CentralDispatch** class
    and get it back to its original skinny self. He wants to move out all the complex
    logic and keep it as a dispatch hub that determines which other Apex code or flows
    get called in particular contexts.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: Pranit决定制定一个新的计划来重构**CentralDispatch**类，并使其恢复到原本精简的状态。他希望将所有复杂的逻辑移出，将它保留为一个调度中心，决定在特定上下文中调用哪些其他Apex代码或流程。
- en: However, on inspecting the code, he finds that in many cases, it’s impossible
    to do that kind of request forwarding without also including substantial amounts
    of logic. Disheartened, he considers whether the approach needs to be fundamentally
    changed.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在检查代码时，他发现，在许多情况下，无法在不包括大量逻辑的情况下进行请求转发。失望之下，他开始考虑是否需要从根本上改变这个方法。
- en: Problem
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: The God Class anti-pattern is deployed to centralize technical problem-solving
    with an application. It can be much easier, conceptually speaking, to use a single
    pattern deployed in a single class to manage all the technical complexity that
    arises during custom development than to spend a lot of time doing detailed architecture
    and design.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: God类反模式被用来将技术问题解决集中到一个应用中。从概念上讲，使用一个单一的模式在单一类中处理所有在自定义开发过程中出现的技术复杂性，比花费大量时间进行详细的架构和设计要容易得多。
- en: 'You can see the God Class code structure in the following diagram:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在下图中看到God类代码结构：
- en: '![Figure 5.5 – God Class code structure](img/B30991_05_05.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图5.5 – God类代码结构](img/B30991_05_05.jpg)'
- en: Figure 5.5 – God Class code structure
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5 – God类代码结构
- en: You don’t see this anti-pattern frequently in Salesforce implementations, but
    it’s a real danger to ISVs building for AppExchange or any organization building
    bespoke applications on the Salesforce platform.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 你在 Salesforce 实现中不常看到这种反模式，但它对于为 AppExchange 构建的独立软件供应商（ISV）或任何在 Salesforce
    平台上构建定制应用程序的组织来说，都是一个真正的危险。
- en: Proposed solution
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: The God Class is a single file – generally an Apex class when we’re talking
    about Salesforce – that hosts all or at least the majority of the critical business
    logic of a complex application. Centralizing functionality in this way can seem
    like a good design decision as it makes the overall architecture and design quite
    manageable, and there are even some patterns, such as the Dispatcher pattern,
    which we used in our preceding example, that can be quite used effectively in
    such a centralized way.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 上帝类是一个单一文件——通常在讨论 Salesforce 时是一个 Apex 类——它托管了一个复杂应用程序的所有或至少大部分关键业务逻辑。以这种方式集中功能似乎是一个不错的设计决策，因为它使得整体架构和设计相对可管理，甚至有一些模式，例如我们在前面的示例中使用的
    Dispatcher 模式，在这种集中方式下也可以有效使用。
- en: Often, as an application evolves, you can start to lose the big picture. This
    is especially true if you have a small application that’s growing into a big application
    over time. You probably didn’t have a strong architecture in mind at the outset
    as it was only meant to be a small application that could be built quickly.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，随着应用程序的发展，你可能开始失去大局。这在小应用程序逐渐演变成大型应用程序时尤为明显。你可能在最初并没有强烈的架构设计，因为它最初只是一个可以快速构建的小应用程序。
- en: In this case, resorting to centralizing the code base can be a way of managing
    the application and getting back in control. Alternatively, you might simply have
    started to put all the logic in one place for convenience and you didn’t notice
    that the class had grown to several thousand lines of code.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，集中管理代码库可以成为管理应用程序并重新掌控局面的一个方法。或者，你可能只是出于方便将所有逻辑放在一个地方，并且没有注意到该类已经扩展到几千行代码。
- en: However, as with all cases of poorly managed evolution of functionality, you’ll
    end up paying the costs eventually.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如所有功能进化管理不善的情况一样，最终你会为此付出代价。
- en: Results
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: 'At this point in this book, you should be able to predict the negative outcomes
    from an anti-pattern that results from badly managed application growth. We’ve
    seen several such patterns, from heavyweight component to Big Ball of Mud, and
    the God Class shares many of the negative consequences we’ve come to expect:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这个阶段，你应该能够预测由不当管理的应用程序增长导致的反模式的负面后果。我们已经看到了一些这样的模式，从重量级组件到“大球泥”，上帝类也共享了我们所期待的许多负面后果：
- en: The code becomes hard to understand, resulting in longer maintenance cycles,
    slower new development, and increased error rates
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码变得难以理解，导致更长的维护周期、更慢的新开发速度以及更高的错误率
- en: Only certain programmers may be able to work on the God Class to avoid unfortunate
    side effects
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有某些程序员可能能够处理上帝类，以避免不幸的副作用
- en: All changes in the code base, anywhere, also require changes to be made to the
    God Class
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码库中的所有更改，无论在任何地方，都需要对上帝类进行相应的更改
- en: There are often strange interaction effects between what happens in the God
    Class and what happens in the rest of the system, leading to hard-to-debug errors
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上帝类与系统其他部分之间经常发生奇怪的交互效应，导致难以调试的错误
- en: The class presents a **single point of failure** ( **SPOF** ) within the application,
    and if it fails, none of the additional logic can be processed
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该类在应用程序中呈现出**单点故障**（**SPOF**），如果它失败了，其他任何逻辑都无法被处理
- en: Overall, you end up with an application that’s fragile, brittle, and a bit of
    a mess.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，你最终会得到一个脆弱、易碎且有些杂乱无章的应用程序。
- en: Better solutions
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: When building custom solutions on Salesforce, you’ll generally be using Apex,
    an **object-oriented** ( **OO** ) language closely related to Java. This means
    you should be following good **OO analysis and design** ( **OOAD** ) practices
    if you’re proposing to build anything non-trivial on the platform. While teaching
    OOAD is way beyond the scope of this book, a good place to start is by studying
    the SOLID principles.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Salesforce 上构建自定义解决方案时，你通常会使用 Apex，这是一种与 Java 密切相关的**面向对象**（**OO**）语言。这意味着，如果你打算在该平台上构建任何复杂的应用程序，你应该遵循良好的**面向对象分析与设计**（**OOAD**）实践。虽然本书的范围远远不包括教学
    OOAD，但一个很好的入门点是学习 SOLID 原则。
- en: 'The **SOLID** principles are a set of guidelines that you can use when you’re
    designing software to make it more understandable, maintainable, and extensible.
    The acronym stands for **Single responsibility** , **Open-closed** , **Liskov
    substitution** , **Interface segregation** , and **Dependency injection** ( **DI**
    ). Let’s take a brief look at them:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '**SOLID** 原则是一组在设计软件时可以使用的指导方针，以使软件更易理解、维护和扩展。这个首字母缩略词代表了 **单一职责**，**开放封闭**，**里氏替换**，**接口隔离**
    和 **依赖注入**（**DI**）。让我们简要了解一下它们：'
- en: The **single responsibility principle** ( **SRP** ) is the principle that a
    class or module should have one, and only one, reason to change. This principle
    is often used in conjunction with the **open-closed** **principle** ( **OCP**
    ).
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单一职责原则**（**SRP**）是指一个类或模块应该只有一个且仅有一个原因发生变化。这个原则通常与 **开放封闭** **原则**（**OCP**）一起使用。'
- en: The OCP states that software should be open for extension but closed for modification.
    This means that new functionality should be added by extending the existing code,
    rather than modifying it.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开放封闭原则（OCP）指出，软件应该对扩展开放，但对修改封闭。这意味着应该通过扩展现有代码来添加新功能，而不是修改它。
- en: Liskov substitution is a principle in **object-oriented programming** ( **OOP**
    ) that states that objects of a superclass should be able to be replaced with
    objects of its subclasses without the need to change the functionality of the
    program.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 里氏替换是 **面向对象编程**（**OOP**）中的一个原则，指出一个超类的对象应该能够被其子类的对象替代，而不需要改变程序的功能。
- en: Interface segregation is the process of separating a single interface into multiple,
    smaller interfaces. This can be done for a variety of reasons, such as increasing
    the modularity of a system or reducing the complexity of an interface.
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口隔离是将单一接口分割成多个更小接口的过程。这可以出于多种原因，例如增加系统的模块化或减少接口的复杂性。
- en: DI is a technique for achieving loose coupling between objects and their dependencies.
    It involves providing a component with its dependencies, rather than allowing
    it to create or obtain them itself. This can be done either manually by the programmer
    or automatically by a tool.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖注入（DI）是一种实现对象与其依赖关系之间松耦合的技术。它通过提供组件所需的依赖关系，而不是让组件自己创建或获取这些依赖关系来实现。这可以由程序员手动完成，也可以通过工具自动完成。
- en: 'Having now covered the God Class, let’s move on to our last pattern: error
    hiding.'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论完了“上帝类”，那么我们接下来讲解最后一个模式：错误隐藏。
- en: Error Hiding
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误隐藏
- en: Error Hiding is what happens when you hide technical errors from end users without
    adopting a structured error-handling approach.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 错误隐藏是指当你在没有采用结构化错误处理方法的情况下，隐藏技术错误信息给最终用户的行为。
- en: Example
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: SailCo, a provider of custom-designed sailboats, has a complex configuration
    application for configuring the boats it sells, which is built on top of the Salesforce
    platform. The application is built in a fairly traditional way using a combination
    of LWC and Apex code.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: SailCo 是一家定制设计帆船的供应商，拥有一个复杂的配置应用程序，用于配置其销售的帆船，该应用程序构建在 Salesforce 平台之上。该应用程序以一种相对传统的方式构建，结合了
    LWC 和 Apex 代码。
- en: SailCo users are in general extremely non-technical, and one of the key requirements
    that the custom application had to satisfy was to never show a technical error
    message to an end user. Therefore, the developers of the original application
    devised a way to catch all exceptions and wrap them in a generic error message
    before they were shown to the user.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: SailCo 的用户通常极少具备技术背景，而定制应用程序的一个关键要求是永远不向最终用户显示技术错误信息。因此，原始应用程序的开发人员设计了一种方式来捕获所有异常，并在显示给用户之前将其包装成通用错误信息。
- en: This general message of telling users that an error has occurred in a friendly
    way is the main error message that’s seen in the system since the developers were
    unable or didn’t have sufficient time to differentiate the errors that might occur
    reasonably. Users, however, seem comfortable enough with the solution and don’t
    enquire much about the exact nature of the errors that occasionally occur.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这种以友好方式告知用户发生错误的通用信息是系统中看到的主要错误消息，因为开发人员无法或者没有足够的时间合理区分可能发生的错误。然而，用户似乎对这个解决方案感到足够满意，并且对于偶尔发生的错误的具体性质并不多加追问。
- en: However, after a while, it becomes clear that there are some systematic ways
    in which the configuration application can fail. There are complaints from several
    customers that their desired configurations haven’t been captured successfully
    as part of the order they’ve made and that had been registered in Salesforce using
    the custom application.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，过了一段时间，显然配置应用程序存在一些系统性的故障模式。多个客户投诉他们所需的配置没有成功记录在他们的订单中，而这些订单已经通过自定义应用程序在
    Salesforce 中进行了注册。
- en: No one can pinpoint the error exactly, and it falls to Sarah, a relatively junior
    Salesforce engineer, to try to debug the problem. She starts by reviewing the
    logs that she can generate from the production system but finds that the only
    errors she can see are the generic error messages that are thrown by the wrapping
    mechanism that hides the technical information from the users. In many cases,
    exceptions are simply caught but never handled.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 没有人能准确指出错误所在，最后由相对较初级的 Salesforce 工程师 Sarah 来尝试调试这个问题。她首先回顾了她可以从生产系统中生成的日志，但发现她能看到的唯一错误是被包装机制抛出的通用错误信息，这些信息将技术细节隐藏在用户之外。在许多情况下，异常仅仅是被捕获了，却从未得到处理。
- en: This means the production logs are, effectively, of no use to her debugging
    efforts. She tries to reproduce the errors in lower environments after making
    some changes to the code to get the raw stack trace instead of the wrapped error
    message. However, she’s unable to reproduce the errors in the lower environments.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着生产日志实际上对她的调试工作没有帮助。她尝试在做了一些代码更改后，在较低的环境中重现错误，以获得原始的堆栈跟踪，而不是被封装的错误信息。然而，她无法在较低环境中重现错误。
- en: She seeks and eventually gets permission for a special production release to
    add improved logging to the system. However, she needs to do a major refactoring
    of the existing code base as the quick hack she used initially wasn’t deemed fit
    for production use.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 她寻求并最终获得了一个特殊的生产版本发布许可，以便向系统添加改进的日志记录功能。然而，她需要对现有代码库进行大规模重构，因为她最初使用的快速修补程序被认为不适合生产环境使用。
- en: After doing the major code refactor with the help of a few other SailCo developers,
    she manages to get the new logging functionality into production. As luck would
    have it, the problem turns out to be a trivial coding error.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在几位其他 SailCo 开发人员的帮助下，经过大规模的代码重构，她成功将新的日志功能投入生产。幸运的是，问题证明只是一个微不足道的编码错误。
- en: Sarah fixes the issue and releases the new code to production, confident that
    with the new error-handling approach, she’ll be able to find issues even if the
    current fix doesn’t address all the problems that may be found in the code base.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Sarah 修复了这个问题，并将新代码发布到生产环境，确信通过新的错误处理方法，她将能够发现问题，即使当前的修复并没有解决代码库中可能存在的所有问题。
- en: Problem
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: 'Error hiding is done for an excellent reason: to not show end users ugly technical
    error messages that are going to confuse them and make them lose faith in our
    application. In an ideal world, we want to recover gracefully from all errors
    or at least show a friendly, easy-to-understand error message.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 错误隐藏是出于一个很好的原因：为了不向最终用户展示那些会让他们困惑并导致他们失去对我们应用程序信任的丑陋技术错误信息。在理想的世界里，我们希望能够从所有错误中优雅地恢复，或者至少显示一条友好、易于理解的错误信息。
- en: 'You can see a simple example of error hiding here:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里看到一个简单的错误隐藏示例：
- en: '![Figure 5.6 – Simple example of error hiding](img/B30991_05_06.jpg)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.6 – 错误隐藏的简单示例](img/B30991_05_06.jpg)'
- en: Figure 5.6 – Simple example of error hiding
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 错误隐藏的简单示例
- en: In practice, we mostly only have time to analyze the most common failure modes
    during analysis and design, leaving a large number of potential failures that
    we haven’t prepared for. With the error hiding anti-pattern, we end up hiding
    all of these errors not only from the end user but also from ourselves.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们通常只有时间在分析和设计阶段分析最常见的故障模式，留下了大量我们没有准备的潜在故障。采用错误隐藏反模式后，我们最终不仅把这些错误隐藏起来，不让最终用户看到，甚至连我们自己也看不见。
- en: Proposed solution
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提议的解决方案
- en: The error-hiding anti-pattern solves the problem of not showing end users technical
    error messages by simply hiding away errors or replacing any error with a generic
    innocuous error message. This is done technically in a way where an exception
    is caught and the information contained in that exception is simply discarded,
    whether or not a message is shown to the end user.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 错误隐藏反模式通过简单地隐藏错误或将任何错误替换为通用的无害错误信息来解决不向最终用户显示技术错误信息的问题。技术上，这种做法是通过捕获异常并简单地丢弃该异常包含的信息来完成的，无论是否向最终用户显示消息。
- en: That means we have no logging or way to capture error information systematically.
    Consequently, we have no way of knowing what, if any, systematic issues are happening
    in our application that we might not have thought of and no way of debugging issues
    that occur in production environments that aren’t immediately replicable in lower
    environments.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们没有日志记录或系统性捕获错误信息的方法。因此，我们无法知道应用程序中是否存在任何系统性问题，这些问题可能是我们之前没有考虑到的，也无法调试在生产环境中发生的、在低环境中无法立即重现的问题。
- en: This anti-pattern saves time for developers because there’s no need for them
    to apply a structured error-handling approach during development, and it meets
    the users’ need to not see confusing messages. However, it comes with many negative
    side effects.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这种反模式节省了开发人员的时间，因为他们在开发过程中无需采用结构化的错误处理方法，同时它也满足了用户不想看到混淆信息的需求。然而，它带来了许多负面副作用。
- en: Results
  id: totrans-323
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果
- en: The most obvious result of error hiding is that you can’t find the error. Errors
    are systematically hidden, and you have to rely on user reports and your ability
    to reproduce those to address any issues.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 错误隐藏最明显的结果是你无法找到错误。错误被系统地隐藏，你只能依赖用户报告以及你重现问题的能力来解决任何问题。
- en: Debugging errors in Salesforce without good log information can be extremely
    hard, especially when the errors may be related to user context, data volumes,
    or similar variables that aren’t easy to control.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有良好日志信息的情况下调试Salesforce中的错误可能非常困难，尤其是当错误可能与用户上下文、数据量或类似的难以控制的变量有关时。
- en: This means your maintenance costs will be substantially increased and your cycle
    time for bug resolution will lengthen. Users are also likely to start losing faith
    in the system as they find that there may be issues that are swept under the carpet,
    which can lead to a vicious cycle of users starting to blame all sorts of ailments
    on hidden system issues.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你的维护成本将大幅增加，解决漏洞的周期也会变长。随着用户发现可能存在被掩盖的问题，他们也可能开始对系统失去信心，这会导致一个恶性循环，用户开始把所有问题归咎于隐藏的系统问题。
- en: Eventually, you’ll need to refactor the application and introduce a systematic
    approach to logging and error handling. This will generally turn out to be much
    more expensive than having done things properly the first time.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你需要重构应用程序并引入系统化的日志记录和错误处理方法。通常，这比第一次就正确做事要昂贵得多。
- en: Better solutions
  id: totrans-328
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的解决方案
- en: The solution to error hiding is to adopt a structured approach to error handling,
    starting at the analysis phase of the project. You should analyze common failure
    modes and prepare for them proactively rather than simply focusing on the happy
    path.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 错误隐藏的解决方案是采取结构化的错误处理方法，从项目的分析阶段开始。你应该分析常见的故障模式，并积极地为它们做好准备，而不仅仅是关注“顺利路径”。
- en: You should also have a standard for error handling that includes how to handle
    exceptions, how to log errors, and how to show error messages to end users in
    different contexts. You should also adopt a good logging framework. I tend to
    recommend Nebula ( [https://github.com/jongpie/NebulaLogger](https://github.com/jongpie/NebulaLogger)
    ) as a framework, but there are many good options available from the community.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该制定一个错误处理标准，其中包括如何处理异常、如何记录错误以及如何在不同的上下文中向最终用户展示错误信息。你还应该采用一个好的日志框架。我倾向于推荐Nebula（[https://github.com/jongpie/NebulaLogger](https://github.com/jongpie/NebulaLogger)）作为框架，但社区中也有许多不错的选择。
- en: When looking for one, keep the following in mind. A good logging framework should
    be easy to use and configure, enabling logging from multiple sources (for example,
    Apex, flows, integrations, and so on) without impacting application performance.
    Additionally, implement a tiered logging system that captures different levels
    of detail (for example, **INFO** , **WARN** , and **ERROR** ) to balance between
    user-friendly messages and detailed diagnostic information. Ideally, you also
    want to be able to easily visualize errors and follow them across process boundaries.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找日志框架时，请记住以下几点：一个好的日志框架应该易于使用和配置，能够从多个来源（例如，Apex、流程、集成等）进行日志记录，而不会影响应用性能。此外，实施分层日志系统，捕获不同级别的详细信息（例如，**INFO**、**WARN**
    和 **ERROR**），以平衡用户友好的消息和详细的诊断信息。理想情况下，你还希望能够轻松地可视化错误并跨越流程边界追踪它们。
- en: In all of this, of course, you’ll want to insulate your end users from technical
    error messages. But you’ll want to do it without resorting to an anti-pattern.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一切中，当然，你希望将终端用户与技术错误消息隔离开。但你希望做到这一点时不依赖反模式。
- en: Now that we’ve covered our final anti-pattern, we’re ready to move on to our
    key takeaways.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论完了最后一个反模式，我们可以开始总结我们的关键要点。
- en: Knowing the takeaways
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解关键要点
- en: In this section, we’ll abstract a bit from the specific patterns and instead
    try to pull out the wider learning points you can use in your day-to-day work
    as a Salesforce architect or in preparing for the CTA Review Board.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将从具体模式中抽象一些，尝试提炼出你可以在日常工作中作为 Salesforce 架构师使用的更广泛的学习要点，或者在准备 CTA 审查委员会时使用的要点。
- en: 'When architecting Salesforce solutions, you should be mindful of the following:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在架构 Salesforce 解决方案时，你应该注意以下事项：
- en: Don’t rush into a solution based on what your organization usually does. Carefully
    consider your options.
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要急于基于组织的常规做法来寻找解决方案。仔细考虑你的选项。
- en: When making a buy-versus-build decision, be careful to count the real TCO of
    a custom solution, including long-term run and maintenance costs.
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在做购买与自建决策时，务必仔细计算定制解决方案的实际总拥有成本（TCO），包括长期运行和维护成本。
- en: Don’t design solutions for a specific license set if you can avoid it.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可以避免，不要为特定许可证集设计解决方案。
- en: Instead, push for a better commercial deal, different scope, or different license
    mix.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相反，争取更好的商业交易、更广的范围或不同的许可证组合。
- en: You must make assumptions about your user base, but be careful about systematic
    bias.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你必须对用户群体做出假设，但要小心系统性偏见。
- en: To help mitigate bias, use various consultation methods during development to
    derisk.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了帮助减轻偏见，开发过程中应使用各种咨询方法以降低风险。
- en: Don’t become too invested in a new technology. No matter how cool it seems,
    it’s not the answer to everything.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要对新技术过于投入。无论它看起来多么酷，它都不是万灵药。
- en: Automations is a particular pain point in many Salesforce solutions. It should
    be a particular focus of technical governance.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化是许多 Salesforce 解决方案中的一个特别痛点。它应该是技术治理的重点之一。
- en: Prefer a simpler automation setup to a more complex one.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先选择简化的自动化设置，而不是更复杂的设置。
- en: If you need a complex custom UX, decompose the functionality in a meaningful
    way rather than putting everything in a single component.
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要复杂的自定义 UX，请以有意义的方式拆解功能，而不是将所有内容放在一个单一组件中。
- en: When doing substantial development on Salesforce, you should apply all the same
    good practices that apply to other OO development projects in similar languages.
    This includes how you structure your classes and how you handle exceptions and
    errors.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Salesforce 上进行大量开发时，你应该应用所有适用于类似语言中其他面向对象开发项目的好实践。这包括如何构建你的类以及如何处理异常和错误。
- en: Regularly review and refactor your solution architecture to ensure it remains
    aligned with evolving business needs and Salesforce platform capabilities.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期回顾和重构你的解决方案架构，以确保其始终与不断变化的业务需求和 Salesforce 平台功能保持一致。
- en: 'In preparing for the CTA Review Board, you should be mindful of the following:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备 CTA 审查委员会时，你应该注意以下事项：
- en: Using AppExchange products in your solution is entirely appropriate and usually
    preferable to custom solutions
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的解决方案中使用 AppExchange 产品是完全合适的，通常比定制解决方案更可取。
- en: Recommend products you know and can justify or are well-known in the market
    to avoid unnecessary questions
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐你了解并能够证明其价值的产品，或者是市场上广为人知的产品，以避免不必要的问题。
- en: Assume that budget isn’t a constraint and recommend the right licenses for the
    job
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设预算不是限制因素，并推荐适合工作的正确许可证
- en: However, don’t go overboard and recommend lots of additional feature licenses
    if you don’t need them
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，不要过度推荐大量额外的功能许可，如果不需要的话
- en: Make assumptions freely, but state them as you go along
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自由地做出假设，但在过程中要表明假设的前提
- en: Be prepared for judges to ask you to consider what would happen if you changed
    a key assumption on the fly
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要做好准备，假如评委让你考虑如果你临时改变了一个关键假设会发生什么
- en: Recommend the right tool for the job and avoid relying on too one-sided of a
    solutioning approach
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐适合的工具来完成任务，避免依赖过于片面的解决方案方法
- en: Don’t go overboard with automations, and always be clear about what approach
    you’re recommending and why
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要过度依赖自动化，始终清晰地说明你推荐的方法以及推荐的理由
- en: Prefer a simpler automation setup to a more complex one
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先选择简单的自动化设置而不是复杂的自动化设置
- en: Recommending custom components is often appropriate, but be careful not to overdo
    its functionality
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐定制组件通常是合适的，但要小心不要过度开发其功能
- en: Do remember that when recommending code-based solutions, you should also know
    good practices for OO development, although it might mainly be relevant during
    Q&A
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，在推荐基于代码的解决方案时，你还应该了解面向对象开发的良好实践，尽管这在问答环节时可能更为相关
- en: Have a structured error-handling approach in mind that you can tell the judges
    should they ask
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个结构化的错误处理方法，这样如果评委提问时你可以清楚地说明
- en: Be prepared to discuss strategies for managing technical debt in long-term Salesforce
    implementations, including refactoring approaches and when to consider re-architecturing
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备好讨论在长期的Salesforce实施中管理技术债务的策略，包括重构方法以及何时考虑重新架构
- en: With that, we’ve covered the material for this chapter and are ready to proceed.
    But first, let’s summarize what we’ve learned.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们已经覆盖了本章的内容，准备继续进行。但首先，让我们总结一下我们学到的知识。
- en: Summary
  id: totrans-364
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered eight anti-patterns, more than any chapter so far.
    That isn’t accidental. Solution architecture is probably the most time-consuming
    activity for most architects. Even if we aren’t directly responsible for all parts
    of the solution, we get pulled in to consult on features all the time.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们讨论了八个反模式，比迄今为止的任何一章都要多。这并非偶然。解决方案架构可能是大多数架构师最耗时的工作。即使我们不是直接负责解决方案的所有部分，我们也经常参与咨询特性。
- en: Solution architecture is the most visible part of our efforts. While integration
    architecture, data architecture, and security architecture set the baseline on
    which we create our solutions, ultimately, it’s the solution that we devise for
    the users that’s the basis of their judgment.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案架构是我们工作中最显眼的部分。虽然集成架构、数据架构和安全架构为我们创建解决方案设定了基础，但最终，用户判断的基础是我们为他们设计的解决方案。
- en: If we get the core architecture right but fail to deliver a good solution, in
    the eyes of most observers, we’ll have failed. Unfortunately, it’s also a really
    hard area to get right.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们正确地构建了核心架构，但未能交付一个好的解决方案，在大多数观察者眼中，我们就失败了。不幸的是，这也是一个非常难以做到的领域。
- en: As these anti-patterns show, keeping the right balance between flexibility and
    discipline and between giving the users what they want and adhering to good technical
    practice is something that requires experience and good judgment. Hopefully, you
    now have an even deeper appreciation of that fact.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 如同这些反模式所展示的，保持灵活性与规范之间的平衡，既能满足用户需求又能遵循良好的技术实践，这需要经验和良好的判断力。希望你现在能更深刻地理解这一点。
- en: 'Having covered solution architecture, let’s move on to our next domain: integration
    architecture.'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 讲解了解决方案架构后，让我们继续讨论下一个领域：集成架构。
