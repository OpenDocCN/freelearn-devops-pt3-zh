- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Developing a DevOps Culture
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建DevOps文化
- en: The core of a successful DevOps implementation does not lie with the technology
    and tooling used. Instead, getting the surrounding team culture in place and aligned
    with a new way of working is the most essential element that underpins DevOps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 成功实施DevOps的核心不在于使用的技术和工具。相反，建立并与新工作方式保持一致的团队文化是DevOps的最关键因素。
- en: 'In this chapter, we will cover the importance of the offline aspects of DevOps,
    and how a culture of collaboration and communication is fundamental to DevOps
    success. We’ll see ways in which to drive adoption and alignment with best practices
    in your organization. Along the way, we’ll explore the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论DevOps的线下方面的重要性，以及协作和沟通文化如何是DevOps成功的基础。我们将探讨在组织中推动采纳和与最佳实践保持一致的方法。过程中，我们将探索以下内容：
- en: Why culture is key to a DevOps transformation and how we can start building
    it
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么文化是DevOps转型的关键，以及我们如何开始构建它
- en: The need to strive for strong communication that drives collaboration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 努力推动强有力的沟通以促进协作
- en: Ways to drive adoption of and alignment to a DevOps approach
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推动采纳DevOps方法并与其保持一致的方式
- en: The need for a DevOps culture
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要建立DevOps文化
- en: The history of software development and its delivery has been long and ever-changing.
    As the landscape of technology has changed, so has the need for businesses to
    get that technology into the hands of customers. DevOps represents a drive to
    deliver according to that need, replacing monolithic software releases, lengthy
    project cycles, and opaque waterfall methodologies.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发及交付的历史悠久且不断变化。随着技术领域的变革，企业对将这些技术交到客户手中的需求也在不断增加。DevOps代表着根据这一需求进行交付的推动力，它取代了传统的单体软件发布、漫长的项目周期和不透明的瀑布式开发方法。
- en: When we look at DevOps as a way of delivering change, it’s very easy to get
    pulled into looking at the software tools first, but this should not be where
    your DevOps journey begins. It’s equally important to keep in mind that any DevOps
    transformation should not be prescriptive; instead, it should align with you and
    your organization’s way of working. This approach is equally important for those
    that have had prior DevOps experience with other teams or systems – there is no
    “one size fits all” approach to DevOps, and while experience can be brought to
    bear on building a DevOps culture with a new team, you should be mindful of tailoring
    it to fit the team.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们把DevOps视为一种变革交付方式时，很容易首先关注软件工具，但这不应该是你DevOps之旅的起点。同样重要的是要牢记，任何DevOps转型都不应该是具有指导性的；它应该与你和你所在组织的工作方式保持一致。对于那些曾经在其他团队或系统中有过DevOps经验的人来说，这一点尤为重要——DevOps没有“万能”的方法，虽然经验可以帮助在新团队中建立DevOps文化，但你应该注意根据团队的特点进行定制。
- en: However, there are some common elements that work consistently for high-performing
    DevOps teams, so you should contemplate making these a part of your plan to bring
    DevOps culture to life. Let’s begin by looking at some of the characteristics
    of successful DevOps teams and the elements of DevOps culture they have adopted,
    before diving deeper into how to deliver them.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，成功的DevOps团队有一些共同的特征，这些特征对高效的团队始终有效。因此，你应该考虑将这些特征纳入你的计划中，以将DevOps文化付诸实践。让我们先来看看成功的DevOps团队的特征及其采纳的DevOps文化要素，然后再深入探讨如何实现它们。
- en: Strongly defined teams
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 明确的团队定义
- en: As the name suggests, DevOps teams are a hybrid of IT Development and IT Operations
    teams, but the reality is not as straightforward. Successful DevOps teams comprise
    teams from the full end-to-end spectrum of software delivery, from business analysts
    gathering the requirements and architects designing solutions to those requirements
    through to developers implementing those solutions and operations delivering those
    requirements in your Salesforce environments.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，DevOps团队是IT开发团队和IT运维团队的结合体，但现实情况并不像表面那么简单。成功的DevOps团队由软件交付全流程的各个团队组成，从业务分析师收集需求和架构师设计解决方案，到开发人员实现这些解决方案，再到运维人员在Salesforce环境中交付这些需求。
- en: It is within this cross-functional team structure that you need to establish
    strong buy-in for DevOps. A team that does not understand or appreciate the value
    of a process is unlikely to adopt DevOps – and it only takes a few shortcuts or
    out-of-process releases to damage the good work the rest of your DevOps team has
    done. It is vital that the entire team aligns and engages with DevOps as a way
    of working, to make the initiative successful.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正是在这种跨职能团队结构中，你需要为DevOps建立强有力的支持。一个不理解或不重视过程价值的团队，不太可能采纳DevOps——而且只需要几次偷工减料或不按流程发布，就能破坏你们DevOps团队的良好工作。至关重要的是，整个团队要与DevOps的工作方式保持一致并参与其中，才能让这一举措取得成功。
- en: A team that aligns with DevOps practices has shared responsibility for the entire
    application life cycle, from planning to deployment and maintenance, thus reducing
    standoffs and finger-pointing over who is responsible for fixing bugs or test
    failures. Additionally, DevOps encourages product teams to be more involved in
    the development process, ensuring that their input and expertise are considered
    throughout the application life cycle.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与DevOps实践对齐的团队对整个应用生命周期负责，从规划到部署和维护，减少了在修复bug或测试失败时的对立和推卸责任。此外，DevOps鼓励产品团队更加参与开发过程，确保他们的意见和专业知识在整个应用生命周期中得到考虑。
- en: As architects, we need to convey the value that DevOps brings since for most
    teams – whether technical or on the business side – this tends to be the key factor
    that gets people on board. By showing how DevOps benefits everyone along the development
    journey we have outlined, we stand a better chance of getting teams on board with
    DevOps, compared to a hard enforcement of processes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作为架构师，我们需要传达DevOps带来的价值，因为对大多数团队来说——无论是技术团队还是业务团队——这通常是让人们加入的关键因素。通过展示DevOps如何在我们概述的开发旅程中使每个人受益，相比于强制执行流程，我们更有可能让团队接受DevOps。
- en: Companies that have yet to adopt a DevOps culture for software delivery may
    have lost trust in their delivery teams, bringing in heavyweight processes in
    an attempt to prevent the risk of future failures. Part of adopting a DevOps culture
    is restoring that trust by providing tools and processes that empower teams to
    succeed and allow any failures to be small, rather than bogging everything down
    by trying to avoid failure entirely.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尚未采用DevOps文化进行软件交付的公司，可能已经失去了对交付团队的信任，试图通过引入重型流程来防止未来失败的风险。采用DevOps文化的一部分就是通过提供能够帮助团队成功的工具和流程来恢复信任，并让任何失败保持在较小的范围内，而不是通过避免失败完全来拖慢一切进展。
- en: In general, one of the benefits of DevOps and Agile is to be able to take small
    steps safely. DevOps and Agile methodologies advocate for small, incremental releases
    rather than large, monolithic deployments. This approach allows teams to identify
    and fix issues more quickly, reducing the risk of catastrophic failures. It also
    enables them to respond to changing requirements or market conditions more effectively.
    As a result, trust in the team’s ability to deliver accurate results and adapt
    to change grows.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，DevOps和敏捷的一个好处是能够安全地迈出小步伐。DevOps和敏捷方法提倡小步、增量发布，而非大型的、单一的部署。这种方法可以让团队更快地识别并解决问题，降低灾难性失败的风险。它还使团队能更有效地应对不断变化的需求或市场条件。因此，团队在交付准确结果和适应变化方面的信任度会增加。
- en: Closely working together
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 紧密合作
- en: Hand in hand with strong teams is the need to collaborate and communicate with
    each other. This may seem an obvious need in all working teams, not just DevOps,
    but the principles of clarity, visibility, and cooperation really come to the
    fore with DevOps and are essential for its smooth running.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 与强大的团队并行的是彼此协作和沟通的需求。这看起来是所有工作团队中的显而易见需求，不仅仅是DevOps团队，但在DevOps中，清晰、可见性和合作的原则真正突显出来，对于其顺利运行至关重要。
- en: To break down the siloed approach to software delivery and work toward a common
    goal, the entire team needs to be aware of how projects are being delivered. Techniques
    such as Agile and tools such as Jira or Asana will certainly help with this, but
    that’s only part of the picture of collaboration, as we’ll explore shortly.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了打破软件交付的孤岛式做法并朝着共同目标努力，整个团队需要了解项目是如何交付的。像敏捷（Agile）这样的技术和像Jira或Asana这样的工具无疑会有所帮助，但这只是协作图景的一部分，正如我们稍后会探讨的那样。
- en: Constant evolution
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续演进
- en: 'No matter how mature a DevOps team may be, the highest-performing teams are
    always open to change and improvement. Through a continuous cycle of measurement,
    enhancement, and re-measuring, these teams are able to pinpoint areas where performance
    and accuracy gains can be made and then address them. The most common metrics
    they tend to focus on are based on the DORA metrics, as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无论 DevOps 团队多么成熟，表现最好的团队总是愿意接受变化和改进。通过不断的测量、改进和重新测量，这些团队能够找出可以提高性能和准确性的领域，并加以解决。它们通常关注的最常见指标基于
    DORA 指标，具体如下：
- en: '**Deployment frequency**: How often a team releases to production'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署频率**：团队向生产环境发布的频率'
- en: '**Change lead time**: How long it takes for a specific feature to reach production'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更交付时间**：特定功能到达生产环境所需的时间'
- en: '**Change failure rate**: The proportion of deployments that either fail to
    deploy or cause errors in production'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更失败率**：部署失败或在生产中引起错误的部署比例'
- en: '**Mean time to recovery**: How long it takes to recover from a production error
    or another issue'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复平均时间**：从生产错误或其他问题中恢复所需的时间'
- en: In the context of Salesforce, measuring against these metrics can be a bit different
    since it’s a cloud-based platform with specific features and limitations. Metrics
    such as deployment frequency, change lead time, and mean time to recovery can
    be determined easily enough, especially if you have a ticketing system such as
    Jira or Asana for managing new work.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Salesforce 的背景下，衡量这些指标可能稍有不同，因为它是一个基于云的平台，具有特定的功能和限制。像部署频率、变更交付时间和恢复平均时间这样的指标很容易确定，特别是如果你有像
    Jira 或 Asana 这样的工单系统来管理新工作。
- en: 'The change failure rate can be a little trickier, though, since it involves
    tracking unsuccessful deployments and the number of incidents or defects related
    to those deployments. There are a few ways you could approach this – we’ll cover
    Salesforce-specific DevOps solutions and platforms in later chapters, but as an
    example using on-platform features, you could try the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 变更失败率可能稍微复杂一些，因为它涉及跟踪失败的部署以及与这些部署相关的事件或缺陷数量。你可以用几种方法来处理这个问题——我们将在后续章节中讨论 Salesforce
    特定的 DevOps 解决方案和平台，但作为一个使用平台内特性的示例，你可以尝试以下方法：
- en: Use Salesforce’s deployment history, available on the **Deployment Status**
    page, to track the success and failure rates of deployments. Identify failed deployments
    and the specific components that caused the failure.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Salesforce 的部署历史，可以在 **部署状态** 页面上查看部署的成功率和失败率。识别失败的部署及导致失败的具体组件。
- en: Keep a record of all production incidents, including those caused by recent
    deployments. You can use the Salesforce Case object to log and track incidents.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录所有生产事件，包括由最近部署引起的事件。你可以使用 Salesforce Case 对象来记录和跟踪事件。
- en: For each failed deployment or production incident, analyze the root cause and
    determine whether it was due to a recent change. You can use the Salesforce Developer
    Console, debug logs, and test results to pinpoint the root cause of the issues.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于每一个失败的部署或生产事件，分析根本原因并确定是否与最近的变化有关。你可以使用 Salesforce Developer Console、调试日志和测试结果来找出问题的根本原因。
- en: Divide the number of failed changes (deployments causing incidents or defects)
    by the total number of changes made during a specific period. Multiply the result
    by 100 to get the change failure rate as a percentage.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将失败的变更数量（导致事件或缺陷的部署）除以特定期间内所做变更的总数。将结果乘以 100 得到变更失败率的百分比。
- en: The origin of the DORA metrics
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DORA 指标的起源
- en: The DORA metrics came from a group called **DevOps Research and Assessment**,
    which was founded in 2015 by Nicole Forsgren, Gene Kim, and Jez Humble (and later
    acquired by Google in 2018), to better understand what factors led to high-performing
    DevOps teams. Since that initial research, these four metrics have become an industry-standard
    set of measurements of DevOps success.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: DORA 指标来自一个名为 **DevOps Research and Assessment** 的小组，该小组由 Nicole Forsgren、Gene
    Kim 和 Jez Humble 于 2015 年创立（并在 2018 年被 Google 收购），旨在更好地理解哪些因素导致高效能的 DevOps 团队。自从最初的研究以来，这四个指标已成为衡量
    DevOps 成功的行业标准。
- en: Now that we’ve determined the need for, and elements of, a strong DevOps culture,
    let us look in more detail at some techniques for creating this culture.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了强大 DevOps 文化的需求和要素，让我们更详细地看看一些创建这种文化的技巧。
- en: Collaboration and communication
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协作与沟通
- en: In an ideal DevOps team, the whole team works in the same way and toward the
    same goal – there should be a shared responsibility for the successful delivery
    of changes. Fundamental to this collaborative approach is strong communication,
    and this can take many forms, from the more formal approach needed for governance
    of the overall change management process down to the daily interactions that form
    part of your usual workflow.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的DevOps团队中，整个团队以相同的方式工作，朝着相同的目标努力——应对变更交付的成功共同承担责任。这个协作方法的核心是强有力的沟通，这种沟通可以采取多种形式，从治理整体变更管理流程所需的更正式的方式，到日常互动，这些互动构成了你常规工作流程的一部分。
- en: Communication should be clear, informative, and present at every step of the
    delivery life cycle. For example, when using version control, teams should endeavor
    to always provide *meaningful* commit messages and comments on peer reviews. These
    aid teams to carry out the next steps of any change delivery process with *context*,
    not just the specifics of the change itself. There is often a balance needed between
    providing sufficiently detailed information and *relevant* information, and you
    should iterate on this level of detail to find the sweet spot that works for you
    and your team.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 沟通应该清晰、信息丰富，并且贯穿于交付生命周期的每个步骤。例如，在使用版本控制时，团队应努力始终提供*有意义的*提交信息和同行评审的评论。这些有助于团队以*背景*为基础进行下一步变更交付过程，而不仅仅是具体的变更内容。通常需要在提供足够详细的信息和*相关*信息之间取得平衡，你应该不断调整这种细节层次，以找到适合你和团队的最佳平衡点。
- en: While this book is not an exploration of Agile principles, there does seem to
    be a strong correlation between successful DevOps teams and Agile practitioners
    since both disciplines foster these same principles of regular, clear, and concise
    communication to drive projects forward. Such techniques encompass all team members
    involved in delivering change so that everyone is informed and aware of the process
    and progress of work.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书并未深入探讨敏捷原则，但成功的DevOps团队与敏捷实践者之间确实存在着强烈的关联，因为这两个领域都强调定期、清晰和简洁的沟通原则，以推动项目向前发展。这些技巧涵盖了所有参与变更交付的团队成员，以确保每个人都了解并意识到工作流程和进度。
- en: Equally, tools will help bring visibility and clarity to daily work. Software
    for managing features as they go through your DevOps process, such as Jira, Asana,
    Azure DevOps, and so on, can bring this overview to your processes when used properly
    and they integrate in some way into most DevOps tools to complete the picture.
    Many teams have started to eschew email as an internal communication medium, instead
    favoring the immediacy of messaging platforms such as Slack or Teams as a further
    means of breaking down siloes and removing barriers between cross-functional teams.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，工具将帮助提高日常工作的可见性和清晰度。用于管理特性通过DevOps流程的软件，如Jira、Asana、Azure DevOps等，在正确使用时可以为你的流程提供概览，并且它们与大多数DevOps工具以某种方式集成，以完善整个画面。许多团队已经开始摒弃电子邮件作为内部沟通媒介，而是更倾向于使用即时消息平台，如Slack或Teams，作为进一步打破孤岛并消除跨职能团队之间障碍的方式。
- en: The necessity of adapting to remote work has led to an increased reliance on
    digital communication tools and has changed the dynamics of team interaction in
    a number of ways. With teams distributed across various locations and time zones,
    it is essential to have tools that enable real-time collaboration and offer instant
    communication, file-sharing, and integration with other tools. In remote work,
    it is not always possible to gather everyone at the same time for discussions.
    Asynchronous communication tools, such as project management platforms, shared
    documents, and threaded discussions on messaging apps, allow team members to contribute
    at their convenience and keep everyone informed of progress.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 适应远程工作的必要性导致了对数字沟通工具的依赖增加，并且在许多方面改变了团队互动的动态。由于团队成员分布在不同地点和时区，拥有能够实现实时协作的工具是至关重要的，这些工具提供即时沟通、文件共享以及与其他工具的集成。在远程工作中，并非总是能够在同一时间召集所有人进行讨论。异步沟通工具，如项目管理平台、共享文档以及消息应用中的线程讨论，使团队成员能够在方便的时候做出贡献，并让每个人了解进展。
- en: With every adaptation that needs to be made with the shift to remote working,
    balance is key. With the shift to digital communication, remote workers may face
    an influx of messages and notifications. Messaging platforms have adapted by offering
    features such as channels, threads, and snooze options, allowing team members
    to prioritize and manage their communications effectively. However, it is equally
    important to maintain a sense of connection and engagement between team members.
    Messaging platforms facilitate informal interactions, such as virtual water-cooler
    conversations, quick check-ins, and social activities, helping teams stay connected
    and fostering a positive team culture.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在向远程工作转变的过程中，每个需要适应的变化都需要保持平衡。随着数字通信的普及，远程工作者可能会面临大量的消息和通知涌入。消息平台通过提供频道、线程和打盹选项等功能进行适应，帮助团队成员有效地优先处理和管理通讯。然而，保持团队成员之间的连接和参与感同样重要。消息平台促进了非正式的互动，如虚拟水冷器聊天、快速签到和社交活动，帮助团队保持联系并促进积极的团队文化。
- en: Remote work has made it necessary for teams to communicate effectively without
    the context provided by face-to-face interactions. Modern methods of communication
    for distributed teams encourage team members to be more concise and clear in their
    communications, as well as more intentional with their responses.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 远程工作使得团队必须在没有面对面交流所提供的背景下有效沟通。现代的远程团队沟通方法鼓励团队成员在沟通时更加简洁和清晰，同时在回应时也更加有意识。
- en: Finally, as remote work relies on digital communication tools, ensuring data
    security and compliance with industry regulations becomes critical. Technological
    solutions have responded by offering end-to-end encryption, data storage options,
    and compliance features tailored to different industries.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，由于远程工作依赖于数字通信工具，确保数据安全性和符合行业规定变得至关重要。技术解决方案已经通过提供端到端加密、数据存储选项和针对不同行业的合规功能来做出响应。
- en: Adoption and alignment
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采纳与对齐
- en: As we’ve seen, the adoption of a DevOps culture should come before the adoption
    of DevOps technology. Within each, however, the optimal approach is always to
    start slowly – it’s often said that DevOps is a journey, not a destination, and
    to that end, we should begin with some planning.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，DevOps 文化的采纳应该先于 DevOps 技术的采纳。然而，在每个方面，最佳的做法始终是慢慢开始——人们常说 DevOps 是一段旅程，而不是一个目的地，为此，我们应该从一些规划开始。
- en: Questions to start with
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始时的问题
- en: 'The best place to start any kind of journey is to look at where we would like
    to go, with a few questions:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 开始任何旅程的最佳方式是先看看我们想要去哪里，并提出一些问题：
- en: '*What does the intended process* *look like?*'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*预期的流程是* *什么样的？*'
- en: Knowing your target scenario helps focus your efforts and prevents unnecessary
    disruption to your business. For example, is the ultimate goal to be able to deliver
    business requirements faster and incrementally, or do you want to work to a more
    scheduled, sprint-based approach, but have better visibility and control over
    the elements contained within that sprint? Having the aims well defined up front
    helps focus teams on delivering them.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 了解你的目标场景有助于集中精力，避免对业务造成不必要的干扰。例如，最终目标是能够更快地、逐步地交付业务需求，还是想采用更有计划的、基于冲刺的方式，但又能更好地看到并控制冲刺中的各个元素？事先明确目标有助于团队专注于实现这些目标。
- en: '*What is the intended audience for the* *new process?*'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*新流程的目标受众是* *谁？*'
- en: A new DevOps process will impact more than just development and operations teams.
    If you truly want to adopt an end-to-end Salesforce DevOps approach, you will
    need to align not just the technical teams but also those involved in the gathering
    and assigning of work tasks, those responsible for project management, release
    management, overall architecture, business approval, and more. We’ll look at some
    of these governance aspects shortly.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一个新的 DevOps 过程将影响的不仅仅是开发和运维团队。如果你真的想要采纳端到端的 Salesforce DevOps 方法，你不仅需要对齐技术团队，还需要协调那些参与任务收集和分配、项目管理、发布管理、整体架构、业务审批等工作的人员。我们稍后将讨论一些治理方面的内容。
- en: '*What do we need to change in our* *current approach?*'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*我们需要在当前的方法中* *做出哪些改变？*'
- en: While it’s not unheard of, it’s rare that an existing process needs to be completely
    replaced. Take stock of your current delivery model and make note of what works
    and what doesn’t work. Where are the bottlenecks that are slowing you down? How
    many attempts does it take to get something delivered to production? If we look
    again at the DORA metrics discussed earlier, where are we starting from? Getting
    a baseline set of metrics before you start a DevOps transformation is a solid
    way of measuring progress and improvement – and ultimately, your return on investment
    – as you begin to adopt Salesforce DevOps. Furthermore, having the ability to
    demonstrate the problem (and later, the improvements made) to executive stakeholders
    is invaluable in getting their buy-in for a DevOps transformation project.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然并非没有先例，但要完全替换现有流程的情况是比较罕见的。先评估一下你当前的交付模式，并记录下哪些有效，哪些无效。哪些瓶颈在拖慢你的进度？交付一个生产版本需要多少次尝试？如果我们重新审视之前讨论过的
    DORA 指标，我们的起点在哪里？在开始 DevOps 转型之前，设定一组基准指标是衡量进展和改进的坚实方式——最终，它将帮助你衡量投资回报率，尤其在你开始采用
    Salesforce DevOps 时。此外，能够向高层管理者展示问题（以及后来所做的改进）是赢得他们支持 DevOps 转型项目的无价之宝。
- en: 'With these questions front of mind, it becomes easier to start identifying
    the potential gains from adopting Salesforce DevOps, which, in turn, can help
    drive team alignment with the change. This step is essential – everybody involved
    needs to become a stakeholder in the move to DevOps and the best way to achieve
    this is to look at things from two viewpoints:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些问题摆在眼前时，开始识别采用 Salesforce DevOps 带来的潜在收益就变得更加容易，进而有助于推动团队与变化的一致性。这一步是至关重要的——所有参与者都需要成为
    DevOps 转型的利益相关者，而实现这一目标的最佳方式是从两个角度来审视问题：
- en: '*What are the benefits that DevOps* *will bring?*'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*DevOps 会带来哪些好处？*'
- en: After identifying the teams that will be directly impacted by the adoption of
    DevOps as a means of delivery, work on conveying the benefits to them. Visibility
    of changes, more manageable and smaller units of work, faster delivery, robust
    testing, reasonably predictable release cycles – all of these things matter to
    Salesforce teams and the overriding principle of making their life easier is a
    strong driver for getting people on board with the change.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定了会直接受到 DevOps 交付模式影响的团队之后，着手向他们传达这种变化的好处。变更的可见性、更易管理的小规模工作单元、更快速的交付、稳健的测试、可预测的发布周期——这些对于
    Salesforce 团队来说都至关重要，而让他们的工作变得更轻松这一总体原则，是促使他们支持变革的重要动力。
- en: '*What are the risks of not* *adopting DevOps?*'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不采纳 DevOps 的风险是什么？*'
- en: Equally, it’s valuable to assess the risks of standing still and changing nothing.
    If you don’t adopt a faster and more flexible delivery model, you risk being outmaneuvered
    by more agile competitors. If you don’t implement a robust backup and recovery
    strategy, you risk losing your valuable business data or that of your customers.
    If you stick to more traditional delivery models, which can be lengthy and arduous,
    you risk dissatisfaction and burnout in your teams, which can lead to them moving
    elsewhere.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，评估停滞不前、什么都不改变的风险也是非常重要的。如果你不采用更快速、更灵活的交付模式，你有可能会被更敏捷的竞争对手超越。如果你不实施一个强大的备份和恢复策略，你可能会失去你宝贵的业务数据或客户数据。如果你坚持使用更传统的交付模式，这些模式可能既冗长又繁琐，你可能会面临团队的不满和倦怠，最终导致他们离开。
- en: Making life easy for your teams
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让团队的工作更轻松
- en: If your Salesforce team is new to DevOps concepts, techniques, or even terminology,
    then it can seem a daunting prospect for them to move to a new delivery model.
    However, like all large projects, the optimum approach is often to start slowly
    with small aspects of the process, then expand and iterate upon it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 Salesforce 团队对 DevOps 概念、技术，甚至术语都不熟悉，那么他们可能会觉得转向新的交付模式是一个令人生畏的前景。然而，像所有大型项目一样，最优的方式通常是从小的环节开始，慢慢推进，逐步扩展和迭代。
- en: For example, because the concept of source control has historically been a code-based
    domain for developers, many Salesforce Admins will be unfamiliar with this approach.
    This area alone is a good place to start – even if you don’t necessarily dive
    straight into applying source control, the mere act of aligning Admins and Developers
    with a common way of working contributes to the communication and collaboration
    components of building a DevOps culture.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，由于源代码管理的概念历来是开发人员专属的领域，许多 Salesforce 管理员对这种方法并不熟悉。仅仅这一领域就是一个很好的起点——即使您不一定直接进入源代码管理的应用，单是让管理员和开发人员对齐工作方式，便有助于在建立
    DevOps 文化的过程中促进沟通与协作。
- en: Having Admins and Developers work more closely together in this way also lends
    itself to another great set of techniques for fostering your DevOps culture. High-performing
    Salesforce DevOps teams make frequent use of mentoring and coaching to not only
    improve the overall skill set and confidence of the team but also as an aid to
    collaborative working and breaking down siloes to form a multi-discipline DevOps
    team.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让管理员和开发人员以这种方式更紧密地合作，也有助于采用另一套促进 DevOps 文化的有效技术。高效能的 Salesforce DevOps 团队经常利用辅导和指导，不仅提升团队的整体技能和信心，而且作为协作工作的助力，打破孤岛，形成多学科的
    DevOps 团队。
- en: Of course, it’s not all about the process, and you should also ensure that your
    teams have the necessary tools to aid a smoother DevOps journey. As an architect,
    you should be ever-mindful of the Salesforce DevOps landscape and assess the components,
    such as version control providers, new tools or updates to existing ones, or even
    complete Salesforce DevOps platforms – some of which we’ll look at in later chapters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这不仅仅是关于流程，您还应确保您的团队拥有必要的工具，以帮助顺利推进 DevOps 之旅。作为架构师，您应时刻关注 Salesforce DevOps
    的生态，评估各种组件，例如版本控制提供者、新工具或现有工具的更新，甚至是完整的 Salesforce DevOps 平台——其中一些我们将在后续章节中讨论。
- en: Governance and risk management
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 治理与风险管理
- en: A DevOps culture should be ever-mindful of the need to manage and mitigate business
    risks, and a strong governance framework should be in place to provide this. It’s
    important to appreciate that while DevOps unlocks the potential for rapid delivery
    of change, it is not a free-for-all without controls.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 文化应时刻关注管理和减轻业务风险的需求，并应有强大的治理框架来提供保障。重要的是要认识到，虽然 DevOps 解锁了快速交付变更的潜力，但它并非没有控制的自由放任。
- en: The governance of our DevOps process should be aligned with the governance in
    which your business, or that of your customers, operates. Without the correct
    processes in place, you risk losing the value of the alignment and adoption you
    fostered in starting your DevOps journey. You risk falling back to the use of
    lengthy, monolithic releases with dissatisfied customers waiting on changes that
    are buried deep in the backlog. You also potentially risk low-quality changes
    being delivered, which, in a worst-case scenario, can damage your systems, your
    data, and your reputation.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 DevOps 过程的治理应该与您的业务，或您的客户的业务运营所采用的治理相一致。如果没有正确的流程，您有可能失去在开始 DevOps 旅程时所促成的对齐和采用的价值。您有可能重新回到使用冗长、单体发布的模式，而不满的客户正在等待那些深埋在待办事项中的变更。您还可能面临低质量变更的风险，最坏的情况是，这可能会损害您的系统、数据和声誉。
- en: Regulated industries such as financial services and healthcare face unique challenges
    when it comes to software development and deployment. These industries are subject
    to a wide range of regulations, standards, and compliance requirements that govern
    how software must be developed, tested, and deployed. These regulations are in
    place to protect sensitive data, ensure data privacy, and prevent fraud and other
    criminal activities.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 金融服务和医疗等受监管行业在软件开发和部署方面面临独特的挑战。这些行业受到广泛的法规、标准和合规要求的约束，这些法规规定了软件开发、测试和部署的方式。这些法规旨在保护敏感数据、确保数据隐私，并防止欺诈和其他犯罪活动。
- en: In financial services, regulations such as the **Sarbanes-Oxley Act**, **Payment
    Card Industry Data Security Standards** (**PCI DSS**), and **Anti-Money Laundering**
    (**AML**) regulations require financial institutions to implement strong controls
    around software development, testing, and deployment. Similarly, in healthcare,
    regulations such as the **Health Insurance Portability and Accountability Act**
    (**HIPAA**) and the **General Data Protection Regulation** (**GDPR**) require
    healthcare organizations to protect patient data and ensure data privacy. DevOps
    can help organizations in these types of industries comply with these regulations
    by providing a structured process for software development, which includes automated
    testing, security scanning, and continuous monitoring. This can help ensure that
    software is developed with security and privacy in mind and that any potential
    security vulnerabilities are identified and addressed before the software is deployed.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融服务行业，像**萨班斯-奥克斯利法案**、**支付卡行业数据安全标准**（**PCI DSS**）和**反洗钱**（**AML**）等法规要求金融机构在软件开发、测试和部署过程中实施强有力的控制。同样，在医疗保健行业，像**健康保险流通与问责法案**（**HIPAA**）和**通用数据保护条例**（**GDPR**）等法规要求医疗机构保护患者数据并确保数据隐私。DevOps可以通过为软件开发提供结构化过程，包括自动化测试、安全扫描和持续监控，帮助这些行业的组织遵守相关法规。这可以确保软件在开发时考虑到安全性和隐私，并且在软件部署之前识别并解决任何潜在的安全漏洞。
- en: A good governance framework addresses these issues by implementing the necessary
    checks and balances throughout the entire life cycle. From prioritizing work and
    deciding which initiatives are driven forward through to the technical design
    and implantation considerations, governance allows stakeholders on all sides to
    input into success.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的治理框架通过在整个生命周期中实施必要的制衡措施来解决这些问题。从优先排序工作和决定推进哪些项目，到技术设计和实施考虑，治理使各方利益相关者能够为成功提供反馈。
- en: At the heart of this approach lies the Center of Excellence, which oversees
    this journey. It informs and guides the business goals as they apply to Salesforce,
    the approach used for delivery, and the technologies used. It is also responsible
    for communication with both stakeholders and end users across the organization,
    for identifying and managing business risk of projects, and for ensuring initiatives
    deliver value.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这一方法的核心是卓越中心（CoE），它负责监督这一过程。它指导和通知与Salesforce相关的业务目标、交付方法和使用的技术。它还负责与组织内部的利益相关者和最终用户沟通，识别和管理项目的业务风险，并确保项目能够交付价值。
- en: As such, a CoE often contains, or works alongside, distinct groups with specific
    responsibilities. A Change Management group, for example, will be the approving
    body for changes going into Salesforce and will make sure that the change is of
    suitable quality and has been thoroughly tested before it is allowed to be released
    to production. This would typically be through the definition of the required
    processes and behaviors it expects to see carried out to ensure quality deliverables,
    rather than it carrying out the testing itself, which would continue to be the
    responsibility of the technical teams.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，CoE通常包含或与具有特定职责的不同小组合作。例如，变更管理小组将负责批准进入Salesforce的变更，并确保变更质量合适，且在允许其发布到生产环境之前已进行充分的测试。这通常通过定义所需的流程和行为来确保交付质量，而不是由变更管理小组直接执行测试，测试仍将是技术团队的责任。
- en: 'A note of caution should be taken with Change Management groups, however. In
    the book *Accelerate: The Science of Lean Software and DevOps: Building and Scaling
    High Performing Technology Organizations* by Nicole Forsgren, Jez Humble, and
    Gene Kim, the authors emphasize the importance of fast feedback loops, continuous
    experimentation, and a culture of learning and improvement – factors that may
    suggest that traditional change management practices may not always align with
    the needs of high-performing DevOps teams.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在变更管理小组方面，应该注意一些问题。在Nicole Forsgren、Jez Humble和Gene Kim合著的《加速：精益软件与DevOps的科学：构建和扩展高效能技术组织》一书中，作者强调了快速反馈回路、持续实验以及学习和改进文化的重要性——这些因素表明，传统的变更管理实践可能并不总是与高效能DevOps团队的需求对接。
- en: A Steering Committee, on the other hand, is a business-led group that ensures
    that changes continue to align with business strategy, vision, and values. Across
    all these areas, there should be an executive sponsor that is empowered and available
    to make decisions and unlock business bottlenecks.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，指导委员会是一个由业务主导的团队，确保变更始终与业务战略、愿景和价值观保持一致。在所有这些领域中，应该有一位执行赞助人，能够并且有权做出决策并解锁业务瓶颈。
- en: Making a case for a CoE to leadership
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向领导层阐明 CoE 的必要性
- en: 'Architects looking to present a case for establishing a CoE to the leadership
    of their organization or customers should largely draw upon the same techniques
    for presenting any proposal to stakeholders. However, some specific elements should
    be considered a fundamental part of that proposal. Here are some typical areas
    to focus on:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 希望向组织或客户的领导层提出建立 CoE 案例的架构师，通常会借鉴展示任何提案给利益相关者时的相同技巧。然而，某些具体元素应被视为该提案的基本组成部分。以下是一些典型的关注领域：
- en: '| **Topic** | **Detail** |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| **主题** | **详情** |'
- en: '| --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Define purpose and goals | Articulate the objectives of the CoE, such as
    driving continuous improvement, sharing best practices, fostering collaboration,
    and accelerating DevOps adoption across the organization. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 定义目标和宗旨 | 阐明 CoE 的目标，如推动持续改进、分享最佳实践、促进协作以及加速 DevOps 在组织中的采用。 |'
- en: '| Build a business case | Create a compelling business case that demonstrates
    the benefits of a CoE, including potential cost savings, improved operational
    efficiency, faster time to market, and enhanced customer satisfaction. Showcase
    industry examples and relevant success stories. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 建立商业案例 | 创建一个有说服力的商业案例，展示 CoE 的好处，包括潜在的成本节省、提高的运营效率、更快的市场时间和更高的客户满意度。展示行业示例和相关的成功故事。
    |'
- en: '| Identify key stakeholders | Identify and engage key stakeholders, such as
    senior management, development, and operations teams. Involve them in the decision-making
    process and the subsequent establishment of the CoE. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 确定关键利益相关者 | 确定并与关键利益相关者互动，如高层管理、开发和运维团队。将他们纳入决策过程，并在随后的 CoE 建立过程中发挥作用。 |'
- en: '| Propose the CoE structure | Propose a structure for the CoE, including roles,
    responsibilities, and reporting lines. Estimate the budget and resources required
    to set up and maintain the CoE. Positions may include DevOps coaches, product
    owners, and continuous improvement specialists. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 提出 CoE 结构 | 提出 CoE 的结构，包括角色、职责和汇报关系。估算设立和维持 CoE 所需的预算和资源。职位可能包括 DevOps 教练、产品负责人和持续改进专家。
    |'
- en: '| Develop a roadmap | Outline a roadmap for implementing the CoE, including
    milestones, timelines, and **key performance indicators** (**KPIs**). Provide
    a clear plan for leadership to follow and monitor progress. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 制定路线图 | 制定 CoE 实施的路线图，包括里程碑、时间表和**关键绩效指标**（**KPIs**）。为领导层提供一个清晰的计划，以便跟踪和监控进展。
    |'
- en: '| Plan for change management | Recognize that implementing a CoE may involve
    significant cultural and organizational changes. Present a change management strategy
    that addresses potential resistance, communication, and training needs. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 变更管理计划 | 认识到实施 CoE 可能涉及重大文化和组织变革。提出一项变更管理策略，以应对潜在的抗拒、沟通和培训需求。 |'
- en: '| Foster collaboration | Emphasize the importance of cross-functional collaboration
    and knowledge sharing between teams. Propose tools and platforms that facilitate
    communication and collaboration, such as chat platforms, wikis, or video conferencing
    systems. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 促进协作 | 强调跨职能协作和知识共享的重要性。提出促进沟通和协作的工具和平台，如聊天平台、维基或视频会议系统。 |'
- en: '| Pilot and iterate | Propose starting with a pilot program involving one or
    more teams to test and refine the CoE approach. Enable the organization to learn
    from the pilot, adjust, and gradually scale up the CoE as part of the wider DevOps
    adoption. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 启动试点并迭代 | 提议从一个试点项目开始，涉及一个或多个团队来测试和完善 CoE 方法。让组织从试点中学习，进行调整，并在更广泛的 DevOps
    采用过程中逐步扩展 CoE。 |'
- en: '| Regularly report progress | Ensure that the progress of the CoE is regularly
    reported to leadership, including successes, challenges, and learnings. Maintain
    support and commitment from senior management through transparency. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 定期报告进展 | 确保将 CoE 的进展定期报告给领导层，包括成功、挑战和收获。通过透明化保持高层管理的支持和承诺。 |'
- en: '| Demonstrate ongoing value | Continually highlight the positive impact of
    the CoE on the organization, including quantifiable improvements in efficiency,
    quality, and innovation. Maintain and grow support for the CoE and its role in
    the broader DevOps adoption. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 展示持续价值 | 持续突出 CoE 对组织的积极影响，包括效率、质量和创新方面的可量化改进。维护并扩大对 CoE 的支持，以及其在更广泛 DevOps
    采用中的角色。 |'
- en: Table 2.1 – Elements to consider in a proposal
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.1 – 提案中需要考虑的要素
- en: Overcoming resistance and hesitation
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 克服抗拒和犹豫
- en: 'There are several common reasons why people might initially resist the idea
    of implementing DevOps in their organization, believing that “it’s nice, but it
    can’t be done here.” Let’s address some of these reasons and provide counterarguments
    to help dispel these concerns:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个常见的原因，可能导致人们最初抗拒在他们的组织中实施 DevOps，认为“这听起来不错，但在这里做不到。”让我们解决其中的一些原因，并提供反驳，帮助消除这些担忧：
- en: '| **Area** | **Resistance** | **Counterargument** |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| **领域** | **抗拒** | **反驳** |'
- en: '| --- | --- | --- |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Organizational structure and culture | The existing organizational structure
    and culture promote siloed teams and discourage collaboration | DevOps is an opportunity
    to break down silos and foster collaboration. Start with small changes, such as
    creating cross-functional teams, and gradually scale up DevOps initiatives as
    the organization adapts to the new approach. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 组织结构和文化 | 现有的组织结构和文化促进了团队之间的隔阂，并不鼓励协作 | DevOps 是打破隔阂并促进协作的机会。从小的变化开始，例如创建跨职能团队，并随着组织适应新方法逐步扩大
    DevOps 措施。 |'
- en: '| Lack of skills and expertise | Team members lack the skills and knowledge
    to implement DevOps practices and tools | Invest in training and upskilling team
    members and consider hiring or partnering with experts to help guide your DevOps
    transformation. Continuous learning is a core principle of DevOps, so developing
    these skills should be viewed as an ongoing process. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 技能和专业知识缺乏 | 团队成员缺乏实施 DevOps 实践和工具的技能和知识 | 投资培训和提升团队成员技能，并考虑聘请或与专家合作，帮助指导
    DevOps 转型。持续学习是 DevOps 的核心原则，因此发展这些技能应该被视为一个持续的过程。 |'
- en: '| Limited resources and budget | There is no budget or resources to invest
    in new tools, technologies, and training for a DevOps transformation | DevOps
    can help increase efficiency and reduce costs in the long run. Start small by
    leveraging existing tools and resources, and gradually expand your DevOps capabilities
    as you demonstrate ROI and gain organizational buy-in. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 资源和预算有限 | 没有预算或资源投资于新工具、技术和 DevOps 转型所需的培训 | DevOps 可以帮助提高效率，并在长期内降低成本。从利用现有工具和资源开始，随着投资回报率的展示和组织的认可，逐步扩大
    DevOps 能力。 |'
- en: '| Fear of failure and disruption | Changing existing processes could lead to
    disruptions and negatively impact current projects | DevOps is about continuous
    improvement and learning from failure. Begin with small, low-risk projects to
    minimize potential disruptions and use the lessons learned to refine your approach
    before tackling larger initiatives. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 害怕失败和干扰 | 改变现有的流程可能导致干扰，并对当前项目产生负面影响 | DevOps 关注持续改进和从失败中学习。从小而低风险的项目开始，以最小化潜在干扰，并利用学到的经验在处理更大项目之前精炼方法。
    |'
- en: '| Legacy systems and technical debt | Existing infrastructure and legacy systems
    make it difficult to adopt modern DevOps practices and tools | DevOps can help
    address technical debt and modernize legacy systems by promoting incremental improvements
    and fostering a culture of innovation. Prioritize the most critical aspects of
    your infrastructure and develop a roadmap for introducing DevOps practices. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 遗留系统和技术债务 | 现有的基础设施和遗留系统使得采用现代 DevOps 实践和工具变得困难 | DevOps 可以通过促进渐进式改进和培养创新文化来帮助解决技术债务和现代化遗留系统。优先处理基础设施中最关键的部分，并制定引入
    DevOps 实践的路线图。 |'
- en: '| Lack of management support | Management does not see the value in DevOps
    or is unwilling to invest in the necessary changes | Build a strong business case
    for DevOps by highlighting its potential benefits. Share success stories and best
    practices from other organizations and consider running a pilot project to demonstrate
    the value of DevOps firsthand. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 缺乏管理支持 | 管理层没有看到 DevOps 的价值，或不愿意投资必要的变革 | 通过强调 DevOps 的潜在收益，建立一个强有力的商业案例。分享其他组织的成功故事和最佳实践，并考虑开展试点项目，亲自展示
    DevOps 的价值。 |'
- en: '| Regulatory and compliance concerns | Adopting DevOps practices may conflict
    with compliance requirements in heavily regulated industries | DevOps can improve
    compliance by automating processes, ensuring consistency, and providing better
    visibility. Collaborate with your compliance and security teams to ensure that
    your DevOps practices align with industry regulations and organizational policies.
    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 法规和合规问题 | 采纳 DevOps 实践可能与在高度监管行业中的合规要求冲突 | DevOps 可以通过自动化流程、确保一致性和提供更好的可见性来改善合规性。与合规和安全团队合作，确保你的
    DevOps 实践符合行业法规和组织政策。 |'
- en: Table 2.2 – Reasons and counterarguments to dispel concerns
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.2 – 驳斥顾虑的理由和反驳
- en: By addressing these common concerns and demonstrating the potential benefits
    of adopting DevOps, you can help overcome resistance and encourage stakeholders
    to embrace this transformative approach.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过解决这些常见问题并展示采纳 DevOps 的潜在好处，你可以帮助克服阻力，鼓励利益相关者接受这一变革性方法。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: There is an often (mis)quoted saying, “*Culture eats strategy for breakfast*,”
    and seldom has this been more pertinent than in the world of DevOps. No matter
    how well crafted your strategy for adopting DevOps may be, it will not succeed
    if your team is not on board with the culture and mindset required. By promoting
    the advantages of a DevOps process and ensuring that the entire team works together
    to this model, with strong communication along the way, you have laid the foundation
    for a successful Salesforce DevOps transformation and can now build upon it with
    the tools and techniques we’ll explore in the next part of this book. In the next
    two chapters, we’ll first look at the essential role that testing plays across
    your DevOps life cycle, before looking at an example workflow that takes these
    elements into account with a typical SFDX and Git workflow.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有一句话常被引用（有时甚至被误引用）：“*文化吃掉战略早餐*”，这句话在 DevOps 的世界里尤其贴切。无论你制定的 DevOps 采纳战略有多么精妙，如果你的团队没有接受所需的文化和心态，它也不会成功。通过推广
    DevOps 流程的优势，确保整个团队一起协作，并在过程中保持强有力的沟通，你为成功的 Salesforce DevOps 转型奠定了基础，并可以在此基础上，结合我们在本书下一部分将探讨的工具和技术继续发展。在接下来的两章中，我们将首先看一下测试在
    DevOps 生命周期中的重要作用，然后再看一个考虑到这些因素的典型 SFDX 和 Git 工作流示例。
- en: Culture eats strategy for breakfast – or does it?
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 文化吃掉战略早餐——或者说，它真的是这样吗？
- en: The quote is attributed to renowned management expert, Peter Drucker. While
    this version remains in popular use and demonstrates our point here, Drucker’s
    original quote was “*Culture – no matter how defined – is* *singularly persistent*.”
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这句话通常归功于著名的管理专家彼得·德鲁克。虽然这种版本仍然广泛使用，并且证明了我们这里的观点，但德鲁克的原始名言是“*文化——无论如何定义——是* *特别持久*。”
