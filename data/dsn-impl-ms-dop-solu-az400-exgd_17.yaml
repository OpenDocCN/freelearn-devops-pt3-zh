- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: Planning Your Azure DevOps Organization
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划您的 Azure DevOps 组织
- en: In previous chapters, you learned about many techniques and practices concerning
    DevOps. In this chapter, we will take a step back and look at how you can build
    a strong DevOps organization and what you need to think about when doing so. After
    that, you will learn what this can bring to you with regard to security and traceability.
    From there on, you will learn how you can consolidate your toolchain portfolio,
    thereby standardizing your development life cycle mostly on using Azure DevOps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，您学习了许多与 DevOps 相关的技术和实践。本章中，我们将退后一步，看看如何构建一个强大的 DevOps 组织，并在构建时需要考虑的事项。之后，您将了解这对于安全性和可追溯性所能带来的影响。从那里开始，您将学习如何整合您的工具链组合，从而将开发生命周期的标准化主要集中在使用
    Azure DevOps 上。
- en: We will begin by creating an Azure DevOps organization where you will learn
    which constructs are available to lay out your products and teams in the tool.
    You will also learn about licensing and the security implications of the different
    approaches. After that, you will learn about traceability and how that can be
    used to create a verifiable software development process. Next up is the consolidation
    of the tools used. As you progress on your DevOps journey, you may find that each
    team uses different tools that it is familiar with and enjoys working with. While
    DevOps is all about empowering people, some level of standardization might be
    desirable, and you will learn how to go about this. Finally, you will learn that
    you might have to accept that you will never be completely done adopting DevOps.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从创建一个 Azure DevOps 组织开始，您将在其中学习如何在工具中布局您的产品和团队，并了解许可和不同方法的安全影响。之后，您将学习可追溯性及其如何用于创建可验证的软件开发过程。接下来是工具的整合。在您推进
    DevOps 之旅的过程中，您可能会发现每个团队都在使用不同的工具，他们对这些工具很熟悉且喜欢使用。尽管 DevOps 的核心是赋能团队，但某种程度的标准化是可能需要的，您将学习如何进行这一操作。最后，您将学到，您可能必须接受一个事实，那就是您永远无法完全完成
    DevOps 的采纳。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setting up an Azure DevOps organization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Azure DevOps 组织
- en: Ensuring traceability
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保可追溯性
- en: Consolidating tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具整合
- en: Accepting there is no end state
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受没有最终状态的事实
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow along with the practical parts of this chapter, one of the following
    is needed:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章的实践部分，您需要以下其中之一：
- en: A Microsoft Live account, also called a personal account
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Microsoft Live 帐户，也叫个人帐户
- en: A work or school account
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个工作或学校帐户
- en: Setting up an Azure DevOps organization
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Azure DevOps 组织
- en: To practice with one or more of the technologies and techniques described in
    the previous chapters, an Azure DevOps organization might have been created specifically
    for this use, or maybe one was available already that could be used for this purpose.
    However, creating an organization for a company from scratch takes a little more
    consideration. Taking the time to properly plan the layout of the organization
    can save a lot of time later on.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要练习前几章中描述的一个或多个技术和方法，可能已经专门为此用途创建了一个 Azure DevOps 组织，或者可能已有一个可用于此目的的组织。然而，从零开始为公司创建一个组织需要更多的考虑。花时间合理规划组织的布局，能为以后节省大量时间。
- en: This section describes the components out of which Azure DevOps is built, how
    you can use this to organize a fitting security model, and licensing options and
    costs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了 Azure DevOps 的组成部分，如何使用这些组件来组织合适的安全模型，以及许可选项和成本。
- en: How Azure DevOps is organized
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure DevOps 是如何组织的
- en: The top-level construct in Azure DevOps is called an organization. For most
    companies, a total of one organization will suffice, but it is possible to create
    more than one.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 中的顶级构造被称为组织。对于大多数公司来说，一个组织就足够了，但也可以创建多个组织。
- en: Each Azure DevOps organization is hosted in a specific region. Most of the data
    (source code and work items) for the organization is guaranteed to be located
    in the region for the organization, but some information is always stored in other
    data centers due to the global reach of the service. Having a distributed organization
    with teams and products in different geographies can be one reason for using more
    than one organization. For example, if some teams are located in Australia and
    some in West Europe, it makes sense to create two separate organizations and host
    all teams in the geography closest to them. This will ensure that the bulk of
    the Azure DevOps services are hosted within a data center in a region that is
    physically closer to the teams, greatly reducing latencies when working with Azure
    DevOps.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Azure DevOps 组织都托管在特定的区域内。大部分组织的数据（源代码和工作项）都保证位于该组织所在的区域，但由于服务的全球覆盖，一些信息总是存储在其他数据中心。拥有跨不同地理位置的团队和产品的分布式组织可能是使用多个组织的原因之一。例如，如果某些团队位于澳大利亚，而另一些团队位于西欧，创建两个独立的组织并将所有团队托管在离他们最近的地理区域是有意义的。这样可以确保大多数
    Azure DevOps 服务托管在一个物理上更接近团队的区域的数据中心，从而大大减少在使用 Azure DevOps 时的延迟。
- en: An organization can be linked to **Azure Active Directory** (**AAD**). If this
    link is enabled, only users (both members and guest accounts) that are inside
    that particular AAD are allowed access to the organization. Using a company AAD
    is not mandatory; an organization can also be created using a Microsoft account.
    Administrators can also allow users with a GitHub account access to the organization.
    However, it must be noted that when creating an organization with a work account,
    it will automatically be linked to the home (default) tenant linked to the AAD
    account. Tenant administrators can prevent their work accounts from being linked
    to new organizations.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个组织可以与**Azure Active Directory**（**AAD**）进行链接。如果启用此链接，只有位于该特定 AAD 中的用户（包括成员和访客账户）才能访问该组织。使用公司
    AAD 不是强制性的；也可以使用 Microsoft 账户创建组织。管理员还可以允许拥有 GitHub 账户的用户访问该组织。然而，必须注意的是，当使用工作账户创建组织时，它将自动链接到与
    AAD 账户关联的主（默认）租户。租户管理员可以防止其工作账户被链接到新的组织。
- en: In each organization, one or more projects can be created. A project is an isolated
    container of work items, source control repositories, pipeline definitions, and
    all other Azure DevOps artifacts. There are only limited sharing and linking possibilities
    between projects. At the time of writing, only work items, pipelines, and agent
    pools can be related across projects. This way, projects can serve as a strong
    isolation boundary for enforcing rigid security between products or teams if needed.
    In general, it is recommended to have as few projects as possible, with the goal
    of having only one if possible when the count of teams is very few (<10).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个组织中，可以创建一个或多个项目。一个项目是一个孤立的工作项容器，包含源代码控制库、管道定义以及所有其他 Azure DevOps 工件。项目之间的共享和链接可能性是有限的。在本文撰写时，仅有工作项、管道和代理池可以跨项目关联。通过这种方式，项目可以作为强隔离边界，用于在需要时强制实施产品或团队之间的严格安全性。通常建议尽量减少项目数量，当团队数量非常少（<10）时，最好只有一个项目。
- en: 'The following diagram shows a possible organization of Azure DevOps organizations
    and projects. It shows that there are two organizations connected to AAD. One
    is located in West Europe and the other one in Australia. In West Europe, there
    are two projects in the organization, while in Australia there is just one:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了一个可能的 Azure DevOps 组织和项目的结构。图中显示有两个组织连接到 AAD。一个位于西欧，另一个位于澳大利亚。在西欧的组织中有两个项目，而在澳大利亚只有一个：
- en: '![Figure 17.1 – Azure DevOps organization and projects ](img/B18655_17_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.1 – Azure DevOps 组织与项目](img/B18655_17_01.jpg)'
- en: Figure 17.1 – Azure DevOps organization and projects
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.1 – Azure DevOps 组织与项目
- en: As stated before, the recommendation is to go with as few organizations and
    projects as possible. But in this example, the latency from Australia to West
    Europe is a good argument to split into two organizations to have Azure DevOps
    hosted close to the teams. The split into two projects in West Europe might be
    due to the need for a high level of isolation for team 4, which is working on
    product 3.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，推荐的做法是尽量减少组织和项目的数量。但在此示例中，从澳大利亚到西欧的延迟是一个合理的理由，可以将组织拆分为两个，以便将 Azure DevOps
    托管在接近团队的地方。西欧的两个项目拆分可能是由于团队 4 在开发产品 3时需要较高的隔离级别。
- en: Combining teams 1 to 3 and products 1 and 2 into one project has been done on
    purpose. The reason for this is that within a single project, multiple product
    areas and multiple teams can be defined. Having all of these in a single project
    enables the easy linking of work items for portfolio management. This way, working
    items from one team can also be related to the commits or pull requests of another
    team on another product. This is helpful if features are spread over multiple
    products or applications (components).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将团队 1 到 3 和产品 1 和 2 合并为一个项目是有意为之。这样做的原因是在单个项目中，可以定义多个产品区域和多个团队。将这些全部放在一个项目中，可以方便地将工作项链接到项目组合管理中。这样，一个团队的工作项也可以与另一个团队在其他产品上的提交或拉取请求相关联。如果功能分布在多个产品或应用（组件）中，这样做会很有帮助。
- en: 'Azure DevOps provides area paths, teams, and iterations that help you organize
    and execute the life cycle processes on your product backlog. Hence, you must
    choose the level of granularity carefully to achieve a greater degree of parallelism
    in your development life cycle. A few simple rules to follow would be the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 提供区域路径、团队和迭代，帮助你组织和执行产品待办事项的生命周期流程。因此，你必须谨慎选择粒度层级，以在开发生命周期中实现更高程度的并行性。以下是几个简单的规则：
- en: Avoid linking users to multiple teams. Rather, create teams as a logical, self-contained
    unit.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免将用户链接到多个团队。相反，应将团队创建为一个逻辑上的、独立的单元。
- en: Create an area path for each major product (or team) in the organization. Create
    subarea paths as applicable.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为组织中的每个主要产品（或团队）创建一个区域路径。根据需要创建子区域路径。
- en: Create separate team projects only if you want fine-grained control over all
    aspects of the DevOps life cycle.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在需要对 DevOps 生命周期的各个方面进行精细控制时，才创建独立的团队项目。
- en: To make defining all products and all teams in a single project possible, it
    is important to know about the Azure DevOps security model and how to use this
    for implementing access control.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在单个项目中定义所有产品和所有团队，了解 Azure DevOps 安全模型以及如何使用该模型实施访问控制非常重要。
- en: Creating an Azure DevOps organization and project
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Azure DevOps 组织和项目
- en: Creating a new Azure DevOps organization and one or more projects is a task
    often completed by administrators who will also be responsible for managing these
    environments later. These organizations are most likely connected to an **Azure
    Active Directory (AAD)**. To create an organization for private use or training
    and learning practices, it might be better to use a personal account.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的 Azure DevOps 组织和一个或多个项目通常由管理员完成，管理员也将负责后续的环境管理。这些组织很可能与**Azure Active Directory
    (AAD)** 关联。为了创建用于私人用途或培训和学习的组织，最好使用个人账户。
- en: 'To create a new organization using a personal account, do the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用个人账户创建新组织，请执行以下操作：
- en: Navigate to [https://dev.azure.com](https://dev.azure.com).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://dev.azure.com](https://dev.azure.com)。
- en: Choose **Start free** to start the creation of a new Azure DevOps organization.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**开始免费**以开始创建新的 Azure DevOps 组织。
- en: When prompted with a login dialog, log in using a personal account.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出登录对话框时，使用个人账户登录。
- en: 'After logging in, select the correct country of residence and opt in/out of
    tips and other service updates using the following dialog:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，选择正确的居住国家，并使用以下对话框选择是否启用提示和其他服务更新：
- en: '![Figure 17.2 – Selecting the country/region for your DevOps organization  ](img/B18655_17_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.2 – 为你的 DevOps 组织选择国家/地区](img/B18655_17_02.jpg)'
- en: Figure 17.2 – Selecting the country/region for your DevOps organization
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.2 – 为你的 DevOps 组织选择国家/地区
- en: Press **Continue** to create a new organization.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按**继续**按钮创建新组织。
- en: 'Once the organization is created, a new wizard will automatically start to
    create the first project. To create a project, do the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 组织创建完成后，系统将自动启动新向导以创建第一个项目。要创建项目，请执行以下操作：
- en: Provide a project name.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供项目名称。
- en: Choose between making the project public or private. Private projects are the
    default setting and are intended to create software within an organization and
    not allow anonymous access. Public projects are intended for open source development.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择将项目设为公开还是私有。私有项目是默认设置，旨在组织内创建软件，并且不允许匿名访问。公开项目则用于开源开发。
- en: Once a new organization and a new project are created, it is possible to make
    changes to these choices using the management interface.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了新的组织和项目，就可以通过管理界面对这些选择进行更改。
- en: Important Note
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Please keep in mind that renaming the organization or a project will change
    the URL, so all existing integrations and links may break.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，重命名组织或项目会更改 URL，因此所有现有的集成和链接可能会失效。
- en: It is even possible to change the location of an organization later. This must
    be requested and is not as easy as changing other settings.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至可以在稍后更改组织的位置。这需要提出请求，并且不像更改其他设置那样简单。
- en: Once an organization and project are available, it is time to set up security.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦组织和项目可用，就可以开始设置安全性。
- en: Azure DevOps security model
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure DevOps 安全模型
- en: Within Azure DevOps, authorization can be assigned to individual users or security
    groups. A security group is either a logical wrapper around an existing AAD group
    or can be defined within Azure DevOps itself. In general, it is recommended to
    assign authorization as much as possible to groups, and limit individual user
    assignments.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure DevOps 中，授权可以分配给单个用户或安全组。安全组可以是现有 AAD 组的逻辑封装，也可以在 Azure DevOps 中自行定义。一般建议尽可能将授权分配给组，并限制单个用户的分配。
- en: 'To configure authorization for a user or security group, two complementary
    approaches are available:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 配置用户或安全组的授权时，有两种互补的方式可供选择：
- en: Organization- and project-level authorizations
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织级和项目级授权
- en: Object-level authorizations
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象级授权
- en: 'When working with the on-premises product, Azure DevOps Server, there are also
    server-level security groups and settings available:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用本地产品 Azure DevOps Server 时，还有可用的服务器级安全组和设置：
- en: Important Note
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In Azure DevOps Services, an organization is called a project collection and
    a project is called a team project. Sometimes, these names are also used in Azure
    DevOps.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure DevOps Services 中，组织称为项目集合，项目称为团队项目。有时，这些名称也用于 Azure DevOps。
- en: '`Project Collection Build Administrators`, or `[ProjectName]\Build Administrators`,
    which, by default, have permission to view, manage, and edit build definitions
    and build resources.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Project Collection Build Administrators`，或 `[ProjectName]\Build Administrators`，默认情况下具有查看、管理和编辑构建定义及构建资源的权限。'
- en: The permissions that can be set at the organization and project level are automatically
    applied to all individual resources in the organization or the project.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在组织和项目级别可以设置的权限会自动应用于组织或项目中的所有单个资源。
- en: '**Object-level authorizations**: On most of the objects in Azure DevOps, individual
    permissions can be assigned to users or groups. These permissions are set using
    an **access control list** (**ACL**) on the object itself. The following example
    shows a classic build definition:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象级授权**：在 Azure DevOps 中，大多数对象都可以为用户或组分配个别权限。这些权限通过对象本身上的**访问控制列表**（**ACL**）进行设置。以下示例展示了一个经典的构建定义：'
- en: '![Figure 17.3 – Setting up permissions for your project ](img/B18655_17_03.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.3 – 为项目设置权限](img/B18655_17_03.jpg)'
- en: Figure 17.3 – Setting up permissions for your project
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.3 – 为项目设置权限
- en: For each group, for each action, it is possible to configure the **Allow**,
    **Deny**, **Not set**, or **Allow**(**inherited)** permission. When an action
    is configured with **Deny**, access is never allowed, not even if a user is part
    of a group that has the authorization specified as **Allow**. In other words,
    when there are two conflicting assignments (**Allow** and **Deny**), **Deny**
    will take precedence over **Allow**. **Not set** is to be interpreted as an implicit
    deny that does not take precedence. In other words, when there are two conflicting
    assignments (**Not set** and **Allow**), the user will be allowed access.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个组、每个操作，可以配置**允许**、**拒绝**、**未设置**或**允许**（**继承**）权限。当操作配置为**拒绝**时，即使用户属于具有**允许**授权的组，也永远不会允许访问。换句话说，当存在两个冲突的分配（**允许**和**拒绝**）时，**拒绝**将优先于**允许**。**未设置**应解释为隐式拒绝，不具有优先权。换句话说，当存在两个冲突的分配（**未设置**和**允许**）时，用户将被允许访问。
- en: Some artifacts in Azure DevOps are part of a hierarchy. For example, pipelines
    can be in a folder. Whenever inheritance is enabled, permissions from a higher
    (parent) level in the hierarchy will propagate to the artifact. This means that
    when a user has access to a pipeline folder, all of their rights will propagate
    to all underlying folders and pipelines if, and only if, there are no more specific
    authorizations set.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 中的一些工件属于层级结构的一部分。例如，管道可以位于文件夹中。每当启用继承时，来自层级中更高（父级）级别的权限将传播到该工件。这意味着，当用户访问一个管道文件夹时，如果没有更具体的授权设置，那么他们的所有权限将传播到所有下层文件夹和管道。
- en: While the security model determines which authorization a user has, user actions
    are also limited by their assigned access level, which follows from their license.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然安全模型决定了用户拥有的授权类型，但用户的操作也受到其分配的访问级别的限制，这一点来自于他们的许可证。
- en: Azure DevOps licensing
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure DevOps 许可证
- en: 'Another aspect of creating an Azure DevOps organization is managing licenses.
    Within Azure DevOps, every user needs to have an access level assigned before
    they can log in to the product. There are three access levels defined:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Azure DevOps 组织的另一个方面是管理许可证。在 Azure DevOps 中，每个用户在登录产品之前都需要分配一个访问级别。定义了三种访问级别：
- en: '**Stakeholder**: Stakeholders are free users who can log in to the product
    but have limited access to its features. Stakeholders can manage work items, manage
    pipelines, and view dashboards. They do not have access to any of the other product
    areas, making this license level usable for non-development roles only.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利益相关者**：利益相关者是免费的用户，他们可以登录产品，但只能访问其功能的部分内容。利益相关者可以管理工作项、管理管道并查看仪表板。他们无法访问产品的其他区域，因此该许可证级别仅适用于非开发角色。'
- en: '**Basic**: Basic users have a paid license that gives them access to all parts
    of the product, except for test management and advanced test execution functionality.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本**：基本用户拥有付费许可证，允许他们访问产品的所有部分，除了测试管理和高级测试执行功能。'
- en: '**Basic and Test Plans**: Users of the Basic and Test Plans license option
    have access to all parts of Azure DevOps. They have the same access as basic users
    but are also provided with access to test management and tools for user acceptance
    testing, test execution, and test result reporting.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本和测试计划**：使用“基本和测试计划”许可证选项的用户可以访问 Azure DevOps 的所有部分。他们与基本用户拥有相同的访问权限，但还可以访问测试管理工具，以及用户验收测试、测试执行和测试结果报告功能。'
- en: The first five basic licenses for every organization are free. This means that
    experimenting with the product and learning how to use it can be done without
    incurring any costs. Additionally, Visual Studio subscribers can also get free
    licenses. Professional subscribers get a free Basic license and Enterprise subscribers
    get a free Basic and Test Plans license.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组织的前五个基本许可证是免费的。这意味着可以在没有产生任何费用的情况下，尝试使用产品并学习如何使用它。此外，Visual Studio 订阅者也可以获得免费的许可证。专业订阅者可以获得一个免费的基本许可证，而企业订阅者则可以获得免费的基本许可证和测试计划许可证。
- en: Licenses can be assigned and re-assigned at any point, so for a company or team
    with many joiners and leavers, it is not necessary to buy more licenses than they
    have people active at any given point.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 许可证可以在任何时候分配和重新分配，因此对于拥有大量人员进出（如加入和离开的公司或团队），不需要购买超过当前活跃人员数量的许可证。
- en: Licensing costs are not the only costs that come from using Azure DevOps; it
    is important to also know about the pay-per-use costs.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 许可证费用并不是使用 Azure DevOps 唯一的费用；了解按需付费的费用也同样重要。
- en: 'You can refer to this link for more information: [https://docs.microsoft.com/en-us/azure/devops/organizations/security/access-levels](https://docs.microsoft.com/en-us/azure/devops/organizations/security/access-levels).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请参阅此链接：[https://docs.microsoft.com/en-us/azure/devops/organizations/security/access-levels](https://docs.microsoft.com/en-us/azure/devops/organizations/security/access-levels)。
- en: Consumption-based costs
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于消费的费用
- en: 'Licenses give users access to the product and, from there on, they can use
    all of the services in the product at a fixed cost, except for the following two:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 许可证为用户提供了对产品的访问权限，之后他们可以按固定费用使用产品中的所有服务，但以下两项除外：
- en: Azure Pipelines parallel executions
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Pipelines 并行执行
- en: By default, every Azure DevOps organization is provided with one Microsoft-hosted
    parallel execution job with limited monthly execution time. This means that while
    there can be as many pipelines defined as needed, there can be only one pipeline
    executing at a time. Of course, this number can be increased, but this comes at
    the cost of buying more Microsoft-hosted parallel execution jobs.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，每个 Azure DevOps 组织都会提供一个由 Microsoft 托管的并行执行作业，且每月的执行时间是有限的。这意味着虽然可以根据需要定义多个流水线，但每次只能有一个流水线在执行。当然，这个数量可以增加，但这需要额外购买更多由
    Microsoft 托管的并行执行作业。
- en: As an alternative, it is also possible to buy self-hosted jobs. For these jobs,
    the execution agents are not provided by Microsoft but have to be provided by
    the organization itself at an additional cost. This provides the opportunity (and
    responsibility) to fully control the hardware.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方案，还可以购买自托管作业。对于这些作业，执行代理并不是由 Microsoft 提供，而是需要由组织自行提供，并需额外付费。这为完全控制硬件提供了机会（和责任）。
- en: Azure Artifacts storage
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Artifacts 存储
- en: When working with Azure Artifacts feeds, the first 2 GB of storage used is free.
    Any extra storage used will be charged extra as per the rate card.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Azure Artifacts 源时，前 2 GB 的存储是免费的。任何额外使用的存储将根据价格表另行收费。
- en: Once more and more of the users of a team have a license for Azure DevOps and
    perform their work there, this can be used to increase traceability for software
    development.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 随着团队中越来越多的用户获得 Azure DevOps 许可证并在其中完成工作，可以利用这一点来提高软件开发的可追溯性。
- en: 'Refer to this link to understand more about Azure DevOps billing: [https://docs.microsoft.com/en-us/azure/devops/organizations/billing/overview](https://docs.microsoft.com/en-us/azure/devops/organizations/billing/overview).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考此链接以了解更多有关 Azure DevOps 计费的信息：[https://docs.microsoft.com/en-us/azure/devops/organizations/billing/overview](https://docs.microsoft.com/en-us/azure/devops/organizations/billing/overview)。
- en: Ensuring traceability
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确保可追溯性
- en: One of the advantages of Azure DevOps over some of the other tools covered in
    this book is that it is a fully integrated suite of tools, each supporting specific
    DevOps processes. This end-to-end integration allows for detailed and lengthy
    traceability, from work described on the board to the related binaries being deployed
    to an environment.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 相较于本书中提到的其他工具的优势之一在于，它是一个完全集成的工具套件，每个工具都支持特定的 DevOps 流程。这种端到端的集成允许从看板上的工作到相关的二进制文件部署到环境中的整个过程都能进行详细且长时间的追溯。
- en: When working with a set of other tools that support only a part of the DevOps
    process, integrating them is often possible and, of course, this will result in
    some traceability. For example, when working with Jira and GitHub, it is possible
    to relate commits, pull requests, and other changes in GitHub back to work described
    in Jira. When picking merged changes up in Jenkins to build and deploy the product,
    there will also be traceability from Jenkins back to GitHub. However, there will
    be no direct visibility on which work item was completed with which Jenkins deployment.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当与一组只支持部分 DevOps 流程的其他工具一起使用时，通常是可以将它们集成在一起的，当然，这样会产生一定的可追溯性。例如，在使用 Jira 和 GitHub
    时，可以将 GitHub 中的提交、拉取请求和其他更改与 Jira 中描述的工作关联起来。当通过 Jenkins 获取合并的更改以构建和部署产品时，Jenkins
    也会有从 Jenkins 返回到 GitHub 的可追溯性。然而，无法直接查看哪个工作项与哪个 Jenkins 部署一起完成。
- en: The disadvantage of this is that a product owner who works in the Jira tool
    cannot see whether a completed user story is associated with a release already.
    They would have to visit multiple tools to find the answer to that question; in
    GitHub, they would have to find all commits relating to the story and then see
    whether those commits have been released already using Jenkins.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 其缺点是，使用 Jira 工具的产品负责人无法看到一个完成的用户故事是否已经关联到某个发布版本。他们必须访问多个工具才能找到这个问题的答案；在 GitHub
    中，他们需要找到与该故事相关的所有提交，然后查看这些提交是否已经通过 Jenkins 发布。
- en: '![Figure 17.4 – Traceability options between tools  ](img/B18655_17_04.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.4 – 工具之间的可追溯性选项](img/B18655_17_04.jpg)'
- en: Figure 17.4 – Traceability options between tools
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.4 – 工具之间的可追溯性选项
- en: 'When working with Azure Boards, Repos, and Pipelines, this is different. When
    using all of the Azure DevOps services, traceability is possible from story to
    deployment and the other way around. The following is an example that highlights
    how to see which commits were deployed for the first time to an environment with
    a specific deploy:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Azure Boards、Repos 和 Pipelines 时，这是不同的。当使用所有 Azure DevOps 服务时，追踪性可以从故事到部署，反之亦然。以下是一个示例，突出显示如何查看哪些提交首次部署到具有特定部署的环境中：
- en: '![Figure 17.5 – Viewing commits that are part of the pipeline run ](img/B18655_17_05.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.5 – 查看作为管道运行一部分的提交](img/B18655_17_05.jpg)'
- en: Figure 17.5 – Viewing commits that are part of the pipeline run
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.5 – 查看作为管道运行一部分的提交
- en: 'Having this type of end-to-end traceability enables a number of questions to
    be answered quickly, including the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这种端到端的追踪性可以迅速回答多个问题，包括以下几个：
- en: Has work on this work item already started? (Branches and pull requests can
    be related to work items.)
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这项工作是否已经开始？（分支和拉取请求可以与工作项相关联。）
- en: Is this work already part of our nightly build? (Commits and build pipelines
    can be related to work items.)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这项工作已经包含在我们的夜间构建中吗？（提交和构建管道可以与工作项相关联。）
- en: Is this bug already fixed and is the solution available to our customers on
    ring two already? (Releases and environments show which new commits and work items
    were part of the latest deployment.)
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个 bug 是否已经修复，并且解决方案是否已经在第二环中向我们的客户提供？（发布和环境显示了哪些新的提交和工作项是最新部署的一部分。）
- en: Important Note
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: One thought that is particularly important to reinforce when talking about traceability
    is that it is not about blame. Traceability is not about finding out who made
    which mistake, but about finding out what the state of things is and how objects
    relate. As soon as traceability becomes the basis for blame, engineers will soon
    find ways to hide their work. This will result in more errors and less visibility,
    only making problems worse.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈到追踪性时，一个特别重要的观点是，它不是关于责备的。追踪性不是用来查找谁犯了哪个错误，而是用来找出当前事物的状态以及对象之间的关系。一旦追踪性成为责备的依据，工程师们很快就会找到隐藏自己工作的方式。这将导致更多错误和更少的可见性，问题只会变得更糟。
- en: With the benefits of traceability clear, let’s explore how consolidating tools
    can help us to reap these benefits.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在追踪性优势明确的情况下，让我们探讨整合工具如何帮助我们获得这些好处。
- en: Consolidating tools
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具整合
- en: One trend that can be observed in the market is that of traceability and DevOps
    products that extend their offerings to include more than just source control,
    pipelines, or deployments. Examples are GitHub and GitLab, which are adding new
    services. More integrated **Application Lifecycle Management** (**ALM**) or DevOps
    suites are emerging, but Azure DevOps has been offering this for years now.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 市场中可以观察到的一个趋势是，追踪性和 DevOps 产品扩展其服务内容，不仅仅包括源代码控制、管道或部署。比如 GitHub 和 GitLab，它们正在添加新的服务。越来越多的集成**应用生命周期管理**（**ALM**）或
    DevOps 套件正在涌现，但 Azure DevOps 已经提供这些服务多年了。
- en: However, there are many companies where these integrated suites are not in place.
    Teams operate in different ecosystems, leading to different tool choices. Or maybe
    teams just have different preferences or started adopting DevOps practices at
    different points in time, with other tools to choose from. No matter the reason,
    there are many companies that have several tools running for the same job.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，许多公司并没有实施这些集成套件。团队在不同的生态系统中运作，导致不同的工具选择。或者也许团队只是有不同的偏好，或在不同的时间点开始采用 DevOps
    实践，且有其他工具可供选择。不论原因如何，许多公司在处理同一工作时有多个工具在运行。
- en: 'Unfortunately, several drawbacks are associated with having disconnected tools
    or multiple tools for the same thing:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，使用断开连接的工具或多个工具处理相同事情会带来一些缺点：
- en: Collaboration between teams is hindered if they are using different tools. No
    matter the personal preference of developers, it can prove to be a hindrance to
    productivity when one half of the organization is using Jenkins and the other
    half is using Azure Pipelines. By extension, switching teams or helping others
    out is severely impeded when they are using another tool.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果团队使用不同的工具，协作将受到阻碍。不论开发人员的个人偏好如何，当组织的一半使用 Jenkins 而另一半使用 Azure Pipelines 时，这会证明是生产力的障碍。更进一步说，当切换团队或帮助他人时，如果他们使用的是另一种工具，效率将受到严重影响。
- en: When there are more tools, there are also more costs. Even when all of the tools
    are open source and free, there are still costs involved. These costs can consist
    of, for instance, support contracts or requests, training, or the time needed
    to investigate and overcome specific issues. The same holds for upgrades and maintenance.
    When there are more tools, the total costs increase.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具越多，成本也就越高。即使所有工具都是开源且免费的，仍然会有成本。这些成本可能包括例如支持合同或请求、培训，或者解决特定问题所需的时间。升级和维护也是如此。工具越多，整体成本就越高。
- en: Multiple distributed tools suggest multiple efforts for security and monitoring,
    which can lead to many issues and breaches.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个分布式工具意味着需要进行更多的安全和监控工作，这可能会导致许多问题和漏洞。
- en: To overcome these challenges, many large companies decide to standardize which
    tools are used, either completely or at least to some extent. As an alternative
    or intermediate solution, it is also possible to use integration between tools
    as a way of starting a consolidation.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服这些挑战，许多大公司决定标准化所使用的工具，无论是完全标准化，还是至少在某些程度上进行标准化。作为替代或中间解决方案，也可以通过工具之间的集成来启动整合。
- en: Standardizing tools
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具标准化
- en: 'To combat these drawbacks, most companies accept one of two strategies:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对这些缺点，大多数公司接受了两种策略之一：
- en: Centralized decision making to select one tool (for each DevOps area) for the
    whole company
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中决策，选择一个工具（对于每个 DevOps 领域）作为整个公司的标准工具
- en: Centralized adoption of a limited set of tools, out of which teams can choose
    which to adopt
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中采用有限的工具集，团队可以从中选择要采用的工具
- en: In **complete centralization**, one central team or department decides, on behalf
    of everyone, which DevOps tools will be used within the organization. Once such
    a decision has been made and implemented, this reduces costs and makes it easier
    for engineers to assist other teams.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在**完全集中化**中，由一个中央团队或部门代表所有人决定，在组织内使用哪些 DevOps 工具。一旦做出并实施此决策，就能减少成本，并使工程师能够更轻松地协助其他团队。
- en: The downside is, of course, that one single tool is not necessarily the best
    choice for everyone, while for the organization as a whole, the selected tool
    might be the best—such standardization can do damage in a number of edge cases.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，缺点是，单一工具不一定是最适合所有人的选择，而对整个组织而言，所选择的工具可能是最优的——这种标准化可能在一些边缘情况下造成损害。
- en: '**Limited centralization** is used by some companies to prevent this. Instead
    of just one tool, a group of tools is chosen as the company’s standard. Teams
    are now able to make their own choice out of two or three tools, depending on
    their specific needs. This limits many of the drawbacks of full decentralization,
    while not sacrificing the productivity of teams with very specific needs.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**有限集中化**是一些公司为避免这种情况所采用的方法。与只选择一个工具不同，这些公司选择了一组工具作为公司的标准。现在，各团队可以根据自己的具体需求，在两三个工具中做出选择。这种方式在不牺牲拥有非常具体需求的团队生产力的情况下，限制了完全去中心化的许多缺点。'
- en: Adopting one of these two strategies might mean that some existing tools will
    be deprecated or decommissioned altogether. This can be a slow and painful process,
    especially in large organizations where there are often conflicting interests.
    There are many ways to go about this, but there are strategies to make such a
    migration less painful.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这两种策略之一可能意味着一些现有的工具会被弃用或完全淘汰。这可能是一个缓慢而痛苦的过程，尤其是在大型组织中，往往存在相互冲突的利益。有许多方法可以实现这一目标，但也有一些策略可以让这种迁移变得不那么痛苦。
- en: Migration strategies
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迁移策略
- en: 'Reducing the number of DevOps tools in use often means one or more tools must
    be decommissioned. This can be difficult since, often, these tools are used to
    implement governance and compliance, as required by laws and regulations. In practice,
    this means that one of two things can be done:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 减少使用的 DevOps 工具数量通常意味着必须淘汰一个或多个工具。这可能会很困难，因为这些工具通常用于实现治理和合规性，以符合法律和法规的要求。实际上，这意味着可以采取以下两种做法之一：
- en: Old tools are not completely decommissioned but just no longer used, to maintain
    the change history.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧工具并非完全淘汰，而是仅不再使用，以保持变更历史。
- en: History must be migrated to the new tools as well before the old tools can be
    decommissioned.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在旧工具被淘汰之前，历史数据也必须迁移到新工具中。
- en: 'When choosing to do a migration, there are four ways to go about this:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 选择迁移时，有四种方法可以实现：
- en: Azure DevOps Server to Azure DevOps Services migration
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Azure DevOps Server 迁移到 Azure DevOps Services
- en: Big-bang migration
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大爆炸式迁移
- en: Synchronization
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同步
- en: Rebuilding
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重建
- en: Tip
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Azure DevOps Server used to be called **Team Foundation Server** (**TFS**).
    Older versions of TFS need to be upgraded to one of the latest versions of Azure
    DevOps Server before they can be imported into Azure DevOps Services. The import
    service always supports the latest two versions of Azure DevOps Server.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps Server 以前被称为**团队基础服务器**（**TFS**）。较旧版本的 TFS 需要升级到最新版本的 Azure DevOps
    Server，才能导入到 Azure DevOps Services 中。导入服务始终支持 Azure DevOps Server 的最新两个版本。
- en: All four of these are detailed in the following sections.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节将详细介绍这四个步骤。
- en: Azure DevOps Server to Azure DevOps Services migration
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Azure DevOps Server 到 Azure DevOps Services 的迁移
- en: 'For organizations wanting to move from working with Azure DevOps Server to
    Azure DevOps Services, there is a high-fidelity migration service available. Every
    project collection that currently exists in the on-premises Azure DevOps Server
    environment can be migrated to an Azure DevOps organization using the Azure DevOps
    Server import service. All of the assets currently existing in the on-premises
    project collection will be migrated to Azure DevOps: work items, source control
    repositories, and build and release definitions.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于希望从 Azure DevOps Server 切换到 Azure DevOps Services 的组织，提供了高保真度的迁移服务。当前存在于本地
    Azure DevOps Server 环境中的每个项目集合都可以使用 Azure DevOps Server 导入服务迁移到 Azure DevOps 组织。所有当前存在于本地项目集合中的资产都将被迁移到
    Azure DevOps：工作项、源代码控制库以及构建和发布定义。
- en: 'The migration of a project collection consists of the following high-level
    steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 项目集合的迁移包括以下高级步骤：
- en: 'Validating whether a project collection is ready for migration: This step does
    not make any changes but only checks whether all preconditions for a migration
    have been met.'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证项目集合是否准备好进行迁移：此步骤不会做任何更改，只是检查迁移的所有前提条件是否已满足。
- en: 'Preparing the migration: In this step, a JSON file is generated that describes
    how the migration should be performed. A second file can also be supplied for
    linking on-premises identities to AAD identities to ensure that all of the history
    is still correctly linked to who made the change after the migration.'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备迁移：在此步骤中，生成一个描述如何执行迁移的 JSON 文件。如果需要，还可以提供第二个文件，将本地身份与 AAD 身份关联，以确保迁移后所有历史记录仍然正确地与进行更改的人员关联。
- en: A dry run of the migration is done to verify that the import process will result
    in the expected outcomes.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会进行一次迁移的演练，以验证导入过程是否能够产生预期的结果。
- en: 'The actual migration: In this step, the collection is taken offline, a **Data-Tier
    Application Package** (**DACPAC**) is generated from the project collection database,
    the DACPAC and files from step 2 are uploaded, and the migration is initiated.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实际迁移：在此步骤中，项目集合将下线，从项目集合数据库中生成**数据层应用程序包**（**DACPAC**），然后上传第 2 步的 DACPAC 文件和其他文件，并启动迁移。
- en: After the import, all assets need to be verified and, in specific scenarios,
    some post-import actions have to be taken.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入完成后，需要验证所有资产，并且在某些特定场景下，必须采取一些导入后的操作。
- en: For using the migration service, a comprehensive guide with checklists and step-by-step
    instructions is available and linked to at the end of this chapter.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用迁移服务时，提供了包含清单和逐步说明的全面指南，具体链接在本章末尾。
- en: Big-bang migration
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 大爆炸迁移
- en: The second possible strategy is a big-bang migration. At some point, the old
    tool is switched off, all data is migrated to the new tool, and the new tool is
    made available. It has a high potential for issues, and often, there is no turning
    back. This is usually not a good migration strategy.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种可能的策略是“大爆炸”迁移。在某个时刻，旧工具被关闭，所有数据迁移到新工具，并启用新工具。这种方式存在较高的问题风险，通常也没有回头路。通常来说，这并不是一个好的迁移策略。
- en: However, one situation where such an approach might make sense is the migration
    of source control. There are tools available for migrating from different sources
    to any type of hosted Git solution, including Azure DevOps. Source control also
    has the benefit that change history is built so deep into the system that migrating
    with history is often easier than for other types of data.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某些情况下，这种方法可能有意义，比如源代码控制的迁移。现在有一些工具可以将不同来源的代码迁移到任何类型的托管 Git 解决方案，包括 Azure
    DevOps。源代码控制的优势在于，变更历史深深嵌入到系统中，因此带着历史进行迁移往往比其他类型的数据更容易。
- en: Synchronization
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 同步
- en: Another strategy for migration is allowing for a period of time where both tools
    can be used at the same time.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种迁移策略是允许一段时间内同时使用两种工具。
- en: One way to do this is by using a tool that can be used to sync between the old
    and the new tool. This can be either in one direction, from old to new, or in
    both directions. This way, an in-between situation is created where both tools
    can be in use at the same time. Every team can choose its own time for migration
    within a certain window. This avoids a forced migration window. Teams can also
    opt to use both tools next to each other for a while. This allows them to learn
    the new tool, while still being able to switch to the tool that they know if they
    are under pressure. After a period of transition, the old tool can be made read-only
    or decommissioned completely. This approach often works well for work-tracking
    systems. Between these systems, the concepts are often very similar (epics, features,
    stories, and sprints), which makes synchronization a feasible approach.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一种方法是使用一种工具来同步旧工具和新工具之间的数据。这可以是单向同步，从旧工具到新工具，或者双向同步。这样，就创造了一个过渡的情况，在这个过程中，两个工具可以同时使用。每个团队可以选择在一定的时间窗口内进行迁移。这避免了强制迁移的窗口。团队也可以选择在一段时间内并行使用这两个工具。这样，他们可以学习新工具，同时如果遇到压力，仍然可以切换回他们熟悉的工具。经过一段过渡期后，旧工具可以设置为只读，或完全淘汰。这种方法通常对于工作跟踪系统效果较好。在这些系统之间，概念通常非常相似（史诗、特性、故事和冲刺），这使得同步成为一种可行的方案。
- en: Rebuilding
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重建
- en: A slightly different approach is that of asking teams to rebuild in the new
    tool. This approach also creates an in-parallel situation, but there is no automated
    migration or synchronization. Teams will have to redo their process or way of
    working in the new tool. Since this can take a while, the old tool will remain
    while teams are working on this. One situation where this is often a good approach
    is that of build and/or release pipelines.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一个略微不同的方法是要求团队在新工具中重新构建。这种方法也创造了一个并行的情况，但没有自动迁移或同步。团队将不得不在新工具中重新做他们的流程或工作方式。由于这可能需要一些时间，旧工具将继续存在，直到团队完成这项工作。一个常见的适用场景是构建和/或发布流水线。
- en: No matter the strategy that has been chosen, in all cases, it helps to make
    sure that the new tool or tools are an improvement for the teams over the existing
    tools. This should improve performance, traceability, ease of use, or integration
    with other company tools. A positive vibe around any migration can improve the
    outcomes dramatically.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 无论选择哪种策略，在所有情况下，确保新工具或工具集对团队来说优于现有工具都是很重要的。这应该提升性能、可追溯性、易用性或与其他公司工具的集成。任何迁移过程中的积极氛围都能显著改善结果。
- en: As an alternative to migrating to a single tool, integrations between tools
    can be used to bring existing tools together.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 作为迁移到单一工具的替代方案，工具之间的集成可以用来将现有工具结合在一起。
- en: Integrating tools
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成工具
- en: As an alternative to replacing no-longer-preferred tools, it is also possible
    to integrate them with the preferred tool. Especially when it has been decided
    to move to Azure DevOps, this can be a powerful strategy. In many of the previous
    chapters, for each topic, different tools were listed that integrate with Azure
    DevOps.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代不再优选工具的方案，也可以将它们与首选工具集成。特别是当决定迁移到 Azure DevOps 时，这可以成为一种强大的策略。在前面的许多章节中，对于每个主题，都列出了与
    Azure DevOps 集成的不同工具。
- en: When pursuing end-to-end traceability, these integrations can be used as a means
    to bring tools closer together. Consider the following example.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在追求端到端可追溯性的过程中，这些集成可以作为使工具更加紧密结合的一种手段。考虑以下示例。
- en: 'An organization is using Azure DevOps for managing work items, hosting Git
    repositories, and executing build pipelines. Deployments are done using Octopus
    Deploy for historic reasons. Since a full migration is too costly, as an alternative,
    an integration strategy is chosen. Triggering Octopus Deploy not manually but
    automatically from Azure DevOps meets several goals:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一个组织正在使用 Azure DevOps 来管理工作项、托管 Git 仓库和执行构建流水线。由于历史原因，部署工作是通过 Octopus Deploy
    完成的。由于完全迁移成本过高，作为替代方案，选择了集成策略。通过 Azure DevOps 自动触发 Octopus Deploy 而非手动触发，达成了多个目标：
- en: End-to-end automation is achieved.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现端到端自动化。
- en: Release management can now also be done in Azure DevOps, even though each deployment
    in Azure DevOps does nothing more than trigger Octopus Deploy.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，发布管理也可以在 Azure DevOps 中完成，即便在 Azure DevOps 中的每次部署仅仅是触发 Octopus Deploy。
- en: Having release management in Azure DevOps now allows for end-to-end traceability.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在在 Azure DevOps 中进行发布管理，可以实现端到端的可追溯性。
- en: When consolidating tools, and really all things regarding DevOps, one thing
    that you must be ready to accept is that you are never done.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在整合工具和所有与 DevOps 相关的事情时，必须准备好接受一个事实，那就是你永远不会完成。
- en: Accepting there is no end state
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接受没有终点状态
- en: It is fair to expect that, at any point in time, there will be one or more improvements
    that teams want to make to their applications, toolchains, or way of working.
    To cope with this, it is recommended to not keep changing everything all of the
    time.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 合理预期，在任何时候，团队都会有一个或多个改进点，想要对他们的应用程序、工具链或工作方式进行改进。为了应对这一点，建议不要一直不断地改变一切。
- en: Instead, try to implement changes in batches or a series of well-defined steps.
    Also, note there is a natural order to things. It is impossible to practice **continuous
    deployment** (**CD**) without having a proper **continuous integration** (**CI**)
    process first. Also, adopting **infrastructure as code** (**IaC**) will deliver
    the most value when a CD process for application code is already in place. Next,
    automating governance and security measures works best when having infrastructure
    and configuration code is common practice. Once all of these practices have been
    implemented, new things will come up on the radar—future improvements that may
    be necessary.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，尝试分批或通过一系列明确定义的步骤来实施变更。同时，需要注意的是，事情是有自然顺序的。如果没有先建立合适的**持续集成**（**CI**）流程，是不可能实践**持续部署**（**CD**）的。另外，当应用代码的
    CD 流程已经就绪时，采用**基础设施即代码**（**IaC**）将带来最大的价值。接下来，自动化治理和安全措施在基础设施和配置代码已成为常规实践的情况下效果最佳。一旦所有这些实践都已实施，新的事物将出现在雷达上——未来可能需要的改进。
- en: Besides this series of improvements, it is also important to realize that not
    every team is at the same place in this journey, not every team can move at the
    same pace, and that development is not always this linear.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这一系列的改进外，还需要意识到，并不是每个团队都在这条旅程中的同一位置，并不是每个团队都能以相同的速度前进，而且开发并非总是线性的。
- en: But this does not mean that it is impossible to track and plan future changes
    and have learnings from one team applied to other teams as well. One oversimplified
    approach to tracking this can be a table, as shown here.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 但这并不意味着无法跟踪和规划未来的变化，并将一个团队的经验教训应用到其他团队中。跟踪这一过程的一种过于简化的方式可以是使用表格，如下所示。
- en: 'Here, we see the adoption of different DevOps practices or ideas among five
    teams. All teams are practicing CI. Some of them are practicing CD, while team
    3 is still working on that **work in progress** (**WIP**) and the fifth team has
    not started yet. Finally, team 2 is already experimenting with IaC. Finally, as
    there is no end state, it is only a matter of time before the next practice or
    idea will pop up and a team will start experimenting:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到五个团队在采纳不同的 DevOps 实践或理念。所有团队都在实践 CI。一些团队在实践 CD，而团队 3 仍在进行**进行中的工作**（**WIP**），第五个团队还没有开始。最后，团队
    2 已经在试验 IaC。最终，由于没有终点状态，下一种实践或理念的出现只是时间问题，某个团队将开始进行实验：
- en: '![](img/B18655_17_06.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18655_17_06.jpg)'
- en: If a table similar to the preceding one is updated, evaluated, and expanded
    upon frequently, it helps to foster continuous learning and improve the way software
    is created and delivered. Learning and improving will become the standard and
    this will help to improve the delivery of value to end users. It also shows that
    adopting DevOps is never done.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果像前面所示的表格那样定期更新、评估并扩展，它有助于促进持续学习，并改进软件的创建和交付方式。学习和改进将成为标准，这将有助于提升向最终用户交付价值的效率。它还表明，采用
    DevOps 永远不会“完成”。
- en: It also provides the means to see which teams are at the forefront and which
    teams are following along. By giving teams who are in the lead more room for experimentation
    and knowledge sharing with other teams, organizations can encourage their leading
    teams to improve even more, while at the same time accelerating other teams as
    well.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 它还提供了一个途径，可以看到哪些团队走在前列，哪些团队在跟随。通过给处于领先位置的团队更多的实验空间，并与其他团队分享知识，组织可以鼓励他们的领先团队进一步改进，同时也加速其他团队的进步。
- en: And with this remark about the need to keep learning, experimenting, and pushing
    yourself, it is a great time to wrap this book up. Let’s recap this chapter in
    the next section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 关于持续学习、实验和自我提升的这一点，正是一个很好的时机来结束这本书。让我们在下一节中回顾这一章的内容。
- en: Summary
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to configure your Azure DevOps organization
    and how to create a layout for your products and teams. You learned what the implications
    are regarding the different configuration options and how to apply those. After
    that, you learned how you can use Azure DevOps to add traceability to your development
    process. You learned how to capture ideas and tasks in stories and tasks and how
    these can be traced all the way to deployment, and the other way around. The next
    thing you learned about is how to approach the consolidation of tools used within
    your organization and when to stop trying to consolidate tools. Finally, you learned
    that it is important to continuously keep improving.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你学会了如何配置Azure DevOps组织以及如何为你的产品和团队创建布局。你了解了不同配置选项的影响以及如何应用这些配置。之后，你学会了如何利用Azure
    DevOps为你的开发过程增加可追溯性。你学会了如何在故事和任务中捕捉想法和任务，并且这些可以追溯到部署过程，反之亦然。接下来，你学习了如何在组织内整合使用的工具，并了解了何时不再尝试整合工具。最后，你了解到持续改进的重要性。
- en: With the things you learned in this chapter, you are now capable of setting
    up and configuring Azure DevOps for your team, teams, or organization. You can
    create a structure that fits your organization and start using it with just one
    or multiple teams. You are also able to slowly standardize your way of working
    and consolidate the teams on the same set of tools.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章所学的内容，你现在可以为你的团队、多个团队或整个组织设置和配置Azure DevOps。你可以创建一个适合你组织的结构，并开始使用它，支持一个或多个团队。同时，你还能够逐步标准化工作方式，并将团队统一在同一套工具上。
- en: This completes the final chapter of this book. You can refer back to this book
    to help you prepare to take the AZ-400 exam, as most of the topics are along similar
    lines. However, in order to be well prepared for the exam, I recommend reading
    more about it from other sources as well and trying to get as much hands-on experience
    as you can. As a practice tool, the concluding chapter contains a mock exam to
    help you prepare for the final exam.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的最后一章已完成。你可以参考这本书来帮助你准备AZ-400考试，因为大多数话题都是类似的。不过，为了充分准备考试，我建议你从其他资源中阅读更多相关内容，并尽可能多地进行实践。在本章的结尾，有一份模拟考试，帮助你为最终考试做好准备。
- en: Good luck!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你好运！
- en: Questions
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter’s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章总结时，以下是一些问题，供你测试自己对本章内容的掌握情况。你可以在*附录*的*评估*部分找到答案：
- en: 'True or false: All data stored in Azure DevOps by users is guaranteed to be
    contained within one region.'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对或错：用户在Azure DevOps中存储的所有数据都保证包含在一个区域内。
- en: 'Reorder the following Azure DevOps concepts in such a way that each element
    acts as a container for the next concept in the list:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下顺序重新排列Azure DevOps的概念，使得每个元素都作为下一个概念的容器：
- en: Work item
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作项
- en: Organization
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织
- en: Region
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域
- en: Project
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目
- en: 'True or false: The general recommendation is to create a new project for every
    application that is developed by your organization.'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对或错：通常的建议是为你的组织开发的每个应用创建一个新的项目。
- en: Which two elements limit the actions any user can perform within Azure DevOps?
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪两个元素限制了任何用户在Azure DevOps中可以执行的操作？
- en: What is the main benefit of using a single tool for ALM/DevOps as opposed to
    a suite of tools?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用单一工具进行ALM/DevOps与使用一套工具套件相比，主要的好处是什么？
- en: Activity
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 活动
- en: 'Consider a scenario where your organization is planning to develop the next-generation
    customer relationship management online service. The engineering team is organized
    using departments, wherein each department is entrusted with the ownership of
    building products or services for an identified focus area. The following diagram
    depicts a summary of this:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的组织正在计划开发下一代客户关系管理在线服务。工程团队按照部门进行组织，每个部门负责为某个特定领域构建产品或服务。以下图示总结了这一点：
- en: '![Figure 17.6 – Organization structure ](img/B18655_17_07.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.6 – 组织结构](img/B18655_17_07.jpg)'
- en: Figure 17.6 – Organization structure
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.6 – 组织结构
- en: Within each department, there would be multiple feature teams (for example,
    infra, web, mobile, core API, and so on) working on these products or services.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个部门内部，会有多个功能团队（例如，基础设施、网页、移动、核心API等）负责这些产品或服务的开发。
- en: For the scenario under evaluation, identify an approach for setting up your
    DevOps organization using projects, area paths, and teams. One of the considerations
    is that each department would prefer to have complete ownership of their DevOps
    components and the project life cycle.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 对于正在评估的场景，请确定使用项目、区域路径和团队设置 DevOps 组织的方法。需要考虑的一点是，每个部门希望完全拥有他们的 DevOps 组件和项目生命周期。
- en: Further reading
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: More information on Azure DevOps projects and when to create more than one project
    can be found at [https://docs.microsoft.com/en-us/azure/devops/organizations/projects/about-projects?view=azure-devops#when-to-add-another-project](https://docs.microsoft.com/en-us/azure/devops/organizations/projects/about-projects?view=azure-devops#when-to-add-another-project).
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Azure DevOps 项目以及何时创建多个项目的更多信息，请访问 [https://docs.microsoft.com/en-us/azure/devops/organizations/projects/about-projects?view=azure-devops#when-to-add-another-project](https://docs.microsoft.com/en-us/azure/devops/organizations/projects/about-projects?view=azure-devops#when-to-add-another-project)。
- en: More information about the Azure DevOps security model can be found at [https://docs.microsoft.com/en-us/azure/devops/organizations/security](https://docs.microsoft.com/en-us/azure/devops/organizations/security).
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Azure DevOps 安全模型的更多信息，请访问 [https://docs.microsoft.com/en-us/azure/devops/organizations/security](https://docs.microsoft.com/en-us/azure/devops/organizations/security)。
- en: Up-to-date information on Azure DevOps pricing can be found at [https://azure.microsoft.com/en-us/pricing/details/devops/azure-devops-services/](https://azure.microsoft.com/en-us/pricing/details/devops/azure-devops-services/).
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最新的 Azure DevOps 定价信息，请访问 [https://azure.microsoft.com/en-us/pricing/details/devops/azure-devops-services/](https://azure.microsoft.com/en-us/pricing/details/devops/azure-devops-services/)。
- en: More information about the Azure DevOps Server import service can be found at
    [https://docs.microsoft.com/en-us/azure/devops/migrate/migration-overview?view=azure-devopsviewFallbackFrom=vsts](https://docs.microsoft.com/en-us/azure/devops/migrate/migration-overview?view=azure-devopsviewFallbackFrom=vsts).
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Azure DevOps Server 导入服务的更多信息，请访问 [https://docs.microsoft.com/en-us/azure/devops/migrate/migration-overview?view=azure-devopsviewFallbackFrom=vsts](https://docs.microsoft.com/en-us/azure/devops/migrate/migration-overview?view=azure-devopsviewFallbackFrom=vsts)。
