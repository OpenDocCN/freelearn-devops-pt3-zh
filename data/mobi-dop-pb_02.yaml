- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Understanding the Mobile Ecosystem
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解移动生态系统
- en: The mobile ecosystem of an app encompasses all the elements it requires to function
    correctly on a mobile device, including the hardware, software, operating system,
    network, and services that make it work. To successfully implement Mobile DevOps
    and meet the needs of your customers, it is imperative to understand the mobile
    ecosystem in order to know the challenges and how to overcome them to deliver
    successful mobile applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个应用的移动生态系统包括它在移动设备上正常运行所需的所有元素，包括硬件、软件、操作系统、网络和使其运作的服务。为了成功实施移动DevOps并满足客户需求，理解移动生态系统至关重要，因为这有助于了解所面临的挑战，并找到解决方法以交付成功的移动应用。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: Mobile apps are like icebergs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用像冰山一样
- en: The greatest things about mobile apps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用的伟大之处
- en: The different mobile OSs, frameworks, and platforms in the market
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场上的不同移动操作系统、框架和平台
- en: Mobile app functionalities such as monetization, push notifications, state management,
    deep linking, and more
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用功能，如盈利化、推送通知、状态管理、深度链接等
- en: Mobile app architecture
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用架构
- en: Mobile apps are like icebergs
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用像冰山一样
- en: 'In my opinion, a mobile app is similar to an *iceberg*, in that there is an
    apparent part (**the user interface or UI**) and an unseen part (**the code and
    functionalities underneath the UI**). Even though the end user is the only one
    to see the finished product, this analogy often illustrates the amount of effort,
    complexity, and work involved in building and maintaining a mobile application,
    as shown in the following screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，一个移动应用程序就像一个*冰山*，有明显的部分（**用户界面或UI**）和不显眼的部分（**UI下方的代码和功能**）。尽管最终用户是唯一能够看到成品的人，但这个比喻常常能说明构建和维护一个移动应用程序所需的努力、复杂性和工作量，如下图所示：
- en: '![Figure 2.1 – A mobile app is an iceberg](img/Figure_2.01_B18113.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – 移动应用是一个冰山](img/Figure_2.01_B18113.jpg)'
- en: Figure 2.1 – A mobile app is an iceberg
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – 移动应用是一个冰山
- en: When a user, for instance, downloads an app and begins using it for the first
    time, all they see is its interface, features, and functionalities. The user is
    unable to see much of what is going on behind the scenes, but it is much more
    important than they realize. A mobile application is connected to servers, databases,
    and APIs that allow it to communicate with other apps and devices, retrieve data,
    transmit data, and perform a variety of tasks.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个用户例如下载并首次使用一个应用时，他们看到的仅仅是它的界面、功能和特性。用户看不到后台发生的许多事情，但这些远比他们意识到的要重要。一个移动应用连接着服务器、数据库和API，使其能够与其他应用和设备进行通信、检索数据、传输数据并执行各种任务。
- en: 'A **mobile app** is, in its simplest sense, a piece of software that is designed
    to run on a certain platform (such as Android or iOS). Because of this, it requires
    a great deal of coding to be developed. As shown in *Figure 2**.2*, it consists
    of a variety of programming languages, frameworks, libraries, and tools that are
    used to develop the app’s functionality and features:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个**移动应用**，从最简单的意义上讲，就是一种为某个平台（如Android或iOS）设计的运行软件。因此，它需要大量的编码才能开发出来。如*图2.2*所示，它由多种编程语言、框架、库和工具组成，这些都用于开发应用的功能和特性：
- en: '![Figure 2.2 – Mobile app development](img/Figure_2.02_B18113.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 – 移动应用开发](img/Figure_2.02_B18113.jpg)'
- en: Figure 2.2 – Mobile app development
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – 移动应用开发
- en: In addition to the technical aspects of a mobile app, a lot of work goes into
    its planning, design, testing, and releasing phases as well. Wireframes, prototypes,
    and user flows must be developed and user tests conducted to ensure the app is
    intuitive, user-friendly, and performs well.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了移动应用的技术方面，很多工作还集中在其规划、设计、测试和发布阶段。必须开发线框图、原型和用户流程，并进行用户测试，以确保应用直观、易用且性能优良。
- en: Now that we’ve explored the foundations of mobile app development, let’s shift
    our focus to the challenges that most mobile development teams face to build great
    apps.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探讨了移动应用开发的基础，让我们将焦点转移到大多数移动开发团队在构建优秀应用时面临的挑战。
- en: What makes mobile apps great?
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么使得移动应用伟大？
- en: 'In order to make a great mobile app, it needs to have a straightforward and
    intuitive UI that is easy to use but it is different from a web app, for the following
    reasons (as also shown in *Figure 2**.3*):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作一个优秀的移动应用，它需要有一个简洁直观的用户界面，易于使用，但与Web应用不同，原因如下（如*图2.3*所示）：
- en: It’s more critical
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这变得更加重要。
- en: The platform is fragmented
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个平台是高度碎片化的。
- en: The tools change frequently
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具经常变化。
- en: 'It iterates rapidly:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它迭代得非常迅速：
- en: '![Figure 2.3 – A mobile app is unique](img/Figure_2.03_B18113.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 移动应用是独特的](img/Figure_2.03_B18113.jpg)'
- en: Figure 2.3 – A mobile app is unique
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 移动应用是独特的
- en: 'Based on the nature and complexity of mobile apps, there are a few things to
    consider when looking at what makes mobile apps great, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 基于移动应用的性质和复杂性，在评估移动应用的优点时，有几件事情需要考虑，如下所示：
- en: Mobile apps help users to solve problems or fulfill their needs, and they need
    to be well designed and reliable, with a range of useful features and functions
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用帮助用户解决问题或满足他们的需求，因此它们需要经过精心设计，并且具有一系列有用的功能和特性，且要可靠。
- en: They should be fast, responsive, and able to handle a variety of platforms and
    devices flawlessly without crashing or lagging
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们应该快速、响应迅速，并且能够完美地处理各种平台和设备，且不会崩溃或出现卡顿。
- en: It is important for mobile apps to be compatible with a wide range of devices
    and platforms so that as many users as possible are able to take advantage of
    them
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于移动应用而言，兼容多种设备和平台非常重要，这样尽可能多的用户才能使用它们。
- en: They are designed to protect sensitive data and prevent unauthorized access
    to it
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们被设计用来保护敏感数据，并防止未经授权的访问。
- en: They need to be updated regularly with new features and improvements in order
    to keep users interested and ensure that they remain relevant in the future
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们需要定期更新，增加新功能和改进，以保持用户兴趣，并确保未来仍然具有相关性。
- en: Since we now understand the importance of mobile apps, let’s now take a closer
    look at the platforms and frameworks that are available today on the market and
    what needs to be considered when we implement Mobile DevOps processes and practices.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了移动应用的重要性，现在让我们更详细地看看今天市场上可用的平台和框架，以及在实施移动 DevOps 流程和实践时需要考虑的事项。
- en: Mobile platforms and frameworks available today
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当前可用的移动平台和框架
- en: As of writing this book, there are a lot of different mobile platforms on the
    market these days, both **native** and **cross-platform**, so let’s take a quick
    look at the differences between them to give you a better understanding of what
    we need to consider when thinking about Mobile DevOps.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在写这本书的时候，目前市场上有很多不同的移动平台，包括**原生**平台和**跨平台**平台，下面我们快速了解一下它们之间的差异，帮助你更好地理解在思考移动
    DevOps 时需要考虑的因素。
- en: Note
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: I do not want to make this a detailed explanation of mobile development because
    this is a book about Mobile DevOps and there are tons of books about mobile development.
    However, as we mentioned previously, we should be in a position to interpret the
    requirements of different platforms and then implement the DevOps process accordingly.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我不想详细解释移动开发，因为这本书是关于移动 DevOps 的，而关于移动开发的书籍有很多。然而，正如我们之前提到的，我们应该能够解读不同平台的需求，然后根据这些需求实施
    DevOps 流程。
- en: As a starting point, let’s take a look at native apps such as iOS and Android.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 作为起点，让我们来看一下原生应用，如 iOS 和 Android。
- en: iOS
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS
- en: As we know, **iOS** is the operating system that runs on iPhones and iPads.
    Now, we have the iPadOS for iPads. It is well known that iOS is compatible with
    other Apple products besides its user-friendly interface, integration with other
    Apple products, and the vast selection of apps that are available through the
    App Store. While I am writing this book, the latest version of iOS is version
    *16*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所知，**iOS**是运行在 iPhone 和 iPad 上的操作系统。现在，iPad 有了专门的 iPadOS。众所周知，iOS 除了拥有用户友好的界面、与其他
    Apple 产品的整合以及通过 App Store 提供的大量应用外，还与其他 Apple 产品兼容。在写这本书时，iOS 的最新版本是 *16*。
- en: When developing, testing, and releasing iOS apps, it is imperative that you
    always have the latest version of macOS with the latest SDKs and tools to meet
    the app requirements, which can be a big challenge when it comes to mobile CI/CD,
    because if you want to build and release iOS apps, then you need to always be
    on the latest.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发、测试和发布 iOS 应用时，务必始终使用最新版本的 macOS，并配备最新的 SDK 和工具，以满足应用的需求。这对于移动 CI/CD 来说是一个大挑战，因为如果你想构建和发布
    iOS 应用，你就必须始终保持最新。
- en: To avoid wasting developer time setting up and maintaining infrastructure for
    our mobile CI/CD platform, we should always look for a platform that is ready
    to use. We will dive deep into how we can choose a suitable CI/CD provider for
    our team in [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118), *Achieving Continuous
    Integration and Delivery with* *Mobile DevOps*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免浪费开发人员在设置和维护移动 CI/CD 平台上的时间，我们应该始终寻找一个即插即用的平台。在[ *第 4 章*](B18113_04.xhtml#_idTextAnchor118)，*通过移动
    DevOps 实现持续集成与交付* 中，我们将深入探讨如何为我们的团队选择合适的 CI/CD 提供商。
- en: New features available with iOS 16
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: iOS 16 新增功能
- en: 'In September 2022, Apple released its new operating system, *iOS 16*. This
    version of the iOS operating system was announced at Apple’s *WWDC22* conference
    ([https://developer.apple.com/videos/wwdc2022/](https://developer.apple.com/videos/wwdc2022/)).
    iOS consists of features and performance improvements that are available on a
    wide range of devices, such as the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 2022 年 9 月，Apple 发布了其新操作系统 *iOS 16*。该版本的 iOS 操作系统在 Apple 的 *WWDC22* 大会上发布（[https://developer.apple.com/videos/wwdc2022/](https://developer.apple.com/videos/wwdc2022/)）。iOS
    包含适用于广泛设备的功能和性能改进，包括以下内容：
- en: '**New Lock Screen**: You can now create complications for Apple Watch and widgets
    for the iPhone Lock Screen using WidgetKit, extending the glanceable experience
    and embracing SwiftUI'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全新锁屏**：现在，你可以使用 WidgetKit 为 Apple Watch 创建复杂功能，并为 iPhone 锁屏创建小部件，扩展便捷查看的体验，并拥抱
    SwiftUI'
- en: '**Tap to Pay on iPhone**: With Apple Pay, Apple Watch, and other digital wallets
    on iPhone, payment apps can now accept contactless payments through contactless
    credit and debit cards'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iPhone 一触即付**：通过 Apple Pay、Apple Watch 和其他数字钱包，iPhone 上的支付应用现在可以通过接触式信用卡和借记卡接受非接触式支付'
- en: '**SwiftCharts** is a powerful and concise SwiftUI framework for transforming
    your data into informative visualizations'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SwiftCharts** 是一个强大且简洁的 SwiftUI 框架，用于将数据转化为信息丰富的可视化效果'
- en: '**Maps in 3D**: Experience the highly detailed 3D city experience on the all-new
    map'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3D 地图**：在全新的地图上体验高度详细的 3D 城市体验'
- en: '**App Intents** will provide your users with the ability to perform quick tasks
    by only speaking or tapping your app'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**App Intents** 将为用户提供仅通过语音或点击应用即可执行快速任务的能力'
- en: Improved in-app purchase experiences with new APIs and enhancements
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进的应用内购买体验，新增 API 和增强功能
- en: Use **live text** in videos and apps to perform simple tasks such as copying
    and pasting
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视频和应用中使用**实时文本**执行简单任务，如复制和粘贴
- en: 'All of these come with new features and enhancements in security, accessibility,
    and privacy to help developers build secure and rich iOS apps. All the details
    can be found here: [https://www.apple.com/ios/ios-16/features/](https://www.apple.com/ios/ios-16/features/).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些功能都伴随着安全性、可访问性和隐私方面的新特性和增强功能，帮助开发者构建安全且丰富的 iOS 应用。所有细节可以在这里找到：[https://www.apple.com/ios/ios-16/features/](https://www.apple.com/ios/ios-16/features/)。
- en: In addition to mentioning the new features here, I also want to stress the fact
    that we have different challenges in UI testing of these features, such as UI
    testing of widgets and charts as well as Lock Screens, and that’s why we always
    need to think bigger when it comes to what the next challenge might be.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在这里提到的新功能外，我还想强调，我们在 UI 测试这些功能时面临不同的挑战，例如小部件和图表的 UI 测试以及锁屏测试，因此当涉及到下一个可能的挑战时，我们必须始终考虑更大的范围。
- en: Just be prepared for a new version of iOS to be released during the time you
    are reading this book.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 只需准备好，在你阅读本书时，新版本的 iOS 就会发布。
- en: Besides the preceding features in iOS 16, Apple also released the latest version
    of **Xcode**, which is *15* ([https://apps.apple.com/us/app/xcode/id497799835?mt=12/](https://apps.apple.com/us/app/xcode/id497799835?mt=12/))
    while writing the book, the main developer IDE to develop iOS, tvOS, iPadOS, watchOS,
    or macOS apps. The Xcode binary is 30% smaller than before, so you can start faster
    than ever. With downloadable simulator runtimes for watchOS and tvOS, Xcode gives
    developers access to the latest platforms at their fingertips. And one of the
    important features is configuring a multiplatform app with a single app target.
    Let’s learn more about what a multiplatform app is.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 iOS 16 中的上述功能外，Apple 还发布了最新版本的 **Xcode**，即*15*（[https://apps.apple.com/us/app/xcode/id497799835?mt=12/](https://apps.apple.com/us/app/xcode/id497799835?mt=12/)），这本书写作时，Xcode
    是开发 iOS、tvOS、iPadOS、watchOS 或 macOS 应用的主要开发 IDE。Xcode 的二进制文件比以前小了 30%，因此启动速度比以往更快。Xcode
    还提供可下载的 watchOS 和 tvOS 模拟器运行时，让开发者可以随时接触到最新的平台。另一个重要的功能是通过单一的应用目标来配置多平台应用。让我们深入了解一下什么是多平台应用。
- en: Configuring a multiplatform app
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置多平台应用程序
- en: 'With a multiplatform app ([https://developer.apple.com/documentation/xcode/configuring-a-multiplatform-app-target](https://developer.apple.com/documentation/xcode/configuring-a-multiplatform-app-target)),
    you can share your app’s project settings and code across platforms with the use
    of a multiplatform target, as shown in *Figure 2**.4*, which will allow you to
    expand the experience of your app across multiple platforms supported by the app:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多平台应用程序（[https://developer.apple.com/documentation/xcode/configuring-a-multiplatform-app-target](https://developer.apple.com/documentation/xcode/configuring-a-multiplatform-app-target)），你可以通过使用多平台目标共享应用程序的项目设置和代码，正如*图
    2.4*所示，这将允许你将应用程序的体验扩展到应用程序支持的多个平台：
- en: '![Figure 2.4 – Multiplatform target](img/Figure_2.04_B18113.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 多平台目标](img/Figure_2.04_B18113.jpg)'
- en: Figure 2.4 – Multiplatform target
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 多平台目标
- en: Note
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'watchOS apps remain on a separate target, despite the fact that iOS, iPadOS,
    macOS, and tvOS apps can share one target. More information can be found here:
    [https://developer.apple.com/documentation/Xcode/configuring-a-multiplatform-app-target](https://developer.apple.com/documentation/Xcode/configuring-a-multiplatform-app-target).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 iOS、iPadOS、macOS 和 tvOS 应用程序可以共享一个目标，但 watchOS 应用程序仍然保持在一个单独的目标中。更多信息请参见：[https://developer.apple.com/documentation/Xcode/configuring-a-multiplatform-app-target](https://developer.apple.com/documentation/Xcode/configuring-a-multiplatform-app-target)。
- en: We should take this into consideration when designing the CI/CD pipeline since
    we need to consider the **code signing** mechanism, **certificates**, and **provision
    profiles** for each target, as well as the steps that must be taken when archiving
    or building the application for testing.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计 CI/CD 管道时，我们应该考虑到这一点，因为我们需要为每个目标考虑**代码签名**机制、**证书**和**配置文件**，以及在归档或构建应用程序进行测试时必须采取的步骤。
- en: Android
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android
- en: The **Android** ([https://www.android.com/](https://www.android.com/)) operating
    system is an open source platform developed by Google for smartphones and tablets.
    This operating system, based on the Linux kernel, is primarily intended for mobile
    devices but it has also been implemented in watches, TVs, cars, and other equipments.
    There are many reasons why Android is so popular, including the ability to customize
    your device, and the wide selection of apps available through the Google Play
    Store.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android**（[https://www.android.com/](https://www.android.com/)）操作系统是由 Google
    为智能手机和平板电脑开发的开源平台。这个操作系统基于 Linux 内核，主要用于移动设备，但也已在手表、电视、汽车和其他设备上实现。Android 之所以如此受欢迎，有很多原因，包括设备的定制能力，以及通过
    Google Play 商店提供的各种应用。'
- en: As an alternative version of the Android operating system, there is **Android
    Go** ([https://www.android.com/versions/go-edition/](https://www.android.com/versions/go-edition/)),
    which is designed to run smoothly on *low-spec* smartphones and tablets that have
    *limited resources*. With a *lighter* version of the Google Play Store, Google
    apps, and a wide range of apps optimized for low-end devices, it is designed to
    run smoothly on entry-level smartphones and tablets with limited resources.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Android 操作系统的替代版本，**Android Go**（[https://www.android.com/versions/go-edition/](https://www.android.com/versions/go-edition/)）旨在平稳运行于*低配置*的智能手机和平板电脑，这些设备具有*有限的资源*。通过一个*更轻量*版的
    Google Play 商店、Google 应用以及一系列优化为低端设备的应用，它旨在平稳运行于资源有限的入门级智能手机和平板电脑。
- en: The main objective of Android Go is to provide a smooth user experience that
    is reliable and easy to use for users with limited resources.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Android Go 的主要目标是为资源有限的用户提供流畅、可靠且易于使用的用户体验。
- en: Note
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can learn more about how to develop an app for Android Go here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里了解更多关于如何为 Android Go 开发应用程序的信息：
- en: '[https://developer.android.com/guide/topics/androidgo/develop](https://developer.android.com/guide/topics/androidgo/develop)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.android.com/guide/topics/androidgo/develop](https://developer.android.com/guide/topics/androidgo/develop)'
- en: New features available with Android 13
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android 13 新功能
- en: 'Likewise, iOS always has the latest version of Android, including new features
    and enhancements to existing ones. Let’s explore a few of them together:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，iOS 始终拥有 Android 的最新版本，包括新的功能和现有功能的增强。让我们一起探索其中的一些：
- en: As part of Android 13, Material You ([https://material.io/blog/announcing-material-you](https://material.io/blog/announcing-material-you))
    is incorporated into the operating system’s look and style. By customizing non-Google
    apps, you can make your home screen more cohesive and unique by matching the theme
    and colors you have chosen.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为 Android 13 的一部分，Material You ([https://material.io/blog/announcing-material-you](https://material.io/blog/announcing-material-you))
    被整合到操作系统的外观和样式中。通过自定义非 Google 应用程序，您可以通过匹配您选择的主题和颜色，使主屏幕更具连贯性和独特性。
- en: When you copy sensitive information such as your email address, phone number,
    or username and password, Android automatically clears your clipboard history
    after a period of time.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您复制敏感信息，如电子邮件地址、电话号码或用户名和密码时，Android 将在一段时间后自动清除您的剪贴板历史记录。
- en: It’s even easier to multitask on your tablet now that Android 13 is available.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在 Android 13 可用后，在平板上执行多任务更加容易了。
- en: Note
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'And there’s much more—you can find details of all the new features at the following
    link: [https://www.android.com/android-13/#a13-highlights](https://www.android.com/android-13/#a13-highlights).
    You can check all releases and versions at the following link: [https://developer.android.com/about/versions](https://developer.android.com/about/versions).'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更多内容 — 您可以在以下链接找到所有新功能的详细信息：[https://www.android.com/android-13/#a13-highlights](https://www.android.com/android-13/#a13-highlights)。您可以在以下链接查看所有发布和版本信息：[https://developer.android.com/about/versions](https://developer.android.com/about/versions)。
- en: In terms of CI/CD, Android can be built on various operating systems such as
    macOS, Windows, or Linux, but in order to build Android apps, you’ll need to have
    the SDKs and tools for Android, such as **Gradle**, which is the official and
    main tool for Android app development.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在持续集成/持续交付方面，Android 可以在 macOS、Windows 或 Linux 等各种操作系统上构建，但要构建 Android 应用程序，您需要拥有
    Android 的 SDK 和工具，例如 **Gradle**，这是 Android 应用开发的官方和主要工具。
- en: Next, let’s examine the applications that can run on multiple platforms or cross-platform
    applications.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们来看看可以在多个平台或跨平台运行的应用程序。
- en: Flutter
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flutter
- en: '**Flutter** ([https://flutter.dev/](https://flutter.dev/)) is a framework for
    developing mobile apps founded by Google. The Flutter platform enables developers
    to create mobile applications for Android and iOS that are highly responsive,
    visually appealing, and high performing, as well as desktop applications for macOS
    and Windows, web applications, and embedded applications, all from a single source
    of code ([https://flutter.dev/multi-platform/](https://flutter.dev/multi-platform/)).'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Flutter** ([https://flutter.dev/](https://flutter.dev/)) 是由 Google 创立的移动应用开发框架。Flutter
    平台使开发者能够从单一代码源创建适用于 Android 和 iOS 的移动应用，这些应用具有高响应性、视觉吸引力和高性能，以及适用于 macOS 和 Windows
    的桌面应用、Web 应用和嵌入式应用 ([https://flutter.dev/multi-platform/](https://flutter.dev/multi-platform/))。'
- en: 'As a result, Flutter is an ecosystem where you can build six apps from a single
    code base. As shown in *Figure 2**.5*, with Flutter you can build web, mobile
    embedded apps, and desktop apps(Windows, macOS, and Linux):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '因此，Flutter 是一个生态系统，在这里您可以从单一代码库构建六种应用程序。正如 *图 2**.5* 所示，使用 Flutter 您可以构建 Web、移动嵌入式应用程序和桌面应用程序（Windows、macOS
    和 Linux）:'
- en: '![Figure 2.5 – Flutter multiplatform](img/Figure_2.05_B18113.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – Flutter 多平台](img/Figure_2.05_B18113.jpg)'
- en: Figure 2.5 – Flutter multiplatform
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – Flutter 多平台
- en: Flutter uses the **Dart** programming language ([https://dart.dev/](https://dart.dev/))
    and features a reactive programming model, allowing for smooth and seamless app
    interactions. It also includes a wide range of customizable widgets and tools
    for building UIs, as well as access to native device features such as camera and
    storage.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Flutter 使用 **Dart** 编程语言 ([https://dart.dev/](https://dart.dev/)) 并采用响应式编程模型，允许实现流畅无缝的应用交互。它还包括各种可定制的
    UI 组件和构建工具，以及访问摄像头和存储等本地设备功能。
- en: Flutter is an excellent tool to help you build web applications such as **progressive
    web apps** (**PWAs**) and extend your existing mobile apps to the web, but the
    web itself is a flexible platform.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Flutter 是一个出色的工具，可以帮助您构建诸如 **渐进式 Web 应用** (**PWAs**) 等 Web 应用，并将现有的移动应用扩展到 Web，但
    Web 本身是一个灵活的平台。
- en: It is challenging to think about the CI/CD pipeline when it comes to Flutter
    because each app requires specific tools and pre-requests when it comes to releasing
    it. Since Flutter has iOS apps, it also requires macOS machines with the latest
    tools and SDKs as well. For instance, with the Flutter SDK, Linux requires different
    tools in addition to the Flutter SDK, and for sure with Windows, you will need
    to have the Windows OS in order to build the app.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及 Flutter 时，考虑 CI/CD 流水线是有挑战性的，因为每个应用都需要特定的工具和预请求才能发布。由于 Flutter 也支持 iOS 应用，因此它还需要
    macOS 机器以及最新的工具和 SDK。例如，使用 Flutter SDK 时，Linux 除了需要 Flutter SDK 之外，还需要其他工具，而在
    Windows 上，你肯定需要 Windows 操作系统才能构建应用。
- en: React Native
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: React Native
- en: 'The **React Native** framework ([https://reactnative.dev/](https://reactnative.dev/))
    is one of Facebook’s most popular frameworks since it allows developers to build
    native-like apps using JavaScript and the React library. React Native uses declarative
    programming and includes a large set of components and tools for creating high-performance
    applications. At this link, you can explore who is using React Native, such as
    Shopify, Microsoft, Facebook (Meta), and more: [https://reactnative.dev/showcase](https://reactnative.dev/showcase).
    As shown in *Figure 2**.6*, you can build iOS and Android apps from one single
    code base with React Native and JavaScript:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**React Native** 框架 ([https://reactnative.dev/](https://reactnative.dev/))
    是 Facebook 最受欢迎的框架之一，因为它允许开发者使用 JavaScript 和 React 库构建类似原生的应用。React Native 使用声明式编程，并包含大量组件和工具，用于创建高性能的应用。在此链接中，你可以了解哪些公司在使用
    React Native，例如 Shopify、Microsoft、Facebook（Meta）等：[https://reactnative.dev/showcase](https://reactnative.dev/showcase)。如
    *图 2.6* 所示，你可以通过 React Native 和 JavaScript 从一个单一代码库构建 iOS 和 Android 应用：'
- en: '![Figure 2.6 – React Native framework](img/Figure_2.06_B18113.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – React Native 框架](img/Figure_2.06_B18113.jpg)'
- en: Figure 2.6 – React Native framework
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – React Native 框架
- en: A new version of React Native, 0.72.4 ([https://github.com/facebook/react-native/releases](https://github.com/facebook/react-native/releases)),
    has been announced by the React Native team recently. Several improvements come
    with this version, including a new unified configuration for CodeGen, as well
    as CMake support for Android builds, and new documentation for the new architecture.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: React Native 团队最近宣布了 React Native 的新版本 0.72.4 ([https://github.com/facebook/react-native/releases](https://github.com/facebook/react-native/releases))。该版本带来了若干改进，包括统一的
    CodeGen 配置、新的 Android 构建支持 CMake 以及新架构的文档。
- en: 'Additionally, they announced a new architecture because the old architecture
    had several challenges, including the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，他们宣布了新架构，因为旧架构存在多个挑战，具体包括以下几点：
- en: Data being submitted *asynchronously* to the bridge and then asynchronously
    *waiting* for it to be processed by the other layer
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据被 *异步* 提交到桥接层，然后 *异步* 等待被另一个层处理。
- en: Since JS was single-threaded, all computations in that world happened in that
    thread
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于 JS 是单线程的，因此所有计算都发生在这个线程中。
- en: It was decided that JSON would be the best format for simplicity and human readability,
    but it did impose some overhead as every time one layer had to use the other,
    it had to serialize some data
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决定使用 JSON 作为最简单且易于人类阅读的格式，但它确实带来了一些开销，因为每当一个层需要使用另一个层时，都必须序列化一些数据。
- en: 'In spite of this, there will be several benefits associated with the new architecture,
    such as the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，新的架构会带来几个好处，具体包括以下几点：
- en: The execution of *synchronous* functions is now possible. In the past, these
    functions were asynchronous.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以执行 *同步* 函数。在过去，这些函数是异步的。
- en: The new architecture does not have to serialize or deserialize data anymore,
    so there is no serialization tax to pay.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新架构不再需要序列化或反序列化数据，因此不需要支付序列化的成本。
- en: By using C++, it is now possible to abstract all the *platform-agnostic* code
    and to share it easily between platforms.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用 C++，现在可以抽象出所有的 *平台无关* 代码，并且可以轻松地在各个平台之间共享。
- en: A layer of code automatically generated from one or more JavaScript specifications
    is included to ensure JavaScript can invoke C++ methods and vice versa.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含一层由一个或多个 JavaScript 规范自动生成的代码，确保 JavaScript 可以调用 C++ 方法，反之亦然。
- en: Note
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Read more about the new architecture at this link:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此链接可以了解更多关于新架构的信息：
- en: '[https://reactnative.dev/docs/next/the-new-architecture/why](https://reactnative.dev/docs/next/the-new-architecture/why
    )'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://reactnative.dev/docs/next/the-new-architecture/why](https://reactnative.dev/docs/next/the-new-architecture/why)'
- en: 'There’s one more enhancement in the build time: from **React Native 0.71**
    onward, you will be able to consume prebuilt artifacts coming from **Maven Central**,
    which can be consumed from Android. As a result, the new architecture ([https://github.com/reactwg/react-native-new-architecture/discussions/105](https://github.com/reactwg/react-native-new-architecture/discussions/105))
    has seen massive improvements in build time.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 构建时间方面还有一个改进：从 **React Native 0.71** 开始，您将能够使用来自 **Maven Central** 的预构建工件，这些工件可以从
    Android 消耗。因此，新架构 ([https://github.com/reactwg/react-native-new-architecture/discussions/105](https://github.com/reactwg/react-native-new-architecture/discussions/105))
    在构建时间上有了巨大的改进。
- en: Last but not least, **Shopify** ([https://www.shopify.com/](https://www.shopify.com/))
    announced recently that its whole mobile app had been migrated over to React Native.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，**Shopify** ([https://www.shopify.com/](https://www.shopify.com/))
    最近宣布其整个移动应用已迁移至 React Native。
- en: Note
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The following link explains in detail why Shopify did it, how it got there,
    and what the company gained from it: [https://shopify.engineering/migrating-our-largest-Mobile-app-to-React-Native](https://shopify.engineering/migrating-our-largest-Mobile-app-to-React-Native).'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接详细解释了为什么 Shopify 这么做，它是如何做到的，以及公司从中获得了什么：[https://shopify.engineering/migrating-our-largest-Mobile-app-to-React-Native](https://shopify.engineering/migrating-our-largest-Mobile-app-to-React-Native)。
- en: Ionic
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ionic
- en: '**Ionic** offers integrations with major frameworks, including **Angular**,
    **React**, and **Vue**, to provide high-quality, performant mobile apps using
    web technologies. Ionic Framework ([https://ionicframework.com/docs/](https://ionicframework.com/docs/))
    has a complete UI toolkit for building high-quality, performant mobile apps, as
    shown in the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ionic** 提供与主要框架的集成，包括 **Angular**、**React** 和 **Vue**，以便使用 Web 技术提供高质量、高性能的移动应用。Ionic
    框架 ([https://ionicframework.com/docs/](https://ionicframework.com/docs/)) 提供了一整套
    UI 工具包，用于构建高质量、高性能的移动应用，如下图所示：'
- en: '![Figure 2.7 – Ionic Framework](img/Figure_2.07_B18113.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – Ionic 框架](img/Figure_2.07_B18113.jpg)'
- en: Figure 2.7 – Ionic Framework
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – Ionic 框架
- en: For developers who are building mobile apps, the advantage of using Ionic is
    that it offers a wide variety of pre-designed UI components and layouts so that
    they can easily develop apps that are user-friendly and visually appealing. In
    addition, Ionic has an active and large community that offers a variety of plugins
    and resources to extend its functionality in a wide range of ways.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于构建移动应用的开发者来说，使用 Ionic 的优势在于，它提供了各种预设计的 UI 组件和布局，使开发者能够轻松构建用户友好且具有视觉吸引力的应用。此外，Ionic
    拥有一个活跃且庞大的社区，提供了多种插件和资源，可以在广泛的方式中扩展其功能。
- en: A native app for Ionic Framework can be distributed via app stores and run on
    mobile devices as well since Ionic apps are usually deployed as native apps. As
    well as offering tools and services for developing PWAs, which are web applications
    that work offline like native applications and can be installed as native applications
    on a device.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 框架的本地应用可以通过应用商店进行分发，并能在移动设备上运行，因为 Ionic 应用通常作为本地应用进行部署。它还提供用于开发 PWA（渐进式
    Web 应用）的工具和服务，PWA 是像本地应用一样能够离线工作的 Web 应用，并且可以作为本地应用安装到设备上。
- en: 'Ionic has **Capacitor** ([https://capacitorjs.com/](https://capacitorjs.com/)),
    an open source cross-platform app runtime that allows web-based apps to run natively
    on iOS and Android. It’s helpful to refer to these apps as native **PWAs**, as
    they represent the next evolution beyond the traditional hybrid app mentality,
    as shown in *Figure 2**.8*:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 拥有 **Capacitor** ([https://capacitorjs.com/](https://capacitorjs.com/))，一个开源跨平台应用运行时，允许基于
    Web 的应用在 iOS 和 Android 上原生运行。将这些应用称为本地 **PWA**（渐进式 Web 应用）是有帮助的，因为它们代表了超越传统混合应用思维的下一个进化阶段，如
    *图 2.8* 所示：
- en: '![Figure 2.8 – Ionic and Capacitor](img/Figure_2.08_B18113.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – Ionic 和 Capacitor](img/Figure_2.08_B18113.jpg)'
- en: Figure 2.8 – Ionic and Capacitor
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – Ionic 和 Capacitor
- en: For Ionic CI/CD, **Appflow** ([https://ionic.io/appflow](https://ionic.io/appflow))
    allows teams to build apps with hybrid mobile architectures, including Cordova,
    Capacitor, and React Native apps. Don’t worry—in [*Chapter 4*](B18113_04.xhtml#_idTextAnchor118),
    *Achieving Continuous Integration and Delivery with Mobile DevOps*, we will learn
    more about Appflow and how to use it with Ionic apps.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Ionic 的 CI/CD，**Appflow** ([https://ionic.io/appflow](https://ionic.io/appflow))
    允许团队构建具有混合移动架构的应用，包括 Cordova、Capacitor 和 React Native 应用。别担心，在 [*第 4 章*](B18113_04.xhtml#_idTextAnchor118)，*实现移动
    DevOps 的持续集成与交付* 中，我们将学习更多关于 Appflow 的内容以及如何与 Ionic 应用一起使用它。
- en: Cordova
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cordova
- en: The **Cordova** framework ([https://cordova.apache.org/](https://cordova.apache.org/))
    allows you to develop cross-platform applications using standard web technologies
    such as HTML5, CSS3, and JavaScript, as shown in *Figure 2**.9*.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cordova** 框架 ([https://cordova.apache.org/](https://cordova.apache.org/))
    允许你使用标准的 Web 技术（如 HTML5、CSS3 和 JavaScript）开发跨平台应用程序，如 *图 2.9* 所示。'
- en: Note
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'More information can be found at this link:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息可以在这个链接中找到：
- en: '[http://cordova.apache.org/docs/en/11.x/guide/overview/index.html](http://cordova.apache.org/docs/en/11.x/guide/overview/index.html)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://cordova.apache.org/docs/en/11.x/guide/overview/index.html](http://cordova.apache.org/docs/en/11.x/guide/overview/index.html)'
- en: 'Each platform is targeted with its own wrapper, which provides access to sensors,
    data, network status, and so on, using standards-compliant API bindings:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 每个平台都通过其自己的封装器进行目标定位，该封装器提供对传感器、数据、网络状态等的访问，使用符合标准的 API 绑定：
- en: '![Figure 2.9 – Cordova framework](img/Figure_2.09_B18113.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9 – Cordova 框架](img/Figure_2.09_B18113.jpg)'
- en: Figure 2.9 – Cordova framework
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – Cordova 框架
- en: 'Apache Cordova can be used if you want to do the following:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想做以下操作，可以使用 Apache Cordova：
- en: Extend your mobile application across multiple platforms; you don’t have to
    re-implement it with each platform’s language and tools
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的移动应用扩展到多个平台；你不必使用每个平台的语言和工具重新实现它。
- en: Develop an app for distribution in app stores by packaging it for web deployment
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发一个应用程序，并通过打包它进行 web 部署，以便在应用商店中分发。
- en: As part of the Cordova community, a variety of plugins have also been developed
    to extend the features of Cordova apps, such as accessing native device features
    such as the camera, GPS, and accelerometer through Cordova plugins.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Cordova 社区的一部分，已经开发了各种插件来扩展 Cordova 应用程序的功能，例如通过 Cordova 插件访问本地设备功能，如相机、GPS
    和加速度计。
- en: Note
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'At this link, you can find a comparison between Cordova and Capacitor from
    Ionic:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个链接中，你可以找到 Cordova 和 Capacitor 之间的对比：
- en: '[https://ionic.io/enterprise-guide/capacitor-vs-cordova](https://ionic.io/enterprise-guide/capacitor-vs-cordova)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://ionic.io/enterprise-guide/capacitor-vs-cordova](https://ionic.io/enterprise-guide/capacitor-vs-cordova)'
- en: Xamarin
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Xamarin
- en: 'In the **Xamarin** framework ([https://dotnet.microsoft.com/en-us/apps/xamarin](https://dotnet.microsoft.com/en-us/apps/xamarin)),
    developers are able to write code in C# and share it across multiple platforms
    by using platform-specific APIs to access native features and capabilities of
    the platform, as shown in *Figure 2**.10*:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **Xamarin** 框架 ([https://dotnet.microsoft.com/en-us/apps/xamarin](https://dotnet.microsoft.com/en-us/apps/xamarin))
    中，开发者能够用 C# 编写代码，并通过使用特定平台的 API 来访问平台的本地功能和能力，正如 *图 2.10* 所示：
- en: '![Figure 2.10 – Xamarin framework](img/Figure_2.10_B18113.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10 – Xamarin 框架](img/Figure_2.10_B18113.jpg)'
- en: Figure 2.10 – Xamarin framework
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – Xamarin 框架
- en: As a part of its Xamarin.Forms toolkit, Xamarin provides developers with the
    ability to define UI layouts for their apps that can be reused across multiple
    platforms using a single UI toolkit.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Xamarin.Forms 工具包的一部分，Xamarin 为开发者提供了定义其应用程序 UI 布局的能力，这些布局可以在多个平台上重用，使用单一的
    UI 工具包。
- en: Is Xamarin dead or alive?
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Xamarin 是死是活？
- en: Recently, we noticed that Microsoft announced that if you want to build native,
    cross-platform desktop and mobile apps from a single code base, you can use **.****NET
    MAUI**.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我们注意到微软宣布，如果你想从单一代码库构建原生的跨平台桌面和移动应用程序，你可以使用 **.NET MAUI**。
- en: So, we assumed that maybe it is the end of Xamarin, but actually, it is the
    beginning of .NET MAUI.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们曾假设 Xamarin 可能已经结束，但实际上，它是 .NET MAUI 的开始。
- en: As shown in *Figure 2**.11*, .NET MAUI ([https://dotnet.microsoft.com/en-us/apps/maui](https://dotnet.microsoft.com/en-us/apps/maui))
    is designed to replace Xamarin.Forms and provide a more modern, feature-rich,
    and consistent UI toolkit for building mobile apps that run on iOS, Android, and
    Windows platforms.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 2.11* 所示，.NET MAUI ([https://dotnet.microsoft.com/en-us/apps/maui](https://dotnet.microsoft.com/en-us/apps/maui))
    旨在取代 Xamarin.Forms，并为构建可以在 iOS、Android 和 Windows 平台上运行的移动应用程序提供一个更现代、功能更强大且一致的
    UI 工具包。
- en: '.NET MAUI is built on top of .NET 6, but the current version of the framework
    at the time of writing is .NET 7 ([https://dotnet.microsoft.com/en-us/download](https://dotnet.microsoft.com/en-us/download)):'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: .NET MAUI 构建于 .NET 6 之上，但在写作时该框架的当前版本为 .NET 7 ([https://dotnet.microsoft.com/en-us/download](https://dotnet.microsoft.com/en-us/download))：
- en: '![Figure 2.11 – Multiplatform target](img/Figure_2.11_B18113.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11 – 多平台目标](img/Figure_2.11_B18113.jpg)'
- en: Figure 2.11 – Multiplatform target
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – 多平台目标
- en: Note
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To migrate your app from Xamarin with .NET MAUI, visit the following link:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要将你的应用从 Xamarin 迁移到 .NET MAUI，请访问以下链接：
- en: '[https://learn.microsoft.com/en-us/dotnet/maui/get-started/migrate?view=net-maui-7.0](https://learn.microsoft.com/en-us/dotnet/maui/get-started/migrate?view=net-maui-7.0)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://learn.microsoft.com/zh-cn/dotnet/maui/get-started/migrate?view=net-maui-7.0](https://learn.microsoft.com/zh-cn/dotnet/maui/get-started/migrate?view=net-maui-7.0)'
- en: 'Finally, the differences between Xamarin, React Native, Ionic, Cordova, and
    Capacitor are shown in the following screenshot:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Xamarin、React Native、Ionic、Cordova 和 Capacitor 之间的区别如以下截图所示：
- en: '![Figure 2.12 – Xamarin, React Native, Ionic, Cordova, and Capacitor](img/Figure_2.12_B18113.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – Xamarin、React Native、Ionic、Cordova 和 Capacitor](img/Figure_2.12_B18113.jpg)'
- en: Figure 2.12 – Xamarin, React Native, Ionic, Cordova, and Capacitor
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – Xamarin、React Native、Ionic、Cordova 和 Capacitor
- en: As we discussed previously, different frameworks use web technologies such as
    HTML, JavaScript, and CSS in building mobile apps to mimic the experience of native
    apps. Let’s explain the concept behind PWAs.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，不同的框架使用如HTML、JavaScript和CSS等Web技术来构建移动应用，以模拟原生应用的体验。让我们解释一下PWA背后的概念。
- en: PWAs
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PWA
- en: A PWA ([https://web.dev/progressive-web-apps/](https://web.dev/progressive-web-apps/))
    is a web application that is designed to mimic the experience of native apps.
    In addition to the fact that they can work on any device, regardless of whether
    it supports modern web standards, they are also referred to as *progressive* because
    they become more powerful as the device on which they are running becomes more
    powerful.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: PWA（[https://web.dev/progressive-web-apps/](https://web.dev/progressive-web-apps/)）是一种旨在模拟原生应用体验的网页应用。除了它们可以在任何设备上运行，无论该设备是否支持现代网页标准外，它们还被称为*渐进式*，因为随着运行它们的设备变得更强大，它们也变得更强大。
- en: 'PWAs are accessed through a web browser by using web technologies such as HTML,
    CSS, and JavaScript. Users can also install them on their devices and use them
    as native apps with features such as offline support, push notifications, and
    access to hardware such as cameras and microphones, as shown in *Figure 2**.13*:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: PWA通过使用HTML、CSS和JavaScript等Web技术通过网络浏览器访问。用户还可以将它们安装到设备上，并像使用原生应用一样使用它们，享受离线支持、推送通知、访问硬件（如摄像头和麦克风）等功能，如*图
    2.13*所示：
- en: '![Figure 2.13 – PWAs](img/Figure_2.13_B18113.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13 – PWA](img/Figure_2.13_B18113.jpg)'
- en: Figure 2.13 – PWAs
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – PWA
- en: Among the main advantages of PWAs is that they are *easy to distribute and install*
    because they *do not require* an app store to download. This allows users to use
    the app more easily, and it also allows for faster updates and more flexibility
    when it comes to design and functionality.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: PWA的主要优点之一是它们*易于分发和安装*，因为它们*不需要*应用商店下载。这使得用户可以更轻松地使用应用程序，也使得更新速度更快，在设计和功能方面更具灵活性。
- en: In addition to offering many of the same benefits as native apps, PWAs can be
    easily accessed through a web browser, which makes them increasingly popular for
    building mobile apps. In cases where businesses or organizations want to provide
    their users with a mobile app experience but cannot afford to build and maintain
    separate native apps for different platforms, they can use them.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供与原生应用相同的许多优点外，PWA（渐进式网页应用）还可以通过网络浏览器轻松访问，这使得它们在构建移动应用时越来越受欢迎。在一些情况下，当企业或组织希望为用户提供移动应用体验，但又无法为不同平台构建和维护独立的原生应用时，它们可以使用PWA。
- en: 'Here are a few examples of popular PWAs:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些流行的PWA示例：
- en: '**Twitter Lite**: This is an extremely lightweight version of the Twitter app
    that can be accessed directly from any device with a web browser'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Twitter Lite**：这是Twitter应用的极简版本，可以直接从任何具有网络浏览器的设备访问'
- en: '**Starbucks**: This lets users order, pay, and track purchases from their mobile
    devices using the Starbucks PWA'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Starbucks（星巴克）**：用户可以通过星巴克PWA从移动设备上进行订购、支付和跟踪购买'
- en: '**Trivago**: This lets users search for hotels and book them, as well as access
    their past bookings'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Trivago**：用户可以搜索并预订酒店，还可以访问他们的历史预订'
- en: Note
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Since there are a lot of books, articles, or videos talking about cross-platform
    frameworks, I will not waste your time by comparing them, but I would recommend
    choosing a framework based on the nature of the application, the business, the
    goal, and the target audience, as well as the skill level of the team.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有很多关于跨平台框架的书籍、文章或视频，我不会浪费你的时间进行比较，但我建议根据应用的性质、业务需求、目标和目标受众，以及团队的技能水平来选择框架。
- en: Now we have briefly explored the different mobile app OSs, frameworks, and platforms,
    let’s look at the most valuable features of mobile apps.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们简要地探讨了不同的移动应用操作系统、框架和平台，让我们来看一看移动应用最有价值的功能。
- en: Mobile apps’ most valuable features
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用的最有价值功能
- en: There are numerous valuable features included in mobile apps that cater to the
    diverse needs and preferences of users. Some of the most useful features are described
    next.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用中包含了众多有价值的功能，满足了用户多样化的需求和偏好。接下来将描述一些最有用的功能。
- en: Large screens and foldable devices
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大屏幕和可折叠设备
- en: In order to make your app work well on a larger screen and foldable devices,
    you’ll need to make sure it’s optimized to work on different screen sizes. This
    might mean redesigning your layout to make the most of the extra screen space
    or setting your app to work on both portrait and landscape screens.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的应用在大屏幕和可折叠设备上正常工作，你需要确保它针对不同的屏幕尺寸进行了优化。这可能意味着重新设计布局，以充分利用额外的屏幕空间，或将应用设置为支持纵向和横向屏幕。
- en: 'Foldables offer new ways for users to interact with their devices, such as
    being able to use them in **folded** or **unfolded** modes. As shown in *Figure
    2**.14*, when a foldable device is folded, it can affect the way your app is displayed
    and used. Make sure you consider this when designing your app, and test to ensure
    it works smoothly when the device is folded and unfolded:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 可折叠设备为用户与设备互动提供了新的方式，例如可以在**折叠**或**展开**模式下使用。如图*2.14*所示，当可折叠设备处于折叠状态时，它可能会影响应用的显示和使用方式。在设计应用时，确保考虑到这一点，并进行测试，确保设备在折叠和展开时都能平稳运行。
- en: '![Figure 2.14 – Foldable device](img/Figure_2.14_B18113.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.14 – 可折叠设备](img/Figure_2.14_B18113.jpg)'
- en: Figure 2.14 – Foldable device
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 可折叠设备
- en: To ensure that your app looks good and works well on large screens and foldable
    devices, follow the design guidelines for the platform on which you are developing,
    such as Android ([https://developer.android.com/guide/topics/large-screens/get-started-with-large-screens](https://developer.android.com/guide/topics/large-screens/get-started-with-large-screens)).
    Providing a consistent user experience will help your app feel cohesive with the
    rest of the operating system. You may also need to invest in some additional hardware
    for the best results.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的应用在大屏幕和可折叠设备上看起来既好又能正常运行，请遵循你正在开发的平台的设计指南，例如 Android ([https://developer.android.com/guide/topics/large-screens/get-started-with-large-screens](https://developer.android.com/guide/topics/large-screens/get-started-with-large-screens))。提供一致的用户体验将有助于你的应用与操作系统的其他部分保持一致。你还可能需要投资一些额外的硬件以获得最佳效果。
- en: In addition, developers must ensure their apps are *compatible with older devices
    without foldable screens*, even though foldable mobile devices are a relatively
    new technology. In order to ensure that an app works correctly on all devices,
    we need to develop and test different versions of the app. In this case, test
    automation can assist with achieving this goal.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，开发者还必须确保他们的应用*与没有可折叠屏幕的旧设备兼容*，尽管可折叠移动设备是一项相对较新的技术。为了确保应用在所有设备上正常工作，我们需要开发并测试应用的不同版本。在这种情况下，测试自动化可以帮助实现这一目标。
- en: Due to this, QA engineers will need to ensure that apps and automated tests
    will help them achieve this goal when testing apps on large screens and foldable
    devices. The challenge can be overcome by using screenshot testing or an **artificial
    intelligence** (**AI**) testing tool that detects UI screens and compares them.
    In [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App Testing Strategy*, we will cover testing practices for large screens and foldable
    devices.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，QA 工程师需要确保应用和自动化测试能够帮助他们在测试大屏幕和可折叠设备上的应用时实现这一目标。这个挑战可以通过使用截图测试或**人工智能**（**AI**）测试工具来解决，该工具能够检测
    UI 屏幕并进行对比。在[*第 5 章*](B18113_05.xhtml#_idTextAnchor138)《实现强大的移动应用测试策略》中，我们将讨论大屏幕和可折叠设备的测试实践。
- en: Deep links
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深度链接
- en: In mobile apps, **deep links** are links that allow users to access specific
    content or functions within an app by clicking on a link within the app, rather
    than having to navigate the app manually to reach the relevant content.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用中，**深度链接**是允许用户通过点击应用内的链接直接访问应用中特定内容或功能的链接，而不需要手动导航到相关内容。
- en: There are a number of ways in which deep links can be used to promote content
    within an app or allow users to access specific features or functions within an
    app. They can be included in email campaigns, social media posts, or other types
    of marketing material to encourage users to engage with the app.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 深度链接有多种方式可以用于推广应用内的内容，或者让用户快速访问应用内的特定功能或特性。它们可以被包含在电子邮件营销、社交媒体帖子或其他类型的营销材料中，鼓励用户与应用互动。
- en: 'In addition to improving the user experience, deep links can be used to direct
    users to content or functions that they wish to access quickly and easily. A deep
    link may, for example, be used to direct users to a specific product page within
    an e-commerce app or to a specific screen within a game, as shown in *Figure 2**.15*:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 除了改善用户体验，深度链接还可以用于将用户引导到他们希望快速且轻松访问的内容或功能。例如，深度链接可以用于将用户引导到电子商务应用中的特定产品页面，或游戏中的特定界面，如*图
    2.15*所示：
- en: '![Figure 2.15 – How deep links work](img/Figure_2.15_B18113.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.15 – 深度链接的工作原理](img/Figure_2.15_B18113.jpg)'
- en: Figure 2.15 – How deep links work
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 深度链接的工作原理
- en: It is important to note that in order to use deep links, the app must be installed
    on the user’s device. If the app is not installed, the deep link will normally
    redirect the user to the app store to download the app.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，要使用深度链接，应用必须已安装在用户的设备上。如果应用未安装，深度链接通常会将用户重定向到应用商店下载该应用。
- en: Another challenge for developers and QA engineers is how to test deep links,
    which will be discussed in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing
    a Robust Mobile App* *Testing Strategy*.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 对开发人员和QA工程师来说，另一个挑战是如何测试深度链接，这将在[*第5章*](B18113_05.xhtml#_idTextAnchor138)《实施健壮的移动应用测试策略》中讨论。
- en: Fragmentation
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 碎片化
- en: It is common for iOS and Android apps to fragment across devices and operating
    systems. It is essential to test mobile applications more frequently due to OS
    upgrades and the release of new devices. The fragmentation of devices and hardware-related
    bugs on Android and iOS are common problems.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: iOS和Android应用在设备和操作系统上出现碎片化是常见现象。由于操作系统的升级和新设备的发布，更频繁地测试移动应用显得尤为重要。Android和iOS设备的碎片化以及与硬件相关的错误是常见问题。
- en: 'The manufacturer of the device, the screen size, the connection type, the battery
    life, the resolution, and the version of the operating system may differ, as shown
    in *Figure 2**.16*:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 设备的制造商、屏幕尺寸、连接类型、电池寿命、分辨率和操作系统版本可能会有所不同，如*图 2.16*所示：
- en: '![Figure 2.16 – Devices and OS fragmentation](img/Figure_2.16_B18113.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.16 – 设备和操作系统碎片化](img/Figure_2.16_B18113.jpg)'
- en: Figure 2.16 – Devices and OS fragmentation
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – 设备和操作系统碎片化
- en: For developers, it can be challenging to develop and maintain applications that
    work across all devices and operating systems as fragmentation can make it hard
    for them to create and maintain them. For instance, an app that works perfectly
    on one device might have performance issues or display problems on another device
    with a different configuration.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 对开发人员来说，开发和维护跨所有设备和操作系统的应用可能是一项挑战，因为设备碎片化可能让他们在创建和维护应用时遇到困难。例如，一款在某设备上运行完美的应用，可能在另一款配置不同的设备上出现性能问题或显示故障。
- en: It is highly important that the teams test their mobile apps early and frequently
    on different devices and OS versions to increase the test coverage and ensure
    that our mobile apps behave correctly.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 团队需要在不同设备和操作系统版本上尽早并频繁地测试他们的移动应用，以增加测试覆盖率并确保我们的移动应用表现正确，这一点非常重要。
- en: In addition to fragmentation, businesses may lose potential customers and revenue
    due to unsupported devices and operating systems.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 除了碎片化问题，企业可能由于不支持的设备和操作系统而失去潜在客户和收入。
- en: In this case, you can use cloud device services to set up different devices
    and OS versions to ensure that you are supporting the desired devices. We will
    examine together the different types of device labs available on the market in
    [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App* *Testing Strategy*.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你可以使用云设备服务来设置不同的设备和操作系统版本，确保支持所需的设备。我们将在[*第5章*](B18113_05.xhtml#_idTextAnchor138)《实施健壮的移动应用测试策略》中一起探讨市场上不同类型的设备实验室。
- en: Localization
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地化
- en: A mobile app’s **localization** refers to the process of adapting it to a specific
    language or culture, as shown in *Figure 2**.17*. Among the tasks involved are
    translating the text and interface of the app, adapting images and graphics to
    meet different cultural conventions, and adjusting the app’s functionality to
    meet local requirements.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用的**本地化**是指将其适配为特定语言或文化的过程，如*图 2.17*所示。相关任务包括翻译应用的文本和界面，调整图片和图形以符合不同的文化习惯，并根据当地需求调整应用的功能。
- en: 'It is important to localize mobile apps for different reasons, as explained
    here:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 本地化移动应用非常重要，原因如下：
- en: It helps to reach a wider audience, which can help you expand your user base
    and reach a wider audience
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有助于覆盖更广泛的用户群体，从而帮助你扩大用户基础，接触更多的受众。
- en: 'It improves the user experience for users who are not fluent in the language
    of the app, as well as improving the experience of users who are fluent in the
    app’s language. By providing content in the native language of the app, users
    can feel more connected to the app as they can receive content that pertains to
    their culture and language:'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它改善了不精通应用语言的用户体验，同时也改善了精通应用语言的用户体验。通过提供应用本地语言的内容，用户可以更好地与应用产生联系，因为他们可以接收与自己文化和语言相关的内容。
- en: '![Figure 2.17 – Localization](img/Figure_2.17_B18113.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.17 – 本地化](img/Figure_2.17_B18113.jpg)'
- en: Figure 2.17 – Localization
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17 – 本地化
- en: To localize a mobile app, several factors need to be taken into consideration,
    including the languages and cultures that you intend to target, the resources
    and budget that you have available, and technical challenges that may arise during
    localization.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 要本地化移动应用，需要考虑几个因素，包括你打算针对的语言和文化、可用的资源和预算，以及在本地化过程中可能遇到的技术挑战。
- en: Additionally, you will need to think about the possibility of maintaining and
    updating the localized versions of your application over time, as languages and
    cultures can change and evolve. [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App Testing Strategy*, discusses how to test mobile
    apps for localization using screenshots and other methods.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还需要考虑随着时间的推移，如何维护和更新本地化版本的应用程序，因为语言和文化会不断变化和演变。[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施强健的移动应用测试策略*，讨论了如何通过屏幕截图和其他方法测试移动应用的本地化。
- en: Accessibility
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可访问性
- en: 'In mobile apps, **accessibility** refers to the development and design of apps
    that are accessible to people with disabilities, such as vision or hearing impairments,
    as shown in *Figure 2**.18*. You must ensure that your mobile app is accessible
    because it will allow a wider audience to use and benefit from it, as well as
    improve the user experience for everyone:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用中，**可访问性**是指开发和设计能让残疾人士（如视力或听力障碍者）使用的应用程序，如*图 2.18*所示。你必须确保你的移动应用具有可访问性，因为这将使更广泛的用户群体能够使用并从中受益，同时提升所有用户的体验。
- en: '![Figure 2.18 – Accessibility](img/Figure_2.18_B18113.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.18 – 可访问性](img/Figure_2.18_B18113.jpg)'
- en: Figure 2.18 – Accessibility
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.18 – 可访问性
- en: 'Mobile apps can be made accessible in several ways, such as the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用可以通过以下几种方式实现可访问性：
- en: For users with vision impairments, it is especially important to make sure that
    the *text is properly formatted and that there is enough contrast between the
    text and* *the background*.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于有视力障碍的用户，确保*文本格式正确，且文本与背景之间有足够的对比度*尤其重要。
- en: To ensure that users with vision impairments can understand the content, provide
    *alternative text for images, videos, and* *other media*.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了确保有视力障碍的用户能够理解内容，请为图像、视频及*其他媒体*提供*替代文本*。
- en: Users with hearing impairments may benefit from *captions and transcripts for
    audio and* *video content*.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有听力障碍的用户可能会从*音频和视频内容的字幕和文字记录*中受益。
- en: '*Language should be clear and concise*. Avoid jargon or technical terms that
    may be confusing to some users.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*语言应该清晰简洁*。避免使用可能令某些用户困惑的行话或技术术语。'
- en: '*Follow accessibility guidelines* and best practices.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*遵循可访问性指南*和最佳实践。'
- en: '*Test it with assistive technologies*, such as screen readers or text-to-speech
    software. In [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a
    Robust Mobile App Testing Strategy*, we will discuss this point in greater detail.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用辅助技术进行测试*，如屏幕阅读器或文本转语音软件。在[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施强健的移动应用测试策略*中，我们将更详细地讨论这一点。'
- en: By implementing these and other accessibility measures, you can ensure that
    your mobile app is accessible to a wider audience and improve the user experience
    for all users.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实施这些和其他可访问性措施，您可以确保您的移动应用对更广泛的用户群体可用，并改善所有用户的体验。
- en: Push notifications
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推送通知
- en: A **push notification** is a message sent from a server to a mobile device informing
    the user of new content, transactions, events, or updates.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**推送通知**是一种从服务器发送到移动设备的消息，通知用户有关新内容、交易、事件或更新的信息。'
- en: 'Users can receive push notifications when new emails arrive, tasks are completed,
    or new features are available. Push notifications can be used to promote products
    and services or to encourage users to use an app, as shown in the following screenshot:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以在收到新邮件、任务完成或新功能可用时接收推送通知。推送通知也可以用于推广产品和服务，或鼓励用户使用应用，正如以下截图所示：
- en: '![Figure 2.19 – Push notifications](img/Figure_2.19_B18113.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图2.19 – 推送通知](img/Figure_2.19_B18113.jpg)'
- en: Figure 2.19 – Push notifications
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.19 – 推送通知
- en: Push notifications can only be received if users opt for and grant permission
    to the app to send them. In most cases, this can be done in the app’s settings
    or the operating system’s settings.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 只有用户选择并授权应用发送推送通知时，才能接收到推送通知。通常，用户可以在应用设置或操作系统的设置中进行授权。
- en: Users are notified with push notifications even when the app isn’t running,
    which makes them a useful tool for engaging with it. It should not, however, be
    overused and should not be used excessively, as excessive notifications can be
    irritating and may result in users disabling them or uninstalling the app. Testing
    push notifications is challenging, but we will cover it in [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138),
    *Implementing a Robust Mobile App* *Testing Strategy*.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 即使应用没有运行，用户也会通过推送通知收到提醒，这使得推送通知成为与用户互动的有用工具。然而，不应过度使用推送通知，因为过多的通知可能会让用户感到烦扰，甚至可能导致用户禁用通知或卸载应用。推送通知的测试具有挑战性，但我们将在[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施强大的移动应用测试策略*中讨论这一点。
- en: Offline capability
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离线功能
- en: 'The need for **offline functionality** in mobile apps is often the greatest.
    In addition to the fact that apps must function regardless of whether a user has
    a network connection, some applications, such as fieldwork apps, can be used in
    places where network connectivity is weak or nonexistent, as shown in the following
    screenshot:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用中，对**离线功能**的需求通常是最大的。除了应用必须在用户是否有网络连接的情况下都能正常工作外，一些应用（如外勤工作应用）还可以在网络连接较差或完全没有网络的地方使用，正如以下截图所示：
- en: '![Figure 2.20 – Offline-enabled functionality](img/Figure_2.20_B18113.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图2.20 – 启用离线功能](img/Figure_2.20_B18113.jpg)'
- en: Figure 2.20 – Offline-enabled functionality
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20 – 启用离线功能
- en: When internet connectivity is unreliable or unavailable, or users do not want
    to incur data charges, this app is designed to function even without an internet
    connection.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 当互联网连接不可靠或无法使用，或者用户不想产生数据费用时，此应用设计为即使没有互联网连接也能正常工作。
- en: 'The following strategies can be used by developers to enable offline functionality
    in mobile apps:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以通过以下策略在移动应用中启用离线功能：
- en: A mobile app can *cache data locally on the device*, such as images or text,
    and access these cached files when the device is offline, enabling users to access
    certain features of the app without connecting to the internet.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动应用可以*在设备上本地缓存数据*，例如图片或文本，并在设备离线时访问这些缓存文件，从而使用户在没有互联网连接的情况下仍能使用应用的某些功能。
- en: Apps can *synchronize data between devices and servers* when an internet connection
    is available, enabling users to access up-to-date information whenever they are
    online.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当互联网连接可用时，应用可以*在设备与服务器之间同步数据*，使用户能够随时在线访问最新信息。
- en: The devices can be used as local storage such as *SQLite* devices when apps
    are installed to store data and access it while offline.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备可以作为本地存储使用，例如*SQLite*设备，当应用安装时存储数据，并在离线时访问这些数据。
- en: The content may be rendered on the server and cached on the device using server-side
    rendering. In some cases, it may be possible for the app to render certain content
    on the server and cache it on the device so that it can display this content even
    when the device is offline.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容可能会在服务器上渲染，并通过服务器端渲染缓存到设备上。在某些情况下，应用可能会在服务器上渲染某些内容，并将其缓存到设备上，以便在设备离线时仍然能够显示这些内容。
- en: It is also challenging to test connectivity because you must use real devices
    in order to test a variety of connectivity types and conditions, which require
    a test lab and a good test design. Don’t worry—this is discussed in detail in
    [*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App* *Testing Strategy*.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 测试连接性也是一个挑战，因为你必须使用真实设备来测试各种连接类型和条件，这需要测试实验室和良好的测试设计。别担心——在[*第5章*](B18113_05.xhtml#_idTextAnchor138)中，*实施稳健的移动应用测试策略*会详细讨论这一问题。
- en: Monetization
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盈利
- en: The goal of **monetization** is to generate revenue for the app developer while
    providing value to the user. Monetization strategies vary depending on the app
    and its audience and may involve a combination of different methods.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**盈利**的目标是为应用开发者创造收入，同时为用户提供价值。盈利策略根据应用和其受众的不同而有所不同，可能涉及多种不同方法的组合。'
- en: 'In-app purchases are a type of feature that allows users to purchase additional
    content or features within a mobile application. These purchases are made directly
    from within the app and are typically processed through the user’s app store account,
    as shown in the following screenshot:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 应用内购买是一种功能，允许用户在移动应用内购买额外的内容或功能。这些购买通常通过用户的应用商店账户直接在应用内完成，如下图所示：
- en: '![Figure 2.21 – Monetization](img/Figure_2.21_B18113.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图2.21 – 盈利](img/Figure_2.21_B18113.jpg)'
- en: Figure 2.21 – Monetization
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21 – 盈利
- en: It is possible to make in-app purchases using a variety of payment methods,
    such as credit cards, PayPal, or mobile payment services such as Apple Pay. Developers
    can set the price for in-app purchases, and they can be one-time purchases or
    subscriptions.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多种支付方式（如信用卡、PayPal 或 Apple Pay 等移动支付服务）可以进行应用内购买。开发者可以设置应用内购买的价格，这些购买可以是一次性购买，也可以是订阅。
- en: '[*Chapter 5*](B18113_05.xhtml#_idTextAnchor138), *Implementing a Robust Mobile
    App Testing Strategy*, will discuss how to test in-app purchases for both Android
    and iOS devices and what you need to do in order to do so.'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B18113_05.xhtml#_idTextAnchor138)，*实施稳健的移动应用测试策略*，将讨论如何测试Android和iOS设备的应用内购买，并介绍实现这一目标所需做的事情。'
- en: Modularization
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模块化
- en: In mobile apps, **modularization** refers to the *division of an app into smaller,
    independent modules or components*. The code can be more easily reused in other
    parts of the app or future projects, saving time and effort.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用中，**模块化**是指将应用*划分为更小、更独立的模块或组件*。代码可以更容易地在应用的其他部分或未来的项目中复用，从而节省时间和精力。
- en: The modularization process can also help to *increase an app’s performance*
    by allowing you to load only the modules you need at a given time, as opposed
    to loading the entire app in one go. As a result, you can make changes to one
    module without affecting the rest of the application, making it easier to maintain
    and update the app over time.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 模块化过程还可以通过让你仅加载需要的模块，而不是一次性加载整个应用，从而*提高应用的性能*。因此，你可以在不影响其他部分的情况下修改某个模块，使得应用的维护和更新变得更加容易。
- en: 'The interaction between the different modules can then be managed by using
    techniques such as **dependency injection** (**DI**) or **inversion of control**
    (**IoC**), as shown in the following screenshot:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 各个模块之间的交互可以通过使用如**依赖注入**（**DI**）或**控制反转**（**IoC**）等技术来管理，如下图所示：
- en: '![Figure 2.22 – Modularized app architecture](img/Figure_2.22_B18113.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图2.22 – 模块化的应用架构](img/Figure_2.22_B18113.jpg)'
- en: Figure 2.22 – Modularized app architecture
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.22 – 模块化的应用架构
- en: 'Mobile app development can benefit from modular architecture in several ways:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用开发可以通过模块化架构带来多种好处：
- en: '*The ability to reuse modules* across different parts of the app or across
    different apps reduces the need to write new code and speeds up development'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*跨不同部分或不同应用重用模块的能力*减少了编写新代码的需求，加快了开发进度。'
- en: Modular architecture *simplifies the maintenance and updating of applications*
    because changes can be made to individual modules without affecting the entire
    application.
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块化架构*简化了应用的维护和更新*，因为可以在不影响整个应用的情况下对单个模块进行更改。
- en: By adding new modules or modifying existing ones, the *modular architecture
    enables the app to scale as it grows* *and evolves*.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加新模块或修改现有模块，*模块化架构使应用能够在成长和发展过程中进行扩展*。
- en: It is easier to test an app with a modular architecture because *each module
    can be tested separately, reducing the risk of errors* *or bugs*
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模块化架构更容易测试应用程序，因为*每个模块可以单独测试，从而减少错误* *或 bug* 的风险
- en: Note
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more information, you can visit the following link—for instance, to view
    how to modularize the Android app: [https://developer.android.com/topic/modularization](https://developer.android.com/topic/modularization).'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，您可以访问以下链接—例如，查看如何将 Android 应用进行模块化：[https://developer.android.com/topic/modularization](https://developer.android.com/topic/modularization)。
- en: Performance optimization
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能优化
- en: As users expect mobile apps to be responsive and fast, **performance** is an
    important consideration.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 由于用户期望移动应用响应迅速且快速，**性能**是一个重要的考虑因素。
- en: 'It is important to test applications on a variety of devices and networks to
    ensure that it is performing well under real-world conditions. There are various
    mobile performance optimization tools and libraries, such as **Flipper** ([https://github.com/facebook/flipper](https://github.com/facebook/flipper)),
    which can be used for the same. Additionally, there are different practices we
    can use to optimize mobile apps’ performance, such as the following:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在多种设备和网络上测试应用程序很重要，以确保它在真实世界条件下表现良好。各种移动性能优化工具和库（如**Flipper**，[https://github.com/facebook/flipper](https://github.com/facebook/flipper)）可以用于此目的。此外，我们可以使用不同的实践来优化移动应用性能，如下所示：
- en: '**Caching** reduces the number of network requests made by an app and improves
    its overall performance'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存**减少了应用程序发出的网络请求次数，并提高了其整体性能'
- en: Write clean, efficient code to minimize resource usage and reduce the app’s
    load time
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写干净、高效的代码，以最小化资源使用并减少应用程序的加载时间
- en: Using **profiling tools** can reveal any bottlenecks or problems with an app
    and provide detailed information about how it is performing
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**性能分析工具**可以揭示应用程序的瓶颈或问题，并提供有关其性能的详细信息
- en: Using smaller, more optimized versions of images and videos in the app will
    *minimize the use* *of resources*
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用较小的、更优化版本的图像和视频可以*最小化资源的使用*
- en: You can identify and diagnose performance issues in an application with the
    help of a **performance** **monitoring tool**
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过**性能**监控工具来识别和诊断应用程序中的性能问题
- en: If you *reduce the app’s size*, its download and installation times will be
    faster
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您*减小应用程序的大小*，其下载和安装时间将更快
- en: It will be discussed in the next chapters how caching can be used to improve
    the build process of an application, particularly in the CI/CD pipeline, and how
    tools can be used to reduce the size and performance of the app.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将讨论如何使用缓存来改善应用程序的构建过程，尤其是在 CI/CD 流水线中，如何使用工具来减少应用程序的大小和提高性能。
- en: As we discussed that modularization refers to the division of an app into smaller,
    independent modules or components, it’s important to know the mobile app architecture
    and what are the considerations and factors to design a good mobile app.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所讨论的，模块化是指将应用程序分成更小的、独立的模块或组件，了解移动应用架构及其设计良好的考虑因素是非常重要的。
- en: Mobile app architecture
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用架构
- en: 'It is the architecture of a mobile app that describes how the app is designed
    and structured, as shown in the following screenshot. It includes all the components
    and the relationships between them, as well as the design patterns and frameworks
    that have been selected for development:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用架构描述了应用程序的设计和结构，如下图所示。它包括所有组件及其之间的关系，以及为开发所选的设计模式和框架：
- en: '![Figure 2.23 – Example of architecting a shopping app](img/Figure_2.23_B18113.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.23 – 购物应用架构示例](img/Figure_2.23_B18113.jpg)'
- en: Figure 2.23 – Example of architecting a shopping app
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.23 – 购物应用架构示例
- en: 'Designing the architecture of a mobile app requires consideration of several
    factors, including the following:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 设计移动应用架构需要考虑多个因素，包括以下几点：
- en: The architecture will be influenced by the platform the app is developed and
    runs on (for example, iOS; Android)
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构将受到应用程序开发和运行平台的影响（例如，iOS；Android）
- en: Components and design patterns will be determined by the functionality of the
    app
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件和设计模式将由应用程序的功能决定
- en: A well-designed architecture should consider the app’s performance when designing
    the architecture
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个设计良好的架构应在设计时考虑应用程序的性能
- en: A scalable architecture is important as the app grows in popularity and usage
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展架构对于应用程序随着人气和使用量的增长非常重要
- en: 'A list of a few best practices for mobile app architecture is provided here:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提供了一些移动应用架构的最佳实践：
- en: Design your app so that it can be easily updated or replaced by dividing it
    into smaller, independent modules.
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计你的应用，使其可以通过将其划分为更小的独立模块，轻松进行更新或替换。
- en: Make your code base easy to read and maintain by using clear naming conventions
    and following established coding standards.
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用清晰的命名约定和遵循已建立的编码标准，使你的代码库更易于阅读和维护。
- en: Consider using a **minimum viable product** approach. Start with the minimum
    set of features that your users will find valuable and iterate as needed.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑使用**最小可行产品**方法。从用户认为有价值的最小功能集开始，根据需要进行迭代。
- en: Make sure your app is scalable, and make sure it can handle large data volumes
    and multiple users without slowing down.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你的应用可扩展，能够处理大量数据和多个用户而不导致性能下降。
- en: 'Adapt your design to new technology and features: use an architecture that
    is flexible and adaptable. There are a variety of architectures available for
    mobile development based on the platform, such as the following:'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据新技术和新特性调整你的设计：使用一种灵活且可适应的架构。根据平台，有多种架构可供移动开发使用，例如以下几种：
- en: '**Model-View-Controller** (**MVC**) ([https://shorturl.at/bjuO0](https://shorturl.at/bjuO0))'
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型-视图-控制器** (**MVC**) ([https://shorturl.at/bjuO0](https://shorturl.at/bjuO0))'
- en: '**Model-View-Presenter** (**MVP**) ([https://shorturl.at/hkHWX](https://shorturl.at/hkHWX))'
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型-视图-呈现器** (**MVP**) ([https://shorturl.at/hkHWX](https://shorturl.at/hkHWX))'
- en: '**Model-View-ViewModel** (**MVVM**) ([https://shorturl.at/fptP2](https://shorturl.at/fptP2))'
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型-视图-视图模型** (**MVVM**) ([https://shorturl.at/fptP2](https://shorturl.at/fptP2))'
- en: '**View-Interactor-Presenter-Entity-Routing** (**VIPER**) ([https://www.objc.io/issues/13-architecture/viper/](https://www.objc.io/issues/13-architecture/viper/))'
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图-交互器-呈现器-实体-路由** (**VIPER**) ([https://www.objc.io/issues/13-architecture/viper/](https://www.objc.io/issues/13-architecture/viper/))'
- en: '**View - Interactor - Presenter** (**VIP**) ([https://github.com/thetay55/VIP-Architecture/blob/master/VIP_Architecture.md](https://github.com/thetay55/VIP-Architecture/blob/master/VIP_Architecture.md))'
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图 - 交互器 - 呈现器** (**VIP**) ([https://github.com/thetay55/VIP-Architecture/blob/master/VIP_Architecture.md](https://github.com/thetay55/VIP-Architecture/blob/master/VIP_Architecture.md))'
- en: '**Composable** ([https://github.com/pointfreeco/swift-composable-architecture](https://github.com/pointfreeco/swift-composable-architecture))'
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可组合** ([https://github.com/pointfreeco/swift-composable-architecture](https://github.com/pointfreeco/swift-composable-architecture))'
- en: '**Redux** ([https://www.kodeco.com/books/advanced-ios-app-architecture/v3.0/chapters/6-architecture-redux](https://www.kodeco.com/books/advanced-ios-app-architecture/v3.0/chapters/6-architecture-redux))'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redux** ([https://www.kodeco.com/books/advanced-ios-app-architecture/v3.0/chapters/6-architecture-redux](https://www.kodeco.com/books/advanced-ios-app-architecture/v3.0/chapters/6-architecture-redux))'
- en: Make sure your app is reliable by using automated testing and continuous integration.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用自动化测试和持续集成，确保你的应用程序是可靠的。
- en: Create a maintainable architecture with design patterns and practices that make
    updating and maintaining the app easier.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个可维护的架构，采用设计模式和实践，使得应用的更新和维护更加便捷。
- en: Make your app more flexible and testable by using DI.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用依赖注入（DI）使你的应用更具灵活性和可测试性。
- en: Ensure that the networking layer between your backend and your frontend is robust
    and efficient.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你的后台和前端之间的网络层是稳健且高效的。
- en: Ensure that your app data is stored in an efficient and reliable database.
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你的应用数据存储在高效且可靠的数据库中。
- en: Improve the user experience by implementing a robust error-handling mechanism.
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过实现强大的错误处理机制来改善用户体验。
- en: Troubleshooting and debugging can be made easier with the help of powerful logging
    mechanisms.
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用强大的日志机制可以使故障排除和调试变得更加容易。
- en: In order to provide their customers with a better user experience, mobile app
    developers should adhere to these practices to make their apps perform better
    and deliver a better user experience.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为客户提供更好的用户体验，移动应用开发者应遵循这些实践，使其应用性能更好，提供更佳的用户体验。
- en: Summary
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As we embark on this journey together, exploring the intricate world of mobile
    platforms, frameworks, and unique functions of mobile devices, it becomes increasingly
    apparent that these present a multitude of challenges for those in the field of
    mobile development, including developers, QA engineers, release engineers, and
    others. The complex and constantly evolving nature of these platforms and technologies
    demands that we stay vigilant and proactive in our approach, consistently seeking
    new and innovative solutions to overcome obstacles that stand in our way.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们一起踏上这段旅程，探索移动平台、框架以及移动设备独特功能的复杂世界时，我们越来越明显地发现，这些为从事移动开发的人员，包括开发者、QA工程师、发布工程师等，带来了许多挑战。这些平台和技术复杂且不断演变，要求我们保持警觉和积极主动的态度，持续寻求创新解决方案，克服我们面前的障碍。
- en: One way in which we can tackle these challenges is by utilizing automation to
    streamline and enhance the mobile app development process. Whether it be through
    building, testing, releasing, or monitoring, automation offers a multitude of
    benefits that can greatly assist us in producing high-quality, reliable, and efficient
    mobile applications.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应对这些挑战的一种方法是通过利用自动化来简化和增强移动应用开发过程。无论是在构建、测试、发布还是监控方面，自动化都提供了诸多好处，可以极大地帮助我们高效地开发高质量、可靠的移动应用。
- en: With a thorough understanding of these various mobile platforms, frameworks,
    and functions, we can confidently approach challenges that lie ahead, utilizing
    automation as a powerful tool in our quest to create great mobile apps. So, let
    us continue our exploration and discovery, embracing obstacles and opportunities
    that come our way, and always striving to push the boundaries of what is possible
    in the ever-evolving world of mobile development.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 通过全面了解这些不同的移动平台、框架和功能，我们可以自信地应对前方的挑战，利用自动化作为强大的工具，在我们创造优秀移动应用的过程中不断前行。因此，让我们继续探索和发现，拥抱我们面前的障碍和机会，始终努力突破移动开发领域不断变化的可能性边界。
- en: Our next chapter will be about the fundamentals of Mobile DevOps and how the
    practical steps for implementing it will begin in the following chapters.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一章将讨论Mobile DevOps的基础知识，以及如何在接下来的章节中开始实施的实际步骤。
