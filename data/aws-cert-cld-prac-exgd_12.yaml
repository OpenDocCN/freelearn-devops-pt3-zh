- en: '[*Chapter 10*](B17124_10_Final_SK_ePub.xhtml#_idTextAnchor249): Application
    Integration Services'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第10章*](B17124_10_Final_SK_ePub.xhtml#_idTextAnchor249)：应用集成服务'
- en: AWS offers a suite of services that enable you to build architectures that enable
    communication between the different components of your application in a bid to
    move away from monolith designs. These integration services facilitate design
    patterns for distributed systems, serverless applications, and decoupled applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: AWS提供了一套服务，帮助您构建能够实现应用组件之间通信的架构，从而摆脱传统的单体架构设计。这些集成服务促进了分布式系统、无服务器应用程序和解耦应用程序的设计模式。
- en: Ultimately, decoupling your application from traditional all-in-one monolith
    architectures ensures a reduced impact when making changes. It also facilitates
    easier upgrades and new features being released faster.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，将您的应用从传统的一体化单体架构中解耦，可以减少更改时的影响。同时，它也促进了更容易的升级和更快的推出新功能。
- en: In this chapter, we will look at several services that offer integration capabilities.
    These include messaging solutions between application components using a queuing
    service, notification services, which can be used for **application-to-application**
    (**A2A**) notifications or **application-to-person** (**A2P**) type notifications,
    event-driven workflow designs, and coordinating multiple services into serverless
    workloads.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍几项提供集成功能的服务。这些包括使用队列服务在应用组件之间进行消息传递的解决方案、通知服务，可用于**应用对应用**（**A2A**）通知或**应用对人**（**A2P**）通知类型、事件驱动的工作流设计，以及将多个服务协调成无服务器工作负载。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Understanding notification services such as Amazon **Simple Notification Service**
    (**SNS**)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解像Amazon **Simple Notification Service**（**SNS**）这样的通知服务
- en: Decoupling your application architecture with Amazon **Simple Queue Service**
    (**SQS**) and Amazon MQ
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon **Simple Queue Service**（**SQS**）和Amazon MQ解耦您的应用架构
- en: Designing event-driven workflows to connect your application data with various
    AWS services using EventBridge
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计事件驱动的工作流，通过EventBridge将应用程序数据与各种AWS服务连接
- en: Coordinating multiple AWS services into serverless workloads with Amazon Step
    Functions and Amazon **Simple Workflow Service** (**SWF**)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Step Functions和Amazon **Simple Workflow Service**（**SWF**）将多个AWS服务协调成无服务器工作负载
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete the exercises in this chapter, you will need access to your AWS
    Free Tier account, as well as permissions to access the various AWS services.
    You will also need access to the VPC you built in [*Chapter 6*](B17124_06_Final_SK_ePub.xhtml#_idTextAnchor122),
    *AWS Networking Services – VPCs, Route53, and CloudFront*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本章中的练习，您需要访问AWS免费套餐账户，并且需要有权限访问各个AWS服务。您还需要访问您在[*第6章*](B17124_06_Final_SK_ePub.xhtml#_idTextAnchor122)中构建的VPC，*AWS网络服务
    – VPC、Route53和CloudFront*。
- en: Understanding notification services such as Amazon SNS
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解像Amazon SNS这样的通知服务
- en: Amazon SNS is a push-based messaging and notification system that can be used
    to allow one application component to send messages to other application components
    or directly to end users.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS是一个基于推送的消息和通知系统，可以用于让一个应用组件将消息发送到其他应用组件或直接发送给最终用户。
- en: Amazon SNS uses a publisher/subscriber model where one application component
    will act as a publisher of messages and the other application components will
    consume those messages as subscribers. Amazon SNS allows you to design high throughput,
    many-to-many messaging between distributed systems, microservices, and event-driven
    applications.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS使用发布/订阅模型，其中一个应用组件将充当消息发布者，其他应用组件将作为订阅者消费这些消息。Amazon SNS允许您设计高吞吐量的多对多消息传递，适用于分布式系统、微服务和事件驱动的应用程序。
- en: Let's look at an example. Suppose you want to be notified if any of your IAM
    users upload an object to a particular Amazon S3 bucket that they have access
    to. To achieve this, you can configure `s3:ObjectCreated:*` action occurs. This
    notification can be sent to an **SNS topic** (discussed later), which you subscribe
    to using your email address. This way, every time your users upload a new object
    to your S3 bucket, Amazon SNS will send out a notification to you via email. This
    is an example of A2P messaging using SNS.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子。假设你希望在任何一个 IAM 用户上传对象到他们有权限访问的某个特定 Amazon S3 存储桶时收到通知。为此，你可以配置发生 `s3:ObjectCreated:*`
    操作。这条通知可以发送到一个**SNS 主题**（稍后讨论），你可以通过电子邮件地址订阅该主题。这样，每当用户将新对象上传到 S3 存储桶时，Amazon
    SNS 就会通过电子邮件向你发送通知。这是一个使用 SNS 的 A2P 消息示例。
- en: Let's look at another example. Suppose you host an S3 bucket that allows end
    users to upload images in a default format, and you have a requirement to convert
    those images into multiple formats. To achieve this requirement, you can use Amazon
    Lambda, which, as we discussed in [*Chapter 7*](B17124_07_Final_SK_ePub.xhtml#_idTextAnchor157),
    *AWS Compute Services*, is a serverless compute solution that allows you to run
    code in response to an event or trigger.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看另一个例子。假设你托管一个 S3 存储桶，允许最终用户上传默认格式的图像，并且你有一个要求将这些图像转换成多种格式。为实现这一要求，你可以使用
    Amazon Lambda，如我们在 [*第七章*](B17124_07_Final_SK_ePub.xhtml#_idTextAnchor157)中讨论的那样，*AWS
    计算服务*，它是一个无服务器计算解决方案，允许你响应事件或触发器运行代码。
- en: For this specific example, you can configure your S3 notification service to
    send a message to an Amazon SNS topic and have the Lambda function subscribe to
    that topic. The message can include information about the new image that has been
    uploaded and can trigger your Lambda function to access the image in the bucket,
    create different formats of the image, and save them in another S3 bucket. This
    automated process is an example of A2A messaging using SNS.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个特定的例子，你可以配置 S3 通知服务将消息发送到 Amazon SNS 主题，并让 Lambda 函数订阅该主题。消息可以包含已上传的新图像信息，并触发
    Lambda 函数访问存储桶中的图像，创建不同格式的图像，并将其保存到另一个 S3 存储桶中。这个自动化过程是使用 SNS 的 A2A 消息示例。
- en: Next, we will take a look at a key component of the Amazon SNS services, specifically
    SNS endpoints.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入了解 Amazon SNS 服务的一个关键组件，特别是 SNS 端点。
- en: Amazon SNS endpoints
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SNS 端点
- en: 'As we mentioned previously, Amazon SNS is a push-based messaging solution,
    enabling one or more publishers to push messages to one or more subscribers. With
    Amazon SNS, your subscribers need to use a supported endpoint type. These endpoints
    are depicted in the following diagram:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Amazon SNS 是一种基于推送的消息解决方案，使一个或多个发布者可以将消息推送给一个或多个订阅者。使用 Amazon SNS 时，你的订阅者需要使用支持的端点类型。这些端点在下图中有所描述：
- en: '![Figure 10.1 – Amazon SNS subscriber endpoints'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.1 – Amazon SNS 订阅者端点'
- en: '](img/B17124_10_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_01.jpg)'
- en: Figure 10.1 – Amazon SNS subscriber endpoints
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – Amazon SNS 订阅者端点
- en: Amazon SNS A2A endpoints include Amazon SQS, HTTP/S endpoints, AWS Lambda, and
    Amazon Kinesis Firehose. Data from Amazon Kinesis Firehose can then be offloaded
    and stored in Amazon S3 buckets, AWS Elasticsearch, and Amazon Redshift, as well
    as other third-party service providers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS A2A 端点包括 Amazon SQS、HTTP/S 端点、AWS Lambda 和 Amazon Kinesis Firehose。然后，来自
    Amazon Kinesis Firehose 的数据可以卸载并存储在 Amazon S3 存储桶、AWS Elasticsearch 和 Amazon Redshift
    中，以及其他第三方服务提供商。
- en: Amazon SNS A2P endpoints include email, mobile text messages, and mobile push
    endpoints.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS A2P 端点包括电子邮件、手机短信和手机推送端点。
- en: Amazon SNS also ensures high levels of message durability. Messages are stored
    and replicated on multiple devices across geographically separated servers and
    data centers.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS 还确保消息具有高度的持久性。消息会存储并复制到跨地理位置分布的多个设备、服务器和数据中心。
- en: Amazon SNS topics
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SNS 主题
- en: At the heart of the Amazon SNS service is the SNS topic feature, which is a
    logical access point that acts as a communication channel between your publishers
    and subscribers. Before you can send out messages to your subscribers, you need
    to create a topic. Your publisher needs to be made aware of which SNS topic to
    send messages to and your end clients must subscribe to the topic to be able to
    receive those messages.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS 服务的核心是 SNS 主题功能，它是一个逻辑访问点，充当发布者和订阅者之间的通信通道。在你向订阅者发送消息之前，首先需要创建一个主题。你的发布者需要知道向哪个
    SNS 主题发送消息，而你的最终客户端必须订阅该主题才能接收这些消息。
- en: 'In the following diagram, we can see that an application component allows us
    to upload objects to an Amazon S3 bucket (**1**). Amazon S3 can be set up with
    an event notification service that pushes out a notification, stating that an
    upload took place to an Amazon SNS topic. In this diagram, an admin has subscribed
    to the SNS topic. Any notifications resulting from the objects being uploaded
    to the S3 bucket are then sent to the admin:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到一个应用组件允许我们将对象上传到 Amazon S3 存储桶 (**1**)。Amazon S3 可以设置事件通知服务，推送通知，声明上传操作已发生，并将此通知发送到
    Amazon SNS 主题。在此图中，管理员已订阅该 SNS 主题。任何由于对象上传到 S3 存储桶而产生的通知将被发送到管理员：
- en: '![Figure 10.2 – Example – configuring an SNS notification for an S3 event notification'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.2 – 示例 – 配置 S3 事件通知的 SNS 通知'
- en: '](img/B17124_10_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_02.jpg)'
- en: Figure 10.2 – Example – configuring an SNS notification for an S3 event notification
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 示例 – 配置 S3 事件通知的 SNS 通知
- en: Your publishers also need permission to be able to publish messages to the topic.
    In the previous example, where we wanted to send a notification to an administrator
    every time a new object was uploaded to an S3 bucket, you would also need to create
    permissions that grant the S3 bucket the ability to send messages to the SNS topic.
    You can do this by configuring an IAM policy that specifies which bucket can send
    messages to the topic and attach it directly to the SNS topic as an inline policy.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你的发布者还需要获得权限，才能向主题发布消息。在前面的示例中，我们希望在每次新的对象上传到 S3 存储桶时向管理员发送通知，你还需要创建权限，授予 S3
    存储桶向 SNS 主题发送消息的能力。你可以通过配置 IAM 策略来实现，指定哪个存储桶可以向主题发送消息，并将其作为内联策略直接附加到 SNS 主题。
- en: Subscribers to your topic will then have messages pushed out to them whenever
    a new message is published by the publisher. In the case of the preceding example,
    the publisher is the S3 notification service, and the subscriber is your administrator's
    email address.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅者将在发布者发布新消息时接收到消息。在前面的示例中，发布者是 S3 通知服务，订阅者是管理员的电子邮件地址。
- en: 'Note that when you create a topic, you need to assign it a name. This can be
    up to 256 characters in length and can contain hyphens (-) and underscores (_).
    Amazon SNS will assign an `sns` – the Region, the AWS account ID, and the topic
    name. So, for example, an SNS topic called `new-recipe-upload-alert`, created
    in the London Region, with an AWS account ID of `123456789789` will have an ARN
    of `arn:aws:sns:eu-west-2:1234567890123789: new-recipe-upload-alert`.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当你创建主题时，需要为其指定一个名称。名称最长可包含 256 个字符，可以包含连字符（-）和下划线（_）。Amazon SNS 将分配一个 `sns`
    —— 区域、AWS 账户 ID 和主题名称。例如，一个名为 `new-recipe-upload-alert` 的 SNS 主题，在伦敦区域创建，AWS 账户
    ID 为 `123456789789`，则其 ARN 为 `arn:aws:sns:eu-west-2:1234567890123789:new-recipe-upload-alert`。
- en: Next, we will look at the topics you can create on Amazon SNS, which will depend
    on the application's use case.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看你可以在 Amazon SNS 上创建的主题，这取决于应用程序的使用场景。
- en: Standard and FIFO topics
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准主题与 FIFO 主题
- en: When configuring Amazon SNS, you create a **standard topic** by default. Standard
    topics are used when the message's delivery order is not going to affect your
    application in any way and where duplicating messages will not create any issues
    in your workflow. All supported delivery protocols support standard topics.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置 Amazon SNS 时，默认情况下会创建一个**标准主题**。标准主题用于消息的传递顺序不会影响应用程序的情况，并且重复消息不会在工作流中产生问题。所有支持的传递协议都支持标准主题。
- en: In addition, you can create **FIFO topics**. These are designed to ensure strict
    message ordering and prevent message duplication. Note that only the Amazon SQS
    endpoint (specifically, the Amazon SQS FIFO queue) can subscribe to a FIFO topic.
    We will discuss the Amazon SQS service later in this chapter.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以创建**FIFO 主题**。这些主题旨在确保严格的消息顺序并防止消息重复。请注意，只有 Amazon SQS 终端（特别是 Amazon
    SQS FIFO 队列）可以订阅 FIFO 主题。我们将在本章稍后讨论 Amazon SQS 服务。
- en: Amazon SNS Fanout scenario
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SNS 扩展场景
- en: A key feature offered by Amazon SNS is the ability to replicate messages pushed
    out to an SNS topic across multiple endpoints. This is known as the **Fanout scenario**
    and it allows parallel asynchronous processing.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS 提供的一个关键特性是能够将推送到 SNS 主题的消息复制到多个终端。这个功能被称为**扩展场景**，它允许并行异步处理。
- en: 'Let''s look at an example. Let''s say that you are a theatre company and that
    you sell tickets for your various performances. You are required to process online
    payments from customers and issue them their tickets. At the same time, you are
    also required to store information on all sales in AWS''s data warehousing solution,
    which is offered by Amazon Redshift. One way to design this architecture is depicted
    in the following diagram:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子。假设你是一家剧院公司，销售各种演出的门票。你需要处理来自客户的在线支付并向他们发放票务。同时，你还需要将所有销售信息存储在 AWS 的数据仓库解决方案中，该解决方案由
    Amazon Redshift 提供。设计这个架构的一种方式如下图所示：
- en: '![Figure 10.3 – Example of an Amazon SNS Fanout scenario'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.3 – Amazon SNS 扩展场景示例'
- en: '](img/B17124_10_03.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_03.jpg)'
- en: Figure 10.3 – Example of an Amazon SNS Fanout scenario
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – Amazon SNS 扩展场景示例
- en: In the preceding diagram, incoming ticket sales are sent to an SNS topic, which
    then gets replicated to an SQS queue and an Amazon Kinesis Data Firehose stream.
    Any messages that are sent to the SQS queue are processed by the payment function
    to complete the sale transaction. Additional queues may be added to the architecture
    for order fulfillment and customer notification.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图示中，传入的票务销售消息被发送到 SNS 主题，然后复制到 SQS 队列和 Amazon Kinesis Data Firehose 流。发送到
    SQS 队列的任何消息都由支付功能处理，以完成销售交易。架构中还可以添加其他队列，用于订单履行和客户通知。
- en: Next, the same message is processed by Amazon Kinesis Data Firehose, which feeds
    the data into an Amazon Redshift cluster. Note that to stream data from Amazon
    Kinesis Firehose to Redshift, you need to deliver the data into an S3 bucket and
    then issue an Amazon Redshift `COPY` command to load the data into your Amazon
    Redshift cluster. We will discuss Amazon Kinesis in the next chapter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，相同的消息将被 Amazon Kinesis Data Firehose 处理，数据被送入 Amazon Redshift 集群。请注意，要将数据从
    Amazon Kinesis Firehose 流式传输到 Redshift，你需要先将数据交付到 S3 桶中，然后执行 Amazon Redshift `COPY`
    命令将数据加载到 Amazon Redshift 集群中。我们将在下一章讨论 Amazon Kinesis。
- en: At the same time, messages will continue to reside in the S3 bucket, which can
    be archived using the life cycle management process, as we discussed in [*Chapter
    5*](B17124_05_Final_SK_ePub.xhtml#_idTextAnchor094), *Amazon Simple Storage Service
    (Amazon S3)*. This can help address any compliance requirements to store historic
    information on all ticket sales.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，消息将继续保存在 S3 桶中，可以使用生命周期管理过程进行归档，正如我们在[*第5章*](B17124_05_Final_SK_ePub.xhtml#_idTextAnchor094)中讨论的，*Amazon
    Simple Storage Service（Amazon S3）*。这有助于满足存储所有票务销售历史信息的合规性要求。
- en: Amazon SNS pricing
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SNS 定价
- en: Amazon SNS is a managed service with no upfront cost. You pay based on usage
    and this is based on the type of topic that's used; that is, standard topics or
    FIFO topics. Standard topics are charged based on the number of API requests made
    per month and the number of deliveries to the various endpoints. For example,
    mobile push notifications are charged at $0.50 per million notifications after
    you have exhausted your free tier threshold of 1 million notifications.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS 是一项托管服务，无需预付费用。你按使用量付费，费用基于使用的主题类型；即，标准主题或 FIFO 主题。标准主题的费用是根据每月发出的
    API 请求数量以及向各个端点的交付次数来计算的。例如，移动推送通知的费用是每百万条通知 $0.50，在你耗尽免费层 1 百万条通知的额度后开始计费。
- en: The maximum payload size for your messages is 256 KB. Except for SMS messages,
    you are billed for every 64 KB chunk as one request. So, a payload size of 256
    KB is equal to four requests. Furthermore, if you need to send messages that are
    larger than 256 KB, you can use the Amazon Extended SNS Client Library, which
    allows you to send payloads via the Amazon S3 service. When you do this, additional
    Amazon S3 storage costs are incurred.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你的消息最大负载大小为 256 KB。除了短信消息外，按每 64 KB 为一个请求收费。所以，256 KB 的负载大小等于四个请求。此外，如果你需要发送大于
    256 KB 的消息，你可以使用 Amazon Extended SNS 客户端库，它允许你通过 Amazon S3 服务发送负载数据。使用此方法时，会产生额外的
    Amazon S3 存储费用。
- en: With regards to FIFO topics, you are charged based on the number of published
    messages, subscribed messages, and their respective amount of payload data.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 FIFO 主题，你的费用将基于发布的消息数量、订阅的消息数量及其各自的负载数据量。
- en: In this section, we looked at the Amazon push-based messaging solution offered
    by Amazon SNS. Amazon SNS works based on a publisher/subscriber model and enables
    you to design and architect A2A messaging and A2P messaging. Amazon SNS can help
    you build integration between different application components, allowing you to
    design distributed systems, microservices, and serverless architectures.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了由 Amazon SNS 提供的基于推送的消息传递解决方案。Amazon SNS 基于发布/订阅模型，能够帮助您设计和架构 A2A
    消息传递和 A2P 消息传递。Amazon SNS 能够帮助您构建不同应用组件之间的集成，从而设计分布式系统、微服务和无服务器架构。
- en: You also learned about some of the core features of Amazon SNS, including standard
    and FIFO topics, as well as the Fanout scenario concept.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您还了解了 Amazon SNS 的一些核心功能，包括标准主题和 FIFO 主题，以及 Fanout 场景概念。
- en: In the next section, we will look at another messaging integration service known
    as Amazon SQS. Amazon SQS is a pull-based messaging solution and lends itself
    well to designing decoupled architectures, enabling you to migrate away from monolith
    application architectures.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍另一种消息集成服务，称为 Amazon SQS。Amazon SQS 是一种基于拉取的消息传递解决方案，非常适合设计解耦架构，帮助您从单体应用架构迁移开来。
- en: Decoupling your application architecture with Amazon SQS and Amazon MQ
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon SQS 和 Amazon MQ 解耦应用程序架构
- en: Amazon SQS is another fully managed messaging integration solution that enables
    you to decouple your application components into distributed systems and facilitate
    the design and architecture of microservices. One of the primary advantages of
    using a queuing system such as Amazon SQS is the ability to move away from monolithic
    application designs. In a monolithic design, where all the components of your
    applications are dependent on each other and always need to be available to each
    other, you often suffer from frequent failures and outages. A queueing system
    such as Amazon SQS can help the different components of your application work
    independently and queues can hold messages in the form of requests/tasks until
    capacity becomes available. With asynchronous processing and the ability for different
    components to scale independently, you benefit from higher levels of availability,
    where each component can scale as needed without impacting the overall workflow.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SQS 是另一个完全托管的消息集成解决方案，它能够将应用组件解耦到分布式系统中，并促进微服务的设计和架构。使用像 Amazon SQS 这样的队列系统的主要优势之一是能够脱离单体应用设计。在单体设计中，您的应用所有组件彼此依赖，并且需要始终可用，通常会遭遇频繁的故障和停机。像
    Amazon SQS 这样的队列系统可以帮助应用的不同组件独立工作，队列能够以请求/任务的形式存储消息，直到容量变得可用。通过异步处理以及不同组件独立扩展的能力，您可以享受更高的可用性，每个组件可以根据需要扩展，而不会影响整体工作流。
- en: 'In the following diagram, we can see how Amazon SQS can be used to queue messages
    between various components of your application and achieve a decoupled architecture
    (also known as loose coupling):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到 Amazon SQS 如何用于在应用程序的各个组件之间排队消息，从而实现解耦架构（也称为松耦合）：
- en: '![Figure 10.4 – Amazon SQS use case example'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.4 – Amazon SQS 用例示例'
- en: '](img/B17124_10_04.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_04.jpg)'
- en: Figure 10.4 – Amazon SQS use case example
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – Amazon SQS 用例示例
- en: 'In the preceding diagram, a media transcoding example makes use of both the
    Amazon SNS and Amazon SQS services to convert raw videos uploaded by users into
    various formats and resolution sizes. In this architecture, we have different
    auto-scaling groups that are provisioning a fleet of servers, with each fleet
    responsible for converting the videos into a specific format. Separate queues
    are created to handle messages destined for the different fleets of servers to
    process. Here is a quick breakdown of the workflow:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，一个媒体转码的例子使用了 Amazon SNS 和 Amazon SQS 服务，将用户上传的原始视频转换为各种格式和分辨率。在这个架构中，我们有不同的自动扩展组，这些组负责配置一批服务器，每批服务器负责将视频转换为特定格式。为处理发送到不同服务器组的消息，创建了独立的队列。以下是工作流的简要说明：
- en: Users upload videos via a frontend web server farm that is part of an auto-scaling
    group designed to scale out and scale in based on demand.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户通过一个前端 Web 服务器集群上传视频，该集群属于一个自动扩展组，根据需求进行扩展和收缩。
- en: The videos are uploaded to a master bucket.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 视频被上传到主存储桶。
- en: At the same time, an SNS notification is sent out to multiple Amazon SQS queues
    in a fanout configuration (refer to the SNS Fanout scenario discussed earlier
    in this chapter).
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与此同时，一个 SNS 通知被以扇出配置发送到多个 Amazon SQS 队列（参见本章前面讨论的 SNS 扇出场景）。
- en: Each SQS queue holds messages for the appropriate app server to pull when capacity
    is available.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个 SQS 队列存放消息，供适当的应用服务器在有空闲容量时拉取。
- en: The relevant app servers retrieve the messages from the appropriate SQS queue,
    which identifies the videos that need to be processed in the master bucket. The
    app servers then retrieve the raw videos from the master bucket.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相关的应用服务器从相应的 SQS 队列中检索消息，该队列标识出需要在主存储桶中处理的视频。然后，应用服务器从主存储桶中检索原始视频。
- en: The app servers convert the format and resolution of the videos and upload the
    completed videos in the correct format into the transcode bucket.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用服务器将视频的格式和分辨率转换，并将完成的视频以正确的格式上传到转码存储桶。
- en: Whereas Amazon SNS offers a push-based message notification solution, Amazon
    SQS is a fully managed pull-based message queue system that will also retain the
    messages for a short duration (the default is set to 4 days but this can be configured
    to a maximum duration of 14 days).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Amazon SNS 提供基于推送的消息通知解决方案，但 Amazon SQS 是一个完全托管的基于拉取的消息队列系统，它还会在短时间内保留消息（默认保留时间为
    4 天，但可以配置最长为 14 天）。
- en: This means that if you have backend services that need to process lots of messages
    in the queue from frontend web requests, you can retain those messages until your
    backend services can process new messages in the queue. Amazon SQS increases the
    overall fault tolerance of your application solutions, allowing your decoupled
    application components to run independently.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，如果你有需要处理大量来自前端 Web 请求的队列消息的后端服务，你可以将这些消息保留，直到后端服务能够处理队列中的新消息。Amazon SQS
    提高了应用解决方案的整体容错能力，使得解耦的应用组件能够独立运行。
- en: Amazon SQS queue types
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SQS 队列类型
- en: Amazon SQS offers two types of queues designed to help address different use
    cases. These are discussed next.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SQS 提供了两种类型的队列，旨在帮助解决不同的使用场景。接下来将讨论这两种队列。
- en: Amazon SQS standard queues
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SQS 标准队列
- en: 'Standard queues support a nearly unlimited number of API calls per second,
    (`SendMessage`, `ReceiveMessage`, or `DeleteMessage`) and are designed for messages
    to be delivered at least once. However, this does mean that on an odd occasion,
    duplicate copies of the message could be delivered. In addition, messages may
    not be delivered in the order in which they were introduced into the queue. So,
    your application must be able to cope with messages that are not delivered in
    the order in which they entered the queue, as well as the occasional duplicate
    message:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 标准队列支持几乎无限数量的每秒 API 调用（`SendMessage`、`ReceiveMessage` 或 `DeleteMessage`），并且设计为至少发送一次消息。然而，这意味着在某些情况下，消息可能会重复发送。此外，消息可能不会按照它们进入队列的顺序发送。因此，你的应用程序必须能够处理未按照进入队列的顺序传递的消息，以及偶尔的重复消息：
- en: '![Figure 10.5 – Amazon SQS standard queue'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.5 – Amazon SQS 标准队列'
- en: '](img/B17124_10_05.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_05.jpg)'
- en: Figure 10.5 – Amazon SQS standard queue
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – Amazon SQS 标准队列
- en: Standard queues are particularly useful when you need to process vast amounts
    of transactions per second. However, note that there is a 120,000 quota for the
    number of inflight messages for a standard queue. A typical example of where you
    might use standard queues is, for example, when you need to process a high number
    of credit card validation requests for an e-commerce application.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 标准队列在需要每秒处理大量事务时特别有用。然而，请注意，标准队列的飞行消息数量配额为 120,000。例如，当需要处理大量电商应用中的信用卡验证请求时，你可能会使用标准队列。
- en: Amazon SQS FIFO queues
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SQS FIFO 队列
- en: '**FIFO** stands for **first-in first-out**. FIFO queues are designed to preserve
    the order of your messages, as well as ensuring only one-time delivery with no
    duplicates.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**FIFO** 代表 **先进先出**。FIFO 队列旨在保持消息的顺序，并确保每条消息只被送达一次，没有重复。'
- en: FIFO queues only offer throughput at a rate of 300 transactions per second.
    This means that they cannot offer unlimited throughput; however, high throughput
    of messages can be offered by using a process known as batching, which offers
    support for 3,000 transactions per second, per API method (`SendMessageBatch`,
    `ReceiveMessage`, or `DeleteMessageBatch`). These 3,000 transactions represent
    300 API calls, each with a batch of 10 messages.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: FIFO 队列仅以每秒 300 次交易的速率提供吞吐量。这意味着它们无法提供无限的吞吐量；然而，通过使用称为批处理的过程，可以提供更高的消息吞吐量，每个
    API 方法（`SendMessageBatch`，`ReceiveMessage` 或 `DeleteMessageBatch`）支持每秒 3,000 次交易。这
    3,000 次交易代表了 300 次 API 调用，每次调用携带 10 条消息。
- en: 'In addition, as depicted in the following diagram, messages are delivered in
    the order in which they were introduced into the queue and Amazon SQS will preserve
    this order:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，正如下面的图示所示，消息按照它们进入队列的顺序进行传递，Amazon SQS 将保持此顺序：
- en: '![Figure 10.6 – Amazon SQS FIFO queue'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.6 – Amazon SQS FIFO 队列'
- en: '](img/B17124_10_06.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_06.jpg)'
- en: Figure 10.6 – Amazon SQS FIFO queue
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – Amazon SQS FIFO 队列
- en: So, FIFO queues are ideal for those applications where the order of events is
    important, such as when you're making sure that user-entered commands are run
    in the right order. FIFO queues also ensure no duplicates are created more than
    once, such as processing payment transactions. However, they are not ideal where
    exceptional levels of scaling might be required or where you need to process greater
    than 3,000 transactions per second (with batching).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，FIFO 队列非常适合那些事件顺序很重要的应用程序，例如确保用户输入的命令按照正确的顺序运行。FIFO 队列还确保不会重复处理，例如支付交易。然而，当需要极高的扩展性或每秒需要处理超过
    3,000 次交易（带批处理时）时，它们并不理想。
- en: Amazon SQS pricing and security
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon SQS 定价和安全性
- en: To ensure sensitive data is protected, you can encrypt messages using Amazon
    **Key Management Service** (**KMS**). In terms of pricing, there are no upfront
    costs. You pay based on the number and content of requests and the interactions
    with Amazon S3 and AWS KMS. Note that as part of the free tier, you also get the
    first 1 million requests for free every month.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保敏感数据的保护，您可以使用 Amazon **密钥管理服务**（**KMS**）对消息进行加密。在定价方面，Amazon MQ 不需要前期成本。您根据请求的数量和内容以及与
    Amazon S3 和 AWS KMS 的交互支付费用。请注意，作为免费套餐的一部分，您每月还可以获得前 100 万次请求的免费额度。
- en: In this section, we looked at another managed messaging solution offered by
    Amazon SQS. Amazon SQS is a pull-based message queuing solution that allows you
    to decouple your application components, enabling them to work independently of
    each other. Messages are stored in either standard or FIFO queues and application
    components retrieve these messages as required when there is available capacity.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们介绍了 Amazon SQS 提供的另一种托管消息解决方案。Amazon SQS 是一种基于拉取的消息队列解决方案，可以解耦您的应用程序组件，使它们能够独立工作。消息存储在标准队列或
    FIFO 队列中，应用程序组件在有可用容量时按需检索这些消息。
- en: In the next section, we will look at Amazon MQ, which is a message broker service
    designed for Apache ActiveMQ and other message brokers.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，我们将介绍 Amazon MQ，这是一种为 Apache ActiveMQ 和其他消息中介设计的消息中介服务。
- en: Amazon MQ
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon MQ
- en: A message broker is a piece of software designed to help you facilitate communications
    between application components to exchange information. Message brokers allow
    different services to communicate with each other directly, even if those services
    are written in different languages or run on different platforms.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 消息中介是一种旨在帮助您促进应用程序组件之间信息交换的软件。消息中介允许不同的服务直接相互通信，即使这些服务是用不同的编程语言编写的或运行在不同的平台上。
- en: Many organizations have existing message brokering services within their on-premises
    environments that support their on-premises applications. One such service is
    **Apache ActiveMQ**, which is probably one of the most popular Java-based message
    brokers.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织在其本地环境中已经有现有的消息中介服务，以支持它们的本地应用程序。其中一项服务是**Apache ActiveMQ**，它可能是最流行的基于 Java
    的消息中介之一。
- en: When clients are looking to migrate their on-premises applications, you must
    consider where such third-party message brokering services are being consumed.
    AWS offers a service known as Amazon MQ, which is a fully managed message broker
    service that provides compatibility with popular message brokers.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户寻求迁移其本地应用程序时，您必须考虑这些第三方消息中介服务的使用位置。AWS 提供了一项名为 Amazon MQ 的服务，这是一项完全托管的消息中介服务，提供与流行消息中介的兼容性。
- en: Amazon recommends using Amazon MQ to migrate applications from existing message
    brokers where compatibility with APIs such as **JMS** or protocols such as **AMQP
    0-9-1**, **AMQP 1.0, MQTT**, **OpenWire**, and **STOMP** is required.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊建议使用 Amazon MQ 将应用程序从现有的消息代理迁移，这些消息代理需要与 **JMS** 等 API 或 **AMQP 0-9-1**、**AMQP
    1.0、MQTT**、**OpenWire** 和 **STOMP** 等协议兼容。
- en: If, as part of the migration, you are looking to completely rearchitect your
    application layer, then you may wish to consider Amazon SNS and Amazon SQS instead,
    as you do not require third-party message brokers. Amazon recommends these services
    for new applications that can benefit from nearly unlimited scalability and simple
    APIs.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果作为迁移的一部分，您打算完全重新设计您的应用程序层，那么您可能希望考虑使用 Amazon SNS 和 Amazon SQS，因为您不再需要第三方消息代理。亚马逊推荐这些服务用于新应用程序，这些应用程序可以受益于几乎无限的可扩展性和简单的
    API。
- en: In this section, we looked at Amazon MQ, which enables customers to easily migrate
    to a message broker in the cloud and offers compatibility with existing messaging
    brokers such as Apache ActiveMQ and RabbitMQ. With Amazon MQ, you reduce your
    overall operational overhead when provisioning, configuring, and maintaining message
    brokers that depend on connectivity with APIs such as JMS or protocols such as
    AMQP 0-9-1, AMQP 1.0, MQTT, OpenWire, and STOMP.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了 Amazon MQ，它使客户能够轻松迁移到云中的消息代理，并与现有的消息代理（如 Apache ActiveMQ 和 RabbitMQ）兼容。使用
    Amazon MQ，您可以减少在提供、配置和维护依赖于与 JMS 等 API 或 AMQP 0-9-1、AMQP 1.0、MQTT、OpenWire 和 STOMP
    等协议连接的消息代理时的整体操作开销。
- en: In the next section, we will look at event-driven workflow services and the
    services offered by Amazon to help architect event-driven solutions for your applications.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，我们将探讨基于事件的工作流服务，以及亚马逊提供的服务，帮助您为应用程序架构事件驱动的解决方案。
- en: Designing event-driven application workflows using AWS EventBridge
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS EventBridge 设计事件驱动的应用程序工作流
- en: Amazon EventBridge is a serverless *event bus service* that allows you to stream
    real-time events from your applications, SaaS-based services, and AWS services
    to a variety of targets. These targets can include AWS Lambda, Kinesis, an HTTP/S
    endpoint, or another event bus service in another account. Amazon EventBridge
    helps you create application architectures where you need to react and perform
    some action against those events that are generated.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EventBridge 是一个无服务器的 *事件总线服务*，允许您从应用程序、基于 SaaS 的服务和 AWS 服务流式传输实时事件到各种目标。这些目标可以包括
    AWS Lambda、Kinesis、HTTP/S 端点，或另一个账户中的事件总线服务。Amazon EventBridge 帮助您创建需要响应并对生成的事件执行某些操作的应用程序架构。
- en: Events can be generated when there is a change in the state of a given resource,
    such as when an EC2 instance changes its state from a running state to a stopped
    state. Another example of an event is when your auto-scaling group launches or
    terminates an EC2 instance. Additional functionality, as required by your application
    architecture, can be created by reacting to such state changes.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当给定资源的状态发生变化时，可以生成事件，例如，当 EC2 实例从运行状态变为停止状态时。另一个事件示例是，当您的自动扩展组启动或终止一个 EC2 实例时。根据应用架构的需要，可以通过响应此类状态变化来创建额外的功能。
- en: With EventBridge, you set up rules that define matching incoming patterns or
    events. When an event occurs, as defined by the rule, it can be sent to a target
    for further processing. For example, an event that resulted in a critical server
    being stopped (by accident) can be sent to a Lambda function to have it restarted
    automatically.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 EventBridge，您可以设置规则来定义匹配传入模式或事件的条件。当事件发生时，如规则所定义，它可以被发送到目标进行进一步处理。例如，当一个导致关键服务器停止（意外）的事件发生时，可以将其发送到
    Lambda 函数进行自动重启。
- en: EventBridge can also be configured to trigger events at a defined schedule.
    For example, if you have a large fleet of EC2 instances that are used to test
    new applications, and you generally run your tests every weekday from Monday to
    Friday during normal business hours, then there is no need to have the servers
    running outside of those business hours. You can set up a scheduled event to trigger
    a Lambda function that stops the servers at 6 P.M. Monday to Friday and restarts
    them every weekday at 8 A.M. This ensures that outside of normal business hours,
    your servers are in the stopped state. If these are on-demand EC2 instances, you
    do not get charged while those servers remain stopped.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: EventBridge 还可以配置为在定义的计划下触发事件。例如，如果你有一大批 EC2 实例用于测试新应用程序，并且你通常在每周一至周五的正常工作时间内进行测试，那么在这些工作时间之外就没有必要让服务器持续运行。你可以设置一个定时事件，触发一个
    Lambda 函数，在每周一至周五的下午 6 点停止服务器，并在每个工作日的早上 8 点重新启动服务器。这样可以确保在正常工作时间之外，服务器处于停止状态。如果这些是按需
    EC2 实例，在服务器保持停止状态时，你不会产生费用。
- en: Amazon EventBridge is an updated solution from a previous version known as Amazon
    CloudWatch Events. With CloudWatch Events, you were limited to a default event
    bus that enabled you to route all AWS events, as well as custom events. However,
    with the new Amazon EventBridge, you can introduce custom event buses in addition
    to the default event bus. Custom event buses can be created exclusively for your
    workloads and enable you to control access to events that are limited to a set
    of AWS accounts or custom applications. In addition, you can use content-based
    filtering and advanced rules for routing events. EventBridge can handle more processing,
    reduce the load on downstream events, and use partner event sources such as Zendesk,
    PagerDuty, and Datadog.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EventBridge 是 Amazon CloudWatch Events 的更新版本。在 CloudWatch Events 中，你只能使用一个默认的事件总线来路由所有
    AWS 事件以及自定义事件。然而，在新的 Amazon EventBridge 中，除了默认事件总线，你还可以引入自定义事件总线。自定义事件总线可以专门为你的工作负载创建，并使你能够控制对事件的访问，这些事件仅限于一组
    AWS 账户或自定义应用程序。此外，你可以使用基于内容的过滤和高级规则来路由事件。EventBridge 可以处理更多的处理任务，减少下游事件的负载，并使用如
    Zendesk、PagerDuty 和 Datadog 等合作伙伴事件源。
- en: 'In the following diagram, we can see how EventBridge works at a high level.
    We can see the sources of events, the types of buses that can be used, and the
    potential targets for those events:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到 EventBridge 的高层工作方式。我们可以看到事件的来源、可以使用的事件总线类型以及这些事件可能的目标：
- en: '![Figure 10.7 – How EventBridge works'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.7 – EventBridge 的工作原理'
- en: '](img/B17124_10_07.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_07.jpg)'
- en: Figure 10.7 – How EventBridge works
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – EventBridge 的工作原理
- en: 'The following are the key concepts and components of Amazon EventBridge:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Amazon EventBridge 的关键概念和组件：
- en: '**Events**: As mentioned earlier, events represent a change in the state of
    a given environment or resource. This can be a state change in an application,
    an AWS resource, or even a SaaS partner service or application.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件**：如前所述，事件表示给定环境或资源的状态变化。这可以是应用程序、AWS 资源，甚至是 SaaS 合作伙伴服务或应用程序的状态变化。'
- en: '**Rules**: A rule enables you to match an event to a target for processing.
    You can have a single rule route to a single target or a parallel processing route
    to multiple targets. There is no ordering of how the rules are processed but you
    can customize the JSON that''s sent to the target to ensure only data of interest
    is passed on to the target.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规则**：规则使你能够将事件匹配到目标进行处理。你可以设置一个规则将事件路由到一个目标，或者设置并行处理将事件路由到多个目标。规则的处理顺序没有固定要求，但你可以自定义发送到目标的
    JSON，确保只有感兴趣的数据被传递给目标。'
- en: '**Targets**: A target can process these events and perform some action. Targets
    include Lambda functions, SNS topics, ECS tasks, and SQS queues. Events are passed
    on to targets in JSON format.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：目标可以处理这些事件并执行某些操作。目标包括 Lambda 函数、SNS 主题、ECS 任务和 SQS 队列。事件以 JSON 格式传递给目标。'
- en: '**Event buses**: Event buses can receive events. You have a default bus in
    your AWS account that is used to receive events from AWS services, but you can
    also create custom events for your custom applications. Partner event buses can
    be used to receive events from partner SaaS applications and services, which are
    then directed to your AWS account.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件总线**：事件总线可以接收事件。你的 AWS 账户中有一个默认的事件总线，用于接收来自 AWS 服务的事件，但你也可以为自定义应用程序创建自定义事件。合作伙伴事件总线可用于接收来自合作伙伴
    SaaS 应用程序和服务的事件，然后将这些事件传递到你的 AWS 账户。'
- en: In this section, we looked at Amazon EventBridge, which allows you to stream
    real-time events from your applications, SaaS-based services, and AWS services
    to a variety of targets for processing. Targets can include AWS Lambda functions,
    Kinesis streams, ECS tasks, and SQS queues, among others. In addition, you can
    configure Amazon EventBridge to handle scheduled events that are triggered on
    a defined schedule. Amazon EventBridge offers more flexibility and advanced features
    compared to the previous CloudWatch Events services.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们了解了 Amazon EventBridge，它允许你从应用程序、基于 SaaS 的服务和 AWS 服务流式传输实时事件到多种目标进行处理。目标可以包括
    AWS Lambda 函数、Kinesis 流、ECS 任务、SQS 队列等。此外，你还可以配置 Amazon EventBridge 以处理在定义的时间表上触发的计划事件。与之前的
    CloudWatch Events 服务相比，Amazon EventBridge 提供了更多的灵活性和高级功能。
- en: In the next section, we will look at task-oriented integration services such
    as Amazon Step Functions and Amazon SWF.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将介绍面向任务的集成服务，如 Amazon Step Functions 和 Amazon SWF。
- en: Coordinating multiple AWS services into serverless workloads with Amazon Step
    Functions and Amazon SWF
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Step Functions 和 Amazon SWF 协调多个 AWS 服务，构建无服务器工作负载
- en: In this section, we'll look at two different AWS services that enable you to
    design task-based workflows between your application components. The first service
    we will look at is AWS Step Functions, while the second will be AWS SWF.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将介绍两种不同的 AWS 服务，帮助你设计应用组件之间基于任务的工作流。我们将首先了解 AWS Step Functions，其次是 AWS
    SWF。
- en: AWS Step Functions
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Step Functions
- en: Applications tend to have several components that make up individual workflows
    and processes. Each workflow represents an element of the application that then
    leads on to the next to provide a complete end-to-end solution. Amazon Step Functions
    enables you to define these workflows as a series of state machines that contain
    "states" that make up the workflow. These states make decisions based on input,
    perform some action, and produce an output to other states.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序通常由多个组件组成，这些组件构成了单独的工作流和流程。每个工作流代表应用程序中的一个元素，然后依次进行，以提供完整的端到端解决方案。Amazon
    Step Functions 使你能够将这些工作流定义为一系列包含“状态”的状态机，这些“状态”构成了工作流。这些状态根据输入做出决策，执行某些操作，并向其他状态产生输出。
- en: 'States can be any of the following types:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 状态可以是以下任何一种类型：
- en: '**Success or fail state**: Where the execution stops with a success or failure'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成功或失败状态**：执行停止时的成功或失败状态'
- en: '**Wait state**: Where the state waits for a timeout period or a scheduled time'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**等待状态**：状态等待超时或计划时间'
- en: '**Parallel state**: Where the state performs parallel branches of execution'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**并行状态**：状态执行并行的执行分支'
- en: '**Map state**: Where the state accesses a list of items such as a list of orders'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**映射状态**：状态访问一个项列表，如订单列表'
- en: '**Choice state**: Where the state chooses between branches of execution'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择状态**：状态在执行分支之间进行选择'
- en: '**Task state**: A state that focuses on carrying out a specific task and may
    call other AWS services, such as Lambda functions, to perform the task'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务状态**：一个专注于执行特定任务的状态，可能调用其他 AWS 服务，如 Lambda 函数，来执行任务'
- en: The state machine coordinates work through the different states and uses the
    task state to perform the actual work. Steps Functions helps you visualize your
    workflow as a series of event-driven steps, as well as the state of each step
    in your workflow to make sure that your application runs in a defined order.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 状态机通过不同的状态协调工作，并使用任务状态执行实际的工作。Step Functions 帮助你将工作流可视化为一系列基于事件的步骤，以及每个步骤在工作流中的状态，以确保你的应用程序按定义的顺序运行。
- en: Amazon Step Functions makes use of the **Amazon States Language** (**ASL**).
    This is a JSON-formatted structured language that helps you define your state
    machines, including states such as **Task** states, which perform certain actions.
    ASL is used to define how states transition from one state to the next, as in
    the case of the **Choice** state, or when you need to stop execution with an error,
    as in the case of a **Fail** state, and so on.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Step Functions 使用**Amazon States Language**（**ASL**）。这是一种基于 JSON 格式的结构化语言，帮助你定义状态机，包括**任务**状态，执行特定的操作。ASL
    用于定义状态如何从一个状态过渡到下一个状态，例如**选择**状态，或当需要通过错误停止执行时，如**失败**状态，等等。
- en: 'With Step Functions, you can also introduce human interaction, particularly
    where manual intervention is required. Let''s look at an example of a credit card
    application process. You are likely to have several steps that form part of the
    application process. In the following diagram, we can see those steps in detail:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Step Functions，您还可以引入人工互动，特别是在需要人工干预的地方。让我们来看一个信用卡申请过程的例子。您可能会有几个步骤作为申请过程的一部分。在下图中，我们可以详细看到这些步骤：
- en: '![Figure 10.8 – Example of a credit card application workflow'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.8 – 信用卡申请工作流示例'
- en: '](img/B17124_10_08.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_08.jpg)'
- en: Figure 10.8 – Example of a credit card application workflow
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 信用卡申请工作流示例
- en: 'In the preceding diagram, we have a Step Functions workflow process that illustrates
    how a potential customer could apply for a new credit card. The initial workflow
    would involve signing up for a credit card, which would require the customer''s
    details to be verified. The next step could involve enabling a customer to choose
    the level of credit required. This workflow may include the following steps:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，我们有一个 Step Functions 工作流过程，展示了潜在客户如何申请新信用卡。最初的工作流包括注册信用卡，这需要验证客户的详细信息。接下来的步骤可能涉及让客户选择所需的信用额度。这个工作流可能包括以下步骤：
- en: New customers sign up for a credit card. The initial process involves checking
    the user's details. Several parallel Lambda functions can be invoked to perform
    the required verification. For example, in the UK, the customer's name and address
    could be verified against the electoral roll.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新客户注册信用卡。最初的过程包括检查用户的详细信息。可以调用多个并行的 Lambda 函数来执行所需的验证。例如，在英国，可以通过选民名单验证客户的姓名和地址。
- en: If the automatic verification process is successful, then a review is not required,
    and the next step is invoked. If a review is required, then human intervention
    may be required to perform additional verification tasks. If the human verification
    is successful, the next step can be invoked; otherwise, the application can be
    rejected.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果自动验证过程成功，那么就不需要复审，下一步将被调用。如果需要复审，则可能需要人工干预来执行额外的验证任务。如果人工验证成功，下一步可以继续；否则，申请将被拒绝。
- en: Next, the customer is offered an auto-approval credit amount. The customer is
    also given the choice to select a higher credit value, which will be subject to
    additional reviews. If the customer chooses a credit value that is within the
    auto-approval credit amount, then the application is automatically approved. If
    the customer chooses a credit value higher than the auto-approval credit amount,
    then another human intervention step is required. Here, the credit card company
    may request additional information such as salary slips to check the customer's
    credit-worthiness.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，客户将获得一个自动批准的信用额度。客户还可以选择一个更高的信用额度，这将需要额外的复审。如果客户选择的信用额度在自动批准额度内，申请将自动被批准。如果客户选择的信用额度超过自动批准额度，则需要进行另一步人工干预。在此，信用卡公司可能会要求提供额外信息，如工资单，以检查客户的信用状况。
- en: If the human intervention is successful, the application is approved; if not,
    the application will be rejected. There may be additional steps in the workflow
    for appealing against the rejection decision.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果人工干预成功，申请将被批准；如果不成功，申请将被拒绝。工作流中可能会有额外的步骤来对拒绝决策提出上诉。
- en: Step Functions enables us to build distributed application solutions and design
    microservices interactions to provide a complete end-to-end solution. Next, we
    will look at the different types of workflows you can set up for Step Functions.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Step Functions 使我们能够构建分布式应用程序解决方案并设计微服务交互，以提供完整的端到端解决方案。接下来，我们将了解您可以为 Step Functions
    设置的不同类型的工作流。
- en: Workflow types
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作流类型
- en: 'With Amazon Step Functions, you can configure two types of workflows, as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Step Functions，您可以配置两种类型的工作流，如下所示：
- en: '**Standard workflow**: These have an exactly once workflow execution and can
    run for up to 1 year. Standard workflows are ideal if you require human interaction
    and approval processes as part of your workflow. You are charged on a per-state
    transition basis, which is each time a step in your execution is completed. Standard
    workflows also provide access to execution history and visual debugging.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准工作流**：这些工作流的执行是精确一次的，可以运行最长达1年。如果您的工作流需要人类交互和审批流程，标准工作流非常适合。您按每次状态转换计费，也就是每次执行步骤完成时。标准工作流还提供执行历史记录和可视化调试功能。'
- en: '**Express workflow**: These have at least once workflow execution but can only
    run for up to 5 minutes. Express workflows are ideal for automated tasks and high
    event rate workloads, such as streaming data processing and IoT data ingestion.
    You are charged based on the number and duration of executions. Express workflows
    also offer unlimited state transition rates. Finally, all execution history is
    sent to Amazon CloudWatch.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速工作流**：这些工作流至少执行一次，但最多只能运行5分钟。快速工作流非常适合自动化任务和高事件频率的工作负载，如流数据处理和物联网数据摄取。您根据执行次数和持续时间计费。快速工作流还提供无限的状态转换速率。最后，所有执行历史都会发送到Amazon
    CloudWatch。'
- en: 'Here is an example of a simple workflow that creates a task timer. In this
    example, a Step Functions state machine is being configured that implements a
    **Wait** state and uses a Lambda function to send out an Amazon SNS notification
    after the waiting period is over. The message that''s sent out by the task is
    a simple *Hello World* message. The following screenshot shows the workflow and
    associated JSON:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个简单工作流的示例，用于创建任务计时器。在这个例子中，正在配置一个Step Functions状态机，它实现了一个**等待**状态，并在等待期结束后使用Lambda函数发送Amazon
    SNS通知。任务发送的消息是一个简单的*Hello World*消息。以下截图展示了工作流及其关联的JSON：
- en: '![Figure 10.9 – AWS Step Functions task timer example'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.9 – AWS Step Functions 任务计时器示例'
- en: '](img/B17124_10_09.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_09.jpg)'
- en: Figure 10.9 – AWS Step Functions task timer example
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – AWS Step Functions 任务计时器示例
- en: In this section, we looked at the two types of Step Functions execution types
    and identified the core difference between the two. Step Functions workflows can
    run for up to 1 year (when using the standard workflow type), so they are particularly
    useful for long-running application models that may also require human interaction.
    An example is a health insurance claim application process, which may require
    human intervention to verify the hospital bills and treatment that's dispensed
    to the claimant. In the next section, we will examine another task-oriented application
    integration service known as Amazon SWF.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了两种类型的Step Functions执行方式，并确定了它们之间的核心区别。Step Functions工作流最长可以运行1年（使用标准工作流类型时），因此对于需要长时间运行并可能需要人类交互的应用模型特别有用。一个例子是健康保险理赔申请过程，可能需要人工干预来验证医院账单和提供给索赔人的治疗服务。下一节中，我们将介绍另一种任务导向的应用集成服务，即Amazon
    SWF。
- en: Amazon Simple Workflow Service (SWF)
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊简单工作流服务（SWF）
- en: Amazon SWF is another task-oriented application integration service that allows
    you to coordinate work across distributed components of your application. Such
    coordination of tasks may involve processes such as managing dependencies, scheduling
    tasks, and handling the retries and timeouts of tasks to complete the logical
    workflow for your application.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SWF是另一个任务导向的应用集成服务，允许您协调应用程序中分布式组件之间的工作。此类任务协调可能涉及管理依赖关系、调度任务以及处理任务的重试和超时，以完成应用程序的逻辑工作流。
- en: Amazon SWF has a concept where you implement "workers" to complete your tasks.
    Workers can run either in the cloud across AWS EC2 instances or on the compute
    services available in your on-premises locations. As part of the logical workflow,
    Amazon SWF also allows you to incorporate human interaction within the logical
    distribution of tasks like Amazon Step Functions, as discussed in the previous
    section. With Amazon SWF, you can store tasks, assign them to workers, track progress,
    and maintain states.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SWF有一个概念，即您可以实现“工作者”来完成任务。工作者可以在AWS EC2实例上运行，也可以在您本地环境中可用的计算服务上运行。作为逻辑工作流的一部分，Amazon
    SWF还允许您在任务的逻辑分配中加入人类交互，就像前面一节中讨论的Amazon Step Functions一样。使用Amazon SWF，您可以存储任务、分配任务给工作者、跟踪进度并维护状态。
- en: While all of this sounds fairly like Amazon Step Functions, a key difference
    is that with Amazon SWF, you must write decider programs in any language that
    gets the latest state of each task from Amazon SWF and uses it to initiate subsequent
    tasks.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这一切听起来很像 Amazon Step Functions，但一个关键的区别是，在使用 Amazon SWF 时，您必须用任何语言编写决策程序，该程序从
    Amazon SWF 获取每个任务的最新状态，并利用这些状态启动后续任务。
- en: Amazon Step Functions, on the other hand, offers a fully managed service that
    has a more productive and agile approach to coordinating application components
    using visual workflows. If you are building new applications on AWS, you should
    consider using Amazon Step Functions. However, if you require external services
    to interact with your processes or you need to launch nested processes where a
    child process needs to return results to a parent process, you should consider
    using Amazon SWF.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Amazon Step Functions 提供了一项完全托管的服务，它通过视觉工作流协调应用程序组件，具有更具生产力和灵活性的方式。如果您正在
    AWS 上构建新应用程序，您应该考虑使用 Amazon Step Functions。然而，如果您需要外部服务与您的流程交互，或者您需要启动嵌套流程，其中子进程需要将结果返回给父进程，您应该考虑使用
    Amazon SWF。
- en: In this section, we provided a brief introduction to Amazon SWF. Amazon SWF
    enables you to coordinate tasks across your distribution application components
    while offering capabilities such as maintaining their execution state durably
    and reliably.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了 Amazon SWF。Amazon SWF 使您能够协调分布式应用程序组件之间的任务，同时提供诸如持久可靠地维护其执行状态等功能。
- en: Exercise 10.1 – Amazon S3 event notification using Amazon SNS
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 10.1 – 使用 Amazon SNS 的 Amazon S3 事件通知
- en: In the previous chapter, you designed, architected, and deployed a complete
    web application using several AWS services. One such service was the Amazon S3
    service, where you created a bucket to host your application source code repository.
    The source code was comprised of multiple files that helped you build your web
    application.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您使用多个 AWS 服务设计、架构并部署了一个完整的 web 应用程序。其中一个服务是 Amazon S3 服务，您创建了一个存储库来托管您的应用程序源代码。源代码包含多个文件，这些文件帮助您构建
    web 应用程序。
- en: Maintaining this source code is of paramount importance and any changes that
    are made to the code need to be monitored. There are several best practice strategies
    you can use to manage your source code, including using DevOps principles. In
    this exercise, your senior administrator, **Alice**, would like to know whenever
    a new file (object) gets uploaded to this source code repository, which is stored
    in the Amazon S3 bucket.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 维护此源代码至关重要，所有对代码的更改都需要进行监控。您可以采用几种最佳实践策略来管理源代码，包括使用 DevOps 原则。在本练习中，您的高级管理员
    **Alice** 希望知道每当有新文件（对象）上传到存储在 Amazon S3 桶中的源代码存储库时。
- en: Amazon S3 comes with a feature known as event notifications. This feature enables
    you to receive notifications when certain events occur in your S3 bucket, such
    as an object being created or deleted. The service can be configured to send out
    such notifications to an Amazon SNS topic, which an administrator can subscribe
    to using an email as the endpoint. Let's configure an Amazon S3 notification to
    send email alerts to **Alice** whenever a new file is uploaded (that is, created)
    to the S3 bucket that hosts the source code repository.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3 提供一个称为事件通知的功能。此功能使您能够在某些事件发生时接收通知，例如对象被创建或删除。该服务可以配置为将此类通知发送到 Amazon
    SNS 主题，管理员可以使用电子邮件作为终端订阅该主题。让我们配置一个 Amazon S3 通知，以便每当有新文件上传（即创建）到托管源代码存储库的 S3
    桶时，发送电子邮件提醒给 **Alice**。
- en: This exercise is divided into four main steps, as described in the following
    sub-sections.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习分为四个主要步骤，如以下小节所述。
- en: Step 1 – creating an SNS topic and subscribing to the topic
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步 – 创建 SNS 主题并订阅该主题
- en: 'The first step is to create an SNS topic that will be used as the logical access
    point that Alice will subscribe to. Messages sent to this topic will then be emailed
    to Alice:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个 SNS 主题，这个主题将作为 Alice 订阅的逻辑访问点。发送到该主题的消息将通过电子邮件发送给 Alice：
- en: From the AWS Management Console, search for `SNS` in the top search box and
    select the service to be taken to the Amazon SNS dashboard.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 管理控制台中，在顶部搜索框中搜索 `SNS` 并选择该服务，以进入 Amazon SNS 控制台。
- en: If you have never created an SNS topic before, you should see the Amazon SNS
    splash screen.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您以前从未创建过 SNS 主题，您应该会看到 Amazon SNS 欢迎屏幕。
- en: Click on the far left-hand menu icon, denoted by the three lines, to expand
    the sidebar.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击最左侧的菜单图标（三条横线表示），以展开侧边栏。
- en: Next, click on the **Topics** link from the menu.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从菜单中点击**主题**链接。
- en: Click the **Create topic** button in the right-hand pane of the screen.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右侧面板中的**创建主题**按钮。
- en: On the **Create topic** page, in the **Details** section, select the **Standard**
    type under **Type**.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建主题**页面的**详细信息**部分，选择**类型**下的**标准**类型。
- en: Enter a name for the topic; for example, `source-code-changes`. Next, enter
    a display name for the topic; for example, `Source Code Changes Alert`.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入主题名称，例如 `source-code-changes`。接下来，输入主题的显示名称，例如 `Source Code Changes Alert`。
- en: Leave all the remaining settings as their default values and click the **Create
    topic** button.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保留所有其他设置为默认值，然后点击**创建主题**按钮。
- en: Once the topic has been created, you will be redirected to the topic page. Make
    a note of the topic's ARN, as per the following screenshot:![Figure 10.10 – Amazon
    SNS topic
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦主题创建完成，你将被重定向到主题页面。请记下主题的 ARN，参考以下截图：![图 10.10 – Amazon SNS 主题
- en: '](img/B17124_10_10.jpg)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_10_10.jpg)'
- en: Figure 10.10 – Amazon SNS topic
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.10 – Amazon SNS 主题
- en: Now that you have created a topic, you can create a subscription for it. We
    will be using email as the endpoint for notifications, and you can use your email
    address to receive the notifications.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已创建了一个主题，你可以为其创建一个订阅。我们将使用电子邮件作为通知的终端，你可以使用你的电子邮件地址来接收通知。
- en: In the bottom pane of the topics page, as per the previous screenshot, you will
    find a section to create subscriptions. Click on the **Create subscription** button.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主题页面的底部面板中，参考之前的截图，你会看到一个创建订阅的部分。点击**创建订阅**按钮。
- en: On the **Create subscription** page, you will note that the topic ARN is already
    selected. If not, ensure that you paste the topic ARN that you made a note of
    earlier.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建订阅**页面，你会注意到主题 ARN 已被选中。如果没有，请确保粘贴你之前记下的主题 ARN。
- en: Next, under **Protocol**, select **Email** from the drop-down list.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**协议**下，从下拉列表中选择**电子邮件**。
- en: In the text box under **Endpoint**, provide your email address.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**终端**下的文本框中，提供你的电子邮件地址。
- en: Click the **Create subscription** button at the bottom of the page.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**创建订阅**按钮。
- en: You will get a confirmation statement to say that your subscription has been
    created. However, its status will be set to **Pending confirmation**. AWS will
    have sent you a confirmation request to your email account. You will need to log
    into your email account and confirm the subscription to activate it. I have just
    logged into my email account to do the same, as per the following screenshot of
    my Gmail account:![Figure 10.11 – Email subscription request for topic subscription
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将收到一个确认声明，表示你的订阅已创建。然而，它的状态将设置为**等待确认**。AWS 会向你的电子邮件账户发送确认请求。你需要登录你的电子邮件账户并确认订阅以激活它。我刚刚登录我的电子邮件账户进行相同的操作，以下是我的
    Gmail 账户的截图：![图 10.11 – 主题订阅的电子邮件订阅请求
- en: '](img/B17124_10_11.jpg)'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_10_11.jpg)'
- en: Figure 10.11 – Email subscription request for topic subscription
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.11 – 主题订阅的电子邮件订阅请求
- en: Once you confirm your subscription, return to the Amazon SNS dashboard and click
    on the **Topics** link from the left-hand menu.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦确认订阅，返回到 Amazon SNS 控制面板，并从左侧菜单中点击**主题**链接。
- en: Now that you have confirmed your subscription to the topic, you can configure
    an access policy that will grant the Amazon S3 service the permissions to send
    notifications to the topic.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已确认了对主题的订阅，你可以配置一个访问策略，授予 Amazon S3 服务将通知发送到主题的权限。
- en: Step 2 – configuring your SNS topic policy
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 2 – 配置 SNS 主题策略
- en: 'For Amazon S3 to send notifications to the SNS topic you just created, you
    will need to configure an **access policy**. An access policy defines who or what
    can access your topic and publish messages to it. We have provided a sample policy
    document in the GitHub repository for this study guide that you will need to amend
    [https://github.com/PacktPublishing/AWS-Certified-Cloud-Practitioner-Exam-Guide](https://github.com/PacktPublishing/AWS-Certified-Cloud-Practitioner-Exam-Guide).
    You will need to have the following information before editing the policy:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Amazon S3 将通知发送到你刚刚创建的 SNS 主题，你需要配置一个**访问策略**。访问策略定义了谁或什么可以访问你的主题并向其发布消息。我们在这个学习指南的
    GitHub 仓库中提供了一个示例策略文档，你需要修改它：[https://github.com/PacktPublishing/AWS-Certified-Cloud-Practitioner-Exam-Guide](https://github.com/PacktPublishing/AWS-Certified-Cloud-Practitioner-Exam-Guide)。在编辑策略之前，你需要以下信息：
- en: The ARN of the SNS topic, which you made a note of earlier.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你之前记下的 SNS 主题的 ARN。
- en: The Amazon ARN of the S3 bucket, which you created in the previous chapter.
    You can find the bucket ARN by clicking on the **Properties** tab on the bucket
    details page within your Amazon S3 dashboard.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您在前一章节创建的S3存储桶的Amazon ARN。您可以通过单击Amazon S3仪表板上存储桶详细信息页面上的**属性**选项卡找到存储桶ARN。
- en: The AWS account ID (which you can obtain by clicking on your account name in
    the top right-hand corner of the screen and making a note of the 12-digit number
    next to **My Account**).
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS账户ID（您可以通过单击屏幕右上角的帐户名称，并记下**我的帐户**旁边的12位数字来获取）。
- en: 'Open the sample access policy document in Notepad or a text editor of your
    choice, as per the following screenshot:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Notepad或您选择的文本编辑器中的示例访问策略文档，如以下截图所示：
- en: '![Figure 10.12 – Sample access policy'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.12 - 示例访问策略'
- en: '](img/B17124_10_12.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_12.jpg)'
- en: Figure 10.12 – Sample access policy
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12 - 示例访问策略
- en: 'Replace the values in the policy, as highlighted by the arrows in the preceding
    screenshot, with the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 替换策略中的值，如上述截图中的箭头所示，使用以下内容：
- en: For `Sid`, change `example-statement-ID` to any relevant information you would
    like to use; for example, `source-code-change-policy`.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`Sid`，将`example-statement-ID`更改为您希望使用的任何相关信息；例如，`源代码更改策略`。
- en: For `Resource`, change `SNS-topic-ARN` to the ARN of your topic, making sure
    to place the ARN in double quotes.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`Resource`，将`SNS-topic-ARN`更改为您主题的ARN，确保将ARN放在双引号中。
- en: For `ArnLike`, change `arn:aws:s3:*:*:bucket-name` to the ARN of your bucket
    name.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`ArnLike`，将`arn:aws:s3:*:*:bucket-name`更改为您的存储桶名称的ARN。
- en: For `StringEquals`, change `bucket-owner-account-id` to your AWS account ID.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`StringEquals`，将`bucket-owner-account-id`更改为您的AWS账户ID。
- en: 'Save the file and keep it handy for the next step of steps:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，并将其保存在下一步骤的过程中使用：
- en: Navigate back to the Amazon SNS dashboard and from the left-hand menu, click
    ron **Topics**.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航回Amazon SNS仪表板，并从左侧菜单中单击**主题**。
- en: Click on your SNS topic in the middle pane, which will redirect you to the topic's
    details page, as per the following screenshot:![Figure 10.13 – SNS topic details
    page
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击中间窗格中的您的SNS主题，这将重定向您到主题详细信息页面，如以下截图所示：![图10.13 - SNS主题详细信息页面
- en: '](img/B17124_10_13.jpg)'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17124_10_13.jpg)'
- en: Figure 10.13 – SNS topic details page
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.13 - SNS主题详细信息页面
- en: Click on the **Access policy** tab in the bottom section of the pane.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击面板底部的**访问策略**选项卡。
- en: You will find a default access policy that allows only the topic owner to publish
    to the topic.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将找到一个默认访问策略，只允许主题所有者发布主题。
- en: In the top half of the pane, click on the **Edit** button.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗格的上半部分，单击**编辑**按钮。
- en: Next, expand the **Access policy – optional** section.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，展开**访问策略 - 可选**部分。
- en: Next, highlight and delete the existing policy that is in the JSON editor, and
    paste in a copy of your amended access policy instead.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，突出显示并删除JSON编辑器中的现有策略，并粘贴您修订后的访问策略的副本。
- en: Finally, click the **Save changes** button at the bottom of the page.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在页面底部单击**保存更改**按钮。
- en: Now that you have set up the SNS topic and an appropriate access policy, it
    is time to set the Amazon S3 event notification service.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经设置了SNS主题和适当的访问策略，现在是设置Amazon S3事件通知服务的时候了。
- en: Step 3 – setting up the Amazon S3 event notification service
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤3 - 设置Amazon S3事件通知服务
- en: 'In this step, you will configure the event notification service on your Amazon
    S3 source code bucket, which hosts your application repository to send out alerts
    every time a new file is uploaded to the bucket:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，您将配置事件通知服务在您的Amazon S3源代码存储桶上，该存储桶托管您的应用程序仓库，每当上传新文件到存储桶时发送警报：
- en: Navigate to the Amazon S3 dashboard and click on the **Buckets** link from the
    left-hand menu.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Amazon S3仪表板，并从左侧菜单中单击**存储桶**链接。
- en: From the right-hand pane, click on the Amazon S3 bucket that you created in
    the previous chapter to host your source code files.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从右侧窗格中，单击您在前一章节创建的Amazon S3存储桶，以托管您的源代码文件。
- en: Next, click on the **Properties** tab and scroll down until you reach the **Event
    Notifications** section.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，单击**属性**选项卡，并向下滚动，直到到达**事件通知**部分。
- en: Click the **Create event notification** button.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**创建事件通知**按钮。
- en: Enter a name for your event, such as `New files added alert`.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的事件输入一个名称，例如`新增文件添加提醒`。
- en: In the **Event types** section, tick the box that states **All object create
    events**.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**事件类型**部分，选中声明**所有对象创建事件**的复选框。
- en: Scroll further down until you reach the **Destination** section.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续向下滚动，直到到达**目的地**部分。
- en: Select **SNS topic** from the **Destination** options.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**目标**选项中选择**SNS 主题**。
- en: Under **Specify SNS topic**, select the SNS topic that you created earlier in
    *Step 1* from the **SNS topic** drop-down list.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**指定 SNS 主题**下，从**SNS 主题**下拉列表中选择您在*步骤 1*中创建的 SNS 主题。
- en: Finally, click the **Save changes** button.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**保存更改**按钮。
- en: Now that you have configured S3 to send event notifications to your SNS topic,
    it is time to test the configuration.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经配置了 S3 以将事件通知发送到您的 SNS 主题，是时候测试该配置了。
- en: Step 4 – testing the configuration
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 4 – 测试配置
- en: 'In this step, we will test out the configuration of our Amazon S3 event notification
    service:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们将测试 Amazon S3 事件通知服务的配置：
- en: In the Amazon S3 dashboard, from the left-hand menu, select **Buckets**.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Amazon S3 仪表盘中，从左侧菜单中选择**存储桶**。
- en: From the right-hand pane, select your Amazon S3 bucket, which will contain the
    source code files.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从右侧面板中选择您的 Amazon S3 存储桶，该存储桶将包含源代码文件。
- en: Next, click on the **Upload** button.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**上传**按钮。
- en: Go ahead and upload any random file you have access to. Alternatively, you can
    create a text file, save it, and then upload that text file instead. You can either
    use the **Add files** button to browse for a file on your computer or simply drag
    and drop a file from another file explorer window into the upload area.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续上传您可以访问的任何随机文件。或者，您可以创建一个文本文件，保存后上传该文本文件。您可以使用**添加文件**按钮浏览计算机上的文件，或者直接将文件从另一个文件资源管理器窗口拖放到上传区域。
- en: Upload your file to the Amazon S3 bucket by clicking on the **Upload** button
    at the bottom of the page.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击页面底部的**上传**按钮，将您的文件上传到 Amazon S3 存储桶。
- en: Once the upload has succeeded, click the **Close** button. Your object should
    be visible in the list of objects in the bucket.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦上传成功，点击**关闭**按钮。您的对象应该在存储桶中的对象列表中可见。
- en: 'Access your email account once again and check whether you have received a
    notification from AWS, alerting you to the fact that a new object has been uploaded.
    Refer to the following screenshot as an example:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次访问您的电子邮件账户，检查是否收到了来自 AWS 的通知，提醒您已上传新对象。参考以下截图作为示例：
- en: '![Figure 10.14 – Amazon S3 event notification alert email'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.14 – Amazon S3 事件通知提醒邮件'
- en: '](img/B17124_10_14.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17124_10_14.jpg)'
- en: Figure 10.14 – Amazon S3 event notification alert email
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – Amazon S3 事件通知提醒邮件
- en: As you can see, AWS has sent me an email, alerting me to the fact that an object
    was uploaded (created) in my Amazon S3 bucket. The email contains lots of information,
    including the time of the event, the alert's name, the bucket in question, the
    name of the object that was uploaded, as well as its size. As you can appreciate,
    this can be very useful for auditing purposes.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，AWS 已发送邮件提醒我，在我的 Amazon S3 存储桶中上传（创建）了一个对象。该邮件包含大量信息，包括事件时间、警报名称、存储桶名称、上传的对象名称及其大小。如您所见，这对于审计目的非常有用。
- en: Amazon S3 event notifications can use other destinations too, such as an SQS
    queue or a Lambda function. In this exercise, you learned how Amazon SNS can be
    used to push out notification messages to an email address.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3 事件通知还可以使用其他目标，如 SQS 队列或 Lambda 函数。在本练习中，您了解了如何使用 Amazon SNS 将通知消息推送到电子邮件地址。
- en: In the next exercise, you will perform a cleanup to remove any resources that
    are no longer required from our AWS account.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个练习中，您将执行清理操作，移除我们 AWS 账户中不再需要的资源。
- en: Exercise 10.2 – cleaning up
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 10.2 – 清理工作
- en: 'In this exercise, you will delete the resources that you created in the previous
    exercise as part of the cleanup process:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您将删除在上一个练习中创建的资源，作为清理过程的一部分：
- en: Navigate back to the Amazon SNS console.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到 Amazon SNS 控制台。
- en: From the left-hand menu, select **Topics**.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**主题**。
- en: Next, from the right-hand pane, select the **source-code-changes** topic. Click
    the **Delete** button.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从右侧面板中选择**source-code-changes**主题。点击**删除**按钮。
- en: You will be prompted to confirm the delete request with a dialog box. Type `delete
    me` in the confirmation text box and then click the **Delete** button. The topic
    will be deleted.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统将提示您通过对话框确认删除请求。在确认文本框中输入`delete me`，然后点击**删除**按钮。该主题将被删除。
- en: 'Now that you have deleted the Amazon SNS topic, you can also delete the Amazon
    S3 bucket as we no longer require it:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已删除了 Amazon SNS 主题，您也可以删除 Amazon S3 存储桶，因为我们不再需要它：
- en: Navigate to the Amazon S3 console.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 Amazon S3 控制台。
- en: From the left-hand menu, click on **Buckets**.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中，点击**Buckets**。
- en: From the right-hand pane, select the bucket that you uploaded your source code
    to earlier.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从右侧窗格中，选择您之前上传源代码的桶。
- en: You can only delete buckets if they are empty. This means that you have to delete
    the objects in your bucket first. With the bucket selected, click the **Empty**
    button.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只有当桶为空时，您才能删除它。这意味着您必须首先删除桶中的对象。选中桶后，点击**清空**按钮。
- en: Next, you will be prompted to confirm that you wish to delete the objects by
    typing `permanently delete` in the confirmation text box. Then, you can click
    on the **Delete** button to empty the bucket.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，系统将提示您确认是否希望通过在确认文本框中输入`permanently delete`来删除对象。然后，您可以点击**删除**按钮以清空桶。
- en: Now that the bucket has been emptied, you can delete it.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在桶已经清空，您可以删除它。
- en: Click the **Exit** button to go back to the list of buckets. With the bucket
    still selected, click the **Delete** button. Next, in the confirmation text box,
    type in the name of the bucket to confirm that you wish to delete it and click
    the **Delete bucket** button.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**退出**按钮返回到桶列表页面。保持桶被选中，点击**删除**按钮。接下来，在确认文本框中输入桶的名称以确认您希望删除它，并点击**删除桶**按钮。
- en: Your Amazon S3 bucket will be successfully deleted.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 Amazon S3 桶将成功删除。
- en: Next, we will provide a summary of this chapter and the key concepts that you
    learned.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将总结本章以及您所学到的关键概念。
- en: Summary
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we examined the key application integration services that allow
    you to build highly robust and distributed application solutions. The array of
    services offered by AWS for application integration enables communication between
    the decoupled components of your applications, allowing you to move away from
    a monolithic architecture to one that can be built using microservices. The application
    integration tools available from AWS also help you design serverless solutions
    more easily, allowing you to further benefit from cost savings associated with
    server-based solutions.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们审视了允许您构建高可用和分布式应用解决方案的关键应用集成服务。AWS 提供的应用集成服务使得您可以在解耦的应用组件之间进行通信，让您可以从单体架构转向基于微服务构建的架构。AWS
    提供的应用集成工具还帮助您更轻松地设计无服务器解决方案，让您进一步享受与基于服务器的解决方案相关的成本节约。
- en: The various services you learned about in this chapter included Amazon SNS,
    Amazon SQS, and Amazon MQ, which are message-oriented application integration
    services. These enable communication between application components, which allows
    you to build loosely coupled application architectures.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，您学习了包括 Amazon SNS、Amazon SQS 和 Amazon MQ 在内的各种服务，它们是面向消息的应用集成服务。这些服务使得应用组件之间能够进行通信，从而让您构建松耦合的应用架构。
- en: Amazon Step Functions and Amazon SWF are task-oriented application integration
    services that offer workflows that run for up to 1 year and can incorporate human
    intervention as part of the workflow process. Amazon Step Functions also helps
    you coordinate application components using visual workflows.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Step Functions 和 Amazon SWF 是面向任务的应用集成服务，提供最长可运行 1 年的工作流，并可以将人工干预作为工作流过程的一部分。Amazon
    Step Functions 还帮助您使用可视化工作流协调应用组件。
- en: Finally, we looked at Amazon EventBridge, which is a serverless event bus service
    that makes it easier to build event-driven applications. EventBridge can ingest
    and process events that are generated by your applications, partner **Software-as-a-Service**
    (**SaaS**) applications, and other AWS services.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看了 Amazon EventBridge，它是一个无服务器事件总线服务，使得构建事件驱动的应用程序变得更加容易。EventBridge 可以获取并处理由您的应用程序、合作伙伴**软件即服务**（**SaaS**）应用程序以及其他
    AWS 服务生成的事件。
- en: In the next chapter, we will look at a wide range of analytical services that
    are on offer from AWS that allow you to stream data from a wide range of sources,
    perform complex queries on ingested data, build data lakes, and build visualization
    dashboards and reporting.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 AWS 提供的各种分析服务，这些服务可以让您从多种来源流式传输数据，对获取的数据执行复杂查询，构建数据湖，并构建可视化仪表板和报告。
- en: Questions
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Answer the following questions to test your knowledge of this chapter:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 请回答以下问题，测试您对本章内容的理解：
- en: Which AWS services does Amazon CloudWatch use to send out email alerts to administrators
    when alarms are triggered and enter the `Alarm` state?
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些 AWS 服务可用于当触发警报并进入`Alarm`状态时，向管理员发送电子邮件通知？
- en: Amazon SNS
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon SNS
- en: Amazon SES
  id: totrans-262
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon SES
- en: Amazon CloudTrail
  id: totrans-263
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 CloudTrail
- en: Amazon Email
  id: totrans-264
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊电子邮件
- en: Which feature of Amazon CloudWatch enables you to create a visualization of
    metrics by resource type and service?
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon CloudWatch 哪个功能可以帮助您按资源类型和服务创建度量的可视化？
- en: CloudWatch Events
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch 事件
- en: CloudWatch Logs
  id: totrans-267
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch Logs
- en: CloudWatch Alarms
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch 警报
- en: CloudWatch dashboards
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch 仪表板
- en: Which AWS application integration service can be configured to offer A2P communication
    using mobile SMS to send out text alerts?
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 AWS 应用集成服务可以配置为提供 A2P 通信，使用移动 SMS 发送文本警报？
- en: Amazon SQS
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SQS
- en: Amazon SNS
  id: totrans-272
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS
- en: Amazon Amplify
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 Amplify
- en: Amazon Workspaces
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 Workspaces
- en: You need to configure your Amazon SNS topic to push out messages of newly uploaded
    videos to an Amazon S3 bucket, across three different SQS queues. Each queue is
    designed to encode the raw video into a different resolution. Which feature of
    Amazon SNS enables you to push out such notifications in parallel?
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要配置您的 Amazon SNS 主题，以便将新上传视频的消息推送到三个不同的 SQS 队列中的 Amazon S3 存储桶中。每个队列旨在将原始视频编码为不同的分辨率。Amazon
    SNS 的哪个功能使您能够并行推送这些通知？
- en: Amazon SNS standard topic
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS 标准主题
- en: Amazon SNS FIFO topic
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS FIFO 主题
- en: Fanout scenario
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扇出场景
- en: Amazon EventBridge
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 EventBridge
- en: Which Amazon SQS queue type offers maximum throughput, best-effort ordering,
    and at least one delivery?
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 Amazon SQS 队列类型提供最大吞吐量、最佳努力排序，并确保至少一次交付？
- en: SQS standard queue
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS 标准队列
- en: SQS power queue
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS 强大队列
- en: SQS FIFO queue
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS FIFO 队列
- en: SQS LIFO queue
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS LIFO 队列
- en: Which AWS service is designed to help you build a decoupled application architecture
    where incoming web requests can be held in a queue until a backend application
    can retrieve and process the request?
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 AWS 服务旨在帮助您构建一个解耦的应用架构，其中传入的 Web 请求可以保存在队列中，直到后端应用程序能够检索并处理该请求？
- en: Amazon SQS
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SQS
- en: Amazon SWF
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SWF
- en: Amazon SNS
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS
- en: Amazon Step Functions
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 Step Functions
- en: You are required to configure an SQS queue for your application where the order
    of messages needs to be preserved for the application to function correctly. Which
    type of queue do you need to configure?
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要为您的应用程序配置一个 SQS 队列，其中消息的顺序需要保持不变，以便应用程序能够正常工作。您需要配置哪种类型的队列？
- en: SQS standard queue
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS 标准队列
- en: SQS power queue
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS 强大队列
- en: SQS FIFO queue
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS FIFO 队列
- en: SQS LIFO queue
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQS LIFO 队列
- en: To reduce costs, you have been asked to automate the shutdown of a fleet of
    UAT test servers every weekday at 7 P.M. and then restart them the following weekday
    at 8 A.M. The servers should remain in the shutdown state at weekends.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了降低成本，您被要求自动关闭一组 UAT 测试服务器，每个工作日的晚上 7 点关闭，然后在下一个工作日的早上 8 点重新启动这些服务器。服务器在周末应保持关闭状态。
- en: Which AWS service can help you achieve the preceding requirements?
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 哪个 AWS 服务可以帮助您实现上述需求？
- en: Amazon SQS
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SQS
- en: Amazon Athena
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 Athena
- en: Amazon EventBridge
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 EventBridge
- en: Amazon SNS
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS
- en: Which AWS service enables you to manage application workflows as state machines
    by breaking them into multiple steps, adding flow logic, and tracking the inputs
    and outputs between the steps?
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 AWS 服务使您能够通过将应用程序工作流拆分为多个步骤、添加流程逻辑，并跟踪步骤之间的输入和输出，将应用程序工作流管理为状态机？
- en: Amazon Step Functions
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 Step Functions
- en: Amazon SQS
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SQS
- en: Amazon SNS
  id: totrans-304
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS
- en: Amazon SWF
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SWF
- en: Which AWS service offers an orchestration service to coordinate work across
    application components that make use of decider programs to determine the latest
    state of each task and use it to initiate subsequent tasks?
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种 AWS 服务提供了一个协调服务，通过使用决策程序来确定每个任务的最新状态，并使用该状态来启动后续任务，以便跨应用程序组件协调工作？
- en: Amazon SNS
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SNS
- en: Amazon EventBridge
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 EventBridge
- en: Amazon SQS
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SQS
- en: Amazon SWF
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚马逊 SWF
