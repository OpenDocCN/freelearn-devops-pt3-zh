- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Putting It All Together with a Real-World Example
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用一个真实的例子将一切整合在一起
- en: Let’s take what we’ve learned in the previous chapters and apply this from start
    to finish.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将之前章节中学到的知识运用到实践中，从头到尾完成这个过程。
- en: Let’s say you are an employee at **DevOps Products Inc.** (**DPI**). You are
    responsible for using the toolchain by using Atlassian products and third-party
    products to optimize your development for the flagship product, DPI-Sync, which
    connects to Discord servers and sends messages. How would you begin?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你是**DevOps产品公司**（**DPI**）的员工。你负责使用工具链，通过Atlassian产品和第三方产品优化旗舰产品DPI-Sync的开发，该产品连接到Discord服务器并发送消息。你将如何开始？
- en: 'To accomplish this, we are going to simulate this process by completing the
    following recipes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们将通过完成以下教程来模拟这一过程：
- en: Creating an idea in **Jira Product** **Discovery** (**JPD**)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**Jira产品发现**（**JPD**）中创建一个想法
- en: Connecting an idea to an epic in Jira
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一个想法连接到Jira中的史诗
- en: Creating a story in Jira
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Jira中创建一个故事
- en: Creating a code change in Bitbucket
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Bitbucket中创建代码更改
- en: Committing changes in Bitbucket/Start Bitbucket Pipeline Build
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Bitbucket中提交更改/启动Bitbucket Pipeline构建
- en: Executing Snyk scanning through Bitbucket Pipelines
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Bitbucket Pipelines执行Snyk扫描
- en: Displaying the Bitbucket Pipelines build status in Compass
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Compass中显示Bitbucket Pipelines构建状态
- en: Deploying Bitbucket Pipelines
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署Bitbucket Pipelines
- en: Creating an Opsgenie alert for the Jira project
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Jira项目创建Opsgenie警报
- en: Creating a bugfix branch
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个bug修复分支
- en: Committing a bugfix and watching the pipeline’s execution
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提交一个bug修复并观察管道的执行
- en: Remember that more detailed explanations of these recipes can be found in the
    preceding chapters of this book. For now, let’s learn how to get this sample project
    going.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些教程的更详细说明可以在本书的前几章中找到。现在，让我们学习如何启动这个示例项目。
- en: Technical requirements
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you’ll need to install and configure the following Atlassian
    products:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你需要安装并配置以下Atlassian产品：
- en: JPD
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JPD
- en: Jira
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jira
- en: Bitbucket
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bitbucket
- en: Compass
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compass
- en: Opsgenie
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opsgenie
- en: The sample code for this chapter can be found in the `Chapter13` folder of this
    book’s GitHub repository ([https://github.com/PacktPublishing/Atlassian-DevOps-Toolchain-Cookbook/tree/main/Chapter13](https://github.com/PacktPublishing/Atlassian-DevOps-Toolchain-Cookbook/tree/main/Chapter13)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的示例代码可以在本书GitHub仓库的`Chapter13`文件夹中找到（[https://github.com/PacktPublishing/Atlassian-DevOps-Toolchain-Cookbook/tree/main/Chapter13](https://github.com/PacktPublishing/Atlassian-DevOps-Toolchain-Cookbook/tree/main/Chapter13)）。
- en: Creating an idea in JPD
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在JPD中创建一个想法
- en: We’ll start the development process by deciding what to build. We can gather
    various inputs from our competitors, our customers, and other sources to generate
    ideas for new features and products to develop.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过决定构建什么来开始开发过程。我们可以从竞争对手、客户和其他来源收集各种意见，以生成新功能和产品的开发想法。
- en: We will store our **idea** for a new feature in JPD.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在JPD中存储我们的**新功能想法**。
- en: Getting ready
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In our **JPD** project, we must work with the Jira administrator and the Jira
    project administrator to ensure that we have the appropriate role to create a
    JPD idea.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的**JPD**项目中，我们必须与Jira管理员和Jira项目管理员合作，确保我们拥有适当的角色来创建JPD想法。
- en: 'Your project administrator can ensure access to create ideas by performing
    the following steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目管理员可以通过执行以下步骤来确保能够创建想法：
- en: Select the **Project settings** option from the sidebar.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从侧边栏选择**项目设置**选项。
- en: '![Figure 13.1 – Selecting Project settings](img/B21937_13_01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图13.1 – 选择项目设置](img/B21937_13_01.jpg)'
- en: Figure 13.1 – Selecting Project settings
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – 选择项目设置
- en: 'From the **Project settings** sidebar options, expand **Features** and select
    **Create ideas**. The page that appears should look like this:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目设置**侧边栏选项中，展开**功能**并选择**创建想法**。出现的页面应如下所示：
- en: '![Figure 13.2 – Create ideas](img/B21937_13_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图13.2 – 创建想法](img/B21937_13_02.jpg)'
- en: Figure 13.2 – Create ideas
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 – 创建想法
- en: Enable **Allow contributors to create ideas** by switching the toggle on.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过切换开关启用**允许贡献者创建想法**。
- en: Note that while enabled, contributors can create ideas but cannot edit them
    or delete them. For any idea, contributors can add comments, attachments, and
    insights.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，启用后，贡献者可以创建想法，但不能编辑或删除它们。对于任何想法，贡献者可以添加评论、附件和见解。
- en: How to do it…
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'We’ve already covered how to create ideas either by using the **Create** button
    or from within a view. Let’s review how to create a new idea by using the **Create**
    button:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经介绍了如何使用**创建**按钮或在视图中创建想法。现在让我们复习一下如何通过**创建**按钮创建一个新想法：
- en: Click the blue **Create** button on the navigation bar.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航栏上的蓝色**创建**按钮。
- en: A modal will appear that shows the standard fields needed for the idea. Fill
    in those fields and click the **Create** button.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会出现一个模式窗口，显示所需的标准字段。填写这些字段并点击**创建**按钮。
- en: '![Figure 13.3 – Create an idea](img/B21937_13_03.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – 创建一个想法](img/B21937_13_03.jpg)'
- en: Figure 13.3 – Create an idea
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – 创建一个想法
- en: The Jira admin can change what fields appear on the modal by creating forms.
    This may also include pre-filling the **Description** field by using a template.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Jira 管理员可以通过创建表单来更改模式窗口中显示的字段。这也可能包括使用模板预填**描述**字段。
- en: We now have an idea that we can use to track desirability and customer sentiment
    by adding insights and other information. The next step is to create a Jira issue
    to track development work and link it to the original idea.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个想法，可以通过添加洞察和其他信息来跟踪其可行性和客户情感。下一步是创建一个 Jira 问题以跟踪开发工作，并将其与原始想法关联。
- en: Connecting an idea to an epic in Jira
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Jira 中将想法与史诗连接
- en: At this point, we’re starting to move from ideation to implementation. This
    will require us to move from JPD to Jira. Let’s see how the handoff is done.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们开始从构思阶段过渡到实施阶段。这需要我们从 JPD 转移到 Jira。让我们看看如何进行交接。
- en: Getting ready
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'As we saw in the *Delivering ideas for development in Jira* recipe in [*Chapter
    2*](B21937_02.xhtml#_idTextAnchor038), before creating an **epic**, please verify
    the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第 2 章*](B21937_02.xhtml#_idTextAnchor038)的*在 Jira 中交付开发想法*食谱中看到的，创建**史诗**之前，请先验证以下内容：
- en: There is at least one Jira project available to contain the epic.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少有一个 Jira 项目可用于容纳该史诗。
- en: The person creating the epic has the appropriate permissions to create the epic
    in the target project. This same person should be a member of the JPD project
    or a Jira admin.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建史诗的人需要具有适当的权限，以便在目标项目中创建史诗。这个人应该是 JPD 项目的成员或 Jira 管理员。
- en: When both conditions are met, it’s easy to create an epic as a delivery ticket
    in JPD.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当满足这两个条件时，在 JPD 中创建一个作为交付票据的史诗非常容易。
- en: How to do it…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In the *Delivering ideas for development in Jira* recipe in [*Chapter 2*](B21937_02.xhtml#_idTextAnchor038),
    you saw that you can create an epic from the following two locations:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 2 章*](B21937_02.xhtml#_idTextAnchor038)的*在 Jira 中交付开发想法*食谱中，你已经看到可以从以下两个位置创建一个史诗：
- en: On the idea’s page
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在想法页面上
- en: On the **Idea** panel in a view
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图中的**想法**面板
- en: 'Let’s learn how to create an epic from the **Idea** page so that we can familiarize
    ourselves with this process:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何从**想法**页面创建一个史诗，以便熟悉这个过程：
- en: On the **Idea** page, click on the **Delivery** tab.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**想法**页面，点击**交付**标签。
- en: '![Figure 13.4 – Selecting the Delivery tab on the Idea page](img/B21937_13_04.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 在想法页面选择“交付”标签](img/B21937_13_04.jpg)'
- en: Figure 13.4 – Selecting the Delivery tab on the Idea page
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – 在想法页面选择“交付”标签
- en: 'The **Delivery** tab will expand, giving you two options:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**交付**标签将展开，给你两个选项：'
- en: Create a new delivery ticket (epic)
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的交付票据（史诗）
- en: Create a link to an existing delivery ticket
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建与现有交付票据的链接
- en: 'Selecting **Create a delivery ticket** displays text areas for the project,
    including areas for specifying the **issue type** and **summary**. These fields
    are typically prefilled, as shown here:'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择**创建交付票据**会显示项目的文本框，包括指定**问题类型**和**摘要**的区域。这些字段通常是预填的，如下所示：
- en: '![Figure 13.5 – Create a delivery ticket](img/B21937_13_05.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – 创建交付票据](img/B21937_13_05.jpg)'
- en: Figure 13.5 – Create a delivery ticket
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5 – 创建交付票据
- en: Select **Project** and **Issue type** values and fill in the desired **Summary**
    before clicking **Create**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**项目**和**问题类型**的值，并在点击**创建**之前填写所需的**摘要**。
- en: We now have an epic in Jira that captures the feature described by our idea
    in JPD.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在 Jira 中有一个史诗，捕捉了 JPD 中想法所描述的功能。
- en: Our development team cannot work on the entire scope of an epic in one go. Refining
    our epic by creating *stories* that can describe small bits of functionality that
    can be worked on to gradually accumulate the total functionality of our feature
    is the best way to move forward. So, let’s learn how to do this.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的开发团队不能一次性完成整个史诗的所有工作。通过创建*任务*，将史诗精细化，描述可以逐步完成的小功能，并逐渐积累功能性，这是推进工作的最佳方式。所以，让我们学习如何做到这一点。
- en: Creating a story in Jira
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Jira中创建任务
- en: In Jira, we can use epics as containers for the small individual pieces of functionality
    that are captured as stories. Our epic will refer to these smaller stories as
    its children.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jira中，我们可以将史诗用作小的、独立功能片段的容器，这些片段作为任务被记录。我们的史诗将这些较小的任务视为其子任务。
- en: Let’s create child stories directly from the epic.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接从史诗页面创建子任务。
- en: Getting ready
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Similar to the previous recipe, we require Jira to be installed and configured
    so that the following conditions can be met:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的步骤类似，我们需要安装和配置Jira，以便满足以下条件：
- en: There is at least one Jira project available to contain the story and it is
    connected to the epic.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少有一个Jira项目可容纳任务，并且与史诗相关联。
- en: The person creating the story has the appropriate permissions to create the
    epic and story in the target project. This same person should be a member of the
    Jira project or a Jira admin.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建任务的人拥有适当的权限，可以在目标项目中创建史诗和任务。此人应为Jira项目成员或Jira管理员。
- en: When both conditions are met, it becomes easy to create the epic and any child
    stories.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当满足两个条件时，创建史诗和子任务变得容易。
- en: How to do it…
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'You can create a child story that links to the epic at two locations:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在两个位置创建一个子任务，并将其与史诗相关联：
- en: On the page for the epic
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在史诗页面
- en: On the **Timeline** view
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**时间轴**视图中
- en: Let’s look at creating child stories from each location.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看从每个位置创建子任务的过程。
- en: Creating a child story from the epic page
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从史诗页面创建子任务
- en: Epics are generally too large for a single development team to handle in a single
    Sprint. As the saying goes, you eat an elephant one bite at a time.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 史诗通常太大，单个开发团队无法在一次Sprint中处理。正如那句老话所说，一次吃一口大象。
- en: In Jira, this is done by creating child stories. Let’s see how to do this from
    the epic page.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jira中，这是通过创建子任务来完成的。让我们看看如何在史诗页面上执行此操作。
- en: One of the ways to get to an epic page is to select the **Issues** page from
    the **Project** sidebar.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取史诗页面的其中一种方式是从**项目**侧边栏选择**问题**页面。
- en: '![Figure 13.6 – Selecting Issues from the Project sidebar](img/B21937_13_06.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – 从项目侧边栏选择问题](img/B21937_13_06.jpg)'
- en: Figure 13.6 – Selecting Issues from the Project sidebar
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 – 从项目侧边栏选择问题
- en: Set the filters of interest to limit the search. When you see the epic, click
    on its **Key** or **Summary**.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置相关的筛选条件以限制搜索范围。当你看到史诗时，点击它的**关键字**或**摘要**。
- en: Once on the epic page, click on the **Add a child** **issue** button.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入史诗页面后，点击**添加子任务**按钮。
- en: '![Figure 13.7 – Add a child issue](img/B21937_13_07.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图13.7 – 添加子任务](img/B21937_13_07.jpg)'
- en: Figure 13.7 – Add a child issue
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 – 添加子任务
- en: In the **Child issues** section, select the issue type (**Story** for user stories),
    fill in a summary in the **What needs to be done** area, and click **Create**.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**子任务**部分，选择问题类型（**故事**用于用户故事），在**需要完成的工作**区域填写摘要，并点击**创建**。
- en: '![Figure 13.8 – Creating a child issue](img/B21937_13_08.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图13.8 – 创建子任务](img/B21937_13_08.jpg)'
- en: Figure 13.8 – Creating a child issue
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8 – 创建子任务
- en: The parent epic now has a story linked as a child.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，父史诗已经有一个任务作为子任务进行了关联。
- en: Creating a child story in the Timeline view
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在时间轴视图中创建子任务
- en: The **Timeline** view shows the issues of a project laid out against time to
    determine the overall progress of all the work that a project does. An epic may
    be placed in the timeline with an expected start and due date. Child stories can
    be created and planned for periods between an epic’s expected start and due date.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间轴**视图将项目的问题按时间顺序展示，以确定项目中所有工作的总体进展。史诗可以放置在时间轴上，并设置预期的开始日期和截止日期。子任务可以在史诗的预期开始日期和截止日期之间创建并进行规划。'
- en: 'To create a child story of an epic, perform the following steps in the **Timeline**
    view of your Jira project:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jira项目的**时间轴**视图中执行以下步骤来创建史诗的子任务：
- en: To get to the **Timeline** view, select **Timeline** in the **Project** sidebar.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要进入**时间轴**视图，请在**项目**侧边栏中选择**时间轴**。
- en: '![Figure 13.9 – Selecting Timeline](img/B21937_13_09.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图13.9 – 选择时间轴](img/B21937_13_09.jpg)'
- en: Figure 13.9 – Selecting Timeline
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.9 – 选择时间线
- en: Hover over the epic until a plus sign (**+**) appears.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在史诗上，直到出现加号（**+**）。
- en: Select the issue type from the second dropdown and fill in the **What needs
    to be done?** area to populate the Summary. Press *Enter* when you’re finished.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从第二个下拉菜单中选择任务类型，并填写**需要做什么？**区域来填充概要。完成后按*Enter*键。
- en: '![Figure 13.10 – Entering a child story in the Timeline view](img/B21937_13_10.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.10 – 在时间线视图中输入子故事](img/B21937_13_10.jpg)'
- en: Figure 13.10 – Entering a child story in the Timeline view
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.10 – 在时间线视图中输入子故事
- en: A child story will now appear below the parent epic.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，子故事将出现在父级史诗下方。
- en: Creating a code change in Bitbucket
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Bitbucket 中创建代码更改
- en: At this point, we are ready to begin developing our story in Jira. Let’s say
    you’re on a Scrum team and the story was selected for the upcoming sprint or that
    capacity opened up on your Kanban team to move the story from the backlog. Regardless,
    it’s time to start development.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们已准备好开始在 Jira 中开发我们的故事。假设你在一个 Scrum 团队中，且该故事已被选为下一个 sprint，或者你的 Kanban 团队有空余容量可以将该故事从待办事项中移出。不管怎样，现在是时候开始开发了。
- en: This recipe will have us move from Jira, where the story is planned and designed,
    to a Git-based tool, where we will create and store our implementation. This is
    where our **continuous integration and continuous Deployment** (**CI/CD**) pipeline
    will start.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个步骤将指导我们从 Jira（在这里进行故事的规划和设计）转到基于 Git 的工具（在这里我们将创建并存储实现）。这是我们的**持续集成与持续部署**（**CI/CD**）管道的起点。
- en: While the instructions here apply to Jira connected to a Bitbucket repository,
    this will work for any Git-based server tool, such as GitHub or GitLab, as we
    saw in [*Chapter 4*](B21937_04.xhtml#_idTextAnchor072).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这里的说明适用于连接到 Bitbucket 仓库的 Jira，但对于任何基于 Git 的服务器工具，如 GitHub 或 GitLab，这同样适用，正如我们在[*第四章*](B21937_04.xhtml#_idTextAnchor072)中所看到的。
- en: Getting ready
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'One thing we need to make sure we have for this recipe is a Bitbucket workspace
    that’s been created with a Bitbucket repository. This process was explained in
    [*Chapter 5*](B21937_05.xhtml#_idTextAnchor087). There, we set up Bitbucket by
    performing the following steps:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们需要确保有一个已创建的 Bitbucket 工作区，并且有一个 Bitbucket 仓库。这个过程在[*第五章*](B21937_05.xhtml#_idTextAnchor087)中有说明。在那里，我们通过以下步骤设置了
    Bitbucket：
- en: First, we created a Bitbucket workspace. If also desired, we created a project.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们创建了一个 Bitbucket 工作区。如果需要的话，我们还创建了一个项目。
- en: Then, we created a Bitbucket repository.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们创建了一个 Bitbucket 仓库。
- en: 'Now that we’ve created our workspace and repository, we need to connect it
    to our Jira project. We learned how to connect our Jira project to a Bitbucket
    repository in [*Chapter 1*](B21937_01.xhtml#_idTextAnchor019). There, we performed
    the following steps:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了工作区和仓库，我们需要将其连接到我们的 Jira 项目。我们在[*第一章*](B21937_01.xhtml#_idTextAnchor019)中学习了如何将
    Jira 项目连接到 Bitbucket 仓库。在那里，我们执行了以下步骤：
- en: First, we selected **Tool Chain** under **Project settings** as a Jira project
    administrator.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，作为 Jira 项目管理员，我们选择了**项目设置**下的**工具链**。
- en: Then, we selected the **Build** section on the **Toolchain** page.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们在**工具链**页面上选择了**构建**部分。
- en: On the **Toolchain** page, we clicked **Add**.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**工具链**页面，我们点击了**添加**。
- en: From here, we selected **Bitbucket** as the repository provider.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们选择了**Bitbucket**作为仓库提供者。
- en: Finally, we selected the repository to add and clicked **Add repository**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们选择了要添加的仓库并点击了**添加仓库**。
- en: We are now ready to start development with a Jira project connected to a Bitbucket
    repository.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好开始开发，前提是 Jira 项目已连接到 Bitbucket 仓库。
- en: How to do it…
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: To begin development, we must create a branch in Git to place new or changed
    files. If our Git repository is connected to our Jira project, we can create the
    branch directly from Jira and the branch will be linked to the issue describing
    the context.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始开发，我们必须在 Git 中创建一个分支来存放新的或更改过的文件。如果我们的 Git 仓库已连接到 Jira 项目，我们可以直接从 Jira 创建分支，且该分支将与描述上下文的任务关联。
- en: 'To create this branch from the Jira story, perform the following steps:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Jira 任务中创建该分支，请执行以下步骤：
- en: 'Look for the **Development** section of the Jira issue. This set of fields
    notes the branches, commits, and pull requests associated with the Jira issue.
    The following screenshot shows where we can find these **Development** fields:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 寻找 Jira 任务中的**开发**部分。该字段组记录了与 Jira 任务相关的分支、提交和拉取请求。以下截图显示了我们可以在哪里找到这些**开发**字段：
- en: '![Figure 13.11 – Development information](img/B21937_13_11.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.11 – 开发信息](img/B21937_13_11.jpg)'
- en: Figure 13.11 – Development information
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11 – 开发信息
- en: 'To create a branch, click the **Create branch** link. You’ll be taken to a
    page that allows you to configure the branch of the repository, the type of branch,
    and the branch’s name. This can be seen in the following screenshot:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建分支，点击**创建分支**链接。您将被带到一个页面，可以在该页面上配置仓库的分支、分支类型和分支名称。以下截图显示了这一过程：
- en: '![Figure 13.12 – Create branch](img/B21937_13_12.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.12 – 创建分支](img/B21937_13_12.jpg)'
- en: Figure 13.12 – Create branch
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.12 – 创建分支
- en: 'Click `git checkout` on your local repository copy, as shown here:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的本地仓库副本上点击`git checkout`，如下所示：
- en: '![Figure 13.13 – Branch page on Bitbucket](img/B21937_13_13.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.13 – Bitbucket上的分支页面](img/B21937_13_13.jpg)'
- en: Figure 13.13 – Branch page on Bitbucket
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.13 – Bitbucket上的分支页面
- en: With that, you’ve used the Jira-Bitbucket integration to connect a Jira issue
    to a Bitbucket branch so that you can start development.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样操作，您已使用Jira-Bitbucket集成将Jira问题与Bitbucket分支连接，从而可以开始开发。
- en: Committing changes in Bitbucket/Start Bitbucket Pipeline Build
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Bitbucket中提交更改/启动Bitbucket管道构建
- en: At the moment, we’re performing implementation in our development process. We
    make changes in our code and commit those changes in Bitbucket. Once we make a
    commit against a Bitbucket repository, we want Bitbucket Pipelines to start a
    CI build that includes any testing and security scans.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们正在进行开发过程中的实现。我们对代码进行更改，并将这些更改提交到Bitbucket。一旦我们对Bitbucket仓库进行提交，我们希望Bitbucket
    Pipelines启动CI构建，包括任何测试和安全扫描。
- en: Getting ready
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Place the code we have in the `Chapter13` folder of this book’s GitHub repository
    into the Bitbucket repository that you created for the previous recipe. This also
    includes copying the `bitbucket-pipelines.yml` file and making sure it is at the
    root level of your repository.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们在本书GitHub仓库中`Chapter13`文件夹中的代码放入您为前一节创建的Bitbucket仓库中。这还包括复制`bitbucket-pipelines.yml`文件，并确保它位于仓库的根目录。
- en: How to do it…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'We will be making changes directly on the Bitbucket UI, not remotely. Once
    we make a commit, the Bitbucket pipeline should execute. To put this process in
    motion, perform the following steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Bitbucket用户界面直接进行更改，而不是远程操作。一旦提交，Bitbucket管道应当执行。为了启动这个过程，请执行以下步骤：
- en: On the Bitbucket repository page, select **Source** from the repository sidebar.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Bitbucket仓库页面，选择仓库侧边栏中的**源代码**。
- en: '![Figure 13.14 – Selecting source](img/B21937_13_14.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.14 – 选择源代码](img/B21937_13_14.jpg)'
- en: Figure 13.14 – Selecting source
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.14 – 选择源代码
- en: In the **Source** window, open the branch pulldown and select the branch you
    created in the previous recipe.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**源代码**窗口中，打开分支下拉菜单，选择您在前一节中创建的分支。
- en: '![Figure 13.15 – Selecting a branch](img/B21937_13_15.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.15 – 选择分支](img/B21937_13_15.jpg)'
- en: Figure 13.15 – Selecting a branch
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.15 – 选择分支
- en: Select the file you wish to edit. If the file is nested, select the folder first.
    In this case, we will edit `index.js`.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您希望编辑的文件。如果文件是嵌套的，请先选择文件夹。在本例中，我们将编辑`index.js`。
- en: '![Figure 13.16 – Selecting a file to edit](img/B21937_13_16.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.16 – 选择要编辑的文件](img/B21937_13_16.jpg)'
- en: Figure 13.16 – Selecting a file to edit
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.16 – 选择要编辑的文件
- en: In the editor page for the `index.js` file, select **Edit**.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.js`文件的编辑页面，选择**编辑**。
- en: '![Figure 13.17 – Selecting Edit](img/B21937_13_17.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.17 – 选择编辑](img/B21937_13_17.jpg)'
- en: Figure 13.17 – Selecting Edit
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.17 – 选择编辑
- en: Make your changes. When your changes are complete, select **Commit** at the
    bottom of the **Edit** page to add and track your changes in Git.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成更改后，选择**提交**，将更改添加并跟踪到Git中。
- en: '![Figure 13.18 – Commit](img/B21937_13_18.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.18 – 提交](img/B21937_13_18.jpg)'
- en: Figure 13.18 – Commit
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.18 – 提交
- en: In the modal, provide a commit message and select **Commit**. For the commit
    to be linked to Jira, the commit message must start with the issue ID of the relevant
    Jira issue.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出框中，提供提交信息并选择**提交**。为了使提交与Jira关联，提交信息必须以相关Jira问题的ID开头。
- en: Once the commit occurs, Bitbucket Pipelines should execute, running through
    the test, scanning, and deployment steps found in `bitbucket-pipelines.yml`. You
    can view a deployment run and its progress by selecting **Pipelines** in the repository
    sidebar.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦提交完成，Bitbucket Pipelines应该会执行，执行包括测试、扫描和部署步骤在内的`bitbucket-pipelines.yml`文件中的内容。您可以通过在仓库侧边栏中选择**管道**来查看部署过程及其进度。
- en: Now that our pipeline is working, let’s enhance it by integrating Snyk, which
    will perform security scanning and move our process more to **DevSecOps**.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的流水线正在运行，让我们通过集成Snyk来增强它，这将执行安全扫描并将我们的流程更多地移向**DevSecOps**。
- en: Execute Snyk scanning through Bitbucket Pipelines
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Bitbucket Pipelines执行Snyk扫描
- en: Snyk is one of several security tools that can be tightly integrated with Bitbucket
    and Bitbucket Pipelines. This tight integration allows for a Snyk scan to be executed
    to look for security vulnerabilities as part of testing when it is a step in a
    Bitbucket pipeline.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Snyk是几个可以与Bitbucket和Bitbucket Pipelines紧密集成的安全工具之一。这种紧密集成允许在测试的一部分中执行Snyk扫描以查找安全漏洞，当它是Bitbucket流水线中的一个步骤时。
- en: Let’s learn how to set up this integration.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何设置这个集成。
- en: Getting ready
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Integration between Snyk and Bitbucket takes the following forms:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Snyk与Bitbucket的集成采用以下形式：
- en: Snyk is set up as a security provider in Bitbucket so that automated scanning
    can occur on the repository and its results appear in the **Security** section
    of the repository sidebar.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snyk被设置为Bitbucket的安全提供者，以便在存储库上执行自动化扫描，并在存储库侧边栏的**安全**部分中显示其结果。
- en: Snyk pipes can execute Snyk scans as part of a Bitbucket Pipelines execution.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snyk管道可以作为Bitbucket Pipelines执行的一部分执行Snyk扫描。
- en: Let’s look at setting this up.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看如何设置这个。
- en: Setting up Snyk as a security provider
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将Snyk设置为安全提供者
- en: 'We’ll start by setting up Snyk as a security provider for Bitbucket. To do
    that, perform the following steps:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从为Bitbucket设置Snyk作为安全提供者开始。为此，请执行以下步骤：
- en: In your Bitbucket repository, select **Security** from the repository sidebar.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Bitbucket存储库中，从存储库侧边栏中选择**安全**。
- en: '![Figure 13.19 – Security](img/B21937_13_19.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图13.19 – 安全](img/B21937_13_19.jpg)'
- en: Figure 13.19 – Security
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.19 – 安全
- en: If you don’t have a Snyk account, select **Install Snyk** and set up a Snyk
    account.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您没有Snyk帐户，请选择**安装Snyk**并设置Snyk帐户。
- en: A modal will appear, asking you to request access to the entire workspace. Select
    **Allow** to proceed with integrating Snyk with Bitbucket.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个模态窗口，询问您是否请求访问整个工作区。选择**允许**以继续将Snyk集成到Bitbucket中。
- en: '![Figure 13.20 – Integrating Snyk with Bitbucket](img/B21937_13_20.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图13.20 – 将Snyk与Bitbucket集成](img/B21937_13_20.jpg)'
- en: Figure 13.20 – Integrating Snyk with Bitbucket
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.20 – 将Snyk与Bitbucket集成
- en: Snyk will then ask you to log in or create a new Snyk account. Signing up sets
    you up for a free trial that moves you to a free plan when the trial period is
    over. Press **Sign up or Log in** to create or enter your Snyk account.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，Snyk将要求您登录或创建新的Snyk帐户。注册将使您享受免费试用期，试用期结束后，您将转入免费计划。按下**注册或登录**创建或输入您的Snyk帐户。
- en: 'Once you have set up your account and integrated it with Bitbucket Cloud, your
    repositories will have the following section (annotated) in the repository sidebar:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置好你的帐户并与Bitbucket Cloud集成后，你的存储库将在存储库侧边栏中包含以下部分（已注释）：
- en: '![Figure 13.21 – Snyk security](img/B21937_13_21.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图13.21 – Snyk安全](img/B21937_13_21.jpg)'
- en: Figure 13.21 – Snyk security
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.21 – Snyk安全
- en: Importing repositories into Snyk and setting up Snyk projects will allow you
    to perform regular scans and receive notifications regarding any vulnerabilities
    that have been discovered. We also discussed running Snyk as part of the pipeline
    by using the Snyk Pipe. Let’s learn that’s done.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 将存储库导入到Snyk并设置Snyk项目，您可以定期执行扫描并接收有关发现的任何漏洞的通知。我们还讨论了如何通过使用Snyk Pipe将Snyk作为流水线的一部分来运行。让我们学习如何实现这一点。
- en: Setting up the Snyk Pipe
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置Snyk Pipe
- en: 'We can add a step to perform security scans with Snyk in our `bitbucket-pipelines.yml`
    file. We originally covered this in [*Chapter 6*](B21937_06.xhtml#_idTextAnchor103);
    we are reinforcing the necessary steps here:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`bitbucket-pipelines.yml`文件中添加一个步骤，以使用Snyk执行安全扫描。我们最初在[*第6章*](B21937_06.xhtml#_idTextAnchor103)中介绍了这一点；在这里我们再次强调必要的步骤：
- en: 'Open the `bitbucket-pipelines.yml` file so that you can edit it in the Bitbucket
    UI. Editing the file should reveal the Bitbucket Pipelines editor, as shown in
    the following screenshot:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`bitbucket-pipelines.yml`文件，以便您可以在Bitbucket UI中进行编辑。编辑文件应该显示Bitbucket Pipelines编辑器，如下截图所示：
- en: '![Figure 13.22 – Pipelines editor](img/B21937_13_22.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图13.22 – 流水线编辑器](img/B21937_13_22.jpg)'
- en: Figure 13.22 – Pipelines editor
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.22 – 流水线编辑器
- en: 'Add the following code snippet as its own step in the `bitbucket-pipelines.yml`
    file. To get the Snyk token, go to the **API Token** section of **Account settings**
    for your Snyk account and save it as a secure repository variable:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码片段添加为 `bitbucket-pipelines.yml` 文件中的独立步骤。要获取 Snyk 令牌，请进入 Snyk 账户的**API
    令牌**部分，并将其保存为安全的仓库变量：
- en: '[PRE0]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Commit your changes to the `bitbucket-pipelines.yml` file.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将更改提交到`bitbucket-pipelines.yml`文件。
- en: With that, Snyk scans have been set up as a step in Bitbucket Pipelines.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一来，Snyk 扫描已被设置为 Bitbucket Pipelines 中的一步。
- en: Now that Snyk has been configured, it’s easy to execute Snyk scans in our pipeline.
    Let’s look into the various methods for doing so.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Snyk 已配置完成，我们可以轻松地在管道中执行 Snyk 扫描。让我们来看看执行 Snyk 扫描的不同方法。
- en: How to do it…
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Now that we’ve configured Snyk with Bitbucket, let’s learn how to execute a
    Snyk scan:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将 Snyk 配置与 Bitbucket 连接，接下来让我们学习如何执行 Snyk 扫描：
- en: Because any commit will automatically execute the pipeline, place your step
    in a commonly used branch or the default setting so that a Snyk scan will execute.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为任何提交都会自动执行管道，所以将你的步骤放在常用的分支或默认设置中，这样就会执行 Snyk 扫描。
- en: If you know in which pipeline you placed the Snyk Pipe, you can execute that
    pipeline manually by selecting the branch, commit, or tag, selecting that pipeline,
    and clicking **Run**. This was explained in the *Manual execution* recipe in [*Chapter
    6*](B21937_06.xhtml#_idTextAnchor103).
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你知道将 Snyk Pipe 放入了哪个管道，你可以通过选择分支、提交或标签，选择该管道并点击**运行**来手动执行该管道。此过程在[*第 6 章*](B21937_06.xhtml#_idTextAnchor103)的*手动执行*一文中有详细说明。
- en: Next, we’ll consider various scenarios where if the tests pass, we move from
    CI to CD.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将考虑各种场景：如果测试通过，我们将从 CI 过渡到 CD。
- en: Displaying Bitbucket Pipeline Build Status in Compass
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Compass 中显示 Bitbucket Pipeline 构建状态
- en: Compass organizes development into components and displays the status of these
    components. Events that affect these components include builds and deployments.
    Compass can gather information from Jira and Bitbucket and present it in a single
    interface.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Compass 将开发工作组织成组件，并显示这些组件的状态。影响这些组件的事件包括构建和部署。Compass 可以从 Jira 和 Bitbucket
    收集信息，并在一个界面中展示。
- en: In this recipe, we will make changes in Bitbucket and see their effects in Compass.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在本篇中，我们将在 Bitbucket 中进行更改，并查看其在 Compass 中的影响。
- en: Getting ready
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'If you haven’t already done so, you need to connect Bitbucket to Compass. Instructions
    for doing so can be found in the *Integrating Compass with Bitbucket Cloud* recipe
    in [*Chapter 11*](B21937_11.xhtml#_idTextAnchor214). Another way administrators
    can connect Bitbucket to Compass comes about when initially installing Compass.
    Let’s see what can be done at this time:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有完成此操作，你需要将 Bitbucket 连接到 Compass。如何操作的说明可以在[*第 11 章*](B21937_11.xhtml#_idTextAnchor214)的*将
    Compass 与 Bitbucket Cloud 集成*一文中找到。管理员在最初安装 Compass 时，也可以通过另一种方式将 Bitbucket 连接到
    Compass。让我们看看此时可以进行哪些操作：
- en: Compass identifies if Bitbucket is part of the cloud organization. If it finds
    Bitbucket repositories, it will offer to map them as Compass components. Verify
    that Compass has found the desired Bitbucket project.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Compass 会识别 Bitbucket 是否是云组织的一部分。如果它发现了 Bitbucket 仓库，它将提供将其映射为 Compass 组件的选项。确认
    Compass 已找到所需的 Bitbucket 项目。
- en: '![Figure 13.23 – Importing repositories as Compass components](img/B21937_13_23.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.23 – 将仓库导入为 Compass 组件](img/B21937_13_23.jpg)'
- en: Figure 13.23 – Importing repositories as Compass components
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.23 – 将仓库导入为 Compass 组件
- en: At this point, you will have to allow Compass to connect with Bitbucket. To
    do so, click the **Grant** **access** button.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，你需要允许 Compass 连接到 Bitbucket。为此，点击**授予** **访问权限**按钮。
- en: '![Figure 13.24 – Authorizing Compass](img/B21937_13_24.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.24 – 授权 Compass](img/B21937_13_24.jpg)'
- en: Figure 13.24 – Authorizing Compass
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.24 – 授权 Compass
- en: Once authorization has been completed, you can view information about your Bitbucket
    repositories since they’ve been mapped as Compass components.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 授权完成后，你可以查看关于 Bitbucket 仓库的信息，因为它们已经被映射为 Compass 组件。
- en: '![Figure 13.25 – Compass components](img/B21937_13_25.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.25 – Compass 组件](img/B21937_13_25.jpg)'
- en: Figure 13.25 – Compass components
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.25 – Compass 组件
- en: How to do it…
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Now that our Bitbucket repositories have been mapped as Compass components,
    let’s see what happens in Compass when we make changes in Bitbucket. For this
    visualization, it may be beneficial to have Compass and Bitbucket on separate
    browser tabs or browser windows:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的 Bitbucket 仓库已被映射为 Compass 组件，让我们看看在 Bitbucket 中进行更改时 Compass 会发生什么。为了方便查看，可能需要将
    Compass 和 Bitbucket 打开在不同的浏览器标签页或窗口中：
- en: In the **Compass** tab or window, set the component that corresponds to your
    Bitbucket repository. Click **Activity** to view recent activity for the component.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Compass**选项卡或窗口中，设置与您的 Bitbucket 仓库对应的组件。点击**活动**以查看该组件的最近活动。
- en: '![Figure 13.26 – Selecting Activity for a component](img/B21937_13_26.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.26 – 选择组件的活动](img/B21937_13_26.jpg)'
- en: Figure 13.26 – Selecting Activity for a component
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.26 – 选择组件的活动
- en: In the **Bitbucket** tab, make a change in the repository. Finalize this by
    clicking the **Commit** button in the editor.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Bitbucket**选项卡中，对仓库进行更改。点击编辑器中的**提交**按钮来完成此操作。
- en: In the modal, enter a commit message and other required information. Click **Commit**
    to commit the change.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出框中，输入提交信息和其他所需信息。点击**提交**以提交更改。
- en: In Bitbucket, go to the **Pipelines** view to confirm that a pipeline has been
    executed.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Bitbucket 中，进入**Pipelines**视图，确认管道已经执行。
- en: '![Figure 13.27 – Viewing pipeline executions](img/B21937_13_27.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.27 – 查看管道执行情况](img/B21937_13_27.jpg)'
- en: Figure 13.27 – Viewing pipeline executions
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.27 – 查看管道执行情况
- en: Go to the browser tab where Compass is running. On the **Activity** view of
    the component that’s been mapped to the Bitbucket repository, confirm that the
    deployment occurred.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 Compass 正在运行的浏览器标签页。在映射到 Bitbucket 仓库的组件的**活动**视图中，确认部署已经发生。
- en: '![Figure 13.28 – Deployments seen in Compass](img/B21937_13_28.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.28 – 在 Compass 中看到的部署](img/B21937_13_28.jpg)'
- en: Figure 13.28 – Deployments seen in Compass
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.28 – 在 Compass 中看到的部署
- en: With that, we’ve confirmed that actions in Bitbucket will show up in Compass.
    This information includes deployments.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 至此，我们已确认 Bitbucket 中的操作会显示在 Compass 中。这些信息包括部署记录。
- en: In our sample scenario, our development team will get the same notifications
    as operations on any alerts. Let’s see how to do that.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例场景中，我们的开发团队将与运维团队接收相同的警报通知。我们来看看如何做到这一点。
- en: Creating an Opsgenie alert for the Jira project
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Jira 项目创建 Opsgenie 警报
- en: In the *Setting up Opsgenie teams* recipe in [*Chapter 12*](B21937_12.xhtml#_idTextAnchor240),
    we looked at setting up Opsgenie. This allows us to create teams and notification
    schedules that will react when an alert occurs.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第12章*](B21937_12.xhtml#_idTextAnchor240)的*设置 Opsgenie 团队*食谱中，我们学习了如何设置 Opsgenie。这使我们能够创建团队和通知计划，当警报发生时，系统会做出反应。
- en: Getting ready
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'If you didn’t connect your Jira project to Opsgenie in [*Chapter 12*](B21937_12.xhtml#_idTextAnchor240)
    or have created a new Jira project, follow these steps:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在[*第12章*](B21937_12.xhtml#_idTextAnchor240)中没有将您的 Jira 项目连接到 Opsgenie，或者创建了新的
    Jira 项目，请按照以下步骤操作：
- en: In your project, select **Project settings** and then select **Toolchain**.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的项目中，选择**项目设置**，然后选择**Toolchain**。
- en: On the **Toolchain** page, expand the **Operate** section and select **+ Add**
    **on-call team**.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Toolchain**页面中，展开**操作**部分并选择**+ 添加**值班团队**。
- en: '![Figure 13.29 – Add on-call team](img/B21937_13_29.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.29 – 添加值班团队](img/B21937_13_29.jpg)'
- en: Figure 13.29 – Add on-call team
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.29 – 添加值班团队
- en: In the modal, type in the name of your team. As you type, the action will appear
    as a dropdown with the team name you enter. Select the **Create…** drop-down option
    that appears below. After the new team name is visible as a dropdown, as shown
    in the following screenshot, click **Create**.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出框中，输入团队名称。在输入过程中，操作将以下拉菜单形式出现，显示您输入的团队名称。选择下拉菜单中显示的**创建…**选项。新团队名称显示为下拉菜单后，如下图所示，点击**创建**。
- en: '![Figure 13.30 – Add on-call team](img/B21937_13_30.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.30 – 添加值班团队](img/B21937_13_30.jpg)'
- en: Figure 13.30 – Add on-call team
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.30 – 添加值班团队
- en: Hover over the team you created. Click the more actions (**…**) icon and select
    **Open** **in Opsgenie**.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在您创建的团队上。点击更多操作（**…**）图标，然后选择**在 Opsgenie 中打开**。
- en: '![Figure 13.31 – Open in Opsgenie](img/B21937_13_31.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.31 – 在 Opsgenie 中打开](img/B21937_13_31.jpg)'
- en: Figure 13.31 – Open in Opsgenie
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.31 – 在 Opsgenie 中打开
- en: 'Opsgenie will open on the team page. Look at the **On-call** section and verify
    the following:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Opsgenie 会在团队页面打开。查看**值班**部分，验证以下内容：
- en: 'The routing rule points to an escalation policy. If it doesn’t, refer to the
    *Escalation policies and rules* recipe in [*Chapter 12*](B21937_12.xhtml#_idTextAnchor240)
    to create an escalation policy and set a routing rule. An example is shown in
    the following screenshot:'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 路由规则指向一个升级策略。如果没有，请参考[*第12章*](B21937_12.xhtml#_idTextAnchor240)中的*升级策略和规则*食谱，创建一个升级策略并设置路由规则。下面的截图展示了一个示例：
- en: '![Figure 13.32 – Routing rules and Escalation policies](img/B21937_13_32.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.32 – 路由规则和升级策略](img/B21937_13_32.jpg)'
- en: Figure 13.32 – Routing rules and Escalation policies
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.32 – 路由规则和升级策略
- en: 'A team member has been identified in **On-call schedules**. This is shown in
    the following screenshot:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**值班安排**中已识别出一位团队成员。这在以下截图中展示：
- en: '![Figure 13.33 – On-call schedules](img/B21937_13_33.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.33 – 值班安排](img/B21937_13_33.jpg)'
- en: Figure 13.33 – On-call schedules
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.33 – 值班安排
- en: If you have members on your team, and your team has an on-call schedule with
    team members identified and a routing rule that points to an escalation policy,
    you should be all set to receive alerts directed to your team. Let’s learn how
    to test this by creating an alert in Opsgenie.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的团队成员有值班安排，并且已经识别了团队成员，并且路由规则指向了升级策略，那么你应该能够接收到指向你团队的警报。让我们通过在 Opsgenie 中创建警报来学习如何进行测试。
- en: How to do it…
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We are going to directly create an alert in Opsgenie and verify that notifications
    are sent to the team member on-call. Normally, Opsgenie receives alerts through
    integrations with **Jira Service Management** or DevOps monitoring tools. We are
    performing this test to verify our simulation.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将直接在 Opsgenie 中创建一个警报，并验证通知是否发送给值班团队成员。通常，Opsgenie 通过与**Jira 服务管理**或 DevOps
    监控工具的集成来接收警报。我们进行此测试是为了验证我们的模拟过程。
- en: 'To create the alert, perform the following steps in Opsgenie:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Opsgenie 中执行以下步骤来创建警报：
- en: In Opsgenie, go to the **Alerts** item in the menu bar.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Opsgenie 中，点击菜单栏中的**警报**项。
- en: '![Figure 13.34 – Alerts](img/B21937_13_34.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.34 – 警报](img/B21937_13_34.jpg)'
- en: Figure 13.34 – Alerts
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.34 – 警报
- en: Select **Create alert** on the **Alerts** page.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**警报**页面上选择**创建警报**。
- en: '![Figure 13.35 – Create alert](img/B21937_13_35.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.35 – 创建警报](img/B21937_13_35.jpg)'
- en: Figure 13.35 – Create alert
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.35 – 创建警报
- en: In the modal, select **Default API** for **API integration** and search for
    your team in the **Responders** area. Once you have selected these options, fill
    in **Alert message** and click **Create**.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的窗口中，选择**默认 API**作为**API 集成**，并在**响应者**区域搜索你的团队。选择这些选项后，填写**警报消息**并点击**创建**。
- en: '![Figure 13.36 – Setting up and creating a new alert](img/B21937_13_36.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.36 – 设置并创建新警报](img/B21937_13_36.jpg)'
- en: Figure 13.36 – Setting up and creating a new alert
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.36 – 设置并创建新警报
- en: Verify that the alert has been created in Opsgenie.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证警报是否已在 Opsgenie 中创建。
- en: '![Figure 13.37 – Alert in Opsgenie](img/B21937_13_37.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.37 – Opsgenie 中的警报](img/B21937_13_37.jpg)'
- en: Figure 13.37 – Alert in Opsgenie
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.37 – Opsgenie 中的警报
- en: You can also go to the email tied to the team member who’s on-call and verify
    that an email notification has been sent.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以查看与值班团队成员相关联的电子邮件，确认是否已发送电子邮件通知。
- en: '![Figure 13.38 – Alert email notification](img/B21937_13_38.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.38 – 警报电子邮件通知](img/B21937_13_38.jpg)'
- en: Figure 13.38 – Alert email notification
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.38 – 警报电子邮件通知
- en: As we can see, developers can receive notifications about incidents as well
    as from operations people, allowing developers and operations to work together
    on production problems. If the root cause is found to be a bug, developers can
    add fixes by creating bugfix branches for development. We’ll see how that process
    may occur in the next recipe.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，开发人员可以接收来自事故和运维人员的通知，这使得开发人员和运维人员能够一起解决生产问题。如果根本原因被发现是 bug，开发人员可以通过创建
    bugfix 分支来添加修复。我们将在下一个示例中看到这个过程如何进行。
- en: Creating a bugfix branch
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 bugfix 分支
- en: A problem has come up! QA has discovered a bug in the new release. They wrote
    a bug in Jira that has been assigned to you. What you have to do is create a branch
    in Bitbucket that will contain the solution and connect it to the Jira issue.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 出现了问题！QA 在新版本中发现了一个 bug。他们在 Jira 中写下了一个 bug，并将其分配给你。你需要做的是在 Bitbucket 中创建一个分支，包含解决方案，并将其与
    Jira 问题连接起来。
- en: We will simulate the preceding scenario in this recipe. The first thing you
    must do is create the bug in Jira.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本示例中模拟前述场景。你首先需要做的是在 Jira 中创建 bug。
- en: Getting ready
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Our first stop is to use Jira to create the bug. To do this, perform the following
    steps:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是使用 Jira 创建 bug。为此，请执行以下步骤：
- en: Select the **Create** button at the top of the Jira screen.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jira 屏幕顶部选择**创建**按钮。
- en: In the modal that appears, fill in mandatory fields such as **Summary** and
    make sure the **Project** and **Issue type** (**Bug**) fields are correct. Click
    **Create**.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的弹窗中，填写**摘要**等必填项，并确保**项目**和**问题类型**（**Bug**）字段正确。点击**创建**。
- en: Your new bug should appear in the project.
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的新 bug 应该出现在项目中。
- en: '![Figure 13.39 – New Bug](img/B21937_13_39.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.39 – 新建 Bug](img/B21937_13_39.jpg)'
- en: Figure 13.39 – New Bug
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.39 – 新的Bug
- en: With the bug created in Jira, it’s time to create the bugfix branch in Bitbucket.
    Let’s examine that further.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jira中创建了bug之后，现在是在Bitbucket中创建bug修复分支的时候了。让我们进一步检查一下。
- en: How to do it…
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何执行…
- en: 'Continuing with the same Jira project tied to the Bitbucket repository provided
    in the *Creating a code change in Bitbucket* recipe, we can easily create our
    bugfix Bitbucket branch by performing the following steps:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用与Bitbucket仓库中*在Bitbucket中创建代码更改*配方提供的相同Jira项目，我们可以通过执行以下步骤轻松地创建我们的bug修复Bitbucket分支：
- en: In our Jira bug, go to the **Development** section and select **Create branch**.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的Jira bug中，转到**开发**部分，选择**创建分支**。
- en: '![Figure 13.40 – Create branch](img/B21937_13_40.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![图13.40 – 创建分支](img/B21937_13_40.jpg)'
- en: Figure 13.40 – Create branch
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.40 – 创建分支
- en: 'A page in Bitbucket will appear as a new browser tab or window. It will have
    the following information filled in:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bitbucket中的页面将作为新的浏览器选项卡或窗口显示。它将填写以下信息：
- en: The branch name prefilled with the ID of the Jira issue
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分支名称预填写了Jira问题的ID
- en: The parent branch
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 父分支
- en: The type of branch
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分支类型
- en: The repository name
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仓库名称
- en: Ensure this information is correct and click **Create**.
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保这些信息正确，然后点击**创建**。
- en: '![Figure 13.41 – Create branch](img/B21937_13_41.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图13.41 – 创建分支](img/B21937_13_41.jpg)'
- en: Figure 13.41 – Create branch
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.41 – 创建分支
- en: The branch should appear in the **Branches** view of your repository, with available
    actions to check out onto a local environment and an area to **View source**.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的代码库中应该显示分支，具有在本地环境中检出并**查看源码**的可用操作区域。
- en: '![Figure 13.42 – Viewing the branch](img/B21937_13_42.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![图13.42 – 查看分支](img/B21937_13_42.jpg)'
- en: Figure 13.42 – Viewing the branch
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.42 – 查看分支
- en: With a branch created, we can begin development. Let’s take a closer look at
    this process.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 有了分支创建后，我们可以开始开发。让我们更详细地看看这个过程。
- en: Committing a bugfix and watching the pipeline’s execution
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交bug修复并观察流水线的执行
- en: We have been diligently troubleshooting for the root cause of our bug and we
    have developed a fix. What happens when we commit that fix to the repository?
    We want testing and scanning to occur to ensure high-quality code.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在认真排查我们的bug的根本原因，并且我们已经开发了一个修复方案。当我们将该修复提交到代码库时会发生什么？我们希望进行测试和扫描，以确保代码质量高。
- en: This requires that Bitbucket Pipelines is ready to execute when the commit occurs.
    Let’s learn how to make that possible.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这要求Bitbucket流水线在提交发生时准备好执行。让我们学习如何实现这一点。
- en: Getting ready
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The prerequisites for this recipe are identical to those for the *Committing
    changes in Bitbucket/Start Bitbucket Pipeline Build* recipe – that is, we need
    to make sure there is a `bitbucket-pipelines.yml` file in our repository and that
    it is at the root level of our repository’s directory structure.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方的先决条件与*Bitbucket提交更改/启动Bitbucket流水线生成*的配方相同——即，我们需要确保在我们的代码库中有一个`bitbucket-pipelines.yml`文件，并且它位于代码库目录结构的根目录中。
- en: How to do it…
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何执行…
- en: 'Just as with the *Committing changes in Bitbucket/Start Bitbucket Pipeline
    Build* recipe, we are going to observe the pipeline execute by performing the
    following steps:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在*Bitbucket提交更改/启动Bitbucket流水线生成*的配方中一样，我们将通过执行以下步骤来观察流水线的执行：
- en: In our bugfix branch, we must make a change in our file. We can commit our change
    by clicking **Commit** in our editor.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的bug修复分支中，我们必须在文件中进行更改。我们可以通过编辑器中的**提交**按钮提交我们的更改。
- en: In the modal, enter a value in the **Commit message** field. To have the commit
    recorded in our Jira issue, the message needs to start with the ID of our Jira
    issue. Make the necessary changes and click **Commit**.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模态框中，输入**提交消息**字段中的值。要将提交记录到我们的Jira问题中，消息需要以我们Jira问题的ID开头。进行必要的更改，然后点击**提交**。
- en: Go to the **Pipelines** view. The pipeline should be executing based on the
    most recent commit.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**流水线**视图。流水线应该根据最近的提交正在执行。
- en: '![Figure 13.43 – The Pipelines view](img/B21937_13_43.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![图13.43 – 流水线视图](img/B21937_13_43.jpg)'
- en: Figure 13.43 – The Pipelines view
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.43 – 流水线视图
- en: Click on the line corresponding to the pipeline’s execution to see the pipeline
    execution details.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击与流水线执行对应的行以查看流水线执行详细信息。
- en: '![Figure 13.44 – Pipeline execution details](img/B21937_13_44.jpg)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![图13.44 – 流水线执行详细信息](img/B21937_13_44.jpg)'
- en: Figure 13.44 – Pipeline execution details
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.44 – 流水线执行详细信息
- en: With that, we’ve learned how to execute a pipeline based on a commit from a
    bugfix branch.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们学会了如何根据bug修复分支的提交执行流水线。
