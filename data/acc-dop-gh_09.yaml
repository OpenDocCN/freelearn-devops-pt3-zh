- en: '*Chapter 7*: Running Your Workflows'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 7 章*：运行你的工作流'
- en: In this chapter, I’ll show you the different options for running your **workflows**.
    We’ll investigate hosted and self-hosted runners, and I’ll explain how you can
    tackle hybrid-cloud scenarios or hardware-in-the-loop tests using the different
    hosting options. I’ll also show you how to set up, manage, and scale self-hosted
    runners, and I’ll show you how you can approach monitoring and troubleshooting.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将向你展示运行你的**工作流**的不同选项。我们将研究托管和自托管的运行器，我将解释如何使用不同的托管选项解决混合云场景或硬件在环测试。我还会向你展示如何设置、管理和扩展自托管的运行器，并展示如何进行监控和故障排除。
- en: 'The following are the core topics that we will cover in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章将要涵盖的核心主题：
- en: Hosted runners
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管运行器
- en: Self-hosted runners
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自托管的运行器
- en: Managing access with runner groups
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行器组管理访问权限
- en: Using labels
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标签
- en: Scaling your self-hosted runners
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展你的自托管运行器
- en: Monitoring and troubleshooting
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控和故障排除
- en: Hosted runners
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 托管的运行器
- en: We already used **hosted runners** in the previous chapter. Hosted runners are
    GitHub-hosted virtual machines that can be used to run your workflows. The runners
    are available for **Linux**, **Windows**, and **macOS** operating systems.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前一章中已经使用过**托管运行器**。托管运行器是 GitHub 托管的虚拟机，可用于运行你的工作流。这些运行器支持**Linux**、**Windows**和**macOS**操作系统。
- en: Isolation and privileges
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 隔离与权限
- en: Each job in a workflow executes in a fresh instance of the virtual machine and
    is completely isolated. You have *full admin access* (**passwordless sudo** on
    Linux), and the **user account control** (**UAC**) is disabled on Windows machines.
    That means you can install any tools you might need in your workflow (this just
    comes with the price of build time).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流中的每个作业都在一个新的虚拟机实例中执行，并且是完全隔离的。你拥有*完全管理员访问权限*（在 Linux 上为**无密码 sudo**），并且在
    Windows 机器上禁用了**用户账户控制**（**UAC**）。这意味着你可以在工作流中安装任何需要的工具（这只会增加构建时间的代价）。
- en: The runner can also access **user interface** (**UI**) elements. This enables
    you to execute **UI tests** such as **Selenium** inside the runner without the
    need to do this through another virtual machine.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 运行器还可以访问**用户界面**（**UI**）元素。这使得你可以在运行器内部执行**UI 测试**，例如**Selenium**，无需通过其他虚拟机来执行这些测试。
- en: Hardware
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件
- en: 'GitHub hosts Linux and Windows runners on **Standard_DS2_v2** virtual machines
    in **Microsoft Azure**. The hardware specifications for Windows and Linux virtual
    machines are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 在**Microsoft Azure**的**Standard_DS2_v2**虚拟机上托管 Linux 和 Windows 运行器。Windows
    和 Linux 虚拟机的硬件规格如下：
- en: 2-core CPU
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 核 CPU
- en: 7 GB of RAM
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7 GB 的内存
- en: 14 GB of SSD disk space
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 14 GB 的 SSD 硬盘空间
- en: 'MacOS runners are hosted on GitHub''s macOS cloud and have the following hardware
    specifications:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MacOS 运行器托管在 GitHub 的 macOS 云上，具有以下硬件规格：
- en: 3-core CPU
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3 核 CPU
- en: 14 GB of RAM
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 14 GB 的内存
- en: 14 GB of SSD disk space
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 14 GB 的 SSD 硬盘空间
- en: Software
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件
- en: 'In *Table 7.1*, you can see a list of the currently available images:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在*表 7.1*中，你可以看到当前可用镜像的列表：
- en: '![Table 7.1 – The currently available images for hosted runners'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![表 7.1 – 当前可用的托管运行器镜像'
- en: '](img/Table_012.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Table_012.jpg)'
- en: Table 7.1 – The currently available images for hosted runners
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 表 7.1 – 当前可用的托管运行器镜像
- en: You can find the current list and all included software at [https://github.com/actions/virtual-environments](https://github.com/actions/virtual-environments).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/actions/virtual-environments](https://github.com/actions/virtual-environments)
    找到当前的列表和所有包含的软件。
- en: This is also the repository you can raise an issue in if you would like to request
    a new tool to be installed as a default tool. This repository also contains announcements
    about all major software updates on the runners, and you can use the *watch* feature
    of GitHub repositories to get notified if new releases are created.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你可以提交问题的代码库，如果你希望请求将某个工具作为默认工具安装。这个代码库还包含有关运行器所有重大软件更新的公告，你可以使用 GitHub 仓库的*watch*功能来接收新版本发布的通知。
- en: Networks
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络
- en: 'The IP addresses that are used by the hosted runners change from time to time.
    You can get the current list using the GitHub API:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 托管的运行器使用的 IP 地址会不定期变更。你可以通过 GitHub API 获取当前的列表：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: More information on this can be found at [https://docs.github.com/en/rest/reference/meta#get-github-meta-information](https://docs.github.com/en/rest/reference/meta#get-github-meta-information).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://docs.github.com/en/rest/reference/meta#get-github-meta-information](https://docs.github.com/en/rest/reference/meta#get-github-meta-information)
    查找更多信息。
- en: You can use this information if you require an allow-list to prevent access
    to your internal resources from the internet. But remember that everyone can use
    the hosted runners and execute code! Blocking other IP addresses does not make
    your resources safe. Do not oppose internal systems to these IP addresses that
    are not secured in a way that you would trust them to be accessed from the public
    internet! This means the systems must be patched and have secure authentication
    in place. If this is not the case, you have to use self-hosted runners.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要一个允许列表来防止互联网访问您的内部资源，您可以使用这些信息。但请记住，每个人都可以使用托管运行器并执行代码！阻止其他 IP 地址并不能使您的资源更安全。不要将内部系统与这些您无法信任其安全性的
    IP 地址对立！这意味着系统必须及时修补并具备安全的身份验证。如果做不到这一点，您必须使用自托管运行器。
- en: Note
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you use an *IP address allow list* for your GitHub organization or enterprise
    account, you cannot use GitHub-hosted runners and must instead use self-hosted
    runners.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您为您的 GitHub 组织或企业账户使用了 *IP 地址允许列表*，则不能使用 GitHub 托管的运行器，必须使用自托管的运行器。
- en: Pricing
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定价
- en: 'The usage of hosted runners is free for public repositories. Depending on your
    GitHub edition, you will have an allotted storage amount and monthly free build
    minutes (see *Table 7.2*):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于公共仓库，使用托管运行器是免费的。根据您的 GitHub 版本，您将获得一定的存储量和每月免费的构建分钟（见 *表 7.2*）：
- en: '![Table 7.2 – The included storage and build minutes for different GitHub editions'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![表 7.2 – 不同 GitHub 版本中包含的存储和构建分钟'
- en: '](img/Table_021.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Table_021.jpg)'
- en: Table 7.2 – The included storage and build minutes for different GitHub editions
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 表 7.2 – 不同 GitHub 版本中包含的存储和构建分钟
- en: If you have purchased **GitHub Enterprise** through your **Microsoft Enterprise
    Agreement**, you can connect your **Azure** **Subscription ID** to your GitHub
    Enterprise account. This enables you to pay for extra **GitHub Actions** usage,
    in addition to what is included with your GitHub edition.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通过 **Microsoft 企业协议** 购买了 **GitHub Enterprise**，您可以将您的 **Azure** **订阅 ID**
    连接到 GitHub Enterprise 账户。这使得您可以为额外的 **GitHub Actions** 使用付费，除此之外还包括您 GitHub 版本中提供的内容。
- en: Jobs that run on Windows and macOS runners consume more build minutes than Linux!
    Windows consumes minutes with *factor 2* and macOS with *factor 10*. That means
    using 1,000 Windows minutes would consume 2,000 of the minutes included in your
    account, whereas using 1,000 macOS minutes would consume 10,000 minutes included
    in your account.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 和 macOS 运行器上运行的作业消耗的构建分钟比 Linux 更多！Windows 消耗的分钟是 *因素 2*，而 macOS 是
    *因素 10*。这意味着使用 1,000 个 Windows 分钟将消耗您账户中 2,000 个分钟，而使用 1,000 个 macOS 分钟将消耗 10,000
    个分钟。
- en: 'That''s because the build minutes are more expensive. You can pay for additional
    minutes on top of those included in your GitHub edition. These are the build minute
    costs for each operating system:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为构建分钟的费用更高。您可以支付超出 GitHub 版本中包含的分钟的额外费用。以下是每个操作系统的构建分钟费用：
- en: 'On Linux: $0.008'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 上：$0.008
- en: 'On macOS: $0.08'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 macOS 上：$0.08
- en: 'On Windows: $0.016'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上：$0.016
- en: Tip
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: You should use as much Linux for your workflows as possible and reduce macOS
    and Windows to a minimum to reduce your build costs. Linux also has the best starting
    performance.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该尽可能多使用 Linux 进行工作流，并将 macOS 和 Windows 降到最低，以减少构建成本。Linux 还具有最佳的启动性能。
- en: The costs for additional storage are the same for all runners, which is $0.25
    per GB.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 额外存储的费用在所有运行器中都是相同的，收费为每 GB $0.25。
- en: If you are a monthly-billed customer, your account will have a default spending
    limit of $0 (USD). This prevents additional build minutes or storage from being
    used. If you pay by invoice, your account will have an unlimited spending limit
    by default.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是按月计费的客户，您的账户将默认设置为 $0（美元）的支出限额。这可以防止使用额外的构建分钟或存储空间。如果您按发票付款，您的账户将默认没有支出限额。
- en: If you configure a spending limit higher than $0, you will be billed for any
    additional minutes or storage beyond the included amounts in your account until
    the spending limit is reached.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您配置的支出限额高于 $0，您将在超过账户中包含的分钟或存储量后被计费，直到达到支出限额为止。
- en: Self-hosted runners
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自托管运行器
- en: If you need more control than GitHub-hosted runners allow for hardware, operating
    systems, software, and network access, you can host the runners yourself. **Self-hosted
    runners** can be installed on physical machines, virtual machines, or in a container.
    They can run on-premises or in any public cloud environment.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要比 GitHub 托管的 runner 提供更多的控制（例如硬件、操作系统、软件和网络访问），可以自行托管 runner。**自托管的 runner**
    可以安装在物理机器、虚拟机或容器中。它们可以在本地或任何公共云环境中运行。
- en: Self-hosted runners allow for easy migration from other build environments.
    If you already have automated builds, you just install the runner on the machines
    and your code should build. But if your build machines are still the ped-like
    machines that are manually maintained – sometimes positioned physically beyond
    the desk of a developer – then this is not a permanent solution. Keep in mind
    that building and hosting a dynamically scaling environment needs expertise and
    costs money, whether it is hosted in the cloud or on-premises. So, if you can
    use hosted runners, it is always the easier option. However, if you need a self-hosted
    solution, make sure to make it an elastically scalable solution.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 自托管的 runner 允许从其他构建环境轻松迁移。如果你已经有自动化构建，只需在机器上安装 runner，代码就应该能够构建。但如果你的构建机器仍然是手动维护的“脚踏式”机器——有时还放置在开发者桌面之外——那么这并不是一个永久解决方案。请记住，构建和托管一个动态扩展的环境需要专业知识并且耗费资金，无论它是托管在云端还是本地。因此，如果可以使用托管的
    runner，通常这是更简单的选择。然而，如果你需要一个自托管的解决方案，请确保将其设计为具有弹性可扩展的解决方案。
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Hosting your own runners enables you to build and deploy safely in your on-premises
    environment from within **GitHub Enterprise Cloud**. This allows you to run GitHub
    in a *hybrid mode* – that is, you can use GitHub Enterprise in the cloud together
    with hosted runners for basic automation and deployments to cloud environments,
    but use self-hosted runners to build or deploy applications that are hosted on-premises.
    This can be a cheaper and simpler solution than running **GitHub Enterprise Server**
    and the build environments *for all of your builds and deployments yourself*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 托管你自己的 runner 使你能够在 **GitHub Enterprise Cloud** 内的本地环境中安全地构建和部署。这使你能够以 *混合模式*
    运行 GitHub——也就是说，你可以将 GitHub Enterprise 与托管的 runner 一起使用进行基本的自动化和云环境的部署，但使用自托管的
    runner 来构建或部署托管在本地的应用程序。这可能比运行 **GitHub Enterprise Server** 和为所有构建和部署创建自己托管的构建环境更便宜、更简单。
- en: If you are depending on hardware to test your software (for example, when using
    hardware-in-the-loop tests), there is no way around using self-hosted runners.
    This is because there is no way to attach hardware to the GitHub-hosted runners.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你依赖硬件来测试软件（例如，使用硬件在回路测试时），就必须使用自托管的 runner。这是因为无法将硬件连接到 GitHub 托管的 runner
    上。
- en: The runner software
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: runner 软件
- en: The runner is open source and can be found at [https://github.com/actions/runner](https://github.com/actions/runner).
    It supports x64 processor architecture on Linux, macOS, and Windows. It also supports
    ARM64 and ARM32 architecture, but only on Linux. The runner supports many operating
    systems, including **Ubuntu**, **Red Hat Enterprise Linux** **7** or later, **Debian**
    **9** or later, **Windows** **7**/**8**/**10** and **Windows Server**, **macOS**
    **10.13** or later, and many more. For a complete list, see the documentation
    at [https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#supported-architectures-and-operating-systems-for-self-hosted-runners](https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#supported-architectures-and-operating-systems-for-self-hosted-runners).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 该 runner 是开源的，可以在 [https://github.com/actions/runner](https://github.com/actions/runner)
    上找到。它支持 Linux、macOS 和 Windows 上的 x64 处理器架构。它还支持 ARM64 和 ARM32 架构，但仅限于 Linux。该
    runner 支持多种操作系统，包括 **Ubuntu**、**Red Hat Enterprise Linux** **7** 或更高版本、**Debian**
    **9** 或更高版本、**Windows** **7**/**8**/**10** 和 **Windows Server**、**macOS** **10.13**
    或更高版本等。有关完整列表，请参见 [https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#supported-architectures-and-operating-systems-for-self-hosted-runners](https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#supported-architectures-and-operating-systems-for-self-hosted-runners)
    中的文档。
- en: The runner auto-updates itself, so you don't have to take care of this.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: runner 会自动更新，因此你无需自己管理此事。
- en: Communication between the runner and GitHub
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: runner 与 GitHub 之间的通信
- en: The runner software polls GitHub using `443`, using an outbound connection.
    It opens a connection for 50 seconds and times out if no response is received.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: runner 软件使用 `443` 端口通过出站连接轮询 GitHub。它会保持连接 50 秒，如果没有响应则超时。
- en: 'You must ensure that the machine has appropriate network access to the following
    URLs:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须确保机器可以访问以下网址：
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You don't have to open any inbound ports on your firewall. All communication
    runs through the client. If you use an IP address allow list for your GitHub organization
    or enterprise, you must add the IP address range of your self-hosted runners to
    that allow list.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您无需在防火墙上打开任何入站端口。所有通信都通过客户端进行。如果您为 GitHub 组织或企业使用 IP 地址允许列表，您必须将自托管运行器的 IP 地址范围添加到该允许列表中。
- en: Using self-hosted runners behind a proxy server
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在代理服务器后使用自托管运行器
- en: 'If you need to run the self-hosted runner behind a proxy server, you can do
    so. But be aware that this can cause a lot of problems. The runner itself can
    communicate fine – however, package management, container registries, and everything
    that is executed by the runner and needs to access resources creates an overhead.
    If you can avoid this, I advise you to do so. But if you must run the workflows
    behind a proxy server, you can configure the runner with the following environment
    variables:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要在代理服务器后运行自托管运行器，可以这样做。但请注意，这可能会导致很多问题。运行器本身可以正常通信——然而，软件包管理、容器注册表以及所有由运行器执行且需要访问资源的操作都会增加额外开销。如果您能避免这种情况，我建议您这么做。但如果您必须在代理服务器后运行工作流，您可以通过以下环境变量配置运行器：
- en: '`https_proxy`: This includes the proxy URL for HTTPS (port `443`) traffic.
    You can also include basic authentication (such as `https://user:password@proxy.local`).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`https_proxy`：此项包括 HTTPS（端口`443`）流量的代理 URL。您还可以包含基本身份验证（例如 `https://user:password@proxy.local`）。'
- en: '`http_proxy`: This includes the proxy URL for HTTP (port `80`) traffic. You
    can also include basic authentication (such as `http://user:password@proxy.local`).'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http_proxy`：此项包括 HTTP（端口`80`）流量的代理 URL。您还可以包含基本身份验证（例如 `http://user:password@proxy.local`）。'
- en: '`no_proxy`: This includes a comma-separated list of hosts that should bypass
    the proxy server.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no_proxy`：此项包括应绕过代理服务器的主机的以逗号分隔的列表。'
- en: If you change the environment variables, you have to restart the runner for
    the changes to take effect.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改环境变量，您必须重新启动运行器才能使更改生效。
- en: 'An alternative to using environment variables is to use a `.env` file. Save
    a file with the name `.env` in the application folder of the runner. After that,
    the syntax is the same as the environment variables:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用环境变量的替代方法是使用`.env`文件。在运行器的应用程序文件夹中保存一个名为`.env`的文件。之后，语法与环境变量相同：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Next, let's have a look at how to add self-hosted runners to GitHub.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看看如何将自托管运行器添加到 GitHub。
- en: Adding self-hosted runners to GitHub
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将自托管运行器添加到 GitHub
- en: 'You can add runners at different levels in GitHub: repository, organization
    and enterprise. If you add runners at the repository level, they are dedicated
    to that single repository. Organization-level runners can process jobs for multiple
    repositories in an organization and enterprise-level runners can be assigned to
    multiple organizations in your enterprise.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 GitHub 上以不同级别添加运行器：仓库、组织和企业。如果在仓库级别添加运行器，它们将专用于该单个仓库。组织级别的运行器可以处理一个组织中多个仓库的工作，而企业级别的运行器可以分配给您企业中的多个组织。
- en: 'Installing the runner and registering it on your GitHub instance is easy. Just
    go to **Settings** | **Actions** | **Runners** at the level you want to add them.
    Then, select the operating system and processor architecture (see *Figure 7.1*):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 安装运行器并将其注册到 GitHub 实例上非常简单。只需进入**设置** | **操作** | **运行器**，在您想要添加它们的级别。然后，选择操作系统和处理器架构（参见*图
    7.1*）：
- en: '![Figure 7.1 – Installing a self-hosted runner'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1 – 安装自托管运行器'
- en: '](img/B17827_07_01.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_07_01.jpg)'
- en: Figure 7.1 – Installing a self-hosted runner
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 安装自托管运行器
- en: 'This generates a script for you that does the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为您生成一个脚本，执行以下操作：
- en: Downloads and unpacks the runner
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并解压运行器
- en: Configures the runner with the corresponding values
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置运行器的相应值
- en: Starts the runner
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动运行器
- en: 'The first part of the script always creates a folder called `actions-runner`
    and then changes the working directory to that folder:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的第一部分始终创建一个名为`actions-runner`的文件夹，然后将工作目录更改为该文件夹：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Downloading the latest runner package is done on Linux and macOS with the `curl`
    command and on Windows with `Invoke-WebRequest`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 和 macOS 上，使用`curl`命令下载最新的运行器包，在 Windows 上使用`Invoke-WebRequest`：
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'For security reasons, the hash of the downloaded package is validated to ensure
    the package has not been compromised:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 出于安全原因，会验证下载包的哈希值，以确保包没有被篡改：
- en: '[PRE21]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, the runner gets extracted from the ZIP/TAR file:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行器会从 ZIP/TAR 文件中提取：
- en: '[PRE25]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The configuration is done using the `config.sh` / `config.cmd` script and the
    URL and token are automatically created by GitHub for you:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 配置通过使用 `config.sh` / `config.cmd` 脚本完成，网址和令牌由 GitHub 自动为您创建：
- en: '[PRE29]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The configuration asks for the runner group (where the default is the `Default`
    group), the name of the runner (where the default is the machine name), and additional
    labels. Default labels are applied to describe the self-hosted status, the operating
    system, and the processor architecture (for example, `self-hosted`, `Linux`, and
    `X64`, respectively). The default working folder is `_work` and should not be
    changed. On Windows, you can also choose to run the action runner as a service.
    On Linux and macOS, you have to install the service using another script after
    the configuration:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 配置会要求输入运行器组（默认是 `Default` 组）、运行器的名称（默认是机器名称）以及额外的标签。默认标签用于描述自托管状态、操作系统和处理器架构（例如，`self-hosted`、`Linux`
    和 `X64`）。默认工作文件夹是 `_work`，不应更改。在 Windows 上，您还可以选择将操作运行器作为服务运行。在 Linux 和 macOS
    上，您必须在配置后使用另一个脚本安装服务：
- en: '[PRE33]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If you don''t want to run the runner as a service, you can run it interactively
    using the `run` script:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想将运行器作为服务运行，您可以使用 `run` 脚本以交互方式运行它：
- en: '[PRE35]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If the runner is up and running, you can see it listed under **Settings** |
    **Actions** | **Runners** with its status and tags (see *Figure 7.2*):'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果运行器正在运行，您可以在**设置** | **操作** | **运行器**下看到它，并查看其状态和标签（见*图 7.2*）：
- en: '![Figure 7.2 – Self-hosted runners with their tags and status'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – 自托管运行器及其标签和状态'
- en: '](img/B17827_07_02.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_07_02.jpg)'
- en: Figure 7.2 – Self-hosted runners with their tags and status
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – 自托管运行器及其标签和状态
- en: Let's now learn how to remove these self-hosted runners from GitHub.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们学习如何从 GitHub 中移除这些自托管的运行器。
- en: Removing self-hosted runners
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除自托管运行器
- en: If you want to reconfigure or remove a runner from GitHub, you have to use the
    `config` script with the `remove` option. If you open the details of the runner
    by clicking its name, you see a **Remove** button (see *Figure 7.2*). If you click
    this button, it generates the script and token for you.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想重新配置或移除 GitHub 上的运行器，您必须使用带有 `remove` 选项的 `config` 脚本。如果您通过点击运行器名称查看其详细信息，您将看到一个**移除**按钮（见*图
    7.2*）。点击此按钮后，它会为您生成脚本和令牌。
- en: '![Figure 7.3 – The runner details'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.3 – 运行器详细信息'
- en: '](img/B17827_07_03.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_07_03.jpg)'
- en: Figure 7.3 – The runner details
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – 运行器详细信息
- en: 'The script looks like this for the different operating systems:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不同的操作系统，脚本看起来如下所示：
- en: '[PRE37]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Always remove the runners before destroying your machines! If you forget to
    do this, you can still use the **Force remove this runner** button in the **Remove**
    dialog. But this should only be used as a last resort.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在销毁机器之前，务必先移除运行器！如果您忘记这样做，您仍然可以在**移除**对话框中使用**强制移除此运行器**按钮。但这应仅作为最后手段。
- en: Managing access with runner groups
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用运行器组管理访问权限
- en: If you register your runners at the organization or enterprise level, `Default`
    that cannot be deleted.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在组织或企业级别注册运行器，`Default` 是无法删除的。
- en: Note
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A runner can only be in one runner group at a time.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一个运行器只能属于一个运行器组。
- en: 'To manage access, open **Policies** at the enterprise level or **Settings**
    at the organization level and locate **Actions** | **Runner Groups** in the menu.
    Here, you can create a new runner group or click on an existing one to adjust
    its access settings. Depending on whether your level is enterprise or organization,
    you can either allow access to specific organizations or repositories (see *Figure
    7.3*):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要管理访问权限，请在企业级别打开**策略**，或在组织级别打开**设置**，并在菜单中找到**操作** | **运行器组**。在这里，您可以创建一个新的运行器组，或者点击现有的运行器组以调整其访问设置。根据您的级别是企业级别还是组织级别，您可以选择允许对特定的组织或仓库访问（见*图
    7.3*）：
- en: '![Figure 7.4 – Options for runner groups'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.4 – 运行器组的选项'
- en: '](img/B17827_07_04.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_07_04.jpg)'
- en: Figure 7.4 – Options for runner groups
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – 运行器组的选项
- en: Warning
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Access for public repositories is disabled by default. Leave this! You should
    not use self-hosted runners with public repositories! Forks may execute malicious
    code on your runners, so this is a risk. If you need self-hosted runners for a
    public repository, make sure to use *ephemeral* and *hardened* runners that don't
    have access to your internal resources. This might be the case if you need a special
    tooling for an open source project that takes too long to install on the hosted
    runners. But these are rare cases and you should try to avoid them.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，公共仓库的访问权限是禁用的。请保持这个设置！你不应该在公共仓库中使用自托管运行器！Fork 的仓库可能会在你的运行器上执行恶意代码，因此这是一个风险。如果你需要为公共仓库使用自托管运行器，请确保使用*临时*和*强化*的运行器，它们无法访问你的内部资源。如果你需要为一个开源项目使用特定的工具，而这些工具在托管运行器上安装太慢，这种情况可能适用。但这种情况较为少见，你应尽量避免。
- en: 'When you register a new runner, you are asked for the name of the runner group.
    You can also pass this as an argument to the `config` script:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 当你注册一个新的运行器时，会要求你输入运行器组的名称。你也可以将此作为参数传递给`config`脚本：
- en: '[PRE41]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Now that we've learned to manage access with runner groups, we will learn to
    use labels.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学习了如何通过运行器组来管理访问权限，接下来我们将学习如何使用标签。
- en: Using labels
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用标签
- en: 'GitHub Actions matches your workflow with your runners by searching for the
    correct labels. The labels are applied when you register a runner. You can also
    pass them to the `config` script as an argument:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 通过搜索正确的标签将你的工作流与运行器匹配。在注册运行器时会应用这些标签。你也可以将它们作为参数传递给`config`脚本：
- en: '[PRE42]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'You can later modify the labels and create new labels in the details of the
    runner by pressing the gear icon next to **Labels** (see *Figure 7.4*):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以稍后通过点击**标签**旁边的齿轮图标来修改标签，并在运行器的详细信息中创建新标签（见*图 7.4*）：
- en: '![Figure 7.5 – Creating new labels for a runner'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.5 – 为运行器创建新标签'
- en: '](img/B17827_07_05.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17827_07_05.jpg)'
- en: Figure 7.5 – Creating new labels for a runner
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5 – 为运行器创建新标签
- en: If your workflows have specific demands, you can create custom labels for them.
    An example of a custom label could be adding a tag for a tool such as `matLab`
    or necessary `gpu` access.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的工作流有特定的需求，你可以为其创建自定义标签。自定义标签的一个例子可以是为工具添加标签，比如`matLab`或者必要的`gpu`访问权限。
- en: All self-hosted runners have the `self-hosted` tag by default.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 所有自托管运行器默认都有`self-hosted`标签。
- en: 'To use the runners in your workflows, you specify the demands in the form of
    tags:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要在工作流中使用运行器，你需要通过标签的形式指定需求：
- en: '[PRE43]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This way, your workflow finds the corresponding runner that fulfills the necessary
    demands.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你的工作流就能找到满足必要需求的相应运行器。
- en: Scaling your self-hosted runners
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展你的自托管运行器
- en: Installing the action runner on existing build machines allows for easy migration
    to GitHub. But this is not a long-term solution! If you can't use the hosted runners,
    you should build an elastically scaling build environment yourself.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在现有构建机器上安装操作运行器可以轻松迁移到 GitHub。但这不是一个长期解决方案！如果你不能使用托管运行器，你应该自行构建一个弹性扩展的构建环境。
- en: Ephemeral runners
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 临时运行器
- en: If you build an elastic scaling solution for your build machines or container,
    you should use ephemeral runners. This means you use a virtual machine or **Docker**
    image from a blank image and install a temporary runner. Then, everything gets
    erased after the run. An elastic scaling solution with persistent runners is not
    recommended!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你为构建机器或容器构建了一个弹性扩展解决方案，你应该使用临时运行器。这意味着你使用一个虚拟机或**Docker**镜像从空白镜像开始，并安装一个临时运行器。然后，运行结束后所有内容都会被删除。我们不推荐使用持久运行器的弹性扩展解决方案！
- en: 'To configure your runner to be *ephemeral*, you pass the following argument
    to the `config` script:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要将你的运行器配置为*临时*，你需要将以下参数传递给`config`脚本：
- en: '[PRE44]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Scaling up and down with GitHub webhooks
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 GitHub webhooks 进行扩展
- en: To scale your virtual environments up and down, you can use `workflow_job` webhook
    gets called with the `queued` action key if a new workflow is queued. You can
    use this event to spin up a new build machine and add it to the pool of machines.
    The `workflow_job` webhook is called with the `completed` action if the workflow
    run has finished. You can use this event to clean up and destroy the machine.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了上下扩展你的虚拟环境，你可以使用`workflow_job` webhook，如果新的工作流被排队，`queued`操作键会被调用。你可以使用这个事件启动一个新的构建机器并将其添加到机器池中。如果工作流运行完成，`workflow_job`
    webhook 会调用`completed`操作。你可以利用这个事件清理并销毁机器。
- en: For more information, see the documentation at [https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job](https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参见文档：[https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job](https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job)。
- en: Existing solutions
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现有解决方案
- en: Building an elastic virtual build environment in `@jonico`) has curated a matrix
    with all of the solutions out there. You can find the repository at [https://github.com/jonico/awesome-runners](https://github.com/jonico/awesome-runners).
    The matrix is more readable in the form of GitHub pages, so you might prefer to
    visit [https://jonico.github.io/awesome-runners](https://jonico.github.io/awesome-runners).
    The matrix compares the solutions based on their target platform, whether they
    have GitHub Enterprise support, their automatic scaling capabilities, their cleanup
    factors, and other criteria.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在`@jonico`构建的弹性虚拟构建环境中，已整理了一个包含所有现有解决方案的矩阵。你可以在[https://github.com/jonico/awesome-runners](https://github.com/jonico/awesome-runners)找到这个仓库。矩阵以GitHub页面的形式呈现，通常更易于阅读，因此你可能更愿意访问[https://jonico.github.io/awesome-runners](https://jonico.github.io/awesome-runners)。该矩阵根据目标平台、是否支持GitHub
    Enterprise、自动扩展能力、清理因素及其他标准来比较这些解决方案。
- en: Tip
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Keep in mind that building and running a scalable build environment with your
    custom images takes a lot of time and effort that can also be spent on other things.
    Using hosted runners is the cheaper and more sustainable solution. Make sure if
    you really need to make this investment in your own platform before doing so.
    Often, there are other options to hosting your own runners – such as bringing
    your own Docker images into GitHub Actions or using a bot to automate deployments
    to your on-premises resources.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，使用自定义镜像构建和运行可扩展的构建环境需要大量时间和精力，这些时间和精力本可以用于其他事务。使用托管运行器是更便宜、更可持续的解决方案。在进行投资前，确保你确实需要为自己的平台做出这样的投入。通常，托管自己的运行器还有其他选择——例如将自己的Docker镜像带入GitHub
    Actions，或者使用机器人自动化部署到本地资源。
- en: Monitoring and troubleshooting
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控与故障排除
- en: If you have problems with your self-hosted runners, there are several things
    that can help you when troubleshooting.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用自托管运行器时遇到问题，有几个方面可以帮助你进行故障排除。
- en: Checking the status of the runners
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查运行器的状态
- en: You can check the status of your runners under `Idle`, `Active`, or `Offline`.
    If the runner status is `Offline`, the machine could be down or not connected
    to the network, or the self-hosted runner application might not be running on
    the machine.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`Idle`、`Active`或`Offline`状态下检查运行器的状态。如果运行器状态是`Offline`，可能是机器关机、未连接网络，或自托管运行器应用未在机器上运行。
- en: Reviewing the application log files
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查应用程序日志文件
- en: 'Log files are kept on the runner in the `_diag` folder in the runner''s root
    directory. You can review the runner `_diag`. The application log filenames begin
    with `Runner_` and have a UTC timestamp appended to them:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件保存在运行器的根目录中的`_diag`文件夹下。你可以查看运行器的`_diag`。应用程序日志文件名以`Runner_`开头，并附加有UTC时间戳：
- en: '[PRE45]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Reviewing the job log files
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查工作日志文件
- en: 'The `_diag`. Each job has its own log. The application log filenames begin
    with `Worker_` and also have a UTC timestamp appended:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`_diag`。每个工作都有自己的日志。应用程序日志文件名以`Worker_`开头，并附加有UTC时间戳：'
- en: '[PRE46]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Checking the service status
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查服务状态
- en: If your runner runs as a service, you can check the service status, depending
    on your operating system.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的运行器作为服务运行，你可以根据操作系统检查服务状态。
- en: Linux
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux
- en: 'On Linux, you can get the name of your service from the `.service` file in
    your runner''s folder. Use the `journalctl` tool to monitor the real-time activity
    of your runner service:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上，你可以从运行器文件夹中的`.service`文件中获取服务名称。使用`journalctl`工具来监控运行器服务的实时活动：
- en: '[PRE47]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The configuration for your service can be checked and customized under `/etc/systemd/systemd/`:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你的服务配置可以在`/etc/systemd/systemd/`下检查和定制：
- en: '[PRE48]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: macOS
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: macOS
- en: 'On macOS, you can use the `svc.sh` script to check the status of the service:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上，你可以使用`svc.sh`脚本检查服务的状态：
- en: '[PRE49]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The output of the preceding script contains the *service name* and the *process
    ID*.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 上述脚本的输出包含*服务名称*和*进程ID*。
- en: 'To check the service configuration, locate the file in the following location:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查服务配置，请在以下位置找到文件：
- en: '[PRE50]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Windows
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows
- en: 'On Windows, you can use **PowerShell** to retrieve information about your service:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，你可以使用**PowerShell**来获取关于服务的信息：
- en: '[PRE51]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Use `EventLog` to monitor the recent activities of your service:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`EventLog`监控你服务的最近活动：
- en: '[PRE52]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Monitoring the runner update process
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控跑步器更新过程
- en: The runner should update itself automatically. If this fails, the runner will
    not be able to run workflows. You can check its update activity in the `Runner_*`
    log files in the `_diag` directory.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 跑步器应自动更新自身。如果更新失败，跑步器将无法运行工作流。你可以在`Runner_*`日志文件中检查其更新活动，日志文件位于`_diag`目录下。
- en: Case study
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究
- en: The two pilot teams at *Tailwind Gears* start their first sprints on the new
    platform. The first thing they automate is the build process so that all of their
    pull requests can be built before merging. Tailwind Gears tries to use the GitHub-hosted
    runners as much as possible. Most of the software builds just fine. However, some
    of the code written in **C** uses an older compiler version and has some other
    dependencies installed on the current build machines. The code is currently built
    on two local **Jenkins** servers that are maintained by the developers themselves.
    These servers are also attached to hardware that is used for hardware-in-the-loop
    testing. For an easy transition, self-hosted runners are installed on these machines
    and the build runs fine. The IT department wants to get rid of the local servers
    anyway, so they work together with their GitHub partner to build an elastic, scalable,
    container-based solution that can run custom images that have access to the attached
    hardware.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '*Tailwind Gears*的两个试点团队在新平台上开始了他们的第一个冲刺。他们自动化的第一件事是构建过程，以便所有的拉取请求在合并前都能被构建。Tailwind
    Gears 尽可能多地使用 GitHub 托管的跑步器。大多数软件构建都非常顺利。然而，一些用**C**编写的代码使用了旧版编译器，并且在当前的构建机器上安装了其他依赖项。这些代码目前在两台由开发人员自己维护的本地**Jenkins**服务器上构建。这些服务器还连接着用于硬件在环测试的硬件设备。为了顺利过渡，自托管的跑步器被安装在这些机器上，并且构建过程正常。IT
    部门反正打算淘汰本地服务器，因此他们与 GitHub 合作，构建了一个弹性、可扩展、基于容器的解决方案，可以运行具有访问附加硬件的自定义镜像。'
- en: Summary
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, you learned about two hosting options for running your workflows:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章节中，你了解了两种运行工作流的托管选项：
- en: GitHub-hosted runners
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 托管的跑步器
- en: Self-hosted runners
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自托管跑步器
- en: We explained how self-hosted runners allow you to run GitHub in a hybrid-cloud
    scenario. You learned how to set up self-hosted runners and where you can find
    information to help you build your own elastic scalable build environment.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们解释了自托管跑步器如何允许你在混合云场景中运行 GitHub。你学习了如何设置自托管跑步器，并了解了在哪里可以找到帮助你构建弹性可扩展构建环境的信息。
- en: In the next chapter, you will learn how you can manage your code dependencies
    using **GitHub Packages**.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何使用**GitHub Packages**管理你的代码依赖。
- en: Further reading
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'For more information about the topics in this chapter, you can refer to the
    following resources:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本章节内容的更多信息，你可以参考以下资源：
- en: '*Using GitHub-hosted runners*: [https://docs.github.com/en/actions/using-github-hosted-runners](https://docs.github.com/en/actions/using-github-hosted-runners)'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 GitHub 托管的跑步器*: [https://docs.github.com/en/actions/using-github-hosted-runners](https://docs.github.com/en/actions/using-github-hosted-runners)'
- en: '*Hosting your own runners*: [https://docs.github.com/en/actions/hosting-your-own-runners](https://docs.github.com/en/actions/hosting-your-own-runners)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*托管你自己的跑步器*: [https://docs.github.com/en/actions/hosting-your-own-runners](https://docs.github.com/en/actions/hosting-your-own-runners)'
- en: '*awesome-runners – A curated list of awesome self-hosted GitHub Action runner
    solutions in a large comparison matrix*: [https://jonico.github.io/awesome-runners](https://jonico.github.io/awesome-runners)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*awesome-runners – 一份精心整理的、包含大量对比矩阵的自托管 GitHub Action 跑步器解决方案清单*: [https://jonico.github.io/awesome-runners](https://jonico.github.io/awesome-runners)'
