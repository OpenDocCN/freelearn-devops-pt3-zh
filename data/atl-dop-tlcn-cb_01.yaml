- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: An Introduction to DevOps and the Atlassian Ecosystem
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 和 Atlassian 生态系统介绍
- en: DevOps has been a driving force for improvement in product development since
    its inception in 2009\. As technology moved to internet-based, off-premises cloud
    environments, DevOps allowed people working in development and operations a way
    to collaborate, enabling quicker and more stable design, packaging, deployment,
    and maintenance of products. A key component of this is the adoption of automation
    that ensures these processes run smoother.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 自 2009 年 DevOps 诞生以来，已经成为推动产品开发改进的主要力量。随着技术转向基于互联网的云环境，DevOps 使得开发和运营人员能够合作，从而更快且更稳定地进行设计、打包、部署和维护产品。自动化的采用是这一过程顺利进行的关键因素。
- en: In this chapter, we will look at the DevOps movement and the role that automation
    plays in its success. We will then look at the **Open DevOps** platform from **Atlassian**
    that allows easy connection between Jira, other Atlassian tools such as Confluence
    and Bitbucket, as well as third-party tools such as LaunchDarkly, which allows
    you to release products through feature flags, and Snyk, which performs security
    scanning.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨 DevOps 运动及其成功中自动化所扮演的角色。接着，我们将了解 **Open DevOps** 平台，这个平台由 **Atlassian**
    提供，能够轻松连接 Jira、其他 Atlassian 工具，如 Confluence 和 Bitbucket，以及第三方工具，如 LaunchDarkly，它通过功能标记帮助你发布产品，以及
    Snyk，它进行安全扫描。
- en: 'To start our journey into Open DevOps, we will examine the steps needed to
    enroll in Atlassian’s cloud environment to obtain trial versions of Jira and connections
    through Open DevOps. To accomplish this, we will cover the following recipes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始我们的 Open DevOps 之旅，我们将研究如何注册到 Atlassian 的云环境中，以便获取 Jira 的试用版本以及通过 Open DevOps
    进行连接。为此，我们将涵盖以下步骤：
- en: Creating the Open DevOps toolchain from scratch
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从零开始创建 Open DevOps 工具链
- en: Creating a new Atlassian Cloud site with Jira only
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅创建带有 Jira 的新的 Atlassian Cloud 站点
- en: Creating a Jira project
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Jira 项目
- en: Connecting Confluence
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接 Confluence
- en: Connecting Bitbucket
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接 Bitbucket
- en: An introduction to DevOps
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 介绍
- en: By 2009, developers began to adopt Agile product development methods. They started
    with small deliveries in incremental cycles, gathering customer feedback and using
    it to inform future development cycles. They gradually created a product that
    their customers would want.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到 2009 年，开发人员开始采用敏捷产品开发方法。他们从小规模交付的增量周期开始，收集客户反馈并利用这些反馈指导未来的开发周期。逐步打造出客户所需的产品。
- en: A bottleneck would soon form from delivering changes to the operations part
    of the organization. While rapid development of value is the priority of development
    teams, operations teams are charged with maintaining the stability of the environment.
    Anything that would diminish that stability would mean a potential loss of revenue.
    Typically, that meant seeing any new change as risky and allowing any changes
    to be released in specific maintenance windows. These windows only ended up increasing
    the risk of further downtime.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个瓶颈很快就会出现在向组织运营部分交付变更时。虽然开发团队的优先任务是快速开发价值，运营团队则负责维护环境的稳定性。任何可能削弱稳定性的因素都会导致潜在的收入损失。通常，这意味着将任何新变更视为有风险，并允许在特定的维护窗口期发布变更。这些窗口期最终只会增加进一步停机的风险。
- en: Changes would soon emerge. During the *O’Reilly Velocity 2009 conference*, John
    Allspaw and Paul Hammond of Flickr gave a talk titled *10+ Deploys a Day – Dev
    and Ops Cooperation at Flickr* that described the different practices that allowed
    them to perform multiple deployments in a single day, in contrast to many organizations
    that were struggling to perform a deployment in a single year. Patrick Debois,
    after watching the aforementioned talk and other talks on the importance of collaboration
    between development and operations, and being intrigued by the concept of Agile
    system administration following a conversation with Andrew Schafer the year before,
    decided to organize a conference in Ghent, Belgium, to address the topic. To emphasize
    this need, Debois added the common abbreviations of *development* and *operations*
    and combined them in the name of his conference – **DevOpsDays**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，变化就会出现。在*O'Reilly Velocity 2009大会*上，Flickr的John Allspaw和Paul Hammond进行了题为*“每天10+次部署——Flickr的开发与运维合作”*的演讲，讲述了他们如何在一天内进行多次部署，而许多组织在一年内都难以进行一次部署的做法。Patrick
    Debois在观看了上述演讲以及其他关于开发与运维合作重要性的演讲后，受到了启发，并在与Andrew Schafer去年谈话后对敏捷系统管理产生了兴趣，决定在比利时根特组织一个会议来讨论这个话题。为了强调这一需求，Debois将*开发*和*运维*的常用缩写合并，并将其用作会议名称——**DevOpsDays**。
- en: The momentum of the first DevOpsDays conference continued to social media. Discussion
    continued on Twitter (now known as X), where the topic was identified through
    the hashtag `#DevOps`. Additional DevOpsDays conferences were organized in various
    cities throughout the world. The movement caught the attention of Gartner, who,
    in 2011, predicted that DevOps would soon be adopted by enterprises. This ensured
    that DevOps moved from an underground movement to a mainstream idea to implement
    in business.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个DevOpsDays大会的势头延续到了社交媒体。讨论在Twitter（现称为X）上继续进行，话题通过标签`#DevOps`被标识出来。随后，世界各地组织了更多的DevOpsDays大会。这一运动引起了Gartner的关注，Gartner在2011年预测DevOps将很快被企业采用。这确保了DevOps从一个地下运动转变为一种主流理念，在企业中实施。
- en: Now that the idea of collaboration between development and operations has shown
    benefits and proven to be popular, one key question is how successful DevOps implementations
    are started. A key model to that approach is identified in the next section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，开发和运维之间的协作已经显现出好处，并证明了其受欢迎程度，关键问题之一是如何开始成功的DevOps实施。接下来的部分将介绍这一方法的关键模型。
- en: The CALMS/CALMR approach
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CALMS/CALMR方法
- en: In preparation for the *2010 DevOpsDays conference*, John Willis and Damon Edwards
    were asked the same question about the burgeoning DevOps movement – how do we
    implement DevOps? In other words, what were the important factors for a successful
    DevOps implementation?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备*2010年DevOpsDays大会*，John Willis和Damon Edwards被问到了一个关于新兴DevOps运动的相同问题——我们如何实施DevOps？换句话说，成功实施DevOps的关键因素是什么？
- en: They came up with an acronym, **CAMS**, where each letter identified a key component
    for a successful DevOps approach. **C** stood for **Culture**, **A** represented
    **Automation**. **M** was for **Measurement**, and **S** stood for **Sharing**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 他们想出了一个首字母缩略词，**CAMS**，其中每个字母代表成功DevOps方法的一个关键组成部分。**C**代表**文化**，**A**代表**自动化**，**M**代表**度量**，**S**代表**共享**。
- en: When writing in *The DevOps Handbook*, Jez Humble elaborated on the CAMS model.
    He added an **L**, which stood for **Lean**. With this addition, CAMS became **CALMS**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写*《DevOps手册》*时，Jez Humble详细阐述了CAMS模型。他增加了一个**L**，代表**Lean（精益）**。有了这个补充，CAMS变成了**CALMS**。
- en: Scaled Agile Inc., when adopting DevOps into the **Scaled Agile Framework**
    (**SAFe**), modified the approach. Reasoning that the ideal DevOps culture was
    one of shared responsibility, Scaled Agile removed the S for Sharing and replaced
    it with an **R**, which stood for **Recovery**. CALMS became **CALMR** when practicing
    DevOps in SAFe.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当Scaled Agile Inc.将DevOps引入**Scaled Agile框架**（**SAFe**）时，修改了这一方法。考虑到理想的DevOps文化是共享责任，Scaled
    Agile将S（共享）移除，替换为**R**，代表**恢复**。在SAFe中实践DevOps时，CALMS变成了**CALMR**。
- en: Let’s take a look at each letter of the CALMS and CALMR approaches and see how
    they fit in with the adoption of Atlassian tools and the Open DevOps platform.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看CALMS和CALMR方法的每个字母，看看它们如何与Atlassian工具的采用以及Open DevOps平台的实施相结合。
- en: Culture
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文化
- en: The management expert Peter Drucker is credited with saying, *“Culture eats
    strategy for breakfast,”* underlying the impact that culture, as a common thread,
    can have on uniting individuals in a group, from as small as a team, to as large
    as nations. So, if the correct culture can drive organizations to desired results,
    what is the correct culture? To find the answer, we turn to a sociologist named
    Ron Westrum.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 管理专家彼得·德鲁克被认为曾经说过，“文化在早餐时吞噬战略”，强调了作为共同纽带的文化对于团结群体中个体的影响，无论是小到团队，大到国家。因此，如果正确的文化可以推动组织实现期望的结果，那么什么是正确的文化？为了找到答案，我们转向了社会学家罗恩·韦斯特鲁姆。
- en: 'In 1988, Ron Westrum organized a study to measure the safety of medical teams.
    He organized the teams into three different types of cultures:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 1988年，罗恩·韦斯特鲁姆组织了一项研究来衡量医疗团队的安全性。他将团队分为三种不同类型的文化：
- en: Pathological
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 病态的
- en: Bureaucratic
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官僚主义的
- en: Generative
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成型
- en: A pathological culture is one that’s leader-driven. Motivation mainly comes
    through fear and threats from the leaders to accomplish the (leader’s) goals.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 病态文化是一种由领导主导的文化。主要通过领导者对完成（领导者的）目标的恐惧和威胁来驱动动机。
- en: A bureaucratic culture has safety mechanisms through rules and standards, but
    these can then be used to protect the members of the group from outsiders.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 官僚文化通过规则和标准具有安全机制，但这些机制可以用来保护团体成员免受外部人员的侵害。
- en: A generative culture, in contrast, is focused on aligning with a common mission.
    Information is freely shared with whomever, whether they are a member of the group
    or not, irrespective of whether they can play a role in the success of the mission.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，生成型文化侧重于与共同使命的对齐。信息可以自由与任何人分享，无论他们是否是团体的成员，无论他们是否能在使命的成功中发挥作用。
- en: Westrum found in his initial study that medical teams that possessed a generative
    culture also possessed alignment to their mission, an awareness of things that
    impeded the mission, and gave empowerment to any individual to make changes to
    remove those impediments. This allowed organizations to easily make long-lasting
    improvements to the system to improve the teams even more.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 韦斯特鲁姆在其初步研究中发现，拥有生成型文化的医疗团队还与其使命保持一致，意识到阻碍使命的事物，并授权任何个体进行改变以消除这些障碍。这使得组织能够轻松地对系统进行持久改进，进一步改善团队。
- en: These benefits are not limited to medical teams. In the book *Accelerate – Building
    and Scaling High Performing Technology Organizations*, Nicole Forsgren, Jez Humble,
    and Gene Kim investigated recommending DevOps practices to teams to see how effective
    they were. They surveyed development teams and found that those teams that had
    a generative culture produced higher levels of performance for software delivery
    and experienced higher levels of job satisfaction.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些好处并不局限于医疗团队。在《加速 - 建立和扩展高效技术组织》一书中，尼科尔·福斯格伦、杰兹·汉布尔和吉恩·金调查了向团队推荐DevOps实践的效果。他们调查了开发团队，并发现那些拥有生成型文化的团队在软件交付方面表现出更高的性能水平，并体验到更高的工作满意度。
- en: A change in culture, while possible, is typically the last change that occurs
    after structural and behavioral changes. Atlassian does provide tools that assist
    in the change of structure and behavior to move teams to a generative culture.
    These tools that assist cultural change are available for free as the Team Playbook
    ([https://www.atlassian.com/team-playbook](https://www.atlassian.com/team-playbook)).
    However, going into detail about these tools is beyond the scope of this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 文化的改变虽然可能，但通常是在结构和行为改变之后发生的最后一次改变。Atlassian确实提供了工具，帮助改变结构和行为以将团队转向生成型文化。这些支持文化变革的工具可作为Team
    Playbook免费提供（[https://www.atlassian.com/team-playbook](https://www.atlassian.com/team-playbook)）。然而，详细介绍这些工具超出了本书的范围。
- en: Automation
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化
- en: When people think of DevOps, the first thing that comes to mind is automation.
    In the talk given by Allspaw and Hammond at the O’Reilly Velocity 2009 conference,
    one of the key factors of success mentioned included the use of automated infrastructure
    and a common version control system for both development and operations.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们想到DevOps时，首先想到的是自动化。在O’Reilly Velocity 2009年会议上Allspaw和Hammond发表的讲话中，成功的关键因素之一包括使用自动化基础设施和统一的版本控制系统来支持开发和运营。
- en: These days, key automation is done by successfully linking tools together to
    form a toolchain. Each activity in development and operations has at least one
    tool associated with it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当今，关键的自动化是通过成功地将工具连接在一起形成工具链来完成的。开发和运营中的每个活动都至少与一个工具相关联。
- en: 'A diagram that shows development activity with associated Atlassian tools is
    shown in the following figure:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 显示开发活动与关联Atlassian工具的图示如下：
- en: '![Figure 1.1 – DevOps phases with Atlassian tools](img/B21937_01_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – DevOps阶段与Atlassian工具](img/B21937_01_01.jpg)'
- en: Figure 1.1 – DevOps phases with Atlassian tools
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – DevOps阶段与Atlassian工具
- en: This book will demonstrate in its chapters how to establish a toolchain with
    the Atlassian tools illustrated in the preceding figure.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将在各章节中展示如何使用前面图示的Atlassian工具建立工具链。
- en: Lean
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精益
- en: 'The system created by automation can only work well if its demand does not
    exceed its capacity. To ensure this balance, we will look at applying lean thinking
    practices, initially developed as part of the Toyota Production System. Practices
    include the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由自动化创建的系统只有在其需求不超过其容量时才能正常运行。为了确保这一平衡，我们将应用最初作为丰田生产系统一部分开发的精益思维实践。包括以下做法：
- en: Make all work visible
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使所有工作可见
- en: Limit the **Work-in-Progress** (**WIP**)
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制**在制品（Work-in-Progress）**（**WIP**）
- en: Keep batch sizes small
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持小批量工作
- en: Monitor queues
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控队列
- en: 'We will see the relationships between the size of the work (the queue length),
    the time it takes to process the work (the cycle time), and how long until we
    see the results (the wait time) from queueing theory. A key formula in this is
    Little’s law, expressed here:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从排队理论中看到工作规模（队列长度）、处理工作所需的时间（周期时间）以及直到我们看到结果所需的等待时间之间的关系。这里的关键公式是小李法则，如下所示：
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>L</mi><mo>=</mo><mi>λ</mi><mi>W</mi></mrow></mrow></math>](img/1.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>L</mi><mo>=</mo><mi>λ</mi><mi>W</mi></mrow></mrow></math>](img/1.png)'
- en: '*L* signifies the queue length. The Greek letter *lambda* represents the throughput
    the team has in processing the work. *W* represents the wait time for finished
    work.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*L*表示队列长度。希腊字母*lambda*表示团队处理工作的吞吐量。*W*表示已完成工作的等待时间。'
- en: 'An additional equation called Kingman’s formula tells us that there’s a direct
    correlation between the cycle time, utilization, and variability of the items
    of work the team must complete. This formula (often called the *VUT equation*)
    is shown here:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个公式——金曼公式告诉我们，周期时间、利用率和团队必须完成的工作项的变异性之间有直接关联。这个公式（通常称为*VUT公式*）如下所示：
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mrow><mi>E</mi><mo>(</mo><mi>w</mi><mo>)</mo><mo>≈</mo><mi>V</mi><mo>×</mo><mi>U</mi><mo>×</mo><mi>T</mi></mrow></mrow></mrow></math>](img/2.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mrow><mi>E</mi><mo>(</mo><mi>w</mi><mo>)</mo><mo>≈</mo><mi>V</mi><mo>×</mo><mi>U</mi><mo>×</mo><mi>T</mi></mrow></mrow></mrow></math>](img/2.png)'
- en: In this equation, *E(W)* represents the wait time. It is shown as equivalent
    to the product of *variability (V)*, *utilization (U)*, and *cycle* *time (T)*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个公式中，*E(W)*表示等待时间。它被视为*变异性（V）*、*利用率（U）*和*周期时间（T）*的乘积。
- en: Jira has features that allow us to display the work to do through Kanban boards,
    also allowing us to limit the WIP through column constraints. Wait times and cycle
    times can also be calculated from the metrics collected.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Jira具有功能，可以通过看板展示待办工作，同时允许我们通过列约束限制在制品（WIP）。等待时间和周期时间也可以从收集的度量中计算得出。
- en: Measurement
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测量
- en: 'In judging the effectiveness of our efforts to develop, release, and maintain
    our products, we need to ask three key questions:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估我们开发、发布和维护产品的努力是否有效时，我们需要提出三个关键问题：
- en: Are we on track to deliver the solution?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否在按计划交付解决方案？
- en: What is the health of all of our operating environments (test, stage, and production)?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们所有操作环境（测试、阶段、生产）的健康状况如何？
- en: Do our customers think we have developed the right solution?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的客户是否认为我们已经开发出了正确的解决方案？
- en: 'We saw when looking at *lean* practices in the previous section that we needed
    to pay attention to the following metrics to evaluate whether we operate in a
    state of flow:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节我们探讨*精益*实践时，发现我们需要关注以下指标来评估我们是否处于流动状态：
- en: The cycle time
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 周期时间
- en: The WIP
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在制品（WIP）
- en: The throughput
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 吞吐量
- en: Any impediments or blockers to progress
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何阻碍进展的障碍或瓶颈
- en: 'In looking at the condition of the operating environments, we turn to the discipline
    of observability, where we collect all aspects of the environments from infrastructure
    to applications. The typical measurements for observability include the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看操作环境的状态时，我们转向可观察性的学科，其中我们收集从基础设施到应用程序的所有环境方面。可观察性的典型度量包括以下内容：
- en: Logs
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志
- en: Call/execution traces
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用/执行跟踪
- en: Metrics
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指标
- en: 'Measurements that can indicate whether our customers receive the proposed value
    from new product features can be tricky to determine. Vanity metrics may exist
    that occur naturally and indicate good trends, but after thorough analysis, they
    do not produce actionable answers. Metrics that have proven reliable in measuring
    customer sentiment include the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 测量值，可能表明我们的客户是否从新产品功能中获得了预期的价值，这一点可能很难确定。存在虚荣指标，这些指标自然出现并显示良好的趋势，但经过彻底分析后，它们并不提供可操作的答案。经过验证的、能可靠测量客户情绪的指标包括以下内容：
- en: '*Pirate* metrics (Acquisition, Activation, Retention, Referral, and Revenue)
    devised by Dave McClure, a look at ideal customer behavior toward a product or
    feature, with measurements of that behavior'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**海盗**指标（获取、激活、留存、推荐和收入），由Dave McClure提出，用于观察理想客户对某个产品或功能的行为，并对该行为进行度量'
- en: Google HEART Metrics, used by Google UI/UX to gauge user preferences in terms
    of Happiness, Engagement, Adoption, Retention, and Task Success
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google HEART指标，由Google UI/UX团队使用，用于衡量用户在幸福感、参与度、采用率、留存率和任务成功等方面的偏好
- en: '**Fit for Purpose** (**F4P**) devised by David J. Anderson and Alexei Zheglov,
    which measures whether a customer’s needs are met, as outlined in the book *Fit
    for Purpose – How Modern Businesses Find, Satisfy, and* *Keep Customers*.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适合目的** (**F4P**)由David J. Anderson和Alexei Zheglov提出，用来衡量是否满足客户需求，具体内容见于书籍*Fit
    for Purpose – How Modern Businesses Find, Satisfy, and* *Keep Customers*。'
- en: Atlassian applications can collect the needed metrics or easily integrate with
    dedicated metric collection tools. Jira is a proven platform to collect the metrics
    needed for lean. Out-of-the-box reports, as well as the easy application of third-party
    marketplace apps, allow us to collect and analyze required metrics. Open DevOps
    allows easy integration with observability tools such as those offered by Datadog
    and New Relic.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian应用程序可以收集所需的指标，或轻松与专门的指标收集工具集成。Jira是一个经过验证的平台，可以收集精益所需的指标。开箱即用的报告以及第三方市场应用的轻松应用，允许我们收集和分析所需的指标。Open
    DevOps允许与Datadog和New Relic等可观察性工具进行轻松集成。
- en: Sharing
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 共享
- en: Once we have collected the measurements, we need a way of easily displaying
    the information to all who need it to foster a generative culture.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们收集了这些测量值，我们需要一种简便的方法来展示信息，以便所有需要的人都能看到，促进创造性的文化。
- en: The Atlassian tools described in this book provide a good basis to foster information
    sharing and transparency. Jira can produce charts and reports that can be shared
    on a dashboard. Other displays related to application health can be collected
    and displayed using Compass.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中描述的Atlassian工具为促进信息共享和透明度提供了良好的基础。Jira可以生成可以共享在仪表板上的图表和报告。与应用程序健康相关的其他显示内容可以使用Compass收集并展示。
- en: Recovery
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恢复
- en: 'In any DevOps implementation, we want to devote time and attention to planning
    contingency steps to take if a release causes an outage in the production environment.
    DevOps changes the operating model where both development and operations, either
    acting together or with specialized site reliability engineers, must collaborate
    to answer the following questions:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何DevOps实施中，我们都希望花时间和精力规划应急步骤，以防发布导致生产环境出现故障。DevOps改变了操作模型，开发和运维，无论是共同工作还是与专门的站点可靠性工程师合作，都必须共同回答以下问题：
- en: How do we reduce the risk when we release?
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何在发布时降低风险？
- en: What mitigation steps should be designed to limit the outage time, should it
    occur?
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生故障，应该设计哪些缓解措施以限制停机时间？
- en: If an outage happens, what procedures should we follow?
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生故障，我们应该遵循哪些程序？
- en: Atlassian tools may form the answer to these problems. Feature flag tools such
    as those provided by LaunchDarkly, easily integrate with Jira through Open DevOps.
    Compass provides *early warning* capabilities if an outage appears imminent. Opsgenie
    allows development and operations to collaborate in an outage to bring about a
    swift resolution.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian工具可能是这些问题的解决方案。像LaunchDarkly提供的功能标志工具，可以通过Open DevOps与Jira轻松集成。Compass提供*早期预警*功能，以便在故障即将发生时发出警告。Opsgenie允许开发和运维在故障期间协作，以迅速解决问题。
- en: We have seen the key pillars of a DevOps approach and how the Atlassian tools
    help foster them. In the next section, let’s examine the possible technologies
    that impact DevOps implementation and where Atlassian tools can help.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了 DevOps 方法的关键支柱，以及 Atlassian 工具如何帮助推动这些支柱。在接下来的部分，让我们探讨可能影响 DevOps 实施的技术，以及
    Atlassian 工具如何提供帮助。
- en: Technology considerations for DevOps
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 的技术考虑
- en: 'The adoption of the DevOps approach was encouraged by emerging technologies
    that made it easier and faster to deploy, release, and maintain products. The
    changes in technology include the following:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 随着新兴技术的发展，DevOps 方法的采纳变得更加容易，这些技术使得产品的部署、发布和维护更加快捷。技术的变化包括以下几点：
- en: '**Continuous Integration/Continuous Deployment** (**CI/CD**) pipelines'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续集成/持续交付**（**CI/CD**）管道'
- en: '**Infrastructure-as-Code** (**IaC**)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即代码**（**IaC**）'
- en: Cloud environments
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云环境
- en: Containers/Kubernetes
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器/Kubernetes
- en: Let’s take a closer look at these factors.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看这些因素。
- en: CI/CD pipelines
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CI/CD 管道
- en: At the time of Allspaw and Hammond’s talk at the O’Reilly Velocity 2009 conference,
    CI tools were often used to make a *daily* build or a build of software that gathered
    the commits of that day. After creating the build, the CI tools would run automated
    tests, and report the success or failure of that operation.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Allspaw 和 Hammond 于 2009 年 O'Reilly Velocity 大会上的演讲时，CI 工具通常用于生成 *每日* 构建，或者是汇集当天提交的代码的构建。在创建构建后，CI
    工具会运行自动化测试，并报告该操作的成功或失败。
- en: Allspaw and Hammond took their CI tool further. If a build passed all its tests,
    the CI tool would allow you to move the build artifacts to either a test or staging
    environment for further testing, or to the production environment to prepare for
    release or *go-live*.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Allspaw 和 Hammond 将他们的 CI 工具进一步扩展。如果构建通过了所有测试，CI 工具将允许将构建产物移到测试或预生产环境进行进一步测试，或者移到生产环境以准备发布或
    *上线*。
- en: The extension of CI came to be known as CD. Automating deployment by using a
    CI/CD tool allows for consistent deployments because steps aren’t forgotten or
    skipped. Testing of deployment further ensures proper function and that the behavior
    seen is the desired behavior.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）的扩展被称为持续交付（CD）。通过使用 CI/CD 工具自动化部署，可以确保部署的一致性，因为步骤不会被遗忘或跳过。部署测试进一步确保了功能的正确性，以及观察到的行为是期望的行为。
- en: As tooling moved from just automated building to incorporating all steps of
    CI and CD from a single trigger, version control tools began to offer their own
    pipeline capabilities, controlled by a text file in the **YAML** (**YAML Ain’t
    Markup Language**) format. This facilitated a mini-movement called GitOps where
    build, testing, integration, packaging, and deployment all started from a single
    Git commit as a trigger.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 随着工具的发展，从仅仅是自动化构建到将 CI 和 CD 的所有步骤整合为一个触发器，版本控制工具开始提供自己的管道功能，这些功能由一个 **YAML**
    （**YAML 不是标记语言**）格式的文本文件控制。这促进了一种叫做 GitOps 的小型运动，在这种运动中，构建、测试、集成、打包和部署都从一个 Git
    提交作为触发器开始。
- en: IaC
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基础设施即代码（IaC）
- en: As CI expanded to include CD, deployment into environments was about to be made
    easier. New tools such as Ansible, Chef, Terraform, and Puppet allowed for the
    definition of an ideal infrastructure as specified by text files.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 CI 扩展到包括 CD，部署到环境变得更加简便。像 Ansible、Chef、Terraform 和 Puppet 这样的新工具使得可以通过文本文件来定义理想的基础设施。
- en: By running the infrastructure tools with the text files as input, there would
    be a consistent way of creating environments, whether they were used for testing,
    staging, or production. This consistency helped in keeping environments similar,
    ensuring the same testing results no matter which environment was used and preventing
    configuration drift, where problems were seen when environments weren’t similar.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用文本文件作为输入来运行基础设施工具，将有一种一致的方式来创建环境，无论它们是用于测试、预生产还是生产。这种一致性有助于保持环境的相似性，确保无论使用哪个环境，都能得到相同的测试结果，并防止配置漂移——当环境不相似时，问题就会出现。
- en: Cloud environments
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 云环境
- en: While CI/CD pipelines and IaC tools could be applied to many physical platforms,
    from cyber-physical systems that became known as the **Internet of Things** (**IoT**)
    to physical servers, DevOps success has become associated most closely with the
    rise of cloud environments.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 CI/CD 管道和 IaC 工具可以应用于许多物理平台，从后来被称为 **物联网**（**IoT**）的网络物理系统到物理服务器，DevOps 的成功最紧密地与云环境的兴起联系在一起。
- en: Cloud environments are created with virtual machines available from a vendor
    and are accessible through the Internet. Creation and disposal of the virtual
    machines can happen within minutes, allowing for dynamic and flexible setups that
    could be provisioned on demand.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 云环境是通过供应商提供的虚拟机创建的，并可通过互联网访问。虚拟机的创建和销毁可以在几分钟内完成，允许动态和灵活的设置，并可以按需提供。
- en: Containers and Kubernetes
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 容器和 Kubernetes
- en: The popularity of cloud environments and IaC has encouraged further thought
    as to how to package a software application and propagate that to multiple test,
    staging, and production environments.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 云环境和基础设施即代码（IaC）的普及促使人们进一步思考如何打包软件应用程序，并将其传播到多个测试、预生产和生产环境中。
- en: '**Containers** have a long history as an approach to isolate processes and
    their resources, first in Unix and then in Linux. In 2013, Docker was the first
    company to introduce not only its standard of containers but also a way of managing
    them. The standard provided by Docker is the most prevalent one used today in
    describing, creating, and managing containers.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**容器**作为一种隔离进程及其资源的方法，已经有着悠久的历史，最早出现在 Unix 系统中，后来扩展到 Linux 系统。2013 年，Docker
    成为第一家公司，不仅引入了自己的容器标准，还提供了一种管理容器的方式。Docker 提供的标准是如今描述、创建和管理容器时使用的最为普遍的标准。'
- en: 'What is a container? If we start with the application we create and how its
    resources are allocated on a physical computer server, we can see that its code,
    libraries, and data occupy some of the server’s memory, as illustrated in the
    following figure:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是容器？如果我们从我们创建的应用程序开始，看看它在物理计算机服务器上如何分配资源，我们可以看到它的代码、库和数据占用了服务器的一部分内存，如下图所示：
- en: '![Figure 1.2 – A packaged application in a physical server](img/B21937_01_2.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 物理服务器中的打包应用程序](img/B21937_01_2.jpg)'
- en: Figure 1.2 – A packaged application in a physical server
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 物理服务器中的打包应用程序
- en: 'Virtual machines allow a physical server to host multiple instances of **Virtual
    Machines** (**VMs**). Each VM can have its own individual set of operating systems,
    applications, and accompanying libraries. The VMs are managed by a hypervisor,
    which is an application process run on the physical server. This arrangement is
    shown as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机允许物理服务器托管多个虚拟机实例（**虚拟机**，**VM**）。每个虚拟机可以有自己独立的操作系统、应用程序和相关库。这些虚拟机由一个虚拟机监控程序（hypervisor）管理，虚拟机监控程序是运行在物理服务器上的一个应用程序进程。该安排如下所示：
- en: '![Figure 1.3 – VM and application packaging in a physical server](img/B21937_01_3.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 物理服务器中的虚拟机和应用程序打包](img/B21937_01_3.jpg)'
- en: Figure 1.3 – VM and application packaging in a physical server
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 物理服务器中的虚拟机和应用程序打包
- en: 'Docker or other container management systems allow for more efficient resource
    management. The container requires only resources for the application and any
    dependent third-party libraries. Any OS-level resources that are required are
    managed through a managing application. In Docker’s case, the managing software
    is Docker Engine. This arrangement is outlined as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 或其他容器管理系统可以实现更高效的资源管理。容器只需要应用程序和任何依赖的第三方库的资源。任何所需的操作系统级资源都通过管理应用程序进行管理。在
    Docker 的情况下，管理软件是 Docker 引擎。该安排如下所示：
- en: '![Figure 1.4 – Container and server packaging](img/B21937_01_4.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 容器与服务器打包](img/B21937_01_4.jpg)'
- en: Figure 1.4 – Container and server packaging
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 容器与服务器打包
- en: Note that the server that hosts Docker Engine and its containers can be a physical
    server or a VM. This allows for portability, where the only artifact that can
    move from environment to environment is the definition of the container, known
    as the container image.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，托管 Docker 引擎及其容器的服务器可以是物理服务器或虚拟机（VM）。这使得容器具备可移植性，唯一能在不同环境之间迁移的工件是容器的定义，即容器镜像。
- en: With the portability of containers, developers can create their application
    and deploy it into an artifact that can be version-controlled and easily transferred
    to testing or production. The application under development can be compartmentalized
    as a service.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 借助容器的可移植性，开发人员可以创建应用程序并将其部署为可版本控制的工件，轻松转移到测试或生产环境中。开发中的应用程序可以被划分为服务。
- en: Kubernetes emerged from Google in 2015 as a way of creating and managing clusters
    composed of containers. The clusters allowed for the dynamic creation of Pods
    from containers to make flexible and resilient services or microservices.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 于 2015 年由 Google 提出，作为创建和管理由容器组成的集群的一种方式。这些集群允许从容器动态创建 Pods，从而构建灵活且具备弹性的服务或微服务。
- en: Now that we have seen the underlying tenets of DevOps and the main facets of
    technology that drive its acceptance and popularity, it’s time to examine how
    the tools from Atlassian can form a toolchain for a DevOps approach.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 DevOps 的基本原则以及推动其接受和普及的主要技术因素，是时候看看 Atlassian 的工具如何形成一个 DevOps 方法的工具链了。
- en: Creating an Open DevOps toolchain from scratch
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从头开始创建一个 Open DevOps 工具链
- en: The first link to a toolchain using Atlassian tools and Open DevOps is to set
    up an organization in the Atlassian Cloud. The first Atlassian product in the
    organization will be Jira.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Atlassian 工具和 Open DevOps 的工具链的第一个链接是设置一个 Atlassian Cloud 组织。该组织中的第一个 Atlassian
    产品将是 Jira。
- en: In this recipe, we will explore how to create the organization and an Atlassian
    Cloud site with Jira installed.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将探索如何创建一个组织并在安装 Jira 的 Atlassian Cloud 网站上进行操作。
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let’s go to the Atlassian website to create an Open DevOps environment with
    multiple connected tools:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们访问 Atlassian 网站，创建一个包含多个连接工具的 Open DevOps 环境：
- en: Atlassian’s Open DevOps solution is described at [https://www.atlassian.com/solutions/devops](https://www.atlassian.com/solutions/devops).
    This site allows you to see what Open DevOps is, what third-party integrations
    make up part of the solution, and what DevOps best practices Open DevOps plays
    a role in.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Atlassian 的 Open DevOps 解决方案可以在 [https://www.atlassian.com/solutions/devops](https://www.atlassian.com/solutions/devops)
    上查看。这个网站可以帮助您了解 Open DevOps 是什么，哪些第三方集成构成了解决方案的一部分，以及 Open DevOps 在 DevOps 最佳实践中的作用。
- en: 'From this page, you can request the creation of a new Atlassian Cloud site
    with the Jira product, installed by selecting the **Try for free** button on the
    page, as shown in the following figure:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此页面，您可以通过选择页面上的 **免费试用** 按钮来请求创建一个带有 Jira 产品的新的 Atlassian Cloud 网站，如下图所示：
- en: '![Figure 1.5 – Atlassian’s Open DevOps page with the Try it free button](img/B21937_01_5.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – Atlassian 的 Open DevOps 页面，带有“免费试用”按钮](img/B21937_01_5.jpg)'
- en: Figure 1.5 – Atlassian’s Open DevOps page with the Try it free button
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – Atlassian 的 Open DevOps 页面，带有“免费试用”按钮
- en: 'The page will open, allowing you to connect an existing Bitbucket workspace
    or create a new one by typing its name. This panel is shown in the following screenshot:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 页面将打开，允许您连接一个现有的 Bitbucket 工作区，或者通过输入名称创建一个新的工作区。此面板如以下截图所示：
- en: '![Figure 1.6 – Selecting a Bitbucket workspace](img/B21937_01_06.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 选择一个 Bitbucket 工作区](img/B21937_01_06.jpg)'
- en: Figure 1.6 – Selecting a Bitbucket workspace
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 选择一个 Bitbucket 工作区
- en: Create a new Bitbucket workspace to tie into your toolchain. This is the default
    option when creating a new toolchain. You can also select an existing Bitbucket
    workspace if you have one. After you’ve made your choice, select **Next**.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 Bitbucket 工作区以连接到您的工具链。这是创建新工具链时的默认选项。如果您已有现成的 Bitbucket 工作区，也可以选择它。在做出选择后，点击
    **下一步**。
- en: 'The next panel prompts you to name the new Atlassian Cloud suite. The text
    before **.atlassian.net** must be unique. This panel is depicted as follows:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来的面板会提示您为新的 Atlassian Cloud 套件命名。**.atlassian.net** 前的文本必须是唯一的。此面板如下所示：
- en: '![Figure 1.7 – Naming your Atlassian Cloud suite panel](img/B21937_01_07.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 命名您的 Atlassian Cloud 套件面板](img/B21937_01_07.jpg)'
- en: Figure 1.7 – Naming your Atlassian Cloud suite panel
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 命名您的 Atlassian Cloud 套件面板
- en: Name your Atlassian Cloud site and press **Next**.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的 Atlassian Cloud 网站命名并点击 **下一步**。
- en: 'A new panel should indicate success, prompting you to go to Jira on your cloud
    site and create a project, as seen in the following figure:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的面板应该会显示成功信息，提示您前往您的云站点上的 Jira 创建一个项目，如下图所示：
- en: '![Figure 1.8 – The Open DevOps Site success panel](img/B21937_01_08.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – Open DevOps 网站成功面板](img/B21937_01_08.jpg)'
- en: Figure 1.8 – The Open DevOps Site success panel
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – Open DevOps 网站成功面板
- en: During the entire process, the panel has specified that no credit card is needed,
    and we haven’t had to include payment information. What gets created on our Atlassian
    Cloud site are the free plans for Jira, Confluence, and Bitbucket and the DevOps
    plan for Opsgenie, which is free for five users.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在整个过程中，面板已经明确表示无需信用卡，我们也不需要提供支付信息。我们在 Atlassian Cloud 网站上创建的内容是 Jira、Confluence
    和 Bitbucket 的免费计划，以及 Opsgenie 的 DevOps 计划，后者对五个用户是免费的。
- en: Following this recipe has allowed for the creation of an entire toolchain, starting
    with Jira, Bitbucket, Confluence, and Opsgenie.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这个教程可以创建一个完整的工具链，首先是 Jira、Bitbucket、Confluence 和 Opsgenie。
- en: Creating an Atlassian Cloud site with Jira only
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建仅包含 Jira 的 Atlassian Cloud 网站
- en: A more modular approach than creating an Atlassian Cloud site with multiple
    products can be to create a new Atlassian Cloud site and install Jira only. Other
    installations of other Atlassian products can be done on an as-needed basis.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 与创建一个包含多个产品的Atlassian Cloud站点相比，更模块化的方法是创建一个新的Atlassian Cloud站点并仅安装Jira。其他Atlassian产品的安装可以根据需要进行。
- en: To do this, we will go to a different landing page and follow the prompts, as
    seen in the following recipe steps.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们将进入另一个着陆页面并按照提示操作，如以下步骤所示。
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To install Jira only on a new Atlassian Cloud site, follow these alternate
    instructions:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要在新的Atlassian Cloud站点上仅安装Jira，请按照以下替代指示操作：
- en: 'Atlassian’s product page for Jira is located at [https://www.atlassian.com/software/jira](https://www.atlassian.com/software/jira).
    Select the **Get it free** button, as shown in the following figure:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Atlassian的Jira产品页面位于[https://www.atlassian.com/software/jira](https://www.atlassian.com/software/jira)。选择**免费获取**按钮，如下图所示：
- en: '![Figure 1.9 – Selecting the free plan from the Jira Products page](img/B21937_01_09.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – 从Jira产品页面选择免费计划](img/B21937_01_09.jpg)'
- en: Figure 1.9 – Selecting the free plan from the Jira Products page
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 从Jira产品页面选择免费计划
- en: On the next panel, if you’re logged into an Atlassian account, it will reveal
    that account and prompt you to enter the name of the new Atlassian Cloud site.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个面板上，如果你已登录Atlassian账户，它将显示该账户并提示你输入新的Atlassian Cloud站点名称。
- en: '![Figure 1.10 – Creating a new Atlassian Cloud site](img/B21937_01_10.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – 创建新的Atlassian Cloud站点](img/B21937_01_10.jpg)'
- en: Figure 1.10 – Creating a new Atlassian Cloud site
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 创建新的Atlassian Cloud站点
- en: As seen in the preceding figure, fill in the Atlassian account and the desired
    name for your Cloud site and click **Agree**.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前图所示，填写Atlassian账户和你希望的Cloud站点名称，然后点击**同意**。
- en: Following the instructions will create an Atlassian Cloud site with the name
    you have specified, granting you administrator privileges. The next section looks
    at the scenario where you have to create an Atlassian account if you don’t have
    one.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这些指示，你将创建一个具有你指定名称的Atlassian Cloud站点，并授予管理员权限。接下来的部分将介绍如果你没有Atlassian账户，需要创建一个账户的场景。
- en: There’s more...
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you don’t have an Atlassian account or haven’t logged into your Atlassian
    account, you will be taken to a different page to create a free Atlassian account:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有Atlassian账户或未登录Atlassian账户，你将被带到另一个页面以创建一个免费的Atlassian账户：
- en: You can enter a work email or use common accounts with OpenID service providers,
    such as Google, Microsoft, Apple, or Slack.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以输入工作邮箱或使用常见的OpenID服务提供商账户，例如Google、Microsoft、Apple或Slack。
- en: Once the account is created, Atlassian will prompt you to create an Atlassian
    Cloud site with a free plan of Jira installed, as seen before.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦账户创建完成，Atlassian会提示你创建一个带有Jira免费计划的Atlassian Cloud站点，如前所示。
- en: Creating a Jira project
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Jira项目
- en: So far, you have created an Atlassian Cloud site with only Jira or Jira with
    Confluence, and connections to Opsgenie and Bitbucket.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经创建了一个只包含Jira或Jira与Confluence的Atlassian Cloud站点，并连接了Opsgenie和Bitbucket。
- en: We will start the process of creating our toolchain by setting up the Jira projects
    that will use the toolchain. Let’s look at doing this now.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过设置使用工具链的Jira项目来开始我们的工具链创建过程。现在让我们看看如何进行。
- en: How to do it...
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the following steps, you will create a Jira project that not only captures
    the work done by the development team but allows integrations with artifacts from
    other tools:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，你将创建一个Jira项目，该项目不仅记录开发团队的工作，还可以与其他工具的工件进行集成：
- en: 'Go to the Atlassian Cloud site you created in the previous recipes in this
    chapter. You may be prompted to create the site’s first Jira project by selecting
    a project template, as shown in the following figure:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你在本章前面步骤中创建的Atlassian Cloud站点。你可能会被提示通过选择项目模板来创建站点的第一个Jira项目，如下图所示：
- en: '![Figure 1.11 – Selecting a project template](img/B21937_01_11.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11 – 选择项目模板](img/B21937_01_11.jpg)'
- en: Figure 1.11 – Selecting a project template
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 选择项目模板
- en: Select a project template that matches the Agile methodology your team wants
    to practice (**KANBAN** or **SCRUM**) and press **Next**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个与团队希望实践的敏捷方法论相匹配的项目模板（**KANBAN**或**SCRUM**），然后按**下一步**。
- en: Tip
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: In general, teams that look to develop on a cadence with frequent stakeholder
    feedback opt for Scrum, and teams that look to monitor and track a steady flow
    of work will choose a Kanban project.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，期望与利益相关者进行频繁反馈的团队会选择 Scrum，而希望监控并跟踪稳定工作流的团队则会选择 Kanban 项目。
- en: 'The following page allows you to select other options, such as a name and whether
    the project is company-managed or team-managed. Company-managed Jira projects
    will have project elements such as custom fields, workflows, notifications, and
    permissions set up by Jira administrators. Team-managed projects allow all customizations
    to be done by team administrators, but these changes are only available to the
    project:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下页面允许你选择其他选项，如名称以及项目是由公司管理还是由团队管理。公司管理的 Jira 项目将由 Jira 管理员设置项目元素，如自定义字段、工作流、通知和权限。团队管理的项目允许团队管理员进行所有自定义，但这些更改仅适用于该项目：
- en: '![Figure 1.12 – Creating Jira project details](img/B21937_01_12.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12 – 创建 Jira 项目详情](img/B21937_01_12.jpg)'
- en: Figure 1.12 – Creating Jira project details
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 创建 Jira 项目详情
- en: 'If you created an Open DevOps platform on your Atlassian Cloud site, it would
    automatically create the other artifacts such as Confluence spaces, Bitbucket
    repositories, and Opsgenie teams. The next panel, as depicted in the following
    figure, shows this:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在 Atlassian Cloud 站点上创建了一个 Open DevOps 平台，它会自动创建其他文档，例如 Confluence 空间、Bitbucket
    仓库和 Opsgenie 团队。下一个面板，如下图所示，展示了这一点：
- en: '![Figure 1.13 – The open DevOps artifacts created](img/B21937_01_13.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13 – 创建的开放式 DevOps 文档](img/B21937_01_13.jpg)'
- en: Figure 1.13 – The open DevOps artifacts created
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 创建的开放式 DevOps 文档
- en: 'If you created an Atlassian Cloud site with only Jira, you won’t see the preceding
    screen (don’t worry; we’ll show you how to connect the other tools in other recipes
    in this chapter). Instead, you will see other tools you can connect to your Jira
    project, as shown in the following figure:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你只在 Atlassian Cloud 站点上创建了 Jira，你将不会看到前面的界面（别担心；我们将在本章中的其他配方中展示如何连接其他工具）。相反，你将看到可以连接到
    Jira 项目的其他工具，如下图所示：
- en: '![Figure 1.14 – Connecting other tools](img/B21937_01_14.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.14 – 连接其他工具](img/B21937_01_14.jpg)'
- en: Figure 1.14 – Connecting other tools
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14 – 连接其他工具
- en: You can select the tools to connect and press **Next** to integrate with other
    tools or select **Skip** to do the integrations later.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择要连接的工具并按 **下一步** 以与其他工具集成，或者选择 **跳过** 以稍后进行集成。
- en: By following the preceding steps, you should have a Jira project ready to connect
    to the necessary tools by means of the Issues or work artifacts, stored in Jira.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循前面的步骤，你应该已经准备好了一个 Jira 项目，可以通过 Jira 中存储的问题或工作文档连接到必要的工具。
- en: The following recipes allow you to make connections when the Open DevOps platform
    wasn’t selected to create the Atlassian Cloud site, or when the Jira product and
    projects were already created.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下配方允许你在未选择 Open DevOps 平台来创建 Atlassian Cloud 站点，或者当 Jira 产品和项目已经创建时，进行连接。
- en: Connecting Confluence
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接 Confluence
- en: Confluence is Atlassian’s second-oldest tool. Previously, it has complemented
    Jira as the repository of documentation artifacts for development activities recorded
    in Jira.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Confluence 是 Atlassian 的第二古老工具。此前，它作为 Jira 的文档存储库，补充了在 Jira 中记录的开发活动的文档内容。
- en: Confluence works by organizing individual pages into **spaces**. Spaces can
    be set up for any number of purposes, such as a knowledge base or product documentation.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Confluence 通过将单独的页面组织成 **空间** 来工作。空间可以用于多种用途，如知识库或产品文档。
- en: The first step will be to add Confluence to the Atlassian Cloud site. Once added,
    a new space can be created for the new Jira project.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是将 Confluence 添加到 Atlassian Cloud 站点。一旦添加完成，就可以为新的 Jira 项目创建一个新的空间。
- en: Getting ready
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Different administrators set up different things for Confluence. Let’s take
    a brief look at the various levels of administration for Atlassian Cloud.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的管理员为 Confluence 设置不同的内容。让我们简要了解一下 Atlassian Cloud 的不同管理层级。
- en: Organization administrators are responsible for the overall organization and
    the Atlassian Cloud sites contained within. They set up users to access specific
    Atlassian products and add products to Atlassian Cloud sites.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 组织管理员负责整个组织和其中包含的 Atlassian Cloud 站点的管理。他们为用户设置访问特定 Atlassian 产品的权限，并向 Atlassian
    Cloud 站点添加产品。
- en: Confluence administrators are responsible for creating the spaces on an instance
    of Confluence and managing the permissions of users for those spaces, based on
    roles.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Confluence 管理员负责在 Confluence 实例中创建空间，并根据角色管理这些空间的用户权限。
- en: We will identify what level of administration is needed for each part of this
    recipe.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将识别完成此操作步骤所需的管理级别。
- en: How to do it...
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: We will approach this recipe in two parts – the first part is where we add Confluence
    to the Atlassian Cloud site that also has Jira. The second part of this recipe
    is creating a Confluence space and connecting it to a Jira project.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分两部分来处理这个操作步骤——第一部分是将 Confluence 添加到同时拥有 Jira 的 Atlassian Cloud 站点。第二部分是创建
    Confluence 空间并将其与 Jira 项目连接。
- en: Adding Confluence to the Atlassian Cloud site
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将 Confluence 添加到 Atlassian Cloud 站点
- en: 'Let’s look at adding Confluence to the same Atlassian Cloud site where we added
    Jira only in the *Creating a new Atlassian Cloud site with Jira* *only* recipe:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何将 Confluence 添加到与 Jira 仅在*创建新 Atlassian Cloud 站点并只使用 Jira*配方中添加过的同一个
    Atlassian Cloud 站点：
- en: As the Organization admin, go to [https://start.atlassian.com](https://start.atlassian.com)
    to find the Switcher icon in the top-left corner.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为组织管理员，请访问 [https://start.atlassian.com](https://start.atlassian.com) 查找位于左上角的切换器图标。
- en: '![Figure 1.15 – Switching Atlassian applications on the start page](img/B21937_01_15.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.15 – 在起始页面切换 Atlassian 应用程序](img/B21937_01_15.jpg)'
- en: Figure 1.15 – Switching Atlassian applications on the start page
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15 – 在起始页面切换 Atlassian 应用程序
- en: 'Clicking on the icon, as seen in the preceding figure, reveals the application
    options. Select **More Atlassian products**, as shown in the following figure:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击前面图示中的图标，展示了应用程序选项。选择**更多 Atlassian 产品**，如后续图示所示：
- en: '![Figure 1.16 – Selecting the Atlassian product](img/B21937_01_16.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.16 – 选择 Atlassian 产品](img/B21937_01_16.jpg)'
- en: Figure 1.16 – Selecting the Atlassian product
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.16 – 选择 Atlassian 产品
- en: On the page that opens, look for the option for Confluence and press **Try**
    **it now**.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的页面中，查找 Confluence 选项并点击**立即试用**。
- en: '![Figure 1.17 – Trying Confluence](img/B21937_01_17.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.17 – 尝试 Confluence](img/B21937_01_17.jpg)'
- en: Figure 1.17 – Trying Confluence
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.17 – 尝试 Confluence
- en: 'Type in the site name where you want to add Confluence and select **Continue**,
    as shown in the following figure:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入要添加 Confluence 的站点名称并选择**继续**，如后续图示所示：
- en: '![Figure 1.18 – Add Confluence to a site](img/B21937_01_18.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.18 – 将 Confluence 添加到站点](img/B21937_01_18.jpg)'
- en: Figure 1.18 – Add Confluence to a site
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.18 – 将 Confluence 添加到站点
- en: The results of these instructions should be the Confluence product added to
    your Atlassian Cloud site.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这些操作后，应该会将 Confluence 产品添加到你的 Atlassian Cloud 站点中。
- en: Now, let’s take a look at filling Confluence with data, in the form of spaces
    and pages.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下如何在 Confluence 中填充数据，具体表现为空间和页面。
- en: Creating a Confluence space and connecting it to the Jira project
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Confluence 空间并将其连接到 Jira 项目
- en: 'Let’s start adding data to Confluence by creating our first space:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过创建第一个空间来开始向 Confluence 添加数据：
- en: 'As an organization admin or a Confluence admin, from the **Home** selection
    on the menu bar, click on the **+** symbol in the **SPACES** section, as shown
    in the following figure:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为组织管理员或 Confluence 管理员，从菜单栏的**首页**选择中，点击**SPACES**部分中的**+**符号，如后续图示所示：
- en: '![Figure 1.19 – Selecting + to create a space](img/B21937_01_19.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.19 – 选择 + 创建空间](img/B21937_01_19.jpg)'
- en: Figure 1.19 – Selecting + to create a space
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.19 – 选择 + 创建空间
- en: On the following page, select a space template or leave it as a **Blank** template.
    Click **Next**.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个页面上，选择一个空间模板或保持为**空白**模板。点击**下一步**。
- en: '![Figure 1.20 – Selecting a Confluence template](img/B21937_01_20.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.20 – 选择 Confluence 模板](img/B21937_01_20.jpg)'
- en: Figure 1.20 – Selecting a Confluence template
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.20 – 选择 Confluence 模板
- en: Give the template a name. You can also specify the space’s key. Click on **Create
    space** to complete the process.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给模板命名。你还可以指定空间的键。点击**创建空间**完成操作。
- en: '![Figure 1.21 – Completing the space creation](img/B21937_01_21.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.21 – 完成空间创建](img/B21937_01_21.jpg)'
- en: Figure 1.21 – Completing the space creation
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.21 – 完成空间创建
- en: As a Jira project admin, Jira admin, or organization admin, navigate to the
    desired Jira project. Select **Project pages**. Then, select **Connect to Confluence**
    or use the arrow icons to view the Confluence spaces or pages you want to connect.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为 Jira 项目管理员、Jira 管理员或组织管理员，导航至目标 Jira 项目。选择**项目页面**。然后，选择**连接到 Confluence**，或使用箭头图标查看你想连接的
    Confluence 空间或页面。
- en: '![Figure 1.22 – Connecting the Confluence space](img/B21937_01_22.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.22 – 连接 Confluence 空间](img/B21937_01_22.jpg)'
- en: Figure 1.22 – Connecting the Confluence space
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.22 – 连接 Confluence 空间
- en: 'Select the space created and click **Connect**, as shown in the following figure:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择已创建的空间并点击**连接**，如下图所示：
- en: '![Figure 1.23 – Completing the connection to a space](img/B21937_01_23.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.23 – 完成与空间的连接](img/B21937_01_23.jpg)'
- en: Figure 1.23 – Completing the connection to a space
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.23 – 完成与空间的连接
- en: You have successfully connected Confluence to Jira by defining a space and linking
    it to the project. Further applications of the benefits that can arise from this
    integration will be seen in the recipes in [*Chapter 3*](B21937_03.xhtml#_idTextAnchor056).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经通过定义空间并将其链接到项目成功地将 Confluence 与 Jira 连接起来。更多关于这种集成所带来好处的应用，将在[*第3章*](B21937_03.xhtml#_idTextAnchor056)的食谱中展示。
- en: Connecting Bitbucket
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接 Bitbucket
- en: Currently, Bitbucket maintains a separate location from the other tools at the
    Atlassian Cloud site, at [https://bitbucket.org](https://bitbucket.org). On Bitbucket,
    there are by default administrators and users in a developers group.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，Bitbucket 在 Atlassian Cloud 网站上与其他工具保持独立的位置，网址为[https://bitbucket.org](https://bitbucket.org)。在
    Bitbucket 中，默认情况下，管理员和用户属于开发者组。
- en: On the Bitbucket side, a member of the Administrators group must create the
    repository or repo. This repo may be grouped within other repositories in a Bitbucket
    project. The top level in Bitbucket is a workspace. This may be analogous to the
    top level of an organization.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Bitbucket 方面，管理员组的成员必须创建仓库或 repo。这个仓库可能会在 Bitbucket 项目中与其他仓库分组。Bitbucket 的最上层是工作区，这可能类似于组织的顶层。
- en: On the Jira side, we need a Jira Project admin to connect the repository to
    the Jira project.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jira 方面，我们需要一个 Jira 项目管理员来将仓库连接到 Jira 项目。
- en: Let’s take a look at the steps involved.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下涉及的步骤。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let’s look at the steps involved in connecting Bitbucket.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下连接 Bitbucket 所涉及的步骤。
- en: Creating a repository in Bitbucket
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Bitbucket 中创建仓库
- en: 'Implement the following steps to create a repository in Bitbucket:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以在 Bitbucket 中创建仓库：
- en: As a Bitbucket administrator, select the **Repositories** menu bar and click
    the **Create** **repository** button.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为 Bitbucket 管理员，选择**仓库**菜单栏并点击**创建** **仓库**按钮。
- en: '![Figure 1.24 – Creating a Bitbucket repository](img/B21937_01_24.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.24 – 创建 Bitbucket 仓库](img/B21937_01_24.jpg)'
- en: Figure 1.24 – Creating a Bitbucket repository
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.24 – 创建 Bitbucket 仓库
- en: In the page that follows, fill in the repository name and select the project
    for the repo (these are the only mandatory items) and other desired details. Click
    the **Create repository** button when finished.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的页面中，填写仓库名称并选择该仓库所属的项目（这些是唯一的必填项），以及其他所需的详细信息。完成后点击**创建仓库**按钮。
- en: '![Figure 1.25 – Completing the repository creation](img/B21937_01_25.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.25 – 完成仓库创建](img/B21937_01_25.jpg)'
- en: Figure 1.25 – Completing the repository creation
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25 – 完成仓库创建
- en: Now that we have a Bitbucket repository, let’s connect it to a Jira project.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有一个 Bitbucket 仓库，让我们将其连接到一个 Jira 项目。
- en: Connecting a repository to a Jira project
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将仓库连接到 Jira 项目
- en: 'Follow these steps to integrate Bitbucket data from the repository into a Jira
    project:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤，将 Bitbucket 仓库中的数据集成到 Jira 项目中：
- en: As a Jira admin, from the Jira project, select **Project settings** from the
    options on the left.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为 Jira 管理员，在 Jira 项目中，从左侧选项中选择**项目设置**。
- en: '![Figure 1.26 – Selecting Project settings](img/B21937_01_26.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.26 – 选择项目设置](img/B21937_01_26.jpg)'
- en: Figure 1.26 – Selecting Project settings
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.26 – 选择项目设置
- en: 'Select **Development tools**, as shown in the following figure:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**开发工具**，如下图所示：
- en: '![Figure 1.27 – Selecting Development tools](img/B21937_01_27.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.27 – 选择开发工具](img/B21937_01_27.jpg)'
- en: Figure 1.27 – Selecting Development tools
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.27 – 选择开发工具
- en: By default, Bitbucket is shown to be connected to Jira on the **Development
    tools** page. We can make adjustments to the connection by selecting the **Connect**
    pulldown and choosing **Bitbucket Cloud** from the options.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，Bitbucket 在**开发工具**页面上显示为已连接至 Jira。我们可以通过选择**连接**下拉菜单并从选项中选择**Bitbucket
    Cloud**来调整连接设置。
- en: '![Figure 1.28 – Connect Bitbucket Cloud](img/B21937_01_28.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.28 – 连接 Bitbucket Cloud](img/B21937_01_28.jpg)'
- en: Figure 1.28 – Connect Bitbucket Cloud
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.28 – 连接 Bitbucket Cloud
- en: In the **Jira requests access** page, authorize Jira to access the Bitbucket
    workspace where you created the repo by selecting the workspace and clicking **Grant
    Access**.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Jira请求访问**页面，授权Jira访问你创建仓库的Bitbucket工作区，通过选择工作区并点击**授予访问权限**。
- en: '![Figure 1.29 – Grant Bitbucket workspace access to Jira](img/B21937_01_29.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图1.29 – 授予Bitbucket工作区访问Jira的权限](img/B21937_01_29.jpg)'
- en: Figure 1.29 – Grant Bitbucket workspace access to Jira
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.29 – 授予Bitbucket工作区访问Jira的权限
- en: On the **DVCS accounts** page, select the repository or repositories to allow
    **Smart Commits**, and then click the **Link Bitbucket Cloud** **workspace** button.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**DVCS账户**页面，选择允许**智能提交**的仓库，然后点击**链接Bitbucket Cloud** **工作区**按钮。
- en: '![Figure 1.30 – Add Repository and Link Bitbucket Cloud workspace](img/B21937_01_30.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![图1.30 – 添加仓库并链接Bitbucket Cloud工作区](img/B21937_01_30.jpg)'
- en: Figure 1.30 – Add Repository and Link Bitbucket Cloud workspace
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.30 – 添加仓库并链接Bitbucket Cloud工作区
- en: By connecting a Bitbucket repository to a Jira project, as you did by following
    the preceding instructions, you connect the reason for doing the work (the why)
    with the implementation of the work (the how).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将Bitbucket仓库连接到Jira项目，就像按照之前的说明所做的那样，你将工作的原因（为什么做）与工作的实施（怎么做）相连接。
